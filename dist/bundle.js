(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var map = require('../core/map/map');
const ut = require('../core/utils');
const get_polygon_colors = require('./colors/polygon_colors');
const display_attic_dialog = require('../core/menu/attic_dialog');
const chroma = require('chroma-js')
const { DateTime } = require('luxon');
const hash_string = require('./hash_string');

// https://www.geeksforgeeks.org/how-to-change-the-height-of-br-tag
const break_small = `<span style="display: block; margin-bottom: -.4em;"></span>`;
const break_large = `<span style="display: block; margin-bottom: 0.75em;"></span>`;

function click_listener(e) {
    var popupItem = '';
    var alertContentObj = {};
    var alreadyAddedAlerts = [];
    for (key in e.features) {
        var properties = e.features[key].properties;
        var parameters = JSON.parse(properties.parameters);

        delete properties.type;
        const hash = hash_string(JSON.stringify(properties));
        if (!alreadyAddedAlerts.includes(hash)) {
            alreadyAddedAlerts.push(hash);

            var id = `${hash}alert`;
            var initColor = get_polygon_colors(properties.event).color;
            var backgroundColor = initColor;
            var borderColor = chroma(initColor).darken(1.5);
            var textColor = chroma(initColor).luminance() > 0.4 ? 'black' : 'white';
            //<i class="fa-solid fa-circle-info" style="font-size: 15px"></i>
            popupItem += `<div style="color: white; text-align: center;"><b class="extraAlertTextTrigger" id="${id}" style="
            text-align: center;
            width: auto;
            height: auto;
            padding: 1px 5px;
            background-color: ${backgroundColor};
            border: 2px solid ${borderColor};
            border-radius: 25px;
            cursor: pointer;
            color: ${textColor};
            "><i class="fa-solid fa-circle-info"></i> ${properties.event}</b>`;

            var lineSpace = '';
            var preStart = '<div style="margin-bottom: 0 !important">';
            var lineBreak = `<br>${preStart}`;
            var amountOfParams = 0;
            function addParameter(parameterName, textValueID) {
                if (parameters.hasOwnProperty(parameterName)) {
                    if (amountOfParams == 0) { popupItem += lineBreak; }
                    if (lineSpace == '' && amountOfParams != 0) { lineSpace = '&nbsp;&nbsp;&nbsp;'; }
                    popupItem += `${lineSpace}<b>${textValueID}</b><b class="alertsMonospaceText" style="color: rgb(179, 143, 52)"> ${parameters[parameterName]}</b>`;
                    amountOfParams++;
                }
            }
            addParameter('maxHailSize', 'Hail:');
            addParameter('maxWindGust', 'Wind:');
            addParameter('tornadoDetection', 'Tornado:');

            if (amountOfParams == 0) { popupItem += preStart; }

            var alertExpiresTime;
            var thingToPrepend;
            if (properties.hasOwnProperty('ends')) {
                alertExpiresTime = properties.ends;
                thingToPrepend = 'Ends: ';
            } else {
                alertExpiresTime = properties.expires;
                thingToPrepend = 'Expires: ';
            }
            var expiresTime = DateTime.fromISO(alertExpiresTime).toUTC().toJSDate();
            var currentTime = DateTime.now().toUTC().toJSDate();
            const dateDiff = ut.getDateDiff(currentTime, expiresTime);
            var formattedDateDiff;
            var thingToAppend = '';
            var textColor = 'white';
            var isNegative = dateDiff.negative;
            if (dateDiff.s) { formattedDateDiff = `${dateDiff.s}s`; }
            if (dateDiff.m) { formattedDateDiff = `${dateDiff.m}m ${dateDiff.s}s`; }
            if (dateDiff.h) { formattedDateDiff = `${dateDiff.h}h ${dateDiff.m}m`; }
            if (dateDiff.d) { formattedDateDiff = `${dateDiff.d}d ${dateDiff.h}h`; }
            if (isNegative) { thingToAppend = ' ago'; textColor = 'rgba(229, 78, 78, 1)'; }
            if (amountOfParams != 0) { popupItem += break_small }
            popupItem += `<b style="color: ${textColor}"><b>${thingToPrepend}</b><b class="alertsMonospaceText"> ${formattedDateDiff}${thingToAppend}</b></b></div></div>`;

            if (parseInt(key) + 1 < e.features.length) {
                // popupItem += break_large;
            } else {
                popupItem += break_small;
            }

            function checkPropertyExists(property) {
                var isUndefined = typeof property == 'undefined';
                if (isUndefined) {
                    return 'None';
                } else {
                    return property;
                }
            }

            var main_headline = checkPropertyExists(parameters.NWSheadline);
            var secondary_headline = checkPropertyExists(properties.headline);
            if (main_headline == 'None') {
                var temp = secondary_headline;
                secondary_headline = main_headline;
                main_headline = temp;
            }

            var extentedAlertDescription = 
`<div style="white-space: pre-wrap;"><b><span style="display: block; margin-bottom: 1em;"></span>${checkPropertyExists(properties.event)}
<hr>${checkPropertyExists(properties.senderName)}</b>
<hr>${secondary_headline}
<hr>${main_headline}
<hr><b class="alertTextDescriber">Sent:</b><br>${ut.printFancyTime(new Date(properties.sent))}
<br><b class="alertTextDescriber">WMO Identifier:</b><br>${checkPropertyExists(parameters.WMOidentifier)}
<b class="alertTextDescriber">VTEC:</b><br>${checkPropertyExists(parameters.VTEC)}
<br><b class="alertTextDescriber">Description:</b><br>${checkPropertyExists(properties.description)}
<br><b class="alertTextDescriber">Instructions:</b><br>${checkPropertyExists(properties.instruction)}
<br><b class="alertTextDescriber">Areas affected:</b><br><i>${checkPropertyExists(properties.areaDesc)}</i></div>`
            alertContentObj[id] = {
                'title': `${properties.event}`,
                'body': extentedAlertDescription,
                'color': initColor,
                'textColor': chroma(initColor).luminance() > 0.4 ? 'black' : 'white'
            };

            //popupItem += '<br>';
        }
    }
    const popup = new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000' })
        .setLngLat(e.lngLat)
        .setHTML(popupItem)
        .addTo(map);

    $('.extraAlertTextTrigger').on('click', function(e) {
        var id = $(this).attr('id');
        // ut.spawnModal({
        //     'title': alertContentObj[id].title,
        //     'headerColor': 'alert-success',
        //     'css': 'height: 50vh; overflow: scroll',
        //     'body': alertContentObj[id].body
        // })
        // console.log(alertContentObj[id])
        display_attic_dialog({
            'title': alertContentObj[id].title,
            'body': alertContentObj[id].body,
            'color': alertContentObj[id].color,
            'textColor': alertContentObj[id].textColor,
        })
    })
}

module.exports = click_listener;
},{"../core/map/map":13,"../core/menu/attic_dialog":18,"../core/utils":30,"./colors/polygon_colors":3,"./hash_string":7,"chroma-js":110,"luxon":111}],2:[function(require,module,exports){
const noaa_colors = {
    "Tsunami Warning": {
        "priority": "1",
        "colorName": "Tomato",
        "rgb": "rgb(253, 99, 71)",
        "hex": "#FD6347"
    },
    "Tornado Warning": {
        "priority": "2",
        "colorName": "Red",
        "rgb": "rgb(233, 51, 35)",
        "hex": "#FF0000",
        "originalColor": "rgb(255, 0, 0)"
    },
    "Extreme Wind Warning": {
        "priority": "3",
        "colorName": "Darkorange",
        "rgb": "rgb(255, 140, 0)",
        "hex": "#FF8C00"
    },
    "Severe Thunderstorm Warning": {
        "priority": "4",
        "colorName": "Orange",
        "rgb": "rgb(244, 185, 65)",
        "hex": "#FFA500",
        "originalColor": "rgb(255, 165, 0)"
    },
    "Flash Flood Warning": {
        "priority": "5",
        "colorName": "Darkred",
        "rgb": "rgb(147, 241, 75)",
        "hex": "#8B0000",
        "originalColor": "rgb(139, 0, 0)"
    },
    "Flash Flood Statement": {
        "priority": "6",
        "colorName": "Darkred",
        "rgb": "rgb(139, 0, 0)",
        "hex": "#8B0000"
    },
    "Severe Weather Statement": {
        "priority": "7",
        "colorName": "Aqua",
        "rgb": "rgb(0, 255, 255)",
        "hex": "#00FFFF"
    },
    "Shelter In Place Warning": {
        "priority": "8",
        "colorName": "Salmon",
        "rgb": "rgb(250, 128, 114)",
        "hex": "#FA8072"
    },
    "Evacuation Immediate": {
        "priority": "9",
        "colorName": "Chartreuse",
        "rgb": "rgb(127, 255, 0)",
        "hex": "#7FFF00"
    },
    "Civil Danger Warning": {
        "priority": "10",
        "colorName": "Lightpink",
        "rgb": "rgb(255, 182, 193)",
        "hex": "#FFB6C1"
    },
    "Nuclear Power Plant Warning": {
        "priority": "11",
        "colorName": "Indigo",
        "rgb": "rgb(75, 0, 130)",
        "hex": "#4B0082"
    },
    "Radiological Hazard Warning": {
        "priority": "12",
        "colorName": "Indigo",
        "rgb": "rgb(75, 0, 130)",
        "hex": "#4B0082"
    },
    "Hazardous Materials Warning": {
        "priority": "13",
        "colorName": "Indigo",
        "rgb": "rgb(75, 0, 130)",
        "hex": "#4B0082"
    },
    "Fire Warning": {
        "priority": "14",
        "colorName": "Sienna",
        "rgb": "rgb(160, 82, 45)",
        "hex": "#A0522D"
    },
    "Civil Emergency Message": {
        "priority": "15",
        "colorName": "Lightpink",
        "rgb": "rgb(255, 182, 193)",
        "hex": "#FFB6C1"
    },
    "Law Enforcement Warning": {
        "priority": "16",
        "colorName": "Silver",
        "rgb": "rgb(192, 192, 192)",
        "hex": "#C0C0C0"
    },
    "Storm Surge Warning": {
        "priority": "17",
        "colorName": "Darkpurple",
        "rgb": "rgb(76, 87, 246)",
        "hex": "#B524F7",
        "originalColor": "rgb(181, 36, 247)"
    },
    "Hurricane Force Wind Warning": {
        "priority": "18",
        "colorName": "Westernred",
        "rgb": "rgb(205, 92, 92)",
        "hex": "#CD5C5C"
    },
    "Hurricane Warning": {
        "priority": "19",
        "colorName": "Crimson",
        "rgb": "rgb(199, 63, 155)",
        "hex": "#DC143C",
        "originalColor": "rgb(220, 20, 60)"
    },
    "Typhoon Warning": {
        "priority": "20",
        "colorName": "Crimson",
        "rgb": "rgb(220, 20, 60)",
        "hex": "#DC143C"
    },
    "Special Marine Warning": {
        "priority": "21",
        "colorName": "Orange",
        "rgb": "rgb(197, 155, 249)",
        "hex": "#FFA500",
        "originalColor": "rgb(255, 165, 0)"
    },
    "Blizzard Warning": {
        "priority": "22",
        "colorName": "Orangered",
        "rgb": "rgb(235, 78, 65)",
        "hex": "#FF4500",
        "originalColor": "rgb(255, 69, 0)"
    },
    "Snow Squall Warning": {
        "priority": "23",
        "colorName": "Mediumvioletred",
        "rgb": "rgb(3, 0, 163)",
        "hex": "#C71585",
        "originalColor": "rgb(199, 21, 133)"
    },
    "Ice Storm Warning": {
        "priority": "24",
        "colorName": "Darkmagenta",
        "rgb": "rgb(173, 74, 248)",
        "hex": "#8B008B",
        "originalColor": "rgb(139, 0, 139)"
    },
    "Winter Storm Warning": {
        "priority": "25",
        "colorName": "Hotpink",
        "rgb": "rgb(240, 141, 233)",
        "hex": "#FF69B4",
        "originalColor": "rgb(255, 105, 180)"
    },
    "High Wind Warning": {
        "priority": "26",
        "colorName": "Goldenrod",
        "rgb": "rgb(218, 165, 32)",
        "hex": "#DAA520"
    },
    "Tropical Storm Warning": {
        "priority": "27",
        "colorName": "Firebrick",
        "rgb": "rgb(251, 231, 88)",
        "hex": "#B22222",
        "originalColor": "rgb(178, 34, 34)"
    },
    "Storm Warning": {
        "priority": "28",
        "colorName": "Darkviolet",
        "rgb": "rgb(148, 0, 211)",
        "hex": "#9400D3"
    },
    "Tsunami Advisory": {
        "priority": "29",
        "colorName": "Chocolate",
        "rgb": "rgb(210, 105, 30)",
        "hex": "#D2691E"
    },
    "Tsunami Watch": {
        "priority": "30",
        "colorName": "Fushsia",
        "rgb": "rgb(255, 0, 255)",
        "hex": "#FF00FF"
    },
    "Avalanche Warning": {
        "priority": "31",
        "colorName": "Dodgerblue",
        "rgb": "rgb(30, 144, 255)",
        "hex": "#1E90FF"
    },
    "Earthquake Warning": {
        "priority": "32",
        "colorName": "Saddlebrown",
        "rgb": "rgb(139, 69, 19)",
        "hex": "#8B4513"
    },
    "Volcano Warning": {
        "priority": "33",
        "colorName": "darkslategray",
        "rgb": "rgb(47, 79, 79)",
        "hex": "#2F4F4F"
    },
    "Ashfall Warning": {
        "priority": "34",
        "colorName": "Darkgray",
        "rgb": "rgb(169, 169, 169)",
        "hex": "#A9A9A9"
    },
    "Coastal Flood Warning": {
        "priority": "35",
        "colorName": "Forestgreen",
        "rgb": "rgb(34, 139, 34)",
        "hex": "#228B22"
    },
    "Lakeshore Flood Warning": {
        "priority": "36",
        "colorName": "Forestgreen",
        "rgb": "rgb(34, 139, 34)",
        "hex": "#228B22"
    },
    "Flood Warning": {
        "priority": "37",
        "colorName": "Lime",
        "rgb": "rgb(147, 241, 75)",
        "hex": "#00FF00",
        "originalColor": "rgb(0, 255, 0)"
    },
    "High Surf Warning": {
        "priority": "38",
        "colorName": "Forestgreen",
        "rgb": "rgb(34, 139, 34)",
        "hex": "#228B22"
    },
    "Dust Storm Warning": {
        "priority": "39",
        "colorName": "Bisque",
        "rgb": "rgb(255, 228, 196)",
        "hex": "#FFE4C4"
    },
    "Blowing Dust Warning": {
        "priority": "40",
        "colorName": "Bisque",
        "rgb": "rgb(255, 228, 196)",
        "hex": "#FFE4C4"
    },
    "Lake Effect Snow Warning": {
        "priority": "41",
        "colorName": "Darkcyan",
        "rgb": "rgb(0, 139, 139)",
        "hex": "#008B8B"
    },
    "Excessive Heat Warning": {
        "priority": "42",
        "colorName": "Mediumvioletred",
        "rgb": "rgb(199, 21, 133)",
        "hex": "#C71585"
    },
    "Tornado Watch": {
        "priority": "43",
        "colorName": "Yellow",
        "rgb": "rgb(245, 254, 83)",
        "hex": "#FFFF00",
        "originalColor": "rgb(255, 255, 0)"
    },
    "Severe Thunderstorm Watch": {
        "priority": "44",
        "colorName": "Palevioletred",
        "rgb": "rgb(238, 135, 134)",
        "hex": "#DB7093",
        "originalColor": "rgb(219, 112, 147)"
    },
    "Flash Flood Watch": {
        "priority": "45",
        "colorName": "Seagreen",
        "rgb": "rgb(58, 111, 29)",
        "hex": "#2E8B57",
        "originalColor": "rgb(46, 139, 87)"
    },
    "Gale Warning": {
        "priority": "46",
        "colorName": "Plum",
        "rgb": "rgb(50, 111, 255)",
        "hex": "#DDA0DD",
        "originalColor": "rgb(221, 160, 221)"
    },
    "Flood Statement": {
        "priority": "47",
        "colorName": "Lime",
        "rgb": "rgb(0, 255, 0)",
        "hex": "#00FF00"
    },
    "Wind Chill Warning": {
        "priority": "48",
        "colorName": "Lightsteelblue",
        "rgb": "rgb(176, 196, 222)",
        "hex": "#B0C4DE"
    },
    "Extreme Cold Warning": {
        "priority": "49",
        "colorName": "Blue",
        "rgb": "rgb(0, 0, 255)",
        "hex": "#0000FF"
    },
    "Hard Freeze Warning": {
        "priority": "50",
        "colorName": "Darkviolet",
        "rgb": "rgb(148, 0, 211)",
        "hex": "#9400D3"
    },
    "Freeze Warning": {
        "priority": "51",
        "colorName": "Darkslateblue",
        "rgb": "rgb(72, 61, 139)",
        "hex": "#483D8B"
    },
    "Red Flag Warning": {
        "priority": "52",
        "colorName": "Deeppink",
        "rgb": "rgb(255, 20, 147)",
        "hex": "#FF1493"
    },
    "Storm Surge Watch": {
        "priority": "53",
        "colorName": "Lightpurple",
        "rgb": "rgb(165, 202, 182)",
        "hex": "#DB7FF7",
        "originalColor": "rgb(219, 127, 247)"
    },
    "Hurricane Watch": {
        "priority": "54",
        "colorName": "Magenta",
        "rgb": "rgb(234, 51, 247)",
        "hex": "#FF00FF",
        "originalColor": "rgb(255, 0, 255)"
    },
    "Hurricane Force Wind Watch": {
        "priority": "55",
        "colorName": "Darkorchid",
        "rgb": "rgb(153, 50, 204)",
        "hex": "#9932CC"
    },
    "Typhoon Watch": {
        "priority": "56",
        "colorName": "Magenta",
        "rgb": "rgb(255, 0, 255)",
        "hex": "#FF00FF"
    },
    "Tropical Storm Watch": {
        "priority": "57",
        "colorName": "Lightcoral",
        "rgb": "rgb(239, 127, 131)",
        "hex": "#F08080",
        "originalColor": "rgb(240, 128, 128)"
    },
    "Storm Watch": {
        "priority": "58",
        "colorName": "Moccasin",
        "rgb": "rgb(255, 228, 181)",
        "hex": "#FFE4B5"
    },
    "Hurricane Local Statement": {
        "priority": "59",
        "colorName": "Moccasin",
        "rgb": "rgb(255, 228, 181)",
        "hex": "#FFE4B5"
    },
    "Typhoon Local Statement": {
        "priority": "60",
        "colorName": "Moccasin",
        "rgb": "rgb(255, 228, 181)",
        "hex": "#FFE4B5"
    },
    "Tropical Storm Local Statement": {
        "priority": "61",
        "colorName": "Moccasin",
        "rgb": "rgb(255, 228, 181)",
        "hex": "#FFE4B5"
    },
    "Tropical Depression Local Statement": {
        "priority": "62",
        "colorName": "Moccasin",
        "rgb": "rgb(255, 228, 181)",
        "hex": "#FFE4B5"
    },
    "Avalanche Advisory": {
        "priority": "63",
        "colorName": "Peru",
        "rgb": "rgb(205, 133, 63)",
        "hex": "#CD853F"
    },
    "Winter Weather Advisory": {
        "priority": "64",
        "colorName": "Mediumslateblue",
        "rgb": "rgb(167, 129, 249)",
        "hex": "#7B68EE",
        "originalColor": "rgb(123, 104, 238)"
    },
    "Wind Chill Advisory": {
        "priority": "65",
        "colorName": "Paleturquoise",
        "rgb": "rgb(175, 238, 238)",
        "hex": "#AFEEEE"
    },
    "Heat Advisory": {
        "priority": "66",
        "colorName": "Coral",
        "rgb": "rgb(255, 127, 80)",
        "hex": "#FF7F50"
    },
    "Urban and Small Stream Flood Advisory": {
        "priority": "67",
        "colorName": "Springgreen",
        "rgb": "rgb(0, 255, 127)",
        "hex": "#00FF7F"
    },
    "Small Stream Flood Advisory": {
        "priority": "68",
        "colorName": "Springgreen",
        "rgb": "rgb(0, 255, 127)",
        "hex": "#00FF7F"
    },
    "Arroyo and Small Stream Flood Advisory": {
        "priority": "69",
        "colorName": "Springgreen",
        "rgb": "rgb(0, 255, 127)",
        "hex": "#00FF7F"
    },
    "Flood Advisory": {
        "priority": "70",
        "colorName": "Springgreen",
        "rgb": "rgb(0, 255, 127)",
        "hex": "#00FF7F"
    },
    "Hydrologic Advisory": {
        "priority": "71",
        "colorName": "Springgreen",
        "rgb": "rgb(0, 255, 127)",
        "hex": "#00FF7F"
    },
    "Lakeshore Flood Advisory": {
        "priority": "72",
        "colorName": "Lawngreen",
        "rgb": "rgb(124, 252, 0)",
        "hex": "#7CFC00"
    },
    "Coastal Flood Advisory": {
        "priority": "73",
        "colorName": "Lawngreen",
        "rgb": "rgb(124, 252, 0)",
        "hex": "#7CFC00"
    },
    "High Surf Advisory": {
        "priority": "74",
        "colorName": "Mediumorchid",
        "rgb": "rgb(186, 85, 211)",
        "hex": "#BA55D3"
    },
    "Heavy Freezing Spray Warning": {
        "priority": "75",
        "colorName": "Deepskyblue",
        "rgb": "rgb(0, 191, 255)",
        "hex": "#00BFFF"
    },
    "Dense Fog Advisory": {
        "priority": "76",
        "colorName": "Slategray",
        "rgb": "rgb(112, 128, 144)",
        "hex": "#708090"
    },
    "Dense Smoke Advisory": {
        "priority": "77",
        "colorName": "Khaki",
        "rgb": "rgb(240, 230, 140)",
        "hex": "#F0E68C"
    },
    "Small Craft Advisory For Hazardous Seas": {
        "priority": "78",
        "colorName": "Thistle",
        "rgb": "rgb(216, 191, 216)",
        "hex": "#D8BFD8"
    },
    "Small Craft Advisory for Rough Bar": {
        "priority": "79",
        "colorName": "Thistle",
        "rgb": "rgb(216, 191, 216)",
        "hex": "#D8BFD8"
    },
    "Small Craft Advisory for Winds": {
        "priority": "80",
        "colorName": "Thistle",
        "rgb": "rgb(216, 191, 216)",
        "hex": "#D8BFD8"
    },
    "Small Craft Advisory": {
        "priority": "81",
        "colorName": "Thistle",
        "rgb": "rgb(109, 186, 150)",
        "hex": "#D8BFD8",
        "originalColor": "rgb(216, 191, 216)"
    },
    "Brisk Wind Advisory": {
        "priority": "82",
        "colorName": "Thistle",
        "rgb": "rgb(216, 191, 216)",
        "hex": "#D8BFD8"
    },
    "Hazardous Seas Warning": {
        "priority": "83",
        "colorName": "Thistle",
        "rgb": "rgb(216, 191, 216)",
        "hex": "#D8BFD8"
    },
    "Dust Advisory": {
        "priority": "84",
        "colorName": "Darkkhaki",
        "rgb": "rgb(189, 183, 107)",
        "hex": "#BDB76B"
    },
    "Blowing Dust Advisory": {
        "priority": "85",
        "colorName": "Darkkhaki",
        "rgb": "rgb(189, 183, 107)",
        "hex": "#BDB76B"
    },
    "Lake Wind Advisory": {
        "priority": "86",
        "colorName": "Tan",
        "rgb": "rgb(210, 180, 140)",
        "hex": "#D2B48C"
    },
    "Wind Advisory": {
        "priority": "87",
        "colorName": "Tan",
        "rgb": "rgb(210, 180, 140)",
        "hex": "#D2B48C"
    },
    "Frost Advisory": {
        "priority": "88",
        "colorName": "Cornflowerblue",
        "rgb": "rgb(100, 149, 237)",
        "hex": "#6495ED"
    },
    "Ashfall Advisory": {
        "priority": "89",
        "colorName": "Dimgray",
        "rgb": "rgb(105, 105, 105)",
        "hex": "#696969"
    },
    "Freezing Fog Advisory": {
        "priority": "90",
        "colorName": "Teal",
        "rgb": "rgb(0, 128, 128)",
        "hex": "#008080"
    },
    "Freezing Spray Advisory": {
        "priority": "91",
        "colorName": "Deepskyblue",
        "rgb": "rgb(0, 191, 255)",
        "hex": "#00BFFF"
    },
    "Low Water Advisory": {
        "priority": "92",
        "colorName": "Brown",
        "rgb": "rgb(165, 42, 42)",
        "hex": "#A52A2A"
    },
    "Local Area Emergency": {
        "priority": "93",
        "colorName": "Silver",
        "rgb": "rgb(192, 192, 192)",
        "hex": "#C0C0C0"
    },
    "Avalanche Watch": {
        "priority": "94",
        "colorName": "Sandybrown",
        "rgb": "rgb(244, 164, 96)",
        "hex": "#F4A460"
    },
    "Blizzard Watch": {
        "priority": "95",
        "colorName": "Greenyellow",
        "rgb": "rgb(234, 254, 89)",
        "hex": "#ADFF2F",
        "originalColor": "rgb(173, 255, 47)"
    },
    "Rip Current Statement": {
        "priority": "96",
        "colorName": "Turquoise",
        "rgb": "rgb(64, 224, 208)",
        "hex": "#40E0D0"
    },
    "Beach Hazards Statement": {
        "priority": "97",
        "colorName": "Turquoise",
        "rgb": "rgb(64, 224, 208)",
        "hex": "#40E0D0"
    },
    "Gale Watch": {
        "priority": "98",
        "colorName": "Pink",
        "rgb": "rgb(102, 147, 255)",
        "hex": "#FFC0CB",
        "originalColor": "rgb(255, 192, 203)"
    },
    "Winter Storm Watch": {
        "priority": "99",
        "colorName": "Steelblue",
        "rgb": "rgb(57, 129, 247)",
        "hex": "#4682B4",
        "originalColor": "rgb(70, 130, 180)"
    },
    "Hazardous Seas Watch": {
        "priority": "100",
        "colorName": "Darkslateblue",
        "rgb": "rgb(72, 61, 139)",
        "hex": "#483D8B"
    },
    "Heavy Freezing Spray Watch": {
        "priority": "101",
        "colorName": "Rosybrown",
        "rgb": "rgb(188, 143, 143)",
        "hex": "#BC8F8F"
    },
    "Coastal Flood Watch": {
        "priority": "102",
        "colorName": "Mediumaquamarine",
        "rgb": "rgb(102, 205, 170)",
        "hex": "#66CDAA"
    },
    "Lakeshore Flood Watch": {
        "priority": "103",
        "colorName": "Mediumaquamarine",
        "rgb": "rgb(102, 205, 170)",
        "hex": "#66CDAA"
    },
    "Flood Watch": {
        "priority": "104",
        "colorName": "Seagreen",
        "rgb": "rgb(58, 111, 29)",
        "hex": "#2E8B57",
        "originalColor": "rgb(46, 139, 87)"
    },
    "High Wind Watch": {
        "priority": "105",
        "colorName": "Darkgoldenrod",
        "rgb": "rgb(184, 134, 11)",
        "hex": "#B8860B"
    },
    "Excessive Heat Watch": {
        "priority": "106",
        "colorName": "Maroon",
        "rgb": "rgb(128, 0, 0)",
        "hex": "#800000"
    },
    "Extreme Cold Watch": {
        "priority": "107",
        "colorName": "Blue",
        "rgb": "rgb(0, 0, 255)",
        "hex": "#0000FF"
    },
    "Wind Chill Watch": {
        "priority": "108",
        "colorName": "Cadetblue",
        "rgb": "rgb(95, 158, 160)",
        "hex": "#5F9EA0"
    },
    "Lake Effect Snow Watch": {
        "priority": "109",
        "colorName": "Lightskyblue",
        "rgb": "rgb(135, 206, 250)",
        "hex": "#87CEFA"
    },
    "Hard Freeze Watch": {
        "priority": "110",
        "colorName": "Royalblue",
        "rgb": "rgb(65, 105, 225)",
        "hex": "#4169E1"
    },
    "Freeze Watch": {
        "priority": "111",
        "colorName": "Cyan",
        "rgb": "rgb(0, 255, 255)",
        "hex": "#00FFFF"
    },
    "Fire Weather Watch": {
        "priority": "112",
        "colorName": "Navajowhite",
        "rgb": "rgb(255, 222, 173)",
        "hex": "#FFDEAD"
    },
    "Extreme Fire Danger": {
        "priority": "113",
        "colorName": "Darksalmon",
        "rgb": "rgb(233, 150, 122)",
        "hex": "#E9967A"
    },
    "911 Telephone Outage": {
        "priority": "114",
        "colorName": "Silver",
        "rgb": "rgb(192, 192, 192)",
        "hex": "#C0C0C0"
    },
    "Coastal Flood Statement": {
        "priority": "115",
        "colorName": "Olivedrab",
        "rgb": "rgb(107, 142, 35)",
        "hex": "#6B8E23"
    },
    "Lakeshore Flood Statement": {
        "priority": "116",
        "colorName": "Olivedrab",
        "rgb": "rgb(107, 142, 35)",
        "hex": "#6B8E23"
    },
    "Special Weather Statement": {
        "priority": "117",
        "colorName": "Moccasin",
        "rgb": "rgb(151, 204, 230)",
        "hex": "#FFE4B5",
        "originalColor": "rgb(255, 228, 181)"
    },
    "Marine Weather Statement": {
        "priority": "118",
        "colorName": "Peachpuff",
        "rgb": "rgb(255, 239, 213)",
        "hex": "#FFDAB9"
    },
    "Air Quality Alert": {
        "priority": "119",
        "colorName": "Gray",
        "rgb": "rgb(128, 128, 128)",
        "hex": "#808080"
    },
    "Air Stagnation Advisory": {
        "priority": "120",
        "colorName": "Gray",
        "rgb": "rgb(128, 128, 128)",
        "hex": "#808080"
    },
    "Hazardous Weather Outlook": {
        "priority": "121",
        "colorName": "Palegoldenrod",
        "rgb": "rgb(238, 232, 170)",
        "hex": "#EEE8AA"
    },
    "Hydrologic Outlook": {
        "priority": "122",
        "colorName": "Lightgreen",
        "rgb": "rgb(144, 238, 144)",
        "hex": "#90EE90"
    },
    "Short Term Forecast": {
        "priority": "123",
        "colorName": "Palegreen",
        "rgb": "rgb(152, 251, 152)",
        "hex": "#98FB98"
    },
    "Administrative Message": {
        "priority": "124",
        "colorName": "Silver",
        "rgb": "rgb(192, 192, 192)",
        "hex": "#C0C0C0"
    },
    "Test": {
        "priority": "125",
        "colorName": "Azure",
        "rgb": "rgb(240, 255, 255)",
        "hex": "#F0FFFF"
    },
    "Child Abduction Emergency": {
        "priority": "126",
        "colorName": "Transperant",
        "rgb": "rgb(255, 255, 255)",
        "hex": "#FFFFFF"
    },
    "Blue Alert": {
        "priority": "127",
        "colorName": "Transperant",
        "rgb": "rgb(255, 255, 255)",
        "hex": "#FFFFFF"
    }
}

module.exports = noaa_colors;
},{}],3:[function(require,module,exports){
var noaa_colors = require('./noaa_colors');

// these are custom colors that override noaa's colors
const my_polygon_colors = {
    'Tornado Warning': 'rgb(233, 51, 35)',
    'Severe Thunderstorm Warning': 'rgb(244, 185, 65)',
    'Flood Warning': 'rgb(147, 241, 75)',
    'Flash Flood Warning': 'rgb(147, 241, 75)',
    'Special Marine Warning': 'rgb(197, 155, 249)',
    'Special Weather Statement': 'rgb(151, 204, 230)',

    'Tornado Watch': 'rgb(245, 254, 83)',
    'Severe Thunderstorm Watch': 'rgb(238, 135, 134)',
    'Flood Watch': 'rgb(58, 111, 29)',
    'Flash Flood Watch': 'rgb(58, 111, 29)',

    'Hurricane Warning': 'rgb(199, 63, 155)',
    'Tropical Storm Warning': 'rgb(251, 231, 88)',
    'Storm Surge Warning': 'rgb(76, 87, 246)',
    'Hurricane Watch': 'rgb(234, 51, 247)',
    'Tropical Storm Watch': 'rgb(239, 127, 131)',
    'Storm Surge Watch': 'rgb(165, 202, 182)',

    'Blizzard Warning': 'rgb(235, 78, 65)',
    'Winter Storm Warning': 'rgb(240, 141, 233)',
    'Ice Storm Warning': 'rgb(173, 74, 248)',
    'Snow Squall Warning': 'rgb(3, 0, 163)',
    'Winter Weather Advisory': 'rgb(167, 129, 249)',
    'Blizzard Watch': 'rgb(234, 254, 89)',
    'Winter Storm Watch': 'rgb(57, 129, 247)',

    'Small Craft Advisory': 'rgb(109, 186, 150)',
    'Gale Watch': 'rgb(102, 147, 255)',
    'Gale Warning': 'rgb(50, 111, 255)'
}

function get_polygon_colors(alert_event) {
    // var noaa_colors = require('./noaa_colors');
    // for (var item in noaa_colors) {
    //     delete noaa_colors[item].FIELD3;
    //     var unformattedRGB = noaa_colors[item].rgb2;
    //     var formattedRGB = unformattedRGB.split(' ');
    //     formattedRGB = `rgb(${formattedRGB[0]}, ${formattedRGB[1]}, ${formattedRGB[2]})`
    //     noaa_colors[item].rgb = formattedRGB;

    //     noaa_colors[item].hex = `#${noaa_colors[item].hex2}`;

    //     delete noaa_colors[item].rgb2;
    //     delete noaa_colors[item].hex2;
    // }
    // console.log(noaa_colors)
    // for (var item in noaa_colors) {
    //     if (myPolygonColors[item] != undefined) {
    //         noaa_colors[item].rgb = myPolygonColors[item];
    //         //noaa_colors[item].rgb = myPolygonColors[item];
    //     }
    // }
    // console.log(noaa_colors)

    if (Object.keys(noaa_colors).includes(alert_event)) {
        var c = noaa_colors[alert_event].rgb;
        if (Object.keys(noaa_colors[alert_event]).includes('originalColor')) {
            c = noaa_colors[alert_event].rgb;
        }
        return {
            'color': c,
            'priority': noaa_colors[alert_event].priority
        }
    } else {
        return {
            'color': 'rgb(128, 128, 128)',
            'priority': '999'
        }
    }
}

module.exports = get_polygon_colors;
},{"./noaa_colors":2}],4:[function(require,module,exports){
// const geojsonMerge = require('@mapbox/geojson-merge');
const turf = require('@turf/turf');
const map = require('../core/map/map');
const merge_polygons = require('./merge_polygons');

function combine_dictionary_data(alerts_data) {
    const polygons = [];
    for (var item in alerts_data.features) {
        if (alerts_data.features[item].geometry == null) {
            var affectedZones = alerts_data.features[item].properties.affectedZones;
            for (var i in affectedZones) {
                var zoneToPush;
                if (affectedZones[i].includes('forecast')) {
                    alerts_data.features[item].properties.zone_type = 'forecast';
                    affectedZones[i] = affectedZones[i].replace('https://api.weather.gov/zones/forecast/', '');
                    zoneToPush = forecast_zones[affectedZones[i]];
                } else if (affectedZones[i].includes('county')) {
                    alerts_data.features[item].properties.zone_type = 'county';
                    affectedZones[i] = affectedZones[i].replace('https://api.weather.gov/zones/county/', '');
                    zoneToPush = county_zones[affectedZones[i]];
                } else if (affectedZones[i].includes('fire')) {
                    alerts_data.features[item].properties.zone_type = 'fire';
                    affectedZones[i] = affectedZones[i].replace('https://api.weather.gov/zones/fire/', '');
                    zoneToPush = fire_zones[affectedZones[i]];
                }
                if (zoneToPush != undefined) {
                    const polygon = turf.feature(zoneToPush.geometry, alerts_data.features[item].properties);
                    polygons.push(polygon);
                }
            }
        }
    }

    // const polygon_collection = turf.featureCollection(polygons);
    const polygon_collection = merge_polygons(polygons);

    var merged_geoJSON = geojson_merge([
        polygon_collection,
        alerts_data
    ]);
    return merged_geoJSON;
}

// https://github.com/mapbox/geojson-normalize/blob/master/index.js
var types = {
    Point: 'geometry',
    MultiPoint: 'geometry',
    LineString: 'geometry',
    MultiLineString: 'geometry',
    Polygon: 'geometry',
    MultiPolygon: 'geometry',
    GeometryCollection: 'geometry',
    Feature: 'feature',
    FeatureCollection: 'featurecollection'
};

/**
 * Normalize a GeoJSON feature into a FeatureCollection.
 *
 * @param {object} gj geojson data
 * @returns {object} normalized geojson data
 */
function normalize(gj) {
    if (!gj || !gj.type) return null;
    var type = types[gj.type];
    if (!type) return null;

    if (type === 'geometry') {
        return {
            type: 'FeatureCollection',
            features: [{
                type: 'Feature',
                properties: {},
                geometry: gj
            }]
        };
    } else if (type === 'feature') {
        return {
            type: 'FeatureCollection',
            features: [gj]
        };
    } else if (type === 'featurecollection') {
        return gj;
    }
}

// https://github.com/mapbox/geojson-merge/blob/master/index.js#L22
function geojson_merge(inputs) {
    var output = {
        type: 'FeatureCollection',
        features: []
    };
    for (var i = 0; i < inputs.length; i++) {
        var normalized = normalize(inputs[i]);
        for (var j = 0; j < normalized.features.length; j++) {
            output.features.push(normalized.features[j]);
        }
    }
    return output;
}

module.exports = combine_dictionary_data;
},{"../core/map/map":13,"./merge_polygons":9,"@turf/turf":105}],5:[function(require,module,exports){
const ut = require('../core/utils');
const plot_alerts = require('./plot_alerts');
const pako = require('pako');
const combine_dictionary_data = require('./combine_dictionary_data');

const url_prefix = 'https://steepatticstairs.net/AtticRadar/';

const new_alerts_url = `https://preview.weather.gov/edd/resource/edd/hazards/getShortFusedHazards.php?all=true`;
const sws_alerts_url = `https://preview.weather.gov/edd/resource/edd/hazards/getSps.php`;
// https://realearth.ssec.wisc.edu/products/?app=_ALL_
const all_alerts_url = `https://realearth.ssec.wisc.edu/api/shapes?products=NWS-Alerts-All`;
const noaa_alerts_url = `https://api.weather.gov/alerts/active`;

// previously, these were written as:
// "../app/alerts/zones/forecast_zones.js.gz"
// but that didn't work when pushed to github pages
const zone_urls = [
    `${url_prefix}app/alerts/zones/forecast_zones.js.gz`,
    `${url_prefix}app/alerts/zones/county_zones.js.gz`,
    `${url_prefix}app/alerts/zones/fire_zones.js.gz`,
];

var headers = new Headers();
headers.append('pragma', 'no-cache');
headers.append('cache-control', 'no-cache');

function _fetch_alerts_data(callback) {
    fetch(noaa_alerts_url, {
        cache: 'no-store',
        // headers: headers
    })
    .then(response => response.json())
    .then(alerts_data => {
        plot_alerts(alerts_data, callback);
    })
}

function _fetch_zone_dictionaries(callback, index = 0) {
    fetch(zone_urls[index])
    .then(response => response.arrayBuffer())
    .then(buffer => {
        const inflated = pako.inflate(buffer, { to: 'string' });

        var s = document.createElement('script');
        s.type = 'text/javascript';
        s.innerHTML = inflated;
        document.head.appendChild(s);

        if (index < zone_urls.length - 1) {
            _fetch_zone_dictionaries(callback, index + 1);
        } else {
            callback();
        }
    })
}

function _fetch_data(callback) {
    if (callback == undefined) { callback = function() {} }

    if (window.loaded_zones == undefined || window.loaded_zones == false) {
        window.loaded_zones = true;

        _fetch_alerts_data((alerts_data) => {
            _fetch_zone_dictionaries(() => {
                const merged_geoJSON = combine_dictionary_data(alerts_data);
                map.getSource('alertsSource').setData(merged_geoJSON);

                callback();
            });
        })
    } else {
        _fetch_alerts_data((alerts_data) => {
            const merged_geoJSON = combine_dictionary_data(alerts_data);
            map.getSource('alertsSource').setData(merged_geoJSON);

            callback();
        })
    }
}

module.exports = {
    _fetch_data
}
},{"../core/utils":30,"./combine_dictionary_data":4,"./plot_alerts":10,"pako":118}],6:[function(require,module,exports){
const warnings_whitelist = [
    'Tornado Warning',
    'Severe Thunderstorm Warning',
    'Flash Flood Warning',
    'Special Marine Warning',
    'Snow Squall Warning',
];

function filter_alerts(alerts_data) {
    // const EUP_checked = $('#armrEUPBtnSwitchElem').is(':checked');
    // window.atticData.EUP_checked = EUP_checked;
    const show_warnings = $('#armrWarningsBtnSwitchElem').is(':checked');
    window.atticData.show_warnings = show_warnings;
    const show_watches = $('#armrWatchesBtnSwitchElem').is(':checked');
    window.atticData.show_watches = show_watches;
    const show_statements = $('#armrStatementsBtnSwitchElem').is(':checked');
    window.atticData.show_statements = show_statements;
    const show_advisories = $('#armrAdvisoriesBtnSwitchElem').is(':checked');
    window.atticData.show_advisories = show_advisories;
    const show_other = $('#armrOtherBtnSwitchElem').is(':checked');
    window.atticData.show_other = show_other;

    function _check_alert(current_alert_name, has_geometry, boolean_array) {
        var should_return = false;

        if (boolean_array[0] && current_alert_name.includes('Warning') && current_alert_name != 'Flood Warning') {
            if (has_geometry) should_return = true;
        }
        if (boolean_array[1] && current_alert_name.includes('Statement')) {
            if (has_geometry) should_return = true;
        }
        if (boolean_array[2] && current_alert_name.includes('Watch')) {
            should_return = true;
        }
        if (boolean_array[3] && current_alert_name.includes('Advisory')) {
            should_return = true;
        }

        return should_return;
    }

    alerts_data.features = alerts_data.features.filter((feature) => {
        const current_alert_name = feature.properties.event;
        const has_geometry = feature.geometry != null;

        var should_return = _check_alert(current_alert_name, has_geometry, [show_warnings, show_statements, show_watches, show_advisories]);
        if (show_other) {
            // this simulates a check on all other alert filter parameters.
            // essentially, if the current alert wouldn't be shown if everything
            // else was enabled, in other words, if every other option box was checked,
            // it's an "other" alert.
            if (!_check_alert(current_alert_name, has_geometry, [true, true, true, true])) {
                should_return = true;
            }
        }
        return should_return;
    });

    return alerts_data;
}

module.exports = filter_alerts;
},{}],7:[function(require,module,exports){
// https://developer.mozilla.org/en-US/docs/Glossary/Base64
function utf8_to_b64(str) {
    return window.btoa(encodeURIComponent(str));
}

// https://stackoverflow.com/a/7616484
function hash_string(str) {
    var hash = 0,
        i, chr;
    if (str.length === 0) return hash;
    for (i = 0; i < str.length; i++) {
        chr = str.charCodeAt(i);
        hash = ((hash << 5) - hash) + chr;
        hash |= 0; // Convert to 32bit integer
    }
    return hash;
}

module.exports = hash_string;
},{}],8:[function(require,module,exports){
const fetch_data = require('./fetch_data');
const click_listener = require('./click_listener');
const set_layer_order = require('../core/map/setLayerOrder');

const div_elem = '#alertMenuItemDiv';
const icon_elem = '#alertMenuItemIcon';

$(icon_elem).on('click', function () {
    if (!$(icon_elem).hasClass('icon-blue')) {
        $(icon_elem).addClass('icon-blue');
        $(icon_elem).removeClass('icon-grey');

        // this checks if an options switch has been changed while the alerts are disabled,
        // but they've already been initialized, so they would just be re-shown otherwise
        const show_warnings = $('#armrWarningsBtnSwitchElem').is(':checked');
        const show_watches = $('#armrWatchesBtnSwitchElem').is(':checked');
        const show_statements = $('#armrStatementsBtnSwitchElem').is(':checked');
        const show_advisories = $('#armrAdvisoriesBtnSwitchElem').is(':checked');
        const show_other = $('#armrOtherBtnSwitchElem').is(':checked');

        if (
            (window.atticData.show_warnings != show_warnings || window.atticData.show_watches != show_watches ||
            window.atticData.show_statements != show_statements || window.atticData.show_advisories != show_advisories ||
            window.atticData.show_other != show_other)
            &&
            (window.atticData.show_warnings != undefined || window.atticData.show_watches != undefined ||
            window.atticData.show_statements != undefined || window.atticData.show_advisories != undefined ||
            window.atticData.show_other != undefined)
        ) {
            fetch_data._fetch_data(() => {
                if (map.getLayer('alertsLayer')) {
                    // map.getCanvas().style.cursor = 'crosshair';
                    map.on('click', 'alertsLayerFill', click_listener);

                    map.setLayoutProperty('alertsLayer', 'visibility', 'visible');
                    map.setLayoutProperty('alertsLayerFill', 'visibility', 'visible');
                    // map.setLayoutProperty('alertsLayerOutline', 'visibility', 'visible');

                    set_layer_order();
                }
            });
        } else {
            if (map.getLayer('alertsLayer')) {
                map.on('click', 'alertsLayerFill', click_listener);

                map.setLayoutProperty('alertsLayer', 'visibility', 'visible');
                map.setLayoutProperty('alertsLayerFill', 'visibility', 'visible');

                set_layer_order();
            }else {
                fetch_data._fetch_data();
            }
        }
    } else if ($(icon_elem).hasClass('icon-blue')) {
        $(icon_elem).removeClass('icon-blue');
        $(icon_elem).addClass('icon-grey');

        map.getCanvas().style.cursor = '';
        map.off('click', 'alertsLayerFill', click_listener);

        map.setLayoutProperty('alertsLayer', 'visibility', 'none');
        map.setLayoutProperty('alertsLayerFill', 'visibility', 'none');
        // map.setLayoutProperty('alertsLayerOutline', 'visibility', 'none');
    }
})
},{"../core/map/setLayerOrder":15,"./click_listener":1,"./fetch_data":5}],9:[function(require,module,exports){
const turf = require('@turf/turf');
const hash_string = require('./hash_string');

function merge_polygons(polygons) {
    // // const zs = ['MSZ001', 'MSZ007', 'MSZ008', 'MSZ010', 'MSZ011', 'MSZ012', 'MSZ020'];
    // const zs = ['PZZ252', 'PZZ253', 'PZZ272', 'PZZ273'];

    // const shapes = [];
    // for (var i = 0; i < zs.length; i++) {
    //     shapes.push(...turf.explode(forecast_zones[zs[i]]).features);
    // }

    // const fc = turf.featureCollection(shapes);
    // const outline = turf.convex(fc);

    // map.addLayer({
    //     'id': 'outline',
    //     'type': 'line',
    //     'source': {
    //         'type': 'geojson',
    //         'data': outline
    //     },
    //     'layout': {},
    //     'paint': {
    //         'line-color': '#0080ff',
    //         'line-width': 3
    //     }
    // });
    // return turf.featureCollection(polygons);

    const lookup = {};
    for (var i = 0; i < polygons.length; i++) {
        const properties = polygons[i].properties;
        const affected_zones = properties.affectedZones;

        const id = hash_string(JSON.stringify(properties));
        // var id = properties.parameters?.VTEC?.[0];
        // if (id == undefined) {
        //     id = properties.parameters?.WMOidentifier?.[0];
        // }

        lookup[id] = {
            'properties': properties,
            'affected_zones': affected_zones
        }
    }

    const outlines = [];
    const keys = Object.keys(lookup);
    for (var i = 0; i < keys.length; i++) {
        const shapes = [];
        const key = keys[i];

        const zs = lookup[key].affected_zones;
        for (var n = 0; n < zs.length; n++) {
            var zones;
            if (lookup[key].properties.zone_type == 'forecast') { zones = forecast_zones }
            else if (lookup[key].properties.zone_type == 'county') { zones = county_zones }
            else if (lookup[key].properties.zone_type == 'fire') { zones = fire_zones }

            const exploded = turf.explode(zones[zs[n]]).features;
            shapes.push(...exploded);
        }
        const fc = turf.featureCollection(shapes);
        const outline = turf.convex(fc);
        outline.properties = lookup[key].properties;
        outlines.push(outline);

        // outline.properties.type = 'border';
        // outlines.push(JSON.parse(JSON.stringify(outline)));
        // outline.properties.type = 'outline';
        // outlines.push(JSON.parse(JSON.stringify(outline)));
    }

    const polygon_collection = turf.featureCollection(outlines);
    var duplicate_features = polygon_collection.features.flatMap((element) => [element, element]);
    duplicate_features = JSON.parse(JSON.stringify(duplicate_features));
    for (var i = 0; i < duplicate_features.length; i++) {
        if (i % 2 === 0) {
            duplicate_features[i].properties.type = 'border';
        } else {
            duplicate_features[i].properties.type = 'outline';
        }
    }
    polygon_collection.features = duplicate_features;

    return polygon_collection;
}

module.exports = merge_polygons;
},{"./hash_string":7,"@turf/turf":105}],10:[function(require,module,exports){
const get_polygon_colors = require('./colors/polygon_colors');
const set_layer_order = require('../core/map/setLayerOrder');
const click_listener = require('./click_listener');
const filter_alerts = require('./filter_alerts');
const map = require('../core/map/map');

function _add_alert_layers(geojson) {
    if (map.getSource('alertsSource')) {
        map.getSource('alertsSource').setData(geojson);
    } else {
        map.addSource(`alertsSource`, {
            type: 'geojson',
            data: geojson,
        })
        map.addLayer({
            'id': `alertsLayer`,
            'type': 'line',
            'source': `alertsSource`,
            'paint': {
                'line-color': [
                    'case',
                    ['==', ['get', 'type'], 'outline'],
                    ['get', 'color'],
                    ['==', ['get', 'type'], 'border'],
                    'black',
                    'rgba(0, 0, 0, 0)'
                ],
                'line-width': [
                    'case',
                    ['==', ['get', 'type'], 'outline'],
                    3,
                    ['==', ['get', 'type'], 'border'],
                    8,
                    0
                ]
            }
        });
        map.addLayer({
            'id': `alertsLayerFill`,
            'type': 'fill',
            'source': `alertsSource`,
            paint: {
                //#0080ff blue
                //#ff7d7d red
                'fill-color': ['get', 'color'],
                'fill-opacity': 0
            }
        });

        map.on('mouseover', `alertsLayerFill`, function(e) {
            map.getCanvas().style.cursor = 'pointer';
        });
        map.on('mouseout', `alertsLayerFill`, function(e) {
            map.getCanvas().style.cursor = '';
        });

        map.on('click', `alertsLayerFill`, click_listener);
    }
}

function _sort_by_priority(data) {
    data.features = data.features.sort((a, b) => b.properties.priority - a.properties.priority);
    return data;
}

function plot_alerts(alerts_data, callback) {
    if (callback == undefined) { callback = function() {} }

    // const already_data = map.getSource('alertsSource')?._data;
    // if (already_data != undefined) {
    //     alerts_data = already_data;
    // }

    for (var item in alerts_data.features) {
        var gpc = get_polygon_colors(alerts_data.features[item].properties.event); // gpc = get polygon colors
        alerts_data.features[item].properties.color = gpc.color;
        alerts_data.features[item].properties.priority = parseInt(gpc.priority);
    }
    alerts_data = _sort_by_priority(alerts_data);
    alerts_data = filter_alerts(alerts_data);

    var duplicate_features = alerts_data.features.flatMap((element) => [element, element]);
    duplicate_features = JSON.parse(JSON.stringify(duplicate_features));
    for (var i = 0; i < duplicate_features.length; i++) {
        if (i % 2 === 0) {
            duplicate_features[i].properties.type = 'border';
        } else {
            duplicate_features[i].properties.type = 'outline';
        }
    }
    alerts_data.features = duplicate_features;
    console.log(alerts_data);

    _add_alert_layers(alerts_data);

    set_layer_order();

    callback(alerts_data);
}

module.exports = plot_alerts;
},{"../core/map/map":13,"../core/map/setLayerOrder":15,"./click_listener":1,"./colors/polygon_colors":3,"./filter_alerts":6}],11:[function(require,module,exports){
/*
* This file is the entry point for the project - everything starts here.
*/

function load() {
    // initialize the "atticData" global variable,
    // which will store data that can be accessed globally
    window.atticData = {};

    // load the main radar file
    require('../../radar/main');

    // load the weather station menu item
    require('../../weather_station/menu_item').weatherstationToolsOption();

    // load the radio menu item
    require('../../radio/menu_item').weatherRadioToolsOption();

    // initialize the alerts
    require('../../alerts/init_alerts');

    // initialize the METARs module
    require('../../metars/entry');

    // add file upload MENU listeners
    require('../../radar/upload/upload_menu');

    // load the atticRadarMenu helper file
    require('../menu/atticRadarMenu');

    // load the productSelectionMenu helper file
    require('../menu/productSelectionMenu');

    // load the settings menu
    require('../menu/settings').settingsOption();

    // load the tools menu
    require('../menu/tools');

    // load the data inspector tool
    require('../../radar/inspector/entry');

    // load the station marker menu item
    require('../../radar/station_markers/station_marker_menu');

    // load the radar message listener
    require('../../radar/radar_message/radar_message');

    // load the surface fronts module
    require('../../surface_fronts/menu_item');

    // load the hurricanes module
    require('../../hurricanes/menu_item');

    // detect if AtticRadar is being loaded in an iframe
    require('../misc/detect_iframe');
}

if (document.readyState == 'complete' || document.readyState == 'interactive') {
    load();
} else if (document.readyState == 'loading') {
    window.onload = function () {
        load();
    }
}
},{"../../alerts/init_alerts":8,"../../hurricanes/menu_item":35,"../../metars/entry":39,"../../radar/inspector/entry":45,"../../radar/main":66,"../../radar/radar_message/radar_message":75,"../../radar/station_markers/station_marker_menu":77,"../../radar/upload/upload_menu":81,"../../radio/menu_item":84,"../../surface_fronts/menu_item":91,"../../weather_station/menu_item":94,"../menu/atticRadarMenu":17,"../menu/productSelectionMenu":21,"../menu/settings":23,"../menu/tools":24,"../misc/detect_iframe":26}],12:[function(require,module,exports){
const map = require("../map");

function _load_image(image_data) {
    return new Promise((resolve, reject) => {
        const img = new Image();
        img.src = image_data;
        img.onload = () => {
            resolve(img);
        }
    });
}

function _add_image_to_map(image_data, image_name, callback) {
    _load_image(image_data)
        .then((image) => {
            if (!map.hasImage(image_name)) {
                map.addImage(image_name, image);
            }
            callback();
        })
        .catch((error) => {
            throw error;
        });
}

function add_icon_svg(icons_array, callback, i = 0) {
    const svg_string = icons_array[i][0];
    const icon_name = icons_array[i][1];

    const html_element = new DOMParser().parseFromString(svg_string, 'image/svg+xml');
    const serialized_string = new XMLSerializer().serializeToString(html_element);
    const base64_svg = `data:image/svg+xml,${encodeURIComponent(serialized_string)}`;

    _add_image_to_map(base64_svg, icon_name, () => {
        if (i < icons_array.length - 1) {
            add_icon_svg(icons_array, callback, i + 1);
        } else {
            callback();
        }
    });
}

const icons = {
    grey_station_marker: 
    `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100">
        <!-- Simple rectangle with blue fill -->
        <rect width="200" height="100" rx="20" fill="#969696" />
    </svg>`,

    blue_station_marker: 
    `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100">
        <!-- Simple rectangle with blue fill -->
        <rect width="200" height="100" rx="20" fill="#009dff" />
    </svg>`,

    red_station_marker: 
    `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100">
        <!-- Simple rectangle with blue fill -->
        <rect width="200" height="100" rx="20" fill="#ff4e4e" />
    </svg>`,

    orange_station_marker: 
    `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100">
        <!-- Simple rectangle with blue fill -->
        <rect width="200" height="100" rx="20" fill="#b0801a" />
    </svg>`,

    dark_grey_station_marker: 
    `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100">
        <!-- Simple rectangle with blue fill -->
        <rect width="200" height="100" rx="20" fill="#696969" />
    </svg>`,

    tornado_icon: 
    `<?xml version="1.0" encoding="utf-8"?>
    <svg height="100.5" width="100.5" xmlns="http://www.w3.org/2000/svg">
        <circle cx="50" cy="50" r="42" style="fill: rgb(0, 0, 0);" />
        <circle cx="50" cy="50" r="40" style="fill: rgb(255, 255, 255);" />
        <g transform="matrix(1, 0, 0, 1, -420.083984, -413.912628)">
            <g style="" transform="matrix(0.051285, 0, 0, 0.051285, 423.798828, 432.259979)">
                <path
                    d="M 1322.403 275.916 C 1288.603 229.916 1150.903 180.916 939.503 180.916 C 728.203 180.916 590.503 223.816 556.703 275.916 C 495.503 376.916 734.403 453.516 651.703 530.016 C 489.503 677.016 541.503 827.016 590.503 876.016 C 654.903 940.416 716.003 980.116 878.403 1035.316 C 973.203 1065.916 973.203 1160.916 973.203 1160.916 C 973.203 1160.916 1120.203 1020.016 844.603 906.816 C 731.403 860.816 872.103 741.416 1068.103 621.916 C 1294.903 481.016 1371.403 337.016 1322.403 275.916 Z"
                    style="" />
            </g>
        </g>
    </svg>`,

    lightning_bolt_regular: 
    `<svg xmlns="http://www.w3.org/2000/svg" width="100px" height="100px" viewBox="0 0 100 100">
        <g id="surface1">
            <path style="stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1"
                d="M 44.761719 28.234375 C 33.066406 43.234375 23.460938 55.585938 23.441406 55.664062 C 23.402344 55.761719 28.5625 55.835938 34.902344 55.835938 C 45.785156 55.835938 46.425781 55.855469 46.328125 56.164062 C 46 57.246094 36.546875 98.863281 36.605469 99 C 36.644531 99.152344 76.558594 39.5625 76.558594 39.328125 C 76.558594 39.273438 72.382812 39.214844 67.28125 39.214844 C 58.449219 39.214844 58.003906 39.195312 58.003906 38.867188 C 58.003906 38.671875 59.820312 30.089844 62.042969 19.769531 C 64.265625 9.464844 66.0625 1.019531 66.042969 1 C 66.042969 0.980469 56.457031 13.253906 44.761719 28.234375 Z M 44.761719 28.234375" />
            <path style="stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1"
                d="M 64.398438 4.480469 C 64.421875 4.480469 56.804688 40.203125 56.804688 40.203125 C 56.804688 40.203125 75.0625 40.121094 75.0625 40.195312 C 75.0625 40.386719 38.902344 94.019531 38.828125 93.949219 C 38.777344 93.925781 47.652344 54.996094 47.652344 54.996094 L 25.179688 54.996094 C 25.179688 54.996094 64.371094 4.457031 64.398438 4.480469 Z M 64.398438 4.480469" />
        </g>
    </svg>`,

    lightning_bolt_bold: 
    `<svg width="100px" height="100px" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
        <defs></defs>
        <g id="surface1">
            <path style="stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1"
                d="M 44.761719 28.234375 C 33.066406 43.234375 23.460938 55.585938 23.441406 55.664062 C 23.402344 55.761719 28.5625 55.835938 34.902344 55.835938 C 45.785156 55.835938 46.425781 55.855469 46.328125 56.164062 C 46 57.246094 36.546875 98.863281 36.605469 99 C 36.644531 99.152344 76.558594 39.5625 76.558594 39.328125 C 76.558594 39.273438 72.382812 39.214844 67.28125 39.214844 C 58.449219 39.214844 58.003906 39.195312 58.003906 38.867188 C 58.003906 38.671875 59.820312 30.089844 62.042969 19.769531 C 64.265625 9.464844 66.0625 1.019531 66.042969 1 C 66.042969 0.980469 56.457031 13.253906 44.761719 28.234375 Z M 56.089844 29.550781 L 53.246094 42.789062 L 61.425781 42.847656 C 65.929688 42.867188 69.601562 42.945312 69.601562 43.003906 C 69.601562 43.15625 44.800781 80.191406 44.742188 80.136719 C 44.703125 80.117188 46.054688 74.085938 47.738281 66.757812 C 49.421875 59.414062 50.871094 53.132812 50.945312 52.804688 L 51.082031 52.164062 L 41.011719 52.125 L 30.960938 52.066406 L 44.914062 34.167969 C 52.589844 24.3125 58.890625 16.269531 58.910156 16.289062 C 58.929688 16.289062 57.65625 22.261719 56.089844 29.550781 Z M 56.089844 29.550781">
            </path>
        </g>
        <g id="g-1" style="" transform="matrix(0.810689, 0, 0, 0.780673, 28.218863, 20.208618)">
            <path style="stroke: none; fill-rule: nonzero; fill-opacity: 1; fill: rgb(255, 255, 255);"
                d="M 56.089844 29.550781"></path>
            <path style="stroke: none; fill-rule: nonzero; fill-opacity: 1; fill: rgb(255, 255, 255);"
                d="M 41.079 -11.713 C 41.106 -11.713 32.185 28.283 32.185 28.283 L 43.104 28.364 C 49.116 28.391 52.832 28.498 52.832 28.58 C 52.832 28.791 17.648 83.747 17.571 83.672 C 17.519 83.643 26.958 41.284 26.958 41.284 L 15.854 41.206 L 2.436 41.126 C 2.436 41.126 41.052 -11.741 41.079 -11.713 Z">
            </path>
        </g>
    </svg>`,

    blue_triangle: 
    `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
        <polygon points="0,100 50,0 100,100" style="fill: rgb(0, 100, 245);" />
    </svg>`,

    purple_triangle: 
    `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
        <polygon points="0,100 50,0 100,100" style="fill: rgb(95, 54, 196);" />
    </svg>`,

    purple_semicircle: 
    `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
        <path d="M0,100 A50,50 0 0,1 100,100 H0 Z" style="fill: rgb(95, 54, 196);" />
    </svg>`,

    red_semicircle: 
    `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
        <path d="M0,100 A50,50 0 0,1 100,100 H0 Z" style="fill: rgb(234, 51, 35);" />
    </svg>`
}

module.exports = {
    icons,
    add_icon_svg
};
},{"../map":13}],13:[function(require,module,exports){
mapboxgl.accessToken = 'pk.eyJ1Ijoic3RlZXBhdHRpY3N0YWlycyIsImEiOiJjbDNvaGFod2EwbXluM2pwZTJiMDYzYjh5In0.J_HeH00ry0tbLmGmTy4z5w';
const map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/steepatticstairs/clgpoqhos00e001p9hvqcg1vp',
    zoom: 3,
    center: [-98.5606744, 36.8281576],
    maxZoom: 20,
    preserveDrawingBuffer: true,
    // bearingSnap: 360,
    maxPitch: 0,

    fadeDuration: 0,

    attributionControl: false,
    //renderWorldCopies: false,
    //maxPitch: 75,
    //zoom: 6,
    //center: [-66.0190363102349, 18.15295560177013],
    projection: 'mercator',
    //fadeDuration: 0,
});

// MOBILE - disable map rotation using touch rotation gesture
map.touchZoomRotate.disableRotation();
// DESKTOP - disable map rotation using right click + drag
map.dragRotate.disable();
// DESKTOP - disable map rotation using the keyboard
map.keyboard.disableRotation();
// prevent the context menu from opening when right clicking on the map
$('#map').on('contextmenu', function(e) {
    if ($(e.target).hasClass('mapboxgl-canvas')) {
        e.preventDefault();
    }
})

// map.on('zoomstart', function() {
//     if ($('#dataDiv').data('stationMarkersVisible') || $('#dataDiv').data('metarsActive')) {
//         map._fadeDuration = 0;
//     } else {
//         map._fadeDuration = 300;
//     }
// })

// map.on('click', (e) => {
//     const popup = new mapboxgl.Popup({ className: 'alertPopup' })
//         .setLngLat(e.lngLat)
//         .setHTML("Hello World!")
//         .addTo(map);
// })

// $('#dataDiv').data('centerMarker', []);
// map.on('move', function() {
//     var mapCenter = map.getCenter();

//     var oldMark = $('#dataDiv').data('centerMarker');
//     for (var i in oldMark) {
//         oldMark[i].remove();
//     }
//     var mark = new mapboxgl.Marker()
//     .setLngLat([mapCenter.lng, mapCenter.lat])
//     .addTo(map);
//     oldMark.push(mark)
//     $('#dataDiv').data('centerMarker', oldMark);
// })

// map.on('style.load', () => {
//     map.setFog({
//         // // color: 'rgb(186, 210, 235)', // Lower atmosphere
//         // 'high-color': 'rgb(242, 214, 136)', // Upper atmosphere
//         // 'horizon-blend': 0.5, // Atmosphere thickness (default 0.2 at low zooms)
//         // 'space-color': 'rgb(116, 164, 214)', // Background color
//         // //'star-intensity': 0.6 // Background star brightness (default 0.35 at low zoooms )
//         'space-color': ["interpolate",["linear"],["zoom"],0.8,"#87ceeb",1,"white"]
//     });
// });
// // map.on('style.load', () => {
// //     map.addLayer({
// //         "id": "sky",
// //         "type": "sky",
// //         "layout": {}
// //     })
// // })

// https://github.com/mapbox/mapbox-gl-js/issues/3265#issuecomment-660400481
setTimeout(() => map.resize(), 0);
window.onresize = () => { map.resize() }
window.onclick = () => { map.resize() }

// const getMouseColor = require('../misc/colorPicker');
// map.on("mousemove", e => getMouseColor(e, map));

// map.on('click', function(e) {
//     console.log(e.lngLat)
//     console.log(map.getZoom())
// })

// // https://github.com/mapbox/mapbox-gl-js/issues/3039#issuecomment-401964567
// function registerControlPosition(map, positionName) {
//     if (map._controlPositions[positionName]) {
//         return;
//     }
//     var positionContainer = document.createElement('div');
//     positionContainer.className = `mapboxgl-ctrl-${positionName}`;
//     map._controlContainer.appendChild(positionContainer);
//     map._controlPositions[positionName] = positionContainer;
// }
// registerControlPosition(map, 'top-center');
// registerControlPosition(map, 'bottom-center');
// registerControlPosition(map, 'center');

document.getElementById("texturecolorbar").width = 0;
document.getElementById("texturecolorbar").height = 0;

// // enable bootstrap tooltips
// const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
// const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

// function showOptionsBox() {
//     //$('#optionsBox').show("slide", { direction: "down" }, 200);
//     $('#optionsBox').animate({height: 200}, 200);
//     document.getElementById('mainInfo').style.display = 'block';
//     document.getElementById('smallInfo').style.display = 'none';
// }
// function hideOptionsBox() {
//     //$('#optionsBox').hide("slide", { direction: "down" }, 200);
//     //$('#optionsBox').animate({height: 'auto'}, 200);
//     document.getElementById('smallInfo').style.display = 'block';
//     document.getElementById('mainInfo').style.display = 'none';
//     $('#optionsBox').animate({height: $('#smallInfo').height() + 12}, 200);
// }

// document.getElementById('mainInfo').style.display = 'none';
// document.getElementById('smallInfo').style.display = 'block';
// $('#dataDiv').data('optionsBoxShown', false);
// $('#optionsBox').animate({height: $('#smallInfo').height() + 12}, 0);

// $('#optionsBox').on('click', function(e) {
//     // if the user clicks on the dropdown button
//     if ($(e.target).parents().eq(0).attr('id') == 'tiltsDropdown') return;
//     // if the user clicks on one of the dropdown menu items
//     if ($(e.target).parents().eq(1).attr('id') == 'tiltsMenu') return;
//     // if the user clicks on one of the product buttons
//     if ($(e.target).parents().eq(1).attr('id') == 'mainInfo' && $('#armrModeBtnSlideDown').find('.armrIcon').hasClass('fa-clock')) return;
//     // if the user clicks on one of the elevation buttons in upload mode
//     if ($(e.target).parents().eq(0).attr('id') == 'l2ElevBtns') return;
//     // if the user clicks on the product dropdown in upload mode
//     if ($(e.target).attr('id') == 'l2ProductBtn') return;
//     // if the user clicks on the product dropdown options in upload mode
//     if ($(e.target).parents().eq(1).attr('id') == 'l2ProductMenu') return;
//     // if the user clicks on the switch to toggle elevation display mode
//     if ($(e.target).attr('id') == 'elevOptionsSwitch') return;
//     // if the user clicks on one of the elevation navigation buttons in upload mode
//     if ($(e.target).parents().eq(0).attr('id') == 'elevNavBtns') return;

//     if ($('#dataDiv').data('optionsBoxShown')) {
//         $('#dataDiv').data('optionsBoxShown', false);
//         hideOptionsBox();
//     } else if (!$('#dataDiv').data('optionsBoxShown')) {
//         $('#dataDiv').data('optionsBoxShown', true);
//         showOptionsBox();
//     }
// })
// function mouseEnter(thisObj) {
//     $(thisObj).animate({
//         backgroundColor: 'rgb(212, 212, 212)',
//     }, 150);
// }
// function mouseLeave(thisObj) {
//     $(thisObj).animate({
//         backgroundColor: 'white',
//     }, 150);
// }

// $('#optionsBox').on('mouseenter', function(e) {
//     mouseEnter(this);
// })
// $('#optionsBox').on('mouseleave', function(e) {
//     mouseLeave(this);
// })
// $('.productBtnGroup').on('mouseenter', function(e) {
//     mouseLeave($('#optionsBox'));
// })
// $('.productBtnGroup').on('mouseleave', function(e) {
//     mouseEnter($('#optionsBox'));
// })

//$('#optionsBox').hide();
// $('.optionsBoxControl').trigger('click');

module.exports = map;
},{}],14:[function(require,module,exports){
var map = require('./map');

function removeMapLayer(layername) {
    if (map.getLayer(layername)) {
        map.removeLayer(layername);
    }
    if (map.getSource(layername)) {
        map.removeSource(layername);
    }
}
function setGeojsonLayer(gj, gjType, identity) {
    var styling;
    var type;
    if (gjType == 'circle') {
        type = gjType;
        styling = {
            'circle-radius': 4,
            'circle-stroke-width': 2,
            'circle-color': 'red',
            'circle-stroke-color': 'white',
        }
    } else if (gjType == 'lineCircle') {
        type = 'circle';
        styling = {
            'circle-radius': 4,
            'circle-stroke-width': 2,
            'circle-color': 'blue',
            'circle-stroke-color': 'white',
        }
    } else if (gjType == 'greenCircle') {
        type = 'circle';
        styling = {
            'circle-radius': 4,
            'circle-stroke-width': 2,
            'circle-color': 'green',
            'circle-stroke-color': 'white',
        }
    } else if (gjType == 'yellowCircle') {
        type = 'circle';
        styling = {
            'circle-radius': 4,
            'circle-stroke-width': 2,
            'circle-color': 'yellow',
            'circle-stroke-color': 'white',
        }
    } else if (gjType == 'lineCircleEdge') {
        type = 'circle';
        styling = {
            'circle-radius': 4,
            'circle-color': '#ffffff',
        }
    } else if (gjType == 'line') {
        type = gjType;
        styling = {
            'line-color': '#ffffff',
            'line-width': 1.5,
        }
    }
    map.addLayer({
        'id': identity,
        'type': type,
        'source': {
            'type': 'geojson',
            'data': gj,
        },
        'paint': styling,
    })
}
function moveMapLayer(lay) {
    if (map.getLayer(lay)) {
        map.moveLayer(lay)
    }
}

module.exports = {
    removeMapLayer,
    setGeojsonLayer,
    moveMapLayer
}
},{"./map":13}],15:[function(require,module,exports){
var map = require('./map');

function moveLayerToTop(layerName) {
    if (map.getLayer(layerName)) {
        map.moveLayer(layerName);
    }
}

function setLayerOrder() {
    moveLayerToTop('spc_fill');
    moveLayerToTop('spc_border');

    moveLayerToTop('baseReflectivity');
    moveLayerToTop('radioStationLayer');

    // var isRoadsStreetsVisChecked = $('#armrRoadsStreetsVisBtnSwitchElem').is(':checked');
    // if (!isRoadsStreetsVisChecked) {
    //     setBaseMapLayers('cities');
    // } else if (isRoadsStreetsVisChecked) {
    //     setBaseMapLayers('both');
    // }

    moveLayerToTop('alertsLayerOutline');
    moveLayerToTop('alertsLayer');
    moveLayerToTop('alertsLayerFill');
    var storm_track_layers = window.atticData.storm_track_layers;
    if (storm_track_layers != undefined) {
        for (var i in storm_track_layers) {
            moveLayerToTop(storm_track_layers[i]);
        }
    }
    var tvs_layers = window.atticData.tvs_layers;
    if (tvs_layers != undefined) {
        for (var i in tvs_layers) {
            moveLayerToTop(tvs_layers[i]);
        }
    }

    moveLayerToTop('metarSymbolLayer');

    moveLayerToTop('lightningLayer');

    moveLayerToTop('stationSymbolLayer');

    var surface_fronts_layers = window.atticData.surface_fronts_layers;
    if (surface_fronts_layers != undefined) {
        for (var i in surface_fronts_layers) {
            moveLayerToTop(surface_fronts_layers[i]);
        }
    }
}

module.exports = setLayerOrder;
},{"./map":13}],16:[function(require,module,exports){
var map = require('../map');

function generateLayer() {
    var geoJSON = new GeoJSONTerminator();
    map.addSource('dayNightLineSource', {
        'type': 'geojson',
        'data': geoJSON
    })
    map.addLayer({
        'id': 'dayNightLineLayer',
        'type': 'fill',
        'source': 'dayNightLineSource',
        'layout': {},
        'paint': {
            'fill-color': '#000',
            'fill-opacity': 0.4
        }
    });
    setInterval(function() {
        if (map.getLayoutProperty('dayNightLineLayer', 'visibility') != 'none') {
            var geoJSON = new GeoJSONTerminator();
            console.log('Updated day-night line.')
            map.getSource('dayNightLineSource').setData(geoJSON);
        }
    }, 5000)
}

function initialize() {
    if (map.loaded()) { generateLayer(); } 
    else { map.on('load', function() { generateLayer(); }) }
}

function toggleVisibility(showHide) {
    if (showHide == 'show') {
        if (map.getLayer('dayNightLineLayer')) {
            // if layer already exists, show the layer because it is invisible
            map.setLayoutProperty('dayNightLineLayer', 'visibility', 'visible');
        } else {
            // layer does not exist - add it to the map for the first time
            initialize();
        }
    } else if (showHide == 'hide') {
        // hide the layer
        map.setLayoutProperty('dayNightLineLayer', 'visibility', 'none');
    }
}

module.exports = {
    //initialize,
    toggleVisibility
}
},{"../map":13}],17:[function(require,module,exports){
const ut = require('../utils');
const createMenuOption = require('./createMenuOption');

const showHideDuration = 250;
function showARMwindow() {
    $('#atticRadarMenu').fadeIn(showHideDuration);
    $('#atticRadarMenuContainer').hide().show('slide', { direction: 'down' }, showHideDuration);
}
function hideARMwindow() {
    $('#atticRadarMenu').fadeOut(showHideDuration);
    $('#atticRadarMenuContainer').hide('slide', { direction: 'down' }, showHideDuration, function() {
        $('#atticRadarMenu').hide();
    });
}

// createMenuOption({
//     'divId': 'offcanvasMenuItemDiv',
//     'iconId': 'offcanvasMenuItemIcon',

//     'divClass': 'mapFooterMenuItem',
//     'iconClass': 'icon-grey',

//     'location': 'top-left',
//     'size': 30,

//     'contents': 'Open Offcanvas Menu',
//     'icon': 'fa fa-bars',
//     'css': ''
// }, function(divElem, iconElem) {
//     showARMwindow();

//     $('#atticRadarMenuSettingsScreen').hide();
//     $('#atticRadarMenuMainScreen').show();
// })

// provided by ChatGPT
$.fn.rotateArrow = function (degrees, easing, duration) {
    return this.each(function () {
        var el = $(this);
        var currentRotation = getRotationDegrees(el);
        var finalRotation = currentRotation + degrees;
        el.animate({
            deg: finalRotation
        }, {
            duration: duration,
            easing: easing,
            step: function (now) {
                el.css({
                    transform: "rotate(" + now + "deg)"
                });
            }
        });
    });
};
function getRotationDegrees(el) {
    var st = window.getComputedStyle(el[0], null);
    var tr = st.getPropertyValue("-webkit-transform") ||
        st.getPropertyValue("-moz-transform") ||
        st.getPropertyValue("-ms-transform") ||
        st.getPropertyValue("-o-transform") ||
        st.getPropertyValue("transform");
    if (tr == 'none') return 0;
    var values = tr.split('(')[1].split(')')[0].split(',');
    var a = values[0];
    var b = values[1];
    var angle = Math.round(Math.atan2(b, a) * (180 / Math.PI));
    return (angle < 0 ? angle + 360 : angle);
}

$('#atticRadarMenu').on('click', function(e) {
    var clickedTarget = $(e.target).attr('id');
    if (clickedTarget == 'atticRadarMenu'/* || clickedTarget == 'atcDlgClose'*/) {
        hideARMwindow();
        //$(this).hide();
    }
})
$('.armsHeaderExitBtn').click(function() {
    hideARMwindow();
    //$('#atticRadarMenu').hide();
})

function slideDownToggle(armrElem, armrSlideDownElem) {
    const duration = 150;
    const easing = 'swing';
    var arrow = armrElem.find('.armrIconArrowRight');
    var toggleswitch = armrSlideDownElem.find('.toggleSwitchContainter');

    if (arrow.data('rotationStatus') == 'normal' || arrow.data('rotationStatus') == undefined) {
        armrElem.addClass('armrTop');
        if (toggleswitch.length) { toggleswitch.hide().fadeIn(duration / 1.5) }
        armrSlideDownElem.slideDown(duration);
        arrow.rotateArrow(90, easing, duration);
        arrow.data('rotationStatus', 'down');
    } else {
        if (toggleswitch.length) { toggleswitch.fadeOut(duration / 1.5) }
        armrSlideDownElem.slideUp(duration, function() {
            armrElem.removeClass('armrTop');
        });
        arrow.rotateArrow(-90, easing, duration);
        arrow.data('rotationStatus', 'normal');
    }
}

function toggleswitchFunctions(switchElem, onFunction, offFunction) {
    // you can't use .click() because it fires twice for some reason
    switchElem.on('click', function(e) {
        var checkbox = $(this); //.find('input');
        var isChecked = checkbox.is(':checked'); // true if the switch just turned on
        if (isChecked) { onFunction() }
        else { offFunction() }
    })
}

$('.armrSlideDown').hover(function() {
    $(this).css('background-color', 'rgb(60, 60, 60)');
    $(this).css('cursor', 'default');
})

const fadeDuration = 150;

var mainMenuScreen = $('#atticRadarMenuMainScreen');
var settingsScreen = $('#atticRadarMenuSettingsScreen');

$('#armrSettingsBtn').click(function() {
    mainMenuScreen.fadeOut(fadeDuration, function() {
        settingsScreen.fadeIn(fadeDuration);
    });
    // mainMenuScreen.css('position', 'absolute').hide('slide', { direction: 'left' }, 1000);
    // settingsScreen.show('slide', { direction: 'right' }, 1000);
    // mainMenuScreen.hide()
    // settingsScreen.show('slide', { direction: 'right' }, 1000, function() {
    //     setTimeout(function() {
    //         settingsScreen.fadeOut(200);
    //     }, 200)
    // });
    // mainMenuScreen.hide('slide', { direction: 'left' }, 1000, function() {
    //     settingsScreen.show('slide', { direction: 'right' }, 1000);
    // });
})
$('#armsSettingsBackBtn').click(function() {
    settingsScreen.fadeOut(fadeDuration, function() {
        mainMenuScreen.fadeIn(fadeDuration);
    });
})

module.exports = {
    slideDownToggle,
    toggleswitchFunctions,
    showARMwindow,
    hideARMwindow
}
},{"../utils":30,"./createMenuOption":19}],18:[function(require,module,exports){
function display_attic_dialog(options) {
    var title = options.title;
    var body = options.body;
    var color = options.color;
    var textColor = options.textColor;

    $('#atcDlg').show();

    $('#atcDlgHeaderText').html(title);
    $('#atcDlgHeader').css('background-color', color);
    //$('#atticDialogHeaderContainer').css('background-color', color);
    $('#atcDlgHeader').css('color', textColor);
    $('#atcDlgClose').css('color', textColor);

    $('#atcDlgBody').scrollTop(0);
    $('#atcDlgBody').html(body);

    // const headerHeight = $('#atticDialogHeaderContainer').height();
    // var contentHeight = 0;
    // $('#atticDialogBody').children().each(function() { contentHeight = contentHeight + $(this).height() })
    //$('#atticDialogContainer').height(headerHeight + contentHeight);
    // var bodyHeight = $('#atticDialogBody').outerHeight();
    // console.log(bodyHeight)
    // $('#atticDialogContainer').height(bodyHeight);
}

$('#atcDlg').on('click', function(e) {
    var clickedTarget = $(e.target).attr('id');
    if (clickedTarget == 'atcDlg' || clickedTarget == 'atcDlgClose') {
        $(this).hide();
    }
})

module.exports = display_attic_dialog;
},{}],19:[function(require,module,exports){
function createMenuOption(options, clickFunc) {
    var divId = options.divId;
    var iconId = options.iconId;

    var divClass = options.divClass;
    var iconClass = options.iconClass;

    var location = options.location;
    var size = options.size;

    var contents = options.contents;
    var icon = options.icon;
    var css = options.css;

    var div = document.createElement('div');
    div.id = divId;
    div.className = divClass;
    //$(div).addClass('mapFooterMenuItem');

    const defaultSize = 23;

    var iconElem = document.createElement('span');
    $(iconElem).css("fontSize", defaultSize)
    if (size != undefined) { $(iconElem).css("fontSize", size) }
    iconElem.id = iconId;
    $(iconElem).addClass(icon);
    $(iconElem).addClass(iconClass);
    //iconElem.innerHTML = '&nbsp;&nbsp;'
    div.appendChild(iconElem);

    var nbspElem = document.createElement('span');
    nbspElem.className = 'noselect';
    nbspElem.appendChild(document.createTextNode('\u00A0\u00A0\u00A0'));

    if (location == 'bottom-center' || location == undefined) {
        document.getElementById('mapFooter').appendChild(div);
        document.getElementById('mapFooter').appendChild(nbspElem);
    } else if (location == 'top-left') {
        document.getElementById('top-left').appendChild(div);
        document.getElementById('top-left').appendChild(nbspElem);
    }

    // var outerDiv = document.createElement('div');
    // outerDiv.id = `${divId}_outer`;

    // var div = document.createElement('div');
    // div.id = divId;
    // div.className = divClass;
    // outerDiv.appendChild(div);

    // var iconElem = document.createElement('span');
    // iconElem.id = `${divId}_icon`;
    // iconElem.className = icon;
    // iconElem.innerHTML = '&nbsp;&nbsp;'
    // div.appendChild(iconElem);

    // var innerDiv = document.createElement('span');
    // innerDiv.id = `${divId}_inner`;
    // innerDiv.innerHTML = contents;
    // div.appendChild(innerDiv);

    // div.style.cssText = css;

    $(iconElem).on('click', function() {
        clickFunc(div, iconElem);
    })

    // function animateBrightness(startVal, stopVal, duration) {
    //     // https://stackoverflow.com/a/20082518/18758797
    //     $({blurRadius: startVal}).animate({blurRadius: stopVal}, {
    //         duration: duration,
    //         easing: 'linear',
    //         step: function() {
    //             $(div).css({
    //                 "-webkit-filter": "brightness("+this.blurRadius+"%)",
    //                 "filter": "brightness("+this.blurRadius+"%)"
    //             });
    //         }
    //     });
    // }
    // $(iconElem).on('mouseenter', function() {
    //     $(iconElem).animate({
    //         color: 'rgb(200, 200, 200)',
    //     }, 150);
    // })
    // $(iconElem).on('mouseleave', function() {
    //     $(iconElem).animate({
    //         color: 'rgb(0, 0, 0)',
    //     }, 150);
    // })

    // outerDiv.appendChild(document.createElement('br'));
    // document.getElementById('offCanvasBody').appendChild(outerDiv);
}

module.exports = createMenuOption;
},{}],20:[function(require,module,exports){
function createToolsOption(options, clickFunc) {
    var divId = options.divId;
    var iconId = options.iconId;

    var index = options.index;

    var divClass = options.divClass;
    var iconClass = options.iconClass;

    var location = options.location;
    var size = options.size;

    var contents = options.contents;
    var icon = options.icon;
    var css = options.css;

    var div = document.createElement('div');
    div.id = divId;
    div.className = divClass;
    //$(div).addClass('mapFooterMenuItem');

    const defaultSize = 23;

    var iconElem = document.createElement('span');
    $(iconElem).css("fontSize", defaultSize)
    if (size != undefined) { $(iconElem).css("fontSize", size) }
    iconElem.id = iconId;
    $(iconElem).addClass(icon);
    $(iconElem).addClass(iconClass);
    //iconElem.innerHTML = '&nbsp;&nbsp;'
    div.appendChild(iconElem);

    var nbspElem = document.createElement('span');
    nbspElem.className = 'noselect';
    nbspElem.appendChild(document.createTextNode('\u00A0\u00A0\u00A0'));

    if (index > 1) {
        document.getElementById('toolsMenuTooltip').appendChild(nbspElem);
    }
    document.getElementById('toolsMenuTooltip').appendChild(div);

    // var outerDiv = document.createElement('div');
    // outerDiv.id = `${divId}_outer`;

    // var div = document.createElement('div');
    // div.id = divId;
    // div.className = divClass;
    // outerDiv.appendChild(div);

    // var iconElem = document.createElement('span');
    // iconElem.id = `${divId}_icon`;
    // iconElem.className = icon;
    // iconElem.innerHTML = '&nbsp;&nbsp;'
    // div.appendChild(iconElem);

    // var innerDiv = document.createElement('span');
    // innerDiv.id = `${divId}_inner`;
    // innerDiv.innerHTML = contents;
    // div.appendChild(innerDiv);

    // div.style.cssText = css;

    $(div).on('click', function() {
        clickFunc(div, iconElem);
    })

    // function animateBrightness(startVal, stopVal, duration) {
    //     // https://stackoverflow.com/a/20082518/18758797
    //     $({blurRadius: startVal}).animate({blurRadius: stopVal}, {
    //         duration: duration,
    //         easing: 'linear',
    //         step: function() {
    //             $(div).css({
    //                 "-webkit-filter": "brightness("+this.blurRadius+"%)",
    //                 "filter": "brightness("+this.blurRadius+"%)"
    //             });
    //         }
    //     });
    // }
    // $(iconElem).on('mouseenter', function() {
    //     $(iconElem).animate({
    //         color: 'rgb(200, 200, 200)',
    //     }, 150);
    // })
    // $(iconElem).on('mouseleave', function() {
    //     $(iconElem).animate({
    //         color: 'rgb(0, 0, 0)',
    //     }, 150);
    // })

    // outerDiv.appendChild(document.createElement('br'));
    // document.getElementById('offCanvasBody').appendChild(outerDiv);
}

module.exports = createToolsOption;
},{}],21:[function(require,module,exports){
const ut = require('../utils');
const loaders_nexrad = require('../../radar/libnexrad/loaders_nexrad');

var productLookup = {
    1: {
        'ref': 'N0B',
        'vel': 'N0G',
        'lowres-ref': 'p94r0',
        'lowres-vel': 'p99v0',
        'rho': 'N0C',
        'zdr': 'N0X',
        'sw ': 'p30sw',
        'hhc': 'HHC',
        'hyc': 'N0H',
        'srv': 'N0S',
        'vil': '134il',
        'sr-ref': 'TZ0',
        'lr-ref': 'TZL',
        'tdwrVel': 'TV0',
    },
    2: {
        'ref': 'N1B',
        'vel': 'NAG',
        'lowres-ref': 'p94r1',
        'lowres-vel': 'p99v1',
        'rho': 'N1C',
        'zdr': 'N1X',
        'hhc': 'HHC',
        'hyc': 'N1H',
        'srv': 'N1S',
        'sr-ref': 'TZ1',
        'tdwrVel': 'TV1',
    },
    3: {
        'ref': 'N2B',
        'vel': 'N1G',
        'lowres-ref': 'p94r2',
        'lowres-vel': 'p99v2',
        'rho': 'N2C',
        'zdr': 'N2X',
        'hyc': 'N2H',
        'srv': 'N2S',
        'sr-ref': 'TZ2',
        'tdwrVel': 'TV2',
    },
    4: {
        'ref': 'N3B',
        'lowres-ref': 'p94r3',
        'lowres-vel': 'p99v3',
        'rho': 'N3C',
        'zdr': 'N3X',
        'hyc': 'N3H',
        'srv': 'N3S',
    }
}


$('#productsDropdownTrigger').click(function() {
    var psm = $('#productSelectionMenu');
    psm.css('bottom', parseInt($('#map').css('bottom')) + 5);
    psm.show();

    $(document.body).click(function(e) {
        function hidePSM() {
            psm.hide();
            $(document.body).off('click');
        }

        var isOnRestrictedElem = 
            psm.find($(e.target)).length == 1 ||
            $(e.target).is(psm) ||
            $(e.target).hasClass('psmNoHideElem');

        if (!isOnRestrictedElem && !$(e.target).hasClass('pdt')) {
            hidePSM();
        }
    });
})


function loadTiltBtns(numOfTiltsArr) {
    // copy the array so it doesn't modify the original
    var arr = [...numOfTiltsArr];
    arr = arr.reverse();

    var containerElem = $('#psmTiltDropdown');
    containerElem.empty();
    for (var i in arr) {
        containerElem.prepend($(`<div class="psmTiltDropdownRow psmNoHideElem" value="${arr[i]}">Tilt ${arr[i]}</div>`));
    }
}

$('.psmRow').click(function(e) {
    if ($(e.target).is($(this)) && !$(this).hasClass('l2prodSel')) {
        const currentStation = window.atticData.currentStation; // 'KAKQ';

        var innerText = $(this).text(); // the long product name, e.g. "Base Reflectivity"
        var value = $(this).attr('value'); // the abbreviated product name, e.g. "ref", "vel", "hyc"

        $('#productsDropdownTriggerText').text(longProductNames[value]);

        var selectedTiltNum = $(this).find('.psmRowTiltSelect').text().split(' ')[1];
        var resultProduct = productLookup[selectedTiltNum][value];

        window.atticData.from_file_upload = false;
        loaders_nexrad.quick_level_3_plot(currentStation, resultProduct, (L3Factory) => {});
        // loaders.getLatestFile(currentStation, [3, resultProduct, 0], function(url) {
        //     console.log(url)
        //     loaders.loadFileObject(ut.phpProxy + url + '#', 3);
        // })
    }
})

$('.psmRow').on('mouseover mousemove', function(e) {
    // we don't want to highlight the row if we're hovering over the tilt menu
    if ($(e.target).is($(this))) {
        $(this).css('background-color', 'rgb(85, 85, 85)');
    } else {
        $(this).css('background-color', '');
    }
}).on('mouseleave', function(e) {
    $(this).css('background-color', '');
})


function disableScrolling() {
    $('#productSelectionMenu').css('overflow', 'hidden');
    $('#psmTiltDropdownBackdrop').show();
}
function enableScrolling() {
    $('#productSelectionMenu').css('overflow', 'scroll');
    $('#psmTiltDropdownBackdrop').hide();
}

$('#psmTiltDropdownBackdrop').click(function(e) {
    enableScrolling();
    $('#psmTiltDropdown').hide();
})

$('.psmRowTiltSelect').click(function() {
    const fadeDuration = 100;
    // the blue text element with "Tilt X" written
    var thisObj = $(this);
    // the abbreviated product associated with the current row
    var thisProduct = thisObj.parent().attr('value');
    // fix the dropdown menu to display the correct number of tilts
    var numOfTilts = ut.numOfTiltsObj[thisProduct];
    loadTiltBtns(numOfTilts);
    // prevent the user from scrolling the productSelectionMenu
    disableScrolling();

    // the dropdown menu where you can select the tilts
    var psmTiltDropdown = $('#psmTiltDropdown');
    // show the dropdown and position it above the blue text element
    psmTiltDropdown.show().position({
        my: `center top`,
        at: `center top-${psmTiltDropdown.height() + 17}`,
        of: thisObj
    }); // .hide().fadeIn(fadeDuration);

    // when the user clicks on one of the tilt options in the dropdown menu
    $('.psmTiltDropdownRow').click(function() {
        // reset all blue text elements to display "Tilt 1"
        $('.psmRowTiltSelect').each(function() {
            $(this).text('Tilt 1');
        })
        // set the blue text element to read the text of the selected dropdown item
        thisObj.text($(this).text());
        // re-enable scrolling on the productSelectionMenu
        enableScrolling();
        // hide the dropdown menu
        psmTiltDropdown.hide();
        // remove the current event listener
        $('.psmTiltDropdownRow').off('click');

        // trigger a click on the row, which automatically re-loads the product with the new tilt
        $(`.psmRow[value="${thisProduct}"]`).click();
    })
})
},{"../../radar/libnexrad/loaders_nexrad":57,"../utils":30}],22:[function(require,module,exports){
const createToolsOption = require('../../core/menu/createToolsOption');

// createMenuOption({
//     'divId': 'reloadItemDiv',
//     'iconId': 'reloadItemClass',

//     'divClass': 'mapFooterMenuItem',
//     'iconClass': 'icon-grey',

//     'contents': 'Reload',
//     'icon': 'fa fa-arrow-rotate-right',
//     'css': ''
// }, function(divElem, iconElem) {
//     window.location.reload();
// })

function reloadOption(index) {
    createToolsOption({
        'divId': 'reloadItemDiv',
        'iconId': 'reloadItemClass',

        'index': index,

        'divClass': 'mapFooterMenuItem',
        'iconClass': 'icon-grey',

        'contents': 'Reload',
        'icon': 'fa fa-arrow-rotate-right',
        'css': ''
    }, function(divElem, iconElem) {
        window.location.reload();
    })
}

module.exports = {
    reloadOption
};
},{"../../core/menu/createToolsOption":20}],23:[function(require,module,exports){
const ut = require('../utils');
const map = require('../map/map');
const terminator = require('../map/terminator/terminator');
const armFunctions = require('./atticRadarMenu');
const setLayerOrder = require('../map/setLayerOrder');
const fetchMETARData = require('../../metars/fetch_data');
const fetch_alerts_data = require('../../alerts/fetch_data');
const fetch_spc_data = require('../../spc/fetch_data');

function settingsOption(index) {
    const divElem = '#settingsItemDiv';
    const iconElem = '#settingsItemClass';

    $(iconElem).on('click', function() {
        //$('#settingsModalTrigger').click();
        armFunctions.showARMwindow();

        $('#atticRadarMenuSettingsScreen').hide();
        $('#atticRadarMenuMainScreen').show();
    })

    $('#armrSTVisBtnSwitchElem').on('click', function() {
        var isChecked = $(this).is(':checked');
        $('#dataDiv').data('stormTracksVisibility', isChecked);

        var st_layers = window.atticData.storm_track_layers;
        var tvs_layers = window.atticData.tvs_layers;
        if (!isChecked) {
            for (var item in st_layers) {
                map.setLayoutProperty(st_layers[item], 'visibility', 'none');
            }
            for (var item in tvs_layers) {
                map.setLayoutProperty(tvs_layers[item], 'visibility', 'none');
            }
        } else if (isChecked) {
            for (var item in st_layers) {
                map.setLayoutProperty(st_layers[item], 'visibility', 'visible');
            }
            for (var item in tvs_layers) {
                map.setLayoutProperty(tvs_layers[item], 'visibility', 'visible');
            }
        }
    })

    armFunctions.toggleswitchFunctions($('#armrRadarVisBtnSwitchElem'), function() {
        if (map.getLayer('baseReflectivity')) {
            map.setLayoutProperty('baseReflectivity', 'visibility', 'visible');
        }
    }, function() {
        if (map.getLayer('baseReflectivity')) {
            map.setLayoutProperty('baseReflectivity', 'visibility', 'none');
        }
    })

    armFunctions.toggleswitchFunctions($('#armrLightningVisBtnSwitchElem'), function() {
        if (map.getLayer('lightningLayer')) {
            map.setLayoutProperty('lightningLayer', 'visibility', 'visible');
        }
    }, function() {
        if (map.getLayer('lightningLayer')) {
            map.setLayoutProperty('lightningLayer', 'visibility', 'none');
        }
    })

    armFunctions.toggleswitchFunctions($('#armrSTVisBtnSwitchElem'), function() {
        var stormTrackLayers = window.atticData.stormTrackLayers;
        if (stormTrackLayers != undefined) {
            for (var i in stormTrackLayers) {
                if (map.getLayer(stormTrackLayers[i])) {
                    map.setLayoutProperty(stormTrackLayers[i], 'visibility', 'visible');
                }
            }
        }
    }, function() {
        var stormTrackLayers = window.atticData.stormTrackLayers;
        if (stormTrackLayers != undefined) {
            for (var i in stormTrackLayers) {
                if (map.getLayer(stormTrackLayers[i])) {
                    map.setLayoutProperty(stormTrackLayers[i], 'visibility', 'none');
                }
            }
        }
    })

    armFunctions.toggleswitchFunctions($('#armrDayNightLineVisBtnSwitchElem'), function() {
        terminator.toggleVisibility('show');
    }, function() {
        terminator.toggleVisibility('hide');
    })

    function _reload_alerts() {
        if ($('#alertMenuItemIcon').hasClass('icon-blue')) {
            fetch_alerts_data._fetch_data();
        }
    }
    // armFunctions.toggleswitchFunctions($('#armrEUPBtnSwitchElem'), _reload_alerts, _reload_alerts);
    armFunctions.toggleswitchFunctions($('#armrWarningsBtnSwitchElem'), _reload_alerts, _reload_alerts);
    armFunctions.toggleswitchFunctions($('#armrWatchesBtnSwitchElem'), _reload_alerts, _reload_alerts);
    armFunctions.toggleswitchFunctions($('#armrStatementsBtnSwitchElem'), _reload_alerts, _reload_alerts);
    armFunctions.toggleswitchFunctions($('#armrAdvisoriesBtnSwitchElem'), _reload_alerts, _reload_alerts);
    armFunctions.toggleswitchFunctions($('#armrOtherBtnSwitchElem'), _reload_alerts, _reload_alerts);

    // armFunctions.toggleswitchFunctions($('#armrUSAMETARSSwitchElem'), function() {
    //     fetchMETARData.fetchMETARData();
    // }, function() {
    //     fetchMETARData.fetchMETARData();
    // })

    // this is in app/alerts/drawAlertShapes.js
    //$('#showExtraAlertPolygonsCheckbox').on('click', function() {})

    armFunctions.toggleswitchFunctions($('#armrSPCOutlooksVisBtnSwitchElem'), function() {
        if (map.getLayer('spc_fill')) {
            map.setLayoutProperty('spc_fill', 'visibility', 'visible');
            map.setLayoutProperty('spc_border', 'visibility', 'visible');
        } else {
            fetch_spc_data();
        }
    }, function() {
        if (map.getLayer('spc_fill')) {
            map.setLayoutProperty('spc_fill', 'visibility', 'none');
            map.setLayoutProperty('spc_border', 'visibility', 'none');
        }
    })
}

module.exports = {
    settingsOption
};
},{"../../alerts/fetch_data":5,"../../metars/fetch_data":40,"../../spc/fetch_data":86,"../map/map":13,"../map/setLayerOrder":15,"../map/terminator/terminator":16,"../utils":30,"./atticRadarMenu":17}],24:[function(require,module,exports){
//var map = require('../map/map');
const ut = require('../utils');

var tooltipElem = $('#toolsMenuTooltip');
tooltipElem.hide();

// const tooltip = bootstrap.Tooltip.getInstance('#tooltipDiv');
// tooltip.enable();

function addAllToolsItems() {
    var n = 0;
    // require('../distance/menuItem').distanceToolsOption(n = n + 1);
    // require('../menu/settings').settingsOption(n = n + 1);
    // require('../../weather-station/menuItem').weatherstationToolsOption(n = n + 1);
    // require('../../radio/menuItem').weatherRadioToolsOption(n = n + 1);
    require('./reload').reloadOption(n = n + 1);
}

function updateTooltipPosition(divElem) {
    // https://stackoverflow.com/a/3632650/18758797
    tooltipElem.show().position({
        my: 'center',
        at: 'center',
        of: $(divElem)
    }).offset({ top: 0 });
    var bottom = $(window).height() - tooltipElem.offset().top - tooltipElem.height();
    tooltipElem.offset({ top: bottom - parseInt($('#map').css('bottom')) - 20 });
}

window.onresize = () => {
    if (tooltipElem.is(':visible')) {
        updateTooltipPosition($('#toolsItemDiv'));
    }
}

// https://stackoverflow.com/a/15191130/18758797
$.fn.animateRotate = function (angle, duration, easing, complete) {
    var args = $.speed(duration, easing, complete);
    var step = args.step;
    return this.each(function (i, e) {
        args.complete = $.proxy(args.complete, e);
        args.step = function (now) {
            $.style(e, 'transform', 'rotate(' + now + 'deg)');
            if (step) return step.apply(e, arguments);
        };

        $({ deg: 0 }).animate({ deg: angle }, args);
    });
};

function flipIcon(icon, minimizeOrMaximize) {
    function rotateThing(deg) {
        $(icon).animateRotate(deg, {
            duration: 400,
            easing: 'swing',
            complete: function () {},
            step: function () {}
        });
    }
    if (minimizeOrMaximize == 'minimize') {
        $(icon).removeClass('fa-circle-chevron-right');
        $(icon).addClass('fa-circle-chevron-up');
        rotateThing(450);
    } else if (minimizeOrMaximize == 'maximize') {
        $(icon).removeClass('fa-circle-chevron-up');
        $(icon).addClass('fa-circle-chevron-right');
        rotateThing(-450);
    }
}

addAllToolsItems();

const divElem = '#toolsItemDiv';
const iconElem = '#toolsItemClass';

$(iconElem).on('click', function() {
    if (!$(iconElem).hasClass('icon-blue')) {
        $(iconElem).addClass('icon-blue');
        $(iconElem).removeClass('icon-grey');

        flipIcon(iconElem, 'maximize');
        updateTooltipPosition(divElem);
    } else if ($(iconElem).hasClass('icon-blue')) {
        $(iconElem).removeClass('icon-blue');
        $(iconElem).addClass('icon-grey');

        flipIcon(iconElem, 'minimize');
        tooltipElem.hide();
    }
})
},{"../utils":30,"./reload":22}],25:[function(require,module,exports){
// function create_circle_with_text(text, circle_color, text_color, width_height, font_size_scale) {
//     // Create a canvas element
//     const canvas = document.createElement('canvas');
//     canvas.width = width_height;
//     canvas.height = width_height;

//     // Get the 2D rendering context
//     const ctx = canvas.getContext('2d');

//     // Clear the entire canvas to make the background transparent
//     ctx.clearRect(0, 0, canvas.width, canvas.height);

//     // Set circle properties
//     const radius = Math.min(canvas.width, canvas.height) / 2;
//     const center_x = canvas.width / 2;
//     const center_y = canvas.height / 2;

//     // Draw the circle
//     ctx.beginPath();
//     ctx.arc(center_x, center_y, radius, 0, 2 * Math.PI);
//     ctx.fillStyle = circle_color;
//     ctx.fill();

//     // Set text properties
//     const number = text; // Replace with your desired number
//     const font_size = radius * font_size_scale; // Adjust the proportion as needed
//     const font_family_from_css = getComputedStyle(document.body).fontFamily;
//     ctx.font = `bold ${font_size}px ${font_family_from_css}`;
//     ctx.fillStyle = text_color;
//     ctx.textAlign = 'center';

//     // Calculate the corrected vertical position for the text
//     const metrics = ctx.measureText(number);
//     const text_width = metrics.width;
//     const text_height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;
//     const text_x = center_x;
//     const text_y = center_y + (text_height / 2);

//     // Draw the number in the center
//     ctx.fillText(number, text_x, text_y);

//     // Return the canvas as PNG data
//     return canvas.toDataURL('image/png');
// }

function _get_font_metrics(text, width_height, font_size_scale, font_family_from_css) {
    const canvas = document.createElement('canvas');
    canvas.width = width_height;
    canvas.height = width_height;

    // Get the 2D rendering context
    const ctx = canvas.getContext('2d');

    // Set circle properties
    const radius = Math.min(canvas.width, canvas.height) / 2;
    const center_x = canvas.width / 2;
    const center_y = canvas.height / 2;

    // Set text properties
    const number = text; // Replace with your desired number
    const font_size = radius * font_size_scale; // Adjust the proportion as needed
    ctx.font = `bold ${font_size}px ${font_family_from_css}`;
    ctx.fillStyle = 'black';
    ctx.textAlign = 'center';

    // Calculate the corrected vertical position for the text
    const metrics = ctx.measureText(number);
    const text_width = metrics.width;
    const text_height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;
    const text_x = center_x;
    const text_y = center_y + (text_height / 2);

    return [text_x, text_y];
}

function create_circle_with_text(text, circle_color, text_color, width_height, font_size_scale) {
    // Get the font family from the CSS
    const font_family_from_css = getComputedStyle(document.body).fontFamily;

    // Create an SVG element
    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
    svg.setAttribute('width', width_height);
    svg.setAttribute('height', width_height);

    // Create the circle element
    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
    circle.setAttribute('cx', width_height / 2);
    circle.setAttribute('cy', width_height / 2);
    circle.setAttribute('r', width_height / 2);
    circle.setAttribute('fill', circle_color);

    const [text_x, text_y] = _get_font_metrics(text, width_height, font_size_scale, font_family_from_css);

    // Create the text element
    const text_element = document.createElementNS('http://www.w3.org/2000/svg', 'text');
    text_element.setAttribute('x', text_x);
    text_element.setAttribute('y', text_y);
    text_element.setAttribute('fill', text_color);
    text_element.setAttribute('font-size', width_height * (font_size_scale / 2));
    text_element.setAttribute('text-anchor', 'middle');
    // text_element.setAttribute('dominant-baseline', 'middle');
    // text_element.setAttribute('alignment-baseline', 'middle');
    text_element.setAttribute('font-family', font_family_from_css);
    text_element.setAttribute('font-weight', 'bold');
    text_element.textContent = text;

    // Append the circle and text elements to the SVG
    svg.appendChild(circle);
    svg.appendChild(text_element);

    // Return the SVG data
    const serializer = new XMLSerializer();
    const svg_data = serializer.serializeToString(svg);
    return 'data:image/svg+xml,' + encodeURIComponent(svg_data);
}

module.exports = create_circle_with_text;
},{}],26:[function(require,module,exports){
const display_attic_dialog = require('../menu/attic_dialog');

function in_iframe() {
    try {
        return window.self !== window.top;
    } catch (e) {
        return true;
    }
}

if (in_iframe()) {
    const html_content = 
`<div style="text-align: center; padding-left: 20px; padding-right: 20px">
<div style="font-size: 20px"><b>Hey!</b></div>
<div style="font-size: 15px">I see that you're loading AtticRadar from an iframe. \
<b>Don't worry!</b> That's totally fine! \
<b>However</b>, this project was made by an independent developer - a high school student! \
So I do think you'd agree that giving credit isn't objectionable here!

You can find AtticRadar on Twitter: <a href="https://twitter.com/AtticRadar" style="color: #53a2e0;">@AtticRadar</a>
Hi, I'm Andrew, the developer! You can find me on Twitter too: <a href="https://twitter.com/Attic_Stairs" style="color: #53a2e0;">@Attic_Stairs</a>

Want the source code? Look no further! Feel free to contribute on GitHub: <a href="https://github.com/SteepAtticStairs/AtticRadar" style="color: #53a2e0;">https://github.com/SteepAtticStairs/AtticRadar</a> \
Opening issues is very helpful to me, and I do encourage it if you have a specific concern or request.

AtticRadar is free to use and doesn't have any ads. \
I hope that you enjoy the app, and feel free to shoot me a message on twitter if you have a question! \
My email is also open: <a href="mailto:steepatticstairs@gmail.com" style="color: #53a2e0;">steepatticstairs@gmail.com</a>
</div>
</div>`

    display_attic_dialog({
        'title': 'Notice',
        'body': html_content,
        'color': 'rgb(120, 120, 120)',
        'textColor': 'black',
    })
}
},{"../menu/attic_dialog":18}],27:[function(require,module,exports){
// https://stackoverflow.com/a/3515130
// http://detectmobilebrowsers.com

var isMobile;
function checkBrowser(agent) {
    if (
        /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
            agent
        ) ||
        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
            agent.substr(0, 4)
        )
    )
    isMobile = true;
    else {
        isMobile = false;
    }
}
checkBrowser(navigator.userAgent || navigator.vendor || window.opera);

module.exports = isMobile;
},{}],28:[function(require,module,exports){
const luxon = require('luxon');

// https://stackoverflow.com/a/544429/18758797
function get_date_diff_obj(date1, date2) {
    // var diff = Date.parse( date2 ) - Date.parse( date1 );
    // var isNegative = (diff < 0);
    // if (isNegative) {
    //     // negative
    //     diff = Math.abs(diff);
    // }
    // return isNaN( diff ) ? NaN : {
    //     //diff : diff,
    //     ms : Math.floor( diff            % 1000 ),
    //     s  : Math.floor( diff /     1000 %   60 ),
    //     m  : Math.floor( diff /    60000 %   60 ),
    //     h  : Math.floor( diff /  3600000 %   24 ),
    //     d  : Math.floor( diff / 86400000        ),
    //     mo  : Math.floor( diff / 2629746000     ),
    //     y  : Math.floor( diff / 31536000000     ),
    //     negative: isNegative
    // }

    date1 = luxon.DateTime.fromJSDate(date1);
    date2 = luxon.DateTime.fromJSDate(date2);

    const diff = date2.diff(date1, ['years', 'months', 'days', 'hours', 'minutes', 'seconds', 'milliseconds']);
    const duration = luxon.Duration.fromObject(diff.toObject());
    return duration.toObject();
}

/**
 * Function to calculate the difference between two date objects.
 * 
 * @param {Date} date_obj The date object to begin with.
 * This function will calculate the difference between the passed date object and the current time.
 * @param {String} usage This is a parameter that defines how the function will classify 'old' versus 'new'.
 * The two options are 'radar_message' and 'radar_plot', which adjust the age range to better fit the situation.
 * @returns {Object} An object with two paramaters:
 * 'formatted' - a string with the formatted date difference, e.g. '4m 16s'
 * 'class' - a string that contains the class you would apply to an HTML element to give it the appropriate color for its age.
 */
function get_date_diff(date_obj, usage) {
    const date_diff = get_date_diff_obj(date_obj, new Date());
    const duration = luxon.Duration.fromObject(date_diff);
    const duration_minutes = duration.shiftTo('minutes').toObject().minutes;

    var formatted_date_diff;
    var age_class;
    if (duration.as('seconds') >= 1) { formatted_date_diff = `${date_diff.seconds}s`; }
    if (duration.as('minutes') >= 1) { formatted_date_diff = `${date_diff.minutes}m ${date_diff.seconds}s`; }
    if (duration.as('hours') >= 1) { formatted_date_diff = `${date_diff.hours}h ${date_diff.minutes}m`; }
    if (duration.as('days') >= 1) { formatted_date_diff = `${date_diff.days}d ${date_diff.hours}h`; }
    if (duration.as('months') >= 1) { formatted_date_diff = `${date_diff.months}mo ${date_diff.days}d`; }
    if (duration.as('years') >= 1) { formatted_date_diff = `${date_diff.years}y ${date_diff.months}mo`; }

    if (usage == 'radar_message') {
        // 0 days
        if (duration_minutes < 1440) { age_class = 'new-file'; }
    } else if (usage == 'radar_plot') {
        // less than 0 hours 10 minutes
        if (duration_minutes < 10) { age_class = 'new-file'; }
    }

    if (usage == 'radar_message') {
        // greater than or equal to 1 days but less than 3 days
        if (duration_minutes >= 1440 && duration_minutes < 4320) { age_class = 'recent-file'; }
    } else if (usage == 'radar_plot') {
        // greater than or equal to 0 hours 10 minutes
        if (duration_minutes >= 10) { age_class = 'recent-file'; }
    }

    if (usage == 'radar_message') {
        // greater than or equal to 3 days
        if (duration_minutes >= 4320) { age_class = 'old-file'; }
    } else if (usage == 'radar_plot') {
        // greater than or equal to 0 hours 30 minutes
        if (duration_minutes >= 30) { age_class = 'old-file'; }
    }

    // we don't want a color if we're in file upload mode
    if (usage == 'radar_plot' && window.atticData.from_file_upload) {
        age_class = '';
    }

    return {
        'formatted': formatted_date_diff,
        'class': age_class
    }
}

module.exports = {
    get_date_diff,
    get_date_diff_obj
};
},{"luxon":111}],29:[function(require,module,exports){
const ut = require('../utils');
const chroma = require('chroma-js');

const low_temp = 'rgb(247, 198, 251)';
const high_temp = 'rgb(163, 8, 148)';
const temp_colors_dictionary = {
    '0': low_temp,
    '10': 'rgb(204, 120, 214)',
    '20': 'rgb(137, 67, 177)',
    '30': 'rgb(55, 30, 149)',
    '40': 'rgb(78, 167, 222)',
    '50': 'rgb(99, 214, 148)',
    '60': 'rgb(114, 197, 60)',
    '70': 'rgb(251, 251, 86)',
    '80': 'rgb(236, 135, 51)',
    '90': 'rgb(192, 56, 30)',
    '100': 'rgb(237, 14, 133)',
    '110': 'rgb(237, 14, 215)',
    '120': high_temp
}
const temperatures = Object.keys(temp_colors_dictionary).map(Number);
const colors = Object.values(temp_colors_dictionary);

const min_temp = Math.min(...temperatures);
const max_temp = Math.max(...temperatures);

const chroma_scale = chroma.scale(colors).domain(temperatures).mode('lab');

function _determine_contrast(color) {
    // this should actually be 0.4, i believe
    return chroma(color).luminance() > 0.3 ? 'black' : 'white';
}

function getTempColor(temp_val) {
    temp_val = parseInt(temp_val);

    var color;
    if (temp_val < min_temp) {
        color = low_temp;
    } else if (temp_val > max_temp) {
        color = high_temp;
    } else {
        color = chroma_scale(temp_val);
    }

    const contrast_color = _determine_contrast(color);

    return [color, contrast_color];
    // return {
    //     'background_color': color,
    //     'text_color': _determine_contrast(color)
    // }
}

module.exports = getTempColor;
},{"../utils":30,"chroma-js":110}],30:[function(require,module,exports){
(function (Buffer){(function (){
/*
* https://nordicapis.com/10-free-to-use-cors-proxies/
* https://allorigins.win/
*/
// https://attic-server.herokuapp.com/proxy/index.php/?

const map = require('./map/map');

// https://php-cors-proxy.herokuapp.com/?
const phpProxy = 'https://attic-server.herokuapp.com/proxy/index.php/?'; //https://api.allorigins.win/raw?url=';
const phpProxy2 = 'https://attic-server.herokuapp.com/proxy/index.php/?'; // http://127.0.0.1:3333/server/AtticServer/proxy/?
//const phpProxy  = 'https://salty-citadel-44916.herokuapp.com/';
//const phpProxy  = 'https://secret-retreat-45871.herokuapp.com/'
//const phpProxy  = 'https://circumvent-cors.herokuapp.com/';
//const phpProxy = 'https://php-cors.000webhostapp.com/?';
//const phpProxy = 'https://php-cors-proxy.herokuapp.com/?';

const colors = {
    'red': 'rgb(255, 0, 0)',
    'darkRed': 'rgb(170, 0, 0)',

    'green': 'rgb(17, 167, 17)',
    'darkGreen': 'rgb(13, 118, 13)',

    'blue': 'rgb(92, 157, 255)',
    'darkBlue': 'rgb(27, 78, 155)',
}

function toBuffer(ab) {
    const buf = Buffer.alloc(ab.byteLength);
    const view = new Uint8Array(ab);
    for (let i = 0; i < buf.length; ++i) {
        buf[i] = view[i];
    }
    return buf;
}

function printFancyTime(dateObj, tz) {
    var timeZ = new Date().toLocaleTimeString(undefined, {timeZoneName: 'short'}).split(' ')[2];
    if (tz == 'UTC') {
        timeZ = 'UTC';
    }
    return dateObj.toLocaleDateString(undefined, {timeZone: tz}) + " " + dateObj.toLocaleTimeString(undefined, {timeZone: tz}) + ` ${timeZ}`;
}
function printHourMin(dateObj, tz) {
    return dateObj.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true, timeZone: tz })
}
const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;

function addMinutes(date, minutes) {
    return new Date(date.getTime() + minutes*60000);
}
function msToTime(s) {
    // Pad to 2 or 3 digits, default is 2
    function pad(n, z) {
        z = z || 2;
        return ('00' + n).slice(-z);
    }
    var ms = s % 1000;
    s = (s - ms) / 1000;
    var secs = s % 60;
    s = (s - secs) / 60;
    var mins = s % 60;
    var hrs = (s - mins) / 60;
    return {
        'hours': pad(hrs),
        'minutes': pad(mins),
        'seconds': pad(secs),
        'milliseconds': pad(ms, 3),
    }
    //return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + pad(ms, 3);
}
function round(value, precision) {
    var multiplier = Math.pow(10, precision || 0);
    return Math.round(value * multiplier) / multiplier;
}
function findTerminalCoordinates(startLat, startLng, distanceNM, bearingDEG) {
    var metersInNauticalMiles = 1852;
    var startPoint = { latitude: startLat, longitude: startLng };
    var distanceMeters = distanceNM * metersInNauticalMiles;
    var bearing = bearingDEG;
    const destination = geolib.computeDestinationPoint(
        startPoint,
        distanceMeters,
        bearing 
    );
    return destination;
}

function logToModal(textContent) {
    console.log(textContent);
    function openMessageModal() {
        $("#messageDialog").dialog({
            modal: true,
            // https://stackoverflow.com/a/30624445/18758797
            open: function () {
                $(this).parent().css({
                    position: 'absolute',
                    top: 10,
                    maxHeight: '70vh',
                    overflow: 'scroll'
                });
            },
        });
    }
    if (!($("#messageDialog").dialog('instance') == undefined)) {
        // message box is already initialized
        if (!$('#messageDialog').closest('.ui-dialog').is(':visible')) {
            // message box is initialized but hidden - open it
            openMessageModal();
        }
    } else if ($("#messageDialog").dialog('instance') == undefined) {
        // message box is not initialized, open it
        openMessageModal();
    }
    $('#messageBox').append(`<div>${textContent}</div>`);
    $("#messageBox").animate({ scrollTop: $("#messageBox")[0].scrollHeight }, 0);
}

function xmlToJson(xml) {
    if (typeof xml == "string") {
        parser = new DOMParser();
        xml = parser.parseFromString(xml, "text/xml");
    }
    // Create the return object
    var obj = {};
    // console.log(xml.nodeType, xml.nodeName );
    if (xml.nodeType == 1) { // element
        // do attributes
        if (xml.attributes.length > 0) {
            obj["@attributes"] = {};
            for (var j = 0; j < xml.attributes.length; j++) {
                var attribute = xml.attributes.item(j);
                obj["@attributes"][attribute.nodeName] = attribute.nodeValue;
            }
        }
    }
    else if (xml.nodeType == 3 ||
        xml.nodeType == 4) { // text and cdata section
        obj = xml.nodeValue
    }
    // do children
    if (xml.hasChildNodes()) {
        for (var i = 0; i < xml.childNodes.length; i++) {
            var item = xml.childNodes.item(i);
            var nodeName = item.nodeName;
            if (typeof (obj[nodeName]) == "undefined") {
                obj[nodeName] = xmlToJson(item);
            } else {
                if (typeof (obj[nodeName].length) == "undefined") {
                    var old = obj[nodeName];
                    obj[nodeName] = [];
                    obj[nodeName].push(old);
                }
                if (typeof (obj[nodeName]) === 'object') {
                    obj[nodeName].push(xmlToJson(item));
                }
            }
        }
    }
    return obj;
}
function formatBytes(bytes, decimals = 2) {
    if (bytes === 0) return '0 Bytes';

    var k = 1024;
    var dm = decimals < 0 ? 0 : decimals;
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

    var i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
}

function colorLog(content, color, otherCss) {
    // https://stackoverflow.com/a/13017382
    // console.log('%cHello', 'color: green');
    console.log(`%c${content}`, `color: ${color}; ${otherCss}`);
}

const Elem = e => ({
    tagName: 
        e.tagName,
    textContent:
        e.textContent,
    attributes:
        Array.from(e.attributes, ({name, value}) => [name, value]),
    children:
        Array.from(e.children, Elem)
})
const html2json = e =>
    JSON.stringify(Elem(e), null, '  ')

var tiltObject = {
    'tilt1': {
        'ref': 'N0B',
        'N0B': 'N0B',
        'vel': 'N0G',
        'N0G': 'N0G',
        'lowres-ref': 'p94r0',
        'lowres-vel': 'p99v0',
        'rho': 'N0C',
        'zdr': 'N0X',
        'sw ': 'p30sw',
        'hhc': 'HHC',
        'hyc': 'N0H',
        'srv': 'N0S',
        'vil': '134il',
        'sti': 'NST',
        'mcy': 'NMD',
        'sr-ref': 'TZ0',
        'lr-ref': 'TZL',
        'tdwrVel': 'TV0',
    },
    'tilt2': {
        'ref': 'N1B',
        'N0B': 'N1B',
        'vel': 'NAG',
        'N0G': 'NAG',
        'lowres-ref': 'p94r1',
        'lowres-vel': 'p99v1',
        'rho': 'N1C',
        'zdr': 'N1X',
        'sw ': 'p30sw',
        'hhc': 'HHC',
        'hyc': 'N1H',
        'srv': 'N1S',
        'vil': '134il',
        'sti': 'NST',
        'sr-ref': 'TZ1',
        'tdwrVel': 'TV1',
    },
    'tilt3': {
        'ref': 'N2B',
        'N0B': 'N2B',
        'vel': 'N1G',
        'N0G': 'N1G',
        'lowres-ref': 'p94r2',
        'lowres-vel': 'p99v2',
        'rho': 'N2C',
        'zdr': 'N2X',
        'sw ': 'p30sw',
        'hhc': 'HHC',
        'hyc': 'N2H',
        'srv': 'N2S',
        'vil': '134il',
        'sti': 'NST',
        'sr-ref': 'TZ2',
        'tdwrVel': 'TV2',
    },
    'tilt4': {
        'ref': 'N3B',
        'N0B': 'N3B',
        'vel': 'N3G',
        'N0G': 'N3G',
        'lowres-ref': 'p94r3',
        'lowres-vel': 'p99v3',
        'rho': 'N3C',
        'zdr': 'N3X',
        'sw ': 'p30sw',
        'hhc': 'HHC',
        'hyc': 'N3H',
        'srv': 'N3S',
        'vil': '134il',
        'sti': 'NST',
    },
}
var numOfTiltsObj = {
    'ref': [1, 2, 3, 4],
    'vel': [1, 2, 3],
    'lowres-ref': [1, 2, 3, 4],
    'lowres-vel': [1, 2, 3, 4],
    'rho': [1, 2, 3, 4],
    'zdr': [1, 2, 3, 4],
    'sw ': [1],
    'hhc': [1],
    'hyc': [1, 2, 3, 4],
    'srv': [1, 2, 3, 4],
    'vil': [1],
    'sti': [1],
    'sr-ref': [1, 2, 3],
    'lr-ref': [1],
    'tdwrVel': [1, 2, 3],
}
var allL2Btns = [
    'l2-ref',
    'l2-vel',
    'l2-rho',
    'l2-phi',
    'l2-zdr',
    'l2-sw '
];

// https://wdssii.nssl.noaa.gov/web/wdss2/products/radar/systems/w2vcp.shtml
// https://www.weather.gov/jetstream/vcp_max
// https://www.roc.noaa.gov/WSR88D/Operations/VCP.aspx
var vcpObj = {
    '12': 'Precip Mode',
    '31': 'Clean Air Mode',
    '32': 'Clean Air Mode',
    '35': 'Clean Air Mode',
    '112': 'Precip Mode',
    '121': 'Precip Mode',
    '212': 'Precip Mode',
    '215': 'Precip Mode',

    '80': 'Precip Mode',
    '90': 'Precip Mode',
}

var productUnits = {
    'REF': 'dBZ', // level 2 reflectivity
    'VEL': 'm/s', // level 2 velocity
    'SW ': 'mph', // level 2 spectrum width
    'ZDR': 'dB', // level 2 differential reflectivity
    'RHO': '%', // level 2 correlation coefficient
    'PHI': 'deg', // level 2 differential phase shift

    'N0B': 'dBZ', // super-res reflectivity
    'N0G': 'm/s', // super-res velocity
    'N0C': '%', // correlation coefficient
    'N0X': 'dB', // differential reflectivity
    'NSW': 'mph', // spectrum width
    'NXQ': 'dBZ', // digital reflectivity
    'N0U': 'm/s', // digital base velocity
    'DVL': 'kg/m²', // vertically integrated liquid
    'N0S': 'knots', // storm relative velocity

    'TZX': 'dBZ', // tdwr short-range reflectivity
    'TZL': 'dBZ', // tdwr long-range reflectivity
    'TVX': 'm/s', // tdwr base velocity
}

function blobToString(b) {
    var u, x;
    u = URL.createObjectURL(b);
    x = new XMLHttpRequest();
    x.open('GET', u, false); // although sync, you're not fetching over internet
    x.send();
    URL.revokeObjectURL(u);
    return x.responseText;
}

function addDays(startDateObj, daysToAdd) {
    var date = startDateObj;
    date.setDate(date.getDate() + daysToAdd);
    return date;
}

// https://stackoverflow.com/a/23202637
function scale(number, inMin, inMax, outMin, outMax) {
    return (number - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;
}

/**
* Various functions to do with the progress bar.
*
* @param {any} whatToDo - What action to perform to the progress bar.

'set': sets the bar to a fixed value. e.g. progressBarVal('set', 36);

'add': adds a value to the current progress bar value. e.g. progressBarVal('add', 14.7);

'getRemaining': gets the amount of space left on the progress bar until it is full. e.g. console.log(progressBarVal('getRemaining'));

* @param {any} value - The value specifying how much to set / add / etc. Not required for all actions.
*/
function progressBarVal(whatToDo, value) {
    if (whatToDo == 'set') {
        var actualPercent = value;
        if (value > 1000) {
            actualPercent = scale(value, 0, 150, 0, $('#progBar').attr('aria-valuemax'));
            console.log(actualPercent);
        }
        $('#progBar').css('width', actualPercent + '%').attr('aria-valuenow', value);
    } else if (whatToDo == 'add') {
        var curVal = $('#progBar').attr('aria-valuenow');
        $('#progBar').css('width', (value + parseInt(curVal)) + '%').attr('aria-valuenow', (value + parseInt(curVal)));
    } else if (whatToDo == 'getRemaining') {
        var curVal = $('#progBar').attr('aria-valuenow');
        var totalVal = $('#progBar').attr('aria-valuemax');
        return totalVal - curVal;
    } else if (whatToDo == 'hide') {
        $('#progBarParent').hide();
    } else if (whatToDo == 'show') {
        $('#progBarParent').show();
    } else if (whatToDo == 'label') {
        console.log(value);
        document.getElementById('progBar').innerHTML = value;
    }
}
function getDividedArray(num) {
    var divider = 4;
    var finishedArr = [];
    for (var i = 1; i < divider + 1; i++) {
        finishedArr.push((num / divider) * i);
    }
    return finishedArr;
}

const tideChartDivName = 'container';

// https://dev.to/kapantzak/waiting-for-visible-element-4ck9
function elementVisible(elem) {
    return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
}
function waitVisible(elem, callback, timeout) {
    let timer = setInterval(() => {
        if (elementVisible(elem)) {
            callback();
            clearInterval(timer);
            timer = null;
        }
    }, 10);
    const tm = timeout || 5000;
    setTimeout(() => {
        if (timer) {
            clearInterval(timer);
        }
    }, tm);
}

function flyToStation() {
    var map = require('./map/map');

    var shtation = document.getElementById('fileStation').innerHTML;
    $.getJSON('./resources/radarStations.json', function(data) {
		var statLat;
		var statLng;
		if (data.hasOwnProperty(shtation)) {
			statLat = data[shtation][1];
			statLng = data[shtation][2];
		} else {
			var fileNameStation = $('#dataDiv').data('fileName').slice(0, 4);
			statLat = data[fileNameStation][1];
			statLng = data[fileNameStation][2];
		}
		// map.flyTo({
        //     center: [statLng, statLat],
        //     zoom: 8,
        //     duration: 1000,
        // });
    });
}

function disableModeBtn() {
    $('#dataDiv').data('noMoreClicks', true);
    $('#modeMenuItem').css({
        "-webkit-filter": "brightness(75%)",
        "filter": "brightness(75%)"
    });
}

function knotsToMph(knots, decimals) {
    return (knots * 1.151).toFixed(decimals);
}
// https://stackoverflow.com/a/25867068/18758797
function degToCompass(num, icons) {
    var val = Math.floor((num / 22.5) + 0.5);
    var arr = ["N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW"];
    if (icons == true) {
        arr = ["↑ N", "↑↗ NNE", "↗ NE", "→↗ ENE", "→ E", "↘→ ESE", "↘ SE", "↓↘ SSE", "↓ S", "↙↓ SSW", "↙ SW", "←↙ WSW", "← W", "↖← WNW", "↖ NW", "↖↑ NNW"];
    }
    return arr[(val % 16)];
}
// https://gist.github.com/basarat/4670200?permalink_comment_id=2067650#gistcomment-2067650
function getCardinalDirection(angle) {
    if (typeof angle === 'string') angle = parseInt(angle);
    if (angle <= 0 || angle > 360 || typeof angle === 'undefined') return '☈';
    const arrows = { north: '↑ N', north_east: '↗ NE', east: '→ E', south_east: '↘ SE', south: '↓ S', south_west: '↙ SW', west: '← W', north_west: '↖ NW' };
    const directions = Object.keys(arrows);
    const degree = 360 / directions.length;
    angle = angle + degree / 2;
    for (let i = 0; i < directions.length; i++) {
      if (angle >= (i * degree) && angle < (i + 1) * degree) return arrows[directions[i]];
    }
    return arrows['north'];
}

function preventFileCaching(url) {
    var curTime = new Date();
    return url += `&?nocache=${curTime.getTime()}`;
}

var sshwsValues = [
    ['Tropical Depression', '#348feb', 'TD'],
    ['Tropical Storm', '#12cc47', 'TS'],
    ['Category 1', '#ebcb2f', 'C1'],
    ['Category 2', '#eb932f', 'C2'],
    ['Category 3', '#eb642f', 'C3'],
    ['Category 4', '#eb3b2f', 'C4'],
    ['Category 5', '#eb2f87', 'C5'],
    ['Other', 'rgb(183, 94, 255)', 'Other'],
    ['Unknown', 'rgb(128, 128, 128)', '?']
]
function getSSHWSVal(windSpeed) {
    if (windSpeed <= 38) {
        return sshwsValues[0]; // TD
    } else if (windSpeed >= 39 && windSpeed <= 73) {
        return sshwsValues[1]; // TS
    } else if (windSpeed >= 74 && windSpeed <= 95) {
        return sshwsValues[2]; // C1
    } else if (windSpeed >= 96 && windSpeed <= 110) {
        return sshwsValues[3]; // C2
    } else if (windSpeed >= 111 && windSpeed <= 129) {
        return sshwsValues[4]; // C3
    } else if (windSpeed >= 130 && windSpeed <= 156) {
        return sshwsValues[5]; // C4
    } else if (windSpeed >= 157) {
        return sshwsValues[6]; // C5
    } else if (windSpeed == 'Other') {
        return sshwsValues[7]
    } else if (windSpeed == 'Unknown') {
        return sshwsValues[8]
    }
}
// https://www.nrlmry.navy.mil/atcf_web/docs/database/new/abdeck.txt
// DB - disturbance, 
// TD - tropical depression, 
// TS - tropical storm, 
// TY - typhoon, 
// ST - super typhoon, 
// TC - tropical cyclone, 
// HU - hurricane, 
// SD - subtropical depression,
// SS - subtropical storm,
// EX - extratropical systems,
// PT - post tropical,
// IN - inland,
// DS - dissipating,
// LO - low,
// WV - tropical wave,
// ET - extrapolated,
// MD - monsoon depression,
// XX - unknown.
var hurricaneTypesAbbvs = {
    'DB': 'Disturbance',
    'TD': 'Tropical Depression',
    'TS': 'Tropical Storm',
    'TY': 'Typhoon',
    'ST': 'Super Typhoon',
    'TC': 'Tropical Cyclone',
    'HU': 'Hurricane',
    'SD': 'Subtropical Depression',
    'SS': 'Subtropical Storm',
    'EX': 'Extratropical System',
    'PT': 'Post Tropical',
    'IN': 'Inland',
    'DS': 'Dissipating',
    'LO': 'Low Pressure Area',
    'WV': 'Tropical Wave',
    'ET': 'Extrapolated',
    'MD': 'Monsoon Depression',
    'XX': 'Unknown',
    'EXPT': 'Extratropical / Post-Tropical'
}

function spawnModal(options) {
    var title = options.title;
    var headerColor = options.headerColor;
    var body = options.body;
    var css = options.css;

    var modalContent =
        `<div class="modal fade" tabindex="-1" aria-labelledby="jsModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header alert ${headerColor}">
                        <h5 class="modal-title">${title}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" style="${css}">${body}</div>
                </div>
            </div>
        </div>`

    var domObj = $(modalContent);
    domObj.modal('show');
}

function betterProgressBar(whatToDo, value) {
    function setWidth(percent) {
        $('#progressBar').animate({
            width: `${percent}%`
        }, 0);
    }

    if (whatToDo == 'set') {
        setWidth(value);
    } else if (whatToDo == 'add') {
        // https://stackoverflow.com/a/23236691/18758797
        var w = $('#progressBar').css('width').slice(0, -2);
        var ww = $(window).width();
        var curVal = w / ww * 100;

        setWidth(value + parseFloat(curVal));
    } else if (whatToDo == 'getRemaining') {
        var curVal = $('#progressBar').css('width');
        var totalVal = 100;
        return totalVal - parseInt(curVal);
    } else if (whatToDo == 'hide') {
        $('#progressBar').hide();
    } else if (whatToDo == 'show') {
        $('#progressBar').show();
    } else if (whatToDo == 'label') {
        //console.log(value);
        //document.getElementById('progBar').innerHTML = value;
    }
}

function CtoF(val) {
    return (val * 1.8) + 32;
}
function MBtoINHG(val) {
    return val / 33.864;
}

function getRadialConstants(radVersion) {
    var gateRes;
    var multiplier;
    // different gate resolutions for hi-res vs non hi-res data
    if (radVersion == "01") {
        // version 01 is non hi-res data
        gateRes = 2000;
        multiplier = gateRes*8;
    } else if (radVersion == "E2") {
        // version 01 is non hi-res data
        gateRes = 500;
        multiplier = gateRes*32;
    } else if (radVersion == "08") {
        // version 08 is level 2 TDWR
        gateRes = 150;
        multiplier = gateRes*1.2;
    } else if (radVersion == "l3") {
        // version l3 is level 3 data
        gateRes = 125;
        multiplier = gateRes*2;
    } else if (radVersion == "NXQ" || radVersion == "N0S") {
        // different resolution for l3 base reflectivity
        gateRes = 500;
        multiplier = gateRes*2;
    } else if (radVersion == "DVL" || radVersion == "NSW") {
        // different resolution for vertically integrated liquid
        gateRes = 500;
        multiplier = gateRes*2;
    } else if (radVersion == "TZX") {
        // different resolution for TDWR short-range reflectivity
        gateRes = 73.7;
        multiplier = gateRes*2;
        // gateRes = parseFloat($('#gateRes').val());
        // multiplier = gateRes*parseFloat($('#multiplier').val());
    } else if (radVersion == "TVX") {
        // different resolution for TDWR base velocity
        gateRes = 73.7;
        multiplier = gateRes*2;
        // gateRes = parseFloat($('#gateRes').val());
        // multiplier = gateRes*parseFloat($('#multiplier').val());
    } else if (radVersion == "TZL") {
        // different resolution for TDWR long-range reflectivity
        gateRes = 150;
        multiplier = gateRes*2;
    } else {
        // everything else (new l2 files - hi-res)
        gateRes = 125;
        multiplier = gateRes*2;
    }

    return {
        gateRes,
        multiplier
    }
}

// https://stackoverflow.com/a/544429/18758797
function getDateDiff(date1, date2) {
    var diff = Date.parse( date2 ) - Date.parse( date1 );
    var isNegative = (diff < 0);
    if (isNegative) {
        // negative
        diff = Math.abs(diff);
    }
    return isNaN( diff ) ? NaN : {
        //diff : diff,
        ms : Math.floor( diff            % 1000 ),
        s  : Math.floor( diff /     1000 %   60 ),
        m  : Math.floor( diff /    60000 %   60 ),
        h  : Math.floor( diff /  3600000 %   24 ),
        d  : Math.floor( diff / 86400000        ),
        negative: isNegative
    }
}

function csvToJson(csv) {
    function onlySpaces(str) { return str.trim().length === 0; }

    var obj = {};
    var rows = csv.split('\n');
    for (var row in rows) {
        var curRowItem = rows[row].split(',');
        for (var i in curRowItem) {
            curRowItem[i] = curRowItem[i].replace(/ /g, '')
        }
        obj[row] = curRowItem;
    }
    return obj;
}

function animateBrightness(startVal, stopVal, duration, div) {
    // https://stackoverflow.com/a/20082518/18758797
    $({blurRadius: startVal}).animate({blurRadius: stopVal}, {
        duration: duration,
        easing: 'linear',
        step: function() {
            $(div).css({
                "-webkit-filter": "brightness("+this.blurRadius+"%)",
                "filter": "brightness("+this.blurRadius+"%)"
            });
        }
    });
}

function haMapControlActions(mode, value) {
    if (mode == 'show') {
        $('#hurricaneArchiveMapControl').show();
        if ($('#dataDiv').data('isHaControlMinimized')) { $('#haMapControlMinimize').click() }
    } else if (mode == 'hide') {
        //if (!$('#dataDiv').data('isHaControlMinimized')) { $('#haMapControlMinimize').click() }
        $('#hurricaneArchiveMapControl').hide();
        $('#haMapControlText').hide();
    } else if (mode == 'text') {
        $('#haMapControlText').show();
        document.getElementById('haMapControlText').innerHTML = value;
    }
}

function zeroPad(num, length) {
    length = length || 2; // defaults to 2 if no parameter is passed
    return (new Array(length).join('0') + num).slice(length*-1);
}

function setMapMargin(topOrBottom, value) {
    if (topOrBottom == 'top') {
        $('#map').css('top', value);
        $('.colorPickerCircle').css('top', value);
    } else if (topOrBottom == 'bottom') {
        $('#map').css('bottom', value);
        $('.colorPickerCircle').css('bottom', value);
        $('#colorPickerText').css('bottom', value - 80);
    }
    map.resize();

    // $('#colorPicker #colorPickerText').position({
    //     my: 'center',
    //     at: 'center',
    //     of: $('#map')
    // })
}

function displayAtticDialog(options) {
    var title = options.title;
    var body = options.body;
    var color = options.color;
    var textColor = options.textColor;

    $('#atcDlg').show();

    $('#atcDlgHeaderText').html(title);
    $('#atcDlgHeader').css('background-color', color);
    //$('#atticDialogHeaderContainer').css('background-color', color);
    $('#atcDlgHeader').css('color', textColor);
    $('#atcDlgClose').css('color', textColor);

    $('#atcDlgBody').scrollTop(0);
    $('#atcDlgBody').html(body);

    // const headerHeight = $('#atticDialogHeaderContainer').height();
    // var contentHeight = 0;
    // $('#atticDialogBody').children().each(function() { contentHeight = contentHeight + $(this).height() })
    //$('#atticDialogContainer').height(headerHeight + contentHeight);
    // var bodyHeight = $('#atticDialogBody').outerHeight();
    // console.log(bodyHeight)
    // $('#atticDialogContainer').height(bodyHeight);
}

function scaleValues(values, product) {
    if (product == 'N0G' || product == 'N0U' || product == 'TVX' || product == 'VEL') {
        // velocity - convert from knots (what is provided in the colortable) to m/s (what the radial gates are in)
        for (var i in values) { if (values[i] != -999) { values[i] = values[i] / 1.944 } }
    } else if (product == 'N0S') {
        // storm relative velocity
        for (var i in values) { if (values[i] != -999) { values[i] = values[i] - 0.5 } }
    } else if (product == 'N0H' || product == 'HHC') {
        // hydrometer classification || hybrid hydrometer classification
        for (var i in values) { if (values[i] != -999) { values[i] = values[i] + 0.5 } }
    }
    return values;
}

function loadingSpinner(truefalse) {
    var opts = {
        lines: 10, // The number of lines to draw
        length: 38, // The length of each line
        width: 17, // The line thickness
        radius: 45, // The radius of the inner circle
        scale: 0.5, // Scales overall size of the spinner
        corners: 1, // Corner roundness (0..1)
        speed: 1, // Rounds per second
        rotate: 0, // The rotation offset
        animation: 'spinner-line-fade-quick', // The CSS animation name for the lines
        direction: 1, // 1: clockwise, -1: counterclockwise
        color: '#ffffff', // CSS color or array of colors
        fadeColor: 'transparent', // CSS color or array of colors
        top: '50%', // Top position relative to parent
        left: '50%', // Left position relative to parent
        shadow: '0 0 1px transparent', // Box-shadow for the lines
        zIndex: 2000000000, // The z-index (defaults to 2e9)
        className: 'spinner', // The CSS class to assign to the spinner
        position: 'absolute', // Element positioning
    }
    var target = document.body;
    if (window.theLoadingSpinner == undefined) {
        window.theLoadingSpinner = new Spin.Spinner(opts).spin(target);
    }

    if (!truefalse) {
        window.theLoadingSpinner.stop();
        window.theLoadingSpinner = undefined;
    }
}

module.exports = {
    phpProxy,
    phpProxy2,
    colors,
    toBuffer,
    printFancyTime,
    printHourMin,
    userTimeZone,
    addMinutes,
    msToTime,
    round,
    findTerminalCoordinates,
    logToModal,
    xmlToJson,
    formatBytes,
    colorLog,
    html2json,
    tiltObject,
    numOfTiltsObj,
    allL2Btns,
    vcpObj,
    productUnits,
    blobToString,
    addDays,
    progressBarVal,
    getDividedArray,
    scale,
    tideChartDivName,
    waitVisible,
    flyToStation,
    disableModeBtn,
    knotsToMph,
    degToCompass,
    getCardinalDirection,
    preventFileCaching,
    sshwsValues,
    getSSHWSVal,
    hurricaneTypesAbbvs,
    spawnModal,
    betterProgressBar,
    CtoF,
    MBtoINHG,
    getRadialConstants,
    getDateDiff,
    csvToJson,
    animateBrightness,
    haMapControlActions,
    zeroPad,
    setMapMargin,
    displayAtticDialog,
    scaleValues,
    loadingSpinner
}
}).call(this)}).call(this,require("buffer").Buffer)
},{"./map/map":13,"buffer":172}],31:[function(require,module,exports){
const ut = require('../core/utils');

const jtwc_storm_list_url = `https://www.metoc.navy.mil/jtwc/rss/jtwc.rss`;
const nhc_storm_list_url = `https://www.nhc.noaa.gov/CurrentStorms.json`;

class HurricaneFetcher {
    constructor(callback) {
        this.list_storms((master_storms_list) => {
            this.fetch_kmz(master_storms_list, (master_storms_list) => {
                this.fetch_forecast_text(master_storms_list, (master_storms_list) => {
                    callback(master_storms_list);
                });
            });
        });
    }

    fetch_forecast_text(master_storms_list, callback) {
        const jtwc_ids = Object.keys(master_storms_list.jtwc);

        function _jtwc_fetch_from_ids(cb, index = 0) {
            const id = jtwc_ids[index];
            const formatted_id = id.slice(0, 4) + '20' + id.slice(4, 6); // convert to the correct format here

            const forecast_text_url = `https://www.nrlmry.navy.mil/atcf_web/docs/current_storms/${formatted_id.toLowerCase()}.fst`;
            fetch(ut.phpProxy + forecast_text_url)
            .then(response => response.text())
            .then(text => {
                master_storms_list.jtwc[id].forecast_text = text;

                if (index < jtwc_ids.length - 1) {
                    _jtwc_fetch_from_ids(cb, index + 1);
                } else {
                    cb();
                }
            })
        }

        _jtwc_fetch_from_ids(() => {
            callback(master_storms_list);
        });
    }

    fetch_kmz(master_storms_list, callback) {
        const jtwc_ids = Object.keys(master_storms_list.jtwc);

        function _jtwc_fetch_from_ids(cb, index = 0) {
            const id = jtwc_ids[index];
            const kmz_url = `https://www.metoc.navy.mil/jtwc/products/${id.toLowerCase()}.kmz`;
            fetch(ut.phpProxy + kmz_url)
            .then(response => response.blob())
            .then(blob => {
                blob.lastModifiedDate = new Date();
                blob.name = kmz_url;

                master_storms_list.jtwc[id].kmz = blob;

                if (index < jtwc_ids.length - 1) {
                    _jtwc_fetch_from_ids(cb, index + 1);
                } else {
                    cb();
                }
            })
        }

        _jtwc_fetch_from_ids(() => {
            callback(master_storms_list);
        });
    }

    list_storms(callback) {
        const master_storms_list = {
            'nhc': {},
            'jtwc': {}
        }

        fetch(ut.phpProxy + jtwc_storm_list_url)
        .then(response => response.text())
        .then(text => {
            const jtwc_ids = this._parse_jtwc_text(text);

            for (var i = 0; i < jtwc_ids.length; i++) {
                master_storms_list.jtwc[jtwc_ids[i]] = {
                    'kmz': ''
                }
            }

            callback(master_storms_list);
        })
    }

    _parse_jtwc_text(text) {
        // Regular expression pattern to match the URL
        const url_pattern = /<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1/g;
        // Find all occurrences of the URL pattern in the HTML code
        const matches = [...text.matchAll(url_pattern)];

        const ids = [];
        for (var i = 0; i < matches.length; i++) {
            const url = matches[i][2];
            if (url.includes('kmz')) {
                const url_parts = url.split('/');
                const id = url_parts[url_parts.length - 1].replaceAll('.kmz', '');
                ids.push(id);
            }
        }
        return ids;
    }
}

module.exports = HurricaneFetcher;
},{"../core/utils":30}],32:[function(require,module,exports){
const turf = require('@turf/turf');

class HurricaneFormatter {
    constructor(master_storms_list) {
        this.master_storms_list = master_storms_list;

        this.parse_cone();
    }

    parse_cone() {
        const keys = Object.keys(this.master_storms_list.jtwc);
        for (var i = 0; i < keys.length; i++) {
            const current_storm = keys[i];
            const geojson = this.master_storms_list.jtwc[current_storm].geojson;

            const points = [];
            for (var n = 0; n < geojson.features.length; n++) {
                const name = geojson.features[n].properties.name;
                const type = geojson.features[n].geometry.type;

                if (type == 'Point') {
                    points.push(geojson.features[n]);
                }

                if (name == '34 knot Danger Swath') {
                    this.master_storms_list.jtwc[current_storm].cone = geojson.features[n];
                } else if (name == 'wp02 Storm Track') {
                    this.master_storms_list.jtwc[current_storm].forecast_track = geojson.features[n];
                }
            }
            this.master_storms_list.jtwc[current_storm].forecast_points = turf.featureCollection(points);
        }
    }
}

module.exports = HurricaneFormatter;
},{"@turf/turf":105}],33:[function(require,module,exports){
function _remove_empty_strings_from_array(array) {
    return array.filter(line => { return line.trim() != '' });
}

class HurricaneParser {
    constructor(master_storms_list, callback) {
        this.master_storms_list = master_storms_list;

        this.parse_kmz(() => {
            this.parse_forecast_text();
            callback(this.master_storms_list);
        });
    }

    parse_forecast_text() {
        const keys = Object.keys(this.master_storms_list.jtwc);
        for (var i = 0; i < keys.length; i++) {
            const current_storm = keys[i];
            const forecast_text = this.master_storms_list.jtwc[current_storm].forecast_text;

            const lines = forecast_text.split('\n');
            for (var n = 0; n < lines.length; n++) {
                const line = lines[n];
                const parts = _remove_empty_strings_from_array(line.split(/\s+/).map(elem => elem.replaceAll(',', '')));

                if (parts.length != 0) {
                    const obj = {
                        'basin': parts[0], // WP
                        'storm_index': parts[1], // 02
                        'start_date': parts[2], // 2023052618
                        'agency': parts[4], // JTWC
                        'forecast_hour': parts[5], // 120
                        'latitude': parts[6], // 227N
                        'longitude': parts[7], // 1248E
                        'storm_type_abbv': parts[10], // TY
                    }
                }
            }
        }
    }

    parse_kmz(callback) {
        const keys = Object.keys(this.master_storms_list.jtwc);

        function _parse_all_kmz(cb, index = 0) {
            const kmz_blob = this.master_storms_list.jtwc[keys[index]].kmz;
            this._kmz_to_geojson(kmz_blob, (geojson) => {
                this.master_storms_list.jtwc[keys[index]].geojson = geojson;

                if (index < keys.length - 1) {
                    _parse_all_kmz(cb, index + 1);
                } else {
                    cb(this.master_storms_list);
                }
            })
        }

        _parse_all_kmz.apply(this, [() => {
            callback();
        }]);
    }

    _kmz_to_geojson(kmz_blob, callback) {
        let getDom = xml => (new DOMParser()).parseFromString(xml, "text/xml")
        let getExtension = fileName => fileName.split(".").pop()

        let getKmlDom = (kmzFile) => {
            var zip = new JSZip()
            return zip.loadAsync(kmzFile)
                .then(zip => {
                    let kmlDom = null
                    zip.forEach((relPath, file) => {
                        if (getExtension(relPath) === "kml" && kmlDom === null) {
                            kmlDom = file.async("string").then(getDom)
                        }
                    })
                    return kmlDom || Promise.reject("No kml file found")
                });
        }

        getKmlDom(kmz_blob).then(kmlDom => {
            let geoJsonObject = toGeoJSON.kml(kmlDom)
            callback(geoJsonObject);
            // //console.log(`${hurricaneID} - KMZ successfully unzipped.`);
            // //drawHurricanesToMap(geoJsonObject, type, index, hurricaneID);
            // cb(geoJsonObject);
        })
    }
}

module.exports = HurricaneParser;
},{}],34:[function(require,module,exports){
const map = require('../core/map/map');
const ut = require('../core/utils');

function _map_click(e) {
    var coords = JSON.parse(e.features[0].properties.coordinates);
    if (coords.length == 3) {
        coords.pop();
    }

    new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000' })
        .setLngLat(coords)
        .setHTML(e.features[0].properties.description)
        .addTo(map);
}

class HurricanePlotter {
    constructor(master_storms_list) {
        this.master_storms_list = master_storms_list;

        window.atticData.hurricane_layers = [];
        this.plot_all_storms();

        console.log(this.master_storms_list)
    }

    plot_all_storms() {
        const keys = Object.keys(this.master_storms_list.jtwc);
        for (var i = 0; i < keys.length; i++) {
            const current_storm = keys[i];

            this._plot_cone(current_storm);
            this._plot_forecast_track(current_storm);
            this._plot_forecast_points(current_storm);
        }
    }

    _plot_forecast_points(storm_id) {
        const forecast_points = this.master_storms_list.jtwc[storm_id].forecast_points;

        for (var i = 0; i < forecast_points.features.length; i++) {
            const name = forecast_points.features[i].properties.name;
            const matched = name.match(/(\d+\s*knots)/)?.[0];
            if (matched) {
                const knots = parseInt(matched.replaceAll(' knots', ''));

                const sshws_value = ut.getSSHWSVal(ut.knotsToMph(knots));
                forecast_points.features[i].properties.sshws_value = sshws_value[0];
                forecast_points.features[i].properties.sshws_abbv = sshws_value[2];
                forecast_points.features[i].properties.sshws_color = sshws_value[1];

                forecast_points.features[i].properties.coordinates = forecast_points.features[i].geometry.coordinates;
            }
        }
        forecast_points.features = forecast_points.features.filter(feature => feature.properties.sshws_value != undefined);

        const layer_name = `forecast_points_${storm_id}_layer`;
        const label_layer_name = `forecast_points_label_${storm_id}_layer`;
        window.atticData.hurricane_layers.push(layer_name, label_layer_name);

        map.addLayer({
            'id': layer_name,
            'type': 'circle',
            'source': {
                'type': 'geojson',
                'data': forecast_points
            },
            'paint': {
                'circle-radius': 12,
                'circle-color': ['get', 'sshws_color'],
            }
        });
        map.addLayer({
            'id': label_layer_name,
            'type': 'symbol',
            'source': {
                'type': 'geojson',
                'data': forecast_points
            },
            'layout': {
                'text-field': ['get', 'sshws_abbv'],
                'text-font': [
                    'Arial Unicode MS Bold'
                ],
                'text-size': 14,
                'text-allow-overlap': true,
                'text-ignore-placement': true,
            }
        });

        map.on('mouseover', label_layer_name, function(e) {
            map.getCanvas().style.cursor = 'pointer';
        });
        map.on('mouseout', label_layer_name, function(e) {
            map.getCanvas().style.cursor = '';
        });

        // map.on('click', label_layer_name, _map_click);
    }

    _plot_forecast_track(storm_id) {
        const forecast_track = this.master_storms_list.jtwc[storm_id].forecast_track;

        const layer_name = `forecast_track_${storm_id}_layer`;
        window.atticData.hurricane_layers.push(layer_name);

        map.addLayer({
            'id': layer_name,
            'type': 'line',
            'source': {
                'type': 'geojson',
                'data': forecast_track
            },
            'layout': {
                'line-join': 'round',
                'line-cap': 'round'
            },
            'paint': {
                'line-color': '#888',
                'line-width': 5
            }
        });
    }

    _plot_cone(storm_id) {
        const cone = this.master_storms_list.jtwc[storm_id].cone;

        const source_name = `cone_${storm_id}_source`;
        const layer_name = `cone_${storm_id}_layer`;
        const outline_name = `cone_${storm_id}_outline`;
        window.atticData.hurricane_layers.push(source_name, layer_name, outline_name);

        map.addSource(source_name, {
            'type': 'geojson',
            'data': cone
        })

        map.addLayer({
            'id': layer_name,
            'type': 'fill',
            'source': source_name,
            'paint': {
                'fill-color': 'rgb(175, 175, 175)',
                'fill-opacity': 0.25
            }
        });
        map.addLayer({
            'id': outline_name,
            'type': 'line',
            'source': source_name,
            'paint': {
                'line-color': 'rgb(100, 100, 100)',
                'line-width': 3
            }
        });
    }
}

module.exports = HurricanePlotter;
},{"../core/map/map":13,"../core/utils":30}],35:[function(require,module,exports){
const armFunctions = require('../core/menu/atticRadarMenu');
const map = require('../core/map/map');

const HurricaneFetcher = require('./HurricaneFetcher');
const HurricaneParser = require('./HurricaneParser');
const HurricaneFormatter = require('./HurricaneFormatter');
const HurricanePlotter = require('./HurricanePlotter');

function init() {
    new HurricaneFetcher((master_storms_list) => {
        new HurricaneParser(master_storms_list, (master_storms_list) => {
            const formatted = new HurricaneFormatter(master_storms_list);
            new HurricanePlotter(formatted.master_storms_list);
        });
    });
}

armFunctions.toggleswitchFunctions($('#armrHurricanesBtnSwitchElem'), function() {
    const hurricane_layers = window.atticData.hurricane_layers;

    if (map.getLayer(hurricane_layers?.[0]) || map.getSource(hurricane_layers?.[0])) {
        for (var i = 0; i < hurricane_layers.length; i++) {
            if (map.getLayer(hurricane_layers[i])) {
                map.setLayoutProperty(hurricane_layers[i], 'visibility', 'visible');
            }
        }
    } else {
        init();
    }
}, function() {
    const hurricane_layers = window.atticData.hurricane_layers;

    for (var i = 0; i < hurricane_layers.length; i++) {
        if (map.getLayer(hurricane_layers[i])) {
            map.setLayoutProperty(hurricane_layers[i], 'visibility', 'none');
        }
    }
})
},{"../core/map/map":13,"../core/menu/atticRadarMenu":17,"./HurricaneFetcher":31,"./HurricaneFormatter":32,"./HurricaneParser":33,"./HurricanePlotter":34}],36:[function(require,module,exports){
const map = require('../core/map/map');
const turf = require('@turf/turf');
const NEXRAD_LOCATIONS = require('../radar/libnexrad/nexrad_locations').NEXRAD_LOCATIONS;

function filter_lightning(total_hide = false) {
    if (total_hide) {
        const fc =  turf.featureCollection([]);
        if (map.getSource('lightningSource')) {
            map.getSource('lightningSource').setData(fc);
        }
        return fc;
    }

    var data = JSON.parse(JSON.stringify(window.atticData.original_lightning_points));
    const points = [];

    const current_station = window.atticData.currentStation;
    if (current_station != undefined) {
        const current_station_point = turf.point([NEXRAD_LOCATIONS[current_station].lon, NEXRAD_LOCATIONS[current_station].lat]);

        for (var i = 0; i < data.features.length; i++) {
            const coords = data.features[i].geometry.coordinates;
            const properties = data.features[i].properties;
            const point = turf.point(coords, properties);

            const distance = turf.distance(current_station_point, point, { units: 'kilometers' });
            if (distance <= 460) {
                points.push(point);
            }
        }

        const fc = turf.featureCollection(points);

        if (map.getSource('lightningSource')) {
            map.getSource('lightningSource').setData(fc);
        }
        return fc;
    } else {
        return turf.featureCollection([]);
    }
}

module.exports = filter_lightning;
},{"../core/map/map":13,"../radar/libnexrad/nexrad_locations":58,"@turf/turf":105}],37:[function(require,module,exports){
const turf = require('@turf/turf');
const map = require('../core/map/map');
const ut = require('../core/utils');
const setLayerOrder = require('../core/map/setLayerOrder');
const luxon = require('luxon');
const icons = require('../core/map/icons/icons');
const filter_lightning = require('./filter_lightning');

// https://luker.org/resources/grlevelx/placefiles/

// const url = `${ut.phpProxy}http://placefilenation.com/Placefiles/20lightning.php`;
const url = `${ut.phpProxy}https://saratoga-weather.org/USA-blitzortung/placefile.txt`;

function load_lightning(callback) {
    fetch(url, {
        headers: {
            'User-Agent': 'GR2Analyst'
        }
    })
        .then(response => response.text())
        .then(data => {
            // console.log(data);
            console.log(`Fetched lightning data with a byte length of ${ut.formatBytes(new Blob([data]).size)}.`);
            data = data.split('\n');

            var points = [];
            for (var i in data) {
                var row = data[i];
                if (row.startsWith('Icon:')) {
                    row = row.replace('Icon: ', '');
                    row = row.split(',');

                    var lat = parseFloat(row[0]);
                    var lng = parseFloat(row[1]);
                    var time = row[5].replace('Blitzortung @ ', '').slice(0, -4);

                    // old format was "HH:mm:ss", e.g. "18:34:26" or "03:16:45"
                    // new format is "h:mm:ssa", e.g. "8:34:26am" or "7:30:33pm"
                    const date = luxon.DateTime.fromFormat(time, 'h:mm:ssa', { zone: 'America/Los_Angeles' }); // PDT
                    const diff = luxon.DateTime.now().diff(date);
                    const diff_minutes = diff.as('minutes');
                    const current_point = turf.point([lng, lat], { 'time': time, 'diff_minutes': diff_minutes });

                    if (diff_minutes <= 15) {
                        points.push(current_point);
                    }
                }
            }
            var collection = turf.featureCollection(points);
            window.atticData.original_lightning_points = collection;
            // collection = filter_lightning(collection);

            map.addSource('lightningSource', {
                type: 'geojson',
                data: collection
            });
            icons.add_icon_svg([
                [icons.icons.lightning_bolt_bold, 'lightning_bolt_bold']
            ], () => {
                const calculate_opacity_level = (decrease_rate) => Array.from({ length: 5 }, (_, i) => 1 - i * decrease_rate);
                const levels = calculate_opacity_level(0.125);

                map.addLayer({
                    id: 'lightningLayer',
                    type: 'symbol',
                    source: 'lightningSource',
                    layout: {
                        'icon-image': 'lightning_bolt_bold',
                        'icon-size': [
                            'interpolate',
                            ['exponential', 0.5],
                            ['zoom'],
                            7,
                            0.24,

                            10,
                            0.33
                        ],
                        // 'text-allow-overlap': true,
                        // 'text-ignore-placement': true,
                        // 'icon-allow-overlap': true,
                        // 'icon-ignore-placement': true,
                        'icon-padding': 0,
                        'symbol-sort-key': ['get', 'diff_minutes'],
                        'symbol-z-order': 'viewport-y'
                    },
                    paint: {
                        'icon-opacity': [
                            'case',
                            ['<=', ['get', 'diff_minutes'], 3],
                            levels[0],
                            ['<=', ['get', 'diff_minutes'], 6],
                            levels[1],
                            ['<=', ['get', 'diff_minutes'], 9],
                            levels[2],
                            ['<=', ['get', 'diff_minutes'], 12],
                            levels[3],
                            ['<=', ['get', 'diff_minutes'], 15],
                            levels[4],

                            levels[0],
                        ],
                    }
                })

                map.on('zoom', () => {
                    const map_zoom = map.getZoom();
                    if (map_zoom >= 6) {
                        map.setLayoutProperty('lightningLayer', 'icon-allow-overlap', true);
                        map.setLayoutProperty('lightningLayer', 'icon-ignore-placement', true);
                    } else {
                        map.setLayoutProperty('lightningLayer', 'icon-allow-overlap', false);
                        map.setLayoutProperty('lightningLayer', 'icon-ignore-placement', false);
                    }
                })

                // map.on('zoomend', () => {
                //     const bounds = map.getBounds();
                //     const top_left = [bounds.getNorthWest().lng, bounds.getNorthWest().lat];
                //     const top_right = [bounds.getNorthEast().lng, bounds.getNorthEast().lat];
                //     const bottom_left = [bounds.getSouthWest().lng, bounds.getSouthWest().lat];
                //     const bottom_right = [bounds.getSouthEast().lng, bounds.getSouthEast().lat];
                //     const bbox = turf.polygon([[top_left, top_right, bottom_left, bottom_right, top_left]]);

                //     // const lightning_within_view = turf.pointsWithinPolygon(collection, bbox);
                //     // map.getSource('lightningSource').setData(lightning_within_view);
                // })
                // map.on('zoomend', () => {
                //     // console.log('done');
                //     map.setLayoutProperty('lightningLayer', 'icon-allow-overlap', false);
                //     map.setLayoutProperty('lightningLayer', 'icon-ignore-placement', false);
                // })
                // map.on('zoomstart', () => {
                //     // console.log('done');
                //     map.setLayoutProperty('lightningLayer', 'icon-allow-overlap', true);
                //     map.setLayoutProperty('lightningLayer', 'icon-ignore-placement', true);
                // })

                setLayerOrder();
                callback();
            })
        })
        .catch(error => {
            console.error(error);
        });
}

module.exports = load_lightning;
},{"../core/map/icons/icons":12,"../core/map/map":13,"../core/map/setLayerOrder":15,"../core/utils":30,"./filter_lightning":36,"@turf/turf":105,"luxon":111}],38:[function(require,module,exports){
const metar_station_info = 
`station_id,wmo_id,latitude,longitude,elevation_m,site,state,country,site_type
AGGA,,-8.7,160.68,2.0,AUKI            ,,SB,TAF
AGGC,,-6.72,156.4,1.0,CHOISEUL BAY    ,,SB,METAR TAF
AGGH,91520,-9.42,160.05,6.0,HONIARA/HENDERSO,,SB,METAR TAF
AGGK,,-10.45,161.9,23.0,KIRAKIRA        ,,SB,TAF
AGGL,91541,-10.72,165.8,7.0,SANTA CRUZ ISLAN,,SB,METAR TAF
AGGM,91503,-8.32,157.27,6.0,MUNDA/NEW GEORGI,,SB,METAR TAF
AGGN,,-8.1,156.87,4.0,GIZO/NUSATUPE   ,,SB,TAF
AGGR,,-11.53,160.07,11.0,RENNELL TINGOA  ,,SB,TAF
ANYN,,-0.55,166.92,7.0,NAURU ISLAND    ,,NR,METAR TAF
AYGA,,-6.08,145.4,1587.0,GOROKA          ,,PG,TAF
AYGN,92077,-10.32,150.33,22.0,ALOTAU          ,,PG,METAR TAF
AYMD,94014,-5.22,145.8,12.0,MADANG AIRPORT  ,,PG,METAR TAF
AYMH,92005,-5.83,144.3,1634.0,MOUNT HAGEN     ,,PG,METAR TAF
AYMO,,-2.07,147.42,5.0,MOMOTE MANUS IS ,,PG,METAR TAF
AYNZ,92047,-6.57,146.72,74.0,NADZAB          ,,PG,METAR TAF
AYPY,92035,-9.43,147.22,44.0,PORT MORESBY INT,,PG,METAR TAF
AYRB,94085,-4.22,152.17,9.0,RABAUL/NEW BRITA,,PG,METAR
AYVN,92022,-2.7,141.3,2.0,VANIMO AIRPORT  ,,PG,METAR TAF
AYWK,92004,-3.58,143.67,2.0,WEWAK INTL AIRPO,,PG,METAR TAF
AZUH,,39.18,45.45,863.0,NAKHCHIVAN      ,,AZ,METAR
BGAA,,68.72,-52.8,27.0,AASIAAT/EGEDESMI,,GL,METAR TAF
BGAM,04360,65.58,-37.62,52.0,ANGMAGSSALIK    ,,GL,METAR rawinsonde TAF
BGAS,04285,59.97,-45.2,16.0,ANGISSOQ (AUT)  ,,GL,METAR
BGAT,04351,67.77,-32.27,23.0,APUTITEQ ADS (AU,,GL,METAR
BGBW,04270,61.17,-45.42,49.0,NARSSARSSUAQ    ,,GL,METAR rawinsonde TAF
BGCH,,68.75,-51.5,76.0,CHRISTIANHAB(POR,,GL,METAR
BGCO,,70.73,-22.65,52.0,CONSTABLE POINT ,,GL,METAR TAF
BGDB,04330,74.28,-20.22,44.0,DANEBORG (AUT)  ,,GL,METAR
BGDH,04320,76.77,-18.67,12.0,DANMARKSHAVN (PO,,GL,METAR rawinsonde
BGDU,,76.5,-69.0,20.0,DUNDAS          ,,GL,METAR
BGEM,04220,68.7,-52.75,47.0,EGEDESMINDE/AUSI,,GL,METAR rawinsonde
BGFD,,60.25,-45.5,23.0,FREDERIKSDAL    ,,GL,METAR
BGFH,04260,62.0,-49.72,16.0,FREDERIKSHAB (PO,,GL,METAR
BGGD,04261,61.22,-48.12,29.0,GRONNEDAL       ,,GL,METAR
BGGH,,64.2,-51.68,76.0,GODTHAB (PORT)  ,,GL,METAR TAF
BGGN,,69.32,-53.57,24.0,GODHAVN (PORT)  ,,GL,METAR
BGHB,04230,66.92,-53.67,9.0,HOLSTEINSBORG   ,,GL,METAR
BGJH,04272,60.72,-46.03,34.0,JULIANEHAB (PORT,,GL,METAR
BGJN,,69.25,-51.07,22.0,JAKOBSHAVN (PORT,,GL,METAR TAF
BGKK,,65.57,-37.13,37.0,KULUSUK AIRPORT ,,GL,METAR TAF
BGKT,04340,70.42,-21.97,41.0,CAPE TOBIN (AUT),,GL,METAR
BGMQ,,65.42,-52.93,21.0,MANIITSOQ       ,,GL,METAR TAF
BGMV,,72.25,-24.32,10.0,MESTERS VIG     ,,GL,METAR
BGNN,,60.52,-45.75,20.0,NANORTALIK      ,,GL,METAR
BGNS,,61.0,-46.0,30.0,NARSSAQ         ,,GL,METAR
BGPC,04390,60.02,-43.12,19.0,PRINS CHRISTIAN ,,GL,METAR
BGPT,,62.02,-49.67,48.0,PAAMIUT         ,,GL,METAR TAF
BGQQ,,77.48,-69.38,17.0,QAANAAQ         ,,GL,METAR TAF
BGSC,04339,70.47,-21.97,66.0,SCORESBYSUND    ,,GL,METAR rawinsonde
BGSF,,67.0,-50.72,75.0,SONDRE STROMFJOR,,GL,METAR rawinsonde TAF
BGSS,,66.95,-53.73,34.0,SISIMIUT        ,,GL,METAR TAF
BGST,,65.42,-53.0,24.0,SUKKERTOPPEN    ,,GL,METAR
BGTL,,76.53,-68.75,79.0,THULE AB        ,,GL,METAR rawinsonde TAF
BGTM,,62.42,-42.25,10.0,TINGMIARMIUT    ,,GL,METAR
BGUK,,72.78,-56.13,12.0,UPERNAVIK       ,,GL,METAR TAF
BGUP,04209,72.77,-56.17,63.0,UPERNAVIK AWS (A,,GL,METAR
BGUQ,,70.73,-52.7,112.0,UUMMANNAQ/QAARSU,,GL,METAR TAF
BIAR,,65.67,-18.07,1.0,AKUREYRI        ,,IS,METAR TAF
BIBD,,65.63,-23.55,10.0,BILDUDALUR      ,,IS,METAR TAF
BIEG,,65.27,-14.4,20.0,EGILSSTADIR     ,,IS,METAR TAF
BIGJ,,66.0,-21.33,32.0,GJOGUR          ,,IS,METAR TAF
BIGR,,66.53,-18.02,35.0,GRIMSEY ISLAND  ,,IS,METAR TAF
BIHN,,64.3,-15.23,8.0,HJARDARNES/HORNA,,IS,METAR TAF
BIHU,,65.95,-17.43,15.0,HUSAVIK         ,,IS,METAR TAF
BIIS,,66.05,-23.13,3.0,ISAFJOROUR      ,,IS,METAR TAF
BIKA,04353,65.93,-36.68,56.0,IKATEQ          ,,GL,rawinsonde
BIKF,,63.98,-22.6,49.0,KEFLAVIK (CIV/MI,,IS,METAR rawinsonde TAF
BIKR,,65.73,-19.57,3.0,SAUOARKROKUR    ,,IS,TAF
BIRG,04077,66.45,-15.93,10.0,RAUFARHOFN      ,,IS,METAR
BIRK,,64.13,-21.93,12.0,REYKJAVIK (NOTAM,,IS,METAR TAF
BIST,04013,65.07,-22.72,8.0,STYKKISHOLMUR   ,,IS,METAR
BITN,,66.22,-15.33,20.0,THORSHOFN       ,,IS,METAR TAF
BIVM,,63.42,-20.28,93.0,VESTMANNAEYJAR (,,IS,METAR TAF
BIVO,,65.72,-14.83,3.0,SKJALDTHINGSSTAD,,IS,METAR TAF
BKPR,,42.58,21.03,545.0,PRISHTINA       ,,KV,METAR TAF
BMKA,04255,63.43,-51.18,41.0,MARRAK POINT    ,,GL,rawinsonde
CACQ,71717,47.02,-65.47,31.0,MIRAMICHI       ,NB,CA,METAR TAF
CAHR,71350,46.35,-63.17,52.0,HARRINGTON CDA  ,PE,CA,METAR
CBBC,71582,52.18,-128.15,36.0,BELLA BELLA     ,BC,CA,METAR TAF
CERM,71590,47.42,-68.32,151.0,EDMUNSTON       ,NB,CA,METAR
CMBB,,45.62,-74.42,75.0,CHATHAM BROWNBRG,QC,CA,METAR
CMBR,,45.32,-73.92,22.0,BEAUHARNOS      ,QC,CA,METAR
CMCT,,45.33,-73.58,39.0,ST CONSTANT     ,QC,CA,METAR
CMCW,,45.02,-73.87,262.0,COVEY HILL      ,QC,CA,METAR
CMFM,71212,47.32,-71.15,663.0,FORET MONTMORENC,QC,CA,METAR
CMGB,,45.37,-72.77,87.0,GRANBY          ,QC,CA,METAR
CMHB,,45.63,-75.2,105.0,LOCHABER        ,QC,CA,METAR
CMHN,,45.8,-74.65,168.0,HARRINGTON      ,QC,CA,METAR
CMHW,,45.17,-73.87,42.0,HOWICK          ,QC,CA,METAR
CMLA,,45.07,-73.83,61.0,L ARTIFICE      ,QC,CA,METAR
CMLI,,45.87,-73.0,31.0,SAINT LOUIS     ,QC,CA,METAR
CMPD,,45.88,-74.1,175.0,PIEDMONT        ,QC,CA,METAR
CMPL,71306,45.3,-74.3,56.0,ST POLYCARPE    ,QC,CA,METAR
CMRG,,45.42,-73.05,54.0,ROUGEMONT       ,QC,CA,METAR
CMRI,71305,45.48,-74.3,30.0,RIGAUD          ,QC,CA,METAR
CMRU,,45.05,-73.8,65.0,RUSSELTOWN      ,QC,CA,METAR
CMRY,,45.12,-73.68,59.0,RUISSEAU CRANB  ,QC,CA,METAR
CMSB,,45.22,-73.02,49.0,ST SABINE       ,QC,CA,METAR
CMSC,,46.2,-72.45,55.0,ST CELESTIN     ,QC,CA,METAR
CMSX,,45.18,-73.62,59.0,ST M-D-NAPIERVIL,QC,CA,METAR
CMWD,,46.02,-73.82,210.0,RAWDON          ,QC,CA,METAR
CMYT,,45.13,-73.77,55.0,ST CHRYSOSTOME  ,QC,CA,METAR
CNGH,71141,70.63,-100.27,20.0,GATESHEAD ISLAND,NT,CA,METAR
CPBT,71517,49.53,-113.05,998.0,BLOOD TRIBE AGDM,AB,CA,METAR
CPEH,71518,50.18,-112.43,814.0,ENCHANT AGDM    ,AB,CA,METAR
CPFI,71535,49.8,-112.03,804.0,FINCASTLE AGDM  ,AB,CA,METAR
CPIR,71528,49.9,-112.73,895.0,IRON SPRINGS    ,AB,CA,METAR
CPQL,71509,49.68,-112.75,903.0,LETHBRIDGE DEMO ,AB,CA,METAR
CPRO,71537,50.83,-112.05,733.0,ROSEMARY AGDM   ,AB,CA,METAR
CPRY,71536,49.48,-112.68,947.0,RAYMOND AGDM    ,AB,CA,METAR
CPST,71526,51.03,-113.28,1005.0,STRATHMORE AGDM ,AB,CA,METAR
CPSV,71525,49.92,-110.92,766.0,SEVEN PERSONS   ,AB,CA,METAR
CPXL,71519,49.87,-111.38,801.0,BOW ISLAND AGDM ,AB,CA,METAR
CTAE,71366,45.55,-74.88,57.0,ALFRED          ,ON,CA,METAR
CTAL,71393,45.32,-74.62,77.0,ALEXANDRIA      ,ON,CA,METAR
CTCK,,45.25,-74.97,84.0,MOOSE CREEK     ,ON,CA,METAR
CTCW,71369,45.03,-74.68,58.0,CORNWALL        ,ON,CA,METAR
CTNK,71581,45.53,-78.27,405.0,ALGONQUIN PARK  ,ON,CA,METAR
CTPP,,18.57,-72.32,38.0,CAMP CANARGUS   ,,HT,METAR
CTRA,71655,49.67,-93.73,432.0,RAWSON LAKE     ,ON,CA,METAR
CTWN,71367,45.05,-75.33,75.0,WINCHESTER      ,ON,CA,METAR
CVBI,,49.47,-94.03,394.0,KENORA/ONT VOR  ,ON,CA
CWAB,71461,48.28,-88.87,218.0,TROWBRIDGE (MAPS,ON,CA,METAR
CWAC,71483,48.67,-124.83,41.0,NITINAT LAKE (MA,BC,CA,METAR
CWAD,,50.0,-125.2,4.0,CAPE MUDGE (LGT ,BC,CA,METAR
CWAE,,50.13,-122.95,658.0,WHISTLER        ,BC,CA,METAR
CWAF,71426,48.07,-69.55,6.0,ILE ROUGE(MAPS) ,QC,CA,METAR
CWAG,71337,49.92,-55.67,192.0,LA SCIE         ,NL,CA,METAR
CWAH,71410,45.85,-64.27,23.0,AMHERST (MARS)  ,NS,CA,METAR
CWAJ,71465,42.25,-81.9,177.0,ERIEAU (MAPS)   ,ON,CA,METAR
CWAN,71112,48.92,-125.53,27.0,AMPHITRITE POINT,BC,CA,METAR
CWAQ,71516,49.05,-105.48,761.0,CORONACH SPC    ,SK,CA,METAR
CWAR,71807,47.28,-54.0,6.0,ARGENTIA (MARS) ,NL,CA,METAR
CWAU,,52.18,-128.12,4.0,DRYAD POINT (LGT,BC,CA,METAR
CWAV,71248,51.77,-114.67,1115.0,SUNDRE          ,AB,CA,METAR
CWAX,71819,51.38,-56.08,111.0,SAINT ANTHONY   ,NL,CA,METAR
CWBA,71732,46.72,-79.1,181.0,TEMISCAMINQUE   ,QC,CA,METAR
CWBD,71194,50.55,-103.65,582.0,INDIAN HEAD CDA ,SK,CA,METAR
CWBE,71460,45.98,-81.48,188.0,KILLARNEY (MAPS),ON,CA,METAR
CWBF,,47.62,-57.63,12.0,BURGEO          ,NL,CA,METAR
CWBG,,51.25,-123.07,1670.0,BIG CREEK(AUTO) ,BC,CA,METAR
CWBI,71632,45.8,-80.53,190.0,BRITT (MARS)    ,ON,CA,METAR
CWBK,71415,45.77,-62.67,2.0,CARIBOU POINT(MA,NS,CA,METAR
CWBM,71230,55.2,-119.4,745.0,BEAVERLODGE     ,AB,CA,METAR
CWBO,71457,50.53,-111.83,752.0,BROOKS (AUTOB)  ,AB,CA,METAR
CWBR,71049,66.03,-91.83,31.0,BROWN RIVER     ,NU,CA,METAR
CWBS,71198,46.18,-72.92,3.0,LAC ST PIERRE (A,QC,CA,METAR
CWBT,71512,50.27,-64.23,12.0,LONGUE PT DE MON,QC,CA,METAR
CWBU,71312,53.33,-104.02,369.0,NIPAWIN         ,SK,CA,METAR
CWBV,71403,44.82,-62.33,16.0,BEAVER ISLAND(MA,NS,CA,METAR
CWBY,71810,49.83,-64.28,56.0,PORT MENIER (MAR,QC,CA,METAR
CWBZ,71712,45.12,-74.28,49.0,ST ANICET       ,QC,CA,METAR
CWCA,,53.67,-57.03,20.0,CARTWRIGHT      ,NL,CA,METAR
CWCF,71158,52.35,-97.03,219.0,BERENS RIVER APT,MB,CA,METAR
CWCH,71747,48.75,-91.62,424.0,ATIKOKAN (AUT)  ,ON,CA,METAR
CWCI,71433,47.33,-85.82,167.0,CARIBOU ISL (MAP,ON,CA,METAR
CWCJ,,48.6,-86.28,207.0,PUKASKWA PARK   ,ON,CA,METAR
CWCL,71474,51.13,-121.5,1059.0,CLINTON (MARS)  ,BC,CA,METAR
CWCO,71270,44.5,-80.22,182.0,COLLINGWOOD (AUT,ON,CA,METAR
CWCT,71318,52.07,-111.43,793.0,CORONATION(AUT) ,AB,CA,METAR
CWCU,,44.37,-79.77,295.0,BARRIE (MARS)   ,ON,CA,METAR
CWCV,,49.6,-126.62,16.0,NOOTKA LIGHTSTAT,BC,CA,METAR
CWCZ,,51.6,-127.87,21.0,ADDENBROKE ISL (,BC,CA,METAR
CWDA,71417,50.72,-56.12,30.0,ENGLEE (MAPS)   ,NL,CA,METAR
CWDC,71076,59.57,-108.48,311.0,URANIUM CITY(MAR,SK,CA,METAR
CWDD,71273,42.28,-82.7,184.0,BELLE RIVER AUT0,ON,CA,METAR
CWDF,71283,44.72,-81.27,182.0,OLIPHANT (AUTOB),ON,CA,METAR
CWDH,71185,50.22,-57.57,19.0,DANIEL'S HARBOUR,NL,CA,METAR
CWDI,71400,48.97,-56.07,105.0,BADGER (MARS)   ,NL,CA,METAR
CWDJ,71514,50.4,-104.58,576.0,REGINA UNIVERSIT,SK,CA,METAR
CWDK,71234,50.02,-113.62,1014.0,CLARESHOLM (AUTO,AB,CA,METAR
CWDL,71958,58.43,-130.02,816.0,DEASE LAKE      ,BC,CA,METAR
CWDM,71814,50.47,-59.63,2.0,CHEVERY (MARS)  ,QC,CA,METAR
CWDO,71402,49.68,-54.78,89.0,TWILLINGATE (MAP,NL,CA,METAR
CWDQ,71378,47.42,-72.78,174.0,LA TUQUE        ,QC,CA,METAR
CWDR,71031,48.42,-123.23,17.0,DISCOVERY ISLAND,BC,CA,METAR
CWDT,71522,49.83,-71.17,389.0,CHUTE DES PASSES,QC,CA,METAR
CWDV,71435,49.02,-90.47,487.0,UPSALA (MARS)   ,ON,CA,METAR
CWDW,71558,51.38,-56.1,29.0,SAINT ANTHONY   ,NL,CA,METAR
CWDZ,71237,51.43,-112.67,689.0,DRUMHELLER EAST ,AB,CA,METAR
CWEB,71894,49.38,-126.55,1.0,ESTEVAN PT. (MAR,BC,CA,METAR
CWEC,71751,48.37,-89.12,209.0,WELCOME ISLAND  ,ON,CA,METAR
CWEE,71523,49.27,-73.35,302.0,CHAMOUCHOUANE AU,QC,CA,METAR
CWEF,71418,47.22,-60.13,27.0,ST. PAUL ISL(MAP,NS,CA,METAR
CWEH,71131,49.43,-108.98,1077.0,EASTEND CYPRESS ,SK,CA,METAR
CWEI,71447,49.28,-100.98,446.0,MELITA          ,MB,CA,METAR
CWEK,71476,54.58,-130.7,8.0,GREY ISLET (MAPS,BC,CA,METAR
CWEL,71772,49.22,-123.8,0.0,ENTRANCE IL AUTO,BC,CA,METAR
CWEM,,51.25,-127.83,14.0,EGG ISLAND      ,BC,CA,METAR
CWEO,71421,51.87,-63.27,561.0,LAC EON (MAPS)  ,QC,CA,METAR
CWEP,71412,46.45,-61.98,9.0,EAST POINT (MARS,PE,CA,METAR
CWEQ,71443,52.12,-101.22,331.0,SWAN RIVER (MARS,MB,CA,METAR
CWER,71424,47.0,-70.82,4.0,ILE D'ORLEANS(AU,QC,CA,METAR
CWES,71111,50.77,-128.42,72.0,CAPE SCOTT (LGT ,BC,CA,METAR
CWET,71561,44.23,-79.78,251.0,EGBERT (MAPS)   ,ON,CA,METAR
CWEU,71917,80.0,-85.93,2.0,EUREKA          ,NU,CA,METAR rawinsonde
CWEW,71524,45.82,-73.43,17.0,L'ASSOMPTION    ,QC,CA,METAR
CWEX,71560,49.0,-97.23,242.0,EMERSON         ,MB,CA,METAR
CWEZ,71473,48.78,-123.05,23.0,SATURNA ISL (MAP,BC,CA,METAR
CWFD,71094,66.58,-61.58,375.0,CAPE DYER AIRPOR,NU,CA,METAR
CWFF,71456,52.82,-104.6,482.0,MELFORT (AUTOB) ,SK,CA,METAR
CWFG,71478,50.82,-128.9,111.0,SARTINE ISL (MAP,BC,CA,METAR
CWFJ,71153,49.2,-113.27,1142.0,CARDSTON (AUT)  ,AB,CA,METAR
CWFM,,50.33,-125.45,23.0,CHATHAM POINT (L,BC,CA,METAR
CWFQ,71373,45.03,-72.85,190.0,FRELIGHSBURG    ,QC,CA,METAR
CWFR,71761,52.27,-121.03,846.0,HORSEFLY RIVER  ,BC,CA,METAR
CWGB,71769,49.35,-124.13,6.0,BALLENAS IL AUTO,BC,CA,METAR
CWGD,71261,43.77,-81.72,214.0,GODERICH (AUTOB),ON,CA,METAR
CWGH,71281,44.42,-75.85,76.0,GRENADIER ISLAND,ON,CA,METAR
CWGJ,,47.23,-84.58,559.0,MONTREAL RIV HAR,ON,CA,NEXRAD
CWGL,71282,44.53,-79.22,220.0,LAGOON CITY     ,ON,CA,METAR
CWGM,71154,49.13,-113.8,1292.0,WATERTON PARK GA,AB,CA,METAR
CWGN,71441,49.02,-97.57,251.0,GRETNA (MARS)   ,MB,CA,METAR
CWGQ,71736,48.62,-79.45,269.0,ROQUEMAURE      ,ON,CA,METAR
CWGR,71710,47.42,-61.77,4.0,ILES-DE-LA-MADEL,QC,CA,METAR
CWGT,71781,49.48,-124.43,5.0,SISTERS IL AUTOB,BC,CA,METAR
CWGU,,45.87,-61.9,120.0,CAPE GEORGE (AUT,NS,CA,METAR
CWGW,71782,49.75,-114.9,1137.0,SPARWOOD (AUTOB),BC,CA,METAR
CWGX,,56.35,-94.7,145.0,GILLAM AIRPORT  ,MB,CA,METAR
CWGY,71240,51.67,-110.2,709.0,ESTHER 1        ,AB,CA,METAR
CWGZ,,76.42,-82.9,24.0,GRISE FIORD AIR ,NU,CA,METAR
CWHA,71241,53.45,-114.47,747.0,HIGHVALE        ,AB,CA,METAR
CWHC,71201,49.28,-123.12,2.0,VANCOUVER (AUTOB,BC,CA,METAR
CWHH,,53.03,-100.93,256.0,HUNTERS POINT MA,MB,CA,METAR
CWHI,71249,51.7,-113.22,906.0,THREE HILLS     ,AB,CA,METAR
CWHL,71219,54.17,-130.35,5.0,HOLLAND ROCK(AUT,BC,CA,METAR
CWHM,71184,45.72,-73.37,20.0,VARENNES        ,QC,CA,METAR
CWHN,71023,54.9,-109.97,635.0,JIMMY LAKE      ,SK,CA,METAR
CWHO,71900,55.45,-60.22,16.0,HOPEDALE (MAPS) ,NL,CA,METAR
CWHP,71423,49.08,-61.7,7.0,HEATH POINT (MAP,QC,CA,METAR
CWHQ,71389,46.68,-71.97,56.0,DESCHAMBAULTS   ,QC,CA,METAR
CWHT,71505,60.77,-137.58,601.0,HAINES JUNCTION ,YT,CA,METAR
CWHV,71323,46.2,-70.78,227.0,BEAUCEVILLE     ,QC,CA,METAR
CWHY,71618,45.32,-72.25,851.0,MONT ORFORD     ,QC,CA,METAR
CWIA,,48.65,-71.85,103.0,ST HENRI        ,QC,CA,METAR
CWIC,71074,78.78,-103.55,58.0,ISACHSEN (MAPS) ,NU,CA,METAR
CWID,71087,61.32,-117.6,160.0,FORT PROVIDENCE ,NT,CA,METAR
CWIE,71161,64.38,-115.02,478.0,INDIAN RIVER    ,NT,CA,METAR
CWIF,,50.43,-128.03,21.0,QUATSINO (LGT ST,BC,CA,METAR
CWIG,,47.07,-70.53,12.0,ICE AUX GRUES   ,QC,CA,METAR
CWII,71552,50.7,-96.57,216.0,VICTORIA BEACH  ,MB,CA,METAR
CWIJ,71470,65.77,-111.23,490.0,LUPIN (MAPS)    ,NU,CA,METAR
CWIK,71861,50.37,-102.58,597.0,BROADVIEW       ,SK,CA,METAR
CWIL,71084,68.32,-100.07,28.0,HAT ISLAND      ,NU,CA,METAR
CWIM,,49.03,-90.42,538.0,UPSALA (RADAR)  ,ON,CA,NEXRAD
CWIO,,56.72,-131.67,15.0,ISKUT RIVER(AUTO,BC,CA,METAR
CWIP,71390,50.17,-66.43,27.0,POINTE NOIRES CS,QC,CA,METAR
CWIQ,71124,54.75,-110.03,702.0,PRIMROSE LAKE   ,AB,CA,METAR
CWIS,71319,47.28,-70.63,720.0,CHARLEVOIX (MRX),QC,CA,METAR
CWIT,71614,45.17,-73.67,53.0,ST CLOTHILDE (A ,QC,CA,METAR
CWIU,,48.48,-71.78,600.0,ST GEDEON       ,QC,CA,METAR
CWIW,71511,51.67,-105.4,524.0,WATROUS EAST (AU,SK,CA,METAR
CWIX,71381,48.6,-71.72,109.0,MISTOOK (AUT)   ,QC,CA,METAR
CWIY,,47.15,-67.82,240.0,ST LEONARD AUTOB,NB,CA,METAR
CWIZ,71372,45.28,-73.33,45.0,L'ACADIE        ,QC,CA,METAR
CWJB,71392,46.78,-71.28,90.0,ST FOY/U LAVAL  ,QC,CA,METAR
CWJC,71923,61.13,-100.9,340.0,ENNADAI LAKE (MA,NU,CA,METAR
CWJD,71858,53.18,-99.27,222.0,GRAND RAPIDS (MA,MB,CA,METAR
CWJG,,52.27,-128.42,10.0,IVORY ISLAND    ,BC,CA,METAR
CWJH,71451,56.32,-103.27,345.0,SOUTHEND (AUTOB),SK,CA,METAR
CWJI,71487,49.72,-105.93,724.0,ASSINIBOIA ARPT ,SK,CA,METAR
CWJM,71290,44.7,-76.28,125.0,UPPER RIDEAU LAK,ON,CA,METAR
CWJN,71501,69.57,-138.92,1.0,HERSCHEL ISLAND ,YT,CA,METAR
CWJO,71617,48.43,-71.15,113.0,JONQUIERE(AUTO) ,QC,CA,METAR
CWJR,71770,49.03,-116.5,642.0,CRESTON (AUTOB) ,BC,CA,METAR
CWJT,71376,46.07,-74.57,236.0,ST JOVITE (AUTOB,QC,CA,METAR
CWJU,,54.25,-133.07,47.0,LANGARA         ,BC,CA,METAR
CWJV,71115,50.22,-119.18,487.0,VERNON (AUTOB)  ,BC,CA,METAR
CWJW,71486,52.93,-118.03,1022.0,JASPER WARDEN (A,AB,CA,METAR
CWJX,71459,50.88,-109.5,671.0,LEADER ARPT (AUT,SK,CA,METAR
CWKD,71383,50.73,-71.02,496.0,BONNARD(AUTO)   ,QC,CA,METAR
CWKG,71599,44.43,-65.2,154.0,KEJIMKUJIK (AU8),NS,CA,METAR
CWKH,71774,48.57,-123.55,327.0,MALAHAT (AUTOB) ,BC,CA,METAR
CWKK,71468,49.72,-88.33,259.0,KATATOTA ISLAND ,ON,CA,METAR
CWKM,71046,69.6,-140.17,8.0,KOMAKUK BEACH   ,YT,CA,METAR
CWKO,71135,49.17,-105.97,914.0,ROCKGLEN (MARS) ,SK,CA,METAR
CWKP,,69.67,-121.67,322.0,KEATS POINT     ,NT,CA,METAR
CWKS,,57.25,-122.72,937.0,SIKANNI CHIEF AU,BC,CA,METAR
CWKV,,49.27,-121.22,674.0,HOPE SLIDE      ,BC,CA,METAR
CWKW,71176,59.98,-64.17,551.0,CAPE KAKKIVIAK  ,NL,CA,METAR
CWKX,71222,58.43,-130.02,807.0,DEASE LAKE CS   ,BC,CA,METAR
CWLA,71899,54.25,-133.07,41.0,LANGARA         ,BC,CA,METAR
CWLB,71316,54.77,-112.02,561.0,LAC LA BICHE (MA,AB,CA,METAR
CWLC,,54.3,-130.62,27.0,LUCY ISL (LGT H),BC,CA,METAR
CWLE,71455,50.95,-107.15,666.0,LUCKY LAKE (AUTO,SK,CA,METAR
CWLF,71846,52.22,-87.87,242.0,LANSDOWNE HOUSE ,ON,CA,METAR
CWLI,71960,69.6,-130.9,92.0,LIVERPOOL BAY   ,NT,CA,METAR
CWLM,71200,48.42,-123.32,62.0,VICTORIA (AUTOB),BC,CA,METAR
CWLO,71853,49.77,-99.62,373.0,SHILO           ,MB,CA,METAR
CWLP,71485,50.93,-127.63,15.0,HERBERT ISL (MAP,BC,CA,METAR
CWLS,71631,43.97,-80.75,413.0,MOUNT FOREST(MAR,ON,CA,METAR
CWLT,71082,82.5,-62.32,63.0,ALERT           ,NU,CA,METAR rawinsonde
CWLU,,46.83,-71.17,20.0,LAUZON          ,QC,CA,METAR
CWLX,71091,68.9,-75.15,129.0,LONGSTAFF BLUFF ,NU,CA,METAR
CWLY,71891,50.22,-121.58,228.0,LYTTON (READAC) ,BC,CA,METAR
CWLZ,71146,53.73,-105.27,503.0,CANDLE LAKE     ,SK,CA,TAF
CWMD,,76.22,-119.32,12.0,MOULD BAY CAMP  ,NT,CA,METAR
CWME,71482,52.18,-127.47,23.0,CATHEDRAL PT(MAP,BC,CA,METAR
CWMI,71719,48.02,-64.5,3.0,MISCOU ISL (MARS,NB,CA,METAR
CWMJ,71721,46.27,-76.0,198.0,MANIWAKI        ,QC,CA,METAR
CWMK,,45.7,-65.17,1.0,MECHANIC SETTLE ,NB,CA,NEXRAD
CWMM,71775,49.22,-122.68,2.0,P. MEADOWS CS AU,BC,CA,METAR
CWMN,,45.42,-73.93,63.0,MCGILL RADAR    ,QC,CA,NEXRAD
CWMQ,71453,49.9,-109.47,767.0,MAPLECREEK (AUTO,SK,CA,METAR
CWMR,,49.47,-123.92,8.0,MERRY ISLAND    ,BC,CA,METAR
CWMS,71897,52.27,-128.72,26.0,MCINNES ISLAND  ,BC,CA,METAR
CWMT,71163,63.13,-117.25,274.0,LAC LA MARTRE   ,NT,CA,METAR
CWMW,71722,46.37,-75.97,170.0,MANIWAKI        ,QC,CA,rawinsonde
CWMZ,71438,45.02,-80.37,175.0,WESTERN ISL (MAP,ON,CA,METAR
CWNB,71466,41.82,-82.47,168.0,S.E. SHOAL (MAPS,ON,CA,METAR
CWNC,71431,43.95,-78.17,71.0,COBOURG (MARS)  ,ON,CA,METAR
CWND,71502,69.63,-135.43,14.0,PELLY ISLAND    ,NT,CA,METAR
CWNE,71987,47.07,-64.0,5.0,NORTH POINT (AUT,PE,CA,METAR
CWNH,71715,47.8,-69.53,147.0,RIVIERE DU LOUP ,QC,CA,METAR
CWNJ,,54.57,-130.7,12.0,GREEN ISLAND (MT,BC,CA,METAR
CWNK,71147,49.5,-98.03,271.0,CARMAN U OF M   ,MB,CA,METAR
CWNL,71462,45.63,-82.93,183.0,GREAT DUCK ISLAN,ON,CA,METAR
CWNM,71776,49.5,-117.3,533.0,NELSON (AUTOB)  ,BC,CA,METAR
CWNP,71216,50.27,-117.82,517.0,NAKUSP (AUTOB)  ,BC,CA,METAR
CWNQ,71723,46.22,-72.65,9.0,NICOLET (AUTOB) ,QC,CA,METAR
CWNX,,53.67,-124.82,715.0,NECHAKO RIVER AU,BC,CA,METAR
CWNZ,71832,49.75,-84.17,261.0,NAGAGAMI (MARS) ,ON,CA,METAR
CWOB,71097,63.33,-64.15,369.0,BREVOORT ISLAND ,NU,CA,METAR
CWOC,71619,48.02,-65.32,42.0,NEW CARLISLE1   ,QC,CA,METAR
CWOD,71379,48.85,-72.55,150.0,NORMANDIN       ,QC,CA,METAR
CWOE,71116,49.12,-110.47,931.0,ONEFOUR (AUTOB) ,AB,CA,METAR
CWOK,71450,51.12,-106.57,595.0,ELBOW (MARS)    ,SK,CA,METAR
CWOS,71399,43.72,-65.25,30.0,SHELBURNE       ,NS,CA
CWOU,71127,54.77,-110.07,606.0,PRIMROSE LAKE 2 ,AB,CA,METAR
CWOY,71865,51.77,-104.2,557.0,WYNYARD (AUT)   ,SK,CA,METAR
CWPB,71272,44.85,-79.87,183.0,BEAUSOLEIL ISL A,ON,CA,METAR
CWPC,71463,42.87,-79.25,174.0,PORT COLBORNE(AU,ON,CA,METAR
CWPD,71382,47.57,-71.22,795.0,PARC DES LAURENT,QC,CA,METAR
CWPE,71699,45.07,-66.47,9.0,POINT LEPREAU   ,NB,CA,METAR
CWPF,,48.43,-123.43,5.0,ESQUIMALT METOC ,BC,CA,METAR
CWPH,,58.45,-78.12,253.0,INUKJUAK        ,QC,CA
CWPI,71105,50.98,-127.73,9.0,PINE ISLAND (MAP,BC,CA,METAR
CWPJ,71414,47.07,-64.78,5.0,PT. ESCUMINAC(MA,NB,CA,METAR
CWPK,71726,47.92,-74.62,443.0,PARENT (MARS)   ,QC,CA,METAR
CWPL,,51.47,-90.2,386.0,PICKLE LAKE     ,ON,CA
CWPO,71148,49.2,-98.9,471.0,PILOT MOUND (MAR,MB,CA,METAR
CWPQ,,45.63,-73.5,6.0,MONTREAL EST    ,QC,CA,METAR
CWPR,71032,49.47,-120.52,703.0,PRINCETON       ,BC,CA,METAR
CWPS,71464,42.53,-80.03,173.0,LONG POINT (MAPS,ON,CA,METAR
CWPU,71050,52.12,-124.12,910.0,PUNTZI MTN (MARS,BC,CA,METAR
CWPX,71064,69.03,-107.82,163.0,CAPE PEEL WEST  ,NU,CA,METAR
CWPZ,,54.38,-125.97,715.0,BURNS LAKE      ,BC,CA,METAR
CWQA,71250,49.58,-114.42,2164.0,TURTLE MTN CS   ,AB,CA,METAR
CWQC,71475,49.32,-124.93,53.0,PORT ALBERNI (MA,BC,CA,METAR
CWQH,71611,45.37,-71.82,181.0,LENNOXVILLE     ,QC,CA,METAR
CWQK,71778,48.3,-123.53,5.0,RACE ROCKS AUTOB,BC,CA,METAR
CWQO,71385,48.42,-68.9,7.0,ILE BICQUETTE   ,QC,CA,METAR
CWQP,71430,43.83,-77.15,77.0,POINT PETRE (MAR,ON,CA,METAR
CWQR,71375,50.22,-64.22,9.0,ICE AUX PERROQUE,QC,CA,METAR
CWQS,71472,53.32,-132.77,10.0,KINDAKUN ROCKS(A,BC,CA,METAR
CWQV,71189,48.27,-70.12,4.0,POINTE CLAVEAU  ,QC,CA,METAR
CWQY,71963,63.6,-105.13,318.0,HANBURY RIVER   ,NT,CA,METAR
CWRA,71800,46.65,-53.07,4.0,CAPE RACE (MARS),NL,CA,METAR
CWRC,71820,47.55,-79.23,266.0,BARRAGE ANGLIERS,QC,CA,METAR
CWRE,,50.8,-96.95,221.0,ARNES           ,MB,CA,METAR
CWRF,71918,69.43,-89.72,312.0,PELLY BAY 1     ,NU,CA,METAR
CWRH,71972,61.58,-64.65,343.0,RESOLUTION IS   ,NU,CA,METAR
CWRJ,71510,51.57,-107.92,586.0,ROSETOWN EAST (A,SK,CA,METAR
CWRK,71294,45.07,-77.87,328.0,BANCROFT AUTOB  ,ON,CA,METAR
CWRM,71928,52.42,-114.92,986.0,ROCKY HOUSE (MAR,AB,CA,METAR
CWRN,71419,45.35,-60.98,8.0,HART ISLAND (MAP,NS,CA,METAR
CWRO,71477,54.17,-131.67,7.0,ROSE SPIT (MAPS),BC,CA,METAR
CWRT,71236,49.62,-114.47,1311.0,CROWSNEST       ,AB,CA,METAR
CWRU,71479,50.12,-127.93,76.0,SOLANDER ISL (MA,BC,CA,METAR
CWRW,71416,45.72,-60.22,10.0,FOURCHU HEAD(MAP,NS,CA,METAR
CWRX,71088,69.07,-79.07,39.0,ROWLEY ISLAND   ,NU,CA,METAR
CWRY,71244,49.12,-112.05,1048.0,MILK RIVER      ,AB,CA,METAR
CWRZ,71429,48.42,-64.32,16.0,CAP D'ESPOIR (MA,QC,CA,METAR
CWSA,,43.93,-60.0,4.0,SABLE ISLAND    ,NS,CA,METAR rawinsonde TAF
CWSD,71702,46.43,-63.85,12.0,SUMMERSIDE (AUTO,PE,CA,METAR
CWSE,71119,53.53,-114.08,766.0,EDMONTON/STONY P,AB,CA,rawinsonde
CWSF,71425,49.25,-65.32,15.0,CAP MADELEINE(MA,QC,CA,METAR
CWSG,71428,49.12,-66.65,5.0,CAP CHAT (MAPS) ,QC,CA,METAR
CWSK,71207,49.78,-123.17,59.0,SQUAMISH (AUTOB),BC,CA,METAR
CWSL,71218,50.7,-119.28,353.0,SALMON ARM AUTOB,BC,CA,METAR
CWSN,71622,43.03,-81.15,278.0,LONDON CS       ,ON,CA,METAR TAF
CWSO,,43.37,-81.38,1.0,EXETER RADAR    ,ON,CA,NEXRAD
CWSP,71780,48.38,-123.92,2.0,SHERINGHAM AUTOB,BC,CA,METAR
CWSR,71133,53.37,-107.55,589.0,SPIRITWOOD WEST ,SK,CA,METAR
CWSS,71607,45.2,-67.25,27.0,ST. STEPHEN (MAR,NB,CA,METAR
CWST,71713,47.35,-70.02,31.0,LA POCATIERE    ,QC,CA,METAR
CWSV,,52.1,-119.28,683.0,BLUE RIVER (MARS,BC,CA,METAR
CWSW,,49.83,-114.87,1173.0,SPARWOOD/ELK VAL,BC,CA,METAR
CWSZ,71442,51.07,-97.55,250.0,FISHER BRANCH(MA,MB,CA,METAR
CWTA,71612,45.5,-73.58,71.0,MC TAVISH (AUT) ,QC,CA,METAR
CWTB,71901,55.32,-63.22,479.0,BORDER (MAPS)   ,QC,CA,METAR
CWTD,71490,65.1,-102.43,244.0,ROBERTSON LAKE  ,NT,CA,METAR
CWTG,71427,49.32,-67.37,6.0,POINTE DES MONTS,QC,CA,METAR
CWTH,,58.65,-124.23,804.0,TETSA RIVER     ,BC,CA,METAR
CWTI,71100,54.3,-130.88,21.0,TRIPLE ISLAND (L,BC,CA,METAR
CWTL,,53.82,-89.88,222.0,BIG TROUT LAKE  ,ON,CA
CWTN,71384,47.07,-70.78,5.0,CAP TOURMENTE   ,QC,CA,METAR
CWTP,,47.33,-53.18,1.0,HOLYROOD RADAR  ,NL,CA,NEXRAD
CWTQ,71183,45.47,-73.75,32.0,MONTREAL/DORVAL ,QC,CA,METAR
CWTT,,45.27,-72.17,210.0,LAC MEMPHREMAGOG,QC,CA,METAR
CWTU,71179,54.72,-58.35,680.0,TUKIALIK BAY    ,NL,CA,METAR
CWTY,71724,46.35,-72.52,8.0,TROIS RIVIERES  ,QC,CA,METAR
CWUK,71824,49.82,-74.98,381.0,CHAPAIS         ,QC,CA,METAR
CWUM,71949,62.22,-133.33,717.0,FARO (MARS)     ,YT,CA,METAR
CWUP,71093,68.47,-66.83,13.0,CAPE HOOPER     ,NU,CA,METAR
CWUR,71398,45.37,-63.27,40.0,TRURO (MARS)    ,NS,CA,METAR
CWUS,71768,49.57,-119.65,455.0,SUMMERLAND (AUTO,BC,CA,METAR
CWUW,71092,68.62,-71.12,173.0,DEWAR LAKES     ,NU,CA,METAR
CWUX,71388,48.3,-70.93,150.0,LA BAIE         ,QC,CA,METAR
CWVA,71196,48.67,-53.12,27.0,BONAVISTA       ,NL,CA,METAR
CWVB,,53.5,-130.63,16.0,BONILLA ISLAND (,BC,CA,METAR
CWVD,71096,67.53,-63.78,584.0,BROUGHTON ISLAND,NU,CA,METAR
CWVF,71209,49.1,-123.3,13.0,SAND HEADS (LS) ,BC,CA,METAR
CWVH,71052,68.9,-133.93,246.0,STORM HILLS     ,YT,CA,METAR
CWVI,71458,53.52,-112.1,640.0,VEGREVILLE (AUTO,AB,CA,METAR
CWVJ,,49.88,-96.47,290.0,VIVIAN RADAR    ,MB,CA,NEXRAD
CWVK,,50.22,-119.27,555.0,VERNON BRIDGE   ,BC,CA
CWVN,71137,49.07,-107.58,792.0,VAL MARIE SE(AUT,SK,CA,METAR
CWVP,71139,49.63,-109.52,1269.0,CYPRESS HILLS PA,SK,CA,METAR TAF
CWVQ,71377,45.42,-73.92,38.0,STE ANNE DE BELL,QC,CA,METAR
CWVT,71077,55.83,-108.42,431.0,BUFFALO NARROWS ,SK,CA,METAR
CWVU,71988,44.28,-66.33,4.0,BRIER ISLAND(AUT,NS,CA,METAR
CWVV,,48.52,-123.47,49.0,VIC. HARTLAND AU,BC,CA,METAR
CWVW,71336,48.17,-52.93,18.0,GRATES COVE     ,NL,CA,METAR
CWVY,71616,46.45,-71.92,108.0,VILLEROY RADAR  ,QC,CA,METAR
CWVZ,,45.58,-73.5,12.0,ILE CHARRON     ,QC,CA,METAR
CWWA,71784,49.35,-123.18,172.0,W VANCOUVER AUTO,BC,CA,METAR
CWWB,71437,43.3,-79.78,77.0,BURLINGTON PIERS,ON,CA,METAR
CWWE,71411,43.98,-64.67,4.0,WESTERN HEAD (MA,NS,CA,METAR
CWWF,71452,49.7,-103.8,583.0,WEYBURN (AUTOB) ,SK,CA,METAR
CWWK,71785,49.02,-122.78,10.0,WHITE ROCK AUTOB,BC,CA,METAR
CWWL,71484,53.5,-130.63,8.0,BONILLA ISL (MAP,BC,CA,METAR
CWWQ,,58.93,-125.77,837.0,MUNCHO LAKE     ,BC,CA,METAR
CWWS,71445,52.82,-97.62,220.0,GEORGE ISL (MAPS,MB,CA,METAR
CWWU,,47.52,-52.98,2.0,LONG POND       ,NL,CA,METAR TAF
CWWX,71439,45.32,-81.73,181.0,COVE ISLAND (MAP,ON,CA,METAR
CWWZ,71432,43.25,-79.22,75.0,PORT WELLER (MAR,ON,CA,METAR
CWXA,71232,51.07,-115.07,1303.0,BOW VALLEY      ,AB,CA,METAR
CWXC,71387,48.88,-71.03,306.0,ONATCHIWAY      ,QC,CA,METAR
CWXH,71562,50.63,-128.13,568.0,HOLBERG CCR     ,BC,CA,METAR
CWXI,,51.02,-57.1,15.0,FEROLLE PT. (MAP,NL,CA,METAR
CWXL,71231,49.73,-111.45,815.0,BOW ISLAND      ,AB,CA,METAR
CWXM,71481,50.38,-125.87,19.0,HELMCKEN ISL(MAP,BC,CA,METAR
CWXO,,43.87,-60.53,44.0,ROWAN GORILLA II,NS,CA,METAR
CWXR,71059,69.27,-119.22,69.0,CROKER RIVER    ,NU,CA,METAR
CWXU,71737,50.38,-102.68,600.0,BROADVIEW CS    ,SK,CA,METAR
CWYH,71165,64.12,-117.37,220.0,RAE LAKES       ,NT,CA,METAR
CWYJ,71783,48.45,-123.3,59.0,VICTORIA UNIV   ,BC,CA,METAR
CWYK,71177,57.13,-61.47,827.0,CAPE KIGLAPAIT  ,NL,CA,METAR
CWYL,71786,51.45,-116.33,1602.0,YOHO PARK (AUTOB,AB,CA,METAR
CWYM,71975,64.95,-63.57,582.0,CAPE MERCY      ,NU,CA,METAR
CWYY,71215,49.03,-119.43,284.0,OSOYOOS (AUTOB) ,BC,CA,METAR
CWZA,71113,49.25,-121.77,18.0,AGASSIZ (AUTO)  ,BC,CA,METAR
CWZB,71197,47.57,-59.17,40.0,PORT AUX BASQUES,NL,CA,METAR
CWZC,,51.28,-80.6,11.0,MOOSONEE        ,ON,CA,METAR
CWZD,,52.45,-131.23,5.0,SCUDDER POINT   ,BC,CA,METAR
CWZG,71122,51.2,-115.55,1402.0,BANFF (MARS)    ,AB,CA,METAR
CWZK,71773,52.53,-131.55,8.0,HOSKINS ISLET   ,BC,CA,METAR
CWZL,71771,53.03,-131.6,17.0,CUMSHEWA ISL (MA,BC,CA,METAR
CWZM,,52.65,-128.52,15.0,BOAT BLUFF (LGT ,BC,CA,METAR
CWZN,71408,47.37,-55.8,63.0,SAGONA ISL (MAPS,NL,CA,METAR
CWZO,,48.57,-123.25,5.0,KELP REEFS      ,BC,CA,METAR
CWZQ,,46.53,-61.05,13.0,GRAND ETANG (AUT,NS,CA,METAR
CWZR,71977,68.8,-140.85,543.0,MARGARET LAKE   ,YT,CA,METAR
CWZS,71386,48.47,-67.43,166.0,AMQUI           ,QC,CA,METAR
CWZV,,51.93,-131.02,83.0,CAPE ST JAMES   ,BC,CA,METAR
CWZW,,60.17,-132.73,683.0,TESLIN (MARS)   ,YT,CA,METAR
CWZZ,71804,58.47,-62.65,50.0,SAGLEK (BAY)    ,NL,CA,METAR
CXAF,71285,54.28,-112.97,667.0,ABEE AGDM       ,AB,CA,METAR
CXAG,71286,53.92,-112.28,632.0,ANDREW AGDM     ,AB,CA,METAR
CXAJ,71287,54.78,-112.82,586.0,ATMORE AGDM     ,AB,CA,METAR
CXAK,71289,52.35,-112.6,799.0,STETTLER AGDM   ,AB,CA,METAR
CXAM,,48.48,-67.6,583.0,VAL D IRENE RADR,QC,CA,NEXRAD
CXAR,71332,61.1,-94.07,10.0,ARVIAT CLIMATE  ,NU,CA,METAR
CXAT,,73.0,-85.03,10.0,ARCTIC BAY CS   ,NU,CA,METAR
CXBA,71214,52.12,-110.1,696.0,BODO AGDM       ,AB,CA,METAR
CXBI,71314,44.48,-79.55,287.0,BARRIE-ORO      ,ON,CA,METAR
CXBK,71569,50.2,-104.7,585.0,BRATTS LAKE     ,SK,CA,METAR
CXBL,71356,64.32,-96.0,51.0,BAKER LAKE      ,NU,CA,METAR
CXBO,71578,46.83,-71.2,8.0,BEAUPORT        ,QC,CA,METAR
CXBP,,46.23,-63.73,54.0,CONFEDERATION BR,PE,CA,METAR
CXBQ,71334,58.7,-98.5,262.0,TADOULE LAKE CS ,MB,CA,METAR
CXBR,71341,49.62,-113.82,1137.0,BROCKET AGDM    ,AB,CA,METAR
CXBU,,50.48,-110.2,777.0,SCHULER RADAR   ,AB,CA,NEXRAD
CXBW,71346,49.8,-112.3,823.0,BARNWELL AGDM   ,AB,CA,METAR
CXCA,71291,49.15,-88.35,228.0,CAMERON FALLS   ,ON,CA,METAR
CXCD,71221,56.32,-119.75,628.0,CLEARDALE AGDM  ,AB,CA,METAR
CXCH,,46.63,-60.95,44.0,CHETICAMP       ,NS,CA,METAR
CXCK,71039,62.12,-136.2,526.0,CARMACKS        ,YT,CA,METAR
CXCM,71288,69.1,-105.13,19.0,CAMBRIDGE BAY   ,NU,CA,METAR
CXCP,71217,50.28,-113.35,999.0,CHAMPION AGDM   ,AB,CA,METAR
CXCS,71223,51.93,-110.72,771.0,CONSORT AGDM    ,AB,CA,METAR
CXCY,,45.23,-81.53,190.0,CYPRUS LAKE CS  ,ON,CA,METAR
CXDB,71224,49.05,-112.82,1311.0,DEL BONITA AGDM ,AB,CA,METAR
CXDE,71503,65.22,-123.43,208.0,DELINE          ,NT,CA,METAR
CXDI,71573,42.87,-80.55,234.0,DELHI CS (AUT)  ,ON,CA,METAR
CXDK,71021,61.27,-124.47,269.0,DEADMAN VALLEY  ,NT,CA,METAR
CXDP,71340,54.32,-113.92,613.0,DAPP AGDM       ,AB,CA,METAR
CXDR,,49.85,-92.8,413.0,DRYDEN          ,ON,CA,METAR
CXDW,71840,49.4,-98.32,341.0,DEERWOOD RCS    ,MB,CA,METAR
CXEA,71295,50.63,-93.22,351.0,EAR FALLS (AUT) ,ON,CA,METAR
CXEC,71157,53.57,-113.52,666.0,EDMONTON MUNI   ,AB,CA,METAR
CXEG,71155,53.3,-113.6,706.0,EDMONTON INTL AR,AB,CA,METAR
CXET,71296,44.23,-79.78,250.0,EGBERT CS       ,ON,CA,METAR
CXFA,71568,50.45,-126.0,5.0,FANNY ISLAND    ,BC,CA,METAR
CXFM,71225,49.48,-111.48,884.0,FOREMOST AGDM   ,AB,CA,METAR
CXFR,71347,56.08,-118.43,657.0,FAIRVIEW AGDM   ,AB,CA,METAR
CXFS,71681,61.75,-121.23,169.0,FORT SIMPSON    ,NT,CA,METAR
CXFT,,45.03,-76.1,122.0,FRANKTOWN       ,ON,CA,METAR
CXFV,,58.38,-116.03,289.0,FORT VERMILLION ,AB,CA,METAR
CXFW,,50.55,-101.1,547.0,FOXWARREN RADAR ,MB,CA,NEXRAD
CXGH,71577,50.63,-97.0,217.0,GIMLI HARBOUR   ,MB,CA,METAR
CXGM,71030,44.72,-66.8,78.0,GRAND MANAN     ,NB,CA,METAR
CXHA,71298,42.03,-82.9,193.0,HARROW CDA      ,ON,CA,METAR
CXHD,71227,53.18,-112.25,688.0,HOLDEN AGDM     ,AB,CA,METAR
CXHF,71391,45.83,-75.65,185.0,HIGH FALLS CS (A,QC,CA,METAR
CXHI,71029,70.77,-117.8,30.0,HOLMAN CS       ,NT,CA,METAR
CXHM,71297,43.28,-79.9,105.0,HAMILTON RBG CS ,ON,CA,METAR
CXHP,71226,55.4,-116.48,601.0,HIGH PRAIRIE AGD,AB,CA,METAR
CXHR,71344,51.18,-112.5,975.0,HUSSAR AGDM     ,AB,CA,METAR
CXIB,,46.67,-60.4,6.0,INGONISH BEACH  ,NS,CA,METAR
CXJM,71159,61.35,-120.78,227.0,JEAN MARIER     ,NT,CA,METAR
CXKA,71299,49.4,-82.45,221.0,KAPUSKASING CDA ,ON,CA,METAR
CXKE,71300,45.0,-75.63,99.0,KEMPTVILLE      ,ON,CA,METAR
CXKI,71301,48.13,-80.0,328.0,KIRKLAND LAKE   ,ON,CA,METAR
CXKM,,52.83,-111.87,679.0,KILLAM AGDM     ,AB,CA,METAR
CXKT,71671,45.07,-64.48,48.0,KENTVILLE (AUTOB,NS,CA,METAR
CXLA,,48.55,-77.8,1.0,LADRIENNE RADAR ,ON,CA,NEXRAD
CXLB,,44.37,-64.3,4.0,LUNENBURG       ,NS,CA,METAR
CXLC,71680,63.6,-113.85,370.0,LOWER CARP LAKE ,NT,CA,METAR
CXLL,71682,61.12,-122.85,180.0,LINDBERG LANDING,NT,CA,METAR
CXLT,71040,48.3,-71.13,162.0,LATERRIERE      ,QC,CA,METAR
CXLU,71529,62.42,-110.67,179.0,LUTSEL KE CS    ,NT,CA,METAR
CXMB,,45.95,-60.2,1.0,MARION BRIDGE   ,NS,CA,NEXRAD
CXMD,71564,49.18,-98.08,297.0,MORDEN          ,MB,CA,METAR
CXME,,48.93,-57.83,1.0,MARBLE MTN RADAR,NL,CA,NEXRAD
CXMG,71229,56.97,-117.45,467.0,MANNING AGDM    ,AB,CA,METAR
CXMH,71026,50.03,-110.72,717.0,MEDICINE HAT    ,AB,CA,METAR
CXMI,,44.6,-63.53,15.0,MCNABS ISLAND   ,NS,CA,METAR
CXMM,71585,56.65,-111.22,372.0,FORT MCMURRAY AR,AB,CA,METAR
CXMN,71345,49.12,-111.65,947.0,MASINASIN AGDM  ,AB,CA,METAR
CXMO,71257,51.67,-112.68,837.0,MORRIN AGDM     ,AB,CA,METAR
CXMP,,46.3,-63.58,46.0,MAPLE PLAINS PEI,PE,CA,METAR
CXMY,,44.98,-62.48,37.0,MALAY FALLS     ,NS,CA,METAR
CXNC,,46.22,-65.7,1.0,CHIPMAN RADAR   ,NB,CA,NEXRAD
CXND,,52.47,-116.08,1362.0,NORDEGG CS      ,AB,CA,METAR
CXNI,,48.85,-89.12,1.0,SUPERIOR W RADAR,ON,CA,NEXRAD
CXNM,71604,46.82,-60.67,452.0,NORTH MOUNTAIN  ,NS,CA,METAR
CXNP,71311,45.75,-64.23,19.0,NAPPAN (AUTO)   ,NS,CA,METAR
CXOA,71063,45.38,-75.72,79.0,OTTAWA CDA RCS  ,ON,CA,METAR
CXOL,71258,51.77,-114.08,1026.0,OLDS AGDM       ,AB,CA,METAR
CXOX,71586,55.15,-105.27,381.0,LA RONGE AIRPORT,SK,CA,METAR
CXOY,71342,51.35,-110.35,784.0,OYEN AGDM       ,AB,CA,METAR
CXPA,71348,55.62,-118.3,628.0,PEORIA AGDM     ,AB,CA,METAR
CXPC,71172,45.35,-80.05,176.0,PARRY SOUND     ,ON,CA,METAR
CXPG,,53.62,-122.95,1101.0,PRINCE GEORGE   ,BC,CA,NEXRAD
CXPL,71259,51.13,-111.7,735.0,POLLOCKVILLE AGD,AB,CA,METAR
CXPS,,53.55,-114.1,766.0,EDMONTON/STONY P,AB,CA,METAR
CXPV,71593,58.45,-111.67,213.0,PRAIRIE RIVER   ,AB,CA,METAR
CXQA,71583,68.25,-122.1,530.0,QAVVIK LAKE     ,NT,CA,METAR
CXQH,71199,60.12,-128.82,690.0,WATSON LAKE     ,YT,CA,METAR
CXQT,,48.43,-89.22,184.0,N ONTARIO PORTAB,ON,CA,METAR
CXRB,,74.72,-94.98,30.0,RESOLUTE CS     ,NU,CA,METAR
CXRG,71307,42.45,-81.88,205.0,RIDGETOWN RCS   ,ON,CA,METAR
CXRH,71588,49.57,-57.88,68.0,ROCKY HARBOUR   ,NL,CA,METAR
CXRL,71349,54.5,-111.7,585.0,RICH LAKE AGDM  ,AB,CA,METAR
CXSC,71269,50.3,-110.08,809.0,SCHULER AGDM    ,AB,CA,METAR
CXSE,71017,73.77,-105.28,11.0,STEFANSSON IS   ,NU,CA,METAR
CXSH,71370,46.55,-72.73,106.0,SHAWINIGAN      ,QC,CA,METAR
CXSI,,48.87,-123.75,1.0,MT SICKER RADAR ,BC,CA,NEXRAD
CXSL,71274,54.28,-112.5,680.0,SMOKY LAKE AGDM ,AB,CA,METAR
CXSP,71275,54.02,-111.27,652.0,ST PAUL AGDM    ,AB,CA,METAR
CXSR,71571,55.7,-119.23,1008.0,SPIRIT RIVER    ,AB,CA,METAR
CXSS,,50.37,-119.07,1681.0,SILVER STAR RADR,BC,CA,NEXRAD
CXSW,71587,47.52,-52.78,117.0,ST JOHNS WEST   ,NL,CA,METAR
CXTD,,45.62,-61.68,58.0,TRACADIE        ,NS,CA,METAR
CXTH,71276,53.63,-111.68,679.0,TWO HILLS AGDM  ,AB,CA,METAR
CXTI,,49.28,-81.78,1.0,NORTHEAST ONT   ,ON,CA,METAR
CXTL,71028,51.67,-124.4,875.0,TATLAYOKO LAKE  ,BC,CA,METAR
CXTN,71492,69.2,-122.35,564.0,TUKTUT NOGAIT NP,NT,CA,METAR
CXTO,71508,43.67,-79.4,115.0,TORONTO CITY    ,ON,CA,METAR
CXTP,71589,48.55,-53.97,104.0,TERRA NOVA      ,NL,CA,METAR
CXTV,71683,68.75,-133.5,91.0,TRAIL VALLEY    ,NT,CA,METAR
CXUX,71320,68.78,-81.25,8.0,HALL BEACH      ,NU,CA,METAR
CXVM,71278,53.35,-110.88,622.0,VERMILION AGDM  ,AB,CA,METAR
CXVN,,43.18,-79.4,86.0,VINELAND (AU8)  ,ON,CA,METAR
CXVW,71277,55.1,-117.2,696.0,VALLEYVIEW AGDM ,AB,CA,METAR
CXWB,,65.88,-89.45,14.0,WAGER BAY       ,NU,CA,METAR
CXWI,71843,49.88,-97.13,251.0,WINNIPEG        ,MB,CA
CXWM,71343,49.5,-112.12,947.0,WRENTHAN AGDM   ,AB,CA,METAR
CXWN,71579,49.88,-97.13,232.0,WINNIPEG FORKS  ,MB,CA,METAR
CXWR,71584,47.72,-59.32,33.0,WRECKHOUSE      ,NL,CA,METAR
CXXX,71073,58.38,-109.52,339.0,CLUFF LAKE      ,SK,CA,METAR
CXYH,71020,61.25,-123.75,197.0,YOHIN           ,NT,CA,METAR
CXZC,71309,51.3,-80.62,8.0,MOOSONEE RCS    ,ON,CA,METAR
CXZU,71256,54.15,-115.78,785.0,WHITECOURT AIRPO,AB,CA,METAR
CXZV,71279,50.22,-66.25,43.0,SEPT ILES       ,QC,CA,METAR
CYAB,,73.0,-85.02,36.0,ARCTIC BAY      ,NU,CA,METAR TAF
CYAD,,53.57,-76.2,228.0,LA GRANDE III(SA,QC,CA,METAR
CYAH,71003,53.75,-73.67,298.0,LA GRANDE IV ARP,QC,CA,METAR rawinsonde TAF
CYAM,71260,46.48,-84.52,186.0,SAULT STE MARIE ,ON,CA,METAR TAF
CYAS,,60.02,-70.0,99.0,KANGIRSUK (SAWR),QC,CA,METAR TAF
CYAT,,52.93,-82.43,4.0,ATTAWAPISKAT    ,ON,CA,METAR TAF
CYAW,,44.63,-63.5,50.0,SHEARWATER(CAN M,NS,CA,METAR TAF
CYAY,,51.38,-56.07,23.0,SAINT ANTHONY AR,NL,CA,METAR TAF
CYAZ,,49.08,-125.77,26.0,TOFINO AIRPORT  ,BC,CA,METAR TAF
CYBB,,68.53,-89.78,13.0,PELLY BAY AIRPOR,NU,CA,METAR TAF
CYBC,71691,49.13,-68.2,20.0,BAIE COMEAU AIRP,QC,CA,METAR TAF
CYBD,,52.38,-126.58,40.0,BELLA COOLA ARPT,BC,CA,METAR
CYBG,71727,48.33,-70.98,151.0,BAGOTVILLE(CAN M,QC,CA,METAR TAF
CYBK,71926,64.3,-96.07,14.0,BAKER LAKE AIRPO,NU,CA,METAR rawinsonde TAF
CYBL,,49.95,-125.27,94.0,CAMPBELL RIVER A,BC,CA,METAR TAF
CYBN,71534,44.27,-79.92,223.0,BORDEN          ,ON,CA,METAR TAF
CYBQ,,58.7,-98.5,272.0,TADOULE LAKE    ,MB,CA,METAR
CYBR,,49.92,-99.95,405.0,BRANDON AIRPORT ,MB,CA,METAR TAF
CYBU,,53.32,-104.0,369.0,NIPAWIN AIRPORT ,SK,CA,METAR
CYBV,71859,52.35,-97.03,219.0,BERENS RIVER APT,MB,CA,METAR
CYBW,,51.1,-114.37,1197.0,CALGARY/SPRINGBA,AB,CA,METAR TAF
CYBX,,51.45,-57.18,32.0,BLANC SABLON ARP,QC,CA,METAR TAF
CYCA,,53.68,-57.03,12.0,CARTWRIGHT      ,NL,CA,METAR TAF
CYCB,71925,69.1,-105.12,19.0,CAMBRIDGE BAY AR,NU,CA,METAR rawinsonde TAF
CYCD,71890,49.05,-123.87,30.0,NANAIMO AIRPORT ,BC,CA,METAR TAF
CYCG,,49.28,-117.63,487.0,CASTLEGAR AIRPOR,BC,CA,METAR TAF
CYCK,,42.3,-82.08,196.0,CHATHAM         ,ON,CA,METAR
CYCO,71938,67.82,-115.15,20.0,COPPERMINE AIRPO,NU,CA,METAR TAF
CYCP,,52.13,-119.28,677.0,BLUE RIVER (MAN),BC,CA,METAR
CYCQ,,55.7,-121.62,614.0,CHETWYND AIRPORT,BC,CA,METAR
CYCS,,63.35,-90.72,7.0,CHESTERFIELD INL,NU,CA,METAR
CYCX,71701,45.83,-66.45,46.0,GAGETOWN  (CAN M,NB,CA,METAR TAF
CYCY,,70.48,-68.52,73.0,CYLDE AIRPORT   ,NU,CA,METAR TAF
CYDA,71966,64.03,-139.12,338.0,DAWSON AIRPORT  ,YT,CA,METAR TAF
CYDB,71001,61.37,-139.02,807.0,BURWASH         ,YT,CA,METAR TAF
CYDC,,49.47,-120.52,703.0,PRINCETON       ,BC,CA,METAR
CYDF,,49.22,-57.4,15.0,DEER LAKE AIRPOR,NL,CA,METAR TAF
CYDL,,58.42,-130.02,804.0,DEASE LAKE      ,BC,CA,METAR TAF
CYDN,71036,51.1,-100.05,302.0,DAUPHIN AIRPORT ,MB,CA,METAR TAF
CYDP,,56.53,-61.68,14.0,NAIN AIRPORT    ,NL,CA,METAR TAF
CYDQ,71471,55.75,-120.18,658.0,DAWSON CREEK ARP,BC,CA,METAR TAF
CYDR,,50.37,-102.53,615.0,WALDRON VOR     ,SK,CA
CYED,71121,53.67,-113.47,688.0,EDMONTON/NAMAO(M,AB,CA,METAR TAF
CYEG,71123,53.3,-113.58,710.0,EDMONTON INTL AR,AB,CA,METAR TAF
CYEK,,61.1,-94.07,7.0,ARVIAT AIRPORT  ,NU,CA,METAR TAF
CYEL,,46.35,-82.57,329.0,ELLIOT LAKE (SAW,ON,CA,METAR TAF
CYEN,71862,49.22,-102.97,580.0,ESTEVAN AIRPORT ,SK,CA,METAR TAF
CYER,71099,56.02,-87.68,11.0,FT SEVERN       ,ON,CA,METAR TAF
CYET,71167,53.57,-116.47,925.0,EDSON AIRPORT   ,AB,CA,METAR
CYEU,,80.0,-85.82,78.0,EUREKA          ,NU,CA,METAR TAF
CYEV,71957,68.32,-133.5,74.0,INUVIK AIRPORT  ,NT,CA,METAR rawinsonde TAF
CYFB,,63.75,-68.55,23.0,FROBISHER/IQALUI,NU,CA,METAR rawinsonde TAF
CYFC,71700,45.87,-66.53,16.0,FREDERICTON AIRP,NB,CA,METAR TAF
CYFO,,54.67,-101.67,303.0,FLIN FLON AIRPOR,MB,CA,METAR
CYFR,,61.17,-113.68,159.0,FORT RESOLUTION ,NT,CA,METAR
CYFS,71946,61.75,-121.22,174.0,FORT SIMPSON ARP,NT,CA,METAR TAF
CYFT,,55.07,-59.18,65.0,MAKKOVIK AIRPORT,NL,CA,METAR
CYGE,,51.3,-116.98,786.0,GOLDEN ARPT     ,BC,CA,METAR
CYGH,71491,66.23,-128.63,72.0,FORT GOOD HOPE A,NT,CA,METAR TAF
CYGK,,44.22,-76.58,91.0,KINGSTON ARPT (M,ON,CA,METAR TAF
CYGL,71827,53.62,-77.7,192.0,LA GRANDE RIVIER,QC,CA,METAR TAF
CYGM,71856,50.62,-97.02,230.0,GIMLI           ,MB,CA,METAR
CYGP,71188,48.77,-64.47,31.0,GASPE AIRPORT   ,QC,CA,METAR TAF
CYGQ,71834,49.77,-86.92,340.0,GERALDTON AIRPOR,ON,CA,METAR TAF
CYGR,,47.42,-61.77,4.0,ILES DE LA MADEL,QC,CA,METAR TAF
CYGT,,69.37,-81.82,49.0,IGLOOLIK AIRPORT,NU,CA,METAR TAF
CYGV,71313,50.28,-63.62,32.0,HAVRE ST PIERRE ,QC,CA,METAR TAF
CYGW,71905,55.27,-77.77,13.0,KUUJJUARAPIK ARP,QC,CA,METAR TAF
CYGX,71912,56.35,-94.7,145.0,GILLAM AIRPORT  ,MB,CA,METAR TAF
CYHA,,61.03,-69.62,31.0,QUAQTAQ AIRPORT ,QC,CA,METAR TAF
CYHB,71868,52.82,-102.32,358.0,HUDSON BAY      ,SK,CA,METAR
CYHD,,49.82,-92.75,414.0,DRYDEN AIRPORT  ,ON,CA,METAR TAF
CYHE,71187,49.37,-121.5,43.0,HOPE AIRPORT (MA,BC,CA,METAR
CYHH,,51.7,-76.13,245.0,NEMISCAU ARPT(SA,QC,CA,METAR
CYHI,,70.77,-117.78,33.0,HOLMAN ISLAND AR,NT,CA,METAR TAF
CYHK,,68.62,-95.85,36.0,GJOA HAVEN AIRPO,NU,CA,METAR TAF
CYHM,71263,43.17,-79.93,237.0,HAMILTON AIRPORT,ON,CA,METAR TAF
CYHU,71371,45.52,-73.42,26.0,SAINT HUBERT ARP,QC,CA,METAR TAF
CYHY,71935,60.83,-115.77,159.0,HAY RIVER AIRPOR,NT,CA,METAR TAF
CYHZ,71395,44.87,-63.5,136.0,HALIFAX INTL ARP,NS,CA,METAR TAF
CYID,,44.53,-65.77,152.0,DIGBY ARPT (AWRS,NS,CA,METAR
CYIK,,62.42,-77.93,44.0,IVUJIVIK ARPT(SA,QC,CA,METAR TAF
CYIN,,51.27,-121.68,1127.0,BLEIBLER RANCH  ,BC,CA,METAR
CYIO,,72.68,-77.97,61.0,POND INLET AIRPO,NU,CA,METAR TAF
CYIV,71145,53.85,-94.65,234.0,ISLAND LAKE AIRP,MB,CA,METAR TAF
CYJF,,60.23,-123.47,215.0,FORT LIARD AIRPO,NT,CA,METAR
CYJT,,48.55,-58.57,7.0,STEPHENVILLE ARP,NL,CA,METAR rawinsonde TAF
CYKA,71887,50.7,-120.45,344.0,KAMLOOPS AIRPORT,BC,CA,METAR TAF
CYKD,,68.22,-135.0,7.0,AKLAVIK AIRPORT ,NT,CA,METAR
CYKF,71368,43.47,-80.38,312.0,WATERLOO WELL   ,ON,CA,METAR TAF
CYKG,,61.58,-71.92,134.0,KANGIQSUJUAQ(SAW,QC,CA,METAR TAF
CYKJ,71125,57.25,-105.62,519.0,KEY LAKE        ,SK,CA,METAR TAF
CYKL,71921,54.8,-66.8,507.0,SCHEFFERVILLE AR,QC,CA,METAR TAF
CYKO,,60.82,-78.15,23.0,AKULIVIK AIRPORT,QC,CA,METAR
CYKP,71652,51.67,-85.9,181.0,OGOKI POST      ,ON,CA,METAR
CYKQ,,51.47,-78.75,28.0,WASKAGANISH AIRP,QC,CA,METAR TAF
CYKY,,51.52,-109.17,692.0,KINDERSLEY      ,SK,CA,METAR
CYKZ,71639,43.87,-79.37,198.0,TORONTO BUTTONVI,ON,CA,METAR TAF
CYLA,,59.3,-69.58,35.0,AUPALUK         ,QC,CA,METAR
CYLC,,62.85,-69.87,52.0,LAKE HARBOUR ARP,NU,CA,METAR
CYLD,71642,47.82,-83.35,449.0,CHAPLEAU ARPT(SA,ON,CA,METAR TAF
CYLF,,52.23,-87.88,242.0,LANSDOWNE HOUSE ,ON,CA,METAR
CYLH,,52.2,-87.93,245.0,LANSDOWNE HOUSE ,ON,CA,METAR
CYLJ,,54.12,-108.52,481.0,MEADOW LAKE AIRP,SK,CA,METAR
CYLK,,62.42,-110.67,183.0,LUTSEL KE ARPT (,NT,CA,METAR TAF
CYLL,71871,53.32,-110.07,664.0,LLOYDMINSTER ARP,AB,CA,METAR TAF
CYLT,,82.52,-62.32,9.0,ALERT AIRPORT   ,NU,CA,METAR TAF
CYLU,,58.72,-65.98,61.0,KANGIKSUALUJJUAQ,QC,CA,METAR
CYLW,71203,49.95,-119.37,420.0,KELOWNA APT     ,BC,CA,METAR rawinsonde TAF
CYMA,71965,63.62,-135.87,519.0,MAYO AIRPORT    ,YT,CA,METAR TAF
CYMD,,76.22,-119.32,12.0,MOULD BAY       ,NT,CA,METAR
CYMH,,52.3,-55.82,18.0,MARY'S HARBOUR  ,NL,CA,METAR TAF
CYMJ,,50.32,-105.55,578.0,MOOSE JAW (CAN M,SK,CA,METAR TAF
CYMM,71689,56.65,-111.22,371.0,FORT MCMURRAY AR,AB,CA,METAR TAF
CYMO,71836,51.28,-80.62,8.0,MOOSONEE (SAWR) ,ON,CA,METAR rawinsonde TAF
CYMT,,49.77,-74.52,388.0,CHIBOUGAMAU CHAP,QC,CA,METAR TAF
CYMU,,56.53,-76.52,69.0,UMIUJAQ         ,QC,CA,METAR
CYMX,,45.67,-74.03,78.0,MONTREAL/MIRABEL,QC,CA,METAR TAF
CYNA,71513,50.18,-61.78,9.0,NATASHQUAN AIRP ,QC,CA,METAR TAF
CYNC,,53.02,-78.82,13.0,WEMINDJI        ,QC,CA,METAR
CYND,,45.52,-75.57,57.0,GATINEAU AIRPORT,QC,CA,METAR TAF
CYNE,,53.97,-97.83,220.0,NORWAY HOUSE ARP,MB,CA,METAR TAF
CYNM,71947,49.77,-77.78,276.0,MATAGAMI AIRPORT,QC,CA,METAR
CYOA,,64.7,-110.62,461.0,EKATI (PWS)     ,NT,CA,METAR TAF
CYOC,71044,67.57,-139.83,253.0,OLD CROW AIRPORT,YT,CA,METAR TAF
CYOD,71120,54.4,-110.28,540.0,COLD LAKE (CAN  ,AB,CA,METAR TAF
CYOJ,71066,58.62,-117.17,339.0,HIGH LEVEL AIRPO,AB,CA,METAR TAF
CYOO,71697,43.92,-78.9,136.0,OSHAWA          ,ON,CA,METAR TAF
CYOW,71628,45.32,-75.67,111.0,OTTAWA INTL     ,ON,CA,METAR TAF
CYOY,71716,46.88,-71.5,167.0,VALCARTIER AIRPO,QC,CA,METAR TAF
CYPA,71869,53.22,-105.67,428.0,PRINCE ALBERT AR,SK,CA,METAR TAF
CYPC,,69.37,-124.07,5.0,PAULATUK AIRPORT,NT,CA,METAR TAF
CYPD,,45.67,-61.37,106.0,PORT HAWKESBURY ,NS,CA,METAR
CYPE,71068,56.22,-117.45,572.0,PEACE RIVER AIRP,AB,CA,METAR TAF
CYPG,71851,49.9,-98.28,270.0,PORTAGE SOUTHPOR,MB,CA,METAR TAF
CYPH,,58.47,-78.08,24.0,INUKJUAK        ,QC,CA,METAR rawinsonde TAF
CYPL,71845,51.43,-90.22,390.0,PICKLE LAKE     ,ON,CA,METAR rawinsonde TAF
CYPO,,54.98,-85.43,49.0,PEAWANUCK       ,ON,CA,METAR
CYPQ,71436,44.22,-78.37,190.0,PETERBOROUGH ARP,ON,CA,METAR TAF
CYPR,71022,54.28,-130.45,30.0,PRINCE RUPERT AR,BC,CA,METAR TAF
CYPS,,50.3,-122.73,204.0,PEMBERTON (AUTOB,BC,CA
CYPW,,49.83,-124.5,122.0,POWELL RIVER ARP,BC,CA,METAR
CYPX,,60.03,-77.27,10.0,PUVIRGNITUQ     ,QC,CA,METAR TAF
CYPY,,58.77,-111.12,225.0,FORT CHIPEWYAN A,AB,CA,METAR TAF
CYQA,71532,44.97,-79.3,277.0,MUSKOKA AIRPORT ,ON,CA,METAR TAF
CYQB,,46.78,-71.38,73.0,QUEBEC          ,QC,CA,METAR TAF
CYQC,,44.32,-77.63,139.0,STERLING        ,QC,CA,METAR
CYQD,71867,53.97,-101.08,268.0,THE PAS AIRPORT ,MB,CA,METAR rawinsonde TAF
CYQF,71878,52.17,-113.9,912.0,RED DEER AIRPORT,AB,CA,METAR TAF
CYQG,71538,42.27,-82.97,189.0,WINDSOR AIRPORT ,ON,CA,METAR TAF
CYQH,,60.12,-128.82,692.0,WATSON LAKE AIRP,YT,CA,METAR TAF
CYQI,71603,43.83,-66.08,37.0,YARMOUTH AIRPORT,NS,CA,METAR rawinsonde TAF
CYQK,71850,49.78,-94.37,413.0,KENORA AIRPORT  ,ON,CA,METAR TAF
CYQL,71267,49.63,-112.8,923.0,LETHBRIDGE VOR  ,AB,CA,METAR TAF
CYQM,71705,46.12,-64.67,67.0,MONCTON AIRPORT ,NB,CA,METAR TAF
CYQQ,,49.72,-124.9,24.0,COMOX (CAN MIL) ,BC,CA,METAR TAF
CYQR,,50.43,-104.67,576.0,REGINA AIRPORT  ,SK,CA,METAR TAF
CYQT,71072,48.37,-89.32,197.0,THUNDER BAY     ,ON,CA,METAR TAF
CYQU,71940,55.18,-118.88,668.0,GRANDE PRAIRIE A,AB,CA,METAR TAF
CYQV,71292,51.27,-102.47,493.0,YORKTON AIRPORT ,SK,CA,METAR TAF
CYQW,71876,52.77,-108.25,545.0,NORTH BATTLEFORD,SK,CA,METAR TAF
CYQX,,48.95,-54.58,144.0,GANDER INTL AIRP,NL,CA,METAR TAF
CYQY,,46.17,-60.03,58.0,SYDNEY AIRPORT  ,NS,CA,METAR TAF
CYQZ,71192,53.02,-122.52,548.0,QUESNEL AIRPORT ,BC,CA,METAR TAF
CYRA,,64.12,-117.32,232.0,RAE LAKES       ,NT,CA,METAR TAF
CYRB,,74.72,-94.97,59.0,RESOLUTE AIRPORT,NU,CA,METAR rawinsonde TAF
CYRJ,71728,48.52,-72.27,173.0,ROBERVAL AIRPORT,QC,CA,METAR TAF
CYRL,71854,51.07,-93.78,370.0,RED LAKE AIRPORT,ON,CA,METAR TAF
CYRQ,,46.35,-72.68,58.0,TROIS RIVIERES  ,QC,CA,METAR TAF
CYRT,,62.82,-92.12,29.0,RANKIN INLET ARP,NU,CA,METAR TAF
CYRV,71882,50.97,-118.17,456.0,REVELSTOKE AIRPO,BC,CA,METAR
CYSA,,43.92,-60.0,4.0,SABLE ISLAND(APT,NS,CA,METAR TAF
CYSB,71730,46.63,-80.8,349.0,SUDBURY AIRPORT ,ON,CA,METAR TAF
CYSC,71610,45.43,-71.68,236.0,SHERBROOKE      ,QC,CA,METAR TAF
CYSD,71128,50.27,-111.18,767.0,SUFFIELD AIRPORT,AB,CA,METAR
CYSE,,49.78,-123.17,52.0,SQUAMISH (AUTOB),BC,CA,METAR
CYSF,71132,59.25,-105.83,238.0,STONY RAPIDS ARP,SK,CA,METAR TAF
CYSJ,71609,45.32,-65.88,89.0,SAINT JOHN      ,NB,CA,METAR TAF
CYSK,,56.53,-79.25,28.0,SANIKILUAQ AIRPO,NU,CA,METAR
CYSL,71703,47.15,-67.83,242.0,SAINT LEONARD AR,NB,CA,METAR TAF
CYSM,71934,60.03,-111.92,203.0,FORT SMITH AIRPO,NT,CA,METAR rawinsonde TAF
CYSN,,43.2,-79.17,96.0,ST. CATHARINES A,ON,CA,METAR TAF
CYSP,,48.75,-86.35,312.0,MARATHON        ,ON,CA,METAR TAF
CYSR,,72.97,-84.62,649.0,NANISIVIK AIRPOR,NU,CA,METAR TAF
CYSY,,72.0,-125.23,83.0,SACHS HARBOUR(M ,NT,CA,METAR TAF
CYTA,,49.67,-93.73,432.0,RAWSON LAKE     ,ON,CA,METAR
CYTE,71910,64.22,-76.52,49.0,CAPE DORSET AIRP,NU,CA,METAR TAF
CYTH,71079,55.8,-97.83,212.0,THOMPSON AIRPORT,MB,CA,METAR TAF
CYTJ,,48.82,-87.08,287.0,TERRACE BAY (SAW,ON,CA,METAR TAF
CYTL,71675,53.82,-89.88,218.0,BIG TROUT LAKE  ,ON,CA,METAR TAF
CYTN,,45.62,-62.62,97.0,TRENTON MUNICIPA,NS,CA,METAR
CYTQ,,58.67,-69.95,14.0,TASIUJAQ A      ,QC,CA,METAR TAF
CYTR,71621,44.12,-77.52,80.0,TRENTON (CAN MIL,ON,CA,METAR TAF
CYTS,71739,48.57,-81.37,290.0,TIMMINS AIRPORT ,ON,CA,METAR TAF
CYTZ,71265,43.63,-79.4,76.0,TORONTO IL  VOR ,ON,CA,METAR TAF
CYUA,71968,68.92,-137.23,25.0,SHINGLE POINT AR,YT,CA,METAR
CYUB,,69.43,-133.02,5.0,TUKTOYAKTUK     ,NT,CA,METAR TAF
CYUJ,71937,68.5,-113.22,16.0,LADY FRANKLIN PO,NU,CA,METAR
CYUL,71627,45.47,-73.73,31.0,MONTREAL/DORVAL ,QC,CA,METAR TAF
CYUS,71911,68.78,-93.42,30.0,SHEPHERD BAY ARP,NU,CA,METAR
CYUT,,66.52,-86.22,22.0,REPULSE BAY AIRP,NU,CA,METAR TAF
CYUX,,68.77,-81.22,8.0,HALL BEACH AIRPO,NU,CA,METAR rawinsonde TAF
CYUY,,48.2,-78.82,304.0,ROUYN AIRPORT   ,QC,CA,METAR TAF
CYVC,71922,55.15,-105.27,378.0,LA RONGE AIRPORT,SK,CA,METAR TAF
CYVL,,67.02,-126.13,261.0,COLVILLE LAKE   ,NT,CA,METAR
CYVM,,67.55,-64.02,3.0,QIKIQTARJUAQ    ,NU,CA,METAR TAF
CYVO,71941,48.07,-77.77,329.0,VAL D'OR AIRPORT,QC,CA,METAR TAF
CYVP,,58.12,-68.42,28.0,KUUJJUAQ AIRPORT,QC,CA,METAR rawinsonde TAF
CYVQ,71043,65.27,-126.78,63.0,NORMAN WELLS ARP,NT,CA,METAR rawinsonde TAF
CYVR,71892,49.17,-123.17,2.0,VANCOUVER INTL A,BC,CA,METAR TAF
CYVT,,55.83,-108.42,438.0,BUFFALO NARROWS ,SK,CA,METAR TAF
CYVV,71633,44.75,-81.1,221.0,WIARTON AIR     ,ON,CA,METAR TAF
CYWA,71625,45.95,-77.32,121.0,PETAWAWA        ,ON,CA,METAR TAF
CYWE,,64.18,-114.08,374.0,WEKWEETI        ,NT,CA,METAR TAF
CYWG,,49.9,-97.23,238.0,WINNIPEG INTL AR,MB,CA,METAR TAF
CYWH,,48.42,-123.38,4.0,VICTORIA HARBOUR,BC,CA,METAR TAF
CYWJ,,65.22,-123.43,208.0,FORT FRANKLIN AR,NT,CA,METAR TAF
CYWK,71825,52.92,-66.87,547.0,WABUSH LAKE AIRP,NL,CA,METAR TAF
CYWL,71104,52.18,-122.07,942.0,WILLIAMS LAKE AR,BC,CA,METAR TAF
CYWO,71496,65.77,-111.25,494.0,LUPIN ARPT (SAWR,NU,CA,METAR TAF
CYWY,,63.22,-123.43,135.0,WRIGLEY AIRPORT ,NT,CA,METAR
CYXC,71880,49.6,-115.78,928.0,CRANBROOK       ,BC,CA,METAR TAF
CYXD,71879,53.57,-113.52,667.0,EDMONTON MUNICIP,AB,CA,METAR TAF
CYXE,,52.17,-106.7,504.0,SASKATOON AIRPOR,SK,CA,METAR rawinsonde TAF
CYXH,71247,50.02,-110.72,717.0,MEDICINE HAT    ,AB,CA,METAR TAF
CYXJ,71943,56.25,-120.73,700.0,FORT ST. JOHN AR,BC,CA,METAR TAF
CYXL,71842,50.12,-91.9,381.0,SIOUX LOOKOUT AR,ON,CA,METAR TAF
CYXN,,62.23,-92.58,9.0,WHALE COVE AIRPO,NU,CA,METAR
CYXP,,66.15,-65.72,29.0,PANGNIRTUNG AIRP,NU,CA,METAR TAF
CYXQ,,62.42,-140.87,663.0,BEAVER CREEK ARP,YT,CA,METAR
CYXR,71735,47.7,-79.85,244.0,EARLTON AIRPORT ,ON,CA,METAR TAF
CYXS,,53.88,-122.68,685.0,PRINCE GEORGE   ,BC,CA,METAR rawinsonde TAF
CYXT,71951,54.47,-128.57,213.0,TERRACE AIRPORT ,BC,CA,METAR TAF
CYXU,71623,43.03,-81.15,278.0,LONDON AIRPORT  ,ON,CA,METAR TAF
CYXX,,49.03,-122.38,54.0,ABBOTSFORD AIRPO,BC,CA,METAR TAF
CYXY,71964,60.72,-135.07,677.0,WHITEHORSE AIRPO,YT,CA,METAR rawinsonde TAF
CYXZ,71738,47.97,-84.77,287.0,WAWA AIRPORT    ,ON,CA,METAR TAF
CYYB,71731,46.35,-79.42,360.0,NORTH BAY AIRPOR,ON,CA,METAR TAF
CYYC,71877,51.12,-114.02,1085.0,CALGARY INTNL AR,AB,CA,METAR TAF
CYYD,71950,54.82,-127.18,527.0,SMITHERS AIRPORT,BC,CA,METAR TAF
CYYE,71945,58.83,-122.58,379.0,FORT NELSON AIRP,BC,CA,METAR rawinsonde TAF
CYYF,71889,49.47,-119.6,342.0,PENTICTON AIRPOR,BC,CA,METAR TAF
CYYG,71706,46.28,-63.12,48.0,CHARLOTTETOWN AR,PE,CA,METAR TAF
CYYH,,69.53,-93.57,19.0,SPENCE BAY AIRPO,NU,CA,METAR TAF
CYYJ,71799,48.63,-123.42,16.0,VICTORIA INTL AR,BC,CA,METAR TAF
CYYL,71078,56.87,-101.07,351.0,LYNN LAKE AIRPOR,MB,CA,METAR TAF
CYYN,71142,50.28,-107.68,814.0,SWIFT CURREN    ,SK,CA,METAR TAF
CYYQ,,58.75,-94.07,20.0,CHURCHILL AIRPOR,MB,CA,METAR rawinsonde TAF
CYYR,,53.32,-60.42,42.0,GOOSE BAY AIRPOR,NL,CA,METAR rawinsonde TAF
CYYT,,47.62,-52.73,128.0,ST JOHNS ARP    ,NL,CA,METAR rawinsonde TAF
CYYU,71831,49.42,-82.47,228.0,KAPUSKASING AIRP,ON,CA,METAR TAF
CYYW,,50.3,-88.9,320.0,ARMSTRONG (MARS),ON,CA,METAR
CYYY,71718,48.6,-68.22,43.0,MONT JOLI AIRPOR,QC,CA,METAR TAF
CYYZ,71624,43.67,-79.62,171.0,TORONTO/PEARSON ,ON,CA,METAR TAF
CYZE,,45.88,-82.57,189.0,GORE BAY AIRPORT,ON,CA,METAR TAF
CYZF,71936,62.47,-114.45,202.0,YELLOWKNIFE AIRP,NT,CA,METAR TAF
CYZG,,62.17,-75.67,217.0,SALLIUT ARPT (SA,QC,CA,METAR TAF
CYZH,,55.28,-114.77,583.0,SLAVE LAKE AIRPO,AB,CA,METAR TAF
CYZP,71101,53.25,-131.82,7.0,SANDSPIT AIRPORT,BC,CA,METAR TAF
CYZR,71704,43.0,-82.3,181.0,SARNIA AIRPORT  ,ON,CA,METAR TAF
CYZS,,64.2,-83.35,60.0,CORAL HARBOUR AR,NU,CA,METAR rawinsonde TAF
CYZT,,50.68,-127.37,13.0,PORT HARDY AIRPO,BC,CA,METAR rawinsonde TAF
CYZU,71930,54.15,-115.78,785.0,WHITECOURT AIRPO,AB,CA,METAR TAF
CYZV,,50.22,-66.27,43.0,SEPT ILES AIRPOR,QC,CA,METAR rawinsonde TAF
CYZW,71045,60.17,-132.75,700.0,TESLIN ARPT (AUT,YT,CA,METAR TAF
CYZX,71397,44.98,-64.92,28.0,GREENWOOD (CAN M,NS,CA,METAR TAF
CYZY,,55.3,-123.13,694.0,MACKENZIE AIRPOR,BC,CA,METAR TAF
CZBF,71574,47.62,-65.75,60.0,BATHURST ARPT(AW,NB,CA,METAR TAF
CZCP,71948,70.17,-124.68,23.0,CAPE PARRY AUTO4,NT,CA,METAR
CZCR,71315,47.98,-66.33,39.0,CHARLO AIRPORT  ,NB,CA,METAR
CZDB,71317,45.42,-63.47,38.0,DEBERT          ,NS,CA,METAR
CZED,71126,53.55,-114.1,766.0,EDMONTON/STONY P,AB,CA,METAR
CZEL,,43.65,-80.42,370.0,ELORA RCS       ,ON,CA,METAR
CZEM,,52.22,-78.52,9.0,EASTMAIN RIVER A,QC,CA,METAR
CZEV,71364,68.32,-133.48,92.0,INUVIK          ,NT,CA,METAR
CZFA,,62.2,-133.38,702.0,FARO APT ARTCC  ,YT,CA,METAR TAF
CZFD,,59.32,-107.18,131.0,CANADA ARTCC    ,SK,CA
CZFM,,67.4,-134.87,33.0,FORT MCPHERSON A,NT,CA,METAR TAF
CZFN,,64.92,-125.57,135.0,FORT NORMAN AIRP,NT,CA,METAR
CZFS,71365,61.77,-121.23,174.0,FORT SIMPSON    ,NT,CA,METAR
CZGJ,,47.25,-84.6,520.0,MONTREAL RIV    ,ON,CA,METAR
CZHK,71363,68.63,-95.85,42.0,GJOA HAVEN      ,NU,CA,METAR
CZHY,71361,60.83,-115.78,159.0,HAY RIVER       ,NT,CA,METAR
CZKA,,50.7,-120.43,345.0,KAMLOOPS        ,BC,CA,METAR
CZKD,71572,56.03,-96.52,190.0,KELSEY DAM CS   ,MB,CA,METAR
CZLT,71355,82.5,-62.33,65.0,ALERT           ,NU,CA,METAR
CZMD,71678,53.43,-91.77,276.0,MUSKRAT DAM     ,ON,CA,METAR TAF
CZMJ,71539,50.33,-105.53,571.0,MOOSE JAW       ,SK,CA,METAR
CZMT,,54.03,-132.13,11.0,MASSET          ,BC,CA,METAR TAF
CZMU,71354,53.57,-112.3,682.0,MUNDARE AGDM    ,AB,CA,METAR
CZOL,71351,53.65,-113.35,645.0,OLIVER AGDM     ,AB,CA,METAR
CZPC,71085,49.52,-114.0,1187.0,PINCHER CREEK(M ,AB,CA,METAR
CZPS,71353,52.43,-113.6,953.0,PRENTISS        ,AB,CA,METAR
CZRP,71983,75.37,-105.72,6.0,RAE POINT       ,NU,CA,METAR
CZSJ,71098,53.07,-93.35,286.0,SANDY LAKE      ,ON,CA,METAR TAF
CZSM,71362,60.03,-111.93,203.0,FORT SMITH      ,NT,CA,METAR
CZSP,71310,46.45,-62.58,31.0,ST PETERS       ,PE,CA,METAR
CZST,71955,55.93,-129.98,10.0,STEWART AIRPORT ,BC,CA,METAR
CZTB,71667,48.37,-89.32,197.0,THUNDER BAY     ,ON,CA,METAR
CZUG,71563,50.18,-98.38,248.0,DELTA MARSH CS  ,MB,CA,METAR
CZUM,71002,53.55,-64.1,431.0,CHURCHILL FALLS ,NL,CA,METAR TAF
CZVE,,70.17,-124.68,1.0,CANADA/ARTCC    ,NT,CA
CZVL,,53.67,-113.85,685.0,EDMONTON/VILLENU,AB,CA,METAR TAF
CZXR,71533,47.7,-79.83,243.0,EARLTON         ,ON,CA,METAR
CZZJ,71156,53.58,-116.47,927.0,EDSON           ,AB,CA,METAR
DAAD,60515,35.32,4.2,461.0,BOU-SAADA       ,,DZ,METAR TAF
DAAE,60402,36.72,5.07,1.0,BEJAIA/SOUMMAM  ,,DZ,METAR TAF
DAAF,,26.97,1.07,309.0,AOULEF          ,,DZ,METAR
DAAG,60390,36.68,3.22,18.0,DAR-EL-BEIDA/HOU,,DZ,METAR TAF
DAAJ,60670,24.28,9.47,962.0,DJANET/TISKA    ,,DZ,METAR TAF
DAAP,60640,26.72,8.62,542.0,ILLIZI/ILLIRANE ,,DZ,METAR TAF
DAAS,60445,36.18,5.33,1012.0,SETIF/AIN-ARNAT ,,DZ,METAR TAF
DAAT,,22.82,5.47,1376.0,TAMANRASSET/AGUE,,DZ,METAR TAF
DAAV,60351,36.8,5.88,11.0,JIJEL/TAHER     ,,DZ,METAR TAF
DAAW,,28.12,6.82,387.0,BORDJ OMAR DRISS,,DZ,METAR
DAAY,60549,33.53,-0.25,1116.0,MECHERIA        ,,DZ,METAR TAF
DABB,60360,36.82,7.82,3.0,ANNABA/EL MELLAH,,DZ,METAR TAF
DABC,60419,36.27,6.62,686.0,CONSTANTINE/EL B,,DZ,METAR TAF
DABP,60355,36.92,6.95,7.0,SKIKDA          ,,DZ,METAR
DABS,60475,35.43,8.12,806.0,TEBESSA         ,,DZ,METAR TAF
DABT,60468,35.75,6.32,813.0,BATNA           ,,DZ,METAR TAF
DAEF,,28.43,7.55,475.0,TINFOUYE        ,,DZ,METAR TAF
DAEN,,29.73,6.72,252.0,RHOURD NOUSS    ,,DZ,METAR TAF
DAFH,,32.93,3.32,774.0,TILREMPT/HASSI  ,,DZ,METAR TAF
DAFI,60535,34.67,3.25,1144.0,DJELFA/TLETSI   ,,DZ,METAR
DAMH,,29.23,6.5,294.0,DAMRA           ,,DZ,METAR
DAOB,60511,35.33,1.47,976.0,TIARET          ,,DZ,METAR TAF
DAOF,60656,27.7,-8.17,441.0,TINDOUF         ,,DZ,METAR TAF
DAOI,60425,36.22,1.32,141.0,CHLEF           ,,DZ,METAR TAF
DAOL,,35.53,-0.52,103.0,ORAN/TAFAROUI   ,,DZ,METAR
DAOM,,35.38,-0.13,492.0,MASCARA         ,,DZ,METAR
DAON,60531,35.02,-1.47,245.0,TLEMCEN/ZENATA  ,,DZ,METAR TAF
DAOO,60490,35.62,-0.62,87.0,ORAN/ES SENIA   ,,DZ,METAR TAF
DAOR,60571,31.65,-2.27,809.0,BECHAR/OUAKDA   ,,DZ,METAR TAF
DAOV,60507,35.2,0.15,506.0,MASCARA/GHRISS  ,,DZ,METAR TAF
DAOY,,33.72,1.08,1340.0,EL BAYADH       ,,DZ,METAR TAF
DATG,,19.57,5.75,399.0,IN GUEZZAM      ,,DZ,METAR
DATM,,21.38,0.92,398.0,BORDJ MOKHTAR   ,,DZ,METAR TAF
DAUA,60620,27.83,-0.18,278.0,ADRAR/TOUAT     ,,DZ,METAR TAF
DAUB,60525,34.78,5.73,75.0,BISKRA          ,,DZ,METAR TAF
DAUE,60590,30.57,2.87,396.0,EL GOLEA        ,,DZ,METAR TAF
DAUG,60566,32.38,3.78,444.0,GHARDAIA/NOUMERA,,DZ,METAR TAF
DAUH,60581,31.67,6.15,141.0,HASSI-MESSAOUD/I,,DZ,METAR TAF
DAUI,,27.25,2.52,271.0,IN SALAH NORTH  ,,DZ,METAR TAF
DAUK,60555,33.08,6.08,83.0,TOUGGOURT/SIDI M,,DZ,METAR TAF
DAUL,60545,33.77,2.92,755.0,LAGHOUAT        ,,DZ,METAR TAF
DAUO,60559,33.5,6.78,55.0,EL OUED/GUEMER  ,,DZ,METAR TAF
DAUT,60607,29.25,0.27,307.0,TIMIMOUN        ,,DZ,METAR TAF
DAUU,60580,31.92,5.4,147.0,OUARGLA         ,,DZ,METAR TAF
DAUZ,60611,28.05,9.63,567.0,IN AMENAS/ZARZAI,,DZ,METAR TAF
DBBB,65344,6.35,2.38,4.0,COTONOU/CADJEHOU,,BJ,METAR TAF
DBBC,65338,7.17,2.07,167.0,BOHICON/CANA    ,,BJ,METAR
DBBK,65306,11.12,2.92,292.0,KANDI           ,,BJ,METAR
DBBN,65319,10.32,1.37,461.0,NATITINGOU      ,,BJ,METAR
DBBP,65330,9.33,2.62,393.0,PARAKOU         ,,BJ,METAR
DBBS,65335,8.02,2.47,200.0,SAVE            ,,BJ,METAR
DFCC,65502,13.57,-2.42,336.0,OUAHIGOUYA      ,,BF,METAR
DFCO,65516,11.75,-2.92,271.0,BOROMO          ,,BF,METAR
DFCP,65518,11.15,-1.13,322.0,PO              ,,BF,METAR
DFEE,65501,14.02,-0.02,277.0,DORI            ,,BF,METAR
DFEF,65507,12.02,0.37,309.0,FADA N'GOURMA   ,,BF,METAR
DFFD,65503,12.35,-1.52,309.0,OUAGADOUGOU (MIL,,BF,METAR TAF
DFOD,65505,12.47,-3.47,300.0,DEDOUGOU        ,,BF,METAR
DFOG,65522,10.32,-3.17,335.0,GAOUA           ,,BF,METAR
DFOO,65510,11.17,-4.32,461.0,BOBO-DIOULASSO  ,,BF,METAR TAF
DGAA,65472,5.58,-0.17,68.0,ACCRA/KOTOKA INT,,GH,METAR TAF
DGAD,65475,5.77,0.62,7.0,ADA             ,,GH,METAR
DGAH,65453,6.58,0.47,158.0,HO              ,,GH,METAR
DGAK,65460,6.08,0.12,19.0,AKUSE           ,,GH,METAR
DGAS,65469,5.2,-1.07,47.0,SALTPOND        ,,GH,METAR
DGAT,65473,5.62,0.0,18.0,TEMA            ,,GH,METAR
DGKA,65457,5.92,-0.97,140.0,AKIM ODA        ,,GH,METAR
DGKK,65459,6.07,-0.25,167.0,KOFORIDUA       ,,GH,METAR
DGLB,65416,9.02,-2.47,301.0,BOLE            ,,GH,METAR
DGLE,,9.55,-0.85,169.0,TAMALE (AFB/CIV),,GH,METAR TAF
DGLN,65401,10.9,-1.1,203.0,NAVRONGO        ,,GH,METAR
DGLW,65404,10.05,-2.5,323.0,WA              ,,GH,METAR
DGLY,65420,9.43,-0.02,197.0,YENDI           ,,GH,METAR
DGSB,65445,6.2,-2.32,172.0,SEFWI BEKWAI    ,,GH,METAR
DGSI,65442,6.72,-1.6,283.0,KUMASI          ,,GH,METAR TAF
DGSN,65439,7.32,-2.32,312.0,SUNYANI         ,,GH,METAR
DGSW,65432,7.75,-2.1,340.0,WENCHI          ,,GH,METAR
DGTK,,4.9,-1.77,5.0,TAKORADI (AFB)  ,,GH,METAR TAF
DGTX,65465,4.87,-2.22,40.0,AXIM            ,,GH,METAR
DIAD,65585,5.28,-3.28,39.0,ADIAKE          ,,CI,METAR
DIAP,65578,5.25,-3.92,4.0,ABIDJAN/PORT BOU,,CI,METAR TAF
DIBK,,7.73,-5.07,363.0,BOUAKE (CIV/MIL),,CI,METAR TAF
DIBU,65545,8.05,-2.77,370.0,BONDOUKOU/SOKO  ,,CI,METAR
DIDK,65562,6.65,-4.7,92.0,DIMBOKRO CITY   ,,CI,METAR
DIDL,65560,6.87,-6.47,277.0,DALOA           ,,CI,METAR
DIFK,,9.58,-5.2,323.0,FERKESSEDOUGOU  ,,CI,METAR
DIGA,65557,6.12,-5.95,210.0,GAGNOA CITY     ,,CI,METAR
DIKO,65536,9.42,-5.62,381.0,KORHOGO         ,,CI,METAR
DIMN,65548,7.37,-7.52,340.0,MAN             ,,CI,METAR
DIOD,65528,9.5,-7.57,421.0,ODIENNE         ,,CI,METAR
DISP,65594,4.75,-6.65,30.0,SAN PEDRO       ,,CI,METAR
DISS,65599,4.95,-6.07,66.0,SASSANDRA/DREWIN,,CI,METAR
DITB,65592,4.42,-7.37,21.0,TABOU           ,,CI,METAR
DIYO,,6.9,-5.35,202.0,YAMOUSSOUKRO    ,,CI,METAR TAF
DNAA,,9.0,7.27,338.0,ABUJA           ,,NG,METAR TAF
DNAK,,7.25,5.3,328.0,AKURE AIRPORT   ,,NG,METAR TAF
DNBE,65229,6.32,5.6,77.0,BENIN CITY(CIV/M,,NG,METAR TAF
DNBI,65112,9.08,6.02,143.0,BIDA            ,,NG,METAR
DNCA,65264,4.97,8.33,64.0,CALABAR         ,,NG,METAR TAF
DNEN,65257,6.47,7.55,142.0,ENUGU           ,,NG,METAR TAF
DNGO,,10.3,10.9,510.0,GOMBE           ,,NG,METAR TAF
DNGU,65015,12.17,6.7,469.0,GUSAU           ,,NG,METAR
DNIB,65208,7.37,3.98,220.0,IBADAN          ,,NG,METAR TAF
DNIL,65101,8.43,4.48,341.0,ILORIN          ,,NG,METAR TAF
DNIM,,5.43,7.2,113.0,SAM MBAKWE      ,,NG,METAR TAF
DNJO,65134,9.87,8.9,1284.0,JOS             ,,NG,METAR TAF
DNKA,65019,10.58,7.45,631.0,KADUNA (CIV/MIL),,NG,METAR TAF
DNKN,65046,12.05,8.52,471.0,KANO/MALLAM AMIN,,NG,METAR TAF
DNKT,,13.0,7.67,504.0,KATSINA/YARADURA,,NG,METAR TAF
DNMA,65082,11.85,13.07,335.0,MAIDUGURI       ,,NG,METAR TAF
DNMK,65271,7.7,8.62,99.0,MAKURDI (MIL)   ,,NG,METAR
DNMM,65201,6.57,3.32,27.0,LAGOS/IKEJA     ,,NG,METAR TAF
DNMN,,9.65,6.47,268.0,MINNA AIRPORT   ,,NG,METAR TAF
DNOS,65215,7.77,4.47,304.0,OSHOGBO         ,,NG,METAR
DNPO,65250,4.83,7.02,17.0,PORT HARCOURT   ,,NG,METAR TAF
DNSO,65010,12.92,5.2,302.0,SOKOTO          ,,NG,METAR TAF
DNSU,,5.6,5.82,15.0,OSUBI           ,,NG,TAF
DNYO,,9.27,12.42,178.0,YOLA            ,,NG,METAR TAF
DNZA,,11.12,7.68,655.0,ZARIA           ,,NG,METAR
DRRB,61075,13.8,5.25,273.0,BIRNI-N'KONNI   ,,NE,METAR
DRRG,61099,11.87,3.45,203.0,GAYA            ,,NE,METAR
DRRI,61017,18.67,12.92,357.0,BILMA           ,,NE,METAR
DRRL,61036,14.18,1.43,210.0,TILLABERY       ,,NE,METAR
DRRM,61080,13.5,7.12,374.0,MARADI          ,,NE,METAR
DRRN,61052,13.47,2.17,223.0,NIAMEY (CIV/MIL),,NE,METAR TAF
DRRT,,14.87,5.27,387.0,TAHOUA          ,,NE,METAR
DRZA,61024,16.97,8.0,506.0,AGADEZ SOUTH (MI,,NE,METAR TAF
DRZF,61085,13.42,12.77,305.0,DIFFA           ,,NE,METAR
DRZG,61045,13.97,10.3,460.0,GOURE           ,,NE,METAR
DRZM,61096,13.22,11.97,337.0,MAINE-SOROA     ,,NE,METAR
DRZR,61090,13.77,8.98,457.0,ZINDER          ,,NE,METAR TAF
DTKA,60710,36.98,8.88,70.0,TABARKA         ,,TN,METAR TAF
DTMB,,35.77,10.75,1.0,HABIB BOURGUIBA ,,TN,METAR TAF
DTNH,,36.07,10.43,1.0,ENFIDHA         ,,TN,METAR TAF
DTNZ,,36.08,10.43,21.0,ZINE EL ABIDINE ,,TN,METAR TAF
DTTA,60715,36.85,10.22,4.0,TUNIS/CARTHAGE  ,,TN,METAR TAF
DTTB,60714,37.25,9.8,4.0,BIZERTE/SIDI AHM,,TN,METAR TAF
DTTD,60775,32.32,10.4,306.0,REMADA          ,,TN,METAR TAF
DTTF,60745,34.42,8.82,314.0,GAFSA           ,,TN,METAR TAF
DTTG,60765,33.73,9.92,120.0,GABES           ,,TN,METAR TAF
DTTJ,60769,33.87,10.77,3.0,DJERBA MELLITA  ,,TN,METAR TAF
DTTK,60735,35.67,10.08,65.0,KAIROUAN        ,,TN,METAR
DTTL,60720,36.85,11.07,18.0,KELIBIA         ,,TN,METAR
DTTM,60740,35.67,10.75,3.0,MONASTIR-SKANES ,,TN,METAR
DTTN,60725,36.47,8.8,145.0,JENDOUBA        ,,TN,METAR
DTTR,60780,31.7,9.27,253.0,EL BORMA        ,,TN,METAR TAF
DTTX,60750,34.72,10.68,17.0,SFAX/EL-MAOU    ,,TN,METAR TAF
DTTZ,60760,33.93,8.1,87.0,TOZEUR/NEFTA    ,,TN,METAR TAF
DXAK,65376,7.53,1.12,318.0,ATAKPAME/AKPAKA ,,TG,METAR
DXDP,,10.8,0.23,270.0,DJANGOU AIRPORT ,,TG,METAR
DXMG,65352,10.37,0.47,153.0,MANGO/SANSANNE  ,,TG,METAR
DXNG,65355,9.77,1.1,343.0,NAIMTOUGOU(CIV/M,,TG,METAR TAF
DXSK,65361,9.0,1.15,381.0,SOKODE          ,,TG,METAR
DXTA,65380,6.58,1.5,44.0,TABLIGBO        ,,TG,METAR
DXXX,65387,6.17,1.25,22.0,LOME/TOKOIN (MIL,,TG,METAR TAF
EBAW,,51.2,4.47,7.0,ANTWERP/DEURNE  ,,BE,METAR TAF
EBBE,,50.75,4.77,127.0,BEAUVECHAIN (BAF,,BE,METAR TAF
EBBL,,51.17,5.47,50.0,KLEINE-BROGEL(BA,,BE,METAR TAF
EBBR,,50.9,4.52,49.0,BRUSSELS NATIONA,,BE,METAR TAF
EBBT,06452,51.32,4.5,23.0,BRASSCHAAT (MIL),,BE,METAR TAF
EBBX,06467,49.88,5.22,461.0,BERTRIX (BEL-AFB,,BE,METAR
EBCI,,50.47,4.45,176.0,CHARLEROI/GOSSEL,,BE,METAR TAF
EBCV,,50.57,3.82,56.0,CHIEVRES AB     ,,BE,METAR TAF
EBDT,,51.02,5.07,25.0,SCHAFFEN        ,,BE,METAR TAF
EBFN,,51.08,2.65,9.0,KOKSIJDE (BEL-AF,,BE,METAR rawinsonde TAF
EBFS,,50.23,4.65,276.0,FLORENNES (BEL-A,,BE,METAR TAF
EBHN,,51.3,4.38,3.0,HOEVENEN        ,,BE,METAR
EBLB,,50.47,6.17,563.0,ELSENBORN (MIL) ,,BE,METAR TAF
EBLG,,50.63,5.45,187.0,BIERSET/LIEGE (C,,BE,METAR TAF
EBLH,,50.63,5.45,178.0,BIERSET/LIEGE (M,,BE,METAR TAF
EBMB,06448,50.88,4.5,55.0,MELSBROEK (BEL-A,,BE,METAR
EBOS,,51.2,2.87,5.0,OOSTENDE AIRPORT,,BE,METAR TAF
EBSP,06490,50.47,5.92,482.0,SPA/LA SAUVENIER,,BE,METAR
EBST,06470,50.78,5.2,75.0,ST. TRUIDEN (BAF,,BE,METAR
EBSU,06476,50.02,5.4,557.0,SAINT HUBERT (MI,,BE,METAR rawinsonde
EBSZ,06428,50.93,3.65,37.0,SEMMERZAKE (MIL),,BE,METAR
EBTN,06463,50.77,4.95,81.0,GOETSENHOVEN (MI,,BE,METAR
EBWE,06462,51.42,5.0,60.0,WEELDE (MIL)    ,,BE,METAR
EBWM,,50.88,4.52,58.0,BRUSSELS (MIL)  ,,BE,METAR
EBZH,,50.97,5.38,43.0,HASSELT KIVIT   ,,BE,METAR
EBZW,06481,51.02,5.53,63.0,GENK/ZWARTBERG  ,,BE,METAR
EDAC,,50.98,12.5,193.0,ALTENBURG-NOBITZ,,DE,METAR TAF
EDAH,,53.87,14.15,22.0,HERINGSDORF     ,,DE,METAR TAF
EDBC,,51.85,11.42,178.0,COCHSTEDT ARPT  ,,DE,METAR TAF
EDBM,,52.1,11.58,82.0,MAGDEBURG       ,,DE,METAR TAF
EDDB,10385,52.38,13.53,48.0,BERLIN/BRANDERNB,,DE,METAR TAF
EDDC,10488,51.13,13.75,227.0,DRESDEN/KLOTZSCH,,DE,METAR TAF
EDDE,10554,50.98,10.97,314.0,ERFURT/BINDERSLE,,DE,METAR TAF
EDDF,10637,50.05,8.6,113.0,FRANKFURT MAIN A,,DE,METAR TAF
EDDG,10315,52.13,7.7,46.0,MUENSTER/OSNABRU,,DE,METAR TAF
EDDH,10147,53.63,10.0,8.0,HAMBURG/FUHLSBUT,,DE,METAR TAF
EDDI,10384,52.47,13.4,47.0,BERLIN/TEMPELHOF,,DE,METAR TAF
EDDK,10513,50.87,7.15,92.0,KOELN/BONN      ,,DE,METAR TAF
EDDL,10400,51.3,6.77,37.0,DUESSELDORF     ,,DE,METAR TAF
EDDM,10866,48.35,11.82,445.0,MUNICH-FLUGHAFEN,,DE,METAR TAF
EDDN,10763,49.5,11.05,312.0,NUERNBERG       ,,DE,METAR TAF
EDDP,10469,51.43,12.23,129.0,LEIPZIG/SCHKEUDI,,DE,METAR TAF
EDDR,10708,49.22,7.1,317.0,SAARBRUECKEN    ,,DE,METAR TAF
EDDS,10738,48.68,9.22,374.0,STUTTGART/ECHTER,,DE,METAR TAF
EDDT,10382,52.57,13.32,31.0,BERLIN/TEGEL (FA,,DE,METAR TAF
EDDV,10338,52.47,9.68,53.0,HANNOVER        ,,DE,METAR TAF
EDDW,10224,53.03,8.8,5.0,BREMEN          ,,DE,METAR TAF
EDFE,10733,49.97,8.63,113.0,EGELSBACH       ,,DE,METAR
EDFH,10616,49.95,7.27,494.0,HAHN            ,,DE,METAR TAF
EDFM,10729,49.47,8.52,94.0,MANNHEIM        ,,DE,METAR TAF
EDGS,10528,50.7,8.08,595.0,SIEGERLAND      ,,DE,METAR TAF
EDHF,10142,54.0,9.57,26.0,ITZEHOE         ,,DE,METAR
EDHI,10149,53.53,9.83,5.0,HAMBURG/FINKENWE,,DE,METAR TAF
EDHK,,54.38,10.15,24.0,KIEL/HOLTENAU CI,,DE,METAR TAF
EDHL,10156,53.8,10.72,13.0,LUEBECK/BLANKENS,,DE,METAR TAF
EDJA,10947,47.98,10.23,625.0,MEMMINGEN ALLGAU,,DE,METAR TAF
EDLN,,51.23,6.5,38.0,MONCHENGLADBACH ,,DE,METAR TAF
EDLP,10426,51.62,8.62,211.0,PADERBORN/LIPPST,,DE,METAR TAF
EDLV,,51.6,6.15,27.0,NIEDERRHEIN     ,,DE,METAR TAF
EDLW,10416,51.52,7.62,122.0,DORTMUND/WICKEDE,,DE,METAR TAF
EDMA,10852,48.42,10.92,462.0,AUGSBURG/MULHAUS,,DE,METAR TAF
EDMO,,48.07,11.27,587.0,OBERPFAFFENHOFEN,,DE,METAR TAF
EDNY,10935,47.67,9.52,411.0,FRIEDRICHSHAFEN ,,DE,METAR TAF
EDOP,,53.43,11.78,44.0,SCHWERIN-PARCHIM,,DE,METAR TAF
EDQD,10677,49.97,11.62,498.0,BAYREUTH        ,,DE,METAR TAF
EDQM,10685,50.3,11.85,578.0,HOF             ,,DE,METAR TAF
EDRZ,10714,49.22,7.4,343.0,ZWEIBRUCKEN     ,,DE,METAR TAF
EDSB,,48.78,8.08,122.0,KARLSRUHE/BADEN ,,DE,METAR TAF
EDTD,10912,47.97,8.52,680.0,DONAUESCHINGEN  ,,DE,METAR TAF
EDTL,10805,48.37,7.83,152.0,LAHR (CAN-AFB)  ,,DE,METAR TAF
EDTY,,49.12,9.78,398.0,SCHWAEBISCH HALL,,DE,METAR TAF
EDVE,10348,52.32,10.55,83.0,BRAUNSCHWEIG    ,,DE,METAR TAF
EDVK,10436,51.4,9.37,277.0,KASSEL/CALDEN   ,,DE,METAR TAF
EDWE,10200,53.38,7.23,0.0,EMDEN-KOENIGSPO ,,DE,METAR rawinsonde TAF
EDXW,10018,54.92,8.33,8.0,WESTERLAND/SYLT ,,DE,METAR TAF
EDZE,10410,51.4,6.97,161.0,ESSEN/MULHEIM   ,,DE,rawinsonde
EEEI,,59.27,24.2,19.0,AMARI AIR BASE  ,,EE,METAR TAF
EEKA,26116,58.98,22.83,6.0,KARDLA          ,,EE,METAR TAF
EEKE,,58.23,22.52,4.0,KURESSAARE      ,,EE,METAR TAF
EEPU,,58.42,24.47,13.0,PARNU           ,,EE,METAR TAF
EETN,26038,59.4,24.82,41.0,TALLINN         ,,EE,METAR TAF
EETU,26242,58.32,26.68,67.0,TARTU           ,,EE,METAR TAF
EFET,,68.37,23.43,300.0,ENONTEKIO       ,,FI,METAR TAF
EFHA,,61.85,24.8,144.0,HALLI (FIN-AFB) ,,FI,METAR TAF
EFHF,,60.25,25.05,16.0,HELSINKI/MALMI  ,,FI,METAR TAF
EFHK,,60.32,24.97,56.0,HELSINKI/VANTAA ,,FI,METAR TAF
EFHL,02874,65.02,24.8,6.0,HAILUOTO ISLAND ,,FI,METAR
EFHT,02924,62.52,24.22,161.0,AHTARI          ,,FI,METAR
EFIL,,62.7,22.82,92.0,ILMAJOKI        ,,FI,METAR
EFIV,,68.62,27.42,145.0,IVALO           ,,FI,METAR TAF
EFJO,,62.67,29.62,118.0,JOENSUU         ,,FI,METAR TAF
EFJY,,62.4,25.68,139.0,JYVASKYLA (MIL/C,,FI,METAR rawinsonde TAF
EFKA,,63.12,23.05,39.0,KAUHAVA (FIN-AFB,,FI,METAR TAF
EFKE,,65.78,24.57,15.0,KEMI            ,,FI,METAR TAF
EFKI,,64.27,27.67,132.0,KAJAANI         ,,FI,METAR TAF
EFKK,,63.72,23.13,25.0,KRUUNUPYY       ,,FI,METAR TAF
EFKS,,66.0,29.23,270.0,KUUSAMO         ,,FI,METAR TAF
EFKT,,67.7,24.85,190.0,KITTILA         ,,FI,METAR TAF
EFKU,,63.02,27.8,92.0,KUOPIO (MIL/CIV),,FI,METAR TAF
EFLP,,61.03,28.15,102.0,LAPPEENRANTA    ,,FI,METAR TAF
EFMA,,60.12,19.9,6.0,MARIEHAMN/ALAND ,,FI,METAR TAF
EFMI,,61.68,27.2,99.0,MIKKELI         ,,FI,METAR TAF
EFOU,,64.92,25.37,15.0,OULU/ULEABORG   ,,FI,METAR TAF
EFPE,02844,66.78,24.0,84.0,PELLO           ,,FI,METAR
EFPO,,61.47,21.8,10.0,PORI (MIL/CIV)  ,,FI,METAR TAF
EFPU,02867,65.37,27.02,117.0,PUDASJARVI      ,,FI,METAR
EFRO,,66.57,25.82,201.0,ROVANIEMI (CIV/M,,FI,METAR TAF
EFSA,,61.95,28.93,90.0,SAVONLINNA (AUT),,FI,METAR TAF
EFSI,,62.7,22.83,90.0,SEINAJOKI-ILMAJO,,FI,METAR TAF
EFSO,02836,67.37,26.63,179.0,SODANKYLA       ,,FI,METAR rawinsonde
EFSU,02879,64.9,29.02,224.0,SUOMUSSALMI     ,,FI,METAR
EFTP,,61.42,23.62,111.0,TAMPERE/PIRKKALA,,FI,METAR TAF
EFTU,,60.52,22.27,47.0,TURKU/ABO       ,,FI,METAR TAF
EFUT,,60.88,26.93,104.0,UTTI (FIN-AFB)  ,,FI,METAR TAF
EFVA,,63.05,21.77,4.0,VAASA           ,,FI,METAR TAF
EFVI,02915,63.07,25.87,132.0,VIITASAARI      ,,FI,METAR
EFVR,,62.17,27.87,79.0,VARKAUS         ,,FI,METAR TAF
EFYL,,64.03,24.72,77.0,YLIVIESKA       ,,FI,METAR
EGAA,,54.65,-6.22,65.0,BELFAST/ALDERGRO,,GB,METAR TAF
EGAC,,54.62,-5.87,2.0,BELFAST HARBOUR ,,GB,METAR TAF
EGAE,,55.03,-7.15,9.0,EGLINTON/LONDOND,,GB,METAR TAF
EGBB,,52.47,-1.75,91.0,BIRMINGHAM AIRPO,,GB,METAR TAF
EGBE,,52.37,-1.47,82.0,COVENTRY AIRPORT,,GB,METAR TAF
EGBJ,,51.9,-2.17,27.0,STAVERTON (PRIVA,,GB,METAR TAF
EGBP,,51.67,-2.03,133.0,KEMBLE RAF      ,,GB,METAR
EGCC,,53.35,-2.27,78.0,MANCHESTER INTL ,,GB,METAR TAF
EGCG,,53.32,0.17,14.0,STRUBBY HELIPORT,,GB,METAR
EGCK,,53.1,-4.33,6.0,CAERNARFON      ,,GB,METAR TAF
EGCN,,53.48,-1.0,9.0,DONCASTER SHEFFI,,GB,METAR TAF
EGDB,03827,50.35,-4.12,27.0,PLYMOUTH/MOUNTBA,,GB,METAR
EGDC,03707,51.08,-4.15,8.0,CHIVENOR RAF    ,,GB,METAR
EGDL,,51.5,-1.98,145.0,LYNEHAM RAF     ,,GB,METAR TAF
EGDM,,51.17,-1.75,122.0,BOSCOMBE DOWN   ,,GB,METAR TAF
EGDN,03745,51.25,-1.77,139.0,NETHERAVON (ARMY,,GB,METAR TAF
EGDP,03858,50.57,-2.45,3.0,PORTLAND HELIPOR,,GB,METAR
EGDR,,50.08,-5.25,74.0,CULDROSE (NAVY) ,,GB,METAR TAF
EGDX,,51.4,-3.43,49.0,ST ATHAN RAF    ,,GB,METAR TAF
EGDY,,51.0,-2.63,21.0,YEOVILTON (NAVY),,GB,METAR TAF
EGEC,,55.43,-5.68,10.0,CAMPBELTOWN     ,,GB,METAR TAF
EGEO,,56.47,-5.4,5.0,OBAN AIRPORT    ,,GB,METAR TAF
EGFF,,51.38,-3.35,65.0,CARDIFF-WALES AR,,GB,METAR TAF
EGFH,,51.6,-4.07,90.0,SWANSEA         ,,GB,METAR
EGGD,,51.37,-2.72,182.0,BRISTOL/LULSGATE,,GB,METAR TAF
EGGP,,53.33,-2.85,23.0,LIVERPOOL AIRPOR,,GB,METAR TAF
EGGW,,51.87,-0.37,159.0,LUTON AIRPORT   ,,GB,METAR TAF
EGHC,,50.1,-5.67,117.0,PENZANCE/LANDS E,,GB,METAR TAF
EGHD,,50.42,-4.12,143.0,PLYMOUTH/ROBOROU,,GB,METAR TAF
EGHE,,49.92,-6.28,31.0,SCILLY SAINT MAR,,GB,METAR TAF
EGHH,,50.78,-1.83,9.0,BOURNEMOUTH AIRP,,GB,METAR TAF
EGHI,,50.95,-1.35,13.0,SOUTHAMPTON WX C,,GB,METAR TAF
EGHK,,50.12,-5.52,5.0,PENZANCE HELIPOR,,GB,METAR
EGHQ,,50.43,-5.0,101.0,NEWQUAY         ,,GB,METAR TAF
EGJA,,49.72,-2.2,83.0,ALDERNEY/CHANNEL,,GG,METAR TAF
EGJB,,49.42,-2.6,102.0,GUERNSEY AIRPORT,,GG,METAR TAF
EGJJ,,49.22,-2.2,84.0,JERSEY AIRPORT  ,,JE,METAR TAF
EGKA,,50.83,-0.3,2.0,SHOREHAM-BY-SEA ,,GB,METAR TAF
EGKB,,51.32,0.02,183.0,BIGGIN HILL     ,,GB,METAR TAF
EGKK,,51.13,-0.18,58.0,LONDON/GATWICK A,,GB,METAR TAF
EGKM,,51.27,0.42,104.0,WEST MALLING    ,,GB,METAR
EGLC,,51.5,0.05,10.0,LONDON CITY AIRP,,GB,METAR TAF
EGLF,,51.28,-0.77,65.0,FARNBOROUGH     ,,GB,METAR TAF
EGLL,,51.48,-0.45,26.0,LONDON/HEATHROW ,,GB,METAR TAF
EGMC,,51.57,0.7,15.0,SOUTHEND-ON-SEA ,,GB,METAR TAF
EGMD,,50.95,0.93,4.0,LYDD AIRPORT    ,,GB,METAR TAF
EGMH,,51.35,1.33,55.0,MANSTON SOUTHEAS,,GB,METAR TAF
EGNC,,54.93,-2.82,49.0,CARLISLE        ,,GB,METAR TAF
EGNH,,53.77,-3.03,10.0,BLACKPOOL AIRPOR,,GB,METAR TAF
EGNJ,,53.57,-0.35,23.0,HUMBERSIDE      ,,GB,METAR TAF
EGNL,03214,54.12,-3.25,15.0,WALNEY ISL/BARRO,,GB,METAR
EGNM,,53.87,-1.65,221.0,LEEDS AND BRADFO,,GB,METAR TAF
EGNO,,53.75,-2.88,12.0,WHARTON         ,,GB,METAR TAF
EGNR,,53.17,-2.98,11.0,HAWARDEN (AUT)  ,,GB,METAR TAF
EGNS,,54.08,-4.63,18.0,ISLE OF MAN/RONA,,IM,METAR TAF
EGNT,,55.03,-1.7,77.0,NEWCASTLE       ,,GB,METAR TAF
EGNV,,54.52,-1.42,36.0,TEES-SIDE       ,,GB,METAR TAF
EGNX,,52.82,-1.32,91.0,EAST MIDLANDS   ,,GB,METAR TAF
EGOD,,52.8,-4.12,9.0,LLANBEDR        ,,GB,METAR
EGOE,,52.87,-2.52,83.0,TERNHILL RAF    ,,GB,METAR
EGOM,,55.05,-2.55,286.0,SPADEADAM       ,,GB,METAR
EGOP,,51.72,-4.37,8.0,PEMBRY SANDS    ,,GB,METAR
EGOS,,52.8,-2.67,76.0,SHAWBURY RAF    ,,GB,METAR TAF
EGOV,,53.25,-4.53,11.0,VALLEY RAF      ,,GB,METAR TAF
EGOW,,53.58,-3.05,10.0,WOODVALE RAF    ,,GB,METAR TAF
EGOY,03132,54.85,-4.95,12.0,WEST FREUGH (AUT,,GB,METAR
EGPA,,58.95,-2.9,15.0,KIRKWALL AIRPORT,,GB,METAR TAF
EGPB,,59.87,-1.3,2.0,SUMBURGH (CAPE) ,,GB,METAR TAF
EGPC,,58.45,-3.08,38.0,WICK            ,,GB,METAR TAF
EGPD,,57.2,-2.22,65.0,ABERDEEN/DYCE   ,,GB,METAR TAF
EGPE,,57.53,-4.05,7.0,INVERNESS/DALCRO,,GB,METAR TAF
EGPF,,55.87,-4.42,8.0,GLASGOW AIRPORT ,,GB,METAR TAF
EGPH,,55.95,-3.35,29.0,EDINBURGH AIRPOR,,GB,METAR TAF
EGPI,,55.68,-6.25,17.0,ISLAY/PORT ELLEN,,GB,METAR TAF
EGPK,,55.5,-4.58,14.0,PRESTWICK(CIV/NA,,GB,METAR TAF
EGPL,,57.47,-7.37,3.0,BENBECULA ISLAND,,GB,METAR TAF
EGPM,,60.42,-1.3,21.0,SCATSA/SHETLAND ,,GB,METAR TAF
EGPN,,56.45,-3.02,4.0,DUNDEE/RIVERSIDE,,GB,METAR TAF
EGPO,,58.22,-6.32,10.0,STORNOWAY       ,,GB,METAR TAF
EGPT,,56.45,-3.37,121.0,PERTH/SCONE     ,,GB,METAR
EGPU,,56.5,-6.88,12.0,TIREE ISLAND    ,,GB,METAR TAF
EGPW,,60.75,-0.85,285.0,UNST ISLAND     ,,GB,METAR
EGQA,,57.83,-3.95,4.0,TAIN RANGE (SAWS,,GB,METAR
EGQJ,03111,55.42,-5.7,13.0,MACHRIHANISH RAF,,GB,METAR
EGQK,,57.65,-3.57,5.0,KINLOSS RAF     ,,GB,METAR TAF
EGQL,,56.38,-2.87,11.0,LEUCHARS RAF    ,,GB,METAR TAF
EGQM,,55.42,-1.6,24.0,BOULMER         ,,GB,METAR NEXRAD
EGQS,,57.72,-3.32,6.0,LOSSIEMOUTH RAF ,,GB,METAR TAF
EGRB,03779,51.5,-0.12,39.0,LONDON WEA CENTE,,GB,METAR
EGRR,03763,50.73,-3.48,27.0,UK MET EXETER   ,,GB,METAR
EGSC,,52.2,0.17,19.0,CAMBRIDGE       ,,GB,METAR TAF
EGSD,,52.63,1.72,2.0,GREAT YARMOUTH  ,,GB,METAR TAF
EGSH,,52.68,1.28,21.0,NORWICH WEA CNTR,,GB,METAR TAF
EGSS,,51.88,0.22,101.0,STANSTED AIRPORT,,GB,METAR TAF
EGSY,,51.4,-3.43,46.0,ST ATHAN        ,,GB,METAR TAF
EGTC,,52.07,-0.62,110.0,CRANFIELD       ,,GB,METAR TAF
EGTE,,50.73,-3.42,30.0,EXETER AIRPORT  ,,GB,METAR TAF
EGTG,,51.52,-2.58,63.0,FILTON (PRIVATE),,GB,METAR TAF
EGTK,,51.83,-1.32,78.0,OXFORD          ,,GB,METAR TAF
EGUB,,51.62,-1.08,56.0,BENSON RAF      ,,GB,METAR TAF
EGUC,03502,52.12,-4.57,134.0,ABERPORTH       ,,GB,METAR
EGUF,03766,51.27,-0.77,72.0,FARNBOROUGH (MIL,,GB,METAR
EGUH,,51.62,-0.77,75.0,HIGH WYCOMBE RAF,,GB,METAR
EGUL,,52.42,0.57,8.0,LAKENHEATH RAF  ,,GB,METAR TAF
EGUM,03797,51.35,1.33,55.0,MANSTON RAF     ,,GB,METAR
EGUN,,52.37,0.48,10.0,MILDENHALL RAF  ,,GB,METAR TAF
EGUO,,51.43,-2.28,178.0,COLERNE RAF     ,,GB,METAR TAF
EGUS,03867,50.82,-1.22,10.0,LEE-ON-SOLENT(NA,,GB,METAR
EGUW,,52.12,0.97,86.0,WATTISHAM RAF   ,,GB,METAR TAF
EGUY,,52.35,-0.12,41.0,WYTON RAF       ,,GB,METAR TAF
EGVA,,51.67,-1.78,84.0,FAIRFORD RAF    ,,GB,METAR TAF
EGVG,,52.07,1.38,29.0,WOODBRIDGE RAF  ,,GB,METAR
EGVI,,51.37,-1.27,122.0,GREENHAM COMMON ,,GB,METAR
EGVN,,51.77,-1.58,83.0,BRIZE NORTON RAF,,GB,METAR TAF
EGVO,,51.23,-0.95,118.0,ODIHAM RAF      ,,GB,METAR TAF
EGVP,,51.13,-1.57,80.0,MIDDLE WALLOP   ,,GB,METAR TAF
EGVT,,51.97,0.5,98.0,WETHERSFIELD RAF,,GB,METAR
EGWC,,52.63,-2.3,79.0,COSFORD RAF     ,,GB,METAR TAF
EGWE,,52.02,-0.27,95.0,HENLOW          ,,GB,METAR
EGWU,,51.55,-0.42,33.0,NORTHOLT RAF    ,,GB,METAR TAF
EGWZ,03562,52.37,-0.22,49.0,ALCONBURY RAF   ,,GB,METAR
EGXC,,53.1,-0.17,9.0,CONINGSBY RAF   ,,GB,METAR TAF
EGXD,,54.13,-1.42,30.0,DISHFORTH RAF   ,,GB,METAR TAF
EGXE,,54.28,-1.52,30.0,LEEMING RAF     ,,GB,METAR TAF
EGXG,,53.83,-1.2,10.0,CHURCH FENTON RA,,GB,METAR TAF
EGXH,03586,52.32,0.77,54.0,HONINGTON RAF   ,,GB,METAR
EGXJ,03453,52.73,-0.65,138.0,COTTESMORE RAF  ,,GB,METAR
EGXN,,52.97,-0.97,55.0,NEWTON          ,,GB,METAR
EGXP,,53.3,-0.55,58.0,SCAMPTON RAF    ,,GB,METAR TAF
EGXS,,53.48,0.15,6.0,DONNA NOOK RAF  ,,GB,METAR
EGXT,,52.62,-0.47,74.0,WITTERING RAF   ,,GB,METAR TAF
EGXU,,54.05,-1.25,14.0,LINTON-ON-OUSE R,,GB,METAR TAF
EGXV,,53.87,-0.45,6.0,LECONFIELD (AUT),,GB,METAR
EGXW,,53.18,-0.52,70.0,WADDINGTON RAF  ,,GB,METAR TAF
EGXZ,,54.2,-1.38,24.0,TOPCLIFFE RAF   ,,GB,METAR TAF
EGYD,,53.03,-0.5,65.0,CRANWELL RAF    ,,GB,METAR TAF
EGYE,,52.97,-0.57,105.0,BARKSTON HEATH R,,GB,METAR
EGYH,,52.87,0.15,5.0,HOLBEACH (AUT)  ,,GB,METAR
EGYM,,52.63,0.57,25.0,MARHAM RAF      ,,GB,METAR TAF
EGYP,88889,-51.82,-58.45,70.0,MOUNT PLEASANT  ,,FK,METAR TAF
EGYR,,52.57,0.85,59.0,WATTON RAF RADAR,,GB,METAR
EGYW,03392,53.08,0.27,5.0,WAINFLEET (AUT) ,,GB,METAR
EHAK,,55.38,3.82,33.0,A12-CPP SEA     ,,NL,METAR
EHAM,,52.32,4.78,-2.0,AMSTERDAM/SCHIPH,,NL,METAR TAF
EHBK,,50.92,5.77,112.0,ZUID-LIMBURG/BEE,,NL,METAR TAF
EHDB,06260,52.1,5.17,4.0,DE BILT         ,,NL,METAR rawinsonde
EHDL,,52.07,5.88,49.0,DEELEN RNLAFB   ,,NL,METAR TAF
EHDV,,54.32,2.93,36.0,D15-FA-1 SEA    ,,NL,METAR
EHEH,,51.45,5.38,20.0,EINDHOVEN RNLAFB,,NL,METAR TAF
EHFD,,54.85,4.7,24.0,F3-FB-1  SEA    ,,NL,METAR
EHFS,,51.45,3.6,1.0,VLISSINGEN      ,,NL,METAR
EHFZ,,54.12,4.02,28.0,F16-A    SEA    ,,NL,METAR
EHGG,,53.12,6.57,2.0,GRONINGEN/EELDE ,,NL,METAR TAF
EHGR,,51.55,4.93,12.0,GILZE-RIJEN RNLA,,NL,METAR TAF
EHHW,,54.03,6.03,10.0,BUITENGAATS     ,,NL,METAR
EHJA,,53.82,2.95,34.0,J6-A     SEA    ,,NL,METAR
EHJR,,53.22,3.22,31.0,K13-A    SEA    ,,NL,METAR
EHKD,,52.92,4.77,1.0,DE KOOY (NAVY)  ,,NL,METAR TAF
EHKV,,53.27,3.63,28.0,K14-FA-1C SEA   ,,NL,METAR
EHLE,,52.45,5.52,-3.0,LELYSTAD        ,,NL,METAR TAF
EHLW,,53.22,5.75,1.0,LEEUWARDEN RNLAF,,NL,METAR TAF
EHMA,,53.5,5.95,27.0,AWG-1     SEA   ,,NL,METAR
EHMG,,53.62,4.97,30.0,L9-FF-1   SEA   ,,NL,METAR
EHPG,,52.37,3.35,24.0,P11-B     SEA   ,,NL,METAR
EHQE,,52.92,4.15,41.0,HOORN-A   SEA   ,,NL,METAR
EHRD,,51.95,4.45,-4.0,ROTTERDAM AIRPOR,,NL,METAR TAF
EHSA,,52.0,3.28,18.0,EURO PLATFORM   ,,NL,METAR
EHSB,,52.12,5.27,13.0,SOESTERBERG RNLA,,NL,METAR TAF
EHSC,,51.93,3.67,19.0,GOEREE LE  SEA  ,,NL,METAR
EHTW,,52.27,6.9,31.0,TWENTE RNLAFB   ,,NL,METAR TAF
EHTX,,53.07,4.75,3.0,TEXEL ISLAND    ,,NL,METAR
EHVB,,52.17,4.42,0.0,VALKENBURG (NAVY,,NL,METAR TAF
EHVK,,51.65,5.7,20.0,VOLKEL RNLAFB   ,,NL,METAR TAF
EHVL,,53.28,5.08,2.0,VLIELAND ISLAND ,,NL,METAR
EHWO,,51.45,4.33,15.0,WOENSDRECHT RNLA,,NL,METAR TAF
EICK,,51.85,-8.47,158.0,CORK ARPT/CORCAI,,IE,METAR TAF
EICM,,53.3,-8.93,25.0,GALWAY          ,,IE,METAR
EIDL,,55.05,-8.33,2.0,DONEGAL ARPT    ,,IE,METAR TAF
EIDW,,53.42,-6.28,75.0,DUBLIN AIRPORT  ,,IE,METAR TAF
EIKN,,53.92,-8.82,201.0,CONNAUGHT APT   ,,IE,METAR TAF
EIKY,,52.18,-9.53,23.0,KERRY ARPT      ,,IE,METAR TAF
EIME,,53.3,-6.45,90.0,CASEMENT (MIL)  ,,IE,METAR TAF
EINN,,52.7,-8.92,20.0,SHANNON AIRPORT ,,IE,METAR TAF
EISG,,54.28,-8.6,1.0,SLIGO ARPT      ,,IE,METAR TAF
EIWF,,52.18,-7.08,26.0,WATERFORD ARPT  ,,IE,METAR TAF
EKAH,,56.28,10.62,25.0,TIRSTRUP (CIV/MI,,DK,METAR TAF
EKAT,06078,56.7,11.55,8.0,ANHOLT ISLAND (A,,DK,METAR
EKAV,,55.07,11.77,4.0,AVNO (DAN-AFB)  ,,DK,METAR
EKBI,,55.73,9.15,67.0,BILLUND AIRPORT ,,DK,METAR TAF
EKCH,,55.62,12.67,4.0,COPENHAGEN/KASTR,,DK,METAR TAF
EKEB,,55.52,8.55,29.0,ESBJERG         ,,DK,METAR TAF
EKGC,,55.58,4.77,96.0,GORM(OIL)       ,,DK,METAR TAF
EKGF,,55.72,4.8,43.0,TYRA OEST       ,,DK,METAR TAF
EKHA,,55.53,5.0,95.0,HALFDAN(OIL)    ,,DK,METAR
EKHD,,56.33,4.27,95.0,HARALD(OIL)     ,,DK,METAR TAF
EKHN,,55.6,7.62,10.0,HORNS REV B HELI,,DK,METAR
EKHO,,56.38,8.43,14.0,LINDTORP AIRPORT,,DK,METAR
EKHR,,55.52,7.88,21.0,HORNS REV B HELI,,DK,METAR
EKHS,06048,56.75,10.23,2.0,HADSUND         ,,DK,METAR
EKKA,,56.3,9.12,50.0,KARUP (DAN-AFB) ,,DK,METAR TAF
EKKM,,56.13,10.22,57.0,ARHUS/KIRSTINESM,,DK,METAR
EKMB,06143,54.7,11.43,5.0,MARIBO ARPT (AUT,,DK,METAR TAF
EKOD,,55.47,10.32,13.0,ODENSE/BELDRINGE,,DK,METAR TAF
EKRK,,55.58,12.13,40.0,COPENHAGEN/ROSKI,,DK,METAR TAF
EKRN,,55.07,14.75,14.0,RONNE           ,,DK,METAR TAF
EKRS,,55.42,11.8,34.0,RINGSTED        ,,DK,METAR
EKSB,,54.97,9.8,23.0,SONDERBORG AIRPO,,DK,METAR TAF
EKSN,,57.5,10.22,28.0,SINDAL AIRPORT  ,,DK,METAR TAF
EKSP,,55.22,9.27,40.0,SKRYDSTRUP(DAN-A,,DK,METAR TAF
EKST,,55.02,10.57,5.0,SYDFYNS/TASINGE ,,DK,METAR
EKSV,06062,56.53,9.17,21.0,SKIVE AIRPORT   ,,DK,METAR TAF
EKTE,,55.72,4.8,95.0,TYRA(OIL)       ,,DK,METAR
EKTS,,57.07,8.68,6.0,THISTED ARPT (AU,,DK,METAR TAF
EKVA,,55.72,9.22,72.0,VANDEL (DAN-AFB),,DK,METAR TAF
EKVD,,55.43,9.32,41.0,VAMDRUP (AUT/MAN,,DK,METAR TAF
EKVG,,62.07,-7.27,89.0,SORVAAG/VAGAR   ,,DK,METAR TAF
EKVJ,,55.98,8.35,5.0,STAUNING AIRPORT,,DK,METAR TAF
EKVL,,55.77,12.32,15.0,VAERLOSE (DAN-AF,,DK,METAR TAF
EKYT,,57.1,9.87,2.0,ALBORG          ,,DK,METAR TAF
ELLX,,49.63,6.2,374.0,LUXEMBOURG (AUT),,LU,METAR TAF
ENAL,,62.57,6.12,21.0,ALESUND/VIGRA   ,,NO,METAR TAF
ENAN,,69.3,16.13,13.0,ANDOYA/ANDENES(A,,NO,METAR TAF
ENAS,,78.92,11.92,8.0,NY-ALESUND II   ,,SJ,METAR
ENAT,,69.97,23.37,3.0,ALTA AIRPORT    ,,NO,METAR TAF
ENBJ,01028,74.52,19.02,14.0,BJORNOYA ISLAND ,,NO,METAR rawinsonde
ENBL,,61.4,5.77,313.0,FORDE/BRINGELAND,,NO,METAR TAF
ENBM,01336,60.63,6.5,122.0,VOSS/BOMOEN     ,,NO,METAR
ENBN,,65.47,12.22,3.0,BRONNOYSUND/BRON,,NO,METAR TAF
ENBO,,67.27,14.37,13.0,BODO VI (CIV/MIL,,NO,METAR rawinsonde TAF
ENBR,,60.28,5.22,49.0,BERGEN/FLESLAND ,,NO,METAR TAF
ENBS,,70.62,29.68,144.0,BATSFJORD       ,,NO,METAR TAF
ENBV,,70.87,29.02,13.0,BERLEVAG        ,,NO,METAR TAF
ENCN,,58.2,8.07,17.0,KRISTIANSAND/KJE,,NO,METAR TAF
ENDR,,64.35,7.77,10.0,DRAUGEN         ,,NO,METAR
ENDU,,69.05,18.55,65.0,BARDUFOSS (CIV/M,,NO,METAR TAF
ENEK,00004,56.53,3.22,49.0,EKOFISK OIL PLTF,,NO,METAR rawinsonde TAF
ENEV,,68.48,16.67,26.0,EVENES (CIV/MIL),,NO,METAR TAF
ENFB,,61.2,1.83,10.0,STATFJORD B OILP,,NO,METAR
ENFG,,61.0,9.3,820.0,FAGERNES/LEIRIN ,,NO,METAR TAF
ENFL,,61.57,5.02,1.0,FLORO           ,,NO,METAR TAF
ENFR,,59.92,2.0,0.0,FRIGG           ,,NO,METAR
ENGC,,61.02,2.02,10.0,GULLFAX (PLATFOR,,NO,METAR TAF
ENGK,,58.52,8.7,121.0,GULLKNAPP       ,,NO,METAR TAF
ENGM,,60.2,11.07,204.0,OSLO/GARDERMOEN ,,NO,METAR rawinsonde TAF
ENHD,,59.35,5.22,22.0,HAUGESUND/KARMOY,,NO,METAR TAF
ENHE,,65.33,2.33,10.0,HEIDRUN         ,,NO,METAR TAF
ENHF,,70.67,23.67,79.0,HAMMERFEST      ,,NO,METAR TAF
ENHK,,70.48,22.13,6.0,HASVIK          ,,NO,METAR
ENHM,,59.57,2.23,10.0,HEIMDAL OILP    ,,NO,METAR TAF
ENHO,01062,76.5,25.07,10.0,HOPEN ISLAND    ,,NO,METAR
ENHV,,71.02,25.97,13.0,HONNINGSVAG/VALA,,SJ,METAR TAF
ENIP,99448,11.37,162.37,2.0,ENEWETAK/MARSHAL,,NO,METAR
ENJA,01001,70.92,-8.67,9.0,JAN MAYEN(NOR-NA,,NO,METAR rawinsonde
ENKA,01047,69.02,23.07,330.0,KAUTOKEINO II   ,,NO,METAR
ENKB,,63.12,7.82,62.0,KRISTIANSUND/KVE,,NO,METAR TAF
ENKR,,69.72,29.88,86.0,KIRKENES (CIV/MI,,NO,METAR TAF
ENLA,,57.1,2.83,10.0,ULA PLATFORM (OI,,NO,METAR
ENLE,,56.53,3.22,10.0,EKOFISK OIL PLTF,,NO,METAR rawinsonde TAF
ENLI,01428,58.1,6.62,10.0,LISTA/FARSUND (A,,NO,METAR TAF
ENLK,,68.15,13.62,26.0,LEKNES          ,,NO,METAR
ENMH,,71.02,27.82,10.0,MEHAMN          ,,NO,METAR
ENML,,62.75,7.27,3.0,MOLDE/ARO       ,,NO,METAR TAF
ENMS,,65.78,13.22,44.0,MOSJOEN/KJAERSTA,,NO,METAR TAF
ENNA,,70.07,24.97,12.0,BANAK/LAKSELV (A,,NO,METAR TAF
ENNE,,66.03,8.08,10.0,NORNE FPSO OILP ,,NO,METAR TAF
ENNK,,68.43,17.38,29.0,NARVIK III/FRAMN,,NO,METAR
ENNM,,64.47,11.57,2.0,NAMSOS AIRPORT  ,,NO,METAR
ENNO,,59.57,9.22,19.0,NOTODDEN        ,,NO,METAR TAF
ENOA,,60.5,2.83,5.0,OSEBERG         ,,NO,METAR TAF
ENOL,,63.7,9.6,9.0,ORLAND III(NOR-A,,NO,METAR rawinsonde TAF
ENOV,,62.17,6.07,72.0,ORSTA-VOLDA/HOVD,,NO,METAR TAF
ENQA,,60.65,3.72,90.0,TROLL-A HELI    ,,NO,METAR
ENQC,,60.88,3.62,20.0,TROLL-C HELI    ,,NO,METAR
ENQR,,61.52,2.22,10.0,SNORRE B OILP   ,,NO,METAR
ENRA,,66.37,14.3,66.0,MOIRANA         ,,NO,METAR TAF
ENRM,,64.83,11.13,4.0,RORVIK/RYUM     ,,NO,METAR TAF
ENRO,,62.57,11.33,624.0,ROROS AIRPORT   ,,NO,METAR TAF
ENRS,,67.52,12.1,4.0,ROST (NOR-AFB)  ,,NO,METAR
ENRY,,59.37,10.77,45.0,RYGGE (NOR-AFB) ,,NO,METAR TAF
ENSB,,78.25,15.47,30.0,SVALBARD/LONGYEA,,SJ,METAR TAF
ENSD,,61.82,6.12,61.0,SANDANE/ANDA    ,,NO,METAR TAF
ENSE,,61.45,2.15,10.0,SNORRE A OILP   ,,NO,METAR
ENSF,,61.25,1.85,15.0,STATFJORD A OILP,,NO,METAR
ENSG,,61.15,7.13,493.0,SOGNDAL/HAUKASEN,,NO,METAR
ENSH,,68.25,14.67,9.0,SVOLVAER/HELLE  ,,NO,METAR TAF
ENSK,,68.57,15.02,3.0,STORKMARKNES/SKA,,NO,METAR TAF
ENSL,,58.37,1.9,50.0,SLEIPNER A PLATF,,NO,METAR TAF
ENSN,,59.18,9.57,135.0,SKIEN/GEITERYGGE,,NO,METAR TAF
ENSO,,59.78,5.33,48.0,STORD/SOERSTOKKE,,NO,METAR TAF
ENSR,,69.78,20.97,5.0,SORKJOSEN       ,,NO,METAR TAF
ENSS,,70.35,31.05,13.0,SVARTNES        ,,NO,METAR
ENST,,65.97,12.47,17.0,SANDNESSJOEN/STO,,NO,METAR
ENTC,,69.68,18.92,9.0,TROMSO/LANGNES  ,,NO,METAR TAF
ENTO,,59.2,10.27,84.0,TORP (CIV/NOR-AF,,NO,METAR TAF
ENUG,,71.3,22.25,30.0,GOLIAT(OIL)     ,,NO,METAR
ENVA,,63.47,10.92,12.0,TRONDHEIM/VAERNE,,NO,METAR TAF
ENVD,,70.07,29.85,39.0,VADSO           ,,NO,METAR TAF
ENVH,,56.27,3.38,4.0,VALHALL (OIL)   ,,NO,METAR
ENVR,,67.65,12.72,4.0,VAREROY         ,,NO,METAR
ENWV,,56.28,3.4,30.0,VALHALL(OIL)    ,,NO,METAR
ENZV,,58.88,5.63,7.0,STAVANGER/SOLA(A,,NO,METAR rawinsonde TAF
EPBC,,52.27,20.92,107.0,WARSZAWA/BABICE ,,PL
EPBY,,53.1,18.0,66.0,BYDGOSZCZ       ,,PL,METAR TAF
EPCE,,54.42,17.77,151.0,CEWICE AIRBASE  ,,PL,TAF
EPDA,,54.4,16.35,4.0,DARTOWEK NAVAL  ,,PL,TAF
EPDE,,51.55,21.9,120.0,DEBLIN-IRENA    ,,PL,TAF
EPGD,12150,54.37,18.47,136.0,GDANSK/REBIECHOW,,PL,METAR TAF
EPGI,,53.52,18.85,37.0,GRUDZIADZ LISIE ,,PL,METAR TAF
EPIR,,52.83,18.33,79.0,INOWROCLAW INOWR,,PL,TAF
EPKK,12566,50.07,19.8,237.0,KRAKOW/BALICE   ,,PL,METAR TAF
EPKS,,52.33,16.97,81.0,KRZESINY ARPT   ,,PL,TAF
EPKT,12560,50.47,19.08,296.0,KATOWICE/PYRZOWI,,PL,METAR TAF
EPLB,,51.23,22.72,206.0,LUBLIN          ,,PL,METAR TAF
EPLK,,51.55,19.18,193.0,LASK ARPT       ,,PL,TAF
EPLL,,51.72,19.4,176.0,LODZ/LUBLINEK   ,,PL,METAR TAF
EPLY,,52.0,19.15,115.0,LECZYCA-LEZNICA ,,PL,TAF
EPMB,,54.03,19.13,5.0,MALBORK         ,,PL,TAF
EPMI,,53.4,16.08,140.0,TWELTH AIRBASE  ,,PL,TAF
EPMM,,52.2,21.65,185.0,MINSK MAZOWIECKI,,PL,TAF
EPMO,,52.45,20.65,102.0,MODLIN          ,,PL,METAR TAF
EPOK,,54.58,18.52,44.0,GDYNIA-BABIE DO ,,PL,TAF
EPPO,12330,52.42,16.83,87.0,POZNAN/LAWICA   ,,PL,METAR TAF
EPPR,,54.25,18.67,7.0,PRUSZCZ GDANSKI ,,PL,TAF
EPPW,,52.38,17.85,113.0,POWIDZ AIRPORT  ,,PL,TAF
EPRA,12485,51.38,21.22,182.0,RADOM AIRPORT   ,,PL,METAR TAF
EPRZ,12580,50.1,22.02,206.0,RZESZOW/JASIONKA,,PL,METAR TAF
EPSC,12205,53.58,14.9,47.0,SZCZECIN/GOLENIO,,PL,METAR TAF
EPSN,,53.78,15.83,118.0,SWIDWIN ARPT    ,,PL,TAF
EPSY,,53.47,20.93,136.0,SZYMANY         ,,PL,METAR TAF
EPTM,,51.58,20.1,174.0,SPAA GLINNIK    ,,PL,TAF
EPWA,12375,52.17,20.97,107.0,WARSAW/OKECIE   ,,PL,METAR TAF
EPWR,12424,51.1,16.88,118.0,WROCLAW/STRACHOW,,PL,METAR TAF
EPZG,12400,52.13,15.77,59.0,ZIELONA GORA    ,,PL,METAR TAF
EQBA,99876,36.67,68.92,433.0,KUNDUZ          ,,AF,METAR TAF
EQBC,99878,32.47,45.75,20.0,AL KUT          ,,IQ,METAR
EQBF,99881,37.12,70.57,1200.0,FEYZABAD        ,,AF,METAR TAF
EQBH,99883,31.87,64.2,900.0,CAMP BASTION    ,,AF,METAR TAF
EQBI,99884,34.87,65.45,2252.0,CHAGCHARAN      ,,AF,METAR TAF
EQBM,99888,36.7,67.2,378.0,MARZAR I SHARIF ,,AF,METAR TAF
EQCB,99903,31.52,65.87,1010.0,KANDAHAR        ,,AF,METAR TAF
EQTK,99915,32.6,65.85,1357.0,TARIN KOWT      ,,AF,METAR TAF
EQYG,,35.53,24.15,142.0,SOUDA BAY(NAS)  ,,GR,METAR
EQYR,,36.63,-6.33,26.0,ROTA NAVAL STATI,,ES,METAR rawinsonde TAF
EQYS,,37.4,14.92,25.0,SIGONELLA (NAS) ,,IT,METAR TAF
ESCF,,58.38,15.52,86.0,LINKOPING/MALMEN,,SE,METAR TAF
ESCM,,59.88,17.6,21.0,UPPSALA (SWE-AFB,,SE,METAR TAF
ESDA,02630,56.07,13.22,52.0,LJUNGBYHED(SWE-A,,SE,METAR
ESDF,,56.27,15.27,52.0,RONNEBY (SWE-AFB,,SE,METAR TAF
ESFU,02640,56.87,14.8,166.0,VAXJO/URASA (AFB,,SE,METAR
ESGG,,57.67,12.3,152.0,GOTEBORG/LANDVET,,SE,METAR rawinsonde TAF
ESGJ,,57.77,14.07,224.0,JONKOPING AIRPOR,,SE,METAR TAF
ESGL,,58.47,13.18,58.0,LIDKOPING       ,,SE,METAR
ESGP,,57.77,11.87,15.0,GOTEBORG/SAVE (A,,SE,METAR TAF
ESGR,,58.45,13.97,95.0,SKOVDE AIRPORT  ,,SE,METAR
ESGT,,58.32,12.33,40.0,TROLLHATTAN (PVT,,SE,METAR TAF
ESIA,,58.52,14.5,94.0,KARLSBORG (SWE-A,,SE,METAR TAF
ESIB,,58.42,12.7,51.0,SATENAS (SWE-AFB,,SE,METAR TAF
ESKM,,60.97,14.52,184.0,SILJAN/MORA     ,,SE,METAR
ESKN,,58.78,16.92,41.0,SKAVSTA/STOCKHO ,,SE,METAR TAF
ESKS,,61.17,12.83,503.0,SALEN/SCANDANAVI,,SE,METAR TAF
ESMK,,55.92,14.08,20.0,KRISTIANSTAD/EVE,,SE,METAR TAF
ESMQ,,56.68,16.3,3.0,KALMAR          ,,SE,METAR TAF
ESMS,,55.53,13.37,68.0,MALMO/STURUP    ,,SE,METAR TAF
ESMT,,56.68,12.82,24.0,HALMSTAD (SWE-AF,,SE,METAR TAF
ESMV,,57.28,14.13,167.0,HAGSHULT (SWE-AF,,SE,METAR TAF
ESMX,,56.92,14.72,176.0,VAXJO/KRONOBERG ,,SE,METAR TAF
ESND,,62.05,14.42,352.0,SVEG            ,,SE,METAR
ESNG,,67.13,20.82,300.0,GALLIVARE (PRIVA,,SE,METAR TAF
ESNJ,02142,66.62,19.63,264.0,JOKKMOKK (SWE-AF,,SE,METAR
ESNK,,63.03,17.77,4.0,KRAMFORS (SWE-AF,,SE,METAR TAF
ESNL,,64.55,18.72,220.0,LYCKSELE        ,,SE,METAR TAF
ESNN,,62.52,17.43,4.0,SUNDSVALL/HARNOS,,SE,METAR rawinsonde TAF
ESNO,,63.4,18.97,100.0,ORNSKOLDSVIK ARP,,SE,METAR TAF
ESNQ,,67.82,20.33,447.0,KIRUNA AIRPORT  ,,SE,METAR TAF
ESNS,,64.62,21.07,41.0,SKELLEFTEA AIRPO,,SE,METAR TAF
ESNU,,63.78,20.28,8.0,UMEA AIRPORT    ,,SE,METAR TAF
ESNV,,64.58,16.83,348.0,VILHELMINA      ,,SE,METAR
ESNX,,65.58,19.28,380.0,ARVIDSJAUR      ,,SE,METAR TAF
ESNY,02376,61.27,17.1,36.0,SODERHAMN (SWE-A,,SE,METAR
ESNZ,,63.18,14.5,360.0,OSTERSUND/FROSON,,SE,METAR TAF
ESOE,,59.22,15.05,57.0,OREBRO (PRIVATE),,SE,METAR TAF
ESOH,,60.02,13.58,145.0,HAGFORS         ,,SE,METAR
ESOK,,59.45,13.33,101.0,KARLSTAD NORTH  ,,SE,METAR TAF
ESOW,,59.58,16.63,7.0,VASTERAS/HASSLO ,,SE,METAR TAF
ESPA,,65.53,22.12,12.0,KALLAX/LULEA (AF,,SE,METAR rawinsonde TAF
ESPD,02128,65.02,17.67,281.0,GUNNARN (SWE-AFB,,SE,METAR
ESPE,,65.88,20.15,182.0,VIDSEL (SWE-AFB),,SE,METAR TAF
ESQV,02591,57.63,18.35,47.0,VISBY AERO STATI,,SE,METAR rawinsonde
ESSA,,59.65,17.93,36.0,STOCKHOLM/ARLAND,,SE,METAR TAF
ESSB,,59.35,17.93,14.0,STOCKHOLM/BROMMA,,SE,METAR TAF
ESSD,,60.42,15.5,151.0,BORLANGE (SWE-AF,,SE,METAR TAF
ESSF,02565,57.52,15.82,112.0,HULTSFRED (SWE-A,,SE,METAR
ESSK,02443,60.6,16.95,69.0,GAVLE/SANDVIKEN ,,SE,METAR
ESSL,,58.4,15.67,51.0,LINKOPING/SAAB  ,,SE,METAR TAF
ESSP,,58.58,16.25,3.0,NORRKOPING/KUNGS,,SE,METAR TAF
ESSQ,02418,59.37,13.47,55.0,KARLSTADT AIRPOR,,SE,METAR
ESST,,60.15,12.98,110.0,TORSBY          ,,SE,METAR
ESSV,,57.67,18.35,38.0,VISBY AIRPORT   ,,SE,METAR TAF
ESTA,,56.28,12.83,19.0,ANGELHOLM (SWE-A,,SE,METAR TAF
ESTL,,56.07,13.2,39.0,LJUNGBYHED      ,,SE,METAR TAF
ESUD,,64.97,17.7,281.0,STORUMAN        ,,SE,METAR
ESUP,,67.25,23.07,164.0,PAJALA          ,,SE,METAR
ESUT,,65.8,15.08,457.0,HEMAVAN         ,,SE,METAR TAF
ETAD,10607,49.98,6.7,365.0,SPANGDAHLEM (USA,,DE,METAR TAF
ETAR,10614,49.43,7.58,231.0,RAMSTEIN (USAFB),,DE,METAR TAF
ETEB,10755,49.32,10.63,466.0,KATTERBACH (USA-,,DE,METAR TAF
ETGB,10238,52.82,9.92,69.0,BERGEN (MIL)    ,,DE,rawinsonde
ETGG,10033,54.83,9.5,33.0,MEIERWIK        ,,DE,METAR TAF
ETGI,10618,49.7,7.32,377.0,IDAR-OBERSTEIN(M,,DE,rawinsonde
ETGK,10771,49.43,11.9,418.0,KUEMMERSBRUCK   ,,DE,rawinsonde
ETGQ,10234,53.13,9.35,30.0,ROTENBURG       ,,DE,METAR TAF
ETGY,10404,51.75,6.27,43.0,KALKAR (MIL COMM,,DE,METAR TAF
ETGZ,10827,48.18,9.0,920.0,MESSSTETTEN     ,,DE,METAR
ETHA,10954,47.83,10.87,738.0,ALTENSTADT/SCHON,,DE,METAR TAF
ETHB,10335,52.27,9.07,69.0,BUCKEBURG(GER-AR,,DE,METAR TAF
ETHC,10343,52.6,10.02,35.0,CELLE (GER-ARMY),,DE,METAR TAF
ETHE,10306,52.28,7.38,38.0,RHEINE/BENTLAGE ,,DE,METAR TAF
ETHF,10439,51.12,9.28,171.0,FRITZLAR (GER-AR,,DE,METAR TAF
ETHL,10837,48.22,9.92,536.0,LAUPHEIM (GER-AR,,DE,METAR TAF
ETHM,10514,50.37,7.32,191.0,MENDIG (GER-ARMY,,DE,METAR
ETHN,10743,49.38,9.97,466.0,NIEDERSTETTEN (G,,DE,METAR TAF
ETHR,10765,49.22,11.08,395.0,ROTH (GER-ARMY) ,,DE,METAR TAF
ETHS,10246,52.92,10.18,71.0,FASSBERG (GER-AF,,DE,METAR TAF
ETIC,10687,49.7,11.93,414.0,GRAFENWOEHR     ,,DE,METAR TAF
ETIE,10734,49.38,8.65,110.0,HEIDELBERG (USA-,,DE,METAR
ETIH,10775,49.22,11.83,436.0,HOHENFELS (USA-A,,DE,METAR TAF
ETIK,10752,49.47,10.38,326.0,ILLESHEIM (USA-A,,DE,METAR TAF
ETME,10034,54.62,9.33,22.0,EGGEBEK (GER-NAV,,DE,METAR
ETML,10067,54.5,11.23,9.0,MARIENLEUCHTE(MI,,DE,METAR
ETMN,10136,53.77,8.67,23.0,NORDHOLZ (GER-NA,,DE,METAR TAF
ETND,10321,52.58,8.35,37.0,DIEPHOLZ (GER-AF,,DE,METAR TAF
ETNG,10500,50.97,6.03,76.0,GEILENKIRCHEN(NA,,DE,METAR TAF
ETNH,10038,54.32,9.55,6.0,HOHN (GER-AFB)  ,,DE,METAR TAF
ETNJ,10122,53.52,7.87,21.0,JEVER (GER-AFB) ,,DE,METAR TAF
ETNL,10172,53.92,12.27,40.0,LAAGE           ,,DE,METAR TAF
ETNN,10502,50.82,6.67,108.0,NOERVENICH (GAF),,DE,METAR TAF
ETNP,10314,52.32,7.53,43.0,HOPSTEN (GER-AFB,,DE,METAR
ETNS,10037,54.47,9.52,22.0,SCHLESWIG(GER-NA,,DE,METAR TAF
ETNT,10126,53.53,7.67,5.0,WITTMUNDHAVEN(GA,,DE,METAR TAF
ETNU,10281,53.6,13.32,71.0,TROLLENHAGEN    ,,DE,METAR TAF
ETNW,10334,52.45,9.42,57.0,WUNSTORF (GER-AF,,DE,METAR TAF
ETOR,10728,49.57,8.47,92.0,COLEMAN (USA-AF),,DE,METAR TAF
ETOU,10633,50.03,8.32,141.0,WIESBADEN (USA-A,,DE,METAR TAF
ETSA,10857,48.07,10.9,619.0,LANDSBERG (GER-A,,DE,METAR TAF
ETSB,10613,50.17,7.07,477.0,BUECHEL         ,,DE,METAR TAF
ETSE,10869,48.32,11.93,459.0,ERDING (GER-AFB),,DE,METAR TAF
ETSH,10476,51.77,13.17,79.0,HOLZDORF        ,,DE,METAR TAF
ETSI,10860,48.72,11.53,366.0,INGOLSTADT(GER-M,,DE,METAR TAF
ETSL,10856,48.18,10.87,548.0,LECHFELD (GER-AF,,DE,METAR TAF
ETSN,10853,48.72,11.22,378.0,NEUBURG/DONAU   ,,DE,METAR TAF
ETUO,10320,51.92,8.3,67.0,GUETERSLOH (RAF),,DE,METAR TAF
ETWM,10304,52.72,7.33,18.0,MEPPEN          ,,DE,METAR
EVGA,,56.78,24.85,61.0,LIELVARDE       ,,LV,METAR TAF
EVLA,26406,56.52,21.1,5.0,LIEPAJA INTL    ,,LV,METAR TAF
EVRA,,56.92,23.97,7.0,RIGA AIRPORT    ,,LV,METAR TAF
EVVA,26405,57.35,21.55,1.0,VENTPILS        ,,LV,METAR TAF
EYKA,,54.97,24.08,68.0,KAUNAS          ,,LT,METAR TAF
EYPA,26502,55.97,21.08,15.0,PALANGA INTL    ,,LT,METAR TAF
EYSA,,55.9,23.4,135.0,SIAULIAI INTL   ,,LT,METAR TAF
EYVI,26730,54.63,25.28,180.0,VILNIUS INTL    ,,LT,METAR TAF
FAAB,68406,-28.57,16.52,21.0,ALEXANDER BAY   ,,ZA,METAR
FAAN,68546,-30.72,26.72,1351.0,ALIWAL NORTH    ,,ZA,METAR
FABB,,-26.22,28.3,1615.0,BRAKPAN         ,,ZA,METAR
FABD,,-30.97,26.32,1437.0,BURGERSDORP     ,,ZA,METAR
FABE,,-32.88,27.27,594.0,BISHO           ,,ZA,METAR
FABL,68442,-29.1,26.3,1348.0,BLOEMFONTEIN/HER,,ZA,METAR TAF
FABM,68461,-28.25,28.33,1690.0,BETHLEHEM AIRPOR,,ZA,METAR
FABN,,-25.72,31.0,800.0,BARBERTON       ,,ZA,METAR
FABR,,-34.52,20.02,50.0,BREDASDORP      ,,ZA,METAR
FABY,68728,-32.35,22.57,842.0,BEAUFORT WEST (M,,ZA,METAR
FACH,,-32.77,25.75,900.0,COOKHOUSE       ,,ZA,METAR
FACL,68380,-26.07,30.12,1700.0,CAROLINA        ,,ZA,METAR
FACT,68816,-33.97,18.6,48.0,CAPETOWN/DF MALA,,ZA,METAR TAF
FACV,68618,-31.47,19.75,977.0,CALVINIA (MET)  ,,ZA,METAR
FACW,,-32.17,18.87,150.0,CLANWILLIAM     ,,ZA,METAR
FADA,68536,-30.63,23.02,1247.0,DE AAR          ,,ZA,METAR
FADD,,-28.17,30.22,1286.0,DUNDEE          ,,ZA,METAR
FADH,,-28.12,29.97,1500.0,DURNACOL        ,,ZA,METAR
FADN,68588,-29.97,30.93,8.0,DURBAN/LOUIS BOT,,ZA,METAR TAF
FADR,,-26.35,28.47,1620.0,DUNNOTTAR (SAAF),,ZA,METAR
FADY,68538,-30.68,24.02,1265.0,DE AAR MET      ,,ZA,METAR
FAEL,68858,-33.03,27.82,127.0,EAST LONDON/SCHO,,ZA,METAR TAF
FAEO,,-26.5,29.97,1768.0,ERMELO          ,,ZA,METAR TAF
FAER,68156,-23.73,27.68,839.0,ELLISRAS        ,,ZA,METAR
FAES,,-28.87,31.43,487.0,ESHOWE          ,,ZA,METAR
FAET,,-31.3,27.85,1533.0,ELLIOT          ,,ZA,METAR
FAFB,,-28.82,27.92,1620.0,FICKSBURG       ,,ZA,METAR
FAFF,68362,-27.28,28.52,1500.0,FRANKFORT       ,,ZA,METAR
FAFR,68624,-31.92,21.52,1267.0,FRASERBURG      ,,ZA,METAR
FAGB,68116,-22.47,18.97,1449.0,GOBABIS         ,,ZA,METAR
FAGC,,-25.98,28.13,1617.0,GRAND CENTRAL   ,,ZA,METAR
FAGE,68906,-40.35,-9.87,54.0,GOUGH ISLAND    ,,ZA,METAR
FAGG,68828,-34.0,22.37,196.0,GEORGE/P. W. BOT,,ZA,METAR TAF
FAGM,,-26.25,28.15,1671.0,JOHANNESBURG/RAN,,ZA,METAR
FAGR,68736,-32.25,24.52,754.0,GRAAFF REINET   ,,ZA,METAR
FAGT,,-33.27,26.5,651.0,GRAHAMSTOWN     ,,ZA,METAR
FAGV,,-23.88,30.67,532.0,GRAVELOTTE      ,,ZA,METAR
FAGY,,-29.1,30.6,1100.0,GREYTOWN        ,,ZA,METAR
FAHA,,-28.07,26.87,1337.0,HARMONY (PRIVATE,,ZA,METAR
FAHD,,-34.02,24.77,40.0,HUMANSDORP      ,,ZA,METAR
FAHE,,-26.02,29.6,1576.0,HENDRINA (PRIVAT,,ZA,METAR
FAHG,,-26.52,28.37,1560.0,HEIDELBERG      ,,ZA,METAR
FAHS,68290,-24.37,31.03,532.0,HOEDSPRUIT (SAAF,,ZA,METAR TAF
FAIR,68263,-25.92,28.22,1527.0,PRETORIA/IRENE  ,,ZA,METAR
FAJB,,-26.15,28.0,1626.0,JOHANNESBURG CIT,,ZA,METAR
FAJF,,-29.77,25.42,1400.0,JAGERSFONTEIN   ,,ZA,METAR
FAKD,,-26.87,26.72,1355.0,KLERKSDORP      ,,ZA,METAR
FAKM,68438,-28.8,24.77,1203.0,KIMBERLEY/BJ VOR,,ZA,METAR TAF
FAKN,,-25.38,31.1,864.0,KRUGER MPUMALANG,,ZA,METAR TAF
FAKP,,-25.42,31.92,152.0,KOMATIPOORT     ,,ZA,METAR
FAKS,68352,-27.67,27.25,1350.0,KROONSTAD       ,,ZA,METAR
FAKZ,,-29.62,17.07,80.0,KLEINSEE        ,,ZA,METAR
FALA,,-25.93,27.92,1365.0,LANSERIA (CIV/MI,,ZA,METAR TAF
FALC,,-28.37,23.43,1494.0,LIME ACRES(PRIVA,,ZA,METAR
FALE,,-29.62,31.12,109.0,DURBAN SHAKA    ,,ZA,METAR TAF
FALI,,-26.17,26.18,1486.0,LICHTENBURG     ,,ZA,METAR
FALM,,-23.17,29.7,934.0,MAKHADO AFB     ,,ZA,METAR TAF
FALO,,-23.05,29.87,922.0,LOUIS TRICHARDT ,,ZA,METAR
FALT,,-26.17,26.17,1486.0,LICHTENBURG     ,,ZA,METAR
FALW,68714,-32.97,18.17,31.0,LANGEBAANWEG (SA,,ZA,METAR TAF
FALY,68476,-28.57,29.77,1100.0,LADYSMITH       ,,ZA,METAR
FAMB,68638,-31.47,25.02,1300.0,MIDDELBURG      ,,ZA,METAR
FAME,68994,-46.87,37.87,22.0,MARION ISLAND   ,,ZA,METAR
FAMG,,-30.85,30.35,151.0,MARGATE         ,,ZA,METAR
FAMK,,-25.87,25.63,1400.0,MAFIKENG        ,,ZA,METAR
FAMM,68242,-25.8,25.53,1280.0,MMABATHO INTL AR,,ZA,METAR TAF
FAMO,68928,-34.17,22.13,59.0,MOSSEL BAY (LGT-,,ZA,METAR
FAMP,,-17.62,24.17,985.0,MPACHA (CIV/MIL),,ZA,METAR
FAMR,,-24.55,30.87,1927.0,MARIEPSKOP (SAAF,,ZA,METAR
FAMT,,-26.55,28.02,1500.0,MEYERTON        ,,ZA,METAR
FANC,,-27.77,29.97,1251.0,NEWCASTLE       ,,ZA,METAR
FANH,,-29.42,30.43,750.0,NEW HANOVER     ,,ZA,METAR
FANL,,-25.92,28.97,1700.0,NEW LARGO       ,,ZA,METAR
FANS,68288,-25.42,30.97,674.0,NELSPRUIT       ,,ZA,METAR
FAOA,68006,-17.92,15.97,1100.0,ONDANGWA (MIL/CI,,ZA,METAR
FAOB,,-34.55,20.23,15.0,OVERBERG        ,,ZA,METAR TAF
FAOH,68826,-33.57,22.22,359.0,OUDTSHOORN      ,,ZA,METAR
FAOR,,-26.13,28.23,1684.0,JOHANNESBURG/TAM,,ZA,METAR TAF
FAPB,68174,-23.87,29.43,1222.0,PIETERSBURG (SAA,,ZA,METAR TAF
FAPC,,-33.22,22.02,900.0,PRINCE ALBERT RO,,ZA,METAR
FAPE,68842,-33.98,25.6,58.0,PORT ELIZABETH  ,,ZA,METAR TAF
FAPG,,-34.08,23.33,139.0,PLETTENBERG BAY ,,ZA,METAR
FAPH,68190,-23.92,31.13,400.0,PHALABORWA(PRIVA,,ZA,METAR
FAPI,,-23.88,29.47,1327.0,PIETERSBURG(CIVI,,ZA,METAR
FAPJ,68674,-31.62,29.55,47.0,PORT ST. JOHNS (,,ZA,METAR
FAPM,,-29.63,30.38,739.0,PIETERMARITZBURG,,ZA,METAR TAF
FAPN,,-25.33,27.17,1045.0,PILANESBERG     ,,ZA,METAR TAF
FAPP,,-23.83,29.45,1238.0,POLOKWANE INTL  ,,ZA,METAR TAF
FAPR,68262,-25.73,28.17,1306.0,PRETORIA (MET)  ,,ZA,METAR
FAPS,68350,-26.67,27.08,1378.0,POTCHEFSTROOM(SA,,ZA,METAR
FAQT,68648,-31.88,26.87,1086.0,QUEENSTOWN      ,,ZA,METAR
FARB,68498,-28.8,32.1,0.0,RICHARD'S BAY   ,,ZA,METAR TAF
FASB,68512,-29.68,17.93,811.0,SPRINGBOK       ,,ZA,METAR TAF
FASI,,-26.25,28.4,1627.0,SPRINGS         ,,ZA,METAR
FASK,,-25.82,28.17,1457.0,SWARTKOP (SAAF) ,,ZA,METAR TAF
FASS,,-27.63,23.0,1173.0,SISHEN          ,,ZA,METAR
FATC,68902,-37.03,-12.32,23.0,TRISTAN DA CUNHA,,ZA,METAR
FATH,,-23.08,30.38,614.0,THOHOYANDOU     ,,ZA,METAR
FATM,,-19.27,17.72,1327.0,TSUMEB (PRIVATE),,ZA,METAR
FATZ,,-23.82,30.32,583.0,TZANEEN         ,,ZA,METAR
FAUL,,-28.32,31.42,525.0,ULUNDI          ,,ZA,METAR
FAUP,68424,-28.38,21.27,845.0,UPINGTON/PIERRE ,,ZA,METAR TAF
FAUT,68668,-31.53,28.67,735.0,UMTATA/MTHATHA  ,,ZA,METAR TAF
FAVB,68338,-26.98,24.73,1195.0,VRYBURG         ,,ZA,METAR
FAVG,,-29.77,31.07,6.0,DURBAN/VIRGINIA ,,ZA,METAR
FAVR,68614,-31.67,18.5,34.0,VREDENDAL       ,,ZA,METAR
FAVV,,-26.57,27.97,1480.0,VEREENIGING     ,,ZA,METAR
FAVW,,-31.38,23.12,1256.0,VICTORIA WEST   ,,ZA,METAR
FAVY,,-27.77,30.8,1158.0,VRYHEID         ,,ZA,METAR
FAWB,,-25.65,28.22,1245.0,WONDERBOOM/PRETO,,ZA,METAR TAF
FAWE,,-22.57,17.1,1700.0,WINDHOEK        ,,ZA,METAR
FAWI,,-25.83,29.2,1553.0,WITBANK         ,,ZA,METAR
FAWK,68264,-25.82,28.22,1496.0,WATERKLOOF (SAAF,,ZA,METAR TAF
FAWM,68346,-28.0,26.67,1341.0,WELKOM          ,,ZA,METAR
FAYP,,-33.88,18.5,16.0,YSTERPLANT (SAAF,,ZA,METAR
FAZA,,-30.3,27.12,1300.0,ZASTRON         ,,ZA,METAR
FBFT,68054,-21.17,27.48,1000.0,FRANCISTOWN     ,,BW,METAR TAF
FBGZ,68024,-21.68,21.63,1100.0,GHANZI          ,,BW,METAR TAF
FBJW,68234,-24.6,24.67,1200.0,JWANENG (PRIVATE,,BW,METAR
FBKE,68029,-17.82,25.17,999.0,KASANE          ,,BW,METAR TAF
FBLT,68040,-21.42,25.6,985.0,GBADOLITE       ,,BW,METAR
FBMN,68032,-19.97,23.42,946.0,MAUN            ,,BW,METAR TAF
FBMP,,-23.07,26.83,1009.0,MAHALAPYE       ,,BW,METAR
FBOR,,-21.27,25.32,945.0,ORAPA (PRIVATE) ,,BW,METAR
FBPA,,-18.27,25.65,1064.0,PANDAMATENGA    ,,BW,METAR
FBPM,,-21.17,27.48,1009.0,FRANCISTOWN     ,,BW,METAR TAF
FBSK,68240,-24.55,25.92,1007.0,SIR SERETSE KHAM,,BW,METAR TAF
FBSN,68038,-20.47,25.97,904.0,SUA-PAN         ,,BW,METAR
FBSP,,-22.05,27.82,889.0,SELEBI PHIKWE   ,,BW,METAR TAF
FBSW,68026,-18.37,21.85,1000.0,SHAKAWE         ,,BW,METAR
FBTE,68226,-24.02,21.87,1100.0,TSHANE          ,,BW,METAR
FBTS,68328,-26.05,22.43,1000.0,TSABONG         ,,BW,METAR
FCBB,64450,-4.25,15.25,316.0,BRAZZAVILLE/MAYA,,CG,METAR TAF
FCBD,64453,-2.52,14.77,790.0,DJAMBALA        ,,CG,METAR
FCBM,64402,-3.97,13.92,512.0,MOUYONDZI       ,,CG,METAR
FCBO,64452,-2.62,16.22,312.0,M'POUYA         ,,CG,METAR
FCBS,64405,-3.67,13.33,531.0,SIBITI          ,,CG,METAR
FCOG,64454,-1.87,15.87,377.0,GAMBOMA         ,,CG,METAR
FCOI,64459,1.62,18.07,326.0,IMPFONDO        ,,CG,METAR
FCOM,64456,-0.02,15.57,379.0,MAKOUA          ,,CG,METAR
FCOS,64460,2.07,14.12,550.0,SOUANKE         ,,CG,METAR
FCOU,64458,1.62,16.05,352.0,OUESSO          ,,CG,METAR
FCPA,64403,-3.47,12.62,161.0,MAKABANA        ,,CG,METAR
FCPL,64401,-4.2,12.68,330.0,LOUBOMO         ,,CG,METAR
FCPP,64400,-4.82,11.9,18.0,POINTE-NOIRE    ,,CG,METAR TAF
FDBB,,-26.8,31.93,106.0,BIG BEND MET    ,,SZ,METAR
FDJR,,-27.17,31.43,696.0,JERICHO         ,,SZ,METAR
FDLM,,-25.98,31.98,585.0,LOMAHASHA       ,,SZ,METAR
FDLV,,-27.27,31.82,268.0,LAVUMISA        ,,SZ,METAR
FDMS,68396,-26.52,31.3,633.0,MANZINI/MATSAPA ,,SZ,METAR TAF
FDMY,68390,-25.88,31.52,401.0,MAYIWANE        ,,SZ,METAR
FDND,,-26.97,31.97,202.0,NDZEVANE        ,,SZ,METAR
FDNH,,-27.12,31.22,1081.0,NHLANGANO ARPT  ,,SZ,METAR
FDNY,,-26.12,31.45,384.0,NYONYANE        ,,SZ,METAR
FDOT,,-26.7,31.43,342.0,MOTI            ,,SZ,METAR TAF
FDPP,,-25.97,31.25,1023.0,PIGGS PEAK      ,,SZ,METAR
FDSK,,-26.35,31.72,323.0,SIKHUIPHE       ,,SZ,METAR TAF
FDST,,-26.43,31.95,642.0,SITEKI          ,,SZ,METAR
FDUS,,-26.72,30.92,966.0,MUSI            ,,SZ,METAR
FDVV,,-26.07,31.88,276.0,VUVULANE        ,,SZ,METAR
FEFA,64662,5.03,21.18,449.0,ALINDAO         ,,CF,METAR
FEFB,64659,5.4,26.5,651.0,OBO             ,,CF,METAR
FEFF,64650,4.4,18.52,364.0,BANGUI/M'POKO (M,,CF,METAR TAF
FEFG,64656,4.78,22.78,550.0,BANGASSOU       ,,CF,METAR
FEFI,64658,10.27,22.77,464.0,BIRAO           ,,CF,METAR
FEFL,64605,5.27,17.62,674.0,BOSSEMBELE      ,,CF,METAR
FEFM,64660,5.83,20.63,475.0,BAMBARI         ,,CF,METAR
FEFN,64654,8.4,20.63,511.0,N'DELE          ,,CF,METAR
FEFO,64601,5.97,15.62,1020.0,BOUAR           ,,CF,METAR
FEFR,64655,6.52,21.97,584.0,BRIA            ,,CF,METAR
FEFS,64610,6.47,17.42,465.0,BOSSANGOA       ,,CF,METAR
FEFT,64600,4.22,15.8,567.0,BERBERATI       ,,CF,METAR
FEFY,64661,6.5,23.27,602.0,YALINGA         ,,CF,METAR
FGBT,64820,1.9,9.8,2.0,BATA (RIO MUNI) ,,GQ,METAR TAF
FGSL,64810,3.75,8.72,23.0,MALABO/FERNANDO ,,GQ,METAR TAF
FHAW,61902,-7.97,-14.4,79.0,WIDE AWAKE FIELD,,SH,METAR TAF
FIMP,61990,-20.43,57.68,57.0,PLAISANCE       ,,MU,METAR TAF
FIMR,61988,-19.75,63.37,31.0,RODRIGUES/PLAINE,,MU,METAR TAF
FJDG,61967,-7.32,72.42,3.0,DIEGO GARCIA    ,,IO,METAR TAF
FKAB,64880,6.77,11.82,1110.0,BANYO           ,,CM,METAR
FKAF,64920,4.72,11.25,500.0,BAFIA           ,,CM,METAR
FKAG,64960,3.97,13.18,693.0,ABONG-MBANG     ,,CM,METAR
FKAL,64961,3.13,13.62,624.0,LOMIE           ,,CM,METAR
FKAM,64882,6.52,14.37,1027.0,MEIGANGA        ,,CM,METAR
FKAN,64911,4.95,9.92,821.0,NKONGSAMBA      ,,CM,METAR
FKAO,64901,5.58,14.07,804.0,BETARE-OYA      ,,CM,METAR
FKAY,64900,5.53,12.37,1031.0,YOKO            ,,CM,METAR
FKKA,64851,10.43,14.25,422.0,MAROUA-SALAK    ,,CM,METAR
FKKB,64971,2.95,9.9,16.0,KRIBI           ,,CM,METAR
FKKC,64912,4.07,9.37,52.0,TIKO            ,,CM,METAR
FKKD,64910,4.0,9.72,10.0,DOUALA (CIV/MIL),,CM,METAR TAF
FKKE,,3.63,10.77,227.0,ESEKA           ,,CM,METAR
FKKF,64890,5.72,9.27,126.0,MAMFE           ,,CM,METAR
FKKH,,10.08,14.43,389.0,KAELE           ,,CM,METAR
FKKI,64931,4.47,14.37,656.0,BATOURI         ,,CM,METAR
FKKJ,,10.37,15.22,326.0,YAGOUA CITY     ,,CM,METAR
FKKL,,10.45,14.25,422.0,MAROUA SALAK    ,,CM,METAR TAF
FKKM,64893,5.65,10.75,1210.0,KOUNDJA/FOUMBAN ,,CM,METAR
FKKN,64870,7.35,13.57,1108.0,NGAOUNDERE      ,,CM,METAR TAF
FKKO,,4.53,13.72,670.0,BERTOUA         ,,CM,METAR
FKKR,64860,9.33,13.37,223.0,GAROUA          ,,CM,METAR TAF
FKKS,,5.45,10.07,1408.0,DSCHANG         ,,CM,METAR
FKKT,,6.47,12.62,870.0,TIBATI          ,,CM,METAR
FKKV,64892,6.03,10.12,1239.0,BAMENDA         ,,CM,METAR
FKKW,,2.88,11.17,628.0,EBOLOWA         ,,CM,METAR
FKKY,,3.82,11.52,751.0,YOUNDE II       ,,CM,METAR
FKYS,64950,3.82,11.52,694.0,YAOUNDE         ,,CM,METAR TAF
FLBA,67413,-8.83,31.32,1673.0,MBALA (MIL/CIV) ,,ZM,METAR
FLCH,67753,-16.82,27.07,1278.0,CHOMA           ,,ZM,METAR
FLCP,67581,-13.55,32.57,1032.0,CHIPATA         ,,ZM,METAR TAF
FLHN,,-17.82,25.82,996.0,LIVINGSTONE NKUM,,ZM,METAR TAF
FLIK,67481,-10.12,32.62,1360.0,ISOKA           ,,ZM,METAR
FLKB,67403,-9.8,29.07,1324.0,KAWAMBWA        ,,ZM,METAR
FLKK,,-15.32,28.45,1149.0,LUSAKA KUANDA   ,,ZM,METAR TAF
FLKO,67641,-14.8,24.8,1213.0,KAOMA           ,,ZM,METAR
FLKS,67475,-10.22,31.12,1384.0,KASAMA          ,,ZM,METAR TAF
FLKW,67663,-14.43,28.47,1207.0,KABWE/MILLIKEN  ,,ZM,METAR
FLLC,67666,-15.42,28.33,1280.0,LUSAKA CITY AIRP,,ZM,METAR
FLLD,67583,-12.27,33.2,1143.0,LUNDAZI         ,,ZM,METAR
FLLI,67743,-17.82,25.82,996.0,LIVINGSTONE (MIL,,ZM,METAR TAF
FLMA,67461,-11.08,28.85,1259.0,MANSA           ,,ZM,METAR TAF
FLMF,67442,-13.27,31.93,559.0,MFUWE           ,,ZM,METAR TAF
FLMG,67633,-15.25,23.13,1053.0,MONGU           ,,ZM,METAR
FLMP,67477,-11.9,31.42,1402.0,MPIKA           ,,ZM,METAR
FLMW,67441,-11.75,24.42,1363.0,MWINILUNGA      ,,ZM,METAR
FLND,67561,-13.0,28.65,1268.0,NDOLA           ,,ZM,METAR TAF
FLPA,67541,-13.52,25.85,1234.0,KASEMPA         ,,ZM,METAR
FLPE,67673,-14.25,31.27,1036.0,PETAUKE         ,,ZM,METAR
FLPO,67543,-13.58,24.18,1075.0,KABOMPO         ,,ZM,METAR
FLSE,67571,-13.22,30.22,1384.0,SERENJE         ,,ZM,METAR
FLSK,,-13.0,28.67,1268.0,NDOLA           ,,ZM,METAR TAF
FLSN,67731,-16.1,23.27,1027.0,SENANGA         ,,ZM,METAR
FLSS,67741,-17.47,24.3,951.0,SESHEKE         ,,ZM,METAR
FLSW,67551,-12.17,26.37,1386.0,SOLWEZI         ,,ZM,METAR TAF
FLYA,67469,-11.33,29.52,1171.0,SAMFYA          ,,ZM,METAR
FLZB,67531,-13.52,23.12,1078.0,ZAMBEZI         ,,ZM,METAR
FMCH,67002,-11.53,43.27,30.0,MORONI/HAHAIA IN,,KM,METAR TAF
FMCN,,-11.68,43.22,6.0,MORONI/ICONI ARP,,KM,METAR
FMCV,67001,-12.12,44.42,19.0,ANJOUAN/OUANI   ,,KM,METAR
FMCZ,67005,-12.8,45.27,7.0,DZAOUDZI/PAMANZI,,KM,METAR TAF
FMEE,61980,-20.88,55.52,20.0,ST. DENIS/GILLOT,,RE,METAR TAF
FMEP,61984,-21.32,55.42,21.0,ST. PIERRE/FONDS,,RE,METAR TAF
FMME,67107,-19.82,47.07,1532.0,ANTSIRABE       ,,MG,METAR TAF
FMMH,67113,-19.82,48.78,5.0,MAHANORO        ,,MG,METAR
FMMI,67083,-18.8,47.47,1269.0,ANTANANARIVO/IVA,,MG,METAR TAF
FMMO,67073,-18.05,44.02,23.0,MAINTIRANO      ,,MG,METAR
FMMS,67072,-17.08,49.82,4.0,SAINTE-MARIE ARP,,MG,METAR TAF
FMMT,67095,-18.12,49.38,13.0,TAMATAVE/TOAMASI,,MG,METAR TAF
FMMV,67117,-20.27,44.32,8.0,MORONDAVA       ,,MG,METAR
FMNA,67009,-12.33,49.28,108.0,DIEGO-SUAREZ/ANT,,MG,METAR TAF
FMND,67022,-14.65,49.62,474.0,ANDAPA          ,,MG,METAR
FMNH,67025,-14.87,50.25,88.0,ANTALAHA/ANTSIRA,,MG,METAR
FMNL,67019,-14.62,47.77,57.0,ANALALAVA       ,,MG,METAR
FMNM,67027,-15.67,46.35,18.0,MAJUNGA/MAHAJANG,,MG,METAR TAF
FMNN,67012,-13.32,48.32,10.0,NOSY BE/FASCENE ,,MG,METAR TAF
FMNQ,67037,-16.75,44.47,36.0,BESALAMPY       ,,MG,METAR
FMNS,67023,-14.27,50.17,5.0,SAMBAVA SUD     ,,MG,METAR
FMNV,67017,-13.37,50.0,5.0,VOHEMAR         ,,MG,METAR
FMSD,67197,-25.03,46.95,7.0,FT. DAUPHIN/TOLA,,MG,METAR TAF
FMSF,67137,-21.43,47.1,1109.0,FIANARANTSOA    ,,MG,METAR
FMSG,67157,-22.8,47.82,6.0,FARAFANGANA     ,,MG,METAR
FMSM,67143,-21.18,48.37,6.0,MANANJARY       ,,MG,METAR
FMSO,67152,-22.55,45.38,824.0,RANOHIRA        ,,MG,METAR
FMSR,67131,-21.75,43.37,4.0,MOROMBE         ,,MG,METAR
FMST,67161,-23.37,43.72,8.0,TULEAR/TOLIARA  ,,MG,METAR TAF
FNBC,,-6.27,14.25,570.0,MBANZA/CONGO    ,,AO,METAR TAF
FNBG,,-12.62,13.4,33.0,BENGUELA/MONBACA,,AO,METAR TAF
FNCA,,-5.58,12.18,14.0,CABINDA         ,,AO,METAR TAF
FNCT,,-12.48,13.48,6.0,CATUMBELA       ,,AO,METAR TAF
FNDU,,-7.4,20.82,749.0,DUNDO           ,,AO,METAR TAF
FNGI,,-17.05,15.68,1116.0,ONDJIVA         ,,AO,METAR TAF
FNHU,66318,-12.82,15.77,1697.0,HUAMBO/NOVA LISB,,AO,METAR TAF
FNKU,66325,-12.4,16.95,1724.0,BIE/KUITO/SILVA ,,AO,METAR TAF
FNLB,66305,-12.37,13.52,3.0,LOBITO          ,,AO,METAR
FNLU,66160,-8.85,13.22,75.0,LUANDA/4 DE FEVE,,AO,METAR TAF
FNMA,66215,-9.52,16.32,1174.0,MALANGE         ,,AO,METAR TAF
FNME,66410,-14.65,17.67,1343.0,MENONGUE EAST/SE,,AO,METAR TAF
FNMO,66422,-15.27,12.15,64.0,NAMIBE          ,,AO,METAR TAF
FNPA,66240,-10.68,13.75,5.0,PORTO AMBOIM    ,,AO,METAR
FNSA,66226,-9.68,20.43,1096.0,SAURIMO/HENRIQUE,,AO,METAR TAF
FNSO,,-6.13,12.37,7.0,SOYO            ,,AO,METAR TAF
FNSU,,-11.17,13.85,6.0,SUMBE           ,,AO,METAR
FNUB,66390,-14.93,13.57,1749.0,LUBANGO         ,,AO,METAR TAF
FNUE,66285,-11.77,19.9,1354.0,LUENA           ,,AO,METAR TAF
FNUG,,-7.6,15.02,829.0,UIGE            ,,AO,METAR TAF
FNWK,66270,-11.42,15.12,1304.0,WAKU KUNGU/CELA ,,AO,METAR
FNZE,66130,-7.22,12.87,17.0,N'ZETO/AMBRIZETE,,AO,METAR TAF
FOGM,64550,-1.83,11.05,90.0,MOUILA CITY     ,,GA,METAR
FOGO,,1.53,11.58,660.0,OYEM            ,,GA,METAR
FOGR,64551,-0.7,10.25,25.0,LAMBARENE       ,,GA,METAR
FOOB,64510,2.07,11.48,599.0,BITAM           ,,GA,METAR
FOOC,64504,1.0,9.58,13.0,COCOBEACH       ,,GA,METAR
FOOD,64565,-1.52,13.27,573.0,MOANDA          ,,GA,METAR
FOOE,64545,1.02,13.92,501.0,MEKAMBO         ,,GA,METAR
FOOG,64501,-0.7,8.75,4.0,PORT GENTIL     ,,GA,METAR TAF
FOOK,64556,0.57,12.88,517.0,MAKOKOU/EPASSENG,,GA,METAR
FOOL,64500,0.45,9.42,9.0,LIBREVILLE/LEON ,,GA,METAR TAF
FOOM,64552,0.77,11.52,583.0,MITZIC          ,,GA,METAR
FOON,,-1.65,13.43,440.0,FRANCEVILLE/MVEN,,GA,METAR TAF
FOOR,64560,-0.82,12.73,487.0,LASTOURSVILLE   ,,GA,METAR
FOOT,64507,-2.88,10.95,75.0,TCHIBANGA       ,,GA,METAR
FOOY,64503,-3.42,10.65,34.0,MAYUMBA         ,,GA,METAR
FPPR,61934,1.63,7.42,5.0,PRINCIPE ISLAND ,,ST,METAR
FPST,61931,0.37,6.72,11.0,SAO TOME IL/SALA,,ST,METAR TAF
FQAG,67273,-16.22,39.88,62.0,ANGOCHE         ,,MZ,METAR
FQBR,67297,-19.8,34.9,14.0,BEIRA           ,,MZ,METAR TAF
FQCB,67231,-14.82,36.52,607.0,CUAMBA          ,,MZ,METAR
FQCH,67295,-19.15,33.43,695.0,CHIMOIO         ,,MZ,METAR TAF
FQFU,,-14.92,33.62,1262.0,FURANCUNGO      ,,MZ,METAR
FQIN,67323,-23.87,35.38,10.0,INHAMBANE       ,,MZ,METAR TAF
FQLC,67217,-13.27,35.25,1362.0,LICHINGA        ,,MZ,METAR TAF
FQLU,67241,-15.02,40.67,11.0,LUMBO           ,,MZ,METAR
FQMA,67341,-25.92,32.57,34.0,MAPUTO/MAVALANE ,,MZ,METAR TAF
FQMP,67205,-11.33,40.37,29.0,MOCIMBOA DA PRAI,,MZ,METAR
FQMR,67221,-13.72,37.53,838.0,MARRUPA         ,,MZ,METAR
FQMU,,-17.37,35.02,89.0,MUTARARA        ,,MZ,METAR
FQNC,,-14.48,40.72,112.0,NACALA          ,,MZ,METAR TAF
FQNP,67237,-15.1,39.27,434.0,NAMPULA         ,,MZ,METAR TAF
FQPB,67215,-12.98,40.52,101.0,PEMBA           ,,MZ,METAR TAF
FQQL,67283,-17.87,36.87,5.0,QUELIMANE       ,,MZ,METAR TAF
FQSG,,-15.58,32.77,882.0,SONGO           ,,MZ,METAR
FQTE,67261,-16.17,33.57,150.0,TETE            ,,MZ,METAR TAF
FQTT,,-16.1,33.63,146.0,TETE/CHINGOZI   ,,MZ,METAR TAF
FQUG,67229,-14.22,34.35,1311.0,ULONGUE         ,,MZ,METAR
FQVL,67315,-22.0,35.32,15.0,VILANCULOS      ,,MZ,METAR TAF
FQXA,67335,-25.05,33.62,3.0,XAI XAI         ,,MZ,METAR TAF
FSIA,63980,-4.67,55.52,3.0,SEYCHELLES INTL ,,SC,METAR TAF
FSPP,,-4.32,55.7,1.0,PRASLIN         ,,SC,METAR
FSSS,63985,-4.67,55.52,4.0,SEYCHELLES INTL ,,SC,METAR rawinsonde
FTTA,64750,9.15,18.37,361.0,SARH (CIV/MIL)  ,,TD,METAR
FTTB,,10.28,15.38,328.0,BONGOR          ,,TD,METAR
FTTC,64756,13.83,20.85,548.0,ABECHE          ,,TD,METAR
FTTD,64706,8.62,16.07,420.0,MOUNDOU         ,,TD,METAR
FTTH,,9.4,16.3,356.0,LAI             ,,TD,METAR
FTTI,64751,13.22,18.32,334.0,ATI             ,,TD,METAR
FTTJ,64700,12.13,15.03,295.0,NDJAMENA (CIV/MI,,TD,METAR TAF
FTTK,64708,12.37,17.05,301.0,BOKORO          ,,TD,METAR
FTTL,64702,13.42,14.72,292.0,BOL-BERIM       ,,TD,METAR
FTTM,64758,12.12,18.42,428.0,MONGO           ,,TD,METAR
FTTN,64754,11.02,20.27,436.0,AM-TIMAN        ,,TD,METAR
FTTP,64709,9.37,14.92,455.0,PALA            ,,TD,METAR
FTTR,,20.43,16.57,809.0,ZOUAR           ,,TD,METAR
FTTY,64753,17.92,19.1,234.0,FAYA-LARGEAU (MI,,TD,METAR
FTTZ,,21.43,17.05,1074.0,BARDAI-ZOUGRA(MI,,TD,METAR
FVBB,67991,-22.22,30.0,457.0,BEITBRIDGE      ,,ZW,METAR
FVBI,67755,-17.62,27.32,617.0,BINGA           ,,ZW,METAR
FVBU,67965,-20.02,28.62,1329.0,BULAWAYO/WOODVAL,,ZW,METAR TAF
FVCH,67983,-20.18,32.62,1132.0,CHIPINGE        ,,ZW,METAR
FVCZ,67977,-21.02,31.57,436.0,CHIREDZI/BUFFALO,,ZW,METAR TAF
FVFA,67843,-18.1,25.85,1069.0,VICTORIA FALLS  ,,ZW,METAR TAF
FVGO,67861,-18.22,28.92,1282.0,GOKWE           ,,ZW,METAR
FVGR,,-18.97,32.45,1019.0,MUTARE/GRAND REE,,ZW,METAR
FVHA,67775,-17.92,31.12,1495.0,HARARE/KUTSAGA(M,,ZW,METAR TAF
FVJN,,-20.02,28.63,1331.0,BULAWAYO        ,,ZW,METAR TAF
FVKA,67765,-16.82,29.62,1344.0,KAROI           ,,ZW,METAR
FVKB,67761,-16.52,28.88,515.0,KARIBA          ,,ZW,METAR TAF
FVMT,67781,-17.42,32.22,1244.0,MUTOKO          ,,ZW,METAR
FVMV,67975,-20.07,30.87,1103.0,MASVINGO        ,,ZW,METAR TAF
FVRG,,-17.93,31.1,1490.0,HARARE/MUGABE   ,,ZW,METAR TAF
FVRU,67881,-18.52,32.12,1430.0,RUSAPE          ,,ZW,METAR
FVTL,67867,-19.43,29.85,1439.0,GWERU/THORNHILL ,,ZW,METAR TAF
FVWN,67853,-18.63,27.0,1087.0,HWANGE NATL. PAR,,ZW,METAR TAF
FWCL,67693,-15.67,34.97,774.0,CHILEKA INTL ARP,,MW,METAR TAF
FWCT,67421,-9.68,33.27,1278.0,CHITIPA         ,,MW,METAR
FWDZ,67689,-14.32,34.27,1632.0,DEDZA           ,,MW,METAR
FWKA,67423,-9.93,33.87,529.0,KARONGA         ,,MW,METAR
FWKI,67586,-13.78,33.78,1225.0,KAMUZU INTL AIRP,,MW,METAR TAF
FWKK,67591,-12.92,34.27,500.0,NKHOTA KOTA     ,,MW,METAR
FWLI,,-13.78,33.78,1230.0,LILONGWE INTL AR,,MW,TAF
FWLL,67587,-13.97,33.77,1067.0,LILONGWE INTL AR,,MW,METAR
FWMG,67695,-14.42,35.25,485.0,MANGOCHI        ,,MW,METAR
FWMY,67690,-14.07,34.92,474.0,MONKEY BAY      ,,MW,METAR
FWMZ,67485,-11.87,33.62,1351.0,MZIMBA          ,,MW,METAR
FWSM,67597,-13.75,34.57,513.0,SALIMA          ,,MW,METAR
FWUU,67489,-11.43,34.02,1254.0,MZUZU           ,,MW,METAR TAF
FXMM,,-29.47,27.55,1623.0,MASERU/MOSHOESHO,,LS,METAR TAF
FXMU,68454,-29.3,27.5,1556.0,MEJAMETALANA/MAS,,LS,METAR
FYAB,,-26.77,19.63,985.0,AROAB           ,,NA,METAR
FYAN,,-24.15,19.12,1136.0,ARANOS          ,,NA,METAR
FYAS,,-26.7,16.32,1480.0,AUS             ,,NA,METAR
FYBG,,-18.12,21.63,1010.0,BAGANI          ,,NA,METAR
FYEN,,-17.48,16.32,1121.0,EENHANA         ,,NA,METAR
FYGB,,-22.5,18.97,1436.0,GOBABIS ARPT    ,,NA,METAR
FYGF,68014,-19.6,18.12,1407.0,GROOTFONTEIN    ,,NA,METAR TAF
FYGN,,-19.6,18.12,1400.0,HENTIES BAY     ,,NA,METAR TAF
FYGO,68106,-23.57,15.05,406.0,GOBABEB         ,,NA,METAR
FYHN,,-22.12,14.28,3.0,HENTIES BAY     ,,NA,METAR
FYKB,,-28.03,18.73,992.0,KARASBURG       ,,NA,METAR
FYKM,,-17.63,24.18,959.0,KATIMA MULILO   ,,NA,METAR TAF
FYKT,68312,-26.53,18.12,1064.0,KEETMANSHOOP    ,,NA,METAR TAF
FYKX,,-20.37,14.97,971.0,KHORIXAS        ,,NA,METAR
FYLZ,,-26.68,15.25,129.0,LUDERITZ/DIAZ PO,,NA,METAR TAF
FYMH,,-24.77,16.98,1377.0,MALTAHOEHE      ,,NA,METAR
FYML,,-24.6,17.93,1111.0,MARIENTAL ARPT  ,,NA,METAR
FYND,,-28.7,17.62,171.0,NOORDOEWER      ,,NA,METAR
FYOA,68013,-17.88,15.97,1099.0,ONDANGWA        ,,NA,METAR TAF
FYOG,,-28.58,16.45,6.0,ORANJEMUND      ,,NA,METAR TAF
FYOH,,-17.88,15.07,1104.0,OKAHAO          ,,NA,METAR
FYOJ,,-20.08,16.13,1321.0,OUTJO AIRPORT   ,,NA,METAR
FYOK,,-20.6,17.47,1360.0,OKAKARARA       ,,NA,METAR
FYOM,,-21.42,15.93,1215.0,OMARURU         ,,NA,METAR
FYOO,,-19.15,15.92,1105.0,OKAUKUEJO ARPT  ,,NA,METAR
FYOP,,-18.07,13.85,1190.0,OPUWO           ,,NA,METAR
FYOS,,-17.8,15.7,1100.0,OSHAKATI        ,,NA,METAR
FYOT,,-24.02,19.73,1203.0,OOTMOED         ,,NA,METAR
FYOW,68015,-20.43,16.67,1480.0,OTJIWARONGO ARPT,,NA,METAR
FYRH,,-23.32,17.08,1413.0,REHOBETH        ,,NA,METAR
FYRK,,-22.97,14.65,88.0,ROOIKOP (SAAF/CI,,NA,METAR
FYRN,,-20.02,13.85,756.0,RHINO CAMP      ,,NA,METAR
FYRU,68018,-17.95,19.72,1104.0,RUNDU           ,,NA,METAR TAF
FYTE,,-19.97,13.02,8.0,TERRACE BAY     ,,NA,METAR
FYTK,,-19.58,20.45,1152.0,TSUMKWE         ,,NA,METAR
FYTM,,-19.27,17.73,1327.0,TSUMEB          ,,NA,METAR
FYTN,,-21.13,18.78,1443.0,OTJINENE        ,,NA,METAR
FYWB,68104,-22.98,14.65,87.0,WALVIS BAY      ,,NA,METAR TAF
FYWE,68002,-22.62,17.08,1700.0,EROS AIRPORT    ,,NA,METAR TAF
FYWH,68112,-22.47,17.47,1699.0,J. G. STRIJDOM  ,,NA,METAR TAF
FYWW,68110,-22.57,17.1,1672.0,WINDHOEK        ,,NA,METAR TAF
FZAA,64210,-4.38,15.45,309.0,KINSHASA/N'DJILI,,CD,METAR TAF
FZAG,64201,-6.0,12.42,27.0,MOANDA          ,,CD,METAR
FZAI,64203,-5.92,12.43,120.0,KITONA (ZAI-AFB),,CD,METAR
FZAM,64207,-5.78,13.42,340.0,MATADI/TSHIMPI  ,,CD,METAR
FZAN,64206,-5.52,13.57,277.0,INGA            ,,CD,METAR
FZBA,64115,-1.97,18.27,300.0,INONGO          ,,CD,METAR
FZBO,64108,-3.28,17.35,324.0,BANDUNDU        ,,CD,METAR
FZCA,64222,-5.02,18.8,449.0,KIKWIT          ,,CD,METAR
FZCF,,-7.27,19.0,1060.0,KAHEMBA         ,,CD,METAR
FZCS,64217,-4.92,17.07,563.0,KENGE           ,,CD,METAR
FZEA,64005,0.05,18.27,317.0,MBANDAKA        ,,CD,METAR
FZEN,64008,1.22,19.8,353.0,BASANKUSU       ,,CD,METAR
FZFK,64006,3.27,19.77,446.0,GEMENA          ,,CD,METAR
FZGA,64014,2.32,21.57,463.0,LISALA          ,,CD,METAR
FZGN,64126,-0.22,20.85,351.0,BOENDE          ,,CD,METAR
FZIA,64040,0.52,25.17,396.0,KISANGANI (ZAI-A,,CD,METAR
FZIC,,0.48,25.33,432.0,KISANGANI       ,,CD,METAR TAF
FZJA,64062,2.77,27.63,764.0,ISIRO           ,,CD,METAR
FZKA,64076,1.5,30.22,1239.0,BUNIA           ,,CD,METAR
FZKO,,4.02,25.87,650.0,ANGO            ,,CD,METAR
FZKP,64021,3.78,23.82,474.0,BONDO           ,,CD,METAR
FZMA,64180,-2.52,28.85,1612.0,BUKAVU/KAVUMU   ,,CD,METAR
FZMB,64072,0.12,29.27,1840.0,BUTEMBO         ,,CD,METAR
FZNA,64184,-1.67,29.22,1552.0,GOMA INTL AIRPOR,,CD,METAR TAF
FZNC,64157,-1.17,29.43,1275.0,RUTSHURU        ,,CD,METAR
FZOA,64155,-2.95,25.92,497.0,KINDU           ,,CD,METAR
FZOD,64156,-2.6,26.55,569.0,KALIMA          ,,CD,METAR
FZOK,64264,-4.52,26.57,544.0,KASONGO         ,,CD,METAR
FZQA,64360,-11.58,27.53,1309.0,LUBUMBASHI/LUANO,,CD,METAR TAF
FZQM,64328,-10.72,25.43,1526.0,KOLWEZI         ,,CD,METAR
FZQV,64348,-8.58,27.32,1579.0,MITWABA         ,,CD,METAR
FZRA,64282,-7.27,27.42,633.0,MANONO          ,,CD,METAR
FZRB,,-7.07,29.77,1132.0,MOBA            ,,CD,METAR
FZRF,64285,-5.87,29.23,778.0,KALEMIE         ,,CD,METAR
FZRQ,64276,-5.33,27.0,561.0,KONGOLO         ,,CD,METAR
FZSA,64315,-8.62,25.25,1106.0,KAMINA (ZAI-AFB),,CD,METAR
FZSD,64303,-9.62,22.85,921.0,SANDOA          ,,CD,METAR
FZSI,64301,-10.67,22.32,1028.0,DILOLO          ,,CD,METAR
FZSK,,-8.33,22.57,882.0,KAPANGA         ,,CD,METAR
FZTK,,-7.52,24.17,845.0,KANIAMA         ,,CD,METAR
FZUA,64235,-5.87,22.42,657.0,KANANGA         ,,CD,METAR
FZUK,64228,-6.42,20.85,481.0,TSHIKAPA        ,,CD,METAR
FZVA,64146,-3.47,23.47,500.0,LODJA           ,,CD,METAR
FZVE,,-2.28,23.27,437.0,LOMELA          ,,CD,METAR
FZVS,64224,-4.32,20.57,420.0,ILEBO           ,,CD,METAR
FZWA,64247,-6.12,23.57,679.0,MBUJI-MAYI      ,,CD,METAR
FZWT,,-6.12,24.47,890.0,KABINDA/TUNTA   ,,CD,METAR
GABG,61296,11.42,-7.5,351.0,BOUGOUNI        ,,ML,METAR
GABS,61291,12.53,-7.95,375.0,BAMAKO/SENOU (MI,,ML,METAR TAF
GACA,99023,47.0,-17.0,0.0,SHIP C7L/ROMEO  ,,ML,METAR
GAGO,61226,16.27,-0.05,260.0,GAO (CIV/MIL)   ,,ML,METAR TAF
GAHB,61240,15.32,-1.67,288.0,HOMBORI         ,,ML,METAR
GAKA,61285,12.83,-11.22,132.0,KENIEBA         ,,ML,METAR
GAKD,,14.48,-11.4,53.0,KAYES           ,,ML,METAR
GAKL,61214,18.42,1.35,459.0,KIDAL           ,,ML,METAR
GAKO,61293,12.37,-5.47,367.0,KOUTIALA        ,,ML,METAR
GAKT,61270,13.07,-9.47,334.0,KITA            ,,ML,METAR
GAKY,61257,14.48,-11.4,50.0,KAYES           ,,ML,METAR
GAMB,61265,14.52,-4.08,271.0,MOPTI/BARBE (MIL,,ML,METAR
GAMK,61250,15.87,2.22,278.0,MENAKA          ,,ML,METAR
GANK,61233,15.17,-7.27,265.0,NARA/KEIBANE    ,,ML,METAR
GANR,61230,15.23,-9.58,237.0,NIORO DU SAHEL  ,,ML,METAR
GASG,61272,13.4,-6.15,289.0,SEGOU           ,,ML,METAR
GASK,61297,11.33,-5.67,375.0,SIKASSO         ,,ML,METAR
GASN,61277,13.32,-4.82,284.0,SAN             ,,ML,METAR
GATB,61223,16.72,-3.0,264.0,TOMBOUCTOU/TIMBU,,ML,METAR
GATS,61202,20.18,0.97,491.0,TESSALIT        ,,ML,METAR
GAYE,,15.13,-10.57,99.0,YELIMANE        ,,ML,METAR
GBYD,61701,13.33,-16.65,29.0,BANJUL/YUNDUM IN,,GM,METAR TAF
GCFV,60035,28.43,-13.87,11.0,FUERTEVENTURA AR,,ES,METAR TAF
GCGM,,28.03,-17.22,217.0,LA GOMERA ARPT  ,,ES,METAR TAF
GCHI,60001,27.82,-17.88,21.0,HIERRO AIRPORT  ,,ES,METAR TAF
GCLA,60005,28.62,-17.75,20.0,LA PALMA AIRPORT,,ES,METAR TAF
GCLP,60030,27.92,-15.38,16.0,LAS PALMAS/GANDO,,ES,METAR TAF
GCRR,60040,28.95,-13.58,9.0,ARRECIFE/LANZARO,,ES,METAR TAF
GCTS,60025,28.05,-16.57,59.0,TENERIFE SUR/REI,,ES,METAR TAF
GCXO,60015,28.48,-16.35,623.0,TENERIFE/LOS ROD,,ES,METAR TAF
GECE,60320,35.88,-5.3,2.0,CUETA           ,,ES,METAR TAF
GEML,60338,35.27,-2.95,48.0,MELILLA         ,,ES,METAR TAF
GFBN,61866,7.52,-12.5,8.0,BONTHE          ,,SL,METAR
GFBO,61881,7.95,-11.77,93.0,BO              ,,SL,METAR
GFKB,61886,9.57,-11.55,464.0,KABALA          ,,SL,METAR
GFLL,61856,8.62,-13.18,28.0,FREETOWN/LUNGI  ,,SL,METAR TAF
GGBF,61781,12.17,-14.67,43.0,BAFATA          ,,GW,METAR
GGBO,61769,11.57,-15.47,20.0,BOLAMA          ,,GW,METAR
GGOV,61766,11.88,-15.65,31.0,BISSAU (CIV/MIL),,GW,METAR TAF
GLMR,65602,6.32,-10.75,12.0,SPRIGGS PAYNE/MO,,LR,METAR
GLRB,65660,6.25,-10.35,12.0,MONROVIA/ROBERTS,,LR,METAR TAF
GMAA,60250,30.37,-9.57,23.0,AGADIR/INEZGANE ,,MA,METAR
GMAD,60252,30.32,-9.42,66.0,AL MASSIRA MC   ,,MA,METAR TAF
GMAG,,29.03,-10.05,333.0,GUELMIM         ,,MA,METAR TAF
GMAT,60285,28.43,-11.15,192.0,TAN-TAN (CIV/MIL,,MA,METAR
GMAZ,,30.32,-5.87,729.0,ZAGORA          ,,MA,METAR
GMFB,,32.52,-1.98,1106.0,BOUARFA         ,,MA,METAR
GMFF,60141,33.92,-4.97,575.0,FES-SAIS        ,,MA,METAR TAF
GMFI,60160,33.5,-5.17,1665.0,IFRANE AIRPORT  ,,MA,METAR
GMFK,,31.95,-4.4,1033.0,ER-RACHIDIA (RMA,,MA,METAR TAF
GMFM,60150,33.87,-5.52,569.0,MEKNES/BASSATINE,,MA,METAR TAF
GMFN,60340,35.13,-2.92,16.0,TAOUIMA/NADOR   ,,MA,METAR
GMFO,60115,34.78,-1.92,452.0,OUJDA/ANGADS    ,,MA,METAR TAF
GMFZ,60127,34.22,-4.0,510.0,TAZA            ,,MA,METAR
GMMB,,33.65,-7.22,191.0,BEN SLIMANE     ,,MA,METAR
GMMC,60155,33.57,-7.67,62.0,CASABLANCA/ANFA ,,MA,METAR
GMMD,,32.4,-6.32,515.0,BENI-MELLAL     ,,MA,METAR
GMME,60135,34.05,-6.77,84.0,RABAT/SALE (RMAF,,MA,METAR TAF
GMMF,60060,29.37,-10.17,66.0,SIDI IFNI       ,,MA,METAR
GMMH,,23.72,-15.93,11.0,DAKHLA AIRPORT  ,,MA,METAR TAF
GMMI,60220,31.4,-9.68,102.0,ESSAOUIRA       ,,MA,METAR TAF
GMML,,27.13,-13.23,63.0,LAAYOUNE/HASSAN ,,MA,METAR TAF
GMMN,60156,33.37,-7.58,196.0,NOUASSEUR/CASABL,,MA,METAR TAF
GMMP,60120,34.3,-6.6,4.0,KENITRA(RMAF)   ,,MA,METAR
GMMS,60185,32.27,-9.22,45.0,SAFI            ,,MA,METAR
GMMT,,33.6,-7.47,96.0,CASABLANCA T-M  ,,MA,METAR TAF
GMMW,,34.98,-3.02,174.0,ARWI            ,,MA,METAR TAF
GMMX,60230,31.62,-8.03,465.0,MARRAKECH/MENARA,,MA,METAR TAF
GMMY,,34.28,-6.58,14.0,KENITRA/TOURISME,,MA,METAR
GMMZ,60265,30.93,-6.9,1139.0,OUARZAZATE      ,,MA,METAR TAF
GMSL,60136,34.22,-6.03,52.0,SIDI SLIMANE    ,,MA,METAR
GMTA,60107,35.17,-3.85,14.0,AL HOCEIMA/COTE ,,MA,METAR TAF
GMTN,60318,35.58,-5.32,10.0,SANIA RAMEL/TETO,,MA,METAR
GMTT,60101,35.72,-5.9,19.0,TANGIER/BOUKHALF,,MA,METAR TAF
GOBD,,14.67,-17.07,90.0,DAKAR/DIAGNE    ,,SN,METAR TAF
GOGG,61695,12.55,-16.27,24.0,ZIGUINCHOR      ,,SN,METAR
GOGK,61698,12.9,-14.97,37.0,KOLDA           ,,SN,METAR
GOGS,61697,12.4,-16.75,13.0,CAPE SKIRING    ,,SN,METAR TAF
GOOD,61666,14.65,-16.22,9.0,DIOURBEL        ,,SN,METAR
GOOG,61627,15.4,-15.08,38.0,LINGUERE        ,,SN,METAR
GOOK,61679,14.15,-16.07,8.0,KAOLACK         ,,SN,METAR
GOOY,61641,14.73,-17.5,21.0,DAKAR/YOFF      ,,SN,METAR TAF
GOSM,61630,15.6,-13.33,28.0,MATAM/OURO SOGUI,,SN,METAR
GOSP,61612,16.68,-14.97,10.0,PODOR           ,,SN,METAR
GOSS,61600,16.05,-16.45,3.0,SAINT LOUIS     ,,SN,METAR TAF
GOTK,61699,12.57,-12.22,165.0,KEDOUGOU        ,,SN,METAR
GOTS,,13.05,-13.3,52.0,SIMENTI         ,,SN,METAR
GOTT,61687,13.73,-13.65,53.0,TAMBACOUNDA     ,,SN,METAR
GQNA,61499,16.68,-9.58,223.0,AIOUN EL ATROUSS,,MR,METAR
GQNB,61461,17.52,-14.67,75.0,BOUTILIMIT      ,,MR,METAR
GQND,61450,18.57,-11.42,402.0,TIDJIKJA        ,,MR,METAR
GQNF,61498,16.62,-11.4,115.0,KIFFA           ,,MR,METAR
GQNI,61497,16.6,-7.27,248.0,NEMA            ,,MR,METAR
GQNJ,61437,19.75,-14.37,120.0,AKJOUJT         ,,MR,METAR
GQNK,61492,16.13,-13.52,18.0,KAEDI           ,,MR,METAR
GQNN,61442,18.1,-15.93,9.0,NOUAKCHOTT      ,,MR,METAR TAF
GQNO,,18.3,-15.97,1.0,NOUAKCHOTT/OUMTO,,MR,METAR TAF
GQNR,61489,16.5,-15.82,6.0,ROSSO           ,,MR,METAR
GQPA,61421,20.52,-13.03,228.0,ATAR            ,,MR,METAR
GQPP,61415,20.92,-17.02,5.0,NOUADHIBOU      ,,MR,METAR TAF
GQPT,61401,25.22,-11.62,360.0,BIR MOGHREIN (MI,,MR,METAR
GQPZ,,22.75,-12.48,344.0,ZOUERAT         ,,MR,METAR
GSAI,60033,27.13,-13.18,63.0,EL AAIUN        ,,EH,METAR
GSVO,60096,23.68,-15.87,10.0,DAKHLA/VILLA    ,,EH,METAR
GUCY,61832,9.57,-13.62,10.0,CONAKRY/GBESSIA ,,GN,METAR TAF
GUFH,61833,10.02,-10.75,459.0,FARANAH/BADALA  ,,GN,METAR
GUID,61818,10.05,-12.87,459.0,KINDIA          ,,GN,METAR
GUKU,61834,9.17,-10.08,525.0,KISSIDOUGOU     ,,GN,METAR
GULB,61809,11.32,-12.3,1026.0,LABE/TATA       ,,GN,METAR
GUMA,61847,8.52,-9.47,544.0,MACENTA         ,,GN,METAR
GUNZ,61849,7.8,-8.7,500.0,N'ZEREKORE/KONIA,,GN,METAR
GUOK,61816,10.92,-14.32,69.0,BOKE/BARALANDE  ,,GN,METAR
GUSI,61811,11.42,-9.17,366.0,SIGUIRI         ,,GN,METAR
GUXD,61829,10.37,-9.3,384.0,KANKAN/DIANKANA ,,GN,METAR
GVAC,,16.73,-22.93,54.0,SAL ISL/AMILCAR ,,CV,METAR rawinsonde TAF
GVBA,,16.13,-22.88,23.0,RABIL AIRPORT   ,,CV,METAR TAF
GVFM,,14.92,-23.5,70.0,FRANCISCO MENDES,,CV,METAR
GVNP,,14.95,-23.48,70.0,PRAIA INTL      ,,CV,METAR TAF
GVSV,,16.83,-25.07,16.0,S. PEDRO        ,,CV,METAR TAF
HAAB,63450,8.97,38.78,2319.0,ADDIS ABABA/BOLE,,ET,METAR TAF
HAAG,,15.55,37.87,626.0,AGORDAT         ,,ET,METAR
HAAM,63500,6.07,37.67,1219.0,ARBA MINCH      ,,ET,METAR
HAAW,,8.97,40.17,1052.0,AWASH           ,,ET,METAR
HAAX,,14.12,38.72,2134.0,AXUM            ,,ET,METAR TAF
HAAY,63021,15.27,38.92,2325.0,ASMARA/YOHANNES ,,ET,METAR
HABC,,5.82,36.62,1311.0,BACO/BAKO       ,,ET,METAR
HABD,63332,11.6,37.32,1828.0,BAHAR DAR       ,,ET,METAR TAF
HADC,63333,11.07,39.72,1864.0,COMBOLCHA/DESSIE,,ET,METAR
HADM,63334,10.33,37.72,2476.0,DEBRE MARCOS    ,,ET,METAR
HADR,63471,9.6,41.87,1164.0,DIRE DAWA (MIL/C,,ET,METAR TAF
HAGH,,7.15,40.72,1844.0,GHINNIR/GINIR   ,,ET,METAR
HAGN,63331,12.52,37.42,1985.0,GONDAR          ,,ET,METAR TAF
HAGO,63478,5.93,43.57,320.0,GODE (MIL)      ,,ET,METAR
HAGR,63403,8.17,35.53,1974.0,GORE            ,,ET,METAR
HAHM,63451,8.72,39.0,1876.0,HARAR MEDA (MIL),,ET,METAR
HAJJ,63473,9.32,42.72,1644.0,JIJIGA (MIL)    ,,ET,METAR
HAJM,63402,7.67,36.82,1676.0,JIMMA           ,,ET,METAR
HAKD,,6.75,44.27,550.0,KABRE DARE (MIL),,ET,METAR
HALA,63460,7.07,38.5,1652.0,AWASSA (LAKE)   ,,ET,METAR TAF
HAMK,63330,13.47,39.53,2257.0,MAKALE/MEQELE   ,,ET,METAR TAF
HAML,,6.37,39.82,2274.0,MASSLO/MESLO    ,,ET,METAR
HAMS,63023,15.62,39.45,10.0,MASSAWA         ,,ET,METAR
HANG,63533,5.27,39.75,1455.0,NEGHELLI (MIL)  ,,ET,METAR
HASB,63043,13.07,42.72,14.0,ASSAB           ,,ET,METAR
HASO,,10.02,34.52,1733.0,ASSOSA/ASOSA    ,,ET,METAR
HATS,,15.12,36.67,615.0,TESSENEI/TESENEY,,ET,METAR
HBBA,64390,-3.32,29.32,777.0,BUJUMBURA       ,,BI,METAR TAF
HCMA,63200,11.93,50.72,2.0,ALULA           ,,SO,METAR
HCMD,63250,2.35,42.28,116.0,BARDERA         ,,SO,METAR
HCME,63228,7.95,49.77,36.0,EIL             ,,SO,METAR
HCMF,63210,11.27,49.13,8.0,BOSASO          ,,SO,METAR
HCMG,63225,9.52,49.07,812.0,GARDO           ,,SO,METAR
HCMH,63170,9.5,44.08,1325.0,HARGEISA        ,,SO,METAR
HCMI,63160,10.38,44.93,9.0,BERBERA (CIV/MIL,,SO,METAR
HCMJ,63248,3.57,42.45,150.0,LUG-GANANE      ,,SO,METAR
HCML,63237,4.7,46.62,175.0,EL BUR          ,,SO,METAR
HCMM,63260,2.02,45.3,6.0,MOGADISHU       ,,SO,METAR TAF
HCMN,63240,4.7,45.22,173.0,BELET UEN       ,,SO,METAR
HCMO,63235,5.32,48.57,10.0,OBBIA           ,,SO,METAR
HCMR,63230,6.83,47.27,302.0,GALCAYO         ,,SO,METAR
HCMS,63220,10.3,50.22,344.0,SCUSCIUBAN      ,,SO,METAR
HCMU,63180,10.62,47.37,1743.0,ERIGAVO         ,,SO,METAR
HCMV,63175,9.52,45.57,1039.0,BURAO           ,,SO,METAR
HDAM,,11.55,43.17,6.0,AMBOULI DJIBOUTI,,DJ,METAR TAF
HEAL,,30.92,28.47,44.0,EL ALAMEIN      ,,EG,METAR TAF
HEAM,,28.0,30.75,1.0,MENIA           ,,EG,METAR
HEAR,62337,31.07,33.83,36.0,EL ARISH        ,,EG,METAR TAF
HEAT,62393,27.05,31.02,229.0,ASYUT           ,,EG,METAR TAF
HEAX,62318,31.18,29.93,-2.0,ALEXANDRIA/NOUZH,,EG,METAR TAF
HEBA,,30.92,29.7,41.0,ALEXANDRIA BORG ,,EG,METAR TAF
HEBF,,29.22,31.02,33.0,BENI SUEF AFB   ,,EG,METAR
HEBL,62419,22.38,31.62,184.0,ABU SIMBEL (RUIN,,EG,METAR TAF
HECA,62366,30.12,31.4,68.0,CAIRO INTL AIRPO,,EG,METAR TAF
HECP,,30.07,31.83,240.0,CAIRO CAPITAL   ,,EG,METAR
HEGN,62463,27.18,33.8,14.0,HURGUADA        ,,EG,METAR TAF
HEGS,,30.82,30.18,15.0,JIYANKLIS AFB   ,,EG,METAR
HEIS,,30.58,32.25,14.0,ISMAILIA        ,,EG,METAR
HELX,62405,25.67,32.7,86.0,LUXOR (CIV/MIL) ,,EG,METAR TAF
HEMA,,25.55,34.58,77.0,MARSA ALAM INTL ,,EG,METAR TAF
HEMM,62306,31.32,27.22,26.0,MERSA MATRUH (MI,,EG,METAR TAF
HEOC,,29.82,30.82,246.0,OCTOBER         ,,EG,METAR
HEOW,62425,22.58,28.72,259.0,OWEINAT         ,,EG,METAR TAF
HEPS,62333,31.28,32.25,2.0,PORT SAID       ,,EG,METAR TAF
HESC,,28.68,34.07,1332.0,ST CATHERINE    ,,EG,METAR TAF
HESG,,26.33,31.75,70.0,SOHAG           ,,EG,METAR TAF
HESH,,27.97,34.38,50.0,SHARM EL SHEIKHI,,EG,METAR TAF
HESN,62414,23.97,32.82,197.0,ASWAN (CIV/MIL) ,,EG,METAR TAF
HESW,,29.35,25.5,101.0,SIWA OASIS      ,,EG,METAR
HETB,,29.58,34.78,738.0,TABA INTL       ,,EG,METAR TAF
HETR,62459,28.22,33.65,35.0,EL TOR          ,,EG,METAR TAF
HFFF,63125,11.55,43.13,19.0,DJIBOUTI/AMBOULI,,DJ,METAR
HHAS,,15.27,38.92,2356.0,ASMARA/YOHANNES ,,ET,METAR TAF
HKEL,63686,0.4,35.23,2116.0,ELDORET         ,,KE,METAR TAF
HKEM,63720,-0.57,37.48,1265.0,EMBU            ,,KE,METAR
HKGA,63723,-0.47,39.65,147.0,GARISSA         ,,KE,METAR
HKIS,,0.35,37.57,1615.0,ISIOLO          ,,KE,METAR
HKJK,63740,-1.32,36.92,1615.0,NAIROBI/JOMO KEN,,KE,METAR TAF
HKKG,63687,0.27,34.78,1537.0,KAKAMEGA        ,,KE,METAR
HKKI,63708,-0.1,34.75,1152.0,KISUMU          ,,KE,METAR TAF
HKKR,63710,-0.38,35.23,1966.0,KERICHO         ,,KE,METAR
HKKS,63709,-0.67,34.78,1768.0,KISII           ,,KE,METAR
HKKT,63661,0.97,34.97,1829.0,KITALE          ,,KE,METAR
HKLO,63612,3.12,35.62,503.0,LODWAR          ,,KE,METAR
HKLU,63772,-2.25,40.92,6.0,LAMU/MANDA ISLAN,,KE,METAR
HKMA,63624,3.92,41.83,218.0,MANDERA         ,,KE,METAR
HKMB,63641,2.33,37.98,1339.0,MARSABIT        ,,KE,METAR
HKME,63695,0.07,37.65,1609.0,MERU            ,,KE,METAR
HKMK,,0.23,38.17,680.0,MERU            ,,KE,METAR
HKML,63799,-3.22,40.1,20.0,MALINDI         ,,KE,METAR TAF
HKMO,63820,-4.02,39.62,55.0,MOMBASA/MOI INTL,,KE,METAR TAF
HKMS,,-1.4,35.0,1612.0,MARA SERENA     ,,KE,METAR
HKMU,63766,-2.28,37.82,1010.0,MAKINDU         ,,KE,METAR
HKMY,63619,3.47,39.1,776.0,MOYALE LOWER (OD,,KE,METAR
HKNA,,-1.32,36.92,1624.0,NAIROBI/JOMO KEN,,KE,METAR TAF
HKNC,63741,-1.3,36.75,1793.0,NAIROBI/DAGORETT,,KE,METAR
HKNI,63717,-0.33,36.92,1769.0,NYERI           ,,KE,METAR
HKNK,63714,-0.3,36.17,1900.0,NAKURU          ,,KE,METAR
HKNO,63737,-1.12,35.82,1875.0,NAROK           ,,KE,METAR
HKNW,63742,-1.32,36.82,1666.0,NAIROBI/WILSON  ,,KE,METAR TAF
HKNY,63694,-0.07,37.03,1904.0,NANYUKI         ,,KE,METAR
HKRE,,-1.28,36.87,1623.0,MOI AIRBASE     ,,KE,METAR
HKRO,45004,22.32,114.17,66.0,HONG KONG RO    ,,CN
HKVO,63793,-3.38,38.53,612.0,VOI             ,,KE,METAR
HKWJ,63671,1.75,40.08,254.0,WAJIR           ,,KE,METAR
HLGD,,31.07,16.6,81.0,SIRTE           ,,LY,TAF
HLGT,62212,25.12,10.12,692.0,GHAT            ,,LY,METAR TAF
HLKF,62271,24.22,23.3,435.0,KUFRA (MIL/CIV) ,,LY,METAR TAF
HLLB,62053,32.08,20.27,122.0,BENINA/BENGHAZI ,,LY,METAR TAF
HLLM,,32.9,13.28,8.0,MITIGA          ,,LY,METAR TAF
HLLQ,,32.78,21.97,657.0,EL BEIDA        ,,LY,TAF
HLLS,62124,26.98,14.47,431.0,SEBHA (AUT)     ,,LY,METAR TAF
HLLT,62010,32.67,13.15,79.0,TRIPOLI INTL ARP,,LY,METAR TAF
HLMS,,32.32,15.07,7.0,MISRATA         ,,LY,TAF
HLON,,29.12,15.97,280.0,HON             ,,LY,TAF
HLTD,62103,30.12,9.5,357.0,GHADAMES        ,,LY,METAR TAF
HLTQ,,31.87,23.9,189.0,TOBRUK          ,,LY,TAF
HLUB,62200,26.57,12.83,468.0,UBARI           ,,LY,TAF
HRYG,64381,-1.67,29.25,1554.0,GISENYI         ,,RW,METAR
HRYI,64384,-2.6,29.72,1768.0,BUTARE          ,,RW,METAR
HRYR,64387,-1.97,30.13,1493.0,KIGALI          ,,RW,METAR TAF
HRYU,64383,-1.5,29.62,1860.0,RUHENGERI       ,,RW,METAR
HRZA,64380,-2.47,28.92,1591.0,KAMEMBE         ,,RW,METAR TAF
HSAK,,7.77,33.02,402.0,AKOBO           ,,SD,METAR TAF
HSAT,62680,17.68,33.97,345.0,ATBARA          ,,SD,METAR
HSAW,,8.77,27.38,414.0,AWEIL/UWAYL     ,,SD,METAR TAF
HSBR,,6.2,31.55,420.0,BOR             ,,SD,METAR TAF
HSDN,62650,19.17,30.42,235.0,DONGOLA/DUNQULAH,,SD,METAR
HSDZ,62805,11.77,34.37,470.0,DAMAZIN         ,,SD,METAR
HSFS,62760,13.62,25.32,734.0,EL FASHER       ,,SD,METAR
HSGF,62752,14.02,35.38,599.0,GEDAREF/AZAZA   ,,SD,METAR
HSGN,62770,13.47,22.43,805.0,GENEINA         ,,SD,METAR
HSKA,62730,15.47,36.38,500.0,KASSALA         ,,SD,METAR TAF
HSKI,62772,13.17,32.67,381.0,KOSTI/RABAK     ,,SD,METAR
HSLI,62810,11.0,29.72,499.0,KADUGLI         ,,SD,METAR
HSMD,,4.92,29.47,749.0,MARIDI          ,,SD,METAR
HSMK,,6.78,29.68,418.0,RUMBEK          ,,SD,METAR TAF
HSNA,,8.62,33.07,399.0,NASIR           ,,SD,METAR
HSND,62700,16.68,33.42,360.0,SHENDI          ,,SD,METAR
HSNL,62790,12.05,24.82,643.0,NYALA           ,,SD,METAR
HSNN,,12.05,24.97,640.0,NYALA           ,,SD,METAR
HSNR,62762,13.55,33.62,418.0,SENNAR          ,,SD,METAR
HSOB,62771,13.17,30.22,574.0,EL OBEID        ,,SD,METAR TAF
HSPI,62905,6.78,33.12,510.0,PIBOR POST      ,,SD,METAR TAF
HSPN,,19.43,37.23,43.0,PORT SUDAN INTL ,,SD,METAR TAF
HSRJ,62871,8.47,25.67,545.0,RAGA            ,,SD,METAR
HSRN,62801,11.75,32.77,282.0,RENK            ,,SS,METAR
HSSJ,62941,4.87,31.6,461.0,JUBA            ,,SS,METAR TAF
HSSK,62721,15.58,32.55,380.0,KHARTOUM        ,,SD,METAR TAF
HSSM,62840,9.55,31.63,388.0,MALAKAL         ,,SS,METAR TAF
HSSP,62641,19.57,37.22,2.0,PORT SUDAN      ,,SD,METAR
HSSS,,15.58,32.55,387.0,KHARTOUM (CIV/MI,,SD,METAR TAF
HSSW,62600,21.82,31.47,183.0,HALFA (WADI)    ,,SD,METAR
HSTR,,4.42,32.57,624.0,TORIT           ,,SD,METAR
HSYA,62940,4.57,28.38,649.0,YAMBIO          ,,SD,METAR TAF
HSZA,,12.9,23.47,900.0,ZALINGEI        ,,SD,METAR
HTAR,63789,-3.37,36.63,1386.0,ARUSHA          ,,TZ,METAR TAF
HTBU,63729,-1.32,31.82,1144.0,BUKOBA          ,,TZ,METAR
HTDA,63894,-6.88,39.2,53.0,DAR ES SALAAM AR,,TZ,METAR TAF
HTDO,63862,-6.17,35.77,1119.0,DODOMA          ,,TZ,METAR TAF
HTGW,,-8.92,33.27,1345.0,SONGWE          ,,TZ,METAR
HTIR,63887,-7.67,35.75,1432.0,IRINGA          ,,TZ,METAR
HTKA,63801,-4.88,29.67,819.0,KIGOMA          ,,TZ,METAR TAF
HTKI,,-8.92,39.52,18.0,KILWA MASOKO    ,,TZ,METAR
HTKJ,63791,-3.42,37.07,893.0,KILIMANJARO AIRP,,TZ,METAR TAF
HTMB,63932,-8.92,33.47,1735.0,MBEYA           ,,TZ,METAR
HTMG,63866,-6.78,37.65,512.0,MOROGORO (MET)  ,,TZ,METAR
HTMO,63818,-4.87,38.27,511.0,MOMBO           ,,TZ,METAR
HTMP,,-6.35,31.08,1073.0,MPANDA          ,,TZ,METAR
HTMS,63790,-3.35,37.32,831.0,MOSHI           ,,TZ,METAR
HTMT,63971,-10.33,40.18,114.0,MTWARA          ,,TZ,METAR TAF
HTMU,63733,-1.5,33.8,1154.0,MUSOMA          ,,TZ,METAR
HTMW,63756,-2.43,32.92,1144.0,MWANZA          ,,TZ,METAR TAF
HTNA,63969,-10.33,38.75,465.0,NACHINGWEA      ,,TZ,METAR
HTPE,63845,-5.25,39.82,25.0,PEMBA/KARUME ARP,,TZ,METAR TAF
HTSE,63816,-4.07,37.72,872.0,SAME            ,,TZ,METAR
HTSO,63962,-10.67,35.58,1058.0,SONGEA          ,,TZ,METAR TAF
HTSU,63881,-7.95,31.6,1820.0,SUMBAWANGA      ,,TZ,METAR
HTSY,63900,-3.6,33.5,1175.0,SHINYANGA       ,,TZ,METAR TAF
HTTB,63832,-5.07,32.82,1185.0,TABORA AIRPORT  ,,TZ,METAR TAF
HTTG,63844,-5.08,39.07,38.0,TANGA           ,,TZ,METAR
HTZA,63870,-6.22,39.22,19.0,ZANZIBAR/KISAUNI,,TZ,METAR TAF
HUAR,63602,3.03,30.92,1211.0,ARUA            ,,UG,METAR
HUEN,63705,0.03,32.45,1147.0,ENTEBBE INTL ARP,,UG,METAR TAF
HUFP,,0.67,30.27,1533.0,FORT PORTAL     ,,UG,METAR
HUGU,63630,2.75,32.32,1105.0,GULU (MIL/CIV)  ,,UG,METAR
HUJI,63682,0.45,33.18,1178.0,JINJA           ,,UG,METAR
HUKB,63726,-1.25,29.97,1869.0,KABALE          ,,UG,METAR
HUKS,63674,0.17,30.1,962.0,KASESE          ,,UG,METAR
HULI,,2.25,32.9,1091.0,LIRA            ,,UG,METAR
HUMA,63702,-0.55,30.6,1413.0,MBARARA         ,,UG,METAR
HUMI,63654,1.75,31.73,1151.0,MASINDI         ,,UG,METAR
HUMO,,2.52,34.63,1280.0,MOROTO          ,,UG,METAR
HUSO,63658,1.72,33.62,1126.0,SOROTI          ,,UG,METAR TAF
HUTO,63684,0.67,34.17,1171.0,TORORO          ,,UG,METAR
K00U,,45.75,-107.67,922.0,HARDIN          ,MT,US,METAR
K01M,,34.5,-88.2,175.0,BELMONT         ,MS,US,METAR
K04V,,38.1,-106.17,2389.0,SAGUACHE MUNI   ,CO,US,METAR
K04W,,46.02,-92.9,310.0,HINCKLEY        ,MN,US,METAR
K05U,,39.6,-116.0,1813.0,EUREKA          ,NV,US,METAR
K06C,,41.98,-88.1,243.0,SCHAUMBURG      ,IL,US,METAR
K06D,,48.88,-99.62,554.0,ROLLA           ,ND,US,METAR
K08D,,48.3,-102.4,683.0,STANLEY         ,ND,US,METAR
K0A0,,32.98,-106.97,1401.0,SPACEPORT AMERIC,NM,US,METAR
K0A8,72229,32.93,-87.08,77.0,CENTREVILLE WSM ,AL,US,METAR
K0A9,,36.37,-82.17,479.0,ELIZABETHTON    ,TN,US,METAR
K0CO,,39.8,-105.77,3804.0,BERTHOUD PASS   ,CO,US,METAR
K0D8,,44.98,-99.95,629.0,GETTYSBURG      ,SD,US,METAR
K0E0,,34.98,-106.0,1887.0,MORIARTY        ,NM,US,METAR
K0F2,,33.6,-97.78,330.0,BOWIE           ,TX,US,METAR
K0J4,,31.05,-86.32,96.0,FLORALA MUNI    ,AL,US,METAR
K0J6,,31.37,-85.32,109.0,HEADLAND        ,AL,US,METAR
K0R0,,31.3,-89.82,76.0,COLUMBIA/MARION ,MS,US,METAR
K0R4,,31.57,-91.5,16.0,VIDALIA/CONCORDI,LA,US,METAR
K0S9,,48.05,-122.82,33.0,PORT TOWNSEND   ,WA,US,METAR
K0V4,,37.15,-79.02,186.0,BROOKNEAL       ,VA,US,METAR
K0VG,,36.65,-83.22,426.0,JONESVILLE      ,VA,US,METAR
K10G,,40.53,-81.95,371.0,MILLERSBURG     ,OH,US,METAR
K11R,,30.22,-96.37,87.0,BRENHAM         ,TX,US,METAR
K12N,,41.02,-74.73,178.0,ANDOVER         ,NJ,US,METAR
K13K,,37.85,-96.3,367.0,EUREKA          ,KS,US,METAR
K14Y,,45.9,-94.87,404.0,LONG PRAIRIE    ,MN,US,METAR
K15M,,34.77,-88.17,192.0,IUKA            ,MS,US,METAR
K17J,,31.0,-84.87,42.0,DONALDSON       ,GA,US,METAR
K17N,,39.7,-75.03,49.0,CROSS KEYS      ,NJ,US,METAR
K18A,,34.35,-83.13,260.0,CANON           ,GA,US,METAR
K18H,,26.13,-92.03,30.0,KEATHLEY C 875  ,LA,US,METAR
K19A,,34.18,-83.57,290.0,JEFFERSON       ,GA,US,METAR
K19S,,37.48,-100.83,886.0,SUBLETTE        ,KS,US,METAR
K1A5,,35.22,-83.42,611.0,MACON/FRANKLIN  ,NC,US,METAR
K1A6,,36.62,-83.73,348.0,MIDDLESBORO-BELL,KY,US,METAR
K1A9,,32.43,-86.52,65.0,PRATTVILLE      ,AL,US,METAR
K1AM,,47.28,-110.8,1228.0,ALPHA           ,MT,US,METAR
K1AW,,41.33,-104.27,1670.0,ALPHA           ,WY,US,METAR
K1B1,,42.28,-73.72,60.0,HUDSON/COLUMBIA ,NY,US,METAR
K1B7,,29.35,-89.43,1.0,VENICE HELIPORT ,LA,US,METAR
K1BM,,47.28,-110.37,1234.0,BRAVO           ,MT,US,METAR
K1BW,,41.52,-104.0,1606.0,BRAVO MADIS     ,NE,US,METAR
K1CM,,47.1,-110.17,1338.0,CHARLIE         ,MT,US,METAR
K1CW,,41.58,-103.57,1370.0,CHARLIE MADIS   ,NE,US,METAR
K1D1,,45.23,-96.57,340.0,MILLBANK        ,SD,US,METAR
K1D3,,43.4,-98.83,493.0,PLATTE          ,SD,US,METAR
K1D7,,45.3,-97.52,566.0,WEBSTER         ,SD,US,METAR
K1DM,,47.37,-109.8,1093.0,DELTA           ,MT,US,METAR
K1DW,,41.37,-103.8,1539.0,DELTA MADIS     ,NE,US,METAR
K1EM,,47.45,-109.42,1118.0,ECHO            ,MT,US,METAR
K1EW,,41.12,-103.98,1609.0,ECHO MADIS      ,NE,US,METAR
K1F0,,34.15,-97.12,256.0,ARDMORE/EXEC    ,OK,US,METAR
K1FM,,47.6,-112.32,1344.0,FOXTROT         ,MT,US,METAR
K1FW,,41.37,-103.48,1451.0,FOXTROT MADIS   ,NE,US,METAR
K1GM,,47.33,-112.1,1317.0,GOLF            ,MT,US,METAR
K1GW,,41.22,-103.1,1335.0,GOLF MADIS      ,NE,US,METAR
K1H2,,39.07,-88.53,174.0,EFFINGHAM       ,IL,US,METAR
K1HM,,47.7,-111.95,1181.0,HOTEL           ,MT,US,METAR
K1HW,,41.32,-102.83,1265.0,HOTEL MADIS     ,NE,US,METAR
K1II,,39.33,-86.03,214.0,HIMSEL AAF      ,IN,US,METAR
K1IM,,47.32,-111.47,1110.0,INDIA           ,MT,US,METAR
K1IW,,41.05,-102.87,1294.0,INDIA MADIS     ,NE,US,METAR
K1J0,,30.85,-85.6,26.0,BONIFAY TRI-CTY ,FL,US,METAR
K1JM,,47.75,-111.55,1154.0,JULIE           ,MT,US,METAR
K1JW,,40.97,-103.2,1382.0,JULIET MADIS    ,CO,US,METAR
K1K1,,37.77,-97.12,411.0,BENTON          ,KS,US,METAR
K1KM,,46.45,-109.8,1332.0,KILO            ,MT,US,METAR
K1KW,,41.13,-103.48,1443.0,KILO MADIS      ,NE,US,METAR
K1L0,,30.08,-90.58,2.0,RESERVE         ,LA,US,METAR
K1LM,,46.7,-109.73,1417.0,LIMA            ,MT,US,METAR
K1LW,,40.92,-103.7,1514.0,LIMA MADIS      ,CO,US,METAR
K1M4,,34.28,-87.6,283.0,HALEYVILLE      ,AL,US,METAR
K1M5,,36.6,-86.48,239.0,PORTLAND        ,TN,US,METAR
K1MM,,47.02,-109.63,1256.0,MIKE            ,MT,US,METAR
K1MW,,40.7,-103.48,1338.0,MIKE MADIS      ,CO,US,METAR
K1N7,,40.97,-75.0,113.0,BLAIRSTOWN      ,NJ,US,METAR
K1NM,,47.07,-109.03,1169.0,NOVEMBER        ,MT,US,METAR
K1NW,,40.63,-103.83,1461.0,NOVEMBER MADIS  ,CO,US,METAR
K1OM,,47.33,-108.93,1088.0,OSCAR           ,MT,US,METAR
K1OW,,40.88,-104.0,1650.0,OSCAR MADIS     ,CO,US,METAR
K1P1,,43.78,-71.75,155.0,PLYMOUTH        ,NH,US,METAR
K1QW,,46.8,-120.17,895.0,YAKIMA TRAINING ,WA,US,METAR
K1R7,,31.6,-90.42,142.0,BROOKHAVEN      ,MS,US,METAR
K1R8,,30.87,-87.82,76.0,BAY MINETTE     ,AL,US,METAR
K1S3,,46.27,-106.62,831.0,FORSYTH         ,MT,US,METAR
K1S5,,46.33,-119.97,228.0,SUNNYSIDE       ,WA,US,METAR
K1U7,,42.25,-111.33,1808.0,PARIS           ,ID,US,METAR
K1V4,72614,44.42,-72.02,213.0,ST. JOHNSBURY   ,VT,US,METAR
K1V6,,38.43,-105.1,1658.0,CANON CITY      ,CO,US,METAR
K1Y7,74004,32.5,-114.4,231.0,YUMA PRVG GROUN ,AZ,US
K1YT,,46.67,-120.45,423.0,YAGABOND AAF    ,WA,US,METAR
K20U,,46.93,-103.98,839.0,BEACH           ,ND,US,METAR
K20V,,40.05,-106.37,2259.0,KREMMLING AWOS  ,CO,US,METAR
K21D,,45.0,-92.85,281.0,LAKE ELMO       ,MN,US,METAR
K22N,,40.8,-75.77,159.0,LEHIGHTON       ,PA,US,METAR
K24A,,35.32,-83.2,864.0,SYLVA           ,NC,US,METAR
K24J,,30.3,-83.03,30.0,LIVE OAK/SUWANNE,FL,US,METAR
K25T,,26.93,-94.68,10.0,PHILLIPS OIL    ,TX,US,METAR
K26N,,39.27,-74.6,2.0,OCEAN CITY      ,NJ,US,METAR
K27A,,34.1,-82.82,184.0,ELBERTON PATZ F ,GA,US,METAR
K27D,,44.73,-96.27,363.0,CANBY/MYERS FLD ,MN,US,METAR
K27K,,38.23,-84.43,283.0,GEORGETOWN      ,KY,US,METAR
K28J,,29.65,-81.68,9.0,PALATKA MUNI    ,FL,US,METAR
K28K,,27.88,-91.5,1.0,GREEN CANYON 52 ,LA,US,METAR
K29D,,41.15,-81.17,418.0,GROVE CITY      ,PA,US,METAR
K2A0,,35.48,-84.93,219.0,DAYTON          ,TN,US,METAR
K2C2,74734,32.37,-106.47,1244.0,WHITE SANDS TEST,NM,US,METAR
K2C8,,48.78,-97.63,271.0,CAVALIER        ,ND,US,METAR
K2D5,,46.17,-98.08,407.0,OAKES           ,ND,US,METAR
K2DP,,35.68,-75.9,1.0,STUMPY POINT    ,NC,US,METAR
K2F5,,32.75,-101.92,912.0,LAMESA          ,TX,US,METAR
K2G2,,40.37,-80.7,365.0,STEUBENVILLE    ,OH,US,METAR
K2G4,,39.58,-79.33,908.0,GARRETT CO      ,MD,US,METAR
K2G9,,40.03,-79.02,677.0,SOMERSET        ,PA,US,METAR
K2GL,,29.42,-90.3,3.0,GALLIANO HELIPRT,LA,US,METAR
K2I0,,37.35,-87.4,127.0,MADISONVILLE    ,KY,US,METAR
K2IS,,26.73,-81.05,5.0,CLEWISTOWN      ,FL,US,METAR
K2J3,,32.98,-82.38,97.0,LOUISVILLE      ,GA,US,METAR
K2J5,,32.9,-81.97,72.0,MILLEN          ,GA,US,METAR
K2J9,,30.6,-84.55,62.0,QUINCY          ,FL,US,METAR
K2K3,,37.58,-101.73,1013.0,JOHNSON         ,KS,US,METAR
K2LS,,29.42,-90.3,0.0,GALLIANO HELIPRT,LA,US,METAR
K2M2,,35.23,-87.25,286.0,LAWRENCEBURG    ,TN,US,METAR
K2M8,,35.28,-89.93,75.0,MILLINGTON      ,TN,US,METAR
K2P2,,45.38,-86.92,182.0,WASHINGTON ISLAN,WI,US,METAR
K2R9,,28.82,-97.87,88.0,KENEDY          ,TX,US,METAR
K2SL,,44.12,-124.13,121.0,SEA LION CAVES  ,OR,US,METAR
K2V5,,40.1,-102.25,1117.0,WRAY            ,CO,US,METAR
K2V6,,40.1,-102.72,1257.0,YUMA            ,CO,US,METAR
K2W6,,38.32,-76.55,40.0,ST MARYS (DUKE) ,MD,US,METAR
K2WX,,45.6,-103.55,925.0,BUFFALO         ,SD,US,METAR
K33N,,39.22,-75.6,17.0,DOVER/CHESWOLD  ,DE,US,METAR
K33V,,40.75,-106.28,2486.0,WALDEN          ,CO,US,METAR
K35A,,34.68,-81.63,186.0,UNION           ,SC,US,METAR
K36K,,37.97,-101.25,938.0,LAKIN           ,KS,US,METAR
K36U,,40.48,-111.43,1718.0,HEBER/RUSS MCDON,UT,US,METAR TAF
K38S,,46.38,-112.77,1430.0,DEER LODGE      ,MT,US,METAR
K39N,,40.4,-74.67,39.0,PRINCETON       ,NJ,US,METAR
K3A1,,34.27,-86.85,294.0,CULLMAN/FOLSOM F,AL,US,METAR
K3A6,,34.37,-118.57,427.0,NEWHALL         ,CA,US,METAR
K3AU,,37.67,-97.08,403.0,AUGUSTA         ,KS,US,METAR
K3B6,,28.23,-91.68,1.0,EUGENE IS 330   ,LA,US,METAR
K3CL,,46.23,-124.02,9.0,CLATSOP SPIT    ,OR,US,METAR
K3D2,,45.13,-87.18,233.0,EPHRAIM         ,WI,US,METAR
K3DU,,46.67,-113.15,1202.0,DRUMMOND        ,MT,US,METAR
K3F3,,32.07,-93.77,96.0,MANFIELD        ,LA,US,METAR
K3FU,,45.03,-99.12,478.0,FAULKTON        ,SD,US,METAR
K3HT,,46.42,-109.82,1268.0,HARLOWTON       ,MT,US,METAR
K3I2,,38.92,-82.1,195.0,PT PLEASANT     ,WV,US,METAR
K3J7,,33.6,-83.13,207.0,GREENSBORO      ,GA,US,METAR
K3K3,,38.0,-101.75,1010.0,SYRACUSE        ,KS,US,METAR
K3K7,,38.45,-101.35,1007.0,LEOTI/HOARD MEML,KS,US,METAR
K3K8,,37.22,-99.33,640.0,COLDWATER       ,KS,US,METAR
K3L4,,29.8,-92.8,1.0,GRAND CHENIER   ,LA,US,METAR
K3LF,,39.17,-89.67,207.0,LITCHFIELD MUNI ,IL,US,METAR
K3M3,,35.05,-85.02,262.0,COLLEGEDALE     ,TN,US,METAR
K3MW,,40.45,-106.75,3241.0,MT WERNER SBS   ,CO,US,METAR
K3N6,,40.33,-74.35,27.0,OLD BRIDGE      ,NJ,US,METAR
K3N8,,47.25,-95.92,379.0,MAHNOMEN        ,MN,US,METAR
K3R7,,30.25,-92.67,5.0,JENNINGS        ,LA,US,METAR
K3S8,,42.5,-123.4,339.0,GRANTS PASS     ,OR,US,METAR
K3T5,,29.9,-96.95,96.0,LA GRANGE       ,TX,US,METAR
K3TH,,47.6,-115.37,725.0,THOMPSON FALLS  ,MT,US,METAR
K3U3,,46.15,-112.87,1534.0,ANACONDA        ,MT,US,METAR
K40B,,46.62,-69.52,344.0,CLAYTON LAKE    ,ME,US,METAR
K40G,,35.63,-112.15,1830.0,GRAND CANYON/VAL,AZ,US,METAR
K40J,,30.07,-83.57,12.0,PERRY FOLEY     ,FL,US,METAR
K40U,,40.98,-109.68,1882.0,MANILA          ,UT,US,METAR
K41U,,39.33,-111.6,1676.0,MANTI-EPHRAIM   ,UT,US,METAR
K42J,,29.85,-82.05,57.0,KEYSTONE HEIGHTS,FL,US,METAR
K42V,,40.05,-101.53,953.0,BENKELMAN-JONES ,NE,US,METAR
K46D,,47.45,-99.15,488.0,CARRINGTON      ,ND,US,METAR
K46U,,43.18,-111.05,1718.0,ALPINE          ,WY,US,METAR
K47N,,40.52,-74.6,26.0,MANVILLE        ,NJ,US,METAR
K48A,,32.4,-83.27,115.0,COCHRAN         ,GA,US,METAR
K48I,,38.68,-80.65,397.0,SUTTON/BRAXTON  ,WV,US,METAR
K49A,,34.63,-84.53,449.0,GILMORE COUNTY  ,GA,US,METAR
K49B,,44.42,-103.38,989.0,STURGIS         ,SD,US,METAR
K4A6,,34.68,-86.0,191.0,SCOTTSBORO      ,AL,US,METAR
K4A7,,33.38,-84.33,266.0,HAMPTON/CLAY CNT,GA,US,METAR
K4A9,,34.47,-85.72,273.0,FT PAYNE/ISBELL ,AL,US,METAR
K4BL,72472,37.62,-109.47,1840.0,BLANDING        ,UT,US,METAR
K4BM,,39.05,-105.52,3432.0,WILKERSON PASS  ,CO,US,METAR
K4C0,,29.78,-93.18,1.0,PHI OIL PLATF   ,LA,US,METAR
K4CR,,34.1,-105.67,1981.0,CORONA/LINCOLN  ,NM,US,METAR
K4F2,,32.18,-94.3,76.0,CARTHAGE        ,TX,US,METAR
K4G6,,42.38,-77.68,372.0,HORNELL         ,NY,US,METAR
K4HV,72473,38.37,-110.72,1314.0,HANKSVILLE      ,UT,US,METAR
K4I3,,40.33,-82.53,361.0,MT VERNON/KNOX  ,OH,US,METAR
K4I7,,39.63,-86.82,257.0,GREENCASTLE     ,IN,US,METAR
K4M9,,36.4,-90.65,86.0,CORNING         ,AR,US,METAR
K4MR,74638,34.3,-103.8,1339.0,MELROSE G RANGE ,NM,US,METAR
K4MY,,34.98,-106.0,1890.0,MORIARTY        ,NM,US,METAR
K4N1,,41.13,-74.35,241.0,WEST MILFORD    ,NJ,US,METAR
K4O4,,33.92,-94.87,148.0,IDABEL          ,OK,US,METAR
K4R5,,46.78,-90.77,195.0,LA POINTE       ,WI,US,METAR
K4S1,,42.42,-124.42,7.0,GOLD BEACH      ,OR,US,METAR
K4S2,,45.68,-121.55,183.0,HOOD RIVER      ,OR,US,METAR
K4SL,,35.78,-107.17,2106.0,TORREON/CUBA    ,NM,US,METAR
K4U6,,47.42,-105.57,739.0,CIRCLE          ,MT,US,METAR
K4V0,,40.1,-108.77,1602.0,RANGELY         ,CO,US,METAR
K4V1,,37.7,-104.78,1847.0,WALSENBURG      ,CO,US,METAR
K4X4,,44.07,-98.53,471.0,WESSINGTON SPRIN,SD,US,METAR
K54A,,26.85,-82.25,2.0,PLACIDA         ,FL,US,METAR
K54J,,30.73,-86.15,87.0,DE FUNIAK SPRNGS,FL,US,METAR
K57C,,42.8,-88.37,454.0,EAST TROY       ,WI,US,METAR
K5A6,,33.47,-89.73,109.0,WINONA          ,MS,US,METAR
K5B2,,43.05,-73.87,132.0,SARATOGA SPRINGS,NY,US,METAR
K5C1,,29.72,-98.7,422.0,S ANTONIO-BOERNE,TX,US,METAR
K5H4,,47.78,-99.93,490.0,HARVEY          ,ND,US,METAR
K5LA,,29.28,-89.37,0.0,MARATHON-VENICE ,LA,US,METAR
K5M9,,37.33,-88.12,199.0,MARION          ,KY,US,METAR
K5R8,,30.43,-93.47,26.0,DEQUINCEY IND AR,LA,US,METAR
K5SM,,39.43,-107.38,3229.0,SUNLIGHT        ,CO,US,METAR
K5T6,,31.88,-106.7,1253.0,SANTA TERESA    ,NM,US,METAR
K5T9,,28.85,-100.52,269.0,MAVERICK CNTY   ,TX,US,METAR
K5W8,,35.7,-79.5,188.0,SILER CITY      ,NC,US,METAR
K63S,,48.53,-117.88,571.0,COLVILLE        ,WA,US,METAR
K65S,,48.73,-116.3,708.0,BONNERS FERRY   ,ID,US,METAR
K66R,,29.65,-96.52,70.0,COLUMBUS        ,TX,US,METAR
K6A1,,32.57,-84.25,198.0,BUTLER          ,GA,US,METAR
K6A2,,33.23,-84.27,290.0,GRIFFIN-SPALDING,GA,US,METAR
K6B0,,43.98,-73.1,149.0,MIDDLEBURY      ,VT,US,METAR
K6B9,,42.92,-76.43,306.0,SKANEATELES     ,NY,US,METAR
K6E5,,44.43,-97.55,527.0,DESMET          ,SD,US,METAR
K6I2,,37.63,-85.25,258.0,LEBANON-SPRINGFI,KY,US,METAR
K6K5,,44.3,-121.53,966.0,SISTERS EAGLEAIR,OR,US
K6L4,,37.85,-81.92,504.0,LOGAN CNTY      ,WV,US,METAR
K6P9,,32.43,-98.6,451.0,RANGER          ,TX,US,METAR
K6R3,,30.35,-95.0,44.0,CLEVELAND MUNI  ,TX,US,METAR
K6R6,,30.05,-102.22,702.0,DRYDEN          ,TX,US,METAR
K6S0,,45.8,-109.97,1364.0,BIG TIMBER      ,MT,US,METAR
K6S2,,43.98,-124.12,16.0,FLORENCE MUNI   ,OR,US,METAR
K6S5,,46.25,-114.13,1112.0,HAMILTON/RAVALLI,MT,US,METAR
K6S8,,45.7,-108.77,1072.0,LAUREL          ,MT,US,METAR
K6V4,,44.0,-102.25,857.0,WALL            ,SD,US,METAR
K6V5,,45.52,-102.47,851.0,BISON           ,SD,US,METAR
K72C,,39.6,-102.57,1280.0,KIRK            ,CO,US,METAR
K74V,,40.28,-110.05,1567.0,ROOSEVELT       ,UT,US,METAR
K77M,,42.32,-113.32,1375.0,MALTA (AWRS)    ,ID,US,METAR
K77S,,43.93,-123.0,161.0,CRESWELL        ,OR,US,METAR
K79J,,31.32,-86.4,93.0,ANDALUSIA/OPP AR,AL,US,METAR
K79S,,47.85,-110.63,874.0,FORT BENTON     ,MT,US,METAR
K7BM,,38.78,-106.22,2996.0,BALD MOUNTAIN   ,CO,US,METAR
K7L2,,46.22,-100.25,541.0,LINTON          ,ND,US,METAR
K7N0,,29.95,-90.07,0.0,NEW ORLEANS/SUPE,LA,US,METAR
K7R3,,29.68,-91.08,2.0,AMELIA/LAKE PALO,LA,US,METAR
K7R4,,29.77,-92.12,5.0,INTRACOASTAL CIT,LA,US,METAR
K7R5,,29.77,-93.28,1.0,CAMERON HELIPORT,LA,US,METAR
K7R8,,28.3,-91.97,1.0,S MARSH ISLAND  ,LA,US,METAR
K7S0,,47.57,-114.1,941.0,RONAN           ,MT,US,METAR
K7S1,,45.53,-112.3,1456.0,TWIN BRIDGES    ,MT,US,METAR
K7S6,,46.5,-110.92,1543.0,WHITE SULPHUR SP,MT,US,METAR
K7W4,,37.97,-77.75,115.0,BUMPASS         ,VA,US,METAR
K7W6,,35.55,-75.95,1.0,ENGELHARD/HYDE  ,NC,US,METAR
K81R,,31.23,-98.72,381.0,SAN SABA        ,TX,US,METAR
K82C,,43.83,-90.13,273.0,MAUSTON         ,WI,US,METAR
K82V,,41.15,-104.13,1563.0,PINE BLUFFS MUNI,WY,US,METAR
K84D,,44.98,-101.25,746.0,EAGLE BUTTE     ,SD,US,METAR
K87Q,72390,35.67,-121.28,21.0,PT. PIEDRAS BLAN,CA,US,METAR
K88M,,48.97,-115.08,814.0,EUREKA          ,MT,US,METAR
K8A0,,34.23,-86.25,313.0,ALBERTVILLE MUNI,AL,US,METAR
K8A3,,36.42,-85.32,413.0,LIVINGSTON      ,TN,US,METAR
K8B0,,44.98,-70.65,552.0,RANGELEY        ,ME,US,METAR
K8D3,,45.67,-96.98,535.0,SISSETON        ,SD,US,METAR
K8D7,,44.9,-97.72,547.0,CLARK           ,SD,US,METAR
K8K2,,37.28,-98.05,445.0,HARPER          ,KS,US,METAR
K8S0,,48.6,-113.12,1419.0,BROWNING        ,MT,US,METAR
K8T6,,28.37,-98.12,39.0,GEORGE WEST     ,TX,US,METAR
K8V3,,43.38,-97.98,432.0,PARKSTON        ,SD,US,METAR
K8W2,,38.65,-78.7,295.0,NEW MARKET      ,VA,US,METAR
K92S,72599,42.83,-124.57,57.0,CAPE BLANCO (CGS,OR,US,METAR
K96D,,48.93,-97.9,290.0,WALHALLA        ,ND,US,METAR
K97M,,45.88,-104.53,1068.0,EKALAKA         ,MT,US,METAR
K98D,,44.7,-100.1,571.0,ONIDA           ,SD,US,METAR
K9A1,,33.63,-83.85,242.0,COVINGTON       ,GA,US,METAR
K9A4,,34.67,-87.35,176.0,COURTLAND       ,AL,US,METAR
K9A5,,34.68,-85.28,234.0,LAFAYETTE       ,GA,US,METAR
K9BB,,41.1,-114.97,1723.0,WELLS           ,NV,US,METAR
K9D1,,43.22,-99.4,663.0,GREGORY         ,SD,US,METAR
K9D7,,48.48,-99.23,451.0,CANDO           ,ND,US,METAR
K9F2,,29.1,-90.2,2.0,FOURCHON (SAWRS),LA,US,METAR
K9K7,,38.75,-98.23,492.0,ELLSWORTH       ,KS,US,METAR
K9K8,,37.67,-98.12,490.0,KINGMAN         ,KS,US,METAR
K9L2,,34.98,-117.87,697.0,EDWARDS N-AUX   ,CA,US,METAR
K9MN,,44.02,-92.48,308.0,ST MARY HOSPITAL,MN,US,METAR
K9S2,,48.8,-105.43,741.0,SCOBEY          ,MT,US,METAR
K9S5,,45.88,-111.57,1246.0,THREE FORKS     ,MT,US,METAR
K9S9,,45.45,-119.68,498.0,LEXINGTON       ,OR,US,METAR
K9V6,,43.17,-101.72,1004.0,MARTIN          ,SD,US,METAR
K9V9,72653,43.77,-99.32,511.0,CHAMBERLAIN     ,SD,US,METAR
KA08,,32.52,-87.38,64.0,MARION          ,AL,US,METAR
KA39,,32.98,-111.92,391.0,AK-CHIN         ,AZ,US,METAR
KAAA,,40.17,-89.33,179.0,LINCOLN         ,IL,US,METAR
KAAF,72220,29.73,-85.03,5.0,APALACHICOLA    ,FL,US,METAR
KAAO,,37.75,-97.22,429.0,WICHITA/JABARA  ,KS,US,METAR
KAAS,,37.35,-85.32,270.0,CAMPBELLSVILLE  ,KY,US,METAR
KAAT,,41.48,-120.57,1336.0,ALTURAS         ,CA,US,METAR
KABE,72517,40.65,-75.45,117.0,ALLENTOWN       ,PA,US,METAR TAF
KABH,,38.75,-104.3,1838.0,ELLICOTT-B AFA  ,CO,US,METAR
KABI,72266,32.42,-99.68,543.0,ABILENE         ,TX,US,METAR TAF
KABQ,72365,35.05,-106.62,1620.0,ALBUQUERQUE     ,NM,US,METAR rawinsonde WFO_office TAF
KABR,72659,45.45,-98.42,397.0,ABERDEEN        ,SD,US,METAR NEXRAD rawinsonde WFO_office TAF
KABX,,35.15,-106.82,1789.0,ALBUQUERQUE/88D ,NM,US,NEXRAD
KABY,72216,31.53,-84.2,60.0,ALBANY          ,GA,US,METAR TAF
KACB,,44.98,-85.2,189.0,BELLAIRE        ,MI,US,METAR
KACJ,,32.12,-84.18,140.0,AMERICUS        ,GA,US,METAR
KACK,,41.25,-70.07,12.0,NANTUCKET       ,MA,US,METAR TAF
KACP,,30.75,-92.68,31.0,OAKDALE ALLEN P ,LA,US,METAR
KACQ,,44.07,-93.55,339.0,WASECA          ,MN,US,METAR
KACT,72256,31.62,-97.23,150.0,WACO            ,TX,US,METAR TAF
KACV,,40.98,-124.1,63.0,ARCATA/EUREKA   ,CA,US,METAR TAF
KACY,72407,39.45,-74.57,18.0,ATLANTIC CITY   ,NJ,US,METAR TAF
KADC,,46.45,-95.22,416.0,WADENA MUNI     ,MN,US,METAR
KADF,,34.1,-93.07,54.0,ARKADELPHIA     ,AR,US,METAR TAF
KADG,,41.87,-84.08,244.0,ADRIAN          ,MI,US,METAR
KADH,,34.8,-96.67,301.0,ADA             ,OK,US,METAR
KADM,,34.3,-97.02,223.0,ARDMORE         ,OK,US,METAR
KADR,,45.43,-97.93,453.0,ANDOVER         ,SD,US,METAR
KADS,,32.97,-96.83,198.0,DALLAS/ADDISON  ,TX,US,METAR
KADT,,39.83,-101.05,899.0,ATWOOD          ,KS,US,METAR
KADU,,41.7,-94.92,391.0,AUDUBON         ,IA,US,METAR
KADW,74594,38.82,-76.87,87.0,ANDREWS AFB     ,MD,US,METAR TAF
KAEG,,35.13,-106.8,1771.0,DOUBLE EAGLE II ,NM,US,METAR TAF
KAEJ,,38.82,-106.12,2420.0,BUENA VISTA     ,CO,US,METAR
KAEL,,43.68,-93.37,382.0,ALBERT LEA      ,MN,US,METAR
KAEX,74754,31.33,-92.57,25.0,ALEXANDRIA      ,LA,US,METAR TAF
KAFF,74531,38.97,-104.82,2003.0,USAF ACADEMY/COS,CO,US,METAR TAF
KAFJ,,40.13,-80.28,360.0,WASHINGTON      ,PA,US,METAR
KAFK,,40.6,-95.85,353.0,NEBRASKA CITY   ,NE,US,METAR
KAFN,,42.8,-72.0,308.0,JAFFREY         ,NH,US,METAR
KAFO,,42.72,-110.95,1881.0,AFTON           ,WY,US,METAR
KAFP,,35.02,-80.08,91.0,WADESBORO/ANSON ,NC,US,METAR
KAFW,,32.97,-97.32,208.0,FT WORTH/ALLIANC,TX,US,METAR TAF
KAGC,,40.35,-79.92,380.0,PITTSBURGH/ALLEG,PA,US,METAR TAF
KAGI,,27.55,-92.45,41.0,GARDEN BANKS 426,LA,US,METAR
KAGO,,33.23,-93.22,91.0,MAGNOLIA        ,AR,US,METAR
KAGS,72218,33.37,-81.97,40.0,AUGUSTA/BUSH    ,GA,US,METAR TAF
KAGZ,,43.07,-98.3,451.0,WAGNER          ,SD,US,METAR
KAHN,72311,33.95,-83.33,241.0,ATHENS          ,GA,US,METAR TAF
KAHQ,,41.23,-96.6,372.0,WAHOO           ,NE,US,METAR
KAIA,,42.05,-102.8,1198.0,ALLIANCE        ,NE,US,METAR TAF
KAIB,,38.23,-108.57,1811.0,NUCLA/HOPKINS F ,CO,US,METAR
KAID,,40.12,-85.62,277.0,ANDERSON MUNICIP,IN,US,METAR
KAIG,,45.15,-89.12,462.0,ANTIGO/LANGLADE ,WI,US,METAR
KAIK,,33.65,-81.68,155.0,AIKEN           ,SC,US,METAR
KAIO,,41.4,-95.03,349.0,ATLANTIC        ,IA,US,METAR
KAIR,,40.02,-80.82,430.0,BELLAIRE VOR    ,OH,US
KAIT,,46.53,-93.67,367.0,AITKIN NDB      ,MN,US,METAR
KAIZ,,38.1,-92.53,263.0,KAISER MEM      ,MO,US,METAR
KAJG,,38.62,-87.73,130.0,MOUNT CARMEL    ,IL,US,METAR
KAJL,,43.67,-110.03,3161.0,LAVA MOUNTAIN   ,WY,US,METAR
KAJO,,33.9,-117.6,161.0,CORONA MUNI     ,CA,US,METAR
KAJR,,34.5,-83.55,441.0,CORNELIA        ,GA,US,METAR
KAJZ,,38.78,-108.07,1583.0,DELTA/BLAKE FLD ,CO,US,METAR
KAKH,,35.2,-81.15,242.0,GASTONIA        ,NC,US,METAR
KAKO,,40.17,-103.22,1431.0,AKRON           ,CO,US,METAR
KAKQ,,36.98,-77.0,34.0,NORFOLK/WAKEFLD ,VA,US,METAR NEXRAD WFO_office
KAKR,,41.03,-81.47,319.0,AKRON (FULTON)  ,OH,US,METAR
KAL8,,39.6,-100.12,734.0,NEW ALMELO      ,KS,US,METAR
KALB,72518,42.75,-73.8,82.0,ALBANY          ,NY,US,METAR rawinsonde TAF
KALI,,27.73,-98.02,52.0,ALICE           ,TX,US,METAR TAF
KALK,,31.6,-110.43,1451.0,PIONEER AIRFIELD,AZ,US,METAR
KALM,,32.83,-105.98,1267.0,ALAMOGORDO WHITE,NM,US,METAR
KALN,,38.88,-90.03,159.0,ALTON/ST LOUIS R,IL,US,METAR
KALO,72548,42.55,-92.4,264.0,WATERLOO        ,IA,US,METAR TAF
KALR,,33.37,-84.57,248.0,ATLANTA RFC     ,GA,US
KALS,72462,37.43,-105.87,2299.0,ALAMOSA         ,CO,US,METAR TAF
KALW,,46.1,-118.28,355.0,WALLA WALLA     ,WA,US,METAR TAF
KALX,,32.92,-85.97,198.0,ALEXANDER/RUSSEL,AL,US,METAR
KALY,,42.75,-73.8,88.0,ALBANY/WFO      ,NY,US,WFO_office
KAMA,72363,35.22,-101.72,1102.0,AMARILLO        ,TX,US,METAR NEXRAD rawinsonde WFO_office TAF
KAMG,,31.53,-82.5,61.0,ALMA            ,GA,US,METAR
KAMN,,43.32,-84.68,228.0,ALMA            ,MI,US,METAR
KAMW,,41.98,-93.62,282.0,AMES            ,IA,US,METAR
KAMX,,25.62,-80.42,3.0,MIAMI/88D       ,FL,US,NEXRAD
KANB,,33.58,-85.85,187.0,ANNISTON        ,AL,US,METAR TAF
KAND,,34.5,-82.72,233.0,ANDERSON        ,SC,US,METAR TAF
KANE,,45.15,-93.22,276.0,MINNEAPLS/BLAINE,MN,US,METAR TAF
KANJ,72734,46.47,-84.37,220.0,SAULT STE MARIE ,MI,US,METAR
KANK,,38.53,-106.05,2293.0,SALIDA          ,CO,US,METAR
KANQ,,41.63,-85.08,299.0,ANGOLA          ,IN,US,METAR
KANW,,42.57,-100.0,788.0,AINSWORTH MUNICI,NE,US,METAR
KAOH,,40.7,-84.02,294.0,LIMA            ,OH,US,METAR
KAOO,,40.3,-78.32,450.0,ALTOONA         ,PA,US,METAR TAF
KAPA,,39.57,-104.85,1791.0,DENVER/ARAPAHOE ,CO,US,METAR TAF
KAPC,,38.2,-122.28,5.0,NAPA            ,CA,US,METAR TAF
KAPE,,40.15,-82.58,453.0,APPLETON        ,OH,US
KAPF,,26.15,-81.77,2.0,NAPLES MUNICIPAL,FL,US,METAR TAF
KAPG,,39.47,-76.17,18.0,ABERDEEN/PHILLIP,MD,US,METAR
KAPN,72639,45.07,-83.57,208.0,ALPENA          ,MI,US,METAR TAF
KAPS,,30.08,-90.58,1.0,RESERVE         ,LA,US,METAR
KAPV,,34.57,-117.18,902.0,APPLE VALLEY    ,CA,US,METAR
KAPX,72634,44.9,-84.72,446.0,GAYLORD/ALPENA  ,MI,US,NEXRAD rawinsonde WFO_office
KAPY,,26.97,-99.25,129.0,ZAPATA          ,TX,US,METAR
KAQO,,30.78,-98.67,334.0,LLANO           ,TX,US,METAR
KAQP,,45.22,-96.0,312.0,APPLETON MUNICIP,MN,US,METAR
KAQR,,34.4,-96.15,178.0,ATOKA           ,OK,US,METAR
KAQV,,31.4,-93.3,123.0,PEASON RIDG/POLK,LA,US,METAR
KAQW,,42.7,-73.17,196.0,NORTH ADAMS     ,MA,US,METAR
KAQX,,32.98,-81.27,48.0,ALLENDALE CNTY  ,SC,US,METAR
KARA,,30.03,-91.88,5.0,NEW IBERIA      ,LA,US,METAR TAF
KARB,,42.22,-83.73,251.0,ANN ARBOR       ,MI,US,METAR
KARG,,36.12,-90.92,82.0,WALNUT RIDGE    ,AR,US,METAR
KARL,,41.6,-106.22,2374.0,ARLINGTON       ,WY,US,METAR
KARM,,29.25,-96.15,29.0,WHARTON         ,TX,US,METAR
KARR,,41.77,-88.48,213.0,CHICAGO/AURORA  ,IL,US,METAR
KART,,43.98,-76.03,100.0,WATERTOWN       ,NY,US,METAR TAF
KARV,,45.92,-89.72,494.0,MINOCQUA/WOODRUF,WI,US,METAR
KARW,,32.42,-80.63,2.0,BEAUFORT CNTY   ,SC,US,METAR
KARX,,43.82,-91.18,389.0,LA CROSSE/88D   ,WI,US,NEXRAD WFO_office
KASD,,30.35,-89.82,8.0,SLIDELL 22      ,LA,US,METAR TAF
KASE,,39.23,-106.87,2384.0,ASPEN           ,CO,US,METAR TAF
KASG,,36.17,-94.12,410.0,SPRINGDALE MUNI ,AR,US,METAR
KASH,,42.78,-71.52,56.0,NASHUA/BOIRE FLD,NH,US,METAR
KASJ,,36.28,-77.17,20.0,AHOSKIE/TRI COUN,NC,US,METAR
KASL,,32.52,-94.3,104.0,MARSHALL        ,TX,US,METAR
KASN,,33.57,-86.05,159.0,TALLADEGA       ,AL,US,METAR TAF
KASP,,44.45,-83.4,193.0,OSCODA (VOR)    ,MI,US
KAST,72791,46.15,-123.88,3.0,ASTORIA         ,OR,US,METAR TAF
KASW,,41.27,-85.83,253.0,WARSAW MUNI     ,IN,US,METAR wind_profiler
KASX,,46.55,-90.92,249.0,ASHLAND         ,WI,US,METAR
KATA,,33.1,-94.2,85.0,ATLANTA         ,TX,US,METAR
KATL,72219,33.63,-84.45,309.0,ATLANTA         ,GA,US,METAR TAF
KATP,,27.2,-90.03,50.0,ATLANTIS    OILP,LA,US,METAR
KATR,,33.37,-84.57,312.0,ATLANTA/RFC     ,GA,US
KATS,,32.85,-104.47,1073.0,ARTESIA         ,NM,US,METAR
KATT,,30.32,-97.77,203.0,AUSTIN/MABRY    ,TX,US,METAR
KATW,,44.27,-88.52,266.0,APPLETON/OUTAGAM,WI,US,METAR TAF
KATX,,48.2,-122.5,151.0,SEATTLE/CAMANO I,WA,US,NEXRAD
KATY,,44.9,-97.15,531.0,WATERTOWN       ,SD,US,METAR TAF
KAUB,,32.6,-85.5,198.0,AUBURN UNIV. (AM,AL,US,METAR
KAUD,,29.93,-90.13,2.0,AUDUBON PARK    ,LA,US,METAR
KAUG,,44.32,-69.8,107.0,AUGUSTA         ,ME,US,METAR TAF
KAUH,,40.88,-98.0,549.0,AURORA          ,NE,US,METAR
KAUM,,43.67,-92.92,376.0,AUSTIN MUNI     ,MN,US,METAR
KAUN,,38.95,-121.08,453.0,AUBURN MUNI     ,CA,US,METAR
KAUO,,32.62,-85.43,231.0,AUBURN OPELIKA A,AL,US,METAR
KAUS,72254,30.18,-97.68,148.0,AUSTIN          ,TX,US,METAR TAF
KAUW,,44.93,-89.62,367.0,WAUSAU          ,WI,US,METAR TAF
KAVC,,36.68,-78.05,119.0,SOUTH HILL/MECKL,VA,US,METAR
KAVK,,36.77,-98.67,450.0,ALVA            ,OK,US,METAR
KAVL,72315,35.43,-82.53,646.0,ASHEVILLE       ,NC,US,METAR TAF
KAVP,72513,41.33,-75.72,290.0,AVOCA/WILKES B. ,PA,US,METAR TAF
KAVQ,,32.4,-111.22,618.0,TUCSON/MARANA   ,AZ,US,METAR
KAVX,72292,33.4,-118.42,482.0,AVALON          ,CA,US,METAR
KAWG,,41.27,-91.67,229.0,WASHINGTON      ,IA,US,METAR
KAWH,,41.67,-115.77,1902.0,WILDHORSE RES/EL,NV,US,METAR
KAWM,,35.13,-90.23,64.0,W MEMPHIS MUNI  ,AR,US,METAR
KAWO,,48.17,-122.17,38.0,ARLINGTON MUNI  ,WA,US,METAR
KAXA,,43.07,-94.27,371.0,ALGONA          ,IA,US,METAR
KAXC,,39.83,-88.85,207.0,DECATUR         ,IL,US,TAF
KAXH,,29.52,-95.48,18.0,HOUSTON/SOUTHWST,TX,US,METAR
KAXN,,45.87,-95.4,433.0,ALEXANDRIA      ,MN,US,METAR TAF
KAXO,99429,29.25,-89.97,2.0,GRAND ISLE (SAWR,LA,US,METAR
KAXS,,34.7,-99.33,433.0,ALTUS/QUARTZ MTN,OK,US,METAR
KAXV,,40.5,-84.3,278.0,WAPAKONETA      ,OH,US,METAR
KAXX,,36.42,-105.28,2543.0,ANGEL FIRE      ,NM,US,METAR
KAYS,72213,31.25,-82.4,42.0,WAYCROSS/WARE CO,GA,US,METAR
KAZC,,36.97,-113.02,1476.0,COLORADO CITY   ,AZ,US,METAR
KAZE,,31.88,-82.65,78.0,HAZELHURST      ,GA,US,METAR
KAZO,,42.23,-85.55,264.0,KALAMAZOO       ,MI,US,METAR TAF
KB21,,45.08,-70.22,270.0,CARRABASSETT    ,ME,US,METAR
KB23,,40.6,-116.87,1381.0,BATTLE MOUNTAIN ,NV,US,METAR
KBAB,,39.13,-121.43,31.0,BEALE AFB/MARYSV,CA,US,METAR TAF
KBAC,,46.93,-98.02,423.0,VALLEY CITY     ,ND,US,METAR
KBAD,,32.5,-93.67,49.0,BARKSDALE AFB   ,LA,US,METAR TAF
KBAE,,43.12,-88.28,206.0,MILWAUKEE VOR   ,WI,US
KBAF,,42.17,-72.72,80.0,WESTFIELD       ,MA,US,METAR TAF
KBAK,,39.27,-85.9,199.0,COLUMBUS        ,IN,US,METAR
KBAM,,40.6,-116.87,1381.0,BATTLE MTN (VOR),NV,US,METAR
KBAN,,38.35,-119.52,2067.0,BRIDGEPORT(MCMWT,CA,US,METAR
KBAT,,43.13,-102.1,1042.0,BATESLAND US18  ,SD,US,METAR
KBAX,,43.78,-82.98,229.0,BAD AXE         ,MI,US,METAR
KBAZ,,29.72,-98.05,199.0,NEW BRAUNFELS   ,TX,US,METAR
KBBB,,45.32,-95.65,315.0,BENSON MUNI     ,MN,US,METAR
KBBD,,31.18,-99.32,554.0,BRADY           ,TX,US,METAR TAF
KBBF,,27.83,-96.02,26.0,BRAZOS 133B OILP,TX,US,METAR
KBBG,,36.53,-93.2,403.0,BRANSON         ,MO,US,METAR TAF
KBBP,,34.62,-79.73,44.0,MARLBORO CNTY   ,SC,US,METAR
KBBW,,41.43,-99.63,771.0,BROKEN BOW MUNI ,NE,US,METAR
KBBX,,39.5,-121.63,53.0,BEALE/ORO DAM   ,CA,US,NEXRAD
KBCB,,37.22,-80.42,642.0,BLACKSBURG/VA T.,VA,US,METAR TAF
KBCE,,37.7,-112.15,2311.0,BRYCE CANYON    ,UT,US,METAR TAF
KBCK,,44.25,-90.85,256.0,BLACK RIVER FALL,WI,US,METAR
KBCR,,30.85,-85.6,26.0,BONIFAY TRI-CTY ,FL,US,METAR
KBCT,,26.38,-80.1,3.0,BOCA RATON      ,FL,US,METAR
KBDE,,48.73,-94.62,330.0,BAUDETTE        ,MN,US,METAR
KBDF,,41.15,-89.58,247.0,BRADFORD/VOR    ,IL,US
KBDG,,37.58,-109.47,1778.0,BLANDING        ,UT,US,METAR
KBDH,,45.12,-95.13,341.0,WILLMAR MUNI    ,MN,US,METAR
KBDL,72508,41.93,-72.68,52.0,WINDSOR LOCKS   ,CT,US,METAR TAF
KBDN,,44.1,-121.2,1044.0,BEND            ,OR,US,METAR TAF
KBDR,72504,41.17,-73.13,5.0,BRIDGEPORT      ,CT,US,METAR TAF
KBDU,,40.03,-105.23,1614.0,BOULDER MUNI    ,CO,US,METAR
KBEA,,28.37,-97.78,83.0,BEEVILLE MUNI   ,TX,US,METAR
KBEC,,37.7,-97.22,421.0,WICHITA/BEECH   ,KS,US,METAR
KBED,74490,42.47,-71.3,39.0,BEDFORD         ,MA,US,METAR TAF
KBEH,,42.13,-86.42,196.0,BENTON HARBOR   ,MI,US,METAR
KBEL,,44.8,-104.05,971.0,BELLE FOURCHE   ,SD,US,METAR
KBFD,,41.8,-78.63,642.0,BRADFORD        ,PA,US,METAR TAF
KBFF,72566,41.87,-103.6,1204.0,SCOTTSBLUFF     ,NE,US,METAR TAF
KBFI,,47.55,-122.32,7.0,SEATTLE/BOEING  ,WA,US,METAR TAF
KBFL,72384,35.43,-119.05,146.0,BAKERSFIELD     ,CA,US,METAR TAF
KBFM,,30.62,-88.07,7.0,MOBILE/BROOKLEY ,AL,US,METAR TAF
KBFR,,38.83,-86.45,223.0,BEDFORD         ,IN,US,METAR
KBFU,,43.93,-105.45,1422.0,BELLE FOURCHE   ,WY,US,METAR
KBFW,,47.25,-91.4,335.0,SILVER BAY      ,MN,US,METAR
KBGD,,35.7,-101.4,928.0,BORGER          ,TX,US,METAR
KBGE,,30.97,-84.63,40.0,BAINBRIDGE      ,GA,US,METAR
KBGF,,35.18,-86.07,295.0,WINCHESTER      ,TN,US,METAR
KBGM,72515,42.22,-75.98,485.0,BINGHAMTON      ,NY,US,METAR NEXRAD WFO_office TAF
KBGR,,44.8,-68.82,45.0,BANGOR          ,ME,US,METAR TAF
KBHB,,44.45,-68.37,21.0,BAR HARBOR      ,ME,US,METAR TAF
KBHC,,31.72,-82.4,61.0,BAXLEY MUNI     ,GA,US,METAR
KBHK,,46.35,-104.25,904.0,BAKER           ,MT,US,METAR
KBHM,72228,33.57,-86.75,191.0,BIRMINGHAM      ,AL,US,METAR TAF
KBHX,,40.5,-124.3,732.0,HUMBOLDT CTY/88D,CA,US,NEXRAD
KBID,,41.17,-71.58,32.0,BLOCK ISLAND    ,RI,US,METAR
KBIE,,40.28,-96.75,398.0,BEATRICE MUNICIP,NE,US,METAR
KBIF,,31.85,-106.38,1201.0,FORT BLISS      ,TX,US,METAR TAF
KBIH,72480,37.37,-118.35,1252.0,BISHOP          ,CA,US,METAR TAF
KBIJ,,31.4,-84.9,63.0,BLAKELY EARLY C ,GA,US,METAR
KBIL,72677,45.8,-108.55,1089.0,BILLINGS        ,MT,US,METAR TAF
KBIS,72764,46.77,-100.75,506.0,BISMARCK        ,ND,US,METAR NEXRAD rawinsonde WFO_office TAF
KBIT,,41.65,-108.58,2160.0,BITTERCREEK     ,WY,US,METAR
KBIV,,42.75,-86.1,207.0,HOLLAND         ,MI,US,METAR
KBIX,,30.42,-88.92,4.0,BILOXI/KEESLER  ,MS,US,METAR TAF
KBJC,,39.9,-105.1,1694.0,BROOMFIELD/JEFFC,CO,US,METAR TAF
KBJI,72755,47.5,-94.92,422.0,BEMIDJI         ,MN,US,METAR TAF
KBJJ,,40.87,-81.88,338.0,WOOSTER         ,OH,US,METAR
KBJN,,37.62,-116.27,1813.0,TONOPAH RANGE74 ,NV,US,METAR
KBKB,,31.02,-92.92,74.0,FULLERTON/POLK  ,LA,US,METAR
KBKD,,32.72,-98.88,383.0,BRECKENRIDGE    ,TX,US,METAR
KBKE,,44.85,-117.82,1025.0,BAKER           ,OR,US,METAR TAF
KBKF,,39.72,-104.75,1703.0,BUCKLEY ANGB/DEN,CO,US,METAR TAF
KBKL,,41.53,-81.67,177.0,CLEVELAND       ,OH,US,METAR
KBKN,,36.75,-97.35,208.0,BLACKWELL       ,OK,US,METAR
KBKS,,27.2,-98.12,34.0,FALFURRIAS      ,TX,US,METAR
KBKT,,37.07,-77.95,134.0,BLACKSTONE/FORT ,VA,US,METAR
KBKV,,28.47,-82.45,21.0,BROOKSVILLE     ,FL,US,METAR
KBKW,72412,37.8,-81.12,762.0,BECKLEY         ,WV,US,METAR TAF
KBKX,,44.3,-96.82,494.0,BROOKINGS       ,SD,US,METAR
KBLF,,37.3,-81.2,871.0,BLUEFIELD       ,WV,US,METAR TAF
KBLH,,33.62,-114.72,119.0,BLYTHE          ,CA,US,METAR TAF
KBLI,,48.8,-122.53,46.0,BELLINGHAM      ,WA,US,METAR TAF
KBLM,,40.17,-74.12,45.0,BELMAR/FARMDALE ,NJ,US,METAR
KBLU,,39.28,-120.7,1605.0,EMIGRANT GAP    ,CA,US,METAR
KBLV,,38.53,-89.83,134.0,SCOTT AFB/BELLEV,IL,US,METAR TAF
KBLX,,45.85,-108.6,1097.0,YELLOWST/BILLING,MT,US,NEXRAD
KBMC,,41.55,-112.07,1289.0,BRIGHAM CITY    ,UT,US,METAR
KBMG,,39.15,-86.62,254.0,BLOOMINGTON     ,IN,US,METAR TAF
KBMI,,40.47,-88.92,262.0,BLOOMINGTON/NORM,IL,US,METAR TAF
KBML,72616,44.58,-71.18,344.0,BERLIN          ,NH,US,METAR
KBMQ,,30.73,-98.23,387.0,BURNET          ,TX,US,METAR
KBMT,,30.07,-94.22,8.0,BEAUMONT        ,TX,US,METAR
KBMX,,33.17,-86.77,182.0,BRMNGHM/ALABASTR,AL,US,NEXRAD rawinsonde WFO_office
KBNA,72327,36.12,-86.68,168.0,NASHVILLE       ,TN,US,METAR rawinsonde TAF
KBNL,,33.25,-81.38,76.0,BARNWELL        ,SC,US,METAR
KBNO,72683,43.6,-118.95,1263.0,BURNS           ,OR,US,METAR TAF
KBNW,,42.03,-93.83,350.0,BOONE MUNI      ,IA,US,METAR
KBNY,,40.87,-121.67,957.0,BURNEY          ,CA,US,METAR
KBOI,72681,43.57,-116.23,860.0,BOISE           ,ID,US,METAR rawinsonde WFO_office TAF
KBOK,,42.07,-124.28,140.0,BROOKINGS       ,OR,US,METAR
KBOS,72509,42.37,-71.02,4.0,BOSTON          ,MA,US,METAR TAF
KBOU,,40.0,-105.25,1625.0,BOULDER DEN/WFO ,CO,US,WFO_office
KBOW,,27.93,-81.77,38.0,BARTOW MUNICIPAL,FL,US,METAR
KBOX,,41.95,-71.13,36.0,BOSTON/TAUNTON  ,MA,US,NEXRAD WFO_office
KBOY,,43.47,-108.3,2517.0,BOYSEN (VOR)    ,WY,US
KBPC,,35.88,-101.03,844.0,PAMPA M VISTA R ,TX,US,METAR
KBPG,,32.22,-101.52,782.0,BIG SPRING      ,TX,US,METAR
KBPI,72671,42.58,-110.1,2120.0,BIG PINEY       ,WY,US,METAR TAF
KBPK,,36.37,-92.47,279.0,MOUNTAIN HOME   ,AR,US,METAR TAF
KBPP,,46.18,-103.43,902.0,BOWMAN MUNI     ,ND,US,METAR
KBPT,72241,29.95,-94.03,6.0,BEAUMONT/PORT AR,TX,US,METAR TAF
KBQK,,31.25,-81.47,7.0,BRUNSWICK/GLYNCO,GA,US,METAR
KBQP,,32.75,-91.88,50.0,BASTROP MOREHOUS,LA,US,METAR
KBQX,,28.5,-95.72,34.0,BRAZOS 451 OILP ,TX,US,METAR
KBRA,,44.68,-96.85,564.0,BRANDT          ,SD,US,METAR
KBRD,,46.4,-94.13,372.0,BRAINERD        ,MN,US,METAR TAF
KBRG,,34.65,-106.83,1585.0,BELEN           ,NM,US,METAR
KBRL,,40.77,-91.13,208.0,BURLINGTON      ,IA,US,METAR TAF
KBRO,72250,25.92,-97.42,6.0,BROWNSVILLE     ,TX,US,METAR NEXRAD rawinsonde WFO_office TAF
KBRX,,41.95,-104.95,1524.0,BORDEAUX        ,WY,US,METAR
KBRY,,37.82,-85.5,192.0,BARDSTOWN       ,KY,US,METAR
KBTA,,41.42,-96.12,400.0,BLAIR MUNI      ,NE,US,METAR
KBTL,,42.32,-85.25,282.0,BATTLE CREEK    ,MI,US,METAR TAF
KBTM,,45.97,-112.5,1680.0,BUTTE           ,MT,US,METAR TAF
KBTN,,45.82,-97.75,400.0,BRITTON         ,SD,US,METAR
KBTP,,40.77,-79.95,375.0,BUTLER CO.      ,PA,US,METAR
KBTR,,30.53,-91.15,20.0,BATON ROUGE     ,LA,US,METAR TAF
KBTV,72617,44.47,-73.15,101.0,BURLINGTON      ,VT,US,METAR WFO_office TAF
KBTY,,36.8,-116.73,892.0,BEATTY          ,NV,US
KBUF,72528,42.93,-78.73,217.0,BUFFALO/CHEEKTOW,NY,US,METAR NEXRAD rawinsonde WFO_office TAF
KBUM,,38.28,-94.33,272.0,BUTLER          ,MO,US
KBUO,,33.92,-116.97,692.0,BEAUMONT        ,CA,US,METAR
KBUR,72288,34.2,-118.37,221.0,BURBANK         ,CA,US,METAR TAF
KBUU,,42.68,-88.3,238.0,BURLINGTON      ,WI,US,METAR
KBUY,,36.05,-79.47,185.0,BURLINGTON      ,NC,US,METAR
KBVD,,43.9,-101.13,728.0,BELVIDERE       ,SD,US,METAR
KBVE,72232,29.32,-89.4,0.0,BOOTHVILLE      ,LA,US,METAR TAF
KBVI,,40.77,-80.37,387.0,BEAVER FALLS ARP,PA,US,METAR TAF
KBVL,,40.72,-113.75,1286.0,BONNEVILLE      ,UT,US
KBVN,,41.73,-98.05,547.0,ALBION MUNI     ,NE,US,METAR
KBVO,,36.77,-96.02,210.0,BARTLESVILLE    ,OK,US,METAR TAF
KBVR,,42.58,-108.28,2072.0,BEAVER RIM      ,WY,US,METAR
KBVS,,48.47,-122.42,31.0,BURLINGTON/MT V ,WA,US,METAR
KBVT,,40.57,-87.07,182.0,LAFAYETTE VOR   ,IN,US
KBVU,,35.95,-114.87,654.0,BOULDER CITY    ,NV,US,METAR
KBVX,,35.73,-91.65,137.0,BATESVILLE      ,AR,US,METAR
KBVY,,42.58,-70.92,28.0,BEVERLY         ,MA,US,METAR
KBWD,,31.8,-98.95,420.0,BROWNWOOD       ,TX,US,METAR
KBWG,,36.97,-86.42,159.0,BOWLING GREE    ,KY,US,METAR TAF
KBWI,72406,39.17,-76.68,42.0,BALTO/WASH INTL ,MD,US,METAR TAF
KBWP,,46.25,-96.62,294.0,WAHPETON        ,ND,US,METAR
KBWW,,46.17,-103.3,911.0,BOWMAN RGNL     ,ND,US,METAR
KBXA,,30.82,-89.87,35.0,BOGALUSA CARR F ,LA,US,METAR
KBXK,,33.42,-112.68,303.0,BUCKEYE         ,AZ,US,METAR
KBYG,,44.38,-106.72,1503.0,BUFFALO         ,WY,US,METAR
KBYH,,35.97,-89.95,77.0,BLYTHEVILLE     ,AR,US,METAR
KBYI,,42.55,-113.77,1263.0,BURLEY          ,ID,US,METAR TAF
KBYL,,36.8,-84.2,355.0,WILLIAMSBURG    ,KY,US,METAR
KBYS,74611,35.28,-116.63,717.0,BICYCLE LAKE    ,CA,US,METAR TAF
KBYX,,24.6,-81.7,2.0,KEY W/BOCA CHICA,FL,US,NEXRAD
KBYY,,28.97,-95.87,12.0,BAY CITY        ,TX,US,METAR
KBYZ,,45.8,-108.55,1091.0,BILLINGS (WFO)  ,MT,US,WFO_office
KBZA,,32.77,-114.6,63.0,YUMA (VOR)      ,AZ,US
KBZN,,45.78,-111.17,1349.0,BOZEMAN         ,MT,US,METAR TAF
KC04,,43.63,-86.33,277.0,HART/SHELBY     ,MI,US,METAR
KC07,,40.35,-106.7,3224.0,WALTON PEAK     ,CO,US,METAR
KC09,,41.43,-88.42,179.0,MORRIS-WASHBURN ,IL,US,METAR
KC29,,43.12,-89.53,282.0,MIDDLETON       ,WI,US,METAR
KC35,,43.53,-89.98,272.0,REEDSBURG       ,WI,US,METAR
KC56,,41.38,-87.68,241.0,MONEE           ,IL,US,METAR
KC62,,41.47,-85.25,304.0,KENDALLVILLE    ,IN,US,METAR
KC65,,41.37,-86.3,241.0,PLYMOUTH        ,IN,US,METAR
KC73,,41.83,-89.45,240.0,DIXON           ,IL,US,METAR
KC75,,41.02,-89.38,166.0,LACON           ,IL,US,METAR
KC83,,37.83,-121.62,16.0,BYRON           ,CA,US,METAR
KC99,,39.87,-105.55,3334.0,DAKOTA HILL     ,CO,US,METAR
KCAC,,43.83,-101.77,751.0,CACTUS FLATS    ,SD,US,METAR
KCAD,,44.27,-85.42,397.0,CADILLAC/WEXFORD,MI,US,METAR
KCAE,72310,33.93,-81.12,69.0,COLUMBIA        ,SC,US,METAR NEXRAD WFO_office TAF
KCAG,72570,40.5,-107.52,1888.0,CRAIG           ,CO,US,METAR
KCAK,72521,40.92,-81.45,369.0,AKRON           ,OH,US,METAR TAF
KCAO,72360,36.45,-103.15,1517.0,CLAYTON         ,NM,US,METAR
KCAR,72712,46.87,-68.02,189.0,CARIBOU         ,ME,US,METAR rawinsonde TAF
KCAV,,42.75,-93.77,352.0,CLARION         ,IA,US,METAR
KCBE,,39.62,-78.77,226.0,CUMBERLAND REG  ,MD,US,METAR
KCBF,,41.27,-95.77,379.0,COUNCIL BLUFFS  ,IA,US,METAR
KCBG,,45.57,-93.27,285.0,CAMBRIDGE MUNI  ,MN,US,METAR
KCBK,,39.43,-101.05,970.0,COLBY           ,KS,US,METAR
KCBM,,33.65,-88.45,59.0,COLUMBUS AFB    ,MS,US,METAR TAF
KCBW,,46.03,-67.8,227.0,HOULTON/88D     ,ME,US,NEXRAD
KCBX,,43.48,-116.23,933.0,ADA COUNTY/BOISE,ID,US,NEXRAD
KCCA,,35.6,-92.45,152.0,CLINTON MUNI    ,AR,US,METAR
KCCB,,34.12,-117.68,440.0,UPLAND          ,CA,US,METAR
KCCO,,33.32,-84.77,290.0,NEWNAN          ,GA,US,METAR
KCCR,,38.0,-122.05,6.0,CONCORD         ,CA,US,METAR
KCCU,,39.48,-106.15,3672.0,RED CLIFF PASS  ,CO,US,METAR
KCCX,,40.92,-78.0,733.0,RUSH/ST COLLEGE ,PA,US,NEXRAD
KCCY,,43.07,-92.62,340.0,CHARLES CITY    ,IA,US,METAR
KCDA,,44.57,-72.02,357.0,LYNDONVILLE     ,VT,US,METAR
KCDC,,37.7,-113.1,1703.0,CEDAR CITY      ,UT,US,METAR TAF
KCDD,,48.27,-92.48,344.0,CRANE LAKE      ,MN,US,METAR
KCDH,,33.62,-92.77,38.0,CAMDEN          ,AR,US,METAR
KCDI,,39.97,-81.58,241.0,CAMBRIDGE       ,OH,US,METAR
KCDJ,,39.82,-93.57,234.0,CHILLICOTHE     ,MO,US,METAR
KCDN,,34.28,-80.57,90.0,CAMDEN WOODWARD ,SC,US,METAR
KCDR,,42.83,-103.1,1002.0,CHADRON         ,NE,US,METAR TAF
KCDS,,34.43,-100.28,595.0,CHILDRESS       ,TX,US,METAR TAF
KCDW,,40.88,-74.28,52.0,CALDWELL        ,NJ,US,METAR
KCEC,,41.78,-124.23,17.0,CRESCENT CITY   ,CA,US,METAR TAF
KCEF,74491,42.2,-72.52,72.0,CHICOPEE/WESTOVE,MA,US,METAR TAF
KCEU,,34.67,-82.88,270.0,CLEMSON         ,SC,US,METAR
KCEV,,39.7,-85.13,263.0,CONNERSVILLE    ,IN,US,METAR
KCEW,,30.78,-86.52,47.0,CRESTVIEW       ,FL,US,METAR
KCEY,,36.67,-88.37,172.0,MURRAY KYLE-OAK ,KY,US,METAR
KCEZ,,37.3,-108.63,1801.0,CORTEZ          ,CO,US,METAR
KCFD,,30.72,-96.33,106.0,BRYAN           ,TX,US,METAR
KCFE,,45.17,-93.85,292.0,BUFFALO MUNI    ,MN,US,METAR
KCFJ,,39.98,-86.92,243.0,CRAWFORDSVILLE  ,IN,US,METAR
KCFO,,39.78,-104.55,1672.0,DENVER AIR SPACE,CO,US,METAR
KCFS,,43.47,-83.45,214.0,CARO/TUSCOLA    ,MI,US,METAR
KCFV,,37.08,-95.57,228.0,COFFEYVILLE     ,KS,US,METAR
KCGC,,28.87,-82.57,3.0,CRYSTAL RIVER   ,FL,US,METAR
KCGE,,38.53,-76.03,5.0,CAMBRIDGE-DORCH ,MD,US,METAR
KCGF,,41.57,-81.47,265.0,CLEVLND/CUYAHOGA,OH,US,METAR
KCGI,,37.23,-89.58,103.0,CAPE GIRARDEAU  ,MO,US,METAR TAF
KCGS,,38.98,-76.92,15.0,COLLEGE PARK    ,MD,US,METAR
KCGZ,,32.95,-111.77,444.0,CASA GRANDA     ,AZ,US,METAR
KCHA,72324,35.03,-85.2,203.0,CHATTANOOGA     ,TN,US,METAR TAF
KCHD,,33.27,-111.82,378.0,CHANDLER        ,AZ,US,METAR
KCHE,,40.48,-107.22,2339.0,HAYDEN VOR      ,CO,US
KCHH,74494,41.67,-69.97,16.0,CHATHAM         ,MA,US,METAR rawinsonde
KCHJ,,44.75,-109.37,2512.0,CHIEF JOSEPH    ,WY,US,METAR
KCHK,,35.1,-97.97,346.0,CHICKASHA       ,OK,US,METAR
KCHM,,40.38,-101.72,1029.0,CHAMPION        ,NE,US,METAR
KCHO,,38.13,-78.45,193.0,CHARLOTTESVILLE ,VA,US,METAR TAF
KCHS,72208,32.9,-80.03,12.0,CHARLESTON      ,SC,US,METAR rawinsonde WFO_office TAF
KCIC,,39.78,-121.85,72.0,CHICO MUNICIPAL ,CA,US,METAR
KCID,72545,41.88,-91.72,257.0,CEDAR RAPIDS    ,IA,US,METAR TAF
KCII,,47.83,-112.17,1202.0,CHOTEAU         ,MT,US,METAR
KCIM,,36.48,-104.87,2183.0,CIMARRON (VOR)  ,NM,US
KCIN,,42.03,-94.78,365.0,CARROLL         ,IA,US,METAR
KCIR,,37.07,-89.22,96.0,CAIRO           ,IL,US,METAR
KCIU,,46.25,-84.47,242.0,CHIPPEWA INTL   ,MI,US,METAR TAF
KCJR,,38.53,-77.87,90.0,CULPEPER        ,VA,US,METAR
KCKB,,39.3,-80.22,368.0,CLARKSBURG      ,WV,US,METAR TAF
KCKC,,47.83,-90.38,544.0,GRAND MARAIS/COO,MN,US,METAR
KCKF,,31.98,-83.77,92.0,CORDELE         ,GA,US,METAR
KCKI,,33.72,-79.85,19.0,KINGSTREE       ,SC,US,METAR
KCKM,,34.3,-90.52,52.0,CLARKSDALE      ,MS,US,METAR
KCKN,,47.85,-96.62,272.0,CROOKSTON MUNI  ,MN,US,METAR
KCKP,,42.73,-95.55,369.0,CHEROKEE        ,IA,US,METAR
KCKV,,36.62,-87.42,166.0,CLARKSVILLE     ,TN,US,METAR TAF
KCKZ,,40.38,-75.28,160.0,PERKASIE        ,PA,US,METAR TAF
KCLE,72524,41.42,-81.85,237.0,CLEVELAND       ,OH,US,METAR NEXRAD WFO_office TAF
KCLI,,44.62,-88.73,248.0,CLINTONVILLE    ,WI,US,METAR
KCLK,,35.53,-98.93,489.0,CLINTON         ,OK,US,METAR
KCLL,,30.58,-96.37,96.0,COLLEGE STATION ,TX,US,METAR TAF
KCLM,,48.12,-123.5,81.0,PORT ANGELES    ,WA,US,METAR TAF
KCLS,,46.68,-122.98,52.0,CHEHALIS CENTRAL,WA,US,METAR
KCLT,72314,35.22,-80.95,223.0,CHARLOTTE       ,NC,US,METAR TAF
KCLW,,27.98,-82.75,21.0,CLEARWATER      ,FL,US,METAR
KCLX,,32.65,-81.05,30.0,CHARLESTON/GRAYS,SC,US,NEXRAD
KCMA,,34.22,-119.1,20.0,CAMARILLO       ,CA,US,METAR TAF
KCMB,,29.43,-92.98,29.0,E CAMERON 47JP  ,LA,US,METAR
KCMD,,34.27,-86.85,294.0,CULLMAN/FOLSOM F,AL,US,METAR
KCME,,33.33,-104.62,1150.0,CHISUM/ROSWELL  ,NM,US
KCMH,72428,40.0,-82.88,257.0,COLUMBUS        ,OH,US,METAR TAF
KCMI,,40.03,-88.27,227.0,CHAMPAIGN/URBANA,IL,US,METAR TAF
KCMR,,35.3,-112.2,2039.0,WILLIAMS CLARK  ,AZ,US,METAR
KCMS,,41.53,-109.47,1949.0,CEMETERY SEPARA ,WY,US,METAR
KCMX,72744,47.17,-88.48,326.0,HANCOCK         ,MI,US,METAR TAF
KCMY,,43.97,-90.73,253.0,SPARTA/MCCOY AAF,WI,US,METAR
KCNB,,44.73,-96.27,363.0,CANBY/MYERS FLD ,MN,US,METAR
KCNC,,41.02,-93.37,319.0,CHARITON        ,IA,US,METAR
KCNI,,34.32,-84.42,371.0,CANTON/CHEROKEE ,GA,US,METAR
KCNK,72458,39.55,-97.65,445.0,CONCORDIA       ,KS,US,METAR
KCNM,,32.33,-104.25,993.0,CARLSBAD        ,NM,US,METAR TAF
KCNO,,33.98,-117.62,191.0,CHINO           ,CA,US,METAR
KCNU,,37.67,-95.48,301.0,CHANUTE         ,KS,US,METAR TAF
KCNW,,31.63,-97.07,139.0,WACO/TSTI       ,TX,US,METAR
KCNY,,38.77,-109.75,1392.0,MOAB            ,UT,US,METAR TAF
KCOD,72670,44.52,-109.02,1550.0,CODY            ,WY,US,METAR TAF
KCOE,,47.77,-116.82,693.0,COEUR D'ALENE   ,ID,US,METAR TAF
KCOF,74795,28.23,-80.6,1.0,PATRICK AFB/COCO,FL,US,METAR TAF
KCOI,,28.33,-80.68,1.0,MERRITT ISLAND  ,FL,US,METAR
KCOM,,31.83,-99.4,516.0,COLEMAN MUNI    ,TX,US,METAR
KCON,72605,43.2,-71.5,102.0,CONCORD         ,NH,US,METAR TAF
KCOQ,,46.7,-92.5,390.0,CLOQUET         ,MN,US,METAR
KCOS,72466,38.82,-104.68,1886.0,COLORADO SPRINGS,CO,US,METAR TAF
KCOT,,28.45,-99.22,144.0,COTULLA         ,TX,US,METAR TAF
KCOU,72445,38.82,-92.22,272.0,COLUMBIA        ,MO,US,METAR TAF
KCPC,,34.28,-78.72,27.0,WHITEVILLE      ,NC,US,METAR
KCPF,,37.38,-83.27,382.0,HAZARD          ,KY,US,METAR
KCPK,,36.67,-76.32,4.0,CHESAPEAKE      ,VA,US,METAR
KCPR,72569,42.9,-106.47,1623.0,CASPER          ,WY,US,METAR TAF
KCPS,,38.53,-90.15,125.0,CAHOKIA/ST LOUIS,IL,US,METAR TAF
KCPT,,32.35,-97.43,260.0,CLEBURNE        ,TX,US,METAR
KCPU,,38.15,-120.65,400.0,SAN ANDREAS     ,CA,US,METAR
KCPW,,37.45,-106.8,3570.0,WOLF CREEK PASS ,CO,US,METAR
KCQB,,35.72,-96.82,298.0,CHANDLER        ,OK,US,METAR
KCQC,,35.0,-105.67,2163.0,CLINES CORNERS  ,NM,US,METAR
KCQF,,30.47,-87.88,21.0,FAIRHOPE        ,AL,US,METAR
KCQM,,47.82,-92.68,406.0,COOK MUNI AIRPOR,MN,US,METAR
KCQT,,34.02,-118.28,51.0,LOS ANGELES     ,CA,US,METAR
KCQV,,48.55,-117.88,573.0,COLVILLE MUNICIP,WA,US,METAR
KCQW,,34.72,-79.95,67.0,CHERAW          ,SC,US,METAR
KCQX,,41.68,-70.0,17.0,CHATHAM         ,MA,US,METAR
KCRE,,33.82,-78.72,9.0,NORTH MYRTLE BEA,SC,US,METAR TAF
KCRG,,30.33,-81.52,12.0,JACKSONVIL/CRAIG,FL,US,METAR TAF
KCRH,,28.92,-93.3,34.0,W CAMERON 368A  ,TX,US,METAR
KCRP,72251,27.77,-97.5,11.0,CORPUS CHRISTI  ,TX,US,METAR NEXRAD rawinsonde WFO_office TAF
KCRQ,,33.13,-117.28,96.0,CARLSBAD        ,CA,US,METAR TAF
KCRS,,32.03,-96.4,136.0,CORSICANA       ,TX,US,METAR
KCRV,,40.05,-105.58,3538.0,CORONA PASS     ,CO,US,METAR
KCRW,72414,38.38,-81.58,278.0,CHARLESTON      ,WV,US,METAR TAF
KCRX,,34.92,-88.6,128.0,CORINTH/R TURNER,MS,US,METAR
KCSG,,32.52,-84.95,120.0,COLUMBUS        ,GA,US,METAR TAF
KCSM,,35.35,-99.2,586.0,CLINTON         ,OK,US,METAR TAF
KCSN,,38.63,-77.87,148.0,CASSANOVA VOR   ,VA,US
KCSQ,,41.02,-94.37,394.0,CRESTON         ,IA,US,METAR
KCSV,,35.95,-85.08,569.0,CROSSVILLE      ,TN,US,METAR TAF
KCTB,,48.6,-112.37,1172.0,CUT BANK        ,MT,US,METAR TAF
KCTD,,41.72,-107.78,2146.0,CONTINENTAL DIV ,WY,US,METAR
KCTJ,,33.63,-85.15,351.0,CARROLLTON/GRAY ,GA,US,METAR
KCTP,,40.85,-77.85,389.0,STATE COLLEG/WFO,PA,US,WFO_office
KCTY,72212,29.63,-83.1,12.0,CROSS CITY      ,FL,US,METAR
KCTZ,,34.98,-78.37,43.0,CLINTON         ,NC,US,METAR
KCUB,,33.97,-81.0,55.0,COLUMBIA-OWENS  ,SC,US,METAR TAF
KCUH,,35.95,-96.77,274.0,CUSHING         ,OK,US,METAR
KCUL,,38.08,-88.12,116.0,CARMI MUNI      ,IL,US,METAR
KCUT,,43.73,-103.62,1700.0,CUSTER          ,SD,US,METAR
KCVB,,29.35,-98.85,234.0,CASTROVILLE MUNI,TX,US,METAR
KCVC,,33.63,-83.85,240.0,COVINGTON       ,GA,US,METAR
KCVG,72421,39.05,-84.67,264.0,COVINGTON       ,KY,US,METAR TAF
KCVH,,36.9,-121.42,68.0,HOLLISTER MUNI  ,CA,US,METAR
KCVN,,34.42,-103.07,1278.0,CLOVIS MUNI     ,NM,US,METAR
KCVO,,44.5,-123.28,75.0,CORVALLIS MUNI A,OR,US,METAR
KCVS,,34.37,-103.32,1305.0,CANNON AFB/CLOVI,NM,US,METAR TAF
KCVW,,29.78,-93.3,1.0,CAMERON         ,LA,US,METAR
KCVX,,45.3,-85.27,196.0,CHARLEVOIX      ,MI,US,METAR
KCWA,,44.78,-89.67,387.0,MOSINEE/CENTRAL ,WI,US,METAR TAF
KCWC,,33.85,-98.48,304.0,KICKAPOO        ,TX,US,METAR
KCWF,,30.22,-93.15,4.0,CHENAULT/LK CHAS,LA,US,METAR
KCWI,,41.82,-90.32,212.0,CLINTON MUNI    ,IA,US,METAR
KCWK,,30.38,-97.53,181.0,CENTEX (AUSTIN) ,TX,US
KCWN,,38.75,-104.85,2040.0,CHEYENNE MOUNTAI,CO,US,METAR
KCWV,,32.2,-81.87,32.0,CLAXTON/EVANS CO,GA,US,METAR
KCXE,,36.78,-78.5,154.0,CHASE CITY      ,VA,US,METAR
KCXL,,32.67,-115.5,1.0,CALEXICO INTL   ,CA,US,METAR
KCXO,,30.35,-95.42,69.0,CONROE          ,TX,US,METAR TAF
KCXP,,39.18,-119.73,1431.0,CARSON CITY     ,NV,US,METAR TAF
KCXU,,31.22,-84.23,48.0,CAMILLA         ,GA,US,METAR
KCXW,,35.02,-92.55,84.0,CANTRELL        ,AR,US,METAR
KCXX,,44.52,-73.17,97.0,COLCHESTER/88D  ,VT,US,NEXRAD
KCXY,,40.22,-76.85,102.0,HARRISBURG      ,PA,US,METAR
KCYD,,28.17,-89.22,30.0,MISS CANYAN 807 ,LA,US,METAR
KCYN,,39.82,-74.43,70.0,COYLE VOR       ,NJ,US
KCYO,,39.52,-82.98,209.0,CIRCLEVILLE     ,OH,US,METAR
KCYS,72564,41.15,-104.8,1868.0,CHEYENNE        ,WY,US,METAR NEXRAD WFO_office TAF
KCZG,,42.08,-76.1,254.0,ENDICOTT/TRI-CIT,NY,US,METAR
KCZI,,44.0,-106.43,1550.0,CRAZY WOMAN/VOR ,WY,US
KCZK,,45.67,-121.87,46.0,CASCADE LOCKS ST,OR,US,METAR
KCZL,,34.47,-84.93,197.0,CALHOUN         ,GA,US,METAR
KCZQ,,36.88,-119.82,104.0,FRESNO(VOR)     ,CA,US
KCZT,,28.52,-99.82,176.0,CARRIZO SPRINGS ,TX,US,METAR
KCZZ,,32.63,-116.47,805.0,CAMPO           ,CA,US,METAR
KD07,,45.03,-102.02,786.0,FAITH           ,SD,US,METAR
KD25,,46.12,-89.88,490.0,MANITOWISH WATER,WI,US,METAR
KD38,,42.9,-77.32,248.0,CANANDAIGUA     ,NY,US,METAR
KD39,,45.7,-94.93,378.0,SAUK CENTRE     ,MN,US,METAR
KD50,,48.93,-103.3,591.0,CROSBY          ,ND,US,METAR
KD55,,48.75,-98.4,488.0,LANGDON/ROBERTSN,ND,US,METAR
KD57,,46.82,-101.87,636.0,GLEN ULLIN      ,ND,US,METAR
KD60,,48.38,-102.9,682.0,TIOGA           ,ND,US,METAR
KD73,,33.78,-83.7,254.0,MONROE          ,GA,US,METAR
KD95,,43.07,-83.27,253.0,LAPEER          ,MI,US,METAR
KDAA,,38.72,-77.17,17.0,FORT BELVOIR/DAV,VA,US,METAR TAF
KDAB,,29.18,-81.07,8.0,DAYTONA BEACH   ,FL,US,METAR TAF
KDAG,,34.85,-116.78,584.0,DAGGETT         ,CA,US,METAR TAF
KDAL,,32.85,-96.85,148.0,DALLAS/LOVE FLD ,TX,US,METAR TAF
KDAN,,36.57,-79.33,170.0,DANVILLE        ,VA,US,METAR TAF
KDAW,,43.28,-70.92,100.0,ROCHESTER       ,NH,US,METAR
KDAX,,38.5,-121.68,9.0,SACRAMENTO/88D  ,CA,US,NEXRAD
KDAY,72429,39.9,-84.22,303.0,DAYTON          ,OH,US,METAR TAF
KDBL,,39.43,-106.9,3584.0,RED TABLE VOR   ,CO,US
KDBN,,32.57,-82.98,90.0,DUBLIN          ,GA,US,METAR
KDBQ,72547,42.4,-90.7,317.0,DUBUQUE         ,IA,US,METAR TAF
KDBS,,44.08,-112.22,1638.0,DUBIOS (VOR)    ,ID,US
KDCA,72405,38.85,-77.03,4.0,WASHINGTON/NATL ,DC,US,METAR TAF
KDCM,,34.78,-81.2,191.0,CHESTER CATAWBA ,SC,US,METAR
KDCU,,34.65,-86.95,180.0,DECATUR         ,AL,US,METAR
KDCY,,38.7,-87.13,143.0,DAVIESS COUNTY  ,IN,US,METAR
KDDC,72451,37.77,-99.97,786.0,DODGE CITY      ,KS,US,METAR NEXRAD rawinsonde WFO_office TAF
KDDH,,42.9,-73.25,241.0,BENNINGTON      ,VT,US,METAR
KDDY,,43.08,-106.28,1621.0,CASPER(VOR)     ,WY,US
KDEC,,39.83,-88.87,205.0,DECATUR         ,IL,US,METAR TAF
KDED,,29.07,-81.28,21.0,DELAND          ,FL,US,METAR
KDEH,,43.27,-91.73,348.0,DECORAH         ,IA,US,METAR
KDEN,72565,39.85,-104.65,1656.0,DENVER (DIA)    ,CO,US,METAR TAF
KDEQ,,34.05,-94.4,107.0,DE QUEEN        ,AR,US,METAR
KDET,,42.4,-83.02,190.0,DETROIT/CITY AIR,MI,US,METAR TAF
KDEW,,47.97,-117.43,672.0,DEER PARK       ,WA,US,METAR
KDFI,,41.33,-84.43,215.0,DEFIANCE        ,OH,US,METAR
KDFW,72259,32.9,-97.02,168.0,DALLAS/FT WORTH ,TX,US,METAR TAF
KDFX,,29.27,-100.28,345.0,LAUGHLIN AFB/88D,TX,US,NEXRAD
KDGW,,42.8,-105.38,1503.0,DOUGLAS         ,WY,US,METAR
KDGX,,32.28,-89.98,186.0,BRANDON/JACKSON ,MS,US,NEXRAD WFO_office
KDHN,,31.32,-85.45,113.0,DOTHAN          ,AL,US,METAR TAF
KDHS,,44.22,-106.1,1241.0,DEAD HORSE      ,WY,US,METAR
KDHT,,36.02,-102.55,1217.0,DALHART         ,TX,US,METAR TAF
KDIJ,,43.75,-111.1,1896.0,DRIGGS REED MEM ,ID,US,METAR TAF
KDIK,,46.8,-102.8,788.0,DICKINSON       ,ND,US,METAR TAF
KDIX,,39.95,-74.42,45.0,MANCHESTER 88D  ,NJ,US,NEXRAD
KDKB,,41.93,-88.7,277.0,DE KALB         ,IL,US,METAR
KDKK,,42.5,-79.28,205.0,DUNKIRK         ,NY,US,METAR
KDKR,,31.3,-95.4,105.0,CROCKETT        ,TX,US,METAR
KDKX,,35.97,-83.87,253.0,KNOXVILLE DOWNTO,TN,US,METAR
KDLF,,29.37,-100.78,328.0,LAUGHLIN AFB    ,TX,US,METAR TAF
KDLH,72745,46.85,-92.2,434.0,DULUTH          ,MN,US,METAR NEXRAD WFO_office TAF
KDLL,,43.52,-89.77,297.0,DELLS/BARABOO   ,WI,US,METAR
KDLN,,45.25,-112.55,1586.0,DILLON          ,MT,US,METAR
KDLO,,35.75,-119.23,97.0,DELANO          ,CA,US,METAR
KDLP,,29.12,-89.55,31.0,WEST DELTA 27A  ,MS,US,METAR
KDLS,,45.62,-121.17,71.0,THE DALLES      ,OR,US,METAR TAF
KDLZ,,40.28,-83.12,287.0,DELAWARE        ,OH,US,METAR
KDMA,,32.17,-110.88,804.0,DAVIS/TUCSON    ,AZ,US,METAR TAF
KDMH,,39.28,-76.62,4.0,BALTIMORE/DWNTWN,MD,US,METAR
KDMN,,32.27,-107.72,1310.0,DEMING          ,NM,US,METAR TAF
KDMO,,38.72,-93.17,271.0,SEDALIA         ,MO,US,METAR
KDMW,,39.6,-77.0,239.0,CARROLL CNTY    ,MD,US,METAR
KDMX,,41.73,-93.72,299.0,JOHNSTON/DESMOIN,IA,US,NEXRAD WFO_office
KDNA,,31.88,-106.7,1254.0,SANTA TERESA    ,NM,US,METAR
KDNJ,,44.77,-116.22,2433.0,MCCALL (VOR)    ,ID,US
KDNK,,31.12,-93.15,114.0,SELF STRIP/POLK ,LA,US,METAR
KDNL,,33.47,-82.03,126.0,AUGUSTA/DANIEL  ,GA,US,METAR TAF
KDNN,,34.72,-84.87,216.0,DALTON          ,GA,US,METAR
KDNR,72469,39.75,-104.87,1608.0,DENVER/STAPLETON,CO,US,rawinsonde
KDNS,,41.98,-95.37,382.0,DENISON         ,IA,US,METAR
KDNV,,40.2,-87.6,208.0,DANVILLE        ,IL,US,METAR
KDOV,,39.12,-75.47,6.0,DOVER AFB       ,DE,US,METAR TAF
KDOX,,38.83,-75.43,15.0,DOVER/ELLENDALE ,DE,US,NEXRAD
KDPA,,41.88,-88.25,228.0,CHICAGO/DUPAGE  ,IL,US,METAR TAF
KDPG,74003,40.2,-112.93,1324.0,DUGWAY PRVG GROU,UT,US,METAR
KDPL,,35.0,-77.97,39.0,KENANSVILLE/DUPL,NC,US,METAR
KDPR,,45.07,-101.7,771.0,DUPREE          ,SD,US
KDQH,,31.48,-82.87,76.0,DOUGLAS MUNI    ,GA,US,METAR
KDQU,74752,34.1,-94.28,195.0,DEQUEEN PROFILER,AR,US,wind_profiler
KDRA,72387,36.62,-116.03,988.0,DESERT R/MERCURY,NV,US,METAR TAF
KDRC,,42.83,-105.87,1543.0,DEER CREEK      ,WY,US,METAR
KDRI,,30.83,-93.33,59.0,DERIDDER/FSS    ,LA,US,METAR
KDRK,,34.7,-112.48,1524.0,PRESCOTT(VOR)   ,AZ,US
KDRM,,46.0,-83.75,201.0,DRUMMOND IS     ,MI,US,METAR
KDRO,,37.15,-107.77,2021.0,DURANGO         ,CO,US,METAR TAF
KDRT,72261,29.37,-100.92,303.0,DEL RIO         ,TX,US,METAR rawinsonde TAF
KDSD,,44.25,-121.3,938.0,REDMOND(VOR)    ,OR,US
KDSF,,28.35,-88.27,40.0,MISSISSIPPI CANY,LA,US,METAR
KDSM,72546,41.53,-93.67,286.0,DES MOINES      ,IA,US,METAR TAF
KDSV,,42.57,-77.72,195.0,DANSVILLE       ,NY,US,METAR
KDTA,,39.38,-112.5,1452.0,DELTA           ,UT,US,METAR
KDTL,,46.82,-95.88,425.0,DETROIT LAKES   ,MN,US,METAR
KDTN,,32.55,-93.75,53.0,SHREVEPORT/DWNTN,LA,US,METAR TAF
KDTO,,33.2,-97.2,199.0,DENTON          ,TX,US,METAR
KDTS,,30.4,-86.47,5.0,DESTIN          ,FL,US,METAR
KDTW,72537,42.23,-83.33,192.0,DETROIT/WAYNE   ,MI,US,METAR TAF
KDTX,72632,42.7,-83.47,327.0,DETROIT/WHITE LK,MI,US,NEXRAD rawinsonde WFO_office
KDUA,,33.95,-96.4,209.0,DURANT          ,OK,US,METAR
KDUB,,43.55,-109.68,2205.0,DUBOIS MUNI     ,WY,US,METAR
KDUC,,34.47,-97.97,339.0,DUNCAN          ,OK,US,METAR
KDUG,,31.47,-109.6,1260.0,DOUGLAS BISBEE  ,AZ,US,METAR TAF
KDUH,,41.73,-83.65,203.0,LAMBERTVILLE    ,MI,US,METAR
KDUJ,,41.17,-78.9,552.0,DU BOIS         ,PA,US,METAR TAF
KDUX,,35.85,-102.02,1129.0,DUMAS/MOORE CTY ,TX,US,METAR
KDVC,,37.8,-108.92,2131.0,DOVE CREEK      ,CO,US
KDVK,,37.58,-84.77,309.0,DANVILLE        ,KY,US,METAR
KDVL,,48.12,-98.92,439.0,DEVILS LAKE     ,ND,US,METAR TAF
KDVN,,41.62,-90.58,227.0,DAVENPORT/QUAD C,IA,US,METAR NEXRAD rawinsonde WFO_office
KDVO,,38.15,-122.55,1.0,NOVATO/GNOSS FLD,CA,US,METAR
KDVP,,43.98,-95.78,493.0,SLAYTON         ,MN,US,METAR
KDVT,,33.68,-112.07,454.0,PHOENIX/DEER VLY,AZ,US,METAR TAF
KDWA,,38.58,-121.85,28.0,DAVIS YOLO CNTY ,CA,US,METAR
KDWH,,30.07,-95.55,46.0,HOUSTON/DW HOOKS,TX,US,METAR TAF
KDWU,,38.55,-82.73,165.0,ASHLAND         ,KY,US,METAR TAF
KDWX,,41.03,-107.5,1974.0,DIXON           ,WY,US,METAR
KDXO,,42.22,-83.37,215.0,DETROIT/VOR     ,MI,US
KDXR,,41.37,-73.48,138.0,DANBURY         ,CT,US,METAR
KDXX,,44.98,-96.18,327.0,MADISON         ,MN,US,METAR
KDXZ,,37.08,-113.6,896.0,SAINT GEORGE    ,UT,US,METAR TAF
KDYA,,32.47,-87.95,33.0,DEMOPOLIS       ,AL,US,METAR
KDYB,,33.07,-80.28,15.0,SUMMERVILLE     ,SC,US,METAR
KDYL,,40.33,-75.12,121.0,DOYLESTOWN      ,PA,US,METAR
KDYR,,36.0,-89.4,98.0,DYERSBURG       ,TN,US,METAR
KDYS,,32.42,-99.83,544.0,DYESS AFB/ABILEN,TX,US,METAR TAF
KDYT,,46.72,-92.03,185.0,DULUTH (SKY HARB,MN,US,METAR
KDYX,,32.53,-99.25,462.0,SHACKELFORD/DYES,TX,US,NEXRAD
KDZB,,30.53,-98.37,329.0,HORSESHOE BAY   ,TX,US,METAR
KDZJ,,34.85,-84.0,578.0,BLAIRSVILLE     ,GA,US,METAR
KE11,,32.33,-102.53,966.0,ANDREWS         ,TX,US,METAR
KE12,,28.07,-92.7,1.0,E CAMERON 346   ,LA,US,METAR
KE16,,37.08,-121.6,84.0,SAN MARTIN      ,CA,US,METAR
KE33,,36.88,-106.57,2393.0,CHAMA (AWRS)    ,NM,US,METAR
KE38,,30.38,-103.68,1372.0,ALPINE-CASPARIS ,TX,US,METAR
KE41,,31.2,-101.47,825.0,BIG LAKE        ,TX,US,METAR
KE42,,36.22,-101.2,942.0,SPEARMAN        ,TX,US,METAR
KE80,,34.65,-106.83,1582.0,BELEN           ,NM,US,METAR
KEAN,,42.05,-104.93,1452.0,WHEATLAND       ,WY,US,METAR
KEAR,,40.72,-99.0,649.0,KEARNEY MUNI    ,NE,US,METAR TAF
KEAT,,47.4,-120.2,375.0,WENATCHEE       ,WA,US,METAR TAF
KEAU,,44.87,-91.48,271.0,EAU CLAIRE      ,WI,US,METAR TAF
KEAX,,38.82,-94.27,305.0,PLEASANT HILL/KC,MO,US,NEXRAD WFO_office
KEBA,,34.1,-82.82,180.0,ELBERTON PATZ F ,GA,US,METAR
KEBG,,26.45,-98.13,21.0,EDINBURG INTL   ,TX,US,METAR
KEBS,,42.43,-93.87,340.0,WEBSTER CITY    ,IA,US,METAR
KECG,,36.27,-76.18,2.0,ELIZABETH CITY  ,NC,US,METAR TAF
KECP,,30.35,-85.8,17.0,PANAMA CITY     ,FL,US,METAR TAF
KECS,,43.88,-104.32,1273.0,NEWCASTLE MONDEL,WY,US,METAR
KECU,,29.95,-100.17,725.0,ROCKSPRINGS     ,TX,US,METAR
KED0,,43.28,-103.88,1136.0,EDGEMONT US18   ,SD,US,METAR
KEDC,,30.4,-97.57,184.0,AUSTIN EXEC     ,TX,US,METAR
KEDE,,36.03,-76.57,4.0,EDENTON         ,NC,US,METAR
KEDJ,,40.37,-83.82,341.0,BELLEFONTAINE   ,OH,US,METAR
KEDN,,31.3,-85.9,103.0,ENTERPRISE      ,AL,US,METAR
KEDU,,38.53,-121.78,20.0,DAVIS           ,CA,US,METAR
KEDW,72381,34.9,-117.87,698.0,EDWARDS AFB     ,CA,US,METAR rawinsonde TAF
KEED,,34.77,-114.62,271.0,NEEDLES         ,CA,US,METAR TAF
KEEN,,42.88,-72.27,143.0,KEENE/DILLANT   ,NH,US,METAR
KEEO,,40.05,-107.88,1957.0,MEEKER          ,CO,US,METAR
KEET,72230,33.18,-86.78,172.0,ALABASTER       ,AL,US,METAR TAF
KEFC,,44.72,-103.87,982.0,BELLE FOURCHE   ,SD,US,METAR
KEFD,,29.6,-95.17,9.0,HOUSTON/ELLINGTO,TX,US,METAR TAF
KEFK,,44.88,-72.23,282.0,NEWPORT STATE   ,VT,US,METAR TAF
KEFT,,42.62,-89.6,332.0,MONROE          ,WI,US,METAR
KEGC,,25.85,-81.38,2.0,EVERGLADES CITY ,FL,US,METAR
KEGE,,39.63,-106.92,1993.0,EAGLE CO. REGION,CO,US,METAR TAF
KEGI,,30.65,-86.52,59.0,DUKE FLD/EGLIN  ,FL,US,METAR TAF
KEGT,,37.32,-97.38,387.0,WELLINGTON      ,KS,US,METAR
KEGV,,45.93,-89.27,499.0,EAGLE RIVER     ,WI,US,METAR
KEHA,,37.0,-101.87,1103.0,ELKHART         ,KS,US,METAR
KEHC,,28.43,-92.88,31.0,E CAMERON278OILP,LA,US,METAR
KEHF,,35.48,-119.1,151.0,BAKERSFIELD(VOR),CA,US
KEHO,,35.25,-81.6,261.0,SHELBY MUNI     ,NC,US,METAR
KEHR,,37.82,-87.67,117.0,HENDERSON CITY  ,KY,US,METAR
KEHY,,41.73,-106.47,2239.0,ELK MOUNTAIN    ,WY,US,METAR
KEIC,,32.77,-93.82,80.0,SHREVEPORT(VOR) ,LA,US
KEIK,,40.02,-105.05,1551.0,ERIE MUNI       ,CO,US,METAR
KEIR,,28.63,-91.48,28.0,EUGENE I 215OILP,LA,US,METAR
KEKA,72594,40.8,-124.1,13.0,EUREKA/MURRAY   ,CA,US,METAR WFO_office
KEKE,,28.5,-91.58,31.0,EUGENE ISLAND 25,LA,US,METAR
KEKM,,41.72,-86.0,236.0,ELKHART MUNICIPA,IN,US,METAR
KEKN,72417,38.88,-79.85,596.0,ELKINS          ,WV,US,METAR TAF
KEKO,,40.82,-115.78,1541.0,ELKO            ,NV,US,METAR TAF
KEKQ,,36.85,-84.85,291.0,MONTICELLO/WAYNE,KY,US,METAR
KEKS,,45.27,-111.65,1636.0,ENNIS BIG SKY   ,MT,US,METAR TAF
KEKX,,37.68,-85.92,234.0,ELIZABETHTOWN   ,KY,US,METAR
KEKY,,33.32,-86.93,213.0,BESSEMER        ,AL,US,METAR
KEL0,,44.12,-103.08,939.0,ELLSWORTH I90   ,SD,US,METAR
KELA,,29.6,-96.32,56.0,EAGLE LAKE      ,TX,US,METAR
KELD,,33.22,-92.82,76.0,EL DORADO       ,AR,US,METAR TAF
KELK,,35.43,-99.4,603.0,ELK CITY        ,OK,US,METAR
KELM,,42.15,-76.9,287.0,ELMIRA          ,NY,US,METAR TAF
KELN,,47.03,-120.53,532.0,ELLENSBURG      ,WA,US,METAR
KELO,,47.82,-91.83,438.0,ELY MUNI        ,MN,US,METAR
KELP,72270,31.82,-106.35,1205.0,EL PASO         ,TX,US,METAR TAF
KELY,72486,39.3,-114.85,1906.0,ELY             ,NV,US,METAR TAF
KELZ,,42.1,-77.98,639.0,WELLSVILLE      ,NY,US,METAR
KEMK,,27.82,-94.32,20.0,E BREAKS 165    ,TX,US,METAR
KEMM,,41.82,-110.55,2219.0,KEMMERER        ,WY,US,METAR
KEMP,,38.33,-96.2,366.0,EMPORIA         ,KS,US,METAR
KEMT,,34.08,-118.03,84.0,EL MONTE        ,CA,US,METAR
KEMV,,36.68,-77.48,35.0,EMPORIA         ,VA,US,METAR
KEMX,,31.9,-110.63,1586.0,PIMA COUNTY/88D ,AZ,US,NEXRAD
KEND,,36.33,-97.92,392.0,ENID/VANCE AFB  ,OK,US,METAR TAF
KENE,,43.43,-70.62,121.0,KENNEBUNKPORT   ,ME,US
KENI,,39.05,-123.27,187.0,UKIAH(VOR)      ,CA,US
KENL,,38.52,-89.1,161.0,CENTRALIA       ,IL,US,METAR
KENV,72581,40.72,-114.02,1291.0,WENDOVER (AUT)  ,UT,US,METAR TAF
KENW,,42.6,-87.93,222.0,KENOSHA         ,WI,US,METAR TAF
KENX,,42.58,-74.07,557.0,ALBANY/E. BERNE ,NY,US,NEXRAD
KEOE,,34.32,-81.63,166.0,NEWBERRY        ,SC,US,METAR
KEOK,,40.47,-91.42,206.0,KEOKUK MUNI     ,IA,US,METAR
KEOS,,36.82,-94.4,380.0,NEOSHO          ,MO,US,METAR
KEOX,,31.47,-85.47,132.0,FT RUCKER 88D   ,AL,US,NEXRAD
KEPH,,47.3,-119.52,382.0,EPHRATA         ,WA,US,METAR TAF
KEPM,72608,44.92,-67.02,14.0,EASTPORT        ,ME,US,METAR
KEPZ,72364,31.87,-106.7,1251.0,SANTA TERESA/88D,NM,US,NEXRAD rawinsonde WFO_office
KEQA,,37.78,-96.82,422.0,ELDORADO        ,KS,US,METAR
KEQY,,35.02,-80.62,205.0,MONROE          ,NC,US,METAR
KERI,72526,42.08,-80.18,222.0,ERIE            ,PA,US,METAR TAF
KERV,,29.98,-99.08,483.0,KERRVILLE       ,TX,US,METAR
KERY,,46.3,-85.45,261.0,NEWBERRY        ,MI,US,METAR
KESC,72648,45.72,-87.08,180.0,ESCANABA        ,MI,US,METAR
KESF,,31.4,-92.28,27.0,ALEXANDRIA      ,LA,US,METAR TAF
KESN,,38.8,-76.07,14.0,EASTON/NEWNAM   ,MD,US,METAR
KEST,,43.4,-94.75,401.0,ESTHERVILLE     ,IA,US,METAR
KESX,,35.7,-114.88,1483.0,LAS VEGAS/NELSON,NV,US,NEXRAD
KETB,,43.42,-88.13,269.0,WEST BEND       ,WI,US,METAR
KETC,,35.93,-77.55,15.0,TARBORO         ,NC,US,METAR
KETH,,45.78,-96.55,309.0,WHEATON NDB     ,MN,US,METAR
KETN,,32.42,-98.82,445.0,EASTLAND        ,TX,US,METAR
KETX,,40.58,-75.68,250.0,EAST TEXAS VOR  ,PA,US
KEUF,,31.95,-85.13,87.0,EUFAULA         ,AL,US,METAR
KEUG,72693,44.13,-123.22,109.0,EUGENE          ,OR,US,METAR TAF
KEUL,,43.63,-116.62,741.0,CALDWELL        ,ID,US,METAR TAF
KEVB,,29.05,-80.95,2.0,NEW SMYRNA BEACH,FL,US,METAR
KEVM,,47.42,-92.5,419.0,EVELETH MUNI    ,MN,US,METAR
KEVU,,40.35,-94.92,351.0,MARYVILLE       ,MO,US,METAR
KEVV,72432,38.05,-87.52,123.0,EVANSVILLE      ,IN,US,METAR TAF
KEVW,,41.27,-111.03,2178.0,EVANSTON        ,WY,US,METAR TAF
KEVX,,30.57,-85.92,43.0,EGLIN AFB/88D   ,FL,US,NEXRAD
KEWB,,41.68,-70.95,22.0,NEW BEDFORD     ,MA,US,METAR
KEWC,,40.83,-80.22,407.0,ELLWOOD CITY VOR,PA,US
KEWK,,38.05,-97.27,468.0,NEWTON          ,KS,US,METAR
KEWN,,35.07,-77.05,3.0,NEW BERN        ,NC,US,METAR TAF
KEWR,72502,40.68,-74.17,2.0,NEWARK          ,NJ,US,METAR TAF
KEWX,,29.7,-98.03,193.0,NEW BRAUNFEL 88D,TX,US,NEXRAD WFO_office
KEXX,,35.78,-80.3,221.0,DAVIDSON CTY AP ,NC,US,METAR
KEYE,,39.83,-86.3,248.0,INDIANAPOLIS    ,IN,US,METAR
KEYF,,34.6,-78.58,39.0,ELIZABETHTOWN   ,NC,US,METAR
KEYW,72201,24.55,-81.75,1.0,KEY WEST        ,FL,US,METAR TAF
KEYX,,35.1,-117.57,840.0,EDWARDS AFB/88D ,CA,US,NEXRAD
KEZF,,38.27,-77.45,26.0,FREDERICKSB/SHAN,VA,US,METAR
KEZM,,32.22,-83.13,86.0,EASTMAN         ,GA,US,METAR
KEZP,,28.22,-92.8,30.0,E CAMERON 321A  ,LA,US,METAR
KEZS,,44.78,-88.57,247.0,SHAWANO MUNI    ,WI,US,METAR
KEZZ,,39.72,-94.28,317.0,CAMERON         ,MO,US,METAR
KF00,,33.62,-96.18,189.0,BONHAM          ,TX,US,METAR
KF05,,34.23,-99.28,384.0,VERNON WILBARGER,TX,US,METAR
KF17,,31.83,-94.15,93.0,CENTER          ,TX,US,METAR
KF44,,32.17,-95.83,137.0,ATHENS          ,TX,US,METAR
KF45,,26.85,-80.22,6.0,NORTH PALM BEACH,FL,US,METAR
KF46,,32.93,-96.43,175.0,ROCKWALL        ,TX,US,METAR
KF70,,33.57,-117.13,406.0,MURRIETA/TEMECUL,CA,US,METAR
KFAF,,37.13,-76.62,3.0,FT EUSTIS/FELKER,VA,US,METAR TAF
KFAM,,37.77,-90.42,276.0,FARMINGTON      ,MO,US,METAR
KFAR,72753,46.9,-96.82,276.0,FARGO           ,ND,US,METAR TAF
KFAT,72389,36.78,-119.72,102.0,FRESNO          ,CA,US,METAR TAF
KFAY,,34.98,-78.88,57.0,FAYETTEVILLE    ,NC,US,METAR TAF
KFBC,,41.02,-83.67,247.0,FLAG CITY       ,OH,US,METAR TAF
KFBG,74693,35.12,-78.92,69.0,FORT BRAGG/SIMMO,NC,US,METAR TAF
KFBL,,44.33,-93.32,318.0,FARIBAULT MUNI  ,MN,US,METAR
KFBR,,41.4,-110.4,2140.0,FORT BRIDGER    ,WY,US,METAR
KFCH,,36.72,-119.82,85.0,FRESNO CHANDLER ,CA,US,METAR
KFCI,,37.4,-77.52,63.0,RICHMOND/CHESTER,VA,US,METAR
KFCM,,44.83,-93.47,276.0,MNPLS/FLYING CLD,MN,US,METAR TAF
KFCS,72468,38.67,-104.77,1789.0,FORT CARSON     ,CO,US,METAR TAF
KFCX,,37.02,-80.27,874.0,ROANOKE/FLOYD CY,VA,US,NEXRAD
KFDK,,39.42,-77.37,82.0,FREDERICK       ,MD,US,METAR
KFDR,,34.35,-98.98,378.0,FREDERICK/ALTUS ,OK,US,METAR NEXRAD
KFDW,,34.32,-81.12,174.0,WINNSBORO       ,SC,US,METAR
KFDX,,34.63,-103.62,1417.0,CANNON AFB/88D  ,NM,US,NEXRAD
KFDY,,41.02,-83.67,247.0,FINDLAY         ,OH,US,METAR TAF
KFED,,45.93,-98.57,427.0,FREDERICK       ,SD,US,METAR
KFEP,,42.25,-89.58,255.0,FREEPORT        ,IL,US,METAR
KFET,,41.45,-96.52,366.0,FREMONT MUNI ARP,NE,US,METAR
KFEW,,41.13,-104.87,1877.0,WARREN AIR BASE ,WY,US,METAR
KFFA,,36.02,-75.67,2.0,KILL DEVIL HILLS,NC,US,METAR
KFFC,,33.35,-84.57,242.0,PEACHTREE CITY  ,GA,US,METAR NEXRAD rawinsonde WFO_office
KFFL,,41.05,-91.97,240.0,FAIRFIELD       ,IA,US,METAR
KFFM,72656,46.28,-96.15,362.0,FERGUS FALLS    ,MN,US,METAR
KFFO,74570,39.83,-84.03,250.0,WRIGHT PATTERSON,OH,US,METAR TAF
KFFT,,38.18,-84.9,235.0,FRANKFORT       ,KY,US,METAR
KFFX,,43.43,-86.0,234.0,FREMONT         ,MI,US,METAR
KFFZ,,33.47,-111.72,420.0,MESA/FALCON FLD ,AZ,US,METAR
KFGF,,46.9,-96.8,274.0,FARGO/GRAND FORK,ND,US,WFO_office
KFGN,,49.32,-94.9,327.0,FLAG ISLAND     ,MN,US,METAR
KFGX,,38.55,-83.75,279.0,FLEMINGSBURG    ,KY,US,METAR
KFGZ,72376,35.23,-111.82,2181.0,FLAGSTAFF/BELLEM,AZ,US,rawinsonde WFO_office
KFHB,,30.62,-81.47,4.0,FERNANDINA BEACH,FL,US,METAR
KFHR,,48.52,-123.03,34.0,FRIDAY HARBOR   ,WA,US,METAR
KFHU,72273,31.58,-110.35,1424.0,FORT HUACHUCA   ,AZ,US,METAR TAF
KFIG,,41.05,-78.42,461.0,CLEARFIELD      ,PA,US,METAR
KFIN,,29.47,-81.2,10.0,FLAGLER CNTY    ,FL,US,METAR
KFIR,,41.3,-110.77,2294.0,FIRST DIVIDE    ,WY,US,METAR
KFIT,,42.55,-71.75,102.0,FITCHBURG       ,MA,US,METAR
KFKA,,43.68,-92.17,388.0,PRESTON         ,MN,US,METAR
KFKL,,41.37,-79.87,468.0,FRANKLIN        ,PA,US,METAR TAF
KFKN,,36.7,-76.9,9.0,FRANKLIN/J B ROS,VA,US,METAR
KFKR,,40.27,-86.57,260.0,FRANKFORT       ,IN,US,METAR
KFKS,,44.63,-86.2,189.0,FRANKFORT       ,MI,US,METAR
KFLA,,39.28,-103.07,1507.0,FLAGLER         ,CO,US,METAR
KFLD,,43.77,-88.48,242.0,FOND DU LAC     ,WI,US,METAR
KFLG,,35.13,-111.67,2134.0,FLAGSTAFF       ,AZ,US,METAR TAF
KFLL,,26.07,-80.15,1.0,FT LAUDERD/HOLLY,FL,US,METAR TAF
KFLM,,25.13,-80.92,2.0,FLAMINGO/MONROE ,FL,US,METAR
KFLO,,34.18,-79.73,43.0,FLORENCE        ,SC,US,METAR TAF
KFLP,,36.28,-92.58,215.0,FLIPPIN (AWOS)  ,AR,US,METAR
KFLV,,39.37,-94.92,235.0,FORT LEAVENWORTH,KS,US,METAR
KFLY,,38.95,-104.57,2096.0,CO SPNGS MEADOW ,CO,US,METAR
KFME,,39.08,-76.77,43.0,FORT MEADE      ,MD,US,METAR
KFMG,,39.53,-119.65,1342.0,RENO(VOR)       ,NV,US
KFMH,72506,41.65,-70.52,35.0,FALMOUTH/OTIS AB,MA,US,METAR TAF
KFMM,,40.33,-103.8,1376.0,FORT MORGAN     ,CO,US,METAR
KFMN,,36.75,-108.23,1677.0,FARMINGTON      ,NM,US,METAR TAF
KFMY,,26.58,-81.87,4.0,FORT MYERS      ,FL,US,METAR TAF
KFNB,,40.07,-95.58,301.0,FALLS CITY/BRENN,NE,US,METAR
KFNL,,40.45,-105.02,1529.0,FT COLLINS/LOVEL,CO,US,METAR
KFNT,72637,42.97,-83.75,235.0,FLINT           ,MI,US,METAR TAF
KFOA,,38.67,-88.45,141.0,FLORA           ,IL,US,METAR
KFOD,72549,42.53,-94.17,347.0,FORT DODGE      ,IA,US,METAR TAF
KFOE,,38.93,-95.65,315.0,TOPEKA/FORBES   ,KS,US,METAR TAF
KFOK,,40.85,-72.62,13.0,WESTHAMPTON BEAC,NY,US,METAR
KFOT,,40.55,-124.13,118.0,FORTUNA         ,CA,US,METAR
KFOZ,,47.77,-93.65,412.0,BIGFORK         ,MN,US,METAR
KFPK,,42.57,-84.82,269.0,CHARLOTTE       ,MI,US,METAR
KFPR,,27.5,-80.38,7.0,FORT PIERCE     ,FL,US,METAR TAF
KFPY,,30.07,-83.57,12.0,PERRY FOLEY     ,FL,US,METAR
KFQD,,35.42,-81.93,325.0,RUTHERFORDTON   ,NC,US,METAR
KFRG,,40.73,-73.42,23.0,FARMINGDALE     ,NY,US,METAR
KFRH,,38.5,-86.63,241.0,FRENCH LICK     ,IN,US,METAR
KFRI,72455,39.05,-96.77,232.0,FT RILEY/MARSHAL,KS,US,METAR TAF
KFRM,,43.63,-94.42,353.0,FAIRMONT MUNI   ,MN,US,METAR
KFRR,,38.92,-78.25,213.0,FRONT ROYAL     ,VA,US,METAR
KFSD,72651,43.58,-96.75,433.0,SIOUX FALLS     ,SD,US,METAR NEXRAD WFO_office TAF
KFSE,,47.58,-95.77,389.0,FOSSTON         ,MN,US,METAR
KFSI,72355,34.65,-98.4,360.0,FORT SILL       ,OK,US,METAR TAF
KFSK,,37.8,-94.77,276.0,FORT SCOTT      ,KS,US,METAR
KFSM,72344,35.33,-94.37,136.0,FORT SMITH      ,AR,US,METAR TAF
KFSO,,44.93,-73.1,70.0,HIGHGATE        ,VT,US,METAR
KFST,,30.92,-102.92,917.0,FORT STOCKTON   ,TX,US,METAR TAF
KFSW,,40.67,-91.32,219.0,FORT MADISON    ,IA,US,METAR
KFSX,,34.57,-111.2,2261.0,COCONINO/FLAGSTF,AZ,US,NEXRAD
KFTG,,39.78,-104.55,1672.0,DENVER F. RANGE ,CO,US,METAR NEXRAD
KFTI,,35.65,-105.13,2094.0,FT UNION/VEGAS  ,NM,US
KFTK,72424,37.9,-85.97,225.0,FORT KNOX/GODMAN,KY,US,METAR TAF
KFTN,,28.22,-100.02,236.0,DIMMIT          ,TX,US,METAR
KFTW,,32.83,-97.37,213.0,FORT WORTH      ,TX,US,METAR TAF
KFTY,,33.78,-84.52,245.0,ATLANTA/FULTON  ,GA,US,METAR TAF
KFUL,,33.87,-117.98,23.0,FULLERTON       ,CA,US,METAR
KFVE,,47.28,-68.3,299.0,FRENCHVILLE     ,ME,US,METAR TAF
KFVX,,37.35,-78.43,129.0,FARMVILLE       ,VA,US,METAR
KFWA,72533,40.98,-85.2,243.0,FORT WAYNE      ,IN,US,METAR TAF
KFWB,,36.7,-93.4,392.0,BRANSON WEST    ,MO,US,METAR
KFWC,,38.38,-88.42,131.0,FAIRFIELD       ,IL,US,METAR
KFWD,72249,32.82,-97.28,196.0,FORT WORTH      ,TX,US,rawinsonde WFO_office
KFWN,,41.2,-74.63,129.0,SUSSEX          ,NJ,US,METAR
KFWR,,32.83,-97.3,211.0,FORT WORTH/RFC  ,TX,US
KFWS,,32.57,-97.3,211.0,FORT WORTH/88D  ,TX,US,METAR NEXRAD
KFWZ,,42.52,-108.78,2605.0,SOUTH PASS      ,WY,US,METAR
KFXE,,26.2,-80.18,3.0,FT LAUDERD/EXEC ,FL,US,METAR TAF
KFXY,,43.23,-93.62,366.0,FOREST CITY     ,IA,US,METAR
KFYE,,35.2,-89.38,133.0,SOMERVILLE      ,TN,US,METAR
KFYG,,38.58,-91.0,147.0,WASHINGTON      ,MO,US,METAR
KFYJ,,37.52,-76.77,3.0,WEST POINT      ,VA,US,METAR
KFYM,,35.07,-86.57,297.0,FAYETTEVILLE    ,TN,US,METAR
KFYV,,36.02,-94.17,377.0,FAYETTEVILLE    ,AR,US,METAR TAF
KFZG,,31.68,-83.27,105.0,FITZGERALD      ,GA,US,METAR
KFZY,,43.35,-76.38,143.0,FULTON          ,NY,US,METAR
KGAD,,33.97,-86.08,169.0,GADSDEN MUNI    ,AL,US,METAR
KGAF,,48.4,-97.37,250.0,GRAFTON         ,ND,US,METAR
KGAG,,36.3,-99.77,670.0,GAGE            ,OK,US,METAR TAF
KGAI,,39.17,-77.17,151.0,GAITHERSBURG    ,MD,US,METAR
KGAO,,29.45,-90.27,0.0,GALLIANO        ,LA,US,METAR
KGBD,,38.35,-98.87,573.0,GREAT BEND      ,KS,US,METAR TAF
KGBG,,40.93,-90.43,230.0,GALESBURG       ,IL,US,METAR
KGBK,,27.2,-92.2,20.0,MAGNOLIA OILP   ,LA,US,METAR
KGCC,72665,44.33,-105.55,1328.0,GILLETTE        ,WY,US,METAR TAF
KGCD,,44.4,-118.97,1122.0,JOHN DAY STATE  ,OR,US,METAR
KGCK,,37.92,-100.72,877.0,GARDEN CITY     ,KS,US,METAR TAF
KGCM,,36.3,-95.48,215.0,CLAREMORE       ,OK,US,METAR
KGCN,,35.95,-112.15,1993.0,GRAND CANYON    ,AZ,US,METAR TAF
KGCY,,36.2,-82.82,488.0,GREENEVILLE     ,TN,US,METAR
KGDA,,37.33,-88.1,199.0,MARION          ,KY,US,METAR
KGDB,,44.75,-95.55,316.0,GRANITE FALLS   ,MN,US,METAR
KGDJ,,32.45,-97.82,235.0,GRANBURY MUNI   ,TX,US,METAR
KGDP,72262,31.83,-104.82,1664.0,GUADALUPE PASS  ,TX,US,METAR
KGDV,,47.13,-104.8,749.0,GLENDIVE        ,MT,US,METAR TAF
KGED,,38.68,-75.37,15.0,GEORGETOWN      ,DE,US,METAR
KGEG,72785,47.62,-117.53,718.0,SPOKANE/METRO   ,WA,US,METAR TAF
KGEU,,33.53,-112.3,319.0,GLENDALE        ,AZ,US,METAR
KGEV,,36.43,-81.42,961.0,JEFFERSON       ,NC,US,METAR
KGEY,,44.52,-108.08,1191.0,GREYBULL        ,WY,US,METAR
KGEZ,,39.58,-85.8,245.0,SHELBYVILLE     ,IN,US,METAR
KGFA,,47.5,-111.18,1058.0,MALMSTROM AFB   ,MT,US,METAR TAF
KGFK,,47.95,-97.18,256.0,GRAND FORKS     ,ND,US,METAR TAF
KGFL,,43.33,-73.62,99.0,GLENS FALLS     ,NY,US,METAR TAF
KGGE,,33.32,-79.32,9.0,GEORGETOWN      ,SC,US,METAR
KGGF,,40.87,-101.73,1044.0,GRANT           ,NE,US,METAR
KGGG,72247,32.38,-94.72,107.0,LONGVIEW        ,TX,US,METAR TAF
KGGI,,41.72,-92.73,305.0,GRINNELL REG    ,IA,US,METAR
KGGP,,40.72,-86.37,224.0,LOGANSPORT      ,IN,US,METAR
KGGW,72768,48.22,-106.62,698.0,GLASGOW         ,MT,US,METAR NEXRAD rawinsonde WFO_office TAF
KGHB,,27.83,-91.98,30.0,GARDEN BANKS172 ,LA,US,METAR
KGHG,,42.1,-70.67,3.0,MARSHFIELD      ,MA,US,METAR
KGHW,,45.63,-95.32,423.0,GLENWOOD        ,MN,US,METAR
KGIC,,45.95,-116.12,1002.0,GRANGEVILLE     ,ID,US,METAR
KGID,,40.97,-98.32,563.0,GRAND ISLAND/WFO,NE,US,WFO_office
KGIF,,28.07,-81.75,44.0,WINTER HAVEN    ,FL,US,METAR
KGIJ,,41.77,-86.32,267.0,NILES VOR       ,MI,US
KGJT,72476,39.13,-108.53,1475.0,GRAND JUNCTION  ,CO,US,METAR rawinsonde WFO_office TAF
KGJX,,39.07,-108.22,3045.0,GRAND JUNC/MESA ,CO,US,NEXRAD
KGKJ,,41.63,-80.22,428.0,MEADVILLE       ,PA,US,METAR
KGKT,,35.85,-83.53,305.0,GATLINBURG      ,TN,US,METAR
KGKY,,32.67,-97.1,189.0,ARLINGTON       ,TX,US,METAR TAF
KGLD,72465,39.37,-101.7,1111.0,GOODLAND        ,KS,US,METAR NEXRAD WFO_office TAF
KGLE,,33.65,-97.2,250.0,GAINESVILLE     ,TX,US,METAR
KGLH,,33.47,-90.98,40.0,GREENVILLE      ,MS,US,METAR TAF
KGLR,,45.02,-84.68,403.0,GAYLORD         ,MI,US,METAR
KGLS,72242,29.27,-94.87,2.0,GALVESTON       ,TX,US,METAR TAF
KGLV,,45.4,-101.78,753.0,GLAD VLY SD20   ,SD,US,METAR
KGLW,,37.03,-85.95,216.0,GLASGOW         ,KY,US,METAR
KGLX,,28.23,-88.98,32.0,MISS CANYON 724 ,LA,US,METAR
KGLY,,38.35,-93.68,247.0,CLINTON         ,MO,US,METAR
KGMJ,,36.6,-94.73,251.0,GROVE           ,OK,US,METAR
KGMU,,34.85,-82.35,309.0,GREENVILLE      ,SC,US,METAR TAF
KGNA,,47.75,-90.35,186.0,GRAND MARAIS    ,MN,US,METAR
KGNB,,40.08,-105.92,2500.0,GRANBY/GRAND CO ,CO,US,METAR
KGNC,,32.68,-102.65,1002.0,SEMINOLE        ,TX,US,METAR
KGNF,,33.83,-89.8,59.0,GRENADA         ,MS,US,METAR
KGNG,,42.92,-114.77,1128.0,GOODING         ,ID,US,METAR
KGNL,,39.13,-100.62,887.0,GRINNELL        ,KS,US,METAR
KGNR,72619,45.47,-69.55,426.0,GREENVILLE      ,ME,US,METAR
KGNT,,35.17,-107.9,1988.0,GRANTS          ,NM,US,METAR
KGNV,,29.7,-82.28,41.0,GAINESVILLE     ,FL,US,METAR TAF
KGOK,,35.85,-97.4,326.0,GUTHRIE         ,OK,US,METAR
KGON,,41.33,-72.05,2.0,GROTON/NEW LONDO,CT,US,METAR TAF
KGOO,,39.22,-121.0,950.0,GRASS VALLEY    ,CA,US,METAR
KGOP,,31.42,-97.8,272.0,GATESVILLE      ,TX,US,METAR
KGOV,,44.68,-84.73,350.0,GRAYLING AF     ,MI,US,METAR
KGPC,,39.63,-86.82,254.0,GREENCASTLE     ,IN,US,METAR
KGPH,,39.33,-94.32,233.0,MOSBY           ,MO,US,METAR
KGPI,72779,48.32,-114.25,903.0,KALISPELL       ,MT,US,METAR TAF
KGPM,,32.7,-97.05,178.0,GRAND PRAIRIE   ,TX,US,METAR
KGPT,,30.42,-89.08,5.0,GULFPORT        ,MS,US,METAR TAF
KGPZ,,47.22,-93.52,410.0,GRAND RAPIDS    ,MN,US,METAR
KGQO,,34.97,-85.15,210.0,CHATTANOOGA VOR ,TN,US
KGRB,72645,44.48,-88.13,209.0,ASHWAUBENON     ,WI,US,METAR NEXRAD rawinsonde WFO_office TAF
KGRD,,34.25,-82.15,188.0,GREENWOOD       ,SC,US,METAR
KGRE,,38.83,-89.38,162.0,GREENVILLE      ,IL,US,METAR
KGRF,74207,47.07,-122.57,91.0,FORT LEWIS/GRAY ,WA,US,METAR TAF
KGRI,72552,40.97,-98.32,562.0,GRAND ISLAND    ,NE,US,METAR TAF
KGRK,,31.07,-97.83,311.0,GRAY/FT HOOD    ,TX,US,METAR TAF
KGRM,,47.83,-90.38,505.0,GRAND MARAIS    ,MN,US,METAR
KGRN,,42.8,-102.17,1080.0,GORDON          ,NE,US,METAR
KGRR,72635,42.88,-85.52,239.0,GRAND RAPIDS    ,MI,US,METAR NEXRAD WFO_office TAF
KGRW,,33.5,-90.08,44.0,GREENWOOD       ,MS,US
KGRY,,27.63,-90.45,58.0,GREEN CANYON 338,LA,US,METAR
KGSB,,35.33,-77.93,33.0,GOLDSBORO/S. J. ,NC,US,METAR TAF
KGSH,,41.53,-85.78,252.0,GOSHEN          ,IN,US,METAR
KGSM,,28.53,-90.98,1.0,SHIP SHOAL 207  ,LA,US,METAR
KGSO,72317,36.1,-79.95,275.0,GREENSBORO      ,NC,US,METAR rawinsonde TAF
KGSP,72312,34.9,-82.22,285.0,GREER/SPARTANSBG,SC,US,METAR NEXRAD WFO_office TAF
KGTB,74370,44.07,-75.72,206.0,FORT DRUM/WHEELE,NY,US,METAR TAF
KGTF,72775,47.47,-111.38,1117.0,GREAT FALLS     ,MT,US,METAR TAF
KGTR,,33.45,-88.58,80.0,GOLDEN/COLUMBUS ,MS,US,METAR TAF
KGTU,,30.68,-97.68,232.0,GEORGETOWN      ,TX,US,METAR
KGUC,,38.52,-106.93,2337.0,GUNNISON        ,CO,US,METAR TAF
KGUL,,27.3,-93.53,20.0,GUNNISON 668    ,TX,US,METAR
KGUN,,41.43,-104.35,1695.0,GUNBARREL       ,WY,US,METAR
KGUP,,35.52,-108.8,1972.0,GALLUP          ,NM,US,METAR TAF
KGUR,,42.25,-104.72,1341.0,GUERNSEY        ,WY,US,METAR TAF
KGUS,,40.63,-86.15,245.0,GRISSOM AFB/PERU,IN,US,METAR TAF
KGUY,,36.68,-101.5,950.0,GUYMON          ,OK,US,METAR TAF
KGVE,,38.15,-78.17,138.0,GORDONSVILLE    ,VA,US,METAR
KGVL,,34.27,-83.83,387.0,GAINESVILLE     ,GA,US,METAR
KGVQ,,43.03,-78.17,279.0,BATAVIA         ,NY,US,METAR
KGVT,,33.07,-96.07,165.0,GREENVILLE/MAJOR,TX,US,METAR
KGVW,,29.13,-94.55,37.0,GALVESTON 209B  ,TX,US,METAR
KGVX,,28.58,-94.98,20.0,GALVESTON424 OIL,TX,US,METAR
KGWB,,41.3,-85.07,268.0,AUBURN DEKALB C ,IN,US,METAR
KGWC,,41.12,-95.92,319.0,OFFUTT/AFWA     ,NE,US
KGWO,,33.5,-90.08,42.0,GREENWOOD       ,MS,US,METAR TAF
KGWR,,46.22,-97.65,381.0,GWINNER         ,ND,US,METAR
KGWW,,35.47,-77.97,40.0,GOLDSBORO/WAYNE ,NC,US,METAR
KGWX,,33.9,-88.33,145.0,COLUMBUS AFB/88D,MS,US,NEXRAD
KGXA,,34.57,-117.67,927.0,PALMDALE        ,CA,US,METAR
KGXF,,32.88,-112.72,261.0,GILA BEND (AAF) ,AZ,US,METAR
KGXY,,40.43,-104.62,1420.0,GREELEY/WELD    ,CO,US,METAR
KGYB,,30.17,-96.98,140.0,GIDDINGS-LEE    ,TX,US,METAR
KGYF,,26.13,-94.9,65.0,ALAMINOS C OIL  ,TX,US,METAR
KGYH,,34.75,-82.38,283.0,GREENVILLE      ,SC,US,METAR
KGYI,,33.72,-96.67,227.0,SHERMAN/DENISON ,TX,US,METAR
KGYL,,44.77,-94.08,304.0,GLENCOE         ,MN,US,METAR
KGYR,,33.42,-112.37,292.0,GOODYEAR MUNICIP,AZ,US,METAR
KGYX,74389,43.88,-70.25,125.0,GRAY/PORTLAND   ,ME,US,NEXRAD rawinsonde WFO_office
KGYY,,41.62,-87.42,179.0,GARY REGIONAL   ,IN,US,METAR TAF
KGZH,,31.42,-87.05,77.0,EVERGREEN       ,AL,US,METAR
KGZL,,35.28,-95.1,176.0,STIGLER         ,OK,US,METAR
KGZN,,32.37,-99.02,522.0,CISCO           ,TX,US,METAR
KGZS,,35.15,-87.05,198.0,PULASKI         ,TN,US,METAR
KH00,,36.35,-94.22,395.0,BENTONVILLE     ,AR,US,METAR
KH02,,28.1,-93.4,30.0,HIGH ISLAND 334A,LA,US,METAR
KH08,,28.47,-93.73,30.0,HIGH IS. 264C   ,LA,US,METAR
KH21,,37.97,-92.68,324.0,CAMDENTON       ,MO,US,METAR
KH71,,36.22,-95.33,190.0,PRYOR           ,OK,US,METAR
KH78,,28.18,-88.48,43.0,OFFSHORE        ,LA,US,METAR
KHAE,,39.73,-91.45,230.0,HANNIBAL        ,MO,US,METAR
KHAF,,37.52,-122.5,11.0,HALF MOON BAY   ,CA,US,METAR
KHAI,,41.97,-85.6,250.0,THREE RIVERS    ,MI,US,METAR
KHAO,,39.37,-84.52,185.0,HAMILTON        ,OH,US,METAR
KHAR,72511,40.3,-77.07,397.0,HARRISBURG      ,PA,US
KHAT,,35.27,-75.53,3.0,CAPE HATTERAS   ,NC,US,METAR
KHBB,,32.77,-103.22,1130.0,HOBBS/INDUST    ,NM,US,METAR
KHBE,,39.33,-86.03,215.0,ATTERBURY       ,IN,US,METAR
KHBG,,31.27,-89.25,45.0,HATTIESBURG     ,MS,US,METAR TAF
KHBI,,35.65,-79.9,199.0,ASHEBORO MUNI   ,NC,US,METAR
KHBR,,34.98,-99.05,475.0,HOBART          ,OK,US,METAR TAF
KHBU,,38.45,-107.03,2339.0,GUNNISON(VOR)   ,CO,US
KHBV,,27.35,-98.73,200.0,HEBBRONVILLE    ,TX,US,METAR
KHCD,,44.87,-94.38,320.0,HUTCHINSON      ,MN,US,METAR
KHCO,,48.75,-96.93,250.0,HALLOCK         ,MN,US,METAR
KHCR,,40.48,-111.43,1708.0,HEBER/RUSS MCDON,UT,US,METAR TAF
KHD7,,39.92,-100.83,814.0,HERNDON         ,KS,US,METAR
KHDC,,30.52,-90.42,12.0,HAMMOND         ,LA,US,METAR TAF
KHDE,,40.45,-99.33,703.0,HOLDREGE/BREWSTR,NE,US,METAR
KHDL,,31.37,-85.32,109.0,HEADLAND        ,AL,US,METAR
KHDN,,40.48,-107.22,2012.0,HAYDEN/YAMPA    ,CO,US,METAR TAF
KHDO,,29.37,-99.17,280.0,HONDO           ,TX,US,METAR
KHDX,,33.08,-106.12,1287.0,W SANDS/HOLLOMAN,NM,US,NEXRAD
KHEC,,34.8,-116.47,617.0,HECTOR(VOR)     ,CA,US
KHEF,,38.72,-77.52,53.0,MANASSAS MUNI   ,VA,US,METAR
KHEG,,30.28,-81.8,25.0,JACKSONVIL/HERLO,FL,US,METAR
KHEI,,46.02,-102.65,824.0,HETTINGER       ,ND,US,METAR
KHEQ,,40.57,-102.28,1136.0,HOLYOKE         ,CO,US,METAR
KHER,,45.85,-100.1,513.0,HERRIED         ,SD,US,METAR
KHES,,38.65,-122.9,85.0,HEALDSBURG      ,CA,US,METAR
KHEY,,31.35,-85.65,95.0,FT RUCKER/HANCHE,AL,US,METAR
KHEZ,,31.62,-91.3,82.0,NATCHEZ/HARDY   ,MS,US,METAR
KHFD,,41.73,-72.65,3.0,HARTFORD/BRAINAR,CT,US,METAR
KHFF,,35.03,-79.5,100.0,HOFFMAN/MACKALL ,NC,US,METAR
KHFJ,,36.9,-94.02,398.0,MONETT          ,MO,US,METAR
KHFY,,39.63,-86.08,250.0,GREENWOOD       ,IN,US,METAR
KHGR,,39.7,-77.73,206.0,HAGERSTOWN      ,MD,US,METAR
KHGT,,36.0,-121.23,310.0,HUNTER LIGGET   ,CA,US,METAR
KHGX,,29.47,-95.08,5.0,HOUSTON/DICKINSN,TX,US,NEXRAD WFO_office
KHHF,,35.9,-100.4,729.0,CANADIAN        ,TX,US,METAR
KHHG,,40.85,-85.45,247.0,HUNTINGTON      ,IN,US,METAR
KHHR,,33.92,-118.33,21.0,HAWTHORNE       ,CA,US,METAR
KHHV,,26.93,-94.68,25.0,ALAMINOS CANYON ,TX,US,METAR
KHHW,,34.03,-95.55,178.0,HUGO            ,OK,US,METAR
KHIB,,47.38,-92.83,409.0,HIBBING         ,MN,US,METAR TAF
KHIE,,44.37,-71.55,321.0,WHITEFIELD      ,NH,US,METAR TAF
KHIF,,41.12,-111.97,1461.0,HILL AFB/OGDEN  ,UT,US,METAR TAF
KHII,,34.57,-114.37,241.0,LAKE HAVASU CITY,AZ,US,METAR
KHIO,,45.55,-122.95,62.0,HILLSBORO/PORTLD,OR,US,METAR TAF
KHJH,,40.15,-97.58,449.0,HEBRON MUNI     ,NE,US,METAR
KHJO,,36.32,-119.62,73.0,HANFORD         ,CA,US,METAR
KHKA,,35.93,-89.83,78.0,BLYTHEVILLE     ,AR,US,METAR
KHKS,,32.33,-90.22,103.0,JACKSON/HAWKINS ,MS,US,METAR TAF
KHKY,,35.75,-81.38,357.0,HICKORY         ,NC,US,METAR TAF
KHLB,,39.35,-85.27,297.0,BATESVILLE      ,IN,US,METAR
KHLC,,39.37,-99.83,667.0,HILL CITY       ,KS,US,METAR
KHLD,,43.1,-107.32,1846.0,HILAND          ,WY,US,METAR
KHLG,,40.17,-80.65,365.0,WHEELING        ,WV,US,METAR TAF
KHLN,72772,46.6,-111.98,1178.0,HELENA          ,MT,US,METAR TAF
KHLR,72257,31.13,-97.72,271.0,FT HOOD/KILLEEN ,TX,US,METAR
KHLX,,36.77,-80.82,819.0,HILLSVILLE/GALAX,VA,US,METAR
KHME,,32.37,-82.07,60.0,METTER          ,GA,US,METAR
KHMN,74732,32.85,-106.1,1240.0,HOLLOMAN AFB    ,NM,US,METAR TAF
KHMP,,33.38,-84.33,263.0,HAMPTON/HENRY   ,GA,US,METAR
KHMS,72784,46.57,-119.58,223.0,HANFORD         ,WA,US,METAR
KHMT,,33.73,-117.02,462.0,HEMET           ,CA,US,METAR
KHMV,,36.43,-82.13,1317.0,HOLSTON MTN VOR ,TN,US
KHMY,,35.03,-97.23,331.0,LEXINGTON       ,OK,US,METAR
KHMZ,,40.08,-78.52,351.0,BEDFORD         ,PA,US,METAR
KHNB,,38.25,-86.95,159.0,HUNTINGBURG     ,IN,US,METAR TAF
KHND,,35.98,-115.13,740.0,VEGAS/HENDERSON ,NV,US,METAR TAF
KHNK,,42.07,-75.32,690.0,HANCOCK VOR     ,NY,US
KHNN,,38.75,-82.02,262.0,HENDERSON       ,WV,US
KHNR,,41.58,-95.33,364.0,HARLAN MUNI     ,IA,US,METAR
KHNX,,36.32,-119.63,74.0,HANFORD/SAN JOAQ,CA,US,NEXRAD WFO_office TAF
KHNZ,,36.37,-78.53,158.0,HENDERSON/OXFORD,NC,US,METAR
KHOB,,32.67,-103.22,1112.0,HOBBS/LEA CO.   ,NM,US,METAR TAF
KHOE,,31.05,-82.78,56.0,HOMERVILLE      ,GA,US,METAR
KHON,72654,44.38,-98.23,391.0,HURON           ,SD,US,METAR TAF
KHOP,74671,36.67,-87.5,170.0,HOPKINSVILLE    ,KY,US,METAR TAF
KHOT,,34.48,-93.1,153.0,HOT SPRINGS     ,AR,US,METAR TAF
KHOU,,29.63,-95.28,13.0,HOUSTON/HOBBY   ,TX,US,METAR TAF
KHOX,,39.37,-100.43,833.0,HOXIE           ,KS,US,METAR
KHPN,,41.07,-73.7,113.0,WHITE PLAINS    ,NY,US,METAR TAF
KHPT,,42.72,-93.23,354.0,HAMPTON         ,IA,US,METAR
KHPX,,36.73,-87.28,176.0,HOPKINTON/F CAMB,KY,US,NEXRAD
KHQG,,37.17,-101.37,956.0,HUGOTON         ,KS,US,METAR
KHQG,,37.17,-101.37,956.0,HUGOTON         ,KS,US,METAR
KHQI,,27.95,-93.67,25.0,H ISLAND376 OILP,TX,US,METAR
KHQM,,46.97,-123.93,4.0,HOQUIAM         ,WA,US,METAR TAF
KHQU,,33.53,-82.52,141.0,MCDUFFIE/THOMSON,GA,US,METAR
KHQZ,,32.75,-96.53,136.0,MESQUITE        ,TX,US,METAR
KHRD,,44.53,-99.7,547.0,HARROLD         ,SD,US,METAR
KHRF,,46.25,-114.13,1112.0,HAMILTON/RAVALLI,MT,US,METAR
KHRI,,45.83,-119.27,194.0,HERMISTON       ,OR,US,METAR
KHRJ,,35.38,-78.73,55.0,ERWIN/HARNETT CO,NC,US,METAR
KHRL,,26.23,-97.65,9.0,HARLINGEN       ,TX,US,METAR TAF
KHRO,,36.27,-93.15,417.0,HARRISON        ,AR,US,METAR TAF
KHRT,74777,30.42,-86.68,10.0,HURLBURT FIELD  ,FL,US,METAR TAF
KHRV,,29.85,-90.0,1.0,HARVEY/N ORLEANS,LA,US
KHRX,,34.87,-102.33,1153.0,HEREFORD MUNI   ,TX,US,METAR
KHSA,,30.37,-89.45,6.0,BAY ST LOUIS    ,MS,US,METAR TAF
KHSB,,37.82,-88.55,118.0,HARRISBURG      ,IL,US,METAR
KHSD,,35.6,-97.72,358.0,OKLA CITY/SUNDAN,OK,US,METAR
KHSE,,35.23,-75.62,4.0,HATTERAS/MITCHEL,NC,US,METAR
KHSG,,43.72,-108.38,1497.0,THERMOPOLIS     ,WY,US,METAR
KHSI,,40.6,-98.43,592.0,HASTINGS        ,NE,US,METAR
KHSP,,37.95,-79.82,1148.0,HOT SPRINGS/INGA,VA,US,METAR
KHSR,,43.37,-103.38,960.0,HOT SPRINGS     ,SD,US,METAR
KHST,,25.48,-80.37,1.0,HOMESTEAD AFB   ,FL,US,METAR TAF
KHSV,72323,34.65,-86.78,190.0,HUNTSVILLE      ,AL,US,METAR TAF
KHTH,,38.55,-118.63,1281.0,HAWTHORNE       ,NV,US,METAR
KHTL,72638,44.35,-84.67,350.0,HOUGHTON LAKE   ,MI,US,METAR
KHTO,,40.95,-72.25,10.0,EAST HAMPTON    ,NY,US,METAR
KHTS,72425,38.37,-82.55,252.0,HUNTINGTON      ,WV,US,METAR TAF
KHTX,,34.93,-86.08,536.0,HYTOP/88D       ,AL,US,NEXRAD
KHUA,,34.68,-86.68,200.0,REDSTONE ARSENAL,AL,US,METAR TAF
KHUF,00001,39.45,-87.32,174.0,TERRE HAUTE     ,IN,US,METAR TAF
KHUH,,48.95,-122.58,26.0,WHATCOM (BLI)   ,WA,US
KHUL,,46.12,-67.8,148.0,HOULTON         ,ME,US,METAR TAF
KHUM,,29.57,-90.67,1.0,HOUMA TERREBONNE,LA,US,METAR TAF
KHUT,,38.07,-97.87,464.0,HUTCHINSON      ,KS,US,METAR TAF
KHVE,,38.42,-110.7,1351.0,HANKSVILLE      ,UT,US,METAR
KHVL,74541,37.65,-99.1,648.0,HAVILAND PROFILE,KS,US,wind_profiler
KHVN,,41.27,-72.88,4.0,NEW HAVEN/TWEED ,CT,US,METAR
KHVR,72777,48.55,-109.77,789.0,HAVRE           ,MT,US,METAR TAF
KHVS,,34.4,-80.12,110.0,HARTSVILLE      ,SC,US,METAR
KHWD,,37.67,-122.12,9.0,HAYWARD         ,CA,US,METAR
KHWO,,26.0,-80.23,2.0,HOLLYWOOD       ,FL,US,METAR
KHWV,,40.82,-72.87,20.0,BROOKHAVEN      ,NY,US,METAR
KHWY,,38.58,-77.72,93.0,WARRENTON       ,VA,US,METAR
KHXD,,32.22,-80.7,5.0,HILTON HEAD     ,SC,US,METAR
KHYA,,41.67,-70.27,11.0,HYANNIS         ,MA,US,METAR TAF
KHYI,,29.88,-97.87,180.0,SAN MARCOS      ,TX,US,METAR TAF
KHYR,,46.02,-91.45,369.0,HAYWARD         ,WI,US,METAR TAF
KHYS,,38.85,-99.27,607.0,HAYS MUNI       ,KS,US,METAR TAF
KHYW,,33.83,-79.12,10.0,CONWAY-HORRY CTY,SC,US,METAR
KHYX,,43.43,-83.87,181.0,SAGINAW/BROWNE  ,MI,US,METAR
KHZD,,36.08,-88.47,147.0,HUNTINGDON      ,TN,US,METAR
KHZE,,47.28,-101.58,542.0,HAZEN           ,ND,US,METAR
KHZL,,40.98,-76.0,481.0,HAZLETON        ,PA,US,METAR
KHZR,,30.72,-91.48,11.0,NEW ROADS       ,LA,US,METAR
KHZX,,46.62,-93.32,374.0,MCGREGOR/IVERSON,MN,US,METAR
KHZY,,41.78,-80.7,279.0,ASHTABULA       ,OH,US,METAR
KI16,,37.6,-81.57,528.0,PINEVILLE       ,WV,US,METAR
KI19,,39.7,-83.98,285.0,XENIA           ,OH,US,METAR
KI23,,39.57,-83.42,298.0,WASHINGTON COURT,OH,US,METAR
KI35,,36.87,-83.37,467.0,HARLAN          ,KY,US,METAR
KI39,,37.63,-84.33,306.0,RICHMOND/MADISON,KY,US,METAR
KI43,,38.98,-82.58,221.0,JACKSON         ,OH,US,METAR
KI63,,39.98,-90.8,221.0,MOUNT STERLING  ,IL,US,METAR
KI67,,39.25,-84.78,177.0,HARRISON        ,OH,US,METAR
KI68,,39.47,-84.25,274.0,LEBANON         ,OH,US,METAR
KI69,,39.08,-84.22,238.0,BATAVIA         ,OH,US,METAR
KI74,,40.12,-83.75,322.0,URBANA          ,OH,US,METAR
KI75,,41.05,-93.68,336.0,OSCEOLA MUNI    ,IA,US,METAR
KIAB,,37.62,-97.27,413.0,MCCONNELL AFB   ,KS,US,METAR TAF
KIAD,72403,38.93,-77.45,90.0,WASH DC/DULLES  ,VA,US,METAR rawinsonde TAF
KIAG,,43.12,-78.93,179.0,NIAGARA FALLS   ,NY,US,METAR TAF
KIAH,72243,30.0,-95.37,27.0,HOUSTON/INTNL   ,TX,US,METAR TAF
KIBM,,41.18,-103.68,1494.0,KIMBALL MUNI    ,NE,US,METAR
KICL,,40.72,-95.02,299.0,CLARINDA        ,IA,US,METAR
KICR,,43.38,-99.85,618.0,WINNER          ,SD,US,METAR
KICT,72450,37.65,-97.43,428.0,WICHITA         ,KS,US,METAR NEXRAD WFO_office TAF
KICX,,37.58,-112.87,3231.0,CEDAR CITY/88D  ,UT,US,NEXRAD
KIDA,,43.52,-112.07,1444.0,IDAHO FALLS     ,ID,US,METAR TAF
KIDI,,40.63,-79.1,425.0,INDIANA/STEWART ,PA,US,METAR
KIDL,,33.48,-90.68,39.0,INDIANOLA       ,MS,US,METAR
KIDP,,37.17,-95.78,252.0,INDEPENDENCE    ,KS,US,METAR
KIDV,,43.93,-106.65,1531.0,I-25 DIVIDE     ,WY,US,METAR
KIEN,,43.03,-102.52,1002.0,PINE RIDGE      ,SD,US,METAR
KIER,,31.73,-93.1,35.0,NATCHITOCHES    ,LA,US,METAR
KIFA,,42.47,-93.27,344.0,IOWA FALLS MUNI ,IA,US,METAR
KIFP,,35.15,-114.57,210.0,BULLHEAD CITY   ,AZ,US,METAR TAF
KIGB,,33.48,-88.5,73.0,BIGBEE          ,MS,US
KIGM,72370,35.25,-113.93,1045.0,KINGMAN         ,AZ,US,METAR
KIGQ,,41.53,-87.53,187.0,CHICAGO/LANSING ,IL,US,METAR
KIGX,,35.93,-79.07,152.0,CHAPEL HILL     ,NC,US,METAR
KIIB,,42.45,-91.95,294.0,INDEPENDENCE    ,IA,US,METAR
KIIU,,38.1,-85.58,219.0,LOUISVILLE VOR  ,KY,US
KIIY,,33.78,-82.82,192.0,WASHINGTON      ,GA,US,METAR
KIJD,,41.75,-72.18,73.0,WILLIMANTIC     ,CT,US,METAR
KIJX,,39.77,-90.25,187.0,JACKSONVILLE    ,IL,US,METAR
KIKA,,44.3,-104.63,1319.0,INYAN KARA      ,WY,US,METAR
KIKG,,27.55,-98.03,37.0,KINGSVILLE      ,TX,US,METAR
KIKK,,41.07,-87.85,188.0,KANKAKEE        ,IL,US,METAR
KIKR,,35.05,-106.6,1613.0,KIRTLAND AFB-ABQ,NM,US,TAF
KIKT,,28.52,-88.28,36.0,MISS CANYON 474 ,LA,US,METAR
KIKV,,41.68,-93.57,270.0,ANKENY          ,IA,US,METAR
KIKW,,43.67,-84.27,190.0,MIDLAND BARSTOW ,MI,US,METAR
KILC,,38.25,-114.38,2840.0,WILSON CREEK    ,NV,US
KILE,,31.08,-97.68,256.0,KILLEEN MUNI    ,TX,US,METAR
KILG,,39.67,-75.6,22.0,WILMINGTON      ,DE,US,METAR TAF
KILL,,45.12,-95.07,344.0,WILLMAR/RICE    ,MN,US,METAR
KILM,72302,34.27,-77.9,9.0,WILMINGTON      ,NC,US,METAR WFO_office TAF
KILN,72426,39.43,-83.8,325.0,WILMINGTON      ,OH,US,METAR NEXRAD rawinsonde WFO_office TAF
KILX,74560,40.15,-89.33,177.0,LINCOLN         ,IL,US,NEXRAD rawinsonde WFO_office
KIMB,,44.65,-119.72,1700.0,KIMBERLY/VOR    ,OR,US
KIML,,40.52,-101.62,997.0,IMPERIAL MUNICIP,NE,US,METAR
KIMM,,26.43,-81.4,11.0,IMMOKALEE       ,FL,US,METAR
KIMS,,38.75,-85.47,244.0,MADISON         ,IN,US,METAR
KIMT,,45.82,-88.12,343.0,IRON MOUNTAIN   ,MI,US,METAR
KIND,72438,39.72,-86.27,242.0,INDIANAPOLIS    ,IN,US,METAR NEXRAD WFO_office TAF
KINF,,28.8,-82.32,14.0,INVERNESS       ,FL,US,METAR
KINJ,,32.08,-97.1,208.0,HILLSBORO       ,TX,US,METAR
KINK,,31.78,-103.2,857.0,WINK            ,TX,US,METAR TAF
KINL,72747,48.57,-93.4,353.0,INTERNTNL FALLS ,MN,US,METAR rawinsonde TAF
KINS,,36.58,-115.68,954.0,INDIAN SPRINGS  ,NV,US,METAR TAF
KINT,,36.13,-80.22,292.0,WINSTON SALEM   ,NC,US,METAR TAF
KINW,72374,35.03,-110.72,1492.0,WINSLOW         ,AZ,US,METAR TAF
KINX,,36.18,-95.57,204.0,INOLA/TULSA/88D ,OK,US,NEXRAD
KIOB,,38.05,-83.98,301.0,MOUNT STERLING  ,KY,US,METAR
KIOW,,41.63,-91.55,199.0,IOWA CITY       ,IA,US,METAR
KIPJ,,35.48,-81.17,266.0,LINCOLNTON      ,NC,US,METAR
KIPL,,32.83,-115.58,-16.0,IMPERIAL        ,CA,US,METAR TAF
KIPN,,28.08,-87.98,40.0,INDEPEDENCE 920 ,LA,US,METAR
KIPT,72514,41.25,-76.92,160.0,WILLIAMSPORT    ,PA,US,METAR TAF
KIRK,,40.1,-92.55,292.0,KIRKSVILLE      ,MO,US,METAR
KIRQ,,33.72,-82.17,147.0,COLLIERS VOR    ,SC,US
KIRS,,41.8,-85.43,282.0,STURGIS/KIRSCH  ,MI,US,METAR
KISM,,28.28,-81.43,25.0,KISSIMMEE/ORLAND,FL,US,METAR TAF
KISN,72767,48.17,-103.63,582.0,WILLISTON       ,ND,US,METAR TAF
KISO,,35.32,-77.62,27.0,KINSTON/STALLING,NC,US,METAR TAF
KISP,,40.8,-73.1,25.0,ISLIP           ,NY,US,METAR TAF
KISQ,,45.97,-86.17,206.0,MANISTIQUE      ,MI,US,METAR
KISW,,44.37,-89.83,311.0,WISCONSIN RAPIDS,WI,US,METAR
KITH,,42.48,-76.45,338.0,ITHACA/TOMPKINS ,NY,US,METAR TAF
KITR,,39.23,-102.28,1285.0,BURLINGTON      ,CO,US,METAR
KIUA,,42.92,-77.33,248.0,CANANDAIGUA     ,NY,US,METAR
KIWA,,33.3,-111.65,420.0,CHANDLER/MESA   ,AZ,US,METAR NEXRAD TAF
KIWD,,46.52,-90.12,373.0,IRONWOOD        ,MI,US,METAR TAF
KIWI,,43.97,-69.72,16.0,WISCASSET       ,ME,US,METAR
KIWS,,29.82,-95.67,34.0,WEST HOUSTON    ,TX,US,METAR
KIWX,,41.37,-85.7,293.0,NORTH WEBSTER   ,IN,US,NEXRAD
KIXA,,36.33,-77.63,43.0,HALIFAX NORTHAMP,NC,US,METAR
KIXD,,38.82,-94.88,322.0,OLATHE/INDUSTRIA,KS,US,METAR TAF
KIYA,,29.98,-92.08,4.0,ABBEVILLE CC MEM,LA,US,METAR
KIYK,,35.67,-117.82,746.0,INYOKERN        ,CA,US,METAR
KIZA,,34.6,-120.07,200.0,SANTA YNEZ      ,CA,US,METAR
KIZG,,43.98,-70.95,138.0,FRYEBURG        ,ME,US,METAR
KJAC,,43.62,-110.73,1967.0,JACKSON         ,WY,US,METAR TAF
KJAN,72235,32.32,-90.08,92.0,JACKSON         ,MS,US,METAR rawinsonde TAF
KJAQ,,38.37,-120.8,518.0,JACKSON         ,CA,US,METAR
KJAS,,30.88,-94.03,60.0,JASPER          ,TX,US,METAR
KJAU,,36.33,-84.17,350.0,JACKSBORO       ,TN,US,METAR
KJAX,72206,30.5,-81.68,8.0,JACKSONVILLE    ,FL,US,METAR NEXRAD rawinsonde WFO_office TAF
KJBR,,35.83,-90.65,79.0,JONESBORO       ,AR,US,METAR TAF
KJCA,,34.18,-83.57,287.0,JEFFERSON       ,GA,US,METAR
KJCT,74740,30.5,-99.77,522.0,JUNCTION        ,TX,US,METAR TAF
KJDD,,32.75,-95.5,127.0,MINEOLA/QUITMAN ,TX,US,METAR
KJDN,,47.33,-106.95,802.0,JORDAN          ,MT,US,METAR
KJEF,,38.6,-92.15,167.0,JEFFERSON CITY  ,MO,US,METAR TAF
KJER,,42.72,-114.45,1226.0,JEROME COUNTY   ,ID,US,METAR TAF
KJES,,31.55,-81.88,26.0,JESUP/WAYNE CTY ,GA,US,METAR
KJFK,74486,40.63,-73.77,3.0,NYC/JFK ARPT    ,NY,US,METAR TAF
KJFX,,33.9,-87.32,144.0,JASPER/WALKER   ,AL,US,METAR
KJFZ,,37.07,-81.8,809.0,RICHLANDS       ,VA,US,METAR
KJGG,,37.23,-76.72,13.0,WILLIAMSBURG    ,VA,US,METAR
KJGX,,32.68,-83.35,159.0,ROBINS AFB/88D  ,GA,US,NEXRAD
KJHN,,37.58,-101.73,1013.0,JOHNSON CITY    ,KS,US,METAR
KJHW,,42.15,-79.27,520.0,JAMESTOWN       ,NY,US,METAR TAF
KJKA,,30.28,-87.67,5.0,GULF SHORES     ,AL,US,METAR TAF
KJKJ,,46.83,-96.67,280.0,MOORHEAD MUNI   ,MN,US,METAR
KJKL,,37.6,-83.32,414.0,NOCTOR/JACKSON  ,KY,US,METAR NEXRAD WFO_office TAF
KJLN,,37.15,-94.5,297.0,JOPLIN          ,MO,US,METAR TAF
KJMR,,45.88,-93.27,301.0,MORA            ,MN,US,METAR
KJMS,,46.93,-98.67,455.0,JAMESTOWN       ,ND,US,METAR TAF
KJN8,,39.68,-100.3,762.0,JENNINGS        ,KS,US,METAR
KJNC,,39.07,-108.8,2367.0,GRAND JUNCTION  ,CO,US
KJNW,,44.57,-124.07,48.0,NEWPORT         ,OR,US,METAR
KJNX,,35.53,-78.38,41.0,SMITHFIELD JOHNS,NC,US,METAR
KJOT,,41.52,-88.18,175.0,JOLIET          ,IL,US,METAR
KJPD,,44.15,-107.17,2739.0,TEN SLEEP       ,WY,US,METAR
KJPX,,40.95,-72.25,10.0,EAST HAMPTON    ,NY,US,METAR
KJQF,,35.38,-80.72,204.0,CONCORD REG ARPT,NC,US,METAR
KJRB,,40.7,-74.02,2.0,MANHATTAN/DWNTWN,NY,US,METAR
KJRO,,38.98,-82.58,224.0,JACKSON         ,OH,US,METAR
KJSL,,26.23,-95.22,45.0,WALKER RIDGE    ,TX,US,METAR
KJSO,,31.87,-95.22,204.0,JACKSONVILLE    ,TX,US,METAR
KJST,,40.32,-78.83,695.0,JOHNSTOWN       ,PA,US,METAR TAF
KJSV,,35.43,-94.8,158.0,SALLISAW        ,OK,US,METAR
KJSY,,45.35,-117.25,1256.0,JOSEPH          ,OR,US,METAR
KJTC,,34.13,-109.32,2148.0,SPRINGERVILLE   ,AZ,US,METAR
KJVL,,42.62,-89.05,244.0,JANESVILLE/ROCK ,WI,US,METAR TAF
KJVW,,32.3,-90.42,73.0,RAYMOND         ,MS,US,METAR
KJVY,,38.37,-85.73,141.0,JEFFERSONVILLE  ,IN,US,METAR
KJWG,,35.87,-98.42,469.0,WATONGA         ,OK,US,METAR
KJWN,,36.18,-86.88,149.0,NASHV/JC TUNE   ,TN,US,METAR
KJWX,,39.72,-77.42,84.0,FORT RITCHIE    ,MD,US,METAR
KJWY,,32.45,-96.92,211.0,MIDLOTHIAN/WAX  ,TX,US,METAR
KJXI,,32.7,-94.95,130.0,GILMER MUNI     ,TX,US,METAR
KJXN,,42.27,-84.47,303.0,JACKSON/REYNOLDS,MI,US,METAR TAF
KJYG,,43.98,-94.55,323.0,ST. JAMES       ,MN,US,METAR
KJYL,,32.65,-81.6,54.0,SYLVANIA        ,GA,US,METAR
KJYM,,41.92,-84.58,357.0,HILLSDALE       ,MI,US,METAR
KJYO,,39.07,-77.57,112.0,LEESBURG/GODFREY,VA,US,METAR
KJYR,,40.9,-97.62,508.0,YORK            ,NE,US,METAR
KJZI,,32.7,-80.0,5.0,CHARLESTON/EXEC ,SC,US,METAR TAF
KJZP,,34.45,-84.47,462.0,JASPER          ,GA,US,METAR
KK02,,37.87,-89.87,113.0,PERRYVILLE      ,MO,US,METAR
KK62,,38.7,-84.4,274.0,FALMOUTH        ,KY,US,METAR
KK68,,38.28,-95.22,301.0,GARNETT         ,KS,US,METAR
KK70,,25.32,-80.28,20.0,KEY LARGO      _,FL,US,METAR
KK78,,38.9,-97.23,352.0,ABILENE         ,KS,US,METAR
KK82,,39.77,-98.8,548.0,SMITH CENTER    ,KS,US,METAR
KK88,,37.87,-95.38,308.0,BASSETT         ,KS,US,METAR
KKAD,,43.87,-101.83,765.0,KADOKA          ,SD,US,METAR
KKCI,,39.28,-94.67,231.0,KANSAS CITY/AWC ,MO,US
KKEY,,24.55,-81.78,5.0,KEY WEST        ,FL,US,rawinsonde WFO_office
KKLS,,46.12,-122.9,4.0,KELSO LONGVEIW  ,WA,US,METAR
KKNB,,37.02,-112.53,1476.0,KANAB           ,UT,US,METAR
KKRF,,38.82,-94.27,312.0,KANSAS CITY/RFC ,MO,US
KKY8,,37.95,-86.87,124.0,LEWISPORT       ,KY,US,METAR
KL08,,33.27,-116.32,156.0,BORREGO SPRINGS ,CA,US,METAR
KL18,,33.35,-117.25,215.0,FALLBROOK AIRPAR,CA,US,METAR
KL35,,34.27,-116.85,2062.0,BIG BEAR CITY   ,CA,US,METAR
KL38,,30.17,-90.93,4.0,GONZALES        ,LA,US,METAR
KL52,,35.1,-120.62,3.0,OCEANO CNTY     ,CA,US,METAR
KL63,69017,36.52,-115.57,972.0,IND SPRNG RANGE ,NV,US,METAR
KLAA,,38.07,-102.68,1129.0,LAMAR           ,CO,US,METAR
KLAF,,40.42,-86.93,182.0,LAFAYETTE       ,IN,US,METAR TAF
KLAL,,27.98,-82.02,39.0,LAKELAND REGIONA,FL,US,METAR TAF
KLAM,,35.87,-106.27,2166.0,LOS ALAMOS      ,NM,US,METAR
KLAN,72539,42.78,-84.58,261.0,LANSING         ,MI,US,METAR TAF
KLAR,,41.32,-105.67,2217.0,LARAMIE         ,WY,US,METAR TAF
KLAS,72386,36.07,-115.17,662.0,LAS VEGAS       ,NV,US,METAR TAF
KLAW,,34.55,-98.42,328.0,LAWTON          ,OK,US,METAR TAF
KLAX,72295,33.93,-118.38,30.0,LOS ANGELES     ,CA,US,METAR TAF
KLBB,72267,33.67,-101.82,996.0,LUBBOCK         ,TX,US,METAR NEXRAD TAF
KLBE,,40.27,-79.4,345.0,LATROBE/WESTMORL,PA,US,METAR TAF
KLBF,72562,41.12,-100.67,843.0,NORTH PLATTE    ,NE,US,METAR rawinsonde WFO_office TAF
KLBL,,37.03,-100.97,877.0,LIBERAL         ,KS,US,METAR
KLBO,,37.65,-92.65,399.0,LEBANON         ,MO,US,METAR
KLBR,,33.6,-95.07,132.0,CLARKSVILLE     ,TX,US,METAR
KLBT,,34.6,-79.07,37.0,LUMBERTON       ,NC,US,METAR TAF
KLBX,,29.12,-95.47,4.0,ANGLETON        ,TX,US,METAR TAF
KLCG,,42.25,-96.98,434.0,WAYNE MUNI      ,NE,US,METAR
KLCH,72240,30.13,-93.22,2.0,LAKE CHARLES    ,LA,US,METAR NEXRAD rawinsonde WFO_office TAF
KLCI,,43.57,-71.42,166.0,LACONIA MUNI    ,NH,US,METAR
KLCK,,39.82,-82.92,225.0,RICKENBACKER ANG,OH,US,METAR TAF
KLCQ,,30.18,-82.58,59.0,LAKE CITY       ,FL,US,METAR
KLDJ,,40.62,-74.25,6.0,LINDEN          ,NJ,US,METAR
KLDM,,43.97,-86.4,194.0,LUDINGTON/MASON ,MI,US,METAR
KLEB,,43.63,-72.3,169.0,LEBANON         ,NH,US,METAR TAF
KLEE,,28.82,-81.82,21.0,LEESBURG        ,FL,US,METAR TAF
KLEM,,45.93,-102.18,783.0,LEMMON US12     ,SD,US,METAR
KLEV,,29.18,-90.1,2.0,GRAND ISLE (VOR),LA,US
KLEW,,44.03,-70.28,81.0,AUBURN/LEWISTON ,ME,US,METAR
KLEX,72422,38.03,-84.6,294.0,LEXINGTON       ,KY,US,METAR TAF
KLFI,74598,37.08,-76.33,2.0,LANGLEY AFB/HAMP,VA,US,METAR TAF
KLFK,,31.23,-94.75,87.0,LUFKIN          ,TX,US,METAR TAF
KLFT,,30.2,-91.97,9.0,LAFAYETTE       ,LA,US,METAR TAF
KLG5,,39.67,-99.57,597.0,LOGAN           ,KS,US,METAR
KLGA,72503,40.78,-73.88,9.0,NYC/LA GUARDIA  ,NY,US,METAR TAF
KLGB,72297,33.82,-118.15,10.0,LONG BEACH      ,CA,US,METAR TAF
KLGC,,33.0,-85.07,209.0,LA GRANGE       ,GA,US,METAR
KLGD,,45.28,-118.0,827.0,LA GRANDE       ,OR,US,METAR
KLGF,,32.87,-114.4,118.0,LAGUNA (AAF)    ,AZ,US,METAR
KLGU,,41.78,-111.85,1359.0,LOGAN           ,UT,US,METAR TAF
KLGX,,47.12,-124.1,103.0,GRAYS HARBOR    ,WA,US,NEXRAD
KLHB,,30.87,-96.62,83.0,HEARNE MUNI     ,TX,US,METAR
KLHM,,38.92,-121.35,36.0,LINCOLN         ,CA,US,METAR
KLHQ,,39.75,-82.67,259.0,LANCASTER       ,OH,US,METAR
KLHV,,41.13,-77.42,170.0,LOCK HAVEN      ,PA,US,METAR
KLHW,72209,31.88,-81.57,14.0,FT STEWART/WRIGH,GA,US,METAR
KLHX,,38.05,-103.52,1289.0,LA JUNTA        ,CO,US,METAR
KLHZ,,36.02,-78.33,104.0,LOUISBURG/FRANKL,NC,US,METAR
KLIC,,39.27,-103.67,1635.0,LIMON           ,CO,US,METAR
KLIT,,34.73,-92.23,77.0,LITTLE ROCK     ,AR,US,METAR TAF
KLIX,72233,30.33,-89.83,7.0,SLIDELL/88D     ,LA,US,NEXRAD rawinsonde WFO_office
KLJF,,45.1,-94.52,347.0,LITCHFIELD      ,MN,US,METAR
KLKN,72582,40.87,-115.72,1608.0,ELKO/WFO        ,NV,US,rawinsonde WFO_office
KLKR,,34.72,-80.85,166.0,LANCASTER       ,SC,US,METAR
KLKT,,45.02,-114.08,2822.0,SALMON/VOR      ,ID,US
KLKU,,38.02,-77.97,146.0,LOUISA          ,VA,US,METAR
KLKV,,42.17,-120.4,1440.0,LAKEVIEW        ,OR,US,METAR
KLLJ,,44.52,-114.22,1535.0,CHALLIS         ,ID,US,METAR
KLLN,,33.55,-102.37,1071.0,LEVELLAND       ,TX,US,METAR
KLLQ,,33.63,-91.75,86.0,MONTICELLO      ,AR,US,METAR TAF
KLLR,,39.27,-123.75,175.0,LITTLE RIVER    ,CA,US,METAR
KLMK,,38.23,-85.67,166.0,LOUISVILLE/WFO  ,KY,US,METAR WFO_office
KLMN,,40.6,-93.97,348.0,LAMONI          ,IA,US
KLMO,,40.17,-105.17,1535.0,LONGMONT/VBRAND ,CO,US,METAR
KLMT,,42.15,-121.72,1246.0,KLAMATH FALLS   ,OR,US,METAR TAF
KLNA,,26.6,-80.08,3.0,LANTANA/PALM BEA,FL,US,METAR TAF
KLNC,,32.58,-96.72,152.0,LANCASTER       ,TX,US,METAR
KLND,72576,42.82,-108.73,1700.0,LANDER          ,WY,US,METAR TAF
KLNK,72551,40.85,-96.77,357.0,LINCOLN         ,NE,US,METAR TAF
KLNL,,46.15,-89.22,517.0,LAND O LAKES    ,WI,US,METAR
KLNN,,41.68,-81.38,190.0,WILLOUGHBY      ,OH,US,METAR
KLNP,,36.98,-82.52,817.0,WISE/LONESOME PI,VA,US,METAR
KLNQ,,29.35,-89.43,1.0,BOOTHVILLE HEL  ,LA,US,METAR
KLNR,,43.22,-90.18,218.0,LONE ROCK       ,WI,US,METAR
KLNS,,40.12,-76.3,122.0,LANCASTER       ,PA,US,METAR TAF
KLNX,,41.95,-100.58,905.0,THEDFORD/LBF/88D,NE,US,NEXRAD
KLOL,,40.07,-118.57,1191.0,LOVELOCK        ,NV,US,METAR TAF
KLOM,,40.13,-75.27,87.0,PHILLY WINGS F  ,PA,US,METAR
KLOR,,31.35,-85.75,92.0,LOWE AHP/FT. RUC,AL,US,METAR
KLOT,,41.6,-88.1,205.0,ROMEOVILLE/CHI  ,IL,US,METAR NEXRAD WFO_office
KLOU,,38.22,-85.67,165.0,LOUISVILLE/BOWMN,KY,US,METAR
KLOX,,34.2,-119.12,16.0,LOS ANGELES/OXNA,CA,US,WFO_office
KLOZ,,37.08,-84.07,361.0,LONDON          ,KY,US,METAR TAF
KLPC,,34.67,-120.47,26.0,LOMPOC          ,CA,US,METAR
KLPR,,41.35,-82.18,241.0,LORAIN/ELYRIA   ,OH,US,METAR
KLQK,,34.82,-82.7,291.0,PICKENS         ,SC,US,METAR
KLRD,72252,27.55,-99.47,150.0,LAREDO          ,TX,US,METAR TAF
KLRF,,34.92,-92.12,85.0,LITTLE ROCK AFB ,AR,US,METAR TAF
KLRJ,,42.77,-96.2,363.0,LE MARS         ,IA,US,METAR
KLRO,,32.9,-79.78,3.0,MOUNT PLEASANT  ,SC,US,METAR
KLRU,,32.28,-106.92,1355.0,LAS CRUCES INTL ,NM,US,METAR TAF
KLRX,,40.73,-116.8,2056.0,ELKO/LANDER 88D ,NV,US,NEXRAD
KLRY,,38.62,-94.35,272.0,HARRISONVILLE   ,MO,US,METAR
KLSB,,32.33,-108.7,1308.0,LORDSBURG       ,NM,US,METAR
KLSE,72643,43.88,-91.25,198.0,LA CROSSE       ,WI,US,METAR TAF
KLSF,72225,32.32,-84.97,68.0,FT BENNING/COLUM,GA,US,METAR TAF
KLSK,,42.75,-104.4,1514.0,LUSK            ,WY,US,METAR
KLSV,,36.23,-115.05,563.0,LAS VEGAS/NELLIS,NV,US,METAR TAF
KLSX,,38.7,-90.68,185.0,ST CHARLES/88D  ,MO,US,NEXRAD WFO_office
KLTS,72352,34.67,-99.27,416.0,ALTUS AFB       ,OK,US,METAR TAF
KLTX,,33.98,-78.43,20.0,SHALLOTTE/WILM. ,NC,US,NEXRAD
KLUA,,38.67,-78.5,273.0,LURAY           ,VA,US,METAR
KLUB,,33.65,-101.82,996.0,LUBBOCK/WFO     ,TX,US,WFO_office
KLUD,,33.25,-97.58,319.0,DECATUR         ,TX,US,METAR
KLUF,,33.53,-112.37,333.0,LUKE AFB/GLENDAL,AZ,US,METAR TAF
KLUG,,35.52,-86.8,218.0,LEWISBURG       ,TN,US,METAR
KLUK,,39.1,-84.42,144.0,CINCINNAT/LUNKEN,OH,US,METAR TAF
KLUL,,31.67,-89.17,74.0,LAUREL          ,MS,US,METAR
KLUM,,44.9,-91.87,271.0,MENOMONIE MUNI  ,WI,US,METAR
KLUV,,32.75,-101.92,910.0,LAMESA          ,TX,US,METAR
KLUX,,34.5,-81.95,213.0,LAURENS         ,SC,US,METAR
KLVJ,,29.52,-95.25,11.0,HOUSTON         ,TX,US,METAR
KLVK,,37.7,-121.82,120.0,LIVERMORE       ,CA,US,METAR TAF
KLVL,,36.78,-77.8,98.0,LAWRENCEVILLE   ,VA,US,METAR
KLVM,,45.7,-110.43,1418.0,LIVINGSTON      ,MT,US,METAR TAF
KLVN,,44.63,-93.23,292.0,MNPLS/AIRLAKE   ,MN,US,METAR TAF
KLVS,,35.65,-105.13,2095.0,LAS VEGAS       ,NM,US,METAR TAF
KLVX,,37.98,-85.95,219.0,FORT KNOX/88D   ,KY,US,NEXRAD
KLWA,,42.35,-86.25,199.0,SOUTH HAVEN     ,MI,US,METAR
KLWB,,37.87,-80.4,702.0,LEWISBURG/GREENB,WV,US,METAR TAF
KLWC,,39.02,-95.22,252.0,LAWRENCE        ,KS,US,METAR
KLWD,,40.63,-93.9,345.0,LAMONI          ,IA,US,METAR
KLWM,,42.72,-71.13,42.0,LAWRENCE        ,MA,US,METAR
KLWS,72783,46.37,-117.02,435.0,LEWISTON        ,ID,US,METAR TAF
KLWT,,47.05,-109.47,1254.0,LEWISTOWN       ,MT,US,METAR TAF
KLWV,,38.77,-87.6,128.0,LAWRENCEVILLE   ,IL,US,METAR
KLWX,,38.98,-77.48,89.0,STERLING        ,VA,US,NEXRAD WFO_office
KLXL,,45.95,-94.33,335.0,LITTLE FALLS    ,MN,US,METAR
KLXN,,40.78,-99.77,734.0,LEXINGTON       ,NE,US,METAR
KLXT,,38.97,-94.37,306.0,LEES SUMMIT MUNI,MO,US,METAR
KLXV,,39.23,-106.32,3027.0,LEADVILLE       ,CO,US,METAR
KLXY,,31.63,-96.52,164.0,MEXIA LIMESTONE ,TX,US,METAR
KLYH,72410,37.32,-79.2,282.0,LYNCHBURG       ,VA,US,METAR TAF
KLYO,,38.35,-98.23,515.0,LYONS           ,KS,US,METAR
KLYV,,43.62,-96.22,435.0,LUVERNE         ,MN,US,METAR
KLZK,72340,34.83,-92.27,173.0,N. LITTLE ROCK  ,AR,US,METAR NEXRAD rawinsonde WFO_office
KLZU,,33.98,-83.97,316.0,LAWRENCEVILLE   ,GA,US,METAR
KLZZ,,31.1,-98.2,356.0,LAMPASAS        ,TX,US,METAR
KM01,,35.2,-90.05,68.0,DEWITT SPAIN/MEM,TN,US,METAR
KM02,,36.13,-87.43,268.0,DICKSON         ,TN,US,METAR
KM04,,35.58,-89.58,83.0,COVINGTON       ,TN,US,METAR
KM08,,35.22,-89.05,149.0,BOLIVAR/WHITEHST,TN,US,METAR
KM19,,35.65,-91.17,72.0,NEWPORT         ,AR,US,METAR
KM21,,37.22,-87.15,127.0,GREENVILLE      ,KY,US,METAR
KM25,,36.77,-88.58,157.0,MAYFIELD        ,KY,US,METAR
KM30,,37.18,-88.75,116.0,METROPOLIS      ,IL,US,METAR
KM33,,36.38,-86.42,178.0,GALLATIN        ,TN,US,METAR
KM40,,33.87,-88.48,68.0,ABERDEEN/AMORY  ,MS,US,METAR
KM46,,45.85,-106.68,1030.0,COLSTRIP        ,MT,US,METAR
KM52,,35.65,-88.38,157.0,FRANKLIN WILKINS,TN,US,METAR
KM54,,36.18,-86.32,168.0,LEBANON         ,TN,US,METAR
KM63,,32.07,-106.15,1256.0,MCGREGOR RANGE  ,NM,US,METAR
KM75,,48.37,-107.92,687.0,MALTA           ,MT,US,METAR
KM91,,36.53,-86.92,214.0,SPINGFIELD      ,TN,US,METAR
KM97,,38.22,-83.58,313.0,MOREHEAD        ,KY,US,METAR
KMAE,,36.98,-120.12,77.0,MADERA          ,CA,US,METAR
KMAF,72265,31.95,-102.2,874.0,MIDLAND         ,TX,US,METAR NEXRAD rawinsonde WFO_office TAF
KMAI,74776,30.83,-85.18,33.0,MARIANNA        ,FL,US,METAR
KMAN,,43.58,-116.52,773.0,NAMPA           ,ID,US,METAR
KMAO,,34.18,-79.33,27.0,MARION          ,SC,US,METAR
KMAW,,36.6,-90.0,88.0,MALDEN          ,MO,US,METAR
KMAX,,42.08,-122.72,2290.0,JACKSON CTY/MFR ,OR,US,NEXRAD
KMBF,,25.77,-80.13,1.0,MIAMI BEACH     ,FL,US,METAR
KMBG,,45.55,-100.42,515.0,MOBRIDGE        ,SD,US,METAR TAF
KMBL,,44.27,-86.25,187.0,MANISTEE        ,MI,US,METAR TAF
KMBO,,32.43,-90.1,98.0,MADISON         ,MS,US,METAR
KMBS,,43.53,-84.08,201.0,SAGINAW         ,MI,US,METAR TAF
KMBT,,35.88,-86.38,187.0,MURFREESBORO    ,TN,US,METAR
KMBX,,48.4,-100.87,455.0,MCHENRY CY/MINOT,ND,US,NEXRAD
KMBY,,39.47,-92.43,263.0,MOBERLY         ,MO,US,METAR
KMCB,,31.18,-90.47,124.0,MCCOMB          ,MS,US,METAR TAF
KMCC,,38.67,-121.4,21.0,MCCLELLAN AFB   ,CA,US,METAR TAF
KMCD,,45.85,-84.63,228.0,MACKINAC ISLAND ,MI,US,METAR
KMCE,,37.28,-120.5,49.0,MERCED          ,CA,US,METAR TAF
KMCF,74788,27.85,-82.52,3.0,MACDILL AFB/TAMP,FL,US,METAR TAF
KMCI,72446,39.3,-94.73,308.0,KANSAS CITY/INTL,MO,US,METAR TAF
KMCJ,,29.72,-95.4,70.0,HOUSTON/UNIV    ,TX,US,METAR
KMCK,,40.2,-100.58,780.0,MCCOOK          ,NE,US,METAR TAF
KMCN,72217,32.68,-83.65,104.0,MACON           ,GA,US,METAR TAF
KMCO,72205,28.42,-81.33,27.0,ORLANDO         ,FL,US,METAR TAF
KMCW,,43.15,-93.33,363.0,MASON CITY      ,IA,US,METAR TAF
KMCX,,40.72,-86.77,205.0,MONTICELLO/WHITE,IN,US,METAR
KMDD,,32.03,-102.1,853.0,MIDLAND AIRPARK ,TX,US,METAR
KMDH,,37.78,-89.25,122.0,CARBONDALE/MURPH,IL,US,METAR
KMDJ,,28.65,-89.8,20.0,MISS CANYON 311A,LA,US,METAR
KMDQ,,34.87,-86.55,221.0,HUNTSVILLE/MADIS,AL,US,METAR
KMDS,,44.02,-97.08,524.0,MADISON         ,SD,US,METAR
KMDT,,40.2,-76.77,91.0,MIDDLETOWN      ,PA,US,METAR TAF
KMDW,72534,41.78,-87.75,186.0,CHICAGO         ,IL,US,METAR TAF
KMDZ,00003,45.1,-90.3,446.0,MEDFORD         ,WI,US,METAR
KMEB,,34.78,-79.37,65.0,MAXTON          ,NC,US,METAR
KMEG,72334,35.05,-90.0,87.0,MEMPHIS/WFO     ,TN,US,METAR WFO_office
KMEH,,45.52,-118.42,1138.0,MEACHAM         ,OR,US,METAR
KMEI,72234,32.33,-88.75,90.0,MERIDIAN/KEY FLD,MS,US,METAR TAF
KMEM,,35.07,-89.98,78.0,MEMPHIS         ,TN,US,METAR TAF
KMER,72481,37.38,-120.57,58.0,MERCED/CASTLE AF,CA,US,METAR TAF
KMEV,,38.98,-119.75,1437.0,MINDEN          ,NV,US,METAR TAF
KMEZ,,34.55,-94.2,320.0,MENA INTERMTN   ,AR,US,METAR
KMFD,,40.82,-82.52,394.0,MANSFIELD       ,OH,US,METAR TAF
KMFE,,26.18,-98.25,29.0,MCALLEN         ,TX,US,METAR TAF
KMFI,,44.63,-90.18,383.0,MARSHFIELD      ,WI,US,METAR
KMFL,72202,25.75,-80.37,5.0,MIAMI/WFO       ,FL,US,rawinsonde WFO_office
KMFR,72597,42.38,-122.87,397.0,MEDFORD         ,OR,US,METAR rawinsonde WFO_office TAF
KMFV,,37.63,-75.77,13.0,MELFA/ACCOMACK  ,VA,US,METAR
KMGC,,41.7,-86.82,199.0,MICHIGAN CITY   ,IN,US,METAR
KMGE,72227,33.92,-84.52,309.0,DOBBINS AFB/MARI,GA,US,METAR TAF
KMGG,,45.23,-93.98,310.0,MAPLE LAKE      ,MN,US,METAR
KMGJ,,41.52,-74.27,106.0,MONTGOMERY      ,NY,US,METAR
KMGM,72226,32.3,-86.4,64.0,MONTGOMERY      ,AL,US,METAR TAF
KMGN,,45.43,-84.92,205.0,HARBOR SPRINGS  ,MI,US,METAR
KMGR,,31.08,-83.8,86.0,MOULTRIE MUNI   ,GA,US,METAR
KMGW,,39.65,-79.92,375.0,MORGANTOWN      ,WV,US,METAR TAF
KMGY,,39.6,-84.23,290.0,DAYTON          ,OH,US,METAR
KMHE,,43.77,-98.03,397.0,MITCHELL        ,SD,US,METAR
KMHK,,39.13,-96.68,320.0,MANHATTAN       ,KS,US,METAR TAF
KMHL,,39.1,-93.2,236.0,MARSHALL        ,MO,US,METAR
KMHP,,32.37,-82.08,60.0,METTER          ,GA,US,METAR
KMHR,,38.55,-121.28,30.0,MATHER FIELD    ,CA,US,METAR TAF
KMHS,,41.32,-122.32,1080.0,MOUNT SHASTA    ,CA,US,METAR
KMHT,,42.93,-71.43,68.0,MANCHESTER      ,NH,US,METAR TAF
KMHV,,35.07,-118.15,841.0,MOJAVE          ,CA,US,METAR
KMHX,72305,34.77,-76.87,9.0,MOREHEAD/NEWPORT,NC,US,NEXRAD rawinsonde WFO_office
KMIA,,25.8,-80.32,1.0,MIAMI           ,FL,US,METAR TAF
KMIB,,48.42,-101.35,505.0,MINOT AFB       ,ND,US,METAR TAF
KMIC,,45.07,-93.35,263.0,MNPLS/CRYSTAL   ,MN,US,METAR
KMIE,,40.23,-85.4,286.0,MUNCIE          ,IN,US,METAR
KMIO,,36.92,-94.88,245.0,MIAMI           ,OK,US,METAR
KMIS,,29.3,-88.85,24.0,MAIN PASS 140B  ,LA,US,METAR
KMIU,,27.28,-96.73,0.0,MUSTANG IS31 OIL,TX,US,METAR
KMIV,,39.37,-75.08,18.0,MILLVILLE       ,NJ,US,METAR TAF
KMIW,,42.12,-92.92,296.0,MARSHALLTOWN    ,IA,US,METAR
KMJD,,30.48,-89.65,17.0,PICAYUNE        ,MS,US,METAR
KMJQ,,43.63,-94.98,439.0,JACKSON MUNI    ,MN,US,METAR
KMJX,,39.93,-74.3,22.0,TOMS RIVER      ,NJ,US,METAR
KMKA,,44.53,-98.95,479.0,MILLER          ,SD,US,METAR
KMKC,,39.12,-94.6,228.0,KANSAS CITY/DNTN,MO,US,METAR TAF
KMKE,,42.95,-87.9,203.0,MILWAUKEE       ,WI,US,METAR TAF
KMKG,72636,43.17,-86.23,190.0,MUSKEGON        ,MI,US,METAR TAF
KMKJ,,36.88,-81.33,777.0,MARION / WYTHEVI,VA,US,METAR
KMKL,,35.6,-88.92,130.0,JACKSON         ,TN,US,METAR TAF
KMKN,,31.92,-98.6,428.0,COMANCHE        ,TX,US,METAR
KMKO,,35.65,-95.37,184.0,MUSKOGEE        ,OK,US,METAR
KMKS,,33.18,-80.03,22.0,BERKELEY MONCKS ,SC,US,METAR
KMKT,,44.22,-93.92,309.0,MANKATO         ,MN,US,METAR TAF
KMKX,72640,42.97,-88.55,292.0,MILWAUKEE/DOUSMN,WI,US,NEXRAD WFO_office
KMKY,,26.0,-81.67,2.0,MARCO ISLAND    ,FL,US,METAR
KMLB,72204,28.1,-80.65,7.0,MELBOURNE       ,FL,US,METAR NEXRAD WFO_office TAF
KMLC,,34.88,-95.78,231.0,MCALESTER       ,OK,US,METAR TAF
KMLD,,42.17,-112.28,1373.0,MALAD CITY      ,ID,US,METAR
KMLE,,41.2,-96.12,318.0,OMAHA/MILLARD   ,NE,US,METAR
KMLF,72475,38.42,-113.02,1537.0,MILFORD         ,UT,US,METAR
KMLI,72544,41.45,-90.52,174.0,MOLINE/QUAD CITY,IL,US,METAR TAF
KMLJ,,33.15,-83.25,115.0,MILLEDGEVILLE   ,GA,US,METAR
KMLP,,47.45,-115.67,1837.0,MULLAN PASS     ,ID,US,METAR
KMLS,74230,46.43,-105.88,800.0,MILES CITY      ,MT,US,METAR TAF
KMLT,,45.65,-68.7,121.0,MILLINOCKET     ,ME,US,METAR
KMLU,,32.52,-92.03,22.0,MONROE          ,LA,US,METAR TAF
KMMB,,36.3,-99.77,668.0,MITBEE/GAGE     ,OK,US
KMMH,,37.62,-118.83,2167.0,MAMMOTH/JUNE LAK,CA,US,METAR TAF
KMMI,,35.4,-84.57,252.0,ATHENS/MCMINN   ,TN,US,METAR
KMMK,,41.52,-72.83,30.0,MERIDEN         ,CT,US,METAR
KMML,,44.45,-95.82,358.0,MARSHALL/RYAN   ,MN,US,METAR
KMMM,,44.98,-110.7,1902.0,MAMMOTH/YELLOWST,WY,US,METAR
KMMO,74460,41.37,-88.67,225.0,MARSEILLES      ,IL,US,METAR
KMMT,,33.92,-80.8,76.0,MCENTIRE ANG BAS,SC,US,METAR TAF
KMMU,,40.78,-74.42,55.0,MORRISTOWN MUNI ,NJ,US,METAR
KMMV,,45.2,-123.13,48.0,MCMINNVILLE     ,OR,US,METAR
KMNE,,32.65,-93.3,84.0,MINDEN          ,LA,US,METAR
KMNH,,39.22,-104.65,2152.0,MONUMENT/ELBERT ,CO,US,METAR
KMNI,,33.58,-80.22,29.0,MANNING         ,SC,US,METAR
KMNM,,45.12,-87.63,188.0,MENOMINEE       ,MI,US,METAR
KMNN,,40.62,-83.07,301.0,MARION          ,OH,US,METAR
KMNV,,35.55,-84.38,306.0,MADISONVILLE    ,TN,US,METAR
KMNZ,,31.67,-98.15,397.0,HAMILTON MUNI   ,TX,US,METAR
KMOB,72223,30.68,-88.25,67.0,MOBILE/BATES    ,AL,US,METAR NEXRAD WFO_office TAF
KMOD,,37.62,-120.95,25.0,MODESTO         ,CA,US,METAR
KMOP,,43.62,-84.73,229.0,MOUNT PLEASANT  ,MI,US,METAR
KMOR,,36.18,-83.37,393.0,MORRISTOWN      ,TN,US,METAR
KMOT,,48.25,-101.27,507.0,MINOT           ,ND,US,METAR TAF
KMOX,,45.57,-95.97,346.0,MORRIS MUNI     ,MN,US,METAR
KMPO,,41.13,-75.38,576.0,MT. POCONO      ,PA,US,METAR
KMPR,,38.35,-97.68,455.0,MCPHERSON       ,KS,US,METAR
KMPV,,44.2,-72.57,336.0,MONTPELIER/BARRE,VT,US,METAR TAF
KMPX,72649,44.85,-93.57,288.0,CHANHASSEN      ,MN,US,NEXRAD rawinsonde WFO_office
KMPZ,,40.95,-91.52,222.0,MT PLEASANT     ,IA,US,METAR
KMQB,,40.52,-90.65,205.0,MACOMB MUNI     ,IL,US,METAR
KMQE,,42.22,-71.12,192.0,EAST MILTON     ,MA,US,METAR
KMQI,,35.92,-75.7,3.0,MANTEO/DARE CO  ,NC,US,METAR
KMQJ,,39.85,-85.9,262.0,INDIANAPOLIS REG,IN,US,METAR
KMQS,,39.98,-75.87,200.0,COATESVILLE     ,PA,US,METAR
KMQW,,32.1,-82.88,62.0,MC RAE          ,GA,US,METAR
KMQY,,36.02,-86.52,156.0,SMYRNA          ,TN,US,METAR TAF
KMRB,,39.4,-77.98,165.0,MARTINSBURG     ,WV,US,METAR TAF
KMRC,,35.55,-87.18,205.0,COLUMBIA        ,TN,US,METAR
KMRF,72264,30.37,-104.02,1476.0,MARFA           ,TX,US,METAR
KMRH,,34.73,-76.65,2.0,BEAUFORT        ,NC,US,METAR
KMRJ,,42.88,-90.23,350.0,MINERAL POINT   ,WI,US,METAR
KMRN,,35.82,-81.62,375.0,MORGANTON/LENOIR,NC,US,METAR
KMRT,,40.22,-83.35,302.0,MARYSVILLE      ,OH,US,METAR
KMRX,,36.17,-83.4,408.0,MORRISTOWN/KNOX ,TN,US,NEXRAD WFO_office
KMRY,,36.58,-121.85,51.0,MONTEREY        ,CA,US,METAR TAF
KMSL,,34.75,-87.6,170.0,MUSCLE SHOAL    ,AL,US,METAR TAF
KMSN,72641,43.13,-89.35,262.0,MADISON         ,WI,US,METAR TAF
KMSO,72773,46.92,-114.1,974.0,MISSOULA        ,MT,US,METAR WFO_office TAF
KMSP,72658,44.88,-93.23,255.0,MINNEAPOLIS     ,MN,US,METAR TAF
KMSR,,44.85,-93.57,256.0,MINNEAPOLIS/RFC ,MN,US
KMSS,,44.93,-74.85,60.0,MASSENA         ,NY,US,METAR TAF
KMSV,,41.7,-74.78,427.0,MONTICELLO      ,NY,US,METAR
KMSX,,47.03,-113.98,2394.0,MISSOULA CTY/88D,MT,US,NEXRAD
KMSY,72231,30.0,-90.25,0.0,NEW ORLEANS/INTL,LA,US,METAR TAF
KMTC,,42.62,-82.83,177.0,SELFRIDGE ANGB  ,MI,US,METAR TAF
KMTH,,24.73,-81.05,1.0,MARATHON        ,FL,US,METAR TAF
KMTJ,,38.5,-107.9,1755.0,MONTROSE        ,CO,US,METAR TAF
KMTN,,39.32,-76.42,2.0,BALTIMORE/MARTIN,MD,US,METAR TAF
KMTO,,39.47,-88.27,216.0,MATTOON/CHARLEST,IL,US,METAR
KMTP,,41.07,-71.92,2.0,MONTAUK         ,NY,US,METAR
KMTR,,36.58,-121.87,66.0,MONTEREY/WFO    ,CA,US,WFO_office
KMTR,,44.27,-108.87,1803.0,MEETEETSE RIM   ,WY,US,METAR
KMTU,,40.13,-110.12,1625.0,MYTON           ,UT,US
KMTV,,36.63,-80.02,276.0,MARTINSVILLE    ,VA,US,METAR
KMTW,,44.12,-87.67,197.0,MANITOWAC MUNI  ,WI,US,METAR TAF
KMTX,,41.27,-112.45,1969.0,ELDER COUNTY/SLC,UT,US,NEXRAD
KMUI,,40.43,-76.57,146.0,MUIR AAF/INDIANT,PA,US,METAR TAF
KMUL,,31.13,-83.7,89.0,MOULTRIE/SPENCE ,GA,US,METAR
KMUO,,43.03,-115.87,915.0,MOUNTAIN HOME   ,ID,US,METAR TAF
KMUT,,41.37,-91.15,166.0,MUSCATINE       ,IA,US,METAR
KMUX,,37.15,-121.9,1059.0,SANTA CLAR/88D  ,CA,US,NEXRAD
KMVE,,44.97,-95.72,319.0,MONTEVIDEO      ,MN,US,METAR
KMVH,,46.83,-108.93,1352.0,N BAR RANCH     ,MT,US,METAR
KMVL,,44.53,-72.62,226.0,MORRISVILLE     ,VT,US,METAR
KMVN,,38.32,-88.87,145.0,MOUNT VERNON    ,IL,US,METAR TAF
KMVX,,47.53,-97.33,301.0,MAYVILLE/FARGO  ,ND,US,NEXRAD
KMVY,,41.4,-70.62,18.0,MARTHAS VINEYARD,MA,US,METAR
KMWA,,37.77,-89.02,142.0,MARION REGIONAL ,IL,US,METAR
KMWC,,43.12,-88.03,225.0,MILWAUKEE/LAWREN,WI,US,METAR
KMWH,,47.2,-119.32,355.0,MOSES LAKE      ,WA,US,METAR TAF
KMWK,,36.47,-80.55,374.0,MOUNT AIRY/SURRY,NC,US,METAR
KMWL,,32.78,-98.07,288.0,MINERAL WELLS   ,TX,US,METAR
KMWM,,43.9,-95.1,427.0,WINDOM MUNI AIRP,MN,US,METAR
KMWN,72613,44.27,-71.3,1911.0,MOUNT WASHINGTON,NH,US,METAR
KMWO,,39.53,-84.4,197.0,MIDDLETOWN/HOOK ,OH,US,METAR
KMWS,72289,34.23,-118.05,1745.0,MOUNT WILSON    ,CA,US,METAR
KMWT,,34.55,-93.58,220.0,MOUNT IDA       ,AR,US,METAR
KMXF,,32.38,-86.37,47.0,MAXWELL AFB/MGM ,AL,US,METAR TAF
KMXO,,42.22,-91.17,251.0,MONTICELLO MUNI ,IA,US,METAR
KMXX,,32.53,-85.78,122.0,MAXWELL AFB 88D ,AL,US,NEXRAD
KMYF,,32.82,-117.13,128.0,SAN DIEGO/MNTGMY,CA,US,METAR
KMYJ,,39.15,-91.82,249.0,MEXICO          ,MO,US,METAR
KMYL,,44.9,-116.1,1532.0,MCCALL          ,ID,US,METAR TAF
KMYP,,38.48,-106.32,3629.0,MONARCH PASS    ,CO,US,METAR
KMYR,74791,33.68,-78.92,7.0,MYRTLE BEACH    ,SC,US,METAR TAF
KMYT,,28.22,-89.62,23.0,INNOVATOR OILP  ,MS,US,METAR
KMYV,,39.1,-121.57,18.0,MARYSVILLE      ,CA,US,METAR
KMYZ,,39.85,-96.63,388.0,MARYSVILLE      ,KS,US,METAR
KMZB,,32.78,-117.23,12.0,MISSION BAY VOR ,CA,US
KMZG,,27.73,-96.18,24.0,MUSTANG A85A OIL,TX,US,METAR
KMZH,,46.42,-92.8,331.0,MOOSE LAKE      ,MN,US,METAR
KMZJ,,32.52,-111.32,574.0,MARANA          ,AZ,US,METAR
KMZZ,,40.48,-85.68,260.0,MARION MUNI     ,IN,US,METAR
KN03,,42.6,-76.22,361.0,CORTLAND        ,NY,US,METAR
KN07,,40.95,-74.32,56.0,LINCOLN PARK    ,NJ,US,METAR
KN12,,40.07,-74.18,13.0,LAKEWOOD        ,NJ,US,METAR
KN14,,39.93,-74.8,15.0,LUMBERTON       ,NJ,US,METAR
KN23,,42.3,-75.42,313.0,SIDNEY          ,NY,US,METAR
KN27,,41.73,-76.45,223.0,TOWANDA         ,PA,US,METAR
KN38,,41.73,-77.4,576.0,WELLSBORO/GRAND ,PA,US,METAR
KN40,,40.57,-74.98,171.0,PITTSTOWN       ,NJ,US,METAR
KN60,,47.65,-101.43,582.0,GARRISON        ,ND,US,METAR
KN81,,39.67,-74.75,20.0,HAMMONTON       ,NJ,US,METAR
KN85,,40.58,-75.02,146.0,ALEXANDRIA      ,NJ,US,METAR
KN87,,40.22,-74.6,36.0,ROBBINSVILLE    ,NJ,US,METAR
KNAK,,38.98,-76.48,2.0,ANNAPOLIS/NAVAL ,MD,US,METAR
KNBC,,32.47,-80.72,9.0,BEAUFORT MCAS   ,SC,US,METAR TAF
KNBE,,32.72,-96.97,150.0,DALLAS NAS/HENSL,TX,US,METAR
KNBG,,29.83,-90.02,0.0,NEW ORLEANS NAS ,LA,US,METAR TAF
KNBT,,35.02,-76.47,5.0,PINEY ISLAND    ,NC,US,METAR
KNCA,,34.72,-77.45,9.0,NEW RIVER MCAS  ,NC,US,METAR TAF
KNDZ,,30.7,-87.02,51.0,MILTON/WHITING S,FL,US,METAR
KNE0,,44.18,-104.05,1940.0,SD-WY BORDR US85,SD,US,METAR
KNEL,72409,40.03,-74.33,26.0,LAKEHURST NAS   ,NJ,US,METAR
KNEN,,30.35,-81.88,30.0,JACKSONVIL/NAVAL,FL,US,METAR
KNEW,,30.05,-90.03,1.0,NEW ORLEANS/LAKE,LA,US,METAR TAF
KNFE,,36.7,-76.13,4.0,FENTRESS NAVAL  ,VA,US,METAR
KNFG,,33.3,-117.35,21.0,CAMP PENDLETON  ,CA,US,METAR TAF
KNFL,,39.42,-118.7,1199.0,FALLON NAS      ,NV,US,METAR TAF
KNFW,,32.78,-97.43,188.0,FORT WORTH NAS  ,TX,US,METAR TAF
KNGP,,27.68,-97.28,5.0,C. CHRISTI NAS  ,TX,US,METAR TAF
KNGU,,36.93,-76.27,3.0,NORFOLK NAS/CHAM,VA,US,METAR TAF
KNGZ,74506,37.77,-122.32,4.0,ALAMEDA NAS     ,CA,US,METAR
KNHC,,25.73,-80.27,3.0,NATL HURR CENTER,FL,US
KNHK,72404,38.28,-76.4,5.0,PATUXENT RIVER  ,MD,US,METAR TAF
KNHZ,74392,43.88,-69.92,23.0,BRUNSWICK NAS   ,ME,US,METAR TAF
KNID,74612,35.68,-117.68,682.0,CHINA LAKE (NAF),CA,US,METAR TAF
KNIP,,30.23,-81.67,3.0,JACKSONVILLE NAS,FL,US,METAR TAF
KNJK,72281,32.82,-115.67,-15.0,EL CENTRO NAF   ,CA,US,METAR TAF
KNJM,,34.68,-77.02,5.0,BOGUE/SWANSBORO ,NC,US,METAR TAF
KNJW,,32.78,-88.82,165.0,MERIDIAN RANGE  ,MS,US,METAR
KNKA,,39.12,-94.6,231.0,KANSAS CITY/COM ,MO,US
KNKT,72309,34.9,-76.88,8.0,CHERRY POINT    ,NC,US,METAR TAF
KNKX,72293,32.87,-117.13,138.0,MIRAMAR NAS/SAN ,CA,US,METAR NEXRAD rawinsonde TAF
KNLC,74702,36.32,-119.95,69.0,LEMOORE NAS/REEV,CA,US,METAR TAF
KNMM,,32.53,-88.53,94.0,MERIDIAN NAS    ,MS,US,METAR TAF
KNMT,,28.25,-98.73,86.0,MCMULLEN TARGET ,TX,US,METAR
KNOG,,27.9,-98.05,72.0,ORANGE GROVE    ,TX,US,METAR
KNOW,,48.13,-123.4,3.0,PORT ANGELES CGA,WA,US,METAR
KNOZ,,32.53,-114.5,78.0,YUMA AUX        ,AZ,US,METAR
KNPA,,30.35,-87.32,6.0,PENSACOLA NAS   ,FL,US,METAR TAF
KNQA,,35.35,-89.87,90.0,MILLINGTON/88D  ,TN,US,METAR NEXRAD
KNQI,,27.5,-97.82,15.0,KINGSVILLE NAS  ,TX,US,METAR TAF
KNQX,,24.57,-81.67,2.0,KEY WEST NAS    ,FL,US,METAR TAF
KNRB,,30.38,-81.42,4.0,MAYPORT NAS     ,FL,US,METAR TAF
KNRN,,39.85,-99.9,726.0,NORTON          ,KS,US,METAR
KNRS,,32.57,-117.12,15.0,IMPERIAL BEACH  ,CA,US,METAR
KNSE,,30.73,-87.02,56.0,WHITING FLD NAS ,FL,US,METAR TAF
KNSI,72291,33.23,-119.45,161.0,SAN NICOLAS ISLA,CA,US,METAR
KNTD,72391,34.12,-119.12,1.0,POINT MUGU NAS  ,CA,US,METAR TAF
KNTU,,36.82,-76.02,6.0,OCEANA NAS/SOUCE,VA,US,METAR TAF
KNUC,,33.02,-118.57,52.0,SAN CLEMENTE IS.,CA,US,METAR TAF
KNUI,,38.15,-76.43,4.0,WEBSTER NAVAL   ,MD,US,METAR
KNUQ,74509,37.4,-122.05,9.0,MOFFETT NAS/MTN ,CA,US,METAR
KNUW,69023,48.35,-122.65,14.0,WHIDBEY IS. NAS ,WA,US,METAR TAF
KNVD,,37.85,-94.3,270.0,NEVADA          ,MO,US,METAR
KNXF,,33.28,-117.45,28.0,OCEANSIDE/RED-B ,CA,US,METAR
KNXP,69015,34.28,-116.13,610.0,TWENTYNINE PALMS,CA,US,METAR TAF
KNY0,,42.98,-74.33,266.0,JOHNSTOWN       ,NY,US,METAR
KNYC,,40.78,-73.97,33.0,NYC/CENTRAL PARK,NY,US,METAR
KNYG,,38.5,-77.3,2.0,QUANTICO MCAF   ,VA,US,METAR TAF
KNYL,,32.65,-114.62,58.0,YUMA MCAS       ,AZ,US,METAR TAF
KNZC,,30.22,-81.87,25.0,CECIL FIELD NAS ,FL,US,METAR
KNZW,,42.13,-70.92,49.0,SOUTH WEYMOUTH  ,MA,US,METAR
KNZY,,32.7,-117.22,4.0,NORTH ISLAND NAS,CA,US,METAR TAF
KO05,,40.28,-121.23,1380.0,CHESTER         ,CA,US,METAR
KO18,,36.32,-119.63,74.0,HANFORD         ,CA,US,METAR
KO22,,38.03,-120.42,637.0,COLUMBIA        ,CA,US,METAR
KO32,,36.67,-119.45,117.0,REEDLEY         ,CA,US,METAR
KO54,,40.75,-122.92,693.0,WEAVERVILLE     ,CA,US,METAR
KO57,,38.27,-119.22,1973.0,BRIDGEPORT      ,CA,US,METAR
KO59,,41.55,-120.17,1409.0,CEDARVILLE      ,CA,US,METAR
KO69,,38.25,-122.6,26.0,PETALUMA        ,CA,US,METAR
KO86,,40.98,-122.7,729.0,TRINITY CENTER  ,CA,US,METAR
KO87,,40.02,-124.07,21.0,SHELTER COVE    ,CA,US,METAR
KO88,,38.2,-121.7,7.0,RIO VISTA       ,CA,US,METAR
KOAJ,,34.82,-77.62,26.0,JACKSONVILLE    ,NC,US,METAR TAF
KOAK,72493,37.72,-122.23,3.0,OAKLAND         ,CA,US,METAR rawinsonde TAF
KOAL,,38.0,-117.77,1600.0,COALDALE (VOR)  ,NV,US
KOAR,,36.67,-121.77,41.0,FORT ORD/FRITZSC,CA,US,METAR
KOAX,72558,41.32,-96.37,350.0,OMAHA/VALLEY/88D,NE,US,NEXRAD rawinsonde WFO_office
KOBE,,27.27,-80.85,11.0,OKEECHOBEE CTY  ,FL,US,METAR
KOBH,,41.38,-98.35,670.0,WOLBACH (VOR)   ,NE,US
KOBI,,39.22,-74.8,13.0,WOODBINE MUNI   ,NJ,US,METAR
KOCF,,29.17,-82.22,24.0,OCALA MUNI      ,FL,US,METAR
KOCH,,31.57,-94.72,105.0,NACOGDOCHES     ,TX,US,METAR
KOCQ,,44.87,-87.92,181.0,OCONTO          ,WI,US,METAR
KOCR,,25.3,-80.27,2.0,OCEAN REEF      ,FL,US,METAR
KOCS,,41.58,-109.02,2060.0,ROCK SPNGS(VOR) ,WY,US
KOCW,,35.57,-77.05,10.0,WASHINGTON      ,NC,US,METAR
KODF,,34.7,-83.3,567.0,TOCCOA VOR      ,GA,US
KODI,,43.92,-91.47,427.0,NODINE VOR      ,MN,US
KODO,,31.92,-102.4,912.0,ODESSA          ,TX,US,METAR
KODX,,41.62,-98.95,628.0,ORD/SHARP FIELD ,NE,US,METAR
KOEB,,41.92,-85.05,291.0,COLDWATER       ,MI,US,METAR
KOED,,42.38,-122.87,396.0,MEDFORD(VOR)    ,OR,US
KOEL,,39.12,-100.82,924.0,OAKLEY          ,KS,US,METAR
KOEO,,45.32,-92.7,269.0,OSCEOLA         ,WI,US,METAR
KOFF,72554,41.12,-95.92,308.0,OFFUTT AFB/BELLE,NE,US,METAR TAF
KOFK,72556,41.98,-97.43,476.0,NORFOLK         ,NE,US,METAR TAF
KOFP,,37.7,-77.43,63.0,RICHMOND/HANOVER,VA,US,METAR
KOGA,,41.12,-101.77,991.0,OGALLALA        ,NE,US,METAR
KOGB,,33.47,-80.85,59.0,ORANGEBURG      ,SC,US,METAR TAF
KOGD,72575,41.2,-112.02,1356.0,OGDEN           ,UT,US,METAR TAF
KOGS,,44.67,-75.47,88.0,OGDENSBURG INTL ,NY,US,METAR
KOHX,,36.25,-86.57,176.0,OLD HICKORY/NASH,TN,US,NEXRAD WFO_office
KOIC,,42.57,-75.52,311.0,NORWICH         ,NY,US,METAR
KOIN,,39.83,-100.53,810.0,OBERLIN         ,KS,US,METAR
KOJA,,35.55,-98.67,490.0,WEATHERFORD     ,OK,US,METAR
KOJC,,38.85,-94.73,328.0,OLATHE/EXECUTIVE,KS,US,METAR
KOKB,,33.22,-117.35,7.0,OCEANSIDE       ,CA,US,METAR
KOKC,72353,35.38,-97.6,391.0,OKLAHOMA CITY   ,OK,US,METAR TAF
KOKH,72796,48.25,-122.67,59.0,OAK HARBOR AIRPA,WA,US,METAR
KOKK,,40.53,-86.07,251.0,KOKOMO          ,IN,US,METAR
KOKM,,35.67,-95.95,215.0,OKMULGEE        ,OK,US,METAR
KOKV,,39.13,-78.15,213.0,WINCHESTER RGNL ,VA,US,METAR
KOKX,72501,40.87,-72.87,26.0,BROOKHAVEN/UPTON,NY,US,NEXRAD rawinsonde WFO_office
KOKZ,,32.97,-82.83,128.0,SANDERSVILLE    ,GA,US,METAR
KOLD,,44.95,-68.67,39.0,OLD TOWN/DEWITT ,ME,US,METAR
KOLE,,42.23,-78.37,651.0,OLEAN           ,NY,US,METAR
KOLF,,48.1,-105.58,605.0,WOLF POINT      ,MT,US,METAR TAF
KOLG,,46.3,-91.82,334.0,SOLON SPRINGS   ,WI,US,METAR
KOLM,72792,46.97,-122.9,58.0,OLYMPIA         ,WA,US,METAR TAF
KOLS,,31.42,-110.85,1194.0,NOGALES         ,AZ,US,METAR TAF
KOLU,,41.45,-97.33,438.0,COLUMBUS MUNI   ,NE,US,METAR
KOLV,,34.98,-89.78,124.0,OLIVE BRANCH    ,MS,US,METAR
KOLY,,38.72,-88.18,144.0,OLNEY-NOBLE     ,IL,US,METAR
KOLZ,,42.67,-91.97,328.0,OELWEN          ,IA,US,METAR
KOMA,72550,41.32,-95.9,299.0,OMAHA/EPPLEY    ,NE,US,METAR TAF
KOMH,,38.25,-78.05,136.0,ORANGE          ,VA,US,METAR
KOMK,72789,48.47,-119.52,395.0,OMAK            ,WA,US,METAR
KOMN,,29.3,-81.12,7.0,ORMOND BEACH VOR,FL,US,METAR
KONA,,44.07,-91.7,200.0,WINONA MUNI     ,MN,US,METAR
KONL,,42.47,-98.68,619.0,O'NEILL         ,NE,US,METAR
KONM,72362,34.02,-106.9,1467.0,SOCORRO         ,NM,US,METAR
KONO,,44.02,-117.02,668.0,ONTARIO         ,OR,US,METAR
KONP,,44.57,-124.05,43.0,NEWPORT         ,OR,US,METAR TAF
KONT,,34.05,-117.58,279.0,ONTARIO         ,CA,US,METAR TAF
KONX,,36.4,-76.02,4.0,CURRITUCK       ,NC,US,METAR
KONZ,,42.1,-83.15,179.0,DETROIT/GROSSE I,MI,US,METAR
KOOA,,41.23,-92.5,256.0,OSKALOOSA MUNI  ,IA,US,METAR
KOPF,,25.92,-80.28,1.0,MIAMI/OPA LOCKA ,FL,US,METAR TAF
KOPL,,30.55,-92.1,22.0,OPELOUSAS       ,LA,US,METAR
KOPM,,26.83,-96.93,25.0,N PADRE 975     ,TX,US,METAR
KOPN,,32.95,-84.27,241.0,THOMASTON UPSON ,GA,US,METAR
KOQN,,39.98,-75.58,141.0,WEST CHESTER    ,PA,US,METAR
KOQT,,36.02,-84.23,276.0,OAK RIDGE       ,TN,US,METAR
KOQU,,41.6,-71.42,6.0,N. KINGSTON/QUON,RI,US,METAR
KORB,,48.02,-92.87,407.0,ORR             ,MN,US,METAR
KORC,,42.98,-96.07,430.0,ORANGE CITY     ,IA,US,METAR
KORD,72530,41.95,-87.93,202.0,CHICAGO O'HARE  ,IL,US,METAR TAF
KORE,,42.57,-72.28,165.0,ORANGE          ,MA,US,METAR
KORF,72308,36.9,-76.2,5.0,NORFOLK         ,VA,US,METAR TAF
KORG,,30.07,-93.8,2.0,ORANGE          ,TX,US,METAR
KORH,,42.27,-71.87,306.0,WORCESTER       ,MA,US,METAR TAF
KORK,,34.83,-92.25,166.0,N LITTLE ROCK   ,AR,US,METAR
KORL,,28.55,-81.33,32.0,ORLANDO         ,FL,US,METAR
KORN,,30.25,-89.77,3.0,NEW ORLEANS RFC ,LA,US
KORS,,48.7,-122.92,7.0,EASTSOUND/ORCAS ,WA,US,METAR
KOSA,,33.1,-94.97,108.0,MOUNT PLEASANT  ,TX,US,METAR
KOSC,,44.45,-83.4,191.0,OSCODA/WURTSMITH,MI,US,METAR
KOSH,,43.98,-88.55,239.0,OSHKOSH         ,WI,US,METAR TAF
KOSU,,40.08,-83.08,276.0,COLUMBUS/ST UNIV,OH,US,METAR
KOSW,,37.15,-95.2,283.0,OSWEGO/VOR      ,KS,US
KOTG,,43.65,-95.57,478.0,WORTHINGTON     ,MN,US,METAR
KOTH,,43.42,-124.25,3.0,NORTH BEND      ,OR,US,METAR TAF
KOTM,,41.1,-92.45,254.0,OTTUMWA         ,IA,US,METAR TAF
KOTX,72786,47.68,-117.63,727.0,SPOKANE         ,WA,US,NEXRAD rawinsonde WFO_office
KOUN,72357,35.25,-97.47,359.0,NORMAN/WESTHEIME,OK,US,METAR rawinsonde WFO_office TAF
KOVE,,39.5,-121.62,56.0,OROVILLE        ,CA,US,METAR
KOVL,,44.78,-95.03,329.0,OLIVIA          ,MN,US,METAR
KOVN,72553,41.37,-96.02,406.0,NORTH OMAHA     ,NE,US,METAR
KOVR,,41.17,-95.73,312.0,OMAHA VOR       ,NE,US
KOVS,,43.15,-90.68,205.0,BOSCOBEL        ,WI,US,METAR
KOWA,,44.12,-93.25,345.0,OWATONNA        ,MN,US,METAR
KOWB,,37.72,-87.17,121.0,OWENSBORO/DAVIES,KY,US,METAR TAF
KOWD,,42.18,-71.17,14.0,NORWOOD         ,MA,US,METAR
KOWI,,38.53,-95.25,292.0,OTTAWA          ,KS,US,METAR
KOWP,,36.18,-96.15,267.0,SAND SPRINGS    ,OK,US,METAR
KOWX,,41.03,-83.98,232.0,OTTAWA          ,OH,US,METAR
KOXB,,38.32,-75.12,2.0,OCEAN CITY      ,MD,US,METAR
KOXC,,41.47,-73.13,211.0,OXFORD/WATERBURY,CT,US,METAR
KOXD,,39.5,-84.78,317.0,OXFORD          ,OH,US,METAR
KOXI,,41.33,-86.67,208.0,KNOX STARKE CTY ,IN,US,METAR
KOXR,,34.2,-119.2,12.0,OXNARD          ,CA,US,METAR TAF
KOXV,,41.28,-93.12,280.0,KNOXVILLE       ,IA,US,METAR
KOYM,,41.42,-78.5,582.0,ST MARYS        ,PA,US,METAR
KOZA,,30.73,-101.2,721.0,OZONA           ,TX,US,METAR
KOZR,,31.28,-85.72,90.0,OZARK/CAIRNS AAF,AL,US,METAR TAF
KOZS,,37.97,-92.68,321.0,CAMDENTON       ,MO,US,METAR
KOZW,,42.62,-83.98,288.0,HOWELL          ,MI,US,METAR
KP07,74730,30.17,-102.42,865.0,SANDERSON (RAMOS,TX,US,METAR
KP08,,32.93,-111.43,477.0,COOLIDGE MUNI   ,AZ,US,METAR
KP11,72758,48.12,-98.92,443.0,DEVILS LAKE     ,ND,US,METAR
KP24,72765,47.75,-101.83,624.0,ROSEGLEN        ,ND,US
KP28,,37.28,-98.55,469.0,MEDICINE LODGE  ,KS,US,METAR
KP35,72540,40.25,-93.72,270.0,SPICKARD        ,MO,US,METAR
KP52,,34.73,-112.03,1085.0,COTTONWOOD      ,AZ,US,METAR
KP53,,46.42,-86.65,185.0,MUNISING LAKESH ,MI,US,METAR
KP58,,44.02,-82.8,180.0,PORT HOPE       ,MI,US,METAR
KP59,,47.47,-87.88,185.0,COPPER HARBOR   ,MI,US,METAR
KP60,,44.55,-110.42,2377.0,YELLOWSTONE LAKE,WY,US,METAR
KP61,,47.57,-90.82,241.0,TOFTE (RAMOS)   ,MN,US,METAR
KP67,,46.1,-97.15,351.0,LIDGERWOOD (RAMO,ND,US,METAR
KP68,,39.6,-116.0,1813.0,EUREKA          ,NV,US,METAR
KP69,,46.15,-115.6,447.0,LOWELL/ELK CITY ,ID,US,METAR
KP75,,45.95,-86.23,178.0,MANISTIQUE      ,MI,US,METAR
KP88,,42.88,-117.65,1162.0,ROME            ,OR,US,METAR
KP92,,29.57,-91.53,1.0,SALT POINT      ,LA,US,METAR
KPAC,,44.1,-103.52,1494.0,JCT SD44 US385  ,SD,US,METAR
KPAE,,47.92,-122.28,166.0,EVERETT         ,WA,US,METAR TAF
KPAH,72435,37.07,-88.77,125.0,PADUCAH         ,KY,US,METAR NEXRAD WFO_office TAF
KPAM,74775,30.07,-85.57,4.0,TYNDALL AFB     ,FL,US,METAR TAF
KPAN,,34.25,-111.33,1575.0,PAYSON          ,AZ,US,METAR
KPAO,,37.47,-122.12,2.0,PALO ALTO       ,CA,US,METAR
KPAT,,42.57,-106.85,1912.0,PATHFINDER HILL ,WY,US,METAR
KPBF,,34.18,-91.93,63.0,PINE BLUFF/GRIDR,AR,US,METAR TAF
KPBG,,44.65,-73.47,61.0,PLATTSBURGH AFB ,NY,US,METAR TAF
KPBH,,45.7,-90.4,445.0,PHILLIPS/PRICE  ,WI,US,METAR
KPBI,72203,26.68,-80.1,4.0,WEST PALM BEACH ,FL,US,METAR TAF
KPBX,,37.57,-82.57,447.0,PIKEVILLE       ,KY,US,METAR
KPBZ,,40.53,-80.22,361.0,PITT/CORAOPOLIS ,PA,US,NEXRAD WFO_office
KPCD,,37.87,-89.87,112.0,PERRYVILLE      ,MO,US,METAR
KPCM,,28.0,-82.17,43.0,PLANT CITY MUNI ,FL,US,METAR
KPCW,,41.52,-82.87,179.0,PORT CLINTON    ,OH,US,METAR
KPCZ,,44.33,-89.02,248.0,WAUPACA         ,WI,US,METAR
KPDC,,43.02,-91.12,201.0,PRAIRIE DU CHIEN,WI,US,METAR
KPDK,,33.88,-84.3,299.0,PEACHTREE/DEKALB,GA,US,METAR TAF
KPDT,72688,45.7,-118.83,453.0,PENDLETON       ,OR,US,METAR NEXRAD WFO_office TAF
KPDX,72698,45.6,-122.62,7.0,PORTLAND        ,OR,US,METAR TAF
KPEA,,41.4,-92.95,264.0,PELLA           ,IA,US,METAR
KPEF,,38.82,-104.72,1876.0,PETERSON AFB    ,CO,US
KPEO,,42.65,-77.05,268.0,PENN YAN        ,NY,US,METAR
KPEQ,,31.38,-103.52,794.0,PECOS CITY      ,TX,US,METAR TAF
KPEX,,45.37,-94.73,359.0,PAYNESVILLE     ,MN,US,METAR
KPEZ,,28.95,-98.52,126.0,PLEASANTON MUNI ,TX,US,METAR
KPGA,72371,36.92,-111.45,1310.0,PAGE            ,AZ,US,METAR TAF
KPGD,,26.92,-82.0,7.0,PUNTA GORDA     ,FL,US,METAR TAF
KPGL,,30.4,-88.48,3.0,PASCAGOULA      ,MS,US,METAR
KPGS,,35.62,-113.53,1450.0,PEACH SPRING    ,AZ,US
KPGV,,35.63,-77.4,6.0,PITT GREENVILLE ,NC,US,METAR TAF
KPHD,,40.47,-81.42,272.0,NEW PHILADELPHIA,OH,US,METAR
KPHF,,37.13,-76.5,12.0,NEWPORT NEWS    ,VA,US,METAR TAF
KPHG,,39.73,-99.32,582.0,PHILLIPSBURG    ,KS,US,METAR
KPHI,,40.02,-74.82,4.0,MT HOLLY/PHL/WFO,NJ,US,WFO_office
KPHL,72408,39.87,-75.23,2.0,PHILADELPHIA    ,PA,US,METAR TAF
KPHN,,42.92,-82.52,195.0,PORT HURON      ,MI,US,METAR
KPHP,,44.05,-101.6,673.0,PHILIP          ,SD,US,METAR
KPHT,,36.33,-88.38,172.0,PARIS HENRY CTY ,TN,US,METAR
KPHX,72278,33.43,-112.02,338.0,PHOENIX/SKY HRBR,AZ,US,METAR TAF
KPIA,72532,40.67,-89.68,200.0,PEORIA          ,IL,US,METAR TAF
KPIB,,31.47,-89.33,91.0,PINE BELT RGNL  ,MS,US,METAR TAF
KPIE,,27.92,-82.68,1.0,ST PETERSBURG   ,FL,US,METAR TAF
KPIH,72578,42.92,-112.57,1357.0,POCATELLO       ,ID,US,METAR WFO_office TAF
KPIL,,26.17,-97.33,5.0,PORT ISABEL     ,TX,US,METAR
KPIM,,32.83,-84.88,274.0,PINE MOUNTAIN   ,GA,US,METAR
KPIN,,44.57,-106.82,1392.0,PINEY CREEK     ,WY,US,METAR
KPIR,,44.38,-100.28,524.0,PIERRE          ,SD,US,METAR TAF
KPIT,72520,40.47,-80.2,339.0,PITTSBURGH      ,PA,US,METAR rawinsonde TAF
KPJC,,40.8,-80.17,273.0,ZELIENOPLE      ,PA,US,METAR
KPKB,,39.35,-81.43,245.0,PARKERSBURG     ,WV,US,METAR TAF
KPKD,,46.9,-95.07,439.0,PARK RAPIDS     ,MN,US,METAR
KPKV,,28.65,-96.68,8.0,PORT LAVACA     ,TX,US,METAR
KPLB,,44.68,-73.53,106.0,PLATTSBURGH     ,NY,US,METAR
KPLD,,40.45,-84.98,282.0,PORTLAND        ,IN,US,METAR
KPLN,,45.57,-84.8,215.0,PELLSTON        ,MI,US,METAR TAF
KPLR,,33.57,-86.25,145.0,PELL CITY       ,AL,US,METAR
KPLU,,47.1,-122.28,164.0,PUYALLUP/THUN   ,WA,US,METAR
KPMD,,34.63,-118.08,764.0,PALMDALE        ,CA,US,METAR TAF
KPMH,,38.83,-82.85,200.0,PORTSMOUTH      ,OH,US,METAR
KPMM,,42.47,-86.12,213.0,PULLMAN VOR     ,MI,US
KPMP,,26.25,-80.12,4.0,POMPANO BEACH   ,FL,US,METAR
KPMU,,34.37,-89.9,67.0,PANOLA          ,MS,US,METAR
KPMV,,40.95,-95.92,365.0,PLATTSMOUTH MUNI,NE,US,METAR
KPNA,,42.8,-109.8,2158.0,PINEDALE R WENZ ,WY,US,METAR TAF
KPNC,,36.73,-97.1,304.0,PONCA CITY      ,OK,US,METAR TAF
KPNE,,40.08,-75.02,32.0,PHILADELPHIA/NE ,PA,US,METAR TAF
KPNM,,45.53,-93.6,298.0,PRINCETON MUNI  ,MN,US,METAR
KPNS,,30.48,-87.18,34.0,PENSACOLA       ,FL,US,METAR TAF
KPNT,,40.92,-88.62,199.0,PONTIAC         ,IL,US,METAR
KPO1,,48.13,-105.17,621.0,POPLAR          ,MT,US,METAR
KPOB,,35.17,-79.02,57.0,POPE AFB        ,NC,US,METAR TAF
KPOC,,34.1,-117.77,304.0,LA VERNE/BRACKET,CA,US,METAR
KPOE,,31.05,-93.2,98.0,FORT POLK FR    ,LA,US,METAR NEXRAD TAF
KPOF,,36.77,-90.32,99.0,POPULAR BLUFF   ,MO,US,METAR
KPOU,,41.63,-73.88,45.0,POUGHKEEPSIE    ,NY,US,METAR TAF
KPOV,,41.22,-81.25,363.0,RAVENA/PORTAGE  ,OH,US,METAR
KPOY,,44.87,-108.8,1547.0,POWELL          ,WY,US,METAR
KPPA,,35.62,-101.0,989.0,PAMPA           ,TX,US,METAR
KPPF,,37.33,-95.5,265.0,PARSONS         ,KS,US,METAR
KPPO,,41.57,-86.73,242.0,LA PORTE        ,IN,US,METAR
KPPQ,,39.63,-90.78,215.0,PITTSFIELD      ,IL,US,METAR
KPQI,72713,46.68,-68.05,154.0,PRESQUE ISLE    ,ME,US,METAR TAF
KPQL,,30.47,-88.53,4.0,PASCAGOULA      ,MS,US,METAR
KPQN,,43.98,-96.28,529.0,PIPESTONE       ,MN,US,METAR
KPQR,,45.57,-122.53,7.0,PORTLAND/WFO    ,OR,US,WFO_office
KPRB,,35.67,-120.63,249.0,PASO ROBLES     ,CA,US,METAR TAF
KPRC,,34.65,-112.42,1528.0,PRESCOTT        ,AZ,US,METAR TAF
KPRG,,39.7,-87.67,197.0,PARIS           ,IL,US,METAR
KPRN,,31.85,-86.62,137.0,GREENVILLE      ,AL,US,METAR
KPRO,,41.83,-94.17,308.0,PERRY MUNI      ,IA,US,METAR
KPRS,,29.63,-104.35,890.0,PRESIDIO/LELY IN,TX,US,METAR
KPRX,,33.63,-95.45,165.0,PARIS/COX FIELD ,TX,US,METAR
KPSB,72512,40.87,-78.07,594.0,PHILIPSBURG/MID ,PA,US,METAR
KPSC,,46.27,-119.12,121.0,PASCO           ,WA,US,METAR TAF
KPSF,,42.43,-73.28,352.0,PITTSFIELD      ,MA,US,METAR TAF
KPSK,,37.13,-80.67,629.0,DUBLIN/NEW RIV  ,VA,US,METAR
KPSM,,43.08,-70.82,34.0,PORTSMOUTH/PEASE,NH,US,METAR TAF
KPSN,,31.78,-95.7,124.0,PALESTINE MUNI  ,TX,US,METAR
KPSO,,37.28,-107.05,2332.0,PAGOSA SPRINGS  ,CO,US,METAR
KPSP,,33.82,-116.5,123.0,PALM SPRINGS    ,CA,US,METAR TAF
KPSR,74626,33.43,-112.02,342.0,PHOENIX/WFO     ,AZ,US,rawinsonde WFO_office
KPSX,,28.72,-96.25,4.0,PALACIOS        ,TX,US,METAR
KPTB,,37.17,-77.52,56.0,PETERSBURG      ,VA,US,METAR
KPTD,,44.68,-74.95,144.0,POTSDAM         ,NY,US,METAR
KPTK,,42.67,-83.42,295.0,PONTIAC         ,MI,US,METAR TAF
KPTN,,29.72,-91.33,2.0,PATTERSON MEMORI,LA,US,METAR
KPTR,,45.6,-122.6,24.0,PORTLAND/RFC    ,OR,US
KPTS,,37.45,-94.73,286.0,PITTSBURG       ,KS,US,METAR
KPTT,74543,37.7,-98.75,594.0,PRATT INDUST    ,KS,US,METAR
KPTV,,36.02,-119.07,132.0,PORTERVILLE     ,CA,US,METAR
KPTW,,40.23,-75.55,88.0,POTTSTOWN       ,PA,US,METAR
KPUB,72464,38.28,-104.5,1441.0,PUEBLO          ,CO,US,METAR WFO_office TAF
KPUC,72470,39.62,-110.75,1777.0,PRICE           ,UT,US,METAR
KPUJ,,33.92,-84.93,385.0,ATLANTA/PAULDING,GA,US,METAR
KPUM,,41.05,-105.47,2420.0,PUMPKIN VINE    ,WY,US,METAR
KPUW,,46.75,-117.12,774.0,PULLMAN/MOSCOW  ,WA,US,METAR TAF
KPUX,,38.47,-104.18,1620.0,PUEBLO CTY 88D  ,CO,US,NEXRAD
KPVB,,42.68,-90.43,311.0,PLATTEVILLE     ,WI,US,METAR
KPVC,,42.07,-70.22,1.0,PROVINCETOWN    ,MA,US,METAR
KPVD,72507,41.72,-71.43,15.0,PROVIDENCE/GREEN,RI,US,METAR TAF
KPVE,,35.65,-88.2,146.0,LEXINGTON       ,TN,US,METAR
KPVF,,38.72,-120.75,788.0,PLACERVILLE     ,CA,US,METAR
KPVG,,36.78,-76.45,7.0,NORFOLK/HAMPTON ,VA,US,METAR
KPVJ,,34.72,-97.22,287.0,PAULS VALLEY    ,OK,US,METAR
KPVU,,40.22,-111.72,1370.0,PROVO MUNI      ,UT,US,METAR TAF
KPVW,,34.17,-101.72,1029.0,PLAINVIEW       ,TX,US,METAR TAF
KPWA,,35.53,-97.65,390.0,OKLA CITY/WILEY ,OK,US,METAR
KPWC,,46.72,-94.38,394.0,PINE RIVER REGIO,MN,US,METAR
KPWD,,48.78,-104.52,690.0,PLENTYWOOD      ,MT,US,METAR
KPWE,,40.2,-96.2,415.0,PAWNEE CITY     ,NE,US
KPWG,,31.48,-97.32,178.0,MC GREGOR       ,TX,US,METAR
KPWK,,42.12,-87.9,194.0,PALWAUKEE       ,IL,US,METAR
KPWM,72606,43.65,-70.3,15.0,PORTLAND        ,ME,US,METAR TAF
KPWT,,47.5,-122.77,143.0,BREMERTON NTNL  ,WA,US,METAR TAF
KPXE,,32.52,-83.77,126.0,PERRY HOUSTON CN,GA,US,METAR
KPXV,,37.93,-87.77,117.0,POCKET CITY VOR ,IN,US
KPYE,,38.08,-122.87,447.0,POINT REYES VOR ,CA,US
KPYM,,41.92,-70.73,42.0,PLYMOUTH        ,MA,US,METAR
KPYN,,37.13,-90.72,142.0,PIEDMONT        ,MO,US,METAR
KPYX,,36.42,-100.75,890.0,PERRYTON        ,TX,US,METAR
KPZD,,31.65,-84.3,85.0,PECAN (ALBANY)  ,GA,US
KPZQ,,45.4,-83.82,199.0,ROGERS CITY     ,MI,US,METAR
KPZZ,,28.43,-91.03,25.0,SHIP SHOAL 241  ,LA,US,METAR
KRAC,,42.77,-87.82,203.0,RACINE          ,WI,US,METAR
KRAH,,35.87,-78.78,133.0,RALEIGH/WFO     ,NC,US,WFO_office
KRAL,,33.95,-117.45,254.0,RIVERSIDE       ,CA,US,METAR
KRAM,,29.05,-88.08,10.0,PHI OIL PLAT    ,AL,US,METAR
KRAP,,44.05,-103.05,965.0,RAPID CITY      ,SD,US,METAR TAF
KRAS,,27.82,-97.08,3.0,PORT ARANSAS    ,TX,US,METAR
KRAW,,38.35,-93.35,285.0,WARSAW          ,MO,US,METAR
KRAX,,35.67,-78.48,106.0,CLAYTON/RDU 88D ,NC,US,NEXRAD
KRBD,,32.68,-96.87,200.0,DALLAS/REDBIRD  ,TX,US,METAR
KRBG,,43.23,-123.35,152.0,ROSEBURG        ,OR,US,METAR TAF
KRBL,72591,40.15,-122.25,107.0,RED BLUFF       ,CA,US,METAR TAF
KRBO,,27.78,-97.68,24.0,ROBSTOWN/NUECES ,TX,US,METAR
KRBW,,32.92,-80.63,30.0,WALTERBORO      ,SC,US,METAR
KRCA,,44.15,-103.12,993.0,ELLSWORTH AFB   ,SD,US,METAR TAF
KRCE,,35.48,-97.82,412.0,OKLA CITY/PAGE  ,OK,US,METAR
KRCM,,38.78,-93.8,242.0,WARRENSBURG SKYH,MO,US,METAR
KRCR,,41.07,-86.18,240.0,ROCHESTER       ,IN,US,METAR
KRCV,,37.72,-106.35,2418.0,DEL NORTE       ,CO,US,METAR
KRCX,,45.5,-91.0,373.0,LADYSMITH/RUSK  ,WI,US,METAR
KRCZ,,34.88,-79.77,110.0,ROCKINGHAM      ,NC,US,METAR
KRDD,72592,40.52,-122.3,152.0,REDDING         ,CA,US,METAR TAF
KRDG,,40.37,-75.97,101.0,READING         ,PA,US,METAR TAF
KRDK,,41.02,-95.27,317.0,RED OAK         ,IA,US,METAR
KRDM,,44.25,-121.15,930.0,REDMOND         ,OR,US,METAR TAF
KRDR,,47.93,-97.4,276.0,GRAND FORKS AFB ,ND,US,METAR TAF
KRDU,72306,35.9,-78.78,121.0,RALEIGH/DURHAM  ,NC,US,METAR TAF
KREE,,33.6,-102.03,1017.0,REESE AFB/LUBBOC,TX,US,METAR
KREG,,30.17,-90.93,3.0,GONZALES        ,LA,US,METAR
KREI,,34.08,-117.15,480.0,REDLANDS        ,CA,US,METAR
KREL,,43.87,-99.57,542.0,RELIANCE        ,SD,US,METAR
KREO,,42.58,-117.87,1237.0,ROME            ,OR,US,METAR
KREV,72489,39.57,-119.8,1516.0,RENO/WFO        ,NV,US,rawinsonde WFO_office
KRFD,72543,42.2,-89.1,222.0,ROCKFORD        ,IL,US,METAR TAF
KRFI,,32.15,-94.85,133.0,HENDERSON RUSK C,TX,US,METAR
KRGA,,37.63,-84.33,301.0,RICHMOND        ,KY,US,METAR
KRGK,,44.58,-92.48,238.0,RED WING        ,MN,US,METAR TAF
KRGX,,39.75,-119.47,2530.0,RENO/WASHOE CTY ,NV,US,NEXRAD
KRHA,,40.85,-77.85,389.0,STATE COLLEG/RFC,PA,US
KRHI,,45.63,-89.48,493.0,RHINELANDER     ,WI,US,METAR TAF
KRHP,,35.18,-83.85,515.0,ANDREWS         ,NC,US,METAR
KRHV,,37.33,-121.82,37.0,SAN JOSE/REID   ,CA,US,METAR
KRIC,72401,37.52,-77.32,51.0,RICHMOND        ,VA,US,METAR TAF
KRID,,39.75,-84.85,346.0,RICHMOND        ,IN,US,METAR
KRIL,,39.53,-107.73,1683.0,RIFLE           ,CO,US,METAR TAF
KRIM,,43.1,-110.32,2294.0,RIM / PINEDALE  ,WY,US,METAR
KRIV,72286,33.87,-117.23,454.0,RIVERSIDE/MARCH ,CA,US,METAR TAF
KRIW,,43.07,-108.43,1662.0,RIVERTON        ,WY,US,METAR NEXRAD rawinsonde WFO_office TAF
KRIX,,33.55,-117.43,468.0,MARCH AFB/88D   ,CA,US
KRJD,,38.97,-75.87,20.0,RIDGELY         ,MD,US,METAR
KRKD,,44.07,-69.1,15.0,ROCKLAND/KNOX   ,ME,US,METAR TAF
KRKP,,28.08,-97.05,8.0,ROCKPORT        ,TX,US,METAR
KRKR,,35.02,-94.62,136.0,POTEAU (R KERR) ,OK,US,METAR
KRKS,,41.6,-109.07,2062.0,ROCK SPRINGS    ,WY,US,METAR TAF
KRKW,,35.92,-84.68,505.0,ROCKWOOD        ,TN,US,METAR
KRLD,,46.3,-119.3,118.0,RICHLAND        ,WA,US,METAR
KRLX,,38.32,-81.72,329.0,RUTHDALE/CHARLES,WV,US,NEXRAD WFO_office
KRME,,43.22,-75.4,146.0,ROME/GRIFFISS AF,NY,US,METAR TAF
KRMG,72320,34.35,-85.17,196.0,ROME            ,GA,US,METAR
KRMN,,38.4,-77.45,50.0,STAFFORD REGNL  ,VA,US,METAR
KRMX,,43.47,-75.45,154.0,GRIFFISS AFB/88D,NY,US,NEXRAD
KRMY,,42.25,-84.95,285.0,MARSHALL        ,MI,US,METAR
KRNC,,35.7,-85.85,310.0,MCMINNVILLE     ,TN,US,METAR
KRND,,29.53,-98.27,224.0,RANDOLPH AFB    ,TX,US,METAR TAF
KRNH,,45.15,-92.53,302.0,NEW RICHMOND MUN,WI,US,METAR TAF
KRNK,72318,37.2,-80.4,648.0,ROANOKE/BLACKSBG,VA,US,rawinsonde WFO_office
KRNM,,33.03,-116.92,423.0,RAMONA          ,CA,US,METAR
KRNO,72488,39.5,-119.77,1344.0,RENO            ,NV,US,METAR TAF
KRNP,,43.0,-84.13,224.0,OWOSSO          ,MI,US,METAR
KRNT,,47.5,-122.22,7.0,RENTON          ,WA,US,METAR
KRNV,,33.77,-90.75,42.0,CLEVELAND       ,MS,US,METAR
KROA,72411,37.32,-79.97,349.0,ROANOKE         ,VA,US,METAR TAF
KROC,72529,43.12,-77.68,166.0,ROCHESTER       ,NY,US,METAR TAF
KROD,,40.28,-84.03,360.0,ROSEWOOD VOR    ,OH,US
KROG,,36.37,-94.1,407.0,ROGERS          ,AR,US,METAR TAF
KROS,,45.7,-92.95,282.0,RUSH CITY       ,MN,US,METAR
KROW,72268,33.3,-104.5,1105.0,ROSWELL         ,NM,US,METAR TAF
KROX,,48.85,-95.7,320.0,ROSEAU MUNI     ,MN,US,METAR
KRPD,,45.42,-91.77,334.0,RICE LAKE       ,WI,US,METAR
KRPE,99426,29.68,-93.95,3.0,SABINE PASS     ,TX,US,METAR
KRPH,,33.12,-98.55,341.0,GRAHAM MUNI     ,TX,US,METAR
KRPJ,,41.88,-89.08,234.0,ROCHELLE/KORITZ ,IL,US,METAR
KRPX,,46.47,-108.55,1062.0,ROUNDUP         ,MT,US,METAR
KRQB,,43.72,-85.5,282.0,BIG RAPIDS      ,MI,US,METAR
KRQE,,35.65,-109.07,2056.0,WINDOW ROCK     ,AZ,US,METAR
KRQO,,35.47,-98.0,431.0,EL RENO MUNI    ,OK,US,METAR
KRRK,,45.55,-122.97,50.0,ROOSTER ROCK    ,OR,US,METAR
KRRL,,45.2,-89.72,397.0,MERRILL         ,WI,US,METAR
KRRT,,48.93,-95.33,327.0,WARROAD         ,MN,US,METAR
KRSA,,38.5,-121.5,11.0,SACRAMENTO/RFC  ,CA,US
KRSK,,36.75,-108.1,1775.0,RATTLESNAKE-FMN ,NM,US
KRSL,,38.87,-98.82,569.0,RUSSELL         ,KS,US,METAR TAF
KRSN,,32.52,-92.58,86.0,RUSTON REGIONAL ,LA,US,METAR
KRSP,,39.65,-77.47,555.0,NSF THURMONT    ,MD,US,METAR
KRST,72644,43.9,-92.5,398.0,ROCHESTER       ,MN,US,METAR TAF
KRSV,,39.02,-87.65,139.0,ROBINSON MUNI   ,IL,US,METAR
KRSW,,26.53,-81.75,8.0,FORT MYERS      ,FL,US,METAR TAF
KRTN,,36.73,-104.5,1939.0,RATON           ,NM,US,METAR
KRTS,,39.67,-119.88,1537.0,RENO/STEAD      ,NV,US,METAR
KRTX,,45.72,-122.97,479.0,PORTLD/SCAPPOOSE,OR,US,NEXRAD
KRUE,,35.25,-93.1,119.0,RUSSELLVILLE    ,AR,US,METAR
KRUG,,48.38,-100.02,469.0,RUGBY           ,ND,US,METAR
KRUQ,,35.65,-80.52,231.0,SALISBURY ROWAN ,NC,US,METAR
KRUT,,43.53,-72.95,238.0,RUTLAND STATE   ,VT,US,METAR TAF
KRVF,,45.53,-112.3,1445.0,TWIN BRIDGES    ,MT,US,METAR
KRVJ,,32.07,-82.15,60.0,REIDSVILLE      ,GA,US,METAR
KRVL,,40.68,-77.63,250.0,REEDSVILLE      ,PA,US,METAR
KRVS,,36.05,-95.98,191.0,TULSA           ,OK,US,METAR TAF
KRWF,,44.55,-95.08,312.0,REDWOOD FALL    ,MN,US,METAR TAF
KRWI,,35.85,-77.9,46.0,ROCKY MOUNT     ,NC,US,METAR TAF
KRWL,,41.8,-107.2,2066.0,RAWLINS MUNICIPA,WY,US,METAR TAF
KRWV,,30.52,-96.7,116.0,CALDWELL        ,TX,US,METAR
KRXE,,43.83,-111.8,1483.0,REXBURG         ,ID,US,METAR
KRYM,,46.08,-94.37,344.0,CAMP RIDLEY     ,MN,US,METAR
KRYN,,32.15,-111.17,731.0,TUCSON/RYAN FLD ,AZ,US,METAR
KRYT,,39.73,-77.43,274.0,FOUNTAIN DALE   ,PA,US,METAR
KRYV,,43.17,-88.72,249.0,WATERTOWN       ,WI,US,METAR
KRYW,,30.5,-97.97,370.0,LAGO VISTA      ,TX,US,METAR
KRYY,,34.02,-84.6,306.0,MARIETTA MCCOLUM,GA,US,METAR TAF
KRZC,,36.25,-94.12,443.0,RAZORBACK VOR   ,AR,US
KRZL,,40.95,-87.18,210.0,RENSSELAER      ,IN,US,METAR
KRZN,,45.82,-92.37,301.0,SIREN           ,WI,US,METAR
KRZR,,35.22,-84.8,259.0,CLEVELAND REG.  ,TN,US,METAR
KRZS,,34.52,-119.77,1104.0,SANTA BARB(VOR) ,CA,US
KRZT,,39.43,-83.02,217.0,CHILLICOTHE     ,OH,US,METAR
KRZZ,,36.43,-77.72,75.0,ROANOKE RAPIDS  ,NC,US,METAR
KS14,,44.35,-112.17,1800.0,SPENCER         ,ID,US,METAR
KS21,,43.88,-121.45,1269.0,SUNRIVER        ,OR,US,METAR
KS24,,41.3,-83.03,203.0,FREMONT         ,OH,US,METAR
KS25,,47.8,-103.25,632.0,WATFORD CITY    ,ND,US,METAR
KS32,,47.42,-98.1,435.0,COOPERSTOWN     ,ND,US,METAR
KS33,,44.67,-121.15,739.0,MADRAS          ,OR,US,METAR
KS34,,47.47,-114.9,750.0,PLAINS          ,MT,US,METAR
KS39,,44.28,-120.9,987.0,PRINEVILLE      ,OR,US,METAR
KS52,,48.42,-120.15,517.0,METHOW VALLEY   ,WA,US,METAR
KS58,,28.52,-90.57,1.0,SOUTH TIMBALIER ,LA,US,METAR
KS59,,48.28,-115.48,793.0,LIBBY           ,MT,US,METAR
KS71,,48.6,-109.25,736.0,CHINOOK         ,MT,US,METAR
KS85,,48.15,-104.5,596.0,CULBERTSON      ,MT,US,METAR
KSAA,,41.45,-106.8,2093.0,SARATOGA        ,WY,US,METAR
KSAC,,38.5,-121.5,5.0,SACRAMENTO      ,CA,US,METAR TAF
KSAD,,32.85,-109.63,937.0,SAFFORD         ,AZ,US,METAR
KSAF,,35.62,-106.1,1918.0,SANTA FE        ,NM,US,METAR TAF
KSAN,72290,32.73,-117.18,3.0,SAN DIEGO       ,CA,US,METAR TAF
KSAR,,38.15,-89.7,162.0,SPARTA          ,IL,US,METAR
KSAT,72253,29.53,-98.48,246.0,SAN ANTONIO     ,TX,US,METAR TAF
KSAV,72207,32.12,-81.2,10.0,SAVANNAH        ,GA,US,METAR TAF
KSAW,,46.35,-87.4,359.0,GWINN/SAWYER    ,MI,US,METAR TAF
KSAX,,41.07,-74.53,30.0,SPARTA VOR      ,NJ,US
KSAZ,,46.37,-94.8,391.0,STAPLES         ,MN,US,METAR
KSBA,,34.43,-119.85,2.0,SANTA BARBARA   ,CA,US,METAR TAF
KSBD,,34.08,-117.25,353.0,SAN BERNARDINO  ,CA,US,METAR TAF
KSBM,,43.78,-87.85,225.0,SHEBOYGAN       ,WI,US,METAR TAF
KSBN,72535,41.7,-86.32,236.0,SOUTH BEND      ,IN,US,METAR TAF
KSBO,,32.62,-82.37,98.0,SWAINSBORO      ,GA,US,METAR
KSBP,,35.23,-120.63,52.0,SAN LUIS OBISPO ,CA,US,METAR TAF
KSBS,,40.52,-106.87,2097.0,STEAMBOAT SPRING,CO,US,METAR
KSBY,,38.33,-75.5,14.0,SALISBURY       ,MD,US,METAR TAF
KSCD,,33.17,-86.3,164.0,SYLACAUGA       ,AL,US,METAR
KSCF,,29.12,-91.87,22.0,S MARSH268  OILP,LA,US,METAR
KSCH,,42.85,-73.92,100.0,SCHENECTADY AIRP,NY,US,METAR
KSCK,72492,37.88,-121.22,8.0,STOCKTON        ,CA,US,METAR TAF
KSCR,,35.7,-79.5,182.0,SILER CITY      ,NC,US,METAR
KSCX,,36.45,-84.58,462.0,ONEIDA          ,TN,US,METAR
KSDA,,40.75,-95.42,293.0,SHENANDOAH MUNI ,IA,US,METAR
KSDB,72383,34.75,-118.72,1377.0,SANDBERG        ,CA,US,METAR
KSDC,,43.23,-77.12,127.0,WILLIAMSON/SODUS,NY,US,METAR
KSDF,72423,38.18,-85.73,146.0,LOUISVILLE      ,KY,US,METAR TAF
KSDL,,33.62,-111.92,438.0,SCOTTSDALE      ,AZ,US,METAR TAF
KSDM,,32.58,-117.0,161.0,SAN DIEGO/BROWN ,CA,US,METAR
KSDY,,47.7,-104.2,600.0,SIDNEY RICHLAND ,MT,US,METAR TAF
KSEA,72793,47.45,-122.32,115.0,SEATTLE/METRO   ,WA,US,METAR TAF
KSEE,,32.82,-116.97,113.0,SAN DIEGO/SANTEE,CA,US,METAR
KSEF,,27.45,-81.35,17.0,SEBRING         ,FL,US,METAR
KSEG,,40.82,-76.87,136.0,SELINSGROVE     ,PA,US,METAR
KSEM,,32.35,-86.98,48.0,SELMA/CRAIG FLD ,AL,US,METAR
KSEP,72260,32.22,-98.17,399.0,STEPHENVILLE    ,TX,US,METAR
KSEQ,,29.57,-97.9,160.0,SEGUIN          ,TX,US,METAR
KSET,,38.93,-90.43,133.0,ST CHARLES      ,MO,US,METAR
KSEW,,47.45,-122.3,130.0,SEATTLE/WFO     ,WA,US,WFO_office
KSEZ,,34.85,-111.78,1455.0,SEDONA          ,AZ,US,METAR TAF
KSFB,,28.77,-81.23,16.0,SANFORD/ORLANDO ,FL,US,METAR TAF
KSFF,,47.68,-117.32,593.0,SPOKANE/FELTS   ,WA,US,METAR TAF
KSFM,,43.38,-70.72,70.0,SANFORD MUNI    ,ME,US,METAR
KSFO,72494,37.62,-122.37,2.0,SAN FRANCISCO   ,CA,US,METAR TAF
KSFQ,,36.68,-76.6,19.0,SUFFOLK         ,VA,US,METAR
KSFX,,43.1,-112.68,1364.0,SPRINGFIELD/PIH ,ID,US,NEXRAD
KSFY,,42.05,-90.12,188.0,SAVANNA/TRITOWN ,IL,US,METAR
KSFZ,,41.92,-71.5,129.0,PAWTUCKET       ,RI,US,METAR
KSGE,,41.78,-110.5,2354.0,SAGE / JUNCTION ,WY,US,METAR
KSGF,72440,37.23,-93.38,387.0,SPRINGFIELD     ,MO,US,METAR NEXRAD rawinsonde WFO_office TAF
KSGH,,39.83,-83.83,318.0,SPRINGFIELD MUNI,OH,US,METAR
KSGJ,,29.97,-81.33,2.0,ST AUGUSTINE    ,FL,US,METAR TAF
KSGR,,29.62,-95.65,22.0,HOUSTON/SUGAR LA,TX,US,METAR TAF
KSGS,,44.87,-93.03,250.0,SOUTH ST PAUL   ,MN,US,METAR
KSGT,,34.6,-91.57,67.0,STUTTGART       ,AR,US,METAR
KSGU,,37.03,-113.52,877.0,SAINT GEORGE    ,UT,US,METAR TAF
KSGX,,32.73,-117.17,9.0,SAN DIEGO/WFO   ,CA,US,WFO_office
KSHC,,41.93,-109.97,2043.0,SHUTE CREEK     ,WY,US,METAR
KSHD,,38.27,-78.9,360.0,STAUNTON/SHENAND,VA,US,METAR
KSHL,,43.22,-95.83,430.0,SHELDON         ,IA,US,METAR
KSHM,,38.8,-104.52,1900.0,SCHRIEVER AFB   ,CO,US,METAR
KSHN,,47.23,-123.13,84.0,SHELTON         ,WA,US,METAR
KSHR,72666,44.77,-106.97,1212.0,SHERIDAN        ,WY,US,METAR TAF
KSHV,72248,32.45,-93.83,70.0,SHREVEPORT      ,LA,US,METAR NEXRAD rawinsonde WFO_office TAF
KSIB,,42.45,-105.03,1500.0,SIBLEY PEAK     ,WY,US,METAR
KSIE,,39.1,-74.8,30.0,SEA ISLE VOR    ,NJ,US
KSIF,,36.43,-79.85,206.0,REIDSVILLE      ,NC,US,METAR
KSIK,,36.9,-89.57,95.0,SIKESTON        ,MO,US,METAR
KSIY,,41.77,-122.47,807.0,MONTAGUE/SISKIYO,CA,US,METAR
KSJC,,37.37,-121.92,13.0,SAN JOSE        ,CA,US,METAR TAF
KSJI,,30.73,-88.37,63.0,SEMMNES VOR     ,AL,US
KSJN,,34.52,-109.38,1747.0,ST. JOHNS       ,AZ,US,METAR
KSJS,,37.75,-82.63,359.0,BIG SANDY RGNL  ,KY,US,METAR TAF
KSJT,72263,31.37,-100.5,582.0,SAN ANGELO      ,TX,US,METAR NEXRAD WFO_office TAF
KSJX,,45.7,-85.57,202.0,BEAVER ISLAND   ,MI,US,METAR
KSKA,,47.62,-117.67,754.0,FAIRCHILD AFB   ,WA,US,METAR TAF
KSKF,,29.38,-98.57,214.0,KELLY AFB       ,TX,US,METAR TAF
KSKL,,41.12,-106.57,2451.0,SKYLINE         ,WY,US,METAR
KSKX,,36.45,-105.67,2163.0,TAOS MUNI APT   ,NM,US,METAR
KSL0,,44.03,-103.43,1478.0,SHERIDAN LAKE RD,SD,US,METAR
KSLB,,42.6,-95.23,450.0,STORM LAKE      ,IA,US,METAR
KSLC,72572,40.77,-111.97,1286.0,SALT LAKE CITY  ,UT,US,METAR rawinsonde WFO_office TAF
KSLE,72694,44.9,-123.0,63.0,SALEM           ,OR,US,METAR rawinsonde TAF
KSLG,,36.2,-94.48,361.0,SILOAM SPRING   ,AR,US,METAR
KSLH,,45.65,-84.52,193.0,CHEBOYGAN       ,MI,US,METAR
KSLI,,33.78,-118.03,8.0,LOS ALAMITOS AAF,CA,US,METAR TAF
KSLK,,44.4,-74.2,502.0,SARANAC LAKE    ,NY,US,METAR TAF
KSLN,,38.8,-97.65,377.0,SALINA          ,KS,US,METAR TAF
KSLO,72433,38.65,-88.97,173.0,SALEM/LECKRONE  ,IL,US,METAR
KSLR,,33.17,-95.62,144.0,SULPHUR SPRINGS ,TX,US,METAR
KSLT,,41.5,-77.97,707.0,SLATE RUN       ,PA,US
KSMD,,41.15,-85.15,252.0,FORT WAYNE SMITH,IN,US,METAR
KSME,,37.05,-84.62,279.0,SOMERSET        ,KY,US,METAR TAF
KSMF,,38.7,-121.6,7.0,SACRAMENTO/METRO,CA,US,METAR TAF
KSMN,,45.12,-113.87,1228.0,SALMON/LEMHI    ,ID,US,METAR TAF
KSMO,,34.02,-118.45,56.0,SANTA MONICA    ,CA,US,METAR TAF
KSMP,,47.28,-121.33,1206.0,STAMPEDE PASS   ,WA,US,METAR
KSMQ,,40.62,-74.67,30.0,SOMERVILLE      ,NJ,US,METAR
KSMS,,34.0,-80.37,53.0,SUMTER          ,SC,US,METAR
KSMX,72394,34.9,-120.45,73.0,SANTA MARIA     ,CA,US,METAR TAF
KSNA,,33.67,-117.87,14.0,COSTA MESA      ,CA,US,METAR TAF
KSNC,,41.38,-72.5,114.0,CHESTER         ,CT,US,METAR
KSNH,,35.17,-88.22,142.0,SAVANNAH HARDIN ,TN,US,METAR
KSNK,,32.7,-100.95,738.0,SNYDER/WINSTON  ,TX,US,METAR
KSNL,,35.35,-96.95,327.0,SHAWNEE         ,OK,US,METAR
KSNS,,36.67,-121.6,20.0,SALINAS         ,CA,US,METAR TAF
KSNT,,44.17,-114.93,1980.0,STANLEY         ,ID,US,METAR
KSNY,72561,41.1,-102.98,1307.0,SIDNEY          ,NE,US,METAR TAF
KSOA,,30.58,-100.65,654.0,SONORA          ,TX,US,METAR TAF
KSOP,,35.23,-79.4,135.0,SOUTHERN PINES  ,NC,US,METAR
KSOW,,34.27,-110.0,1954.0,SHOW LOW MUNICIP,AZ,US,METAR
KSOX,,33.82,-117.63,923.0,ORANGE CTY/88D  ,CA,US,NEXRAD
KSPA,,34.92,-81.95,242.0,SPARTANBURG     ,SC,US,METAR
KSPB,,45.77,-122.87,15.0,SCAPPOOSE       ,OR,US,METAR
KSPD,,37.28,-102.62,1340.0,SPRINGFIELD     ,CO,US,METAR
KSPF,,44.47,-103.78,1191.0,SPEARFISH/CLYDE ,SD,US,METAR
KSPG,,27.77,-82.63,1.0,ST PETERS/ALBERT,FL,US,METAR
KSPI,72439,39.85,-89.68,179.0,SPRINGFIELD     ,IL,US,METAR TAF
KSPK,,40.15,-111.67,1381.0,SPANISH FORK    ,UT,US,METAR
KSPL,,26.07,-97.15,4.0,SOUTH PADRE IS  ,TX,US,METAR
KSPR,,28.6,-91.2,26.0,SHIP SHOAL178   ,LA,US,METAR
KSPS,72351,33.98,-98.5,310.0,WICHITA FALL    ,TX,US,METAR TAF
KSPW,72560,43.17,-95.22,407.0,SPENCER         ,IA,US,METAR
KSQE,,28.07,-90.82,29.0,GOMEX 354       ,LA,US,METAR
KSQI,,41.75,-89.67,196.0,STERLING ROCKFAL,IL,US,METAR
KSQL,,37.52,-122.25,1.0,SAN CARLOS AIRPO,CA,US,METAR
KSQS,,33.47,-90.28,42.0,SIDON VOR       ,MS,US
KSRB,,36.05,-85.53,303.0,SPARTA          ,TN,US,METAR
KSRC,,35.22,-91.73,80.0,SEARCY          ,AR,US,METAR
KSRE,,35.27,-96.68,306.0,SEMINOLE        ,OK,US,METAR
KSRN,,29.12,-91.87,1.0,S MARSH ISL 268 ,LA,US,METAR
KSRQ,,27.4,-82.57,5.0,SARASOTA/BRADENT,FL,US,METAR TAF
KSRR,00002,33.47,-105.52,2063.0,SIERRA B/RUIDOSO,NM,US,METAR
KSRX,,35.28,-94.37,195.0,SLATINGTON MTN. ,AR,US,NEXRAD
KSSC,74790,33.97,-80.47,71.0,SHAW AFB/SUMTER ,SC,US,METAR TAF
KSSF,,29.33,-98.47,175.0,S ANTONIO/STINSN,TX,US,METAR TAF
KSSI,,31.15,-81.38,6.0,BRUNSWICK       ,GA,US,METAR TAF
KSSM,,46.47,-84.37,221.0,SAULT STE MARIE ,MI,US,METAR
KSSO,,32.27,-109.25,1097.0,SAN SIMON       ,AZ,US
KSSU,,37.77,-80.32,549.0,WHITE SULPHUR SP,WV,US,METAR
KSTC,72655,45.55,-94.05,302.0,ST. CLOUD       ,MN,US,METAR TAF
KSTE,,44.55,-89.53,335.0,STEVENS POINT   ,WI,US,METAR
KSTF,,33.43,-88.85,99.0,STARKVILLE      ,MS,US,METAR
KSTJ,72449,39.77,-94.92,247.0,ST JOSEPH       ,MO,US,METAR TAF
KSTK,,40.62,-103.27,1228.0,STERLING        ,CO,US,METAR
KSTL,72434,38.75,-90.37,163.0,ST LOUIS        ,MO,US,METAR TAF
KSTO,72483,38.5,-121.5,5.0,SACRAMENTO/WFO  ,CA,US,WFO_office
KSTP,,44.93,-93.05,213.0,ST. PAUL        ,MN,US,METAR TAF
KSTR,,39.3,-102.6,1345.0,STRATTON        ,CO,US,METAR
KSTS,,38.5,-122.82,35.0,SANTA ROSA      ,CA,US,METAR TAF
KSTT,,18.33,-64.98,15.0,CHARLOTTE AMALIE,,VI,METAR
KSTZ,,28.17,-90.67,25.0,S TIMBALIER 301B,LA,US,METAR
KSUA,,27.18,-80.22,4.0,STUART/WITHAM   ,FL,US,METAR TAF
KSUE,,44.85,-87.42,215.0,STURGEON BAY    ,WI,US,METAR
KSUM,,45.33,-97.08,607.0,SUMMIT          ,SD,US,METAR
KSUN,,43.5,-114.28,1619.0,HAILEY/FRIEDMAN ,ID,US,METAR TAF
KSUS,,38.65,-90.65,140.0,ST LOUIS/SPIRIT ,MO,US,METAR TAF
KSUT,,33.93,-78.08,6.0,SOUTHPORT       ,NC,US,METAR
KSUU,74516,38.27,-121.93,9.0,TRAVIS AFB/FAIRF,CA,US,METAR TAF
KSUW,,46.68,-92.1,205.0,SUPERIOR        ,WI,US,METAR
KSUX,72557,42.38,-96.38,332.0,SIOUX CITY      ,IA,US,METAR TAF
KSUZ,,34.58,-92.48,114.0,BENTON          ,AR,US,METAR
KSVC,72272,32.63,-108.15,1638.0,SILVER CITY     ,NM,US,METAR
KSVE,,40.37,-120.57,1263.0,SUSANVILLE MUNI ,CA,US,METAR
KSVH,,35.75,-80.95,286.0,STATESVILLE     ,NC,US,METAR
KSVM,,42.42,-83.6,290.0,SALEM (LANSING) ,MI,US,METAR
KSVN,,32.02,-81.12,13.0,SAVANNAH/HUNTER ,GA,US,METAR TAF
KSWF,,41.5,-74.08,139.0,NEWBURGH/STEWART,NY,US,METAR TAF
KSWO,,36.17,-97.08,293.0,STILLWATER      ,OK,US,METAR TAF
KSWW,,32.47,-100.47,718.0,SWEETWATER      ,TX,US,METAR
KSXK,,42.98,-96.17,430.0,MAURICE         ,IA,US,METAR
KSXS,,31.37,-85.85,120.0,FT RUCKER/SHELL ,AL,US,METAR
KSXT,,42.6,-123.37,1151.0,SEXTON SUMMIT   ,OR,US,METAR
KSXU,,34.93,-104.65,1465.0,SANTA ROSA      ,NM,US,METAR
KSYF,,39.77,-101.8,1041.0,ST FRANCIS      ,KS,US,METAR
KSYI,,35.57,-86.45,244.0,SHELBYVILLE     ,TN,US,METAR
KSYL,,35.75,-120.7,220.0,CAMP ROBERTS    ,CA,US
KSYM,,38.22,-83.58,307.0,MOREHEAD        ,KY,US,METAR TAF
KSYN,,44.47,-93.02,280.0,STANTON         ,MN,US,METAR
KSYR,72519,43.12,-76.1,125.0,SYRACUSE        ,NY,US,METAR TAF
KSZL,,38.73,-93.53,259.0,WHITEMAN AFB    ,MO,US,METAR TAF
KSZT,,48.3,-116.57,649.0,WALL/SANDPOINT  ,ID,US,METAR
KSZY,,35.2,-88.5,184.0,SELMER          ,TN,US,METAR
KT20,,29.52,-97.47,107.0,GONZALES MUNI   ,TX,US,METAR
KT35,,30.88,-96.97,122.0,CAMERON         ,TX,US,METAR
KT41,,29.67,-95.07,8.0,LA PORTE        ,TX,US,METAR
KT62,,40.32,-112.28,1628.0,TOOELE          ,UT,US,METAR
KT65,,26.18,-97.97,21.0,WESLACO MIDVALLY,TX,US,METAR
KT69,,28.03,-97.55,15.0,SINTON          ,TX,US,METAR
KT70,,29.12,-100.48,296.0,LAUGHLIN AFB/AUX,TX,US,METAR
KT74,,30.57,-97.45,169.0,TAYLOR          ,TX,US,METAR
KT77,,29.63,-104.35,896.0,PRESIDIO/LELY IN,TX,US,METAR
KT78,,30.08,-94.7,21.0,LIBERTY         ,TX,US,METAR
KT82,,30.25,-98.92,509.0,FREDERICKSBURG  ,TX,US,METAR
KT89,,29.27,-103.68,801.0,LAJITAS         ,TX,US,METAR
KT98,,29.88,-97.87,182.0,SAN MARCOS      ,TX,US,METAR
KTAD,,37.27,-104.33,1751.0,TRINIDAD/ANIMAS ,CO,US,METAR
KTAE,,30.4,-84.33,16.0,TALLAHASSEE/WFO ,FL,US,WFO_office
KTAN,,41.88,-71.02,8.0,TAUNTON         ,MA,US,METAR
KTAR,,41.95,-71.13,36.0,BOSTON/RFC      ,MA,US
KTAZ,,39.53,-89.33,188.0,TAYLORVILLE     ,IL,US,METAR
KTBC,,36.12,-111.27,1538.0,TUBA CITY       ,AZ,US
KTBE,,37.27,-103.6,1747.0,TOBE/VOR        ,CO,US
KTBN,,37.73,-92.13,349.0,FORT LEONARD WOO,MO,US,METAR TAF
KTBR,,32.48,-81.73,54.0,STATESBORO      ,GA,US,METAR
KTBW,72210,27.7,-82.4,12.0,TAMPA BAY/RUSKIN,FL,US,NEXRAD rawinsonde WFO_office
KTBX,,43.47,-108.23,2230.0,BOYSEN/THERMOPOL,WY,US,METAR
KTCC,,35.18,-103.6,1233.0,TUCUMCARI       ,NM,US,METAR TAF
KTCL,,33.22,-87.62,48.0,TUSCALOOSA      ,AL,US,METAR TAF
KTCM,74206,47.13,-122.47,87.0,TACOMA/MC CHORD ,WA,US,METAR TAF
KTCS,72271,33.23,-107.27,1471.0,TRUTH OR CONSEQ.,NM,US,METAR TAF
KTCY,,37.68,-121.43,51.0,TRACY           ,CA,US,METAR
KTDF,,36.28,-78.98,180.0,ROXBORO PERSON  ,NC,US,METAR
KTDO,,46.47,-122.8,106.0,TOLEDO WINLOCK M,WA,US,METAR
KTDR,,30.05,-85.52,4.0,TYNDALL DRONE   ,FL,US,METAR
KTDZ,,41.57,-83.48,189.0,TOLEDO          ,OH,US,METAR
KTEB,,40.87,-74.05,3.0,TETERBORO       ,NJ,US,METAR TAF
KTEW,,42.57,-84.42,281.0,MASON           ,MI,US,METAR
KTEX,,37.95,-107.9,2760.0,TELLURIDE REGION,CO,US,METAR TAF
KTFP,,27.92,-97.22,5.0,INGLESIDE/TP MCC,TX,US,METAR
KTFX,72776,47.47,-111.38,1132.0,GREAT FALLS/88D ,MT,US,NEXRAD rawinsonde WFO_office
KTGI,,37.82,-75.98,1.0,TANGIER ISLAND  ,VA,US,METAR
KTHA,,35.38,-86.25,333.0,TULLAHOMA       ,TN,US,METAR
KTHM,,47.57,-115.28,751.0,THOMPSON FALLS  ,MT,US,METAR
KTHV,,39.92,-76.88,141.0,YORK            ,PA,US,METAR
KTIF,,41.97,-100.57,888.0,THEDFORD/THOMAS ,NE,US,METAR
KTIK,72354,35.4,-97.38,387.0,TINKER AFB      ,OK,US,METAR TAF
KTIP,,40.28,-88.15,224.0,RANTOUL         ,IL,US,METAR
KTIR,,39.42,-83.82,335.0,WILMINGTON/RFC  ,OH,US
KTIW,,47.27,-122.58,89.0,TACOMA          ,WA,US,METAR
KTIX,,28.5,-80.8,10.0,TITUSVILLE      ,FL,US,METAR TAF
KTKC,,44.25,-95.62,408.0,TRACY           ,MN,US,METAR
KTKI,,33.18,-96.58,173.0,MCKINNEY        ,TX,US,METAR
KTKV,,45.47,-89.82,449.0,TOMAHAWK REGNL  ,WI,US,METAR
KTKX,,36.22,-90.03,73.0,KENNETT         ,MO,US,METAR
KTLH,72214,30.4,-84.35,17.0,TALLAHASSEE     ,FL,US,METAR NEXRAD rawinsonde TAF
KTLS,,45.22,-99.67,596.0,TOLSTOY         ,SD,US,METAR
KTLX,,35.33,-97.28,370.0,TWIN LAKES/88D  ,OK,US,NEXRAD
KTMA,,31.43,-83.48,105.0,TIFTON          ,GA,US,METAR
KTMB,,25.65,-80.43,2.0,MIAMI/EXECUTIVE ,FL,US,METAR TAF
KTME,,29.8,-95.9,49.0,HOUSTON EXEC    ,TX,US,METAR
KTMH,,43.12,-106.33,1743.0,20 MILE HILL    ,WY,US,METAR
KTMK,,45.42,-123.82,8.0,TILLAMOOK       ,OR,US,METAR
KTMT,,39.47,-117.2,1748.0,AUSTIN          ,NV,US,METAR
KTNB,,36.2,-81.65,958.0,BOONE WATAUGA CT,NC,US,METAR
KTNU,,41.67,-93.02,287.0,NEWTON MUNI     ,IA,US,METAR
KTOA,,33.8,-118.33,30.0,TORRANCE MUNICIP,CA,US,METAR
KTOB,,44.02,-92.82,394.0,DODGE CENTER    ,MN,US,METAR
KTOC,,34.6,-83.3,292.0,TOCCOA          ,GA,US,METAR
KTOI,,31.85,-86.02,120.0,TROY            ,AL,US,METAR TAF
KTOL,72536,41.58,-83.8,206.0,TOLEDO          ,OH,US,METAR TAF
KTOP,72456,39.07,-95.63,268.0,TOPEKA          ,KS,US,METAR rawinsonde WFO_office TAF
KTOR,,42.07,-104.15,1285.0,TORRINGTON      ,WY,US,METAR
KTOU,99430,48.3,-124.63,520.0,TATOOSH/VOR     ,WA,US
KTOW,,44.9,-110.38,1800.0,TOWER FALLS     ,WY,US,METAR
KTPA,72211,27.97,-82.53,2.0,TAMPA           ,FL,US,METAR TAF
KTPF,,27.92,-82.45,1.0,TAMPA/O KNIGHT  ,FL,US,METAR
KTPH,,38.05,-117.08,1647.0,TONOPAH         ,NV,US,METAR TAF
KTPL,,31.15,-97.4,206.0,TEMPLE/MILLER   ,TX,US,METAR
KTQE,,41.77,-96.18,312.0,TEKAMAH         ,NE,US,METAR
KTQH,,35.93,-95.0,265.0,TAHLEQUAH       ,OK,US,METAR
KTQK,,38.47,-100.88,906.0,SCOTT CITY      ,KS,US,METAR
KTQV,,36.0,-78.93,230.0,DURHAM/DUKE     ,NC,US,METAR
KTRB,,38.45,-101.75,1103.0,TRIBUNE         ,KS,US,METAR
KTRI,,36.48,-82.4,456.0,BRISTOL         ,TN,US,METAR TAF
KTRK,,39.32,-120.13,1800.0,TRUCKEE TAHOE   ,CA,US,METAR TAF
KTRL,,32.72,-96.27,144.0,TERRELL         ,TX,US,METAR
KTRM,,33.63,-116.17,-39.0,THERMAL/PALM SPG,CA,US,METAR TAF
KTRV,,27.65,-80.42,10.0,VERO BEACH      ,FL,US,METAR
KTSA,,36.2,-95.9,205.0,TULSA/WFO       ,OK,US,WFO_office
KTSP,,35.13,-118.43,1209.0,TEHACHAPI       ,CA,US,METAR
KTTA,,35.58,-79.1,71.0,SANFORD         ,NC,US,METAR
KTTD,,45.55,-122.42,8.0,TROUTDALE       ,OR,US,METAR TAF
KTTF,,41.93,-83.42,186.0,MONROE          ,MI,US,METAR
KTTH,,39.48,-87.25,179.0,TERRE HAUTE VOR ,IN,US
KTTN,,40.28,-74.82,58.0,TRENTON         ,NJ,US,METAR TAF
KTTS,,28.58,-80.67,1.0,NASA SHUTTLE FCL,FL,US,METAR TAF
KTTT,,32.87,-97.03,165.0,MAVERICK (DFW)  ,TX,US
KTUA,,36.15,-95.85,205.0,TULSA/RFC       ,OK,US
KTUL,72356,36.2,-95.88,196.0,TULSA           ,OK,US,METAR TAF
KTUP,72332,34.27,-88.77,107.0,TUPELO          ,MS,US,METAR TAF
KTUS,,32.13,-110.95,776.0,TUCSON          ,AZ,US,METAR TAF
KTVC,,44.73,-85.58,188.0,TRAVERSE CIT    ,MI,US,METAR TAF
KTVF,,48.07,-96.17,339.0,THIEF RIVER     ,MN,US,METAR TAF
KTVI,,30.9,-83.88,74.0,THOMASVILLE     ,GA,US,METAR
KTVK,,40.68,-92.9,311.0,CENTERVILLE MUNI,IA,US,METAR
KTVL,,38.9,-120.0,1907.0,SOUTH LAKE TAHOE,CA,US,METAR TAF
KTVR,,32.35,-91.03,25.0,TALLULAH/VICKSBU,LA,US,METAR
KTVY,,40.62,-112.35,1310.0,TOOELE          ,UT,US,METAR
KTWC,72274,32.23,-110.95,752.0,TUCSON/WFO      ,AZ,US,rawinsonde WFO_office
KTWF,,42.48,-114.48,1269.0,TWIN FALLS      ,ID,US,METAR TAF
KTWM,,47.05,-91.75,331.0,TWO HARBORS     ,MN,US,METAR
KTWT,,37.55,-87.95,113.0,STURGIS         ,KY,US,METAR
KTWX,,39.0,-96.23,417.0,ALMA/TOPEKA     ,KS,US,NEXRAD
KTXK,,33.45,-93.98,118.0,TEXARKANA       ,AR,US,METAR TAF
KTXO,,34.5,-102.83,1353.0,TEXICO (VOR)    ,TX,US
KTXW,,26.18,-97.97,21.0,WESLACO MIDVALLY,TX,US,METAR
KTYL,,34.45,-110.12,1748.0,TAYLOR          ,AZ,US,METAR
KTYQ,,40.03,-86.25,279.0,INDIANAPOLIS EXC,IN,US,METAR
KTYR,,32.37,-95.4,161.0,TYLER           ,TX,US,METAR TAF
KTYS,72326,35.82,-83.98,300.0,KNOXVILLE       ,TN,US,METAR TAF
KTYX,,43.75,-75.68,562.0,FORT DRUM/88D   ,NY,US,NEXRAD
KTZR,,39.9,-83.13,275.0,COLUMBUS/BOLTON ,OH,US,METAR
KTZV,,36.73,-85.65,316.0,TOMPKINSVILLE   ,KY,US,METAR
KU16,,41.05,-113.07,1292.0,EAGLE RANGE     ,UT,US,METAR
KU24,72479,39.33,-112.58,1414.0,DELTA           ,UT,US,METAR
KU28,72477,39.0,-110.17,1241.0,GREEN RIVER RANG,UT,US,METAR
KU31,,39.5,-117.07,2014.0,AUSTIN          ,NV,US,METAR
KU42,,40.62,-111.98,1399.0,SALT LAKE MUNI  ,UT,US,METAR
KU52,,38.23,-112.67,1787.0,BEAVER          ,UT,US,METAR
KU55,,37.85,-112.38,2060.0,PANGUITCH       ,UT,US,METAR
KU67,74420,40.28,-109.97,1556.0,ROOSEVELT       ,UT,US,METAR
KU68,,44.92,-108.45,1244.0,COWLEY          ,WY,US,METAR
KU69,,40.2,-110.38,1776.0,DUCHESNE        ,UT,US,METAR
KU78,,42.63,-111.57,1778.0,SODA SPRINGS    ,ID,US,METAR
KUAO,,45.25,-122.77,60.0,AURORA          ,OR,US,METAR TAF
KUBE,,45.5,-91.98,376.0,CUMBERLAND      ,WI,US,METAR
KUCA,,43.15,-75.38,228.0,UTICA           ,NY,US,METAR TAF
KUCC,72385,36.95,-116.05,1195.0,YUCCA FLAT      ,NV,US
KUCP,,41.03,-80.42,313.0,NEW CASTLE MUNI ,PA,US,METAR
KUCY,,36.38,-88.98,97.0,UNION CITY      ,TN,US,METAR
KUDG,,34.45,-79.88,57.0,DARLINGTON CNTY ,SC,US,METAR
KUDX,,44.13,-102.83,919.0,RAPID/N UNDERWOD,SD,US,NEXRAD
KUES,,43.05,-88.25,273.0,WAUKESHA CNTY   ,WI,US,METAR TAF
KUEX,,40.32,-98.45,602.0,WEBSTER CNTY/88D,NE,US,NEXRAD
KUGN,,42.42,-87.87,217.0,WAUKEGAN        ,IL,US,METAR
KUIL,72797,47.93,-124.55,58.0,QUILLAYUTE      ,WA,US,METAR rawinsonde
KUIN,,39.95,-91.2,233.0,QUINCY MUNI/BALD,IL,US,METAR TAF
KUKF,,36.22,-81.1,383.0,WILKESBORO      ,NC,US,METAR
KUKI,,39.12,-123.2,183.0,UKIAH           ,CA,US,METAR TAF
KUKL,,38.3,-95.73,357.0,BURLINGTON      ,KS,US,METAR
KUKT,,40.43,-75.38,156.0,QUAKERTOWN ARP  ,PA,US,METAR
KULM,,44.32,-94.5,305.0,NEW ULM MUNI    ,MN,US,METAR
KULS,,37.6,-101.37,934.0,ULYSSES         ,KS,US,METAR
KUMN,72349,36.87,-93.9,437.0,MONETT          ,MO,US
KUMP,,39.93,-86.05,247.0,INDIANAPOLIS MET,IN,US,METAR
KUNI,,39.22,-82.23,232.0,ATHENS          ,OH,US,METAR
KUNO,,36.88,-91.9,376.0,WEST PLAINS     ,MO,US,METAR
KUNR,,44.07,-103.2,1028.0,RAPID CITY/WFO  ,SD,US,METAR rawinsonde WFO_office
KUNU,,43.42,-88.7,281.0,JUNEAU          ,WI,US,METAR
KUNV,,40.85,-77.83,365.0,STATE COLLEGE   ,PA,US,METAR TAF
KUOX,,34.38,-89.53,123.0,OXFORD          ,MS,US,METAR
KUSE,,41.62,-84.13,237.0,WAUSEON         ,OH,US,METAR
KUTA,,34.68,-90.35,58.0,TUNICA          ,MS,US,METAR
KUTS,,30.75,-95.58,103.0,HUNTSVILLE      ,TX,US,METAR TAF
KUUU,,41.53,-71.28,45.0,NEWPORT         ,RI,US,METAR
KUUV,,38.23,-91.17,284.0,SULLIVAN        ,MO,US,METAR
KUVA,,29.22,-99.75,285.0,UVALDE/GARNER F ,TX,US,METAR
KUXL,,30.13,-93.38,2.0,SULPHUR         ,LA,US,METAR
KUYF,,39.93,-83.47,326.0,LONDON          ,OH,US,METAR
KUZA,,34.98,-81.05,198.0,ROCK HILL       ,SC,US,METAR
KVAD,74781,30.97,-83.2,70.0,MOODY AFB/VALDOS,GA,US,METAR TAF
KVAF,,27.35,-94.63,38.0,E BREAKS BOOMVNG,TX,US,METAR
KVAX,,30.88,-83.0,54.0,MOODY AFB/88D   ,GA,US,NEXRAD
KVAY,,39.93,-74.83,15.0,MOUNT HOLLY     ,NJ,US,METAR
KVBG,72393,34.73,-120.58,96.0,VANDENBERG AFB  ,CA,US,METAR rawinsonde TAF
KVBS,,29.48,-93.63,21.0,SABINE 13B  OILP,LA,US,METAR
KVBT,,36.35,-94.22,390.0,BENTONVILLE     ,AR,US,METAR
KVBW,,38.37,-78.97,362.0,BRIDGEWATER     ,VA,US,METAR
KVBX,,34.83,-120.4,373.0,ORCUTT OIL/VBG  ,CA,US,NEXRAD
KVCB,,38.38,-121.95,30.0,VACAVILLE       ,CA,US,METAR
KVCT,72255,28.87,-96.93,33.0,VICTORIA        ,TX,US,METAR TAF
KVCV,,34.58,-117.38,871.0,VICTORVILLE     ,CA,US,METAR
KVDF,,28.02,-82.33,5.0,TAMPA/VANDENBURG,FL,US,METAR
KVDI,,32.2,-82.37,81.0,VIDALIA MUNI    ,GA,US,METAR
KVDW,,41.15,-105.4,2542.0,VEDAUWOO        ,WY,US,METAR
KVEF,72388,36.05,-115.18,694.0,LAS VEGAS/WFO   ,NV,US,rawinsonde WFO_office
KVEL,,40.45,-109.52,1604.0,VERNAL          ,UT,US,METAR TAF
KVER,,38.95,-92.68,209.0,BOONVILLE       ,MO,US,METAR
KVES,,40.2,-84.53,308.0,VERSAILLES      ,OH,US,METAR
KVGC,,42.85,-75.57,346.0,HAMILTON MUNICIP,NY,US,METAR
KVGT,,36.22,-115.2,664.0,NORTH LAS VEGAS ,NV,US,METAR TAF
KVHN,,31.07,-104.78,1200.0,VAN HORN        ,TX,US,METAR
KVIC,,45.9,-96.87,329.0,VICTOR          ,SD,US,METAR
KVIH,,38.13,-91.77,342.0,VICHY/ROLLA     ,MO,US,METAR
KVIS,,36.32,-119.4,92.0,VISALIA MUNI    ,CA,US,METAR TAF
KVIV,,44.23,-100.37,588.0,VIVIAN          ,SD,US,METAR
KVJI,,36.68,-82.03,636.0,ABINGDON        ,VA,US,METAR
KVKS,,32.23,-90.93,31.0,VICKSBURG       ,MS,US,METAR
KVKY,,29.25,-88.43,32.0,MAIN PASS 289C  ,LA,US,METAR
KVLA,,38.98,-89.17,162.0,VANDALIA        ,IL,US,METAR
KVLD,,30.78,-83.27,59.0,VALDOSTA REGIONA,GA,US,METAR TAF
KVLL,,42.55,-83.18,214.0,TROY/OAKLAND    ,MI,US,METAR
KVMR,,42.77,-96.93,349.0,VERMILLION      ,SD,US,METAR
KVNC,,27.07,-82.43,4.0,VENICE          ,FL,US,METAR
KVNP,,29.47,-92.37,21.0,VERMILLION26OILP,LA,US,METAR
KVNW,,40.87,-84.62,238.0,VAN WERT COUNTY ,OH,US,METAR
KVNX,,36.73,-98.13,369.0,VANCE/KEGELMAN  ,OK,US,NEXRAD
KVNY,,34.22,-118.48,241.0,VAN NUYS        ,CA,US,METAR TAF
KVOA,,29.23,-87.78,53.0,VIOSCA KNOLL768 ,AL,US,METAR
KVOK,,43.93,-90.27,278.0,VOLK/CAMP DOUGLA,WI,US,METAR TAF
KVPC,,34.1,-84.85,234.0,CARTERSVILLE    ,GA,US,METAR
KVPS,72221,30.47,-86.52,21.0,EGLIN AFB/VALPAR,FL,US,METAR TAF
KVPZ,,41.45,-87.0,235.0,VALPARAISO      ,IN,US,METAR
KVQQ,,30.22,-81.88,21.0,JACKSONVIL/CECIL,FL,US,METAR TAF
KVQT,,28.27,-92.27,25.0,VERMILION 331   ,LA,US,METAR
KVRB,,27.65,-80.42,7.0,VERO BEACH      ,FL,US,METAR TAF
KVSF,,43.35,-72.52,176.0,SPRINGFIELD     ,VT,US,METAR
KVSH,,29.95,-90.07,9.0,NEW ORLEANS/SUPE,LA,US,METAR
KVTA,,40.02,-82.47,268.0,NEWARK          ,OH,US,METAR
KVTI,,42.22,-92.02,256.0,VINTON          ,IA,US,METAR
KVTN,72567,42.87,-100.55,790.0,VALENTINE       ,NE,US,METAR TAF
KVTP,,37.5,-105.17,3086.0,LA VETA PASS    ,CO,US,METAR
KVTX,,34.42,-119.18,830.0,VENTURA CTY/88D ,CA,US,NEXRAD
KVUJ,,35.42,-80.15,174.0,ALBEMARLE STANLY,NC,US,METAR
KVUO,,45.62,-122.65,7.0,VANCOUVER       ,WA,US,METAR
KVUZ,,33.67,-86.9,250.0,VULCAN VOR      ,AL,US
KVVG,,28.97,-81.97,27.0,THE VILLAGES    ,FL,US,METAR
KVVS,,39.95,-79.65,386.0,CONNELLSVILLE   ,PA,US,METAR
KVVV,,45.3,-96.42,334.0,ORTONVILLE      ,MN,US,METAR
KVWU,,48.15,-94.52,359.0,WASKISH MUNI    ,MN,US,METAR
KVWX,,38.27,-87.72,190.0,EVANSVILLE(88D) ,IN,US,NEXRAD
KVXV,,35.9,-83.88,302.0,KNOXVILLE VOR   ,TN,US
KVYS,,41.35,-89.15,198.0,PERU            ,IL,US,METAR
KW13,,38.08,-78.95,440.0,WAYNESBORO      ,VA,US,METAR
KW22,,39.0,-80.27,497.0,BUCKHANNON      ,WV,US,METAR
KW29,,38.98,-76.33,1.0,STEVENSVILLE    ,MD,US,METAR
KW31,,36.95,-78.18,159.0,KENBRIDGE       ,VA,US,METAR
KW32,,38.75,-76.93,76.0,CLINTON         ,MD,US,METAR
KW40,,35.22,-78.03,50.0,MT OLIVE        ,NC,US,METAR
KW43,,44.67,-104.57,1292.0,HULETT MUNI     ,WY,US,METAR
KW60,,28.15,-93.35,1.0,W. CAMERON 560  ,LA,US,METAR
KW63,,36.6,-78.55,126.0,CLARKSVILLE     ,VA,US,METAR
KW75,,37.6,-76.45,8.0,SALUDA          ,VA,US,METAR
KW78,,36.7,-78.85,120.0,SOUTH BOSTON    ,VA,US,METAR
KW81,,37.18,-78.1,121.0,CREWE           ,VA,US,METAR
KW96,,37.5,-77.12,35.0,QUINTON         ,VA,US,METAR
KW99,,39.0,-79.15,288.0,PETERSBURG      ,WV,US,METAR
KWAL,72402,37.93,-75.47,10.0,WALLOPS ISLAND  ,VA,US,METAR rawinsonde
KWBC,,38.85,-76.93,50.0,NWS HDQTRS      ,DC,US
KWBF,,26.93,-90.5,40.0,WALKER RIDGE 29 ,LA,US,METAR
KWDG,,36.37,-97.78,352.0,ENID/WOODRING   ,OK,US,METAR
KWDR,,33.98,-83.67,280.0,WINDER/BARROW   ,GA,US,METAR
KWEY,72676,44.63,-111.08,2031.0,WEST YELLOWSTONE,MT,US,METAR
KWHP,,34.25,-118.42,302.0,LA / WHITEMAN   ,CA,US,METAR
KWJF,,34.73,-118.22,712.0,LANCASTER/FOX   ,CA,US,METAR TAF
KWK6,,39.03,-99.88,752.0,WAKEENEY        ,KS,US,METAR
KWLD,,37.17,-97.03,351.0,WINFIELD/ARKANSA,KS,US,METAR
KWMC,72583,40.9,-117.8,1311.0,WINNEMUCCA      ,NV,US,METAR TAF
KWNB,,38.85,-76.93,50.0,CAMP SPRINGS/DBC,MD,US
KWNC,,38.85,-76.93,50.0,CAMP SPRINGS/CPC,MD,US
KWNH,,38.85,-76.93,50.0,CAMP SPRINGS/HPC,MD,US
KWNJ,,29.63,-95.28,36.0,JOHNSON SPACE C ,TX,US
KWNM,,38.85,-76.93,50.0,CAMP SPRINGS/MPC,MD,US
KWNO,,38.85,-76.93,50.0,CAMP SPRING/NCEP,MD,US
KWNS,,35.22,-97.45,357.0,NORMAN/SPC      ,OK,US
KWRB,,32.63,-83.58,82.0,WARNER ROBINS AF,GA,US,METAR TAF
KWRI,,40.02,-74.58,35.0,WRIGHTST/MCGUIRE,NJ,US,METAR TAF
KWRL,,43.97,-107.95,1281.0,WORLAND         ,WY,US,METAR TAF
KWST,,41.35,-71.8,20.0,WESTERLY        ,RI,US,METAR
KWTA,,44.08,-102.48,810.0,WASTA I90       ,SD,US,METAR
KWTR,,41.42,-104.87,1882.0,WHITAKER        ,WY,US,METAR
KWVI,,36.93,-121.78,47.0,WATSONVILLE     ,CA,US,METAR
KWVL,,44.52,-69.67,87.0,WATERVILLE      ,ME,US,METAR
KWWD,,39.02,-74.92,4.0,WILDWOOD        ,NJ,US,METAR
KWWR,74641,36.45,-99.52,664.0,WOODWARD        ,OK,US,METAR TAF
KWYS,,44.68,-111.12,2025.0,WEST YELLOWSTONE,MT,US,METAR TAF
KX07,,27.9,-81.62,36.0,LAKE WALES      ,FL,US,METAR
KX14,,26.73,-81.43,6.0,LA BELLE        ,FL,US,METAR
KX26,,27.82,-80.5,5.0,SEBASTIAN       ,FL,US,METAR
KX41,,28.35,-82.62,12.0,PORT RICHEY     ,FL,US,METAR
KX60,,29.35,-82.47,21.0,WILLISTON       ,FL,US,METAR
KXBP,,33.18,-97.83,256.0,BRIDGEPORT      ,TX,US,METAR
KXCN,,27.77,-91.52,1.0,GREEN CANYON 184,LA,US,METAR
KXFL,,29.47,-81.2,10.0,PALM COAST      ,FL,US,METAR
KXIH,,29.18,-94.52,75.0,HIGH IS. 179A   ,LA,US,METAR
KXLL,,40.57,-75.48,118.0,ALLENTOWN QUEEN ,PA,US,METAR
KXMR,,28.47,-80.57,5.0,CAPE CANAVERAL  ,FL,US,METAR rawinsonde
KXNA,,36.28,-94.3,390.0,BENTONVILLE (NW),AR,US,METAR TAF
KXNO,,33.62,-81.07,94.0,NORTH AUX       ,SC,US,METAR
KXNX,,36.38,-86.42,178.0,GALLATIN        ,TN,US,METAR
KXPY,,29.12,-90.2,18.0,PORT FOURCHON   ,LA,US,METAR
KXSA,,37.87,-76.9,41.0,TAPPAHANNOCK    ,VA,US,METAR
KXVG,,46.98,-94.2,407.0,LONGVILLE       ,MN,US,METAR
KXVW,,34.72,-120.57,100.0,VANDENBERG RANGE,CA,US,METAR
KXWA,,48.27,-103.75,717.0,WILLISTON BASIN ,ND,US,METAR TAF
KY14,,43.45,-96.8,462.0,TEA             ,SD,US,METAR
KY19,,46.77,-100.9,591.0,MANDAN          ,ND,US,METAR
KY22,72669,45.92,-102.17,781.0,LEMMON          ,SD,US,METAR
KY23,,45.3,-91.63,322.0,CHETEK          ,WI,US,METAR
KY31,,44.25,-84.18,264.0,WEST BRANCH     ,MI,US,METAR
KY49,,47.15,-94.65,413.0,WALKER MUNI     ,MN,US,METAR
KY50,,44.03,-89.3,261.0,WAUTOMA         ,WI,US,METAR
KY51,,43.58,-90.9,390.0,VIROQUA MUNI    ,WI,US,METAR
KY63,,45.98,-96.0,367.0,ELBOW LAKE MUNI ,MN,US,METAR
KY70,,42.93,-85.07,247.0,IONIA           ,MI,US,METAR
KYIP,,42.23,-83.53,215.0,DETROIT/WILLOW  ,MI,US,METAR TAF
KYKM,72781,46.57,-120.53,319.0,YAKIMA          ,WA,US,METAR TAF
KYKN,,42.92,-97.37,388.0,YANKTON         ,SD,US,METAR
KYNG,72525,41.25,-80.67,356.0,YOUNGSTOWN      ,OH,US,METAR TAF
KYUC,,36.95,-116.03,1198.0,YUCCA FLATS     ,NV,US
KYUM,72280,32.65,-114.6,63.0,YUMA INTL       ,AZ,US,METAR TAF
KYUX,,32.5,-114.65,53.0,YUMA/88D        ,AZ,US,NEXRAD
KZAB,,35.17,-106.57,1621.0,ALBUQUERQU/ARTCC,NM,US
KZAU,,41.78,-88.33,213.0,CHICAGO/ARTCC   ,IL,US
KZBW,,42.73,-71.48,61.0,NASHUA/ARTCC-BOS,NH,US
KZDC,,39.1,-77.55,20.0,WASHINGTON/ARTCC,DC,US
KZDV,,40.18,-105.13,1498.0,DENVER/ARTCC    ,CO,US
KZER,,40.7,-76.37,518.0,POTTSVILLE      ,PA,US,METAR
KZFW,,32.83,-97.07,182.0,DALLAS/ARTCC    ,TX,US
KZHU,,29.65,-95.28,34.0,HOUSTON/ARTCC   ,TX,US
KZID,,39.73,-86.28,243.0,INDIANAPOL/ARTCC,IN,US
KZJX,,30.68,-81.9,2.0,JACKSONVIL/ARTCC,FL,US
KZKC,,38.85,-94.73,231.0,KANSAS CIT/ARTCC,MO,US
KZLA,,34.63,-118.08,819.0,LOS ANGELS/ARTCC,CA,US
KZLC,,40.77,-111.95,1287.0,SALT LAKE/ARTCC ,UT,US
KZMA,,25.77,-80.18,3.0,MIAMI/ARTCC     ,FL,US
KZME,,35.05,-89.98,101.0,MEMPHIS/ARTCC   ,TN,US
KZMP,,44.63,-93.18,256.0,MINNEAPOLS/ARTCC,MN,US
KZNY,,40.8,-73.1,48.0,NEW YORK/ARTCC  ,NY,US
KZOA,,37.55,-122.02,11.0,OAKLAND/ARTCC   ,CA,US
KZOB,,41.3,-82.2,241.0,CLEVELAND/ARTCC ,OH,US
KZPH,,28.23,-82.15,26.0,ZEPHYRHILLS     ,FL,US,METAR
KZSE,,47.28,-122.18,99.0,SEATTLE/ARTCC   ,WA,US
KZTL,,33.38,-84.33,312.0,ATLANTA/ARTCC   ,GA,US
KZZV,,39.95,-81.9,268.0,ZANESVILLE      ,OH,US,METAR TAF
LAKU,13610,42.03,20.42,354.0,KUKES           ,,AL,METAR TAF
LATI,13615,41.42,19.72,32.0,TIRANA          ,,AL,METAR TAF
LBBG,15655,42.57,27.52,41.0,BURGAS          ,,BG,METAR TAF
LBGO,,43.15,25.72,84.0,GORNA ORECHOVIST,,BG,METAR TAF
LBIA,,42.45,26.35,155.0,BEZMER          ,,BG,METAR
LBPD,15625,42.05,24.85,182.0,PLOVDIV         ,,BG,METAR TAF
LBPG,,42.28,24.72,198.0,GRAF IGNATIEVO  ,,BG,METAR TAF
LBPL,,43.45,24.5,93.0,DOLNA           ,,BG,METAR
LBRS,15535,43.85,25.93,45.0,ROUSSE/RUSE     ,,BG,METAR
LBSF,15614,42.65,23.37,592.0,SOFIA           ,,BG,METAR rawinsonde TAF
LBWB,,43.42,28.18,190.0,BALCHIK         ,,BG,METAR
LBWN,15552,43.22,27.82,74.0,VARNA           ,,BG,METAR TAF
LCEN,,35.15,33.5,91.0,ERCAN           ,,CY,METAR TAF
LCGK,,35.25,33.73,20.0,GECITKALE       ,,CY,METAR TAF
LCLK,17609,34.87,33.62,2.0,LARNACA/LARNAX A,,CY,METAR rawinsonde TAF
LCNC,17607,35.13,33.38,161.0,NICOSIA/ATHALASS,,CY,METAR rawinsonde TAF
LCPH,17600,34.72,32.47,8.0,PAPHOS/BAF INTL ,,CY,METAR rawinsonde TAF
LCRA,17601,34.58,32.98,23.0,AKROTIRI (RAF)  ,,CY,METAR rawinsonde TAF
LDDD,14240,45.82,16.03,123.0,ZAGREB/MAKSIMIR ,,HR,METAR rawinsonde
LDDU,14474,42.57,18.27,156.0,DUBROVNIK-CILIPI,,HR,METAR TAF
LDLO,,44.57,14.4,46.0,LOSINJ ISLAND   ,,HR,METAR TAF
LDOS,13157,45.47,18.82,82.0,OSIJEK          ,,HR,METAR TAF
LDPL,13209,44.88,13.92,63.0,PULA            ,,HR,METAR TAF
LDRI,13116,45.22,14.57,80.0,RIJEKA/OMISALJ  ,,HR,METAR TAF
LDSB,14446,43.28,16.68,525.0,BOL AIRPORT     ,,HR,METAR TAF
LDSP,13333,43.53,16.3,16.0,SPLIT/KASTEL STA,,HR,METAR TAF
LDWR,99018,66.0,2.0,0.0,SHIP C7M/MIKE   ,,HR,METAR
LDZA,13131,45.72,16.07,103.0,ZAGREB/PLESO    ,,HR,METAR TAF
LDZD,14431,44.1,15.33,82.0,ZADAR/ZEMUNIK   ,,HR,METAR TAF
LEAB,,38.95,-1.85,704.0,ALBACETE (CIV/MI,,ES,METAR TAF
LEAG,,36.12,-5.45,4.0,ALGECIRAS       ,,ES,METAR TAF
LEAL,,38.27,-0.55,26.0,ALICANTE/EL ALTE,,ES,METAR TAF
LEAM,,36.85,-2.37,16.0,ALMERIA AIRPORT ,,ES,METAR TAF
LEAO,,38.95,-3.73,621.0,CIUDAD REAL     ,,ES,METAR TAF
LEAS,,43.57,-6.03,120.0,ASTURIAS/AVILES ,,ES,METAR TAF
LEBA,,37.85,-4.83,88.0,CORDOBA AIRPORT ,,ES,METAR TAF
LEBB,,43.28,-2.92,38.0,BILBAO/SONDICA  ,,ES,METAR TAF
LEBG,,42.37,-3.62,892.0,BURGOS/VILLAFRIA,,ES,METAR TAF
LEBL,,41.28,2.07,2.0,BARCELONA AIRPOR,,ES,METAR TAF
LEBR,,42.2,-1.43,347.0,BARDENAS REALES ,,ES,METAR TAF
LEBT,,39.58,-0.45,50.0,VALENCIA BETERA ,,ES,METAR
LEBZ,,38.87,-6.82,183.0,TALAVERA AB/BADA,,ES,METAR TAF
LECH,,40.2,0.07,360.0,CASTELLON       ,,ES,METAR
LECO,,43.3,-8.37,80.0,LA CORUNA/ALVEDR,,ES,METAR TAF
LECV,,40.68,-3.75,995.0,MADRI-COLMENAR  ,,ES,METAR TAF
LEDA,,41.73,0.53,352.0,LLEIDA-ALGUAIRE ,,ES,METAR
LEEC,,37.32,-6.0,7.0,SEVILLA/EL COPER,,ES,METAR TAF
LEGA,,37.13,-3.62,684.0,ARMILLA (CIV/MIL,,ES,METAR TAF
LEGE,,41.9,2.77,140.0,GERONA/COSTA BRA,,ES,METAR TAF
LEGR,,37.18,-3.78,560.0,GRANADA AIRPORT ,,ES,METAR TAF
LEGT,,40.28,-3.72,619.0,MADRID/GETAFE (A,,ES,METAR TAF
LEHC,,42.08,-0.32,540.0,HUESCA-PIRINEOS ,,ES,METAR TAF
LEHI,08335,38.52,-5.12,534.0,HINOJOSA DEL DUQ,,ES,METAR
LEIB,,38.87,1.38,4.0,IBIZA/ES CODOLA ,,ES,METAR TAF
LEJR,,36.75,-6.07,25.0,JEREZ (CIV/MIL) ,,ES,METAR TAF
LELC,,37.77,-0.8,3.0,SAN JAVIER(MIL/C,,ES,METAR TAF
LELL,,41.52,2.1,136.0,SABADELL        ,,ES,METAR TAF
LELN,,42.58,-5.65,911.0,LEON/VIRGEN CAMI,,ES,METAR TAF
LELO,,42.45,-2.32,352.0,LOGRONO/AGONCILL,,ES,METAR TAF
LEMD,,40.45,-3.57,589.0,MADRID/BARAJAS  ,,ES,METAR rawinsonde TAF
LEMG,,36.67,-4.47,5.0,MALAGA (CIV/MIL),,ES,METAR TAF
LEMH,,39.87,4.22,82.0,MAHON/MENORCA IS,,ES,METAR TAF
LEMI,,37.8,-1.12,193.0,MURCIA          ,,ES,METAR
LEMO,,37.17,-5.62,82.0,MORON (SP-USAFB),,ES,METAR TAF
LEPA,,39.55,2.73,8.0,PALMA DE MALLORC,,ES,METAR TAF
LEPP,,42.77,-1.65,448.0,PAMPLONA/NOAIN  ,,ES,METAR TAF
LERI,,37.95,-1.22,74.0,ALCANTARILLA(SP-,,ES,METAR TAF
LERL,,38.85,-3.98,621.0,CUIDAD REAL     ,,ES,METAR TAF
LERS,,41.13,1.17,68.0,REUS (CIV/MIL)  ,,ES,METAR TAF
LERT,,36.63,-6.33,27.0,ROTA NAVAL STATI,,ES,METAR rawinsonde TAF
LESA,,40.95,-5.5,788.0,SALAMANCA (CIV/M,,ES,METAR TAF
LESB,,39.6,2.7,48.0,MALLORCA SON BON,,ES,METAR
LESO,,43.35,-1.8,3.0,SAN SEBASTIAN/FU,,ES,METAR TAF
LEST,,42.88,-8.42,363.0,SANTIAGO/LABACOL,,ES,METAR TAF
LESU,,42.33,1.4,802.0,LA SEU          ,,ES,METAR TAF
LETA,08390,37.37,-6.0,14.0,SEVILLA/TABLADA ,,ES,METAR
LETL,,40.42,-1.22,1024.0,TERUEL          ,,ES,METAR
LETO,,40.48,-3.47,598.0,TORREJON (USAFB),,ES,METAR TAF
LEVC,,39.5,-0.47,58.0,VALENCIA (CIV/MI,,ES,METAR TAF
LEVD,,41.72,-4.85,844.0,VALLADOLID(MIL/C,,ES,METAR TAF
LEVS,,40.37,-3.78,683.0,MADRID/CUATRO VI,,ES,METAR TAF
LEVT,,42.87,-2.72,501.0,VITORIA         ,,ES,METAR TAF
LEVX,,42.23,-8.62,253.0,VIGO/PEINADOR   ,,ES,METAR TAF
LEXJ,,43.42,-3.82,1.0,SANTANDER/PARAYA,,ES,METAR TAF
LEZA,,41.67,-1.05,263.0,ZARAGOZA (USAFB),,ES,METAR
LEZG,,41.67,-1.02,245.0,ZARAGOZA (MIL/CI,,ES,METAR rawinsonde TAF
LEZL,,37.42,-5.9,26.0,SEVILLA (CIV/MIL,,ES,METAR TAF
LFAC,,50.97,1.95,3.0,CALAIS/DUNKERQUE,,FR,METAR
LFAQ,,49.97,2.7,107.0,BRAY            ,,FR,METAR TAF
LFAT,,50.52,1.62,2.0,LE TOUQUET/P. PL,,FR,METAR TAF
LFBA,,44.17,0.6,68.0,AGEN/LA GARENNE ,,FR,METAR TAF
LFBC,,44.52,-1.12,22.0,CAZAUX POND (FAF,,FR,METAR TAF
LFBD,,44.82,-0.7,48.0,BORDEAUX/MERIGNA,,FR,METAR rawinsonde TAF
LFBE,,44.82,0.52,49.0,BERGERAC/ROUMANI,,FR,METAR TAF
LFBF,07631,43.53,1.37,159.0,TOULOUSE/FRANCAZ,,FR,METAR
LFBG,,45.67,-0.32,28.0,COGNAC/CHATEAUBE,,FR,METAR TAF
LFBH,,46.18,-1.2,18.0,LA ROCHELLE/LALE,,FR,METAR TAF
LFBI,,46.58,0.32,117.0,POITIERS/BIARD(A,,FR,METAR TAF
LFBK,,46.22,2.37,415.0,MONTLUCON/GUERET,,FR,METAR
LFBL,,45.87,1.17,402.0,LIMOGES/BELLEGAR,,FR,METAR TAF
LFBM,,43.92,-0.5,56.0,MONT-DE-MARSAN F,,FR,METAR TAF
LFBN,,46.32,-0.4,57.0,NIORT/SOUCHE (AU,,FR,METAR
LFBO,,43.62,1.37,150.0,TOULOUSE/BLAGNAC,,FR,METAR TAF
LFBP,,43.38,-0.42,182.0,PONT-LONG-UZEIN/,,FR,METAR TAF
LFBR,,43.45,1.27,189.0,MURET/LHERM     ,,FR,METAR
LFBS,07503,44.37,-1.13,39.0,BISCAROSSE/PAREN,,FR,METAR
LFBT,,43.18,0.0,359.0,TARBES/OSSUN    ,,FR,METAR TAF
LFBU,,45.72,0.22,124.0,BRIE CHAMPNIERS ,,FR,METAR TAF
LFBV,07438,45.13,1.47,117.0,BRIVE/LA ROCHE(A,,FR,METAR
LFBX,,45.2,0.82,97.0,PERIGUEUX/BASSIL,,FR,METAR
LFBY,,43.68,-1.07,32.0,DAX/SEYRESSE    ,,FR,METAR TAF
LFBZ,,43.47,-1.53,70.0,BIARRITZ/ANGLET ,,FR,METAR TAF
LFCC,,44.35,1.47,278.0,LALBENQUE/CAHORS,,FR,METAR
LFCG,07627,43.0,1.1,412.0,ST. GIRONS/ANTIC,,FR,METAR
LFCI,07632,43.92,2.12,178.0,ALBI/LE SEQUESTR,,FR,METAR
LFCK,,43.55,2.28,223.0,CASTRES-MAZAMET ,,FR,METAR TAF
LFCR,,44.4,2.47,576.0,RODEZ/MARCILLAC ,,FR,METAR TAF
LFDB,,44.13,1.48,160.0,MONTAUBAN       ,,FR,METAR
LFDH,,43.68,0.6,121.0,AUCH/LAMOTHE (AU,,FR,METAR
LFFS,,49.13,4.52,199.0,SUIPPES RANGE (M,,FR,METAR
LFGA,,48.1,7.35,191.0,COLMAR HOUSSEN  ,,FR,METAR
LFGJ,,47.05,5.43,191.0,DOLE TAVAUX     ,,FR,METAR TAF
LFHM,,45.87,6.62,950.0,MEGEVE          ,,FR,METAR
LFHP,,45.07,3.77,829.0,LE PUY/LOUDES (A,,FR,METAR TAF
LFIG,07555,44.17,2.52,1020.0,CASSAGNES-BEGONH,,FR,METAR
LFJL,,48.97,6.25,259.0,METZ-NANCY-LORRA,,FR,METAR TAF
LFJR,,47.57,-0.32,50.0,MARCE           ,,FR,METAR TAF
LFKB,,42.55,9.48,7.0,BASTIA/PORETTA  ,,FR,METAR TAF
LFKC,,42.52,8.8,38.0,CALVI/ST. CATHER,,FR,METAR TAF
LFKF,,41.5,9.08,15.0,FIGARI (AUT)    ,,FR,METAR TAF
LFKJ,,41.92,8.8,9.0,AJACCIO/CAMPO OR,,FR,METAR rawinsonde TAF
LFKS,,41.92,9.4,22.0,SOLENZARA (FAFB),,FR,METAR TAF
LFLA,07265,47.78,3.53,212.0,AUXERRE (AUT)   ,,FR,METAR
LFLB,,45.63,5.87,234.0,CHAMBERY/AIX BAI,,FR,METAR TAF
LFLC,,45.78,3.17,325.0,CLERMONT/AULNAT ,,FR,METAR TAF
LFLD,,47.07,2.37,159.0,BOURGES (AUT)   ,,FR,METAR
LFLH,,46.83,4.82,190.0,CHALON CHAMPFORG,,FR,METAR
LFLL,,45.72,5.07,234.0,LYON/SATOLAS    ,,FR,METAR rawinsonde TAF
LFLM,,46.28,4.78,217.0,MACON/CHARNAY (A,,FR,METAR
LFLN,,46.42,4.02,238.0,SAINT YAN       ,,FR,METAR TAF
LFLP,,45.92,6.1,460.0,ANNECY/MEYTHET  ,,FR,METAR TAF
LFLQ,,44.57,4.72,72.0,MONTELIMAR/ANCON,,FR,METAR
LFLS,,45.37,5.32,386.0,GRENOBLE/ST. GEO,,FR,METAR TAF
LFLU,,44.92,4.98,162.0,VALENCE-CHABEUIL,,FR,METAR
LFLV,,46.17,3.38,248.0,VICHY/CHARMEIL  ,,FR,METAR TAF
LFLW,,44.88,2.42,638.0,AURILLAC (AUT)  ,,FR,METAR TAF
LFLX,,46.87,1.73,157.0,CHATEAUROUX/DEOL,,FR,METAR TAF
LFLY,,45.72,4.95,197.0,LYON/BRON       ,,FR,METAR TAF
LFMA,07649,43.5,5.37,111.0,AIX LES MILLES F,,FR,METAR
LFMC,,43.37,6.38,79.0,LE LUC/LE CANNET,,FR,METAR TAF
LFMD,,43.53,6.95,2.0,CANNES/MANDELIEU,,FR,METAR TAF
LFME,07645,43.87,4.4,62.0,NIMES/COURBESSAC,,FR,METAR rawinsonde
LFMH,,45.52,4.28,400.0,ST ETIENNE/BOUTH,,FR,METAR TAF
LFMI,,43.52,4.93,20.0,ISTRES/LE TUBE F,,FR,METAR TAF
LFMK,,43.22,2.32,124.0,CARCASSONNE/SALV,,FR,METAR TAF
LFML,,43.45,5.22,20.0,MARSEILLE/MARIGN,,FR,METAR TAF
LFMN,,43.65,7.2,4.0,NICE/COTE D'AZUR,,FR,METAR rawinsonde TAF
LFMO,,44.13,4.87,56.0,ORANGE/CARITAT(F,,FR,METAR TAF
LFMP,,42.73,2.87,41.0,PERPIGNAN/RIVESA,,FR,METAR TAF
LFMT,,43.57,3.97,1.0,FREJORGUES/MONTP,,FR,METAR TAF
LFMU,,43.32,3.35,14.0,BEZIERS/VIAS    ,,FR,METAR TAF
LFMV,,43.9,4.9,33.0,CAUMONT         ,,FR,METAR TAF
LFMX,07588,44.07,6.0,461.0,ST-AUBAN-SUR-DUR,,FR,METAR
LFMY,,43.6,5.1,57.0,SALON (FAFB)    ,,FR,METAR TAF
LFNA,,44.57,6.07,733.0,GAP/TALLARD     ,,FR,METAR
LFNB,,44.5,3.52,1024.0,MENDE/BRENOUX   ,,FR,METAR
LFNM,,43.2,6.47,18.0,LA MOLE         ,,FR,METAR
LFOA,,47.05,2.63,174.0,AVORD (FAFB)    ,,FR,METAR TAF
LFOB,,49.47,2.12,99.0,BEAUVAIS/TILLE(A,,FR,METAR TAF
LFOC,,48.05,1.37,124.0,CHATEAUDUN (FAFB,,FR,METAR TAF
LFOE,,49.02,1.22,132.0,EVREUX/FAUVILLE ,,FR,METAR TAF
LFOF,07139,48.45,0.12,141.0,ALENCON/VALFRAMB,,FR,METAR TAF
LFOH,,49.52,0.08,87.0,LE HAVRE/OCTEVIL,,FR,METAR TAF
LFOI,07005,50.13,1.83,77.0,ABBEVILLE (AUT) ,,FR,METAR
LFOJ,,47.98,1.75,122.0,ORLEANS/BRICY(FA,,FR,METAR TAF
LFOK,,48.78,4.15,166.0,CHALONS/VATRY FA,,FR,METAR TAF
LFOP,,49.37,1.17,149.0,ROUEN/BOOS (AUT),,FR,METAR TAF
LFOR,,48.47,1.52,153.0,CHARTRES/CHAMPOL,,FR,METAR
LFOS,07033,49.82,0.65,83.0,VITTEFLEUR/ST. V,,FR,METAR
LFOT,,47.43,0.72,107.0,TOURS/ST SYMPHOR,,FR,METAR TAF
LFOV,,48.03,-0.75,99.0,LAVAL/ENTRAMMES ,,FR,METAR
LFOW,07061,49.82,3.2,101.0,ST. QUENTIN/ROUP,,FR,METAR
LFOZ,,47.9,2.17,121.0,ORLEANS/ST DENIS,,FR,METAR
LFPB,,48.97,2.42,50.0,PARIS/LE BOURGET,,FR,METAR TAF
LFPC,,49.25,2.52,83.0,CREIL (FAFB)    ,,FR,METAR TAF
LFPG,,49.02,2.53,107.0,CHARLES DE GAULL,,FR,METAR TAF
LFPM,,48.62,2.67,91.0,MELUN/VILLAROCHE,,FR,METAR TAF
LFPN,,48.75,2.12,152.0,TOUSSUS LE NOBLE,,FR,METAR TAF
LFPO,,48.72,2.38,88.0,PARIS/ORLY      ,,FR,METAR TAF
LFPT,,49.1,2.03,91.0,CORMEILLES VEXIN,,FR,METAR
LFPV,,48.77,2.2,171.0,VILLACOUBLAY/VEL,,FR,METAR TAF
LFPW,,48.82,2.32,75.0,PARIS MET CENTER,,FR,METAR
LFPY,07148,48.6,2.32,85.0,BRETIGNY-SUR-ORG,,FR,METAR
LFQA,,49.2,4.15,92.0,REIMS/PRUNAY    ,,FR,METAR
LFQB,,48.32,4.02,107.0,TROYES/BARBEREY ,,FR,METAR TAF
LFQE,,49.22,5.67,234.0,ROUVRES (FR-ARMY,,FR,METAR
LFQG,,47.0,3.1,172.0,NEVERS/FOURCHAMB,,FR,METAR
LFQH,07276,47.85,4.53,264.0,CHATILLON-SUR-SE,,FR,METAR
LFQI,,50.22,3.15,76.0,CAMBRAI/EPINOY(F,,FR,METAR TAF
LFQQ,,50.57,3.1,43.0,LILLE/LESQUIN   ,,FR,METAR TAF
LFQV,07075,49.77,4.62,150.0,CHARLEVILLE/MEZI,,FR,METAR
LFRA,07230,47.5,-0.57,58.0,ANGERS/AVRILLE(A,,FR,METAR
LFRB,,48.45,-4.42,91.0,BREST/GUIPAVAS  ,,FR,METAR rawinsonde TAF
LFRC,,49.63,-1.47,137.0,CHERBOURG/MAUPER,,FR,METAR TAF
LFRD,,48.58,-2.07,56.0,DINARD/PLEURTUIT,,FR,METAR TAF
LFRG,,49.37,0.15,146.0,ST GATIEN       ,,FR,METAR TAF
LFRH,,47.77,-3.45,46.0,LORIENT/LANN BIH,,FR,METAR TAF
LFRI,,46.7,-1.37,89.0,LA ROCHE/LES AJO,,FR,METAR TAF
LFRJ,,48.52,-4.15,109.0,LANDIVISIAU (NAV,,FR,METAR TAF
LFRK,,49.17,-0.45,66.0,CAEN/CARPIQUET(A,,FR,METAR TAF
LFRL,,48.27,-4.43,80.0,LANVEOC/POULMIC(,,FR,METAR TAF
LFRM,,47.95,0.2,51.0,LE MANS/ARNAGE(A,,FR,METAR TAF
LFRN,,48.07,-1.73,35.0,RENNES/ST. JACQU,,FR,METAR TAF
LFRO,,48.75,-3.47,86.0,LANNION/SERVEL  ,,FR,METAR TAF
LFRQ,,47.97,-4.17,94.0,QUIMPER/PLUGUFFA,,FR,METAR TAF
LFRS,,47.17,-1.6,26.0,NANTES/CHATEAU B,,FR,METAR TAF
LFRT,,48.53,-2.85,134.0,SAINT-BRIEUC ARM,,FR,METAR TAF
LFRU,,48.6,-3.82,85.0,MORLAIX/PLOUJEAN,,FR,METAR
LFRV,,47.72,-2.72,132.0,VANNES/MEUCON   ,,FR,METAR
LFRZ,,47.32,-2.17,2.0,ST. NAZAIRE/MONT,,FR,METAR TAF
LFSA,07288,47.25,5.97,309.0,BESANCON/THISE(A,,FR,METAR
LFSB,,47.6,7.52,262.0,BALE/MULHOUSE   ,,FR,METAR TAF
LFSC,07197,47.92,7.4,217.0,COLMAR/MEYENHEIM,,FR,METAR TAF
LFSD,,47.27,5.08,218.0,DIJON/LONGVIC(FA,,FR,METAR TAF
LFSF,,49.07,6.12,191.0,METZ/FRESCATY(FA,,FR,METAR TAF
LFSG,,48.33,6.07,320.0,EPINAL/MIRECOURT,,FR,METAR
LFSI,,48.62,4.9,136.0,ST. DIZIER/ROBIN,,FR,METAR TAF
LFSL,,45.03,1.48,300.0,BRIVE/SOUILLAC  ,,FR,METAR TAF
LFSM,,47.48,6.78,317.0,MONTBELIARD-COUR,,FR,METAR
LFSN,,48.68,6.22,214.0,NANCY/ESSEY     ,,FR,METAR rawinsonde TAF
LFSO,,48.57,5.97,328.0,NANCY/OCHEY (FAF,,FR,METAR TAF
LFSP,,46.88,6.32,817.0,PONTARLIER      ,,FR,METAR
LFSQ,07295,47.62,6.87,423.0,BELFORT/FONTAINE,,FR,METAR
LFSR,,49.3,4.05,91.0,REIMS/CHAMPAGNE ,,FR,METAR TAF
LFST,,48.53,7.63,149.0,STRASBOURG/ENTZH,,FR,METAR TAF
LFSX,,47.77,6.35,266.0,LUXEUIL/ST. SAUV,,FR,METAR TAF
LFTF,,43.25,6.12,81.0,PIERREFEN (NAVY),,FR,METAR
LFTH,,43.1,6.15,3.0,HYERES/LE PALYVE,,FR,METAR TAF
LFTU,07680,43.42,6.75,6.0,FREJUS/ST. RAPHA,,FR,METAR
LFTW,,43.75,4.42,91.0,NIMES/GARONS (NA,,FR,METAR TAF
LFVP,71805,46.77,-56.18,5.0,ST PIERRE-FRANCE,NL,FR,METAR TAF
LFXA,,45.97,5.32,249.0,AMBERIEU (FAFB/A,,FR,METAR
LFXI,07657,44.03,5.47,837.0,APT/ST. CHRISTOL,,FR,METAR
LFYG,,50.12,3.27,110.0,NIERGNIES (FAFB),,FR,METAR
LFYH,,47.33,5.52,208.0,BROYE-LES-PESMES,,FR,METAR
LFYJ,07517,44.17,-0.27,133.0,CAPTIEUX (MET/OB,,FR,METAR
LFYL,,47.7,6.53,317.0,LURE/MALBOUHANS ,,FR,METAR
LFYR,,47.32,1.68,83.0,ROMORANTIN/PRUNI,,FR,METAR TAF
LGAD,16682,37.92,21.28,8.0,ANDRAVIDA (CIV/A,,GR,METAR TAF
LGAL,16627,40.85,25.95,5.0,ALEXANDROUPOLIS ,,GR,METAR TAF
LGAV,,37.93,23.95,83.0,ATHENS/ELEF-VEN ,,GR,METAR TAF
LGBL,16665,39.22,22.8,13.0,NEA ANCHIALOS   ,,GR,METAR TAF
LGEL,16718,38.07,23.55,21.0,ELEFSIS (HEL-AFB,,GR,METAR TAF
LGHI,16706,38.33,26.13,6.0,CHIOS AIRPORT   ,,GR,METAR TAF
LGIO,,39.7,20.82,476.0,IOANNINA        ,,GR,METAR TAF
LGIR,16754,35.33,25.17,37.0,IRAKLION (CIV/AF,,GR,METAR rawinsonde TAF
LGKC,16743,36.28,23.02,313.0,KITHIRA ARPT    ,,GR,METAR TAF
LGKF,16685,38.12,20.5,14.0,KEFALLINIA      ,,GR,METAR TAF
LGKL,16726,37.07,22.02,4.0,KALAMATA (HEL-AF,,GR,METAR TAF
LGKO,16742,36.8,27.08,130.0,KOS AIRPORT     ,,GR,METAR TAF
LGKP,16765,35.42,27.15,20.0,KARPATHOS       ,,GR,METAR TAF
LGKR,16641,39.62,19.92,2.0,IOANNIS KAPODIST,,GR,METAR TAF
LGKV,16624,40.92,24.62,5.0,KAVALA/CHRISOUPO,,GR,METAR TAF
LGKZ,16632,40.28,21.83,615.0,KOZANI (CIV/ARMY,,GR,METAR
LGLM,16650,39.92,25.23,4.0,LIMNOS ISLAND AR,,GR,METAR TAF
LGLR,16648,39.65,22.47,74.0,LARISA AIRPORT  ,,GR,TAF
LGMK,,37.43,25.35,126.0,MIKONOS ISLAND  ,,GR,METAR TAF
LGMT,16667,39.05,26.6,4.0,MITILINI        ,,GR,METAR TAF
LGNX,,37.08,25.37,3.0,NAXOS AIRPORT   ,,GR,METAR
LGPA,,37.02,25.1,42.0,PAROS           ,,GR,METAR
LGPZ,16643,38.92,20.77,3.0,PREVEZA/AKTION  ,,GR,METAR TAF
LGRP,16749,36.4,28.08,3.0,RHODES/DIAGORAS ,,GR,METAR TAF
LGRX,16687,38.17,21.42,16.0,ARAXOS (CIV/AFB),,GR,METAR TAF
LGSA,16746,35.53,24.13,122.0,SOUDA/KHANIA (AF,,GR,METAR TAF
LGSK,,39.18,23.5,13.0,SKIATHOS ISLAND ,,GR,METAR TAF
LGSM,16723,37.68,26.92,5.0,SAMOS AIRPORT   ,,GR,METAR TAF
LGSO,,37.42,24.95,71.0,SYROS           ,,GR,METAR
LGSR,,36.4,25.48,31.0,SANTORINI ISLAND,,GR,METAR TAF
LGST,16757,35.22,26.1,115.0,SITIA AIRPORT   ,,GR,TAF
LGSY,,38.97,24.48,12.0,SKIROS          ,,GR,METAR TAF
LGTG,16699,38.33,23.57,148.0,TANAGRA AIRPORT ,,GR,TAF
LGTL,16760,35.2,25.33,360.0,KASTELI AIRPORT ,,GR,TAF
LGTS,16622,40.52,22.97,4.0,THESSALONIKI/MIK,,GR,METAR rawinsonde TAF
LGZA,,37.75,20.88,3.0,ZAKINTHOS AIRPOR,,GR,METAR TAF
LHBC,12992,46.68,21.17,81.0,BEKESCSABA GLIDE,,HU,METAR
LHBP,12839,47.43,19.27,141.0,BUDAPEST/FERIHEG,,HU,METAR TAF
LHDC,12882,47.48,21.62,105.0,DEBRECEN AIRPORT,,HU,METAR TAF
LHKE,12970,46.92,19.75,113.0,KECSKEMET       ,,HU,METAR TAF
LHPA,12825,47.35,17.5,143.0,PAPA            ,,HU,METAR TAF
LHPP,12942,45.98,18.23,193.0,PECS-POGANY     ,,HU,METAR TAF
LHPR,12822,47.63,17.82,127.0,GYOR            ,,HU,METAR TAF
LHSM,,46.68,17.17,119.0,BALATON         ,,HU,METAR TAF
LHSN,12860,47.12,20.23,89.0,SZOLNOK         ,,HU,METAR TAF
LHUD,12982,46.25,20.1,76.0,SZEGED (AUT)    ,,HU,METAR rawinsonde
LIBA,16261,41.53,15.72,55.0,AMENDOLA (IT-AFB,,IT,METAR TAF
LIBC,16350,39.0,17.07,158.0,CROTONE         ,,IT,METAR TAF
LIBD,16270,41.13,16.77,42.0,BARI/PALESE MACC,,IT,METAR TAF
LIBE,16258,41.72,15.95,844.0,SANT'ANGELO (MOU,,IT,METAR
LIBF,16260,41.42,15.53,81.0,FOGGIA/GINO LISA,,IT,METAR TAF
LIBG,16324,40.52,17.4,64.0,GROTTAGLIE(CIV/A,,IT,METAR TAF
LIBH,16325,40.42,16.87,12.0,MARINA DI GINOSA,,IT,METAR
LIBI,,41.92,16.05,50.0,VIESTE          ,,IT,METAR
LIBJ,,38.67,16.1,520.0,VIBO VALENTIA   ,,IT,METAR
LIBK,,38.87,16.47,343.0,CARAFFA DI CATAN,,IT,METAR
LIBL,,40.1,18.52,89.0,PALASCIA        ,,IT,METAR
LIBM,,42.97,13.87,1.0,GROTTAMMARE     ,,IT,METAR
LIBN,16332,40.23,18.13,46.0,LECCE (IT-AFB)  ,,IT,METAR TAF
LIBP,16230,42.42,14.18,10.0,PESCARA         ,,IT,METAR TAF
LIBQ,16344,39.32,16.38,1660.0,SCURO MOUNTAIN  ,,IT,METAR
LIBR,16320,40.65,17.95,5.0,BRINDISI/CASALE ,,IT,METAR rawinsonde TAF
LIBS,16252,41.57,14.65,807.0,CAMPOBASSO      ,,IT,METAR
LIBT,16232,42.0,15.0,44.0,TERMOLI         ,,IT,METAR
LIBU,16316,40.07,16.02,896.0,LATRONICO       ,,IT,METAR
LIBV,16312,40.77,16.93,344.0,GIOIA DEL COLLE ,,IT,METAR TAF
LIBW,16337,39.57,15.87,485.0,BONIFATI (CAPE) ,,IT,METAR
LIBX,,40.7,17.32,447.0,MARTINA FRANCA(A,,IT,METAR
LIBY,16360,39.82,18.35,105.0,SANTA MARIA DI L,,IT,METAR
LIBZ,16300,40.62,15.8,843.0,POTENZA         ,,IT,METAR
LICA,16362,38.9,16.25,7.0,LAMEZIA TERME   ,,IT,METAR TAF
LICB,,37.0,14.62,212.0,COMISO          ,,IT,METAR TAF
LICC,16460,37.47,15.05,6.0,CATANIA/FONTANAR,,IT,METAR TAF
LICD,16490,35.5,12.62,20.0,LAMPEDUSA ISLAND,,IT,METAR TAF
LICE,16450,37.57,14.27,965.0,ENNA            ,,IT,METAR
LICF,16420,38.2,15.55,66.0,MESSINA         ,,IT,METAR
LICG,16470,36.82,11.97,192.0,PANTELLERIA(IT-A,,IT,METAR TAF
LICH,,37.92,16.07,17.0,CAPE SPARTIVENTO,,IT,METAR
LICJ,16405,38.17,13.08,20.0,PALERMO/POINT RA,,IT,METAR TAF
LICL,16453,37.07,14.22,33.0,GELA            ,,IT,METAR
LICM,,39.53,16.8,179.0,CALOPEZZATI     ,,IT,METAR
LICO,16480,36.67,15.12,51.0,COZZO SPADARO   ,,IT,METAR
LICP,16410,38.1,13.3,117.0,PALMERO/BOCCADIF,,IT,METAR
LICR,16422,38.07,15.65,16.0,REGGIO CALABRIA ,,IT,METAR TAF
LICS,,37.52,13.05,125.0,SCIACCA         ,,IT,METAR
LICT,16429,37.92,12.5,4.0,TRAPANI/BIRGI (A,,IT,METAR rawinsonde TAF
LICU,16400,38.7,13.17,251.0,USTICA ISLAND   ,,IT,METAR
LICX,16434,37.72,13.42,1035.0,PRIZZI          ,,IT,METAR
LICZ,16459,37.4,14.92,22.0,SIGONELLA (NAS) ,,IT,METAR TAF
LIEA,16520,40.62,8.28,22.0,ALGHERO         ,,IT,METAR TAF
LIEB,16550,39.93,9.72,126.0,CAPE BELLAVISTA ,,IT,METAR
LIEC,16564,39.1,9.52,118.0,CAPE CARBONARA  ,,IT,METAR
LIED,16546,39.35,8.97,26.0,DECIMOMANNU(IT-A,,IT,METAR TAF
LIEE,16560,39.25,9.07,1.0,CAGLIARI/ELMAS(A,,IT,METAR rawinsonde TAF
LIEF,16539,39.73,8.47,92.0,CAPE FRASCA     ,,IT,METAR
LIEG,16506,41.22,9.4,170.0,GUARDIAVECCHIA  ,,IT,METAR
LIEH,16522,40.57,8.17,205.0,CAPE CACCIA     ,,IT,METAR
LIEL,16542,39.5,9.62,22.0,CAPE S. LORENZO ,,IT,METAR
LIEM,,40.27,8.77,559.0,MACOMER         ,,IT,METAR
LIEN,16538,40.12,9.25,1029.0,FONNI           ,,IT,METAR
LIEO,16531,40.88,9.52,8.0,OLBIA/COSTA SMER,,IT,METAR TAF
LIEP,16541,39.67,9.42,645.0,PERDASDEFOGU    ,,IT,METAR
LIET,,39.92,9.68,8.0,TORTOLI         ,,IT
LIMA,,45.08,7.6,285.0,AERITALIA       ,,IT,METAR
LIMC,16066,45.62,8.72,221.0,MILANO/MALPENSA ,,IT,METAR TAF
LIMD,,45.95,9.37,2403.0,GRIGNA SETTENTRI,,IT,METAR
LIME,16076,45.67,9.7,239.0,BERGAMO/ORIO SER,,IT,METAR TAF
LIMF,16059,45.22,7.65,295.0,TORINO/CASELLE  ,,IT,METAR TAF
LIMG,16122,44.03,8.12,41.0,ALBENGA         ,,IT,METAR TAF
LIMH,16052,45.93,7.7,3473.0,PIAN ROSA (MTN T,,IT,METAR
LIMJ,16120,44.42,8.83,3.0,GENOVA/SESTRI   ,,IT,METAR TAF
LIMK,16061,45.02,7.72,693.0,TORINO/BRIC CROC,,IT,METAR
LIML,16080,45.47,9.27,109.0,MILANO/LINATE   ,,IT,METAR rawinsonde TAF
LIMN,16064,45.52,8.67,168.0,CAMERI (IT-AFB) ,,IT,METAR TAF
LIMO,16072,45.87,9.07,1322.0,BISBINO MOUNTAIN,,IT,METAR
LIMP,,44.82,10.3,41.0,PARMA           ,,IT,METAR TAF
LIMQ,16116,44.78,8.08,315.0,GOVONE          ,,IT,METAR
LIMS,16084,44.92,9.72,132.0,PIACENZA (IT-AFB,,IT,METAR TAF
LIMT,16124,44.47,9.92,1032.0,CISA PASS       ,,IT,METAR
LIMU,16153,43.95,8.17,215.0,CAPE MELE       ,,IT,METAR
LIMV,16119,44.55,8.93,474.0,GIOVI PASS      ,,IT,METAR
LIMW,16054,45.73,7.37,554.0,AOSTA ARPT      ,,IT,METAR TAF
LIMY,16115,44.25,7.78,1742.0,MALANOTTE MOUNTA,,IT,METAR
LIMZ,,44.53,7.62,377.0,LEVALDIGI       ,,IT,METAR TAF
LIPA,16036,46.02,12.58,113.0,AVIANO (IT/US-AF,,IT,METAR TAF
LIPB,16020,46.47,11.32,239.0,BOLZANO(CIV/IT-A,,IT,METAR TAF
LIPC,16148,44.22,12.3,10.0,CERVIA (IT-AFB) ,,IT,METAR TAF
LIPD,16044,46.02,13.17,94.0,UDINE/CAMPOFORMI,,IT,METAR rawinsonde
LIPE,16140,44.52,11.3,37.0,BOLOGNA/BORGO (A,,IT,METAR TAF
LIPF,16138,44.82,11.62,5.0,FERRARA (AUT)   ,,IT,METAR TAF
LIPH,16099,45.63,12.18,10.0,TREVISO(CIV/IT-A,,IT,METAR TAF
LIPI,16045,45.97,13.05,49.0,RIVOLTO (IT-AFB),,IT,METAR TAF
LIPK,16147,44.2,12.07,24.0,FORLI (CIV/IT-AF,,IT,METAR TAF
LIPL,16088,45.42,10.27,96.0,GHEDI (IT-AFB)  ,,IT,METAR TAF
LIPN,,45.47,10.92,91.0,VERONA/BOSCOMANT,,IT,METAR
LIPO,,45.42,10.33,104.0,BRESCIA/MONTICHI,,IT,METAR TAF
LIPP,,45.38,11.87,14.0,DOVA ACC        ,,IT,METAR
LIPQ,16108,45.82,13.47,6.0,RONCHI LEGIONARI,,IT,METAR TAF
LIPR,16149,44.02,12.62,10.0,RIMINI (CIV/IT-A,,IT,METAR TAF
LIPS,16098,45.68,12.1,42.0,ISTRANA (IT-AFB),,IT,METAR TAF
LIPT,16094,45.57,11.52,53.0,VICENZA(CIV/IT-A,,IT,METAR TAF
LIPU,16095,45.38,11.83,6.0,PADOVA (CIV/IT-A,,IT,METAR
LIPV,,45.42,12.37,4.0,VENEZIA/SAN NICO,,IT,METAR
LIPX,16090,45.38,10.87,67.0,VILLAFRANCA(CV/M,,IT,METAR TAF
LIPY,16191,43.62,13.37,11.0,FALCONARA (IT-AF,,IT,METAR TAF
LIPZ,16105,45.5,12.35,3.0,VENEZIA/TESSERA ,,IT,METAR TAF
LIQB,16172,43.47,11.83,249.0,AREZZO          ,,IT,METAR
LIQC,16294,40.55,14.2,154.0,CAPRI ISLAND    ,,IT,METAR
LIQD,,44.02,10.92,932.0,PORRETTA PASS   ,,IT,METAR
LIQI,,42.45,13.68,2138.0,GRAN SASSO MTN R,,IT,METAR
LIQJ,16214,42.02,11.82,4.0,CIVITAVECCHIA   ,,IT,METAR
LIQK,16310,40.03,15.28,185.0,CAPE PALINURO   ,,IT,METAR
LIQN,16221,42.42,12.83,387.0,RIETI           ,,IT,METAR
LIQO,16168,42.38,11.17,627.0,MOUNT ARGENTARIO,,IT,METAR
LIQP,16129,44.02,9.82,192.0,PALMARIA ISLAND ,,IT,METAR
LIQR,16204,42.88,11.77,918.0,RADICOFANI      ,,IT,METAR
LIQS,,43.32,11.33,322.0,SIENA           ,,IT,METAR
LIQT,,41.22,13.05,3.0,CAPE CIRCEO     ,,IT,METAR
LIQV,16164,43.4,10.87,575.0,VOLTERRA        ,,IT,METAR
LIQW,16125,44.08,9.98,6.0,SARZANA/LUNI    ,,IT,METAR TAF
LIQZ,16280,40.92,12.93,185.0,PONZA ISLAND    ,,IT,METAR
LIRA,16239,41.8,12.58,101.0,CIAMPINO(IT-AFB/,,IT,METAR TAF
LIRB,16224,42.07,12.22,270.0,VIGNA DI VALLE(M,,IT,METAR
LIRE,16245,41.65,12.43,16.0,PRATICA DI MARE(,,IT,METAR rawinsonde TAF
LIRF,16242,41.78,12.23,2.0,ROME/FIUMICINO  ,,IT,METAR TAF
LIRG,16234,42.0,12.73,82.0,GUIDONIA (IT-AFB,,IT,METAR TAF
LIRH,16244,41.65,13.3,183.0,FROSINONE (IT-AF,,IT,METAR TAF
LIRI,,40.62,14.92,31.0,PONTECAGNANO (AF,,IT,METAR
LIRJ,16197,42.77,10.23,397.0,M. CALAMITA     ,,IT,METAR
LIRK,16219,42.47,12.97,1721.0,TERMINILLO MOUNT,,IT,METAR
LIRL,16243,41.53,12.9,23.0,LATINA (IT-AFB) ,,IT,METAR TAF
LIRM,16253,41.05,14.07,6.0,GRAZZANISE (IT-A,,IT,METAR TAF
LIRN,16289,40.88,14.3,76.0,NAPLES/CAPODICHI,,IT,METAR TAF
LIRP,16158,43.68,10.38,1.0,PISA (CIV/IT-AFB,,IT,METAR TAF
LIRQ,16170,43.8,11.2,33.0,FIRENZE/PERETOLA,,IT,METAR TAF
LIRS,16206,42.75,11.07,3.0,GROSSETO (IT-AFB,,IT,METAR TAF
LIRT,16263,41.03,15.22,1058.0,TREVICO         ,,IT,METAR
LIRU,16235,41.95,12.5,16.0,ROME/URBE (IT-AF,,IT,METAR TAF
LIRV,16216,42.42,12.07,294.0,VITERBO (IT-MIL),,IT,METAR TAF
LIRX,,42.73,10.38,397.0,MONTE CALAMITA  ,,IT,METAR
LIRZ,16181,43.1,12.5,206.0,PERUGIA         ,,IT,METAR TAF
LIVC,16134,44.2,10.68,2139.0,CIMONE MOUNTAIN ,,IT,METAR
LIVD,16033,46.72,12.22,1221.0,DOBBIACO        ,,IT,METAR
LIVE,,46.82,10.5,1684.0,RESIA PASS      ,,IT,METAR
LIVF,16179,43.52,12.72,549.0,FRONTONE        ,,IT,METAR
LIVG,,45.87,11.8,1775.0,GRAPPA MOUNTAIN ,,IT,METAR
LIVM,16146,44.45,12.3,6.0,POINT MARINA/RAV,,IT,METAR
LIVO,16040,46.5,13.58,782.0,TARVISIO        ,,IT,METAR
LIVP,16022,46.15,11.03,2099.0,PAGANELLA MOUNTA,,IT,METAR
LIVR,16021,46.28,11.78,1997.0,ROLLE PASS      ,,IT,METAR
LIVT,16110,45.68,13.75,20.0,TRIESTE         ,,IT,METAR
LIVV,,45.32,11.67,575.0,MOUNT VENDA     ,,IT,METAR
LIYW,16037,46.02,12.58,113.0,AVIANO (USAF)   ,,IT,METAR TAF
LJCE,,45.9,15.52,153.0,CERKLJE         ,,SI,METAR TAF
LJLJ,13014,46.22,14.47,363.0,LJUBLJANA/BRNIK ,,SI,METAR TAF
LJMB,14026,46.47,15.67,263.0,MARIBOR         ,,SI,METAR TAF
LJMS,14031,46.63,16.17,188.0,MURSKA SOBOTA   ,,SI,METAR
LJNM,14121,45.78,15.17,213.0,NOVO MESTO      ,,SI,METAR
LJPZ,13105,45.47,13.62,2.0,PORTOROZ        ,,SI,METAR TAF
LKCV,11624,49.93,15.38,234.0,CASLAV          ,,CZ,METAR TAF
LKHO,11774,49.32,17.57,224.0,HOLESOV         ,,CZ,METAR
LKKB,,50.12,14.53,281.0,KBELY           ,,CZ,METAR TAF
LKKU,,49.05,17.45,176.0,KUNOVICE        ,,CZ,METAR
LKKV,11414,50.2,12.92,600.0,KARLOVY VARY    ,,CZ,METAR TAF
LKLB,,50.77,15.02,397.0,LIBEREC         ,,CZ,METAR
LKLN,11448,49.68,13.27,353.0,PLZEN LINE      ,,CZ,METAR
LKMH,,50.53,15.0,244.0,MNICHOVO HRADIST,,CZ
LKMT,11782,49.68,18.12,251.0,OSTRAVA/MOSNOV  ,,CZ,METAR TAF
LKNA,11692,49.17,16.12,460.0,NAMEST          ,,CZ,METAR TAF
LKPD,11652,50.02,15.73,226.0,PARDUBICE       ,,CZ,METAR TAF
LKPO,11748,49.42,17.4,201.0,PREROV          ,,CZ,METAR TAF
LKPR,11518,50.1,14.27,364.0,PRAGUE/RUZYNE   ,,CZ,METAR TAF
LKTB,11723,49.15,16.68,233.0,BRNO/TURANY     ,,CZ,METAR TAF
LKVO,,50.22,14.4,275.0,VODOCHODY       ,,CZ,METAR
LLBG,40180,32.0,34.88,35.0,BEN-GURION(CIV/M,,IL,METAR TAF
LLBS,40191,31.28,34.72,200.0,BEER-SHEVA/TEYMA,,IL,METAR
LLER,,29.72,35.02,88.0,EILAT           ,,IL,METAR TAF
LLET,40199,29.55,34.95,17.0,ELAT/J. HOZMAN(A,,IL,METAR TAF
LLHA,40155,32.8,35.03,3.0,HAIFA (ISR-AFB) ,,IL,METAR TAF
LLHZ,,32.18,34.83,32.0,HERZLIYA        ,,IL,TAF
LLIB,,32.98,35.57,268.0,BEN YA AKOV     ,,IL,METAR TAF
LLJR,40290,31.87,35.22,759.0,JERUSALEM/ATAROT,,IL,METAR TAF
LLOV,40198,29.93,34.93,442.0,OVDA (ISR-AFB/CI,,IL,METAR TAF
LLSD,40176,32.12,34.78,7.0,SDE DOV AIRPORT ,,IL,METAR TAF
LMML,16597,35.85,14.47,78.0,LUQA/MALTA      ,,MT,METAR TAF
LMMM,,35.88,14.52,95.0,MALTA ACC       ,,MT,METAR
LOAG,,48.45,15.63,312.0,KREMS-LANGENLOIS,,AT,METAR
LOAN,,47.85,16.25,266.0,WR.NEUSTADT EAST,,AT,METAR TAF
LOAV,11181,47.97,16.27,232.0,VOESLAU-KOTTINGB,,AT,METAR TAF
LOGG,11195,47.15,16.32,290.0,PUNITZ/GUESSING ,,AT,METAR
LOIH,11103,47.38,9.7,410.0,HOHENEMS-DORNBIR,,AT,METAR TAF
LOLF,,48.52,14.42,685.0,OBEROSTERREICH  ,,AT,METAR
LOWG,11240,47.0,15.43,337.0,GRAZ (MIL/CIV)  ,,AT,METAR rawinsonde TAF
LOWI,11120,47.27,11.33,570.0,INNSBRUCK AIRPOR,,AT,METAR rawinsonde TAF
LOWK,11231,46.65,14.32,450.0,KLAGENFURT(CIV/M,,AT,METAR TAF
LOWL,11010,48.22,14.18,290.0,LINZ (CIV/MIL)  ,,AT,METAR rawinsonde TAF
LOWS,11150,47.78,13.02,427.0,SALZBURG AIRPORT,,AT,METAR TAF
LOWW,11036,48.12,16.57,179.0,VIENNA/SCHWECHAT,,AT,METAR TAF
LOWZ,11143,47.3,12.78,756.0,ZELL AM SEE     ,,AT,METAR TAF
LOXA,11157,47.52,14.12,649.0,AIGEN/ENNSTAL (M,,AT,METAR TAF
LOXL,11011,48.22,14.17,313.0,HORSCHING (AUS-A,,AT,METAR
LOXN,11182,47.83,16.22,280.0,WR.NEUSTADT WEST,,AT,METAR TAF
LOXS,11122,47.32,11.68,543.0,SCHWAZ (HELIPORT,,AT,METAR
LOXT,11030,48.32,16.12,176.0,LANGENLEBARN/TUL,,AT,METAR TAF
LOXZ,11165,47.2,14.75,678.0,ZELTWEG (MIL)   ,,AT,METAR TAF
LPAR,,38.88,-9.03,2.0,ALVERCA         ,,PT,METAR TAF
LPAZ,,36.97,-25.17,96.0,SANTA MARIA ISLA,,PT,METAR TAF
LPBG,08575,41.85,-6.7,692.0,BRAGANCA        ,,PT,METAR
LPBJ,,38.08,-7.93,196.0,BEJA (POR/GER-AF,,PT,METAR TAF
LPCR,,39.67,-31.12,26.0,CORVO IS AZORES ,,PT,METAR
LPCS,,38.73,-9.35,99.0,CASCAIS         ,,PT,METAR TAF
LPFL,,39.45,-31.12,35.0,FLORES ISLAND   ,,PT,METAR
LPFR,,37.02,-7.97,3.0,FARO            ,,PT,METAR TAF
LPGR,,39.1,-28.03,26.0,GRACIOSA IS AZOR,,PT,METAR
LPHR,,38.52,-28.72,39.0,HORTA/FAIAL ISLA,,PT,METAR TAF
LPLA,,38.77,-27.1,60.0,LAJES AB        ,,PT,METAR rawinsonde TAF
LPMA,,32.7,-16.77,54.0,FUNCHAL/MADEIRA ,,PT,METAR TAF
LPMR,,39.82,-8.88,50.0,MONTE REAL(POR-A,,PT,METAR TAF
LPMT,,38.7,-9.05,4.0,MONTIJO (POR-AFB,,PT,METAR TAF
LPOT,08539,39.12,-8.97,49.0,OTA (POR-AFB)   ,,PT,METAR
LPOV,,40.92,-8.65,16.0,OVAR MIL        ,,PT,METAR TAF
LPPD,,37.73,-25.68,62.0,PONTA DELGADA/NO,,PT,METAR TAF
LPPI,,38.55,-28.43,33.0,RPICO IS AZORES ,,PT,METAR
LPPR,,41.23,-8.68,64.0,PORTO/PEDRAS RUB,,PT,METAR TAF
LPPS,,33.07,-16.35,89.0,PORTO SANTO ISLA,,PT,METAR TAF
LPPT,,38.77,-9.13,98.0,LISBON/PORTELA  ,,PT,METAR TAF
LPST,,38.82,-9.33,129.0,SINTRA/GRANJA (A,,PT,METAR TAF
LPTN,08552,39.47,-8.42,80.0,TANCOS (POR-AFB),,PT,METAR
LPVR,08567,41.27,-7.72,562.0,VILA REAL       ,,PT,METAR
LQBK,13242,44.93,17.3,114.0,BANJA LUKA      ,,BA,METAR TAF
LQMO,13348,43.28,17.83,49.0,MOSTAR AIRPORT  ,,BA,METAR TAF
LQSA,13353,43.82,18.32,505.0,SARAJEVO/BUTMIR ,,BA,METAR TAF
LQTZ,13257,44.47,18.73,242.0,TUZLA           ,,BA,METAR TAF
LRAR,15200,46.18,21.27,102.0,ARAD            ,,RO,METAR TAF
LRBC,15150,46.52,26.92,183.0,BACAU           ,,RO,METAR TAF
LRBM,15014,47.67,23.47,180.0,BAIA MARE       ,,RO,METAR TAF
LRBO,,45.22,26.97,104.0,BOBOC           ,,RO,TAF
LRBS,15420,44.5,26.08,91.0,BUCHAREST/BANEAS,,RO,METAR rawinsonde TAF
LRCK,15481,44.37,28.48,108.0,KOGALNICEANU    ,,RO,METAR TAF
LRCL,15120,46.78,23.68,313.0,CLUJ-NAPOCA/SOME,,RO,METAR rawinsonde TAF
LRCS,15292,45.42,22.25,242.0,CARANSEBES      ,,RO,METAR
LRCT,,46.5,23.88,324.0,CAMPIA TURZII   ,,RO,METAR TAF
LRCV,15450,44.32,23.88,192.0,CRAIOVA         ,,RO,METAR TAF
LRFT,,44.38,27.72,54.0,BORCEA FETESTI  ,,RO,TAF
LRIA,15090,47.17,27.62,71.0,IASI            ,,RO,METAR TAF
LROD,15080,47.03,21.88,132.0,ORADEA          ,,RO,METAR TAF
LROP,15421,44.57,26.1,92.0,BUCHAREST/OTOPEN,,RO,METAR TAF
LRSB,15260,45.78,24.08,442.0,SIBIU/TURNISOR  ,,RO,METAR TAF
LRSM,15010,47.7,22.88,123.0,SATU MARE       ,,RO,METAR TAF
LRSV,15023,47.68,26.35,406.0,SUCEAVA/SALCEA  ,,RO,METAR TAF
LRTC,15335,45.07,28.72,52.0,TULCEA          ,,RO,METAR TAF
LRTM,15145,46.47,24.42,289.0,TIGU MURES/VIDRA,,RO,METAR TAF
LRTR,15247,45.82,21.33,104.0,TIMISOARA/GIARMA,,RO,METAR TAF
LRTZ,,43.98,28.62,45.0,TUZLA           ,,RO,TAF
LSGC,,47.08,6.8,1018.0,LES EPLATURES   ,,CH,METAR TAF
LSGG,,46.25,6.12,411.0,GENEVA/COINTRIN ,,CH,METAR TAF
LSGL,06710,46.53,6.62,615.0,LAUSANNE/BLECHER,,CH,METAR
LSGN,06604,46.95,6.87,487.0,NEUCHATEL (AUT) ,,CH,METAR
LSGS,,46.22,7.32,482.0,SION (MIL/CIV/AU,,CH,METAR TAF
LSMA,,46.95,8.28,441.0,ALPNACH         ,,CH,METAR TAF
LSMC,,46.5,8.3,1347.0,ULRICHEN        ,,CH,METAR
LSMD,,47.4,8.65,436.0,DUBENDORF       ,,CH,METAR TAF
LSME,,47.1,8.3,427.0,EMMEN           ,,CH,METAR TAF
LSMM,,46.75,8.12,570.0,MEIRINGEN       ,,CH,METAR TAF
LSMP,,46.83,6.92,490.0,PAYERNE (MIL/AUT,,CH,METAR rawinsonde TAF
LSMS,,46.22,7.32,481.0,SION (MIL)      ,,CH,METAR
LSZA,,46.0,8.92,276.0,LUGANO (PVT/AUT),,CH,METAR TAF
LSZB,,46.92,7.5,510.0,BERN/BELP       ,,CH,METAR TAF
LSZC,,46.97,8.38,445.0,BUOCHS          ,,CH,METAR TAF
LSZD,,46.15,8.78,600.0,LOCARNO/ASCONA  ,,CH,METAR
LSZG,,47.17,7.42,428.0,GRENCHEN        ,,CH,METAR TAF
LSZH,,47.48,8.53,424.0,ZURICH-KLOTEN (A,,CH,METAR TAF
LSZL,,46.17,8.88,198.0,LOCARNO         ,,CH,METAR TAF
LSZR,,47.48,9.57,396.0,RHEINECK/ALTENRH,,CH,METAR TAF
LSZS,,46.53,9.88,1708.0,SAMEDAN         ,,CH,METAR TAF
LTAB,,39.93,32.75,820.0,ANKARA/GUVERCIN ,,TR,METAR TAF
LTAC,17128,40.12,32.98,952.0,ANKARA/ESENBOGA ,,TR,METAR TAF
LTAD,17129,39.95,32.68,813.0,ANKARA/ETIMESGUT,,TR,METAR TAF
LTAE,17120,40.07,32.57,836.0,MURTED (TUR-AFB),,TR,METAR TAF
LTAF,17352,36.98,35.28,19.0,ADANA/SAKIRPASA ,,TR,METAR TAF
LTAG,17350,37.0,35.42,62.0,ADANA/INCIRLIK A,,TR,METAR TAF
LTAH,17190,38.75,30.52,1034.0,AFYON (MIL)     ,,TR,METAR TAF
LTAI,17300,36.9,30.8,50.0,ANTALYA (CIV/MIL,,TR,METAR TAF
LTAJ,17260,36.95,37.48,684.0,GAZIANTEP       ,,TR,METAR TAF
LTAK,17370,36.57,36.17,3.0,ISKENDERUN      ,,TR,METAR
LTAL,17074,41.32,33.8,1074.0,KASTAMONU       ,,TR,METAR TAF
LTAM,,38.72,35.5,1043.0,KAYSERI (CITY)  ,,TR,METAR
LTAN,17244,37.97,32.55,1029.0,KONYA (TUR-AFB) ,,TR,METAR TAF
LTAO,,38.35,38.25,919.0,MALATYA TULGA   ,,TR,TAF
LTAP,17082,40.83,35.52,536.0,MERZIFON (TUR-AF,,TR,METAR TAF
LTAQ,17029,41.27,36.28,168.0,SAMSUN AIRPORT  ,,TR,METAR
LTAR,17090,39.8,36.9,1601.0,SIVAS (CIV/MIL) ,,TR,METAR TAF
LTAS,17022,41.52,32.08,13.0,ZONGULDAK       ,,TR,METAR TAF
LTAT,17200,38.43,38.08,850.0,MALATYA/ERHAC (A,,TR,METAR TAF
LTAU,17195,38.77,35.48,1053.0,KAYSERI/ERKILET ,,TR,METAR TAF
LTAV,,39.45,31.35,96.0,SIVRIHISAR      ,,TR,METAR TAF
LTAW,17086,40.3,36.37,561.0,TOKAT           ,,TR,METAR TAF
LTAY,,37.78,29.7,851.0,CARDAK          ,,TR,METAR TAF
LTAZ,,38.77,34.52,944.0,NEVSEHIR        ,,TR,METAR TAF
LTBA,17060,40.97,28.82,33.0,ISTANBUL/ATATURK,,TR,METAR TAF
LTBD,17234,37.82,27.88,29.0,AYDIN           ,,TR,METAR TAF
LTBE,17116,40.17,29.07,100.0,BURSA           ,,TR,METAR
LTBF,17150,39.62,27.92,95.0,BALIKESIR (TUR-A,,TR,METAR TAF
LTBG,17115,40.32,27.97,42.0,BANDIRMA (CIV/AF,,TR,METAR TAF
LTBH,17112,40.13,26.42,8.0,CANAKKALE       ,,TR,METAR TAF
LTBI,17124,39.77,30.57,785.0,ESKISEHIR (TUR-A,,TR,METAR TAF
LTBJ,17219,38.28,27.15,123.0,IZMIR/ADNAN MEND,,TR,METAR TAF
LTBK,,38.32,27.15,132.0,IZMIR/GAZIEMIR  ,,TR,TAF
LTBL,17218,38.5,27.02,5.0,IZMIR/CIGLI(CV/A,,TR,METAR TAF
LTBM,17240,37.75,30.55,997.0,ISPARTA         ,,TR,METAR rawinsonde
LTBN,,39.42,30.02,921.0,KUTAHYA (TUR-AFB,,TR,METAR TAF
LTBO,17188,38.67,29.47,868.0,USAK            ,,TR,METAR TAF
LTBP,,40.68,29.38,13.0,YALOVA HAVAALANI,,TR,TAF
LTBQ,,40.73,30.07,51.0,TOPEL (TUR-AFB) ,,TR,METAR TAF
LTBR,,40.25,29.57,233.0,YENISEHIR AB    ,,TR,METAR TAF
LTBS,17295,36.7,28.78,2.0,DALAMAN (COMMUNE,,TR,METAR TAF
LTBT,17184,38.97,27.85,121.0,AKHISAR (TUR-AFB,,TR,METAR TAF
LTBU,,41.13,27.92,165.0,CORLU           ,,TR,METAR TAF
LTBV,17290,37.13,27.67,48.0,BODRUM IMSIKI   ,,TR,TAF
LTBX,,41.0,29.22,116.0,ISTANBUL SAMANDI,,TR,TAF
LTBY,,39.82,30.52,788.0,ANADOLU         ,,TR,METAR TAF
LTBZ,,39.1,30.12,1010.0,ZAFER           ,,TR,METAR TAF
LTCA,17202,38.6,39.28,887.0,ELAZIG (CIV/MIL),,TR,METAR TAF
LTCB,,40.97,38.07,5.0,ORDU            ,,TR,METAR TAF
LTCC,17280,37.88,40.2,676.0,DIYARBAKIR(CIV/A,,TR,METAR rawinsonde TAF
LTCD,17092,39.72,39.52,1146.0,ERZINCAN        ,,TR,METAR TAF
LTCE,17096,39.95,41.17,1758.0,ERZURUM (CIV/MIL,,TR,METAR TAF
LTCF,17098,40.57,43.12,1794.0,KARS            ,,TR,METAR TAF
LTCG,17038,41.0,39.77,28.0,TRABZON         ,,TR,METAR TAF
LTCH,17270,37.12,38.77,547.0,URFA/SANILURFA  ,,TR,METAR TAF
LTCI,17170,38.47,43.33,1654.0,VAN             ,,TR,METAR TAF
LTCJ,17282,37.93,41.12,559.0,BATMAN (TUR-AFB),,TR,METAR TAF
LTCK,,38.75,41.67,1267.0,MUS (TUR-AFB)   ,,TR,METAR TAF
LTCL,,37.98,41.83,602.0,SIIRT AIRPORT   ,,TR,METAR TAF
LTCM,,42.02,35.07,7.0,SINOP AIRPORT   ,,TR,METAR TAF
LTCN,,37.53,36.95,505.0,KAHRAMANMARAS   ,,TR,METAR TAF
LTCO,,39.65,43.03,1657.0,AGRI AIRPORT    ,,TR,METAR TAF
LTCP,,37.73,38.47,672.0,ADIYAMAN ARPT   ,,TR,METAR TAF
LTCR,,37.22,40.63,529.0,MARDIN AIRPORT  ,,TR,METAR TAF
LTCS,,37.45,38.9,825.0,SANLIURFA GAP   ,,TR,METAR TAF
LTCT,,39.98,43.87,936.0,IGDIR           ,,TR,METAR TAF
LTCU,,38.87,40.58,1061.0,BINGOL          ,,TR,METAR TAF
LTCV,,37.37,42.07,620.0,SIRNAK          ,,TR,METAR TAF
LTCW,,37.55,44.23,1852.0,YUKSEKOVA       ,,TR,METAR TAF
LTDA,,36.37,36.28,80.0,HATAY AIRPORT   ,,TR,METAR TAF
LTFA,,38.52,26.98,4.0,IZMIR/KAKLIC    ,,TR,METAR TAF
LTFB,,37.95,27.33,3.0,IZMIR-SELCUK/EFE,,TR,METAR TAF
LTFC,17241,37.87,30.38,862.0,SULEYMAN DEMIREL,,TR,METAR TAF
LTFD,,39.55,27.02,15.0,BALIKESIR KORFEZ,,TR,METAR TAF
LTFE,,37.25,27.67,6.0,BODRUM MILAS    ,,TR,METAR TAF
LTFG,,36.3,32.3,26.0,GAZIPASA        ,,TR,METAR TAF
LTFH,,41.27,36.57,7.0,CARSAMBA        ,,TR,METAR TAF
LTFJ,,40.9,29.3,83.0,SABIHA GOKCEN   ,,TR,METAR TAF
LTFK,,40.2,25.88,21.0,GOKCEADA        ,,TR,METAR TAF
LTFM,,41.27,28.75,99.0,ISTANBUL HANALI ,,TR,METAR TAF
LTFO,,41.18,40.85,5.0,RIZE-ARTVIN     ,,TR,METAR TAF
LUBL,,47.83,27.78,226.0,BALTI INTL ARPT ,,MD,METAR TAF
LUBM,,47.87,28.22,95.0,MARCULESTI      ,,MD,METAR TAF
LUCH,,45.85,28.27,199.0,CAHUL INTL      ,,MD,METAR TAF
LUKK,,46.93,28.93,102.0,CHISINAU INTL   ,,MD,METAR TAF
LWOH,13578,41.18,20.75,700.0,OHRID           ,,MK,METAR TAF
LWSK,13586,41.97,21.63,232.0,SKOPJE/PETROVAC ,,MK,METAR TAF
LXGB,,36.15,-5.33,5.0,GIBRALTAR (CIV/M,,GI,METAR rawinsonde TAF
LYBE,13272,44.82,20.28,93.0,BELGRADE/SURCIN ,,RS,METAR TAF
LYBT,,44.93,20.25,78.0,BATAJNICA       ,,RS,METAR TAF
LYKV,,43.82,20.58,209.0,KRALJEVO        ,,RS,METAR TAF
LYMO,,43.35,17.8,108.0,MOSTAR          ,,RS,METAR
LYNI,13388,43.33,21.85,197.0,NIS             ,,RS,METAR TAF
LYPG,,42.37,19.25,32.0,PODGORICA(TITOGR,,ME,METAR TAF
LYTI,13462,42.37,19.25,33.0,TITOGRAD/GOLUBOV,,ME,METAR
LYTV,13457,42.4,18.72,3.0,TIVAT           ,,ME,METAR TAF
LYUZ,,43.9,19.67,914.0,UZICE-PONIKVE   ,,RS,METAR TAF
LYVR,13183,45.13,21.32,82.0,VRSAC           ,,RS,METAR TAF
LZIB,11816,48.17,17.22,129.0,BRATISLAVA IVANK,,SK,METAR TAF
LZKC,11993,48.93,21.98,174.0,KAMENICA NAD CIR,,SK,METAR
LZKZ,,48.67,21.23,227.0,KOSICE BARCA    ,,SK,METAR TAF
LZLU,11927,48.33,19.73,211.0,LUCENEC AIRPORT ,,SK,METAR
LZMC,,48.4,17.12,207.0,MALACKY         ,,SK,TAF
LZNI,,48.28,18.13,131.0,NITRA           ,,SK,METAR
LZPE,,48.77,18.58,255.0,PRIEVIDZA       ,,SK,METAR
LZPP,,48.62,17.83,160.0,PIESTANY        ,,SK,METAR TAF
LZPW,,49.03,21.3,323.0,PRESOV          ,,SK,TAF
LZSL,,48.63,19.13,311.0,SLIAC           ,,SK,METAR TAF
LZTT,11934,49.07,20.25,693.0,POPRAD/TATRY    ,,SK,METAR TAF
LZZI,,49.23,18.62,311.0,ZILINA          ,,SK,METAR TAF
MBGT,,21.43,-71.15,6.0,TURKS ISLAND    ,,TC,METAR TAF
MBPV,,21.77,-72.27,7.0,PROVIDENCIALES  ,,TC,METAR TAF
MDAB,,19.2,-69.43,28.0,ARROYO BARRIL   ,,DO,METAR TAF
MDBH,78482,18.25,-71.12,7.0,BARAHONA        ,,DO,METAR TAF
MDCY,,19.27,-69.73,4.0,EL CATEY INTL   ,,DO,METAR TAF
MDHE,78484,18.47,-69.97,58.0,HERRERA         ,,DO,METAR TAF
MDJB,,18.57,-69.98,24.0,DR BALAGUER INTL,,DO,METAR TAF
MDLR,,18.45,-68.92,66.0,LA ROMANA INT. A,,DO,METAR TAF
MDMC,78451,19.87,-71.65,2.0,MONTE CRISTI    ,,DO,METAR
MDPC,78479,18.57,-68.37,10.0,PUNTA CANA      ,,DO,METAR TAF
MDPP,78457,19.75,-70.57,9.0,PUERTO PLATA IN ,,DO,METAR TAF
MDSD,78485,18.42,-69.67,18.0,CAUCEDO/DE LAS  ,,DO,METAR TAF
MDST,78460,19.4,-70.6,175.0,SANTIAGO INTL A ,,DO,METAR TAF
MGCB,78631,15.48,-90.42,1323.0,COBAN           ,,GT,METAR
MGCP,,14.3,-91.9,6.0,CHAMPERICO      ,,GT,METAR
MGES,,14.57,-89.32,948.0,ESQUIPULAS      ,,GT,METAR
MGFL,78615,16.92,-89.88,115.0,FLORES/SANTA EL ,,GT,METAR TAF
MGGI,,14.58,-90.52,1489.0,AURORA ARP      ,,GT,METAR
MGGT,78641,14.58,-90.53,1497.0,GUATEMALA/LA AU ,,GT,METAR TAF
MGHT,78627,15.32,-91.5,1875.0,HUEHUETENANGO   ,,GT,METAR TAF
MGMM,,16.9,-89.87,105.0,MUNDO MAYA      ,,GT,METAR TAF
MGPB,78637,15.73,-88.58,6.0,PUERTO BARRIOS( ,,GT,METAR TAF
MGPP,78625,16.32,-89.42,500.0,POPTUN          ,,GT,METAR
MGQZ,,14.87,-91.5,2378.0,QUEZALTENANGO   ,,GT,METAR
MGRT,78639,14.53,-91.7,209.0,RETALHULEU (MIL/,,GT,METAR
MGSJ,78647,13.93,-90.83,7.0,SAN JOSE (CIV/M ,,GT,METAR TAF
MGTK,,16.92,-89.87,128.0,TIKAL INTL      ,,GT,METAR TAF
MGZA,,14.97,-89.53,195.0,ZACAPA          ,,GT,METAR
MHAM,78700,13.27,-87.65,8.0,AMAPALA/LOS PEL ,,HN,METAR TAF
MHCA,78714,14.87,-85.78,386.0,CATACAMAS       ,,HN,METAR TAF
MHCH,78724,13.32,-87.15,58.0,CHOLUTECA       ,,HN,METAR TAF
MHCL,,14.17,-88.03,378.0,COLON           ,,HN,METAR
MHGS,,14.57,-88.6,913.0,CELAQUE         ,,HN,METAR
MHIC,78501,17.38,-83.92,11.0,ISLAS DEL CISNE ,,HN,METAR
MHLC,78705,15.75,-86.85,13.0,LA CEIBA/GOLOSO ,,HN,METAR TAF
MHLE,78719,14.28,-88.17,1688.0,LA ESPERANZA    ,,HN,METAR TAF
MHLM,78708,15.45,-87.93,32.0,LA MESA/PEDRO S ,,HN,METAR TAF
MHML,,13.18,-87.18,14.0,MONTE LIBANO    ,,HN,METAR
MHNJ,78701,16.45,-85.9,13.0,ISLA DE GUANAJA ,,HN,METAR
MHNO,78718,14.43,-89.18,790.0,NUEVA OCOTEPEQUE,,HN,METAR TAF
MHPL,78711,15.27,-83.78,13.0,PUERTO LEMPIRA  ,,HN,METAR TAF
MHPR,,14.38,-87.62,628.0,PALMEROLA       ,,HO,METAR TAF
MHRO,78703,16.32,-86.53,6.0,ROATAN          ,,HN,METAR TAF
MHSC,,14.37,-87.62,628.0,SOTO CANO AB    ,,HN,METAR TAF
MHSR,78717,14.78,-88.78,1087.0,SANTA ROSA DE C ,,HN,METAR TAF
MHTE,78706,15.78,-87.48,7.0,TELA            ,,HN,METAR TAF
MHTG,78720,14.07,-87.22,1001.0,TEGUCIGALPA/TON ,,HN,METAR TAF
MHTR,,15.93,-85.93,3.0,TRUJILLO        ,,HN,METAR
MHYR,78707,15.13,-87.13,682.0,YORO            ,,HN,METAR TAF
MKJP,78397,17.93,-76.78,3.0,KINGSTON/NORMAN ,,JM,METAR rawinsonde TAF
MKJS,78388,18.5,-77.92,3.0,SANGSTER/MONTEG ,,JM,METAR TAF
MKPE,78956,12.15,-61.62,6.0,PEARLS AIRPORT  ,,GD,METAR
MLIP,99450,6.0,172.0,0.0,MILI/MARSHALL IS,MH,US,METAR
MMAA,,16.75,-99.75,5.0,ACAPULCO/G. ALVA,,MX,METAR TAF
MMAN,76394,25.87,-100.23,447.0,MONTERREY INTL A,,MX,METAR rawinsonde TAF
MMAS,76571,21.7,-102.32,1866.0,AGUASCALIENTES  ,,MX,METAR TAF
MMBT,,15.77,-96.27,137.0,BAHIAS DE HUATUL,,MX,METAR TAF
MMCB,76726,18.83,-99.27,1281.0,CUERNAVACA      ,,MX,METAR TAF
MMCE,,18.65,-91.8,5.0,CIUDAD DEL CARM ,,MX,METAR TAF
MMCL,76412,24.77,-107.47,35.0,CULIACAN (CITY) ,,MX,METAR TAF
MMCM,76750,18.5,-88.33,10.0,CHETUMAL        ,,MX,METAR TAF
MMCN,76258,27.4,-109.83,57.0,CIUDAD OBREGON  ,,MX,METAR TAF
MMCP,76695,19.82,-90.5,9.0,CAMPECHE/IGNACIO,,MX,METAR TAF
MMCS,,31.63,-106.42,1194.0,CIUDAD JUAREZ IN,,MX,METAR TAF
MMCT,,20.63,-88.45,29.0,CHICHEN ITZA YU ,,MX,METAR
MMCU,76225,28.7,-105.97,1349.0,CHIHUAHUA INTL A,,MX,METAR rawinsonde TAF
MMCV,76491,23.72,-98.97,230.0,CIUDAD VICTORIA ,,MX,METAR TAF
MMCZ,,20.52,-86.92,7.0,COZUMEL (CIV/MIL,,MX,METAR TAF
MMDO,76423,24.12,-104.52,1863.0,DURANGO AIRPORT ,,MX,METAR TAF
MMEP,76556,21.42,-104.85,921.0,TEPIC           ,,MX,METAR TAF
MMES,,31.8,-116.6,16.0,ENSENADAN       ,,MX,METAR
MMGD,76151,29.17,-118.32,25.0,ISLA GUADALUPE  ,,MX,rawinsonde
MMGL,,20.52,-103.32,1531.0,GUADALAJARA     ,,MX,METAR TAF
MMGM,,27.95,-110.92,13.0,GUAYMAS INTL ARP,,MX,METAR TAF
MMHO,76160,29.08,-111.05,186.0,HERMOSILLO INTL ,,MX,METAR TAF
MMIA,76658,19.27,-103.57,744.0,COLIMA          ,,MX,METAR TAF
MMIO,76390,25.55,-100.93,1430.0,SALTILLO        ,,MX,METAR TAF
MMIT,,16.45,-95.08,27.0,IXTEPEC OX      ,,MX,METAR
MMLM,,25.68,-109.08,6.0,LOS MOCHIS AIRPO,,MX,METAR TAF
MMLO,,21.0,-101.47,1805.0,DEL BAJIO/LEON  ,,MX,METAR TAF
MMLP,,24.07,-110.37,16.0,LA PAZ INTL AIRP,,MX,METAR TAF
MMLT,76305,25.98,-111.33,4.0,LORETO          ,,MX,METAR TAF
MMMA,,25.77,-97.52,7.0,MATAMOROS INTL  ,,MX,METAR TAF
MMMD,76644,20.95,-89.65,10.0,MERIDA INTL ARPT,,MX,METAR rawinsonde TAF
MMML,,32.62,-115.23,21.0,MEXICALI INTL AR,,MX,METAR TAF
MMMM,,19.85,-101.03,1840.0,MORELIA NEW     ,,MX,METAR TAF
MMMT,,18.1,-94.57,15.0,MINATITLAN      ,,MX,METAR TAF
MMMV,76342,26.95,-101.47,567.0,MONCLOVA        ,,MX,METAR TAF
MMMX,,19.43,-99.08,2224.0,MEXICO CITY/LICE,,MX,METAR TAF
MMMY,,25.77,-100.1,382.0,MONTERREY/GEN MA,,MX,METAR TAF
MMMZ,,23.17,-106.27,7.0,MAZATLAN/G. BUEL,,MX,METAR TAF
MMNG,,31.22,-110.97,1222.0,NOGALES         ,,MX,METAR
MMNL,,27.43,-99.57,146.0,NUEVO LAREDO INT,,MX,METAR TAF
MMOX,,17.0,-96.72,1528.0,OAXACA/XOXOCOTLA,,MX,METAR TAF
MMPA,,20.6,-97.47,153.0,POCA RICA-TAJIN ,,MX,METAR TAF
MMPB,76685,19.17,-98.37,2250.0,PUEBLA          ,,MX,METAR TAF
MMPE,76061,31.35,-113.52,9.0,PUERTO PENASCO  ,,MX,METAR
MMPG,76243,28.62,-100.53,224.0,PIEDRAS NEGRAS  ,,MX,METAR TAF
MMPN,,19.38,-102.03,1602.0,URUAPAN/GEN RAYO,,MX,METAR TAF
MMPQ,,17.53,-92.02,48.0,PALENQUE        ,,MX,METAR TAF
MMPR,,20.67,-105.25,6.0,PUERTO VALLARTA ,,MX,METAR TAF
MMPS,,15.87,-97.08,65.0,PUERTO ESCONDIDO,,MX,METAR TAF
MMQT,76625,20.62,-100.18,1909.0,QUERETARO       ,,MX,METAR TAF
MMRX,,26.02,-98.22,45.0,REYNOSA INTL ARP,,MX,METAR TAF
MMSC,76723,18.72,-110.95,35.0,ISLA SOCORRO    ,,MX,rawinsonde
MMSD,,23.15,-109.72,107.0,SAN JOSE DEL CAB,,MX,METAR TAF
MMSL,,22.95,-109.93,205.0,CABO SAN LUCAS  ,,MX,METAR TAF
MMSM,,19.75,-99.02,2250.0,SANTA LUCIA(AFB),,MX,METAR TAF
MMSP,76539,22.25,-100.93,1841.0,SAN LUIS POTOSI ,,MX,METAR TAF
MMTB,,16.73,-93.17,583.0,TUXTLA GUTIERREZ,,MX,METAR TAF
MMTC,76382,25.57,-103.4,1128.0,TORREON AIRPORT ,,MX,METAR rawinsonde TAF
MMTG,76843,16.57,-93.03,463.0,TUXTLA GUTIERREZ,,MX,METAR TAF
MMTJ,,32.53,-116.97,150.0,TIJUANA INTL ARP,,MX,METAR TAF
MMTL,76634,20.07,-98.37,2181.0,TULANCINGO      ,,MX,METAR
MMTM,,22.28,-97.87,21.0,TAMPICO/GEN FJ M,,MX,METAR TAF
MMTO,,19.35,-99.57,2582.0,TOLUCA/JOSE MARI,,MX,METAR TAF
MMTP,,14.78,-92.37,27.0,TAPACHULA       ,,MX,METAR TAF
MMUN,,21.03,-86.85,13.0,CANCUN          ,,MX,METAR rawinsonde TAF
MMVA,,18.0,-92.82,13.0,VILLAHERMOSA    ,,MX,METAR TAF
MMVR,,19.15,-96.18,26.0,VERACRUZ        ,,MX,METAR rawinsonde TAF
MMZC,,22.9,-102.68,2175.0,ZACATECAS ARPT  ,,MX,METAR TAF
MMZH,,17.6,-101.47,9.0,IXTAPA ZIHUATANE,,MX,METAR TAF
MMZO,,19.13,-104.57,11.0,MANZANILLO INTL ,,MX,METAR TAF
MMZP,,20.75,-103.47,1633.0,ZAPOPAN         ,,MX,METAR
MNBL,78745,12.0,-83.77,10.0,BLUEFIELDS      ,,NI,METAR TAF
MNCH,78739,12.63,-87.13,70.0,CHINANDEGA      ,,NI,METAR TAF
MNJG,78734,13.13,-86.02,981.0,JINOTEGA        ,,NI,METAR TAF
MNJU,78735,12.08,-85.37,85.0,JUIGALPA        ,,NI,METAR
MNLN,,12.42,-86.9,100.0,LEON/FANOR URROZ,,NI,METAR
MNMG,78741,12.15,-86.17,59.0,MANAGUA/AUGUSTO ,,NI,METAR TAF
MNPC,78730,14.05,-83.38,10.0,PUERTO CABEZAS( ,,NI,METAR TAF
MNRS,78733,11.42,-85.82,53.0,RIVAS           ,,NI,METAR TAF
MPBO,,9.35,-82.25,2.0,BOCAS DEL TORO  ,,PA,METAR
MPCF,,9.33,-79.87,8.0,ENRIQUE ADOLFO J,,PA,METAR
MPCH,,9.45,-82.52,6.0,CAPTAIN MANUEL N,,PA,METAR
MPDA,78793,8.4,-82.43,15.0,DAVID/ENRIQUE M ,,PA,METAR TAF
MPEJ,,9.35,-79.87,10.0,COLON           ,,PA,METAR
MPFS,78801,9.32,-79.97,52.0,FT SHERMAN (ROCO,,PA,METAR
MPHO,78806,8.92,-79.6,13.0,HOWARD AFB      ,,PA,METAR rawinsonde TAF
MPJE,,7.52,-78.15,9.0,JAQUE           ,,PA,METAR
MPLB,,8.97,-79.53,9.0,ALBROOK AFS/BALB,,PA,METAR
MPLP,,8.4,-78.12,10.0,LA PALMA        ,,PA,METAR
MPMG,,8.98,-79.57,6.0,MARCOS GELABERT ,,PA,METAR TAF
MPNU,,7.82,-80.27,21.0,AUGUSTO VERGARA ,,PA,METAR
MPOA,,8.67,-77.42,1.0,PUERTO OBALDIA  ,,PA,METAR
MPPA,,8.92,-79.6,1.0,PANAMA PACIFICO ,,PA,METAR TAF
MPRH,,8.37,-80.12,31.0,RIO HATO        ,,PA,METAR
MPSA,78795,8.07,-80.93,83.0,SANTIAGO        ,,PA,METAR
MPSM,,8.38,-80.13,36.0,SCARLETT MARTINE,,PA,METAR TAF
MPTO,78792,9.05,-79.38,7.0,TOCUMEN         ,,PA,METAR TAF
MPVR,78788,9.57,-78.97,2.0,EL PORVENIR     ,,PA,METAR
MRCH,,9.98,-84.78,2.0,CHACHARITA      ,,CR,METAR
MRLB,78774,10.6,-85.55,79.0,LIBERIA/TOMAS G ,,CR,METAR TAF
MRLM,78767,9.97,-83.03,2.0,LIMON INTL AIRP ,,CR,METAR TAF
MRNC,78755,10.15,-85.45,120.0,NICOYA          ,,CR,METAR
MROC,78762,10.0,-84.22,900.0,JUAN SANTAMARIA ,,CR,METAR TAF
MRPM,78772,8.93,-83.47,15.0,PALMAR SUR      ,,CR,METAR
MRPT,78760,9.97,-84.82,3.0,PUNTARENAS      ,,CR,METAR
MRPV,,9.95,-84.15,998.0,TOBIAS BOLANO   ,,CR,METAR TAF
MSAC,78650,13.57,-89.83,14.0,ACAJUTLA/SONSON ,,SV,METAR
MSLP,78666,13.43,-89.05,25.0,EL SALVADOR INT ,,SV,METAR rawinsonde TAF
MSLU,,13.33,-87.88,5.0,LA UNION        ,,SV,METAR
MSSA,78655,13.97,-89.53,656.0,SANTA ANA       ,,SV,METAR
MSSM,78670,13.43,-88.12,92.0,SAN MIGUEL      ,,SV,METAR
MSSS,78663,13.7,-89.12,611.0,ILOPANGO/S.SALV ,,SV,METAR TAF
MTCA,78447,18.17,-73.72,2.0,LES CAYES       ,,HT,METAR
MTCH,78409,19.75,-72.18,3.0,CAP-HAITIEN     ,,HT,METAR rawinsonde TAF
MTPP,78439,18.57,-72.3,36.0,PORT-AU-PRINCE  ,,HT,METAR TAF
MUBA,78268,20.35,-74.5,9.0,BARACOA ORIENTE ,,CU,METAR
MUBY,,20.4,-76.62,64.0,BAYAMO          ,,CU,METAR
MUCA,78346,22.03,-78.78,101.0,VENEZUELA/CIEGO ,,CU,METAR TAF
MUCC,,22.47,-78.33,7.0,CANAGUA         ,,CU,METAR TAF
MUCF,78244,22.15,-80.4,35.0,CIENFUEGOS(CIV/M,,CU,METAR TAF
MUCL,,21.63,-81.55,5.0,CAYO LARGO D SUR,,CU,METAR TAF
MUCM,78255,21.42,-77.85,125.0,CAMAGUEY/IGANCI ,,CU,METAR TAF
MUCO,78332,22.67,-80.92,35.0,COLON           ,,CU,METAR
MUCU,78264,19.97,-75.83,70.0,SANTIAGO DE CUB ,,CU,METAR TAF
MUGM,78367,19.9,-75.2,21.0,GUANTANAMO BAY  ,,US,METAR TAF
MUGT,78267,20.08,-75.15,8.0,GUANTANAMO      ,,CU,METAR
MUHA,78224,22.98,-82.42,61.0,HAVANA/JOSE MAR ,,CU,METAR TAF
MUHG,,20.78,-76.32,100.0,HOLGUIN (CIV/MIL,,CU,METAR TAF
MUMO,,20.65,-74.92,5.0,MOA MILITARY    ,,CU,METAR
MUMZ,78256,20.28,-77.1,32.0,MANZANILLO      ,,CU,METAR TAF
MUNG,78221,21.83,-82.78,23.0,NUEVA GERONA (M ,,CU,METAR TAF
MUPB,,23.03,-82.58,31.0,PLAYA BARACOA   ,,CU,METAR TAF
MUPR,78315,22.42,-83.67,37.0,PINAR DEL RIO NO,,CU,METAR
MUSA,,22.87,-82.52,50.0,SAN ANTONIO BANO,,CU,METAR TAF
MUSC,,22.5,-79.92,97.0,SANTA CLARA     ,,CU,METAR TAF
MUSJ,,22.1,-84.15,30.0,SAN JULIAN(MIL/C,,CU,METAR
MUSL,78312,22.67,-83.97,24.0,SANTA LUCIA     ,,CU,METAR
MUSN,,21.65,-82.95,11.0,SIGUANEA        ,,CU
MUTD,78337,21.77,-79.97,54.0,TRINIDAD        ,,CU,METAR
MUVR,78229,23.03,-81.43,65.0,VARADERO        ,,CU,METAR TAF
MUVT,78357,20.98,-76.95,99.0,LAS TUMAS       ,,CU,METAR
MWCB,,19.68,-79.88,7.0,GERRARD SMITH   ,,KY,METAR TAF
MWCG,78383,19.25,-81.42,6.0,GRAND CAYMAN    ,,KY,METAR
MWCR,78384,19.3,-81.37,4.0,GRAND CAYMAN/OWN,,KY,METAR rawinsonde TAF
MYAF,,24.68,-77.78,2.0,ANDROS TOWN     ,,BS,METAR
MYAK,78086,24.07,-77.53,4.0,KEMPS BAY/ANDR  ,,BS,METAR
MYBS,78070,25.7,-79.27,3.0,ALICE TOWN/S BI ,,BS,METAR
MYCB,,24.32,-75.45,2.0,NEW BIGHT       ,,BS,METAR
MYEF,,23.57,-75.88,3.0,EXUMA INTL      ,,BS,METAR
MYEG,78092,23.5,-75.77,3.0,GEORGE TOWN/EXU ,,BS,METAR
MYEH,78075,25.47,-76.68,3.0,N ELEUTHERA     ,,BS,METAR
MYEM,,25.28,-76.33,8.0,GOVERNORS HARBOR,,BS,METAR
MYER,,24.88,-76.17,3.0,ROCK SOUND(PRIVA,,BS,METAR
MYGF,78062,26.55,-78.7,2.0,FREEPORT INTL A ,,BS,METAR TAF
MYGM,,26.67,-78.32,2.0,GRAND BAHAMA AUX,,BS,METAR
MYGW,78061,26.7,-78.97,4.0,WEST END INTL A ,,BS,METAR
MYIG,78121,20.97,-73.67,2.0,MATTHEW TOWN/INA,,BS,METAR
MYNN,78073,25.03,-77.47,5.0,NASSAU INTL     ,,BS,METAR rawinsonde TAF
MYSM,78088,24.05,-74.52,5.0,COCKBURN/SAN SAL,,BS,METAR
MZBZ,78583,17.53,-88.3,6.0,BELIZE INTL     ,,BZ,METAR rawinsonde TAF
NCAI,91831,-18.82,-159.77,7.0,AMURI/AITUTAKI I,,CK,METAR
NCAT,,-19.97,-158.12,11.0,ATIU ENUA MANU  ,,CK,METAR
NCMG,,-21.88,-157.9,14.0,MANGAIA ISLAND  ,,CK,METAR
NCMH,,-10.38,-161.0,1.0,MANIHIKI ISLAND ,,CK,METAR
NCMK,91840,-20.15,-157.33,13.0,MAUKE ISLAND    ,,CK,METAR
NCMR,,-19.85,-157.7,8.0,MITIARO ISLAND  ,,CK,METAR
NCPK,,-10.9,-165.83,5.0,PUKAPUKA ISLAND ,,CK,METAR
NCPL,,1.98,-157.48,3.0,CHRISTMAS ISL   ,,CK,METAR
NCPY,91800,-9.02,-158.03,2.0,PENRHYN ISLAND  ,,CK,METAR
NCRG,91843,-21.2,-159.82,7.0,RAROTONGA COOK I,,CK,METAR TAF
NCRK,91804,-10.02,-161.1,7.0,RAKAHANGA ATOLL ,,CK,METAR
NFFN,91680,-17.75,177.45,14.0,NANDI FIJI      ,,FJ,METAR TAF
NFKD,91693,-19.05,178.15,2.0,VUNISEA         ,,FJ,METAR
NFLB,91690,-18.15,178.45,6.0,LAUTHALA BAY    ,,FJ,METAR
NFNA,91683,-18.05,178.57,6.0,NAUSORI FIJI    ,,FJ,METAR TAF
NFNK,91691,-18.18,-178.8,87.0,LAKEMBA ISLAND  ,,FJ,METAR
NFNL,,-16.47,179.33,17.0,LAMBASA AIRPORT ,,FJ,METAR TAF
NFNM,,-16.68,-179.87,21.0,MATEI/TAVEUNI IS,,FJ,METAR
NFNR,91650,-12.5,177.07,24.0,ROTUMA ISLAND   ,,FJ,METAR
NFNS,,-16.82,179.33,4.0,SAVUSAVU AIRPORT,,FJ,METAR
NFTF,91792,-21.23,-175.15,38.0,FUA AMOTU TONGA ,,TO,METAR TAF
NFTL,91784,-19.78,-174.33,10.0,HA'APAI/LIFUKA I,,TO,METAR TAF
NFTO,,-15.57,-175.62,49.0,NIUAFOOU        ,,TO,METAR
NFTP,,-15.98,-173.78,17.0,NIUATOPUTAPU    ,,TO,METAR
NFTV,91780,-18.58,-173.97,71.0,VAVA'U ISLAND   ,,TO,METAR TAF
NGBR,91623,-1.35,176.0,3.0,BERU ISLAND     ,,FJ,METAR
NGFO,91631,-5.67,176.12,3.0,NANUMEA ISLAND  ,,FJ,METAR
NGFU,91643,-8.52,179.18,2.0,FUNAFUTI TUVALU ,,TV,METAR TAF
NGTA,91610,1.37,173.13,8.0,TARAWA KIRIBATI ,,KI,METAR TAF
NGTR,91629,-2.67,176.82,7.0,ARORAE ISLAND   ,,FJ,METAR
NGTT,91602,1.35,172.92,10.0,TARAWA KIRIBATI ,,KI,METAR
NGTU,91601,3.02,172.77,1.0,BUTARITARI ATOLL,,FJ,METAR
NIUE,91822,-19.07,-169.92,22.0,ALOFI COOK IS   ,,NU,METAR TAF
NLWF,91754,-14.32,-178.12,36.0,FUTUNA ISL/MAOPO,,FJ,METAR TAF
NLWW,91753,-13.23,-176.18,24.0,HIHIFO ILE WALLI,,WF,METAR TAF
NSAP,91762,-13.82,-171.78,2.0,APIA/UPOLU ISLAN,,WS,METAR TAF
NSAU,91760,-13.5,-172.62,4.0,ASAU/SAVAI'I ISL,,WS,METAR
NSFA,91759,-13.83,-172.0,6.0,FALEOLO INT/APIA,,WS,METAR TAF
NSTU,91765,-14.33,-170.72,8.0,PAGO PAGO       ,,AS,METAR rawinsonde TAF
NTAA,91938,-17.55,-149.62,2.0,TAHITI-FAAA POLY,,PF,METAR TAF
NTAR,91950,-22.42,-151.37,3.0,RURUTU ISLAND   ,,WS,METAR
NTAT,91954,-23.35,-149.47,3.0,TUBUAI ISLAND   ,,WS,METAR
NTGE,91949,-18.47,-136.47,8.0,REAO ISLAND     ,,WS,METAR
NTTB,91930,-16.43,-151.75,3.0,BORA-BORA/MOTU-M,,WS,METAR TAF
NTTG,91941,-14.97,-147.67,3.0,RANGIROA/TUAMOTO,,WS,METAR
NTTO,91944,-18.07,-140.93,3.0,HAO/TUAMOTO (MIL,,WS,METAR
NTTR,91934,-16.72,-151.47,1.0,UTUROA/SOCIETY I,,WS,METAR
NTTX,91952,-21.82,-138.8,3.0,MORUROA ATOLL (M,,WS,METAR
NVSC,91551,-13.85,167.55,11.0,SOLA/VANUA LAVA ,,VU,METAR TAF
NVSG,,-15.3,167.97,31.0,LONGANA AIRPORT ,,VU,METAR TAF
NVSL,91555,-16.45,167.83,9.0,LAMAP/MALEKOULA ,,VU,METAR TAF
NVSP,,-16.08,167.4,8.0,NORSUP          ,,VU,METAR TAF
NVSS,91554,-15.52,167.22,47.0,PEKOA ARPT/SANTO,,VU,METAR TAF
NVVA,,-20.25,169.77,7.0,ANELGHOWHAT ARPT,,VU,METAR TAF
NVVV,91557,-17.68,168.3,23.0,BAUERFIELD/EFATE,,VU,METAR TAF
NVVW,,-19.45,169.22,5.0,TANNA           ,,VU,METAR TAF
NWWD,,-21.05,164.83,7.0,KONE AIRPORT    ,,NC,TAF
NWWE,91596,-22.6,167.43,97.0,ILS DES PINS/MOU,,NC,METAR TAF
NWWK,91577,-20.57,164.27,18.0,KOUMAC          ,,NC,METAR TAF
NWWL,91582,-20.77,167.22,29.0,OUANAHAM/WANAHAM,,NC,METAR TAF
NWWM,,-22.27,166.47,3.0,MAGENTA         ,,NC,METAR TAF
NWWN,91592,-22.27,166.43,72.0,NOUMEA/CALEDONI ,,NC,METAR
NWWR,91587,-21.47,168.02,42.0,LA ROCHE/MARE IS,,NC,METAR TAF
NWWU,,-20.78,165.27,3.0,TOUHO           ,,NC,METAR TAF
NWWV,91579,-20.63,166.57,7.0,OUVEA OULOUP/FAY,,NC,METAR
NWWW,91590,-22.02,166.22,16.0,LA TONTOUTA NLLE,,NC,METAR TAF
NZAA,93119,-37.02,174.8,7.0,AUCKLAND INTL AR,,NZ,METAR TAF
NZCA,93944,-52.53,169.15,19.0,CAMPBELL ISLAND ,,NZ,METAR
NZCH,93780,-43.48,172.52,36.0,CHRISTCHURCH INT,,NZ,METAR TAF
NZCI,93986,-43.95,176.57,48.0,CHATHAM ISL/TUUT,,NZ,METAR
NZCM,89674,-77.85,166.67,24.0,WILLIAMS FIELD  ,,AQ,METAR
NZDN,93890,-45.92,170.18,2.0,DUNEDIN AIRPORT ,,NZ,METAR
NZFX,,-77.95,166.77,10.0,PHOENIX FIELD   ,,AQ,METAR TAF
NZGS,93291,-38.67,177.97,8.0,GISBORNE AERODRO,,NZ,METAR
NZHK,93614,-42.72,170.97,40.0,HOKITIKA AERODRO,,NZ,METAR
NZIR,,-77.85,166.58,2.0,MCMURDO ICE RNWY,,AQ,METAR TAF
NZKI,93677,-42.42,173.68,101.0,KAIKOURA        ,,NZ,METAR
NZKT,93012,-35.12,173.27,87.0,KAITAIA         ,,NZ,METAR
NZMF,93720,-44.67,167.92,6.0,MILFORD SOUND   ,,NZ,METAR
NZNP,93308,-39.02,174.17,36.0,NEW PLYMOUTH AER,,NZ,METAR
NZNV,93844,-46.42,168.32,1.0,INVERCARGILL AER,,NZ,METAR
NZOH,93401,-40.2,175.38,45.0,OHAKEA (NZ-AFB) ,,NZ,METAR
NZOU,93796,-44.97,171.07,30.0,OAMARU ARPT (AUT,,NZ,METAR
NZPG,89668,-77.95,166.52,8.0,PEGASUS FIELD   ,,AQ,METAR TAF
NZPP,93417,-40.88,174.97,12.0,PARAPARAUMU AERO,,NZ,METAR
NZQN,93830,-45.02,168.73,356.0,QUEENSTOWN      ,,NZ,TAF
NZRN,93997,-29.25,177.92,49.0,RAOUL ISL/KERMAD,,NZ,METAR
NZRO,93246,-38.12,176.32,294.0,ROTORUA AERODROM,,NZ,METAR
NZSP,89009,-89.98,179.98,2830.0,AMUNDSEN-SCOTT  ,,AQ,METAR TAF
NZTB,,-74.7,164.15,0.0,TERRA NOVA BAY  ,,AQ,METAR
NZTG,93186,-37.67,176.18,5.0,TAURANGA AERO AW,,NZ,METAR
NZWB,93577,-41.52,173.87,32.0,BLEHEIM/WOODBOUR,,NZ,METAR
NZWD,89670,-77.87,166.97,21.0,MCMURDO WILLIAMS,,AQ,METAR TAF
NZWN,93436,-41.32,174.8,12.0,WELLINGTON INTL ,,NZ,METAR TAF
NZWP,93112,-36.78,174.62,19.0,WHENUAPAI (NZ-AF,,NZ,METAR
NZWS,93516,-41.75,171.58,4.0,WESTPORT HARBOUR,,NZ,METAR
OAAS,40934,35.02,71.42,880.0,ASMAR           ,,AF,METAR
OABD,,34.28,67.83,2975.0,BEHSOOD         ,,AF,METAR
OABN,40945,34.82,67.82,2550.0,BAMIYAN         ,,AF,METAR
OADW,,32.2,68.33,2800.0,WAZAKHAW        ,,AF,METAR
OADZ,40900,38.42,70.78,1320.0,DARWAZ          ,,AF,METAR
OAEK,40917,36.85,70.07,1000.0,KESHM           ,,AF,METAR
OAEM,40918,36.7,71.57,2620.0,ISKACHEM/ESHKASH,,AF,METAR
OAEQ,40935,34.63,61.57,800.0,ISLAM-QALA      ,,AF,METAR
OAFR,40974,32.37,62.17,700.0,FARAH           ,,AF,METAR
OAFZ,40904,37.12,70.52,1200.0,FAIZABAD        ,,AF,METAR TAF
OAGL,,32.62,63.67,1375.0,GULISTAN        ,,AF,METAR
OAGM,40941,34.87,65.28,2070.0,GHELMEEN        ,,AF,METAR
OAGN,40968,33.52,68.42,2183.0,GHAZNI          ,,AF,METAR
OAGZ,40970,33.62,69.23,2350.0,GARDEZ          ,,AF,METAR
OAHJ,40933,34.57,68.08,3400.0,HAJIGAK         ,,AF,METAR
OAHN,40901,37.87,70.22,1040.0,KHWAHAN         ,,AF,METAR
OAHR,40938,34.22,62.22,964.0,HERAT           ,,AF,METAR TAF
OAIX,,34.95,69.27,1480.0,BAGRAM          ,,AF,METAR TAF
OAJL,40954,34.4,70.48,559.0,JALALABAD (MIL) ,,AF,METAR TAF
OAJS,40932,35.12,69.25,1630.0,JABUL-SARAJ     ,,AF,METAR
OAKB,40948,34.55,69.22,1786.0,KABUL INTL (MIL),,AF,METAR TAF
OAKJ,,32.17,65.08,1000.0,KAJAKI          ,,AF,METAR
OAKN,40990,31.5,65.83,1009.0,KANDAHAR INTL AR,,AF,METAR TAF
OAKR,40924,37.2,67.72,304.0,KALDAR          ,,AF,METAR
OAKS,40971,33.35,69.95,1146.0,KHOST           ,,AF,METAR
OAKT,,32.12,66.9,1565.0,KALAT           ,,AF,METAR
OALL,40944,34.5,66.28,2800.0,LAL             ,,AF,METAR
OAMN,40922,35.92,64.75,815.0,MAIMANA/MIMANA  ,,AF,METAR
OAMS,40911,36.7,67.2,382.0,MAZAR-I-SHARIF  ,,AF,METAR TAF
OAOG,40984,32.92,69.12,2262.0,URGOON          ,,AF,METAR
OAPG,,34.57,68.97,2114.0,PAGHMAN         ,,AF,METAR
OAPJ,,34.37,67.02,2710.0,PAN JAO         ,,AF,METAR
OAQD,40939,34.78,63.42,1280.0,QADES           ,,AF,METAR
OAQN,40937,35.0,63.12,914.0,QALA-I-NOW      ,,AF,METAR
OASD,40957,33.38,62.27,1150.0,SHINDAND        ,,AF,METAR
OASG,40908,36.67,65.72,360.0,SHEBIRGHAN      ,,AF,METAR
OAUZ,40913,36.67,68.92,446.0,KUNDUZ          ,,AF,METAR TAF
OAYQ,40928,37.47,69.67,810.0,YANGI QALA      ,,AF,METAR
OAZB,40920,36.5,71.25,2600.0,ZEBAK           ,,AF,METAR
OBBI,41150,26.27,50.63,6.0,BAHRAIN INTL ARP,,BH,METAR TAF
OEAB,41112,18.23,42.65,2092.0,ABHA            ,,SA,METAR TAF
OEAH,40420,25.28,49.48,180.0,AL AHSA         ,,SA,METAR TAF
OEAO,,26.48,38.12,615.0,PRINCE ABDULMAJE,,SA,METAR TAF
OEBA,41055,20.3,41.63,1659.0,AL BAHA         ,,SA,METAR TAF
OEBH,41084,19.98,42.62,1167.0,BISHA (CIV/MIL) ,,SA,METAR TAF
OEDF,40417,26.43,49.82,15.0,KING FAHD INTL  ,,SA,METAR TAF
OEDM,40414,24.45,44.12,922.0,AL DAWADMI      ,,SA,METAR TAF
OEDR,40416,26.27,50.17,17.0,DHAHRAN INTL (MI,,SA,METAR TAF
OEDW,40435,24.5,44.38,990.0,DAWADMI         ,,SA,METAR
OEGN,41140,16.9,42.58,5.0,GIZAN           ,,SA,METAR TAF
OEGS,40405,26.3,43.77,647.0,GASSIM          ,,SA,METAR TAF
OEGT,40360,31.42,37.27,512.0,GURIAT          ,,SA,METAR TAF
OEHL,40394,27.43,41.68,1002.0,HAIL            ,,SA,METAR TAF
OEJB,,27.05,49.4,6.0,AL JUBAIL       ,,SA,METAR TAF
OEJD,41026,21.5,39.2,15.0,JEDDAH          ,,SA,METAR TAF
OEJN,41024,21.68,39.15,8.0,JEDDAH/KING ABDU,,SA,METAR TAF
OEKB,,25.67,39.38,754.0,KAIBER          ,,SA,METAR
OEKJ,,24.07,47.58,487.0,AL KHARJ AB     ,,SA,METAR TAF
OEKK,40377,27.9,45.52,420.0,KING KHALID MIL ,,SA,METAR TAF
OEKM,41114,18.3,42.78,2038.0,KHAMIS MUSHAIT A,,SA,METAR TAF
OEMA,40430,24.55,39.7,639.0,MADINAH INTL ARP,,SA,METAR TAF
OEMH,41006,22.43,41.75,967.0,MUAYH           ,,SA,METAR
OEMK,41030,21.43,40.0,367.0,MAKKAH/MECCA    ,,SA,METAR
OENG,41128,17.62,44.42,1210.0,NEJRAN          ,,SA,METAR TAF
OEPA,40373,28.33,46.12,361.0,HAFR AL-BATIN AR,,SA,METAR TAF
OEPS,,24.07,47.58,503.0,PRINCE SULTAN AB,,SA,METAR TAF
OERF,40362,29.62,43.48,441.0,RAFHA (PRIVATE) ,,SA,METAR TAF
OERK,40437,24.95,46.72,618.0,RIYADH/KING KHAL,,SA,METAR TAF
OERR,40357,30.9,41.13,554.0,ARAR            ,,SA,METAR TAF
OERY,40438,24.72,46.72,611.0,RIYADH (SAUD-AFB,,SA,METAR TAF
OESH,41136,17.47,47.12,720.0,SHARURAH (CIV/MI,,SA,METAR TAF
OESK,40361,29.78,40.1,671.0,AL-JOUF (CIV/MIL,,SA,METAR TAF
OETB,40375,28.37,36.62,770.0,TABUK (SAUD-AFB),,SA,METAR TAF
OETF,41036,21.47,40.53,1460.0,TAIF (CIV/MIL)  ,,SA,METAR TAF
OETR,40356,31.7,38.73,854.0,TURAIF          ,,SA,METAR TAF
OEWD,41061,20.5,45.2,629.0,WADI AL DAWASER ,,SA,METAR TAF
OEWJ,40400,26.18,36.47,8.0,WEJH            ,,SA,METAR TAF
OEYN,40439,24.13,38.07,20.0,YENBO           ,,SA,METAR TAF
OIAA,40831,30.35,48.22,4.0,ABADAN INTL AIRP,,IR,METAR TAF
OIAD,40795,32.43,48.4,142.0,DEZFUL (IRAN-AFB,,IR,METAR
OIAG,40833,30.73,49.68,17.0,AGHA JARI       ,,IR,METAR
OIAH,40835,30.33,50.83,730.0,GACH SARAN(PRIVA,,IR,METAR
OIAI,40812,32.0,49.27,357.0,MASJED-SOLEYMAN ,,IR,METAR
OIAM,40832,30.55,49.15,7.0,BANDAR MAHSHAHR ,,IR,METAR
OIAW,40811,31.33,48.77,25.0,AHWAZ           ,,IR,METAR TAF
OIBA,,25.88,55.03,7.0,ABUMUSA ISLAND  ,,IR,METAR
OIBB,40858,28.93,50.83,15.0,BUSHEHR (CIV/AFB,,IR,METAR TAF
OIBH,,27.2,54.32,412.0,BASTAK          ,,IR,METAR
OIBJ,,27.82,52.35,647.0,JAM AIRPORT     ,,IR,METAR
OIBK,,26.53,53.98,27.0,KISH ISLAND     ,,IR,METAR TAF
OIBL,40883,26.53,54.82,25.0,BANDAR LENGEH   ,,IR,METAR
OIBP,,27.38,52.73,13.0,PERSIAN GULF APT,,IR,METAR TAF
OIBQ,,29.27,50.32,3.0,KHARK ISLAND    ,,IR,METAR
OIBS,,25.9,54.55,4.0,SIRRI ISLAND    ,,IR,METAR
OIBV,,26.82,53.35,23.0,LAVAN ISLAND    ,,IR,METAR
OICC,40766,34.35,47.17,1310.0,KERMANSHAH/BAKTA,,IR,METAR TAF
OICG,40765,34.52,45.57,378.0,GHASRE-SHIRIN   ,,IR,METAR
OICI,,33.58,46.4,1323.0,ILAM AIRPORT    ,,IR,METAR TAF
OICJ,,33.9,48.75,1565.0,BORUJERD        ,,IR,METAR
OICK,,33.43,48.28,1156.0,KHORAM ABAD     ,,IR,METAR
OICS,40747,35.25,47.02,1369.0,SANANDAJ        ,,IR,METAR
OIFK,40785,33.9,51.58,1058.0,KASHAN          ,,IR,METAR
OIFM,40800,32.75,51.87,1539.0,ESFAHAN S B INTL,,IR,METAR TAF
OIFS,40798,32.28,50.85,2042.0,SHAHRE-KORD     ,,IR,METAR
OIGG,40719,37.33,49.6,-16.0,RASHT           ,,IR,METAR TAF
OIGK,,34.35,47.13,1314.0,KERMANSHAH      ,,IR,METAR
OIHH,40768,34.87,48.55,1742.0,HAMADAN         ,,IR,METAR
OIHM,,34.28,48.82,1744.0,MALAYER AIRPORT ,,IR,METAR
OIHR,40769,34.13,49.85,1658.0,ARAK            ,,IR,METAR
OIIE,40730,35.42,51.15,993.0,IMAM KHOMEINI   ,,IR,METAR TAF
OIII,40754,35.68,51.3,1182.0,TEHRAN/MEHRABAD ,,IR,METAR TAF
OIIK,40731,36.25,50.05,1278.0,GHAZVIN         ,,IR,METAR
OIIP,,35.78,50.83,1270.0,KARAJ/PAYAM     ,,IR,METAR TAF
OIIQ,,34.63,50.88,928.0,GHOM/QOM        ,,IR,METAR
OIIS,40757,35.38,53.67,1115.0,SEMNAN          ,,IR,METAR
OIKB,40875,27.22,56.37,6.0,BANDAR ABBAS INT,,IR,METAR TAF
OIKK,40841,30.25,56.97,1749.0,KERMAN          ,,IR,METAR TAF
OIKM,40854,29.08,58.45,974.0,BAM             ,,IR,METAR
OIKO,,27.1,57.07,32.0,MINAB           ,,IR,METAR
OIKQ,,26.75,55.9,9.0,GHESHM/DAYRESTAN,,IR,METAR
OIKR,,30.3,56.05,1603.0,RAFSANJAN       ,,IR,METAR
OIMB,40809,32.9,59.28,1512.0,BIRJAND         ,,IR,METAR
OIMC,,36.5,61.07,287.0,SARAKHS         ,,IR,METAR
OIMD,,34.38,58.63,1097.0,GONABAD         ,,IR,METAR
OIMH,40762,35.27,59.22,1333.0,TORBAT-HEYDARIEH,,IR,METAR
OIMJ,,36.43,55.1,1285.0,SHAHROUD        ,,IR,METAR
OIMM,40745,36.23,59.63,995.0,MASHHAD (AFB/CIV,,IR,METAR TAF
OIMN,40723,37.48,57.3,1065.0,BOJNOURD        ,,IR,METAR
OIMQ,,35.27,58.47,1101.0,KASMAR          ,,IR,METAR
OIMS,40743,36.17,57.6,920.0,SABZEVAR        ,,IR,METAR
OIMT,40791,33.67,56.88,693.0,TABAS           ,,IR,METAR
OINB,,36.72,52.65,-20.0,BABOLSAR        ,,IR,METAR
OINE,,37.38,55.45,125.0,KALALEH         ,,IR,METAR
OING,40738,36.9,54.4,0.0,GORGAN          ,,IR,METAR TAF
OINK,,37.25,55.1,30.0,GONBAD GHABUS   ,,IR,METAR
OINN,,36.67,51.47,-25.0,NOSHAHR         ,,IR,METAR
OINR,40732,36.9,50.67,-19.0,RAMSAR          ,,IR,METAR
OINZ,,36.63,53.2,8.0,SARY DASHTE NAZ ,,IR,METAR TAF
OISA,40818,31.03,52.78,1949.0,ABADEH          ,,IR,METAR
OISF,40859,28.9,53.72,1305.0,FASA            ,,IR,METAR
OISL,,27.67,54.37,804.0,LAR AIRPORT     ,,IR,METAR TAF
OISR,,27.37,53.2,402.0,LAMERD AIRPORT  ,,IR,METAR
OISS,40848,29.53,52.58,1484.0,SHIRAZ (CIV/AFB),,IR,METAR TAF
OISY,,30.7,51.55,1800.0,YASOUJ AIRPORT  ,,IR,METAR
OITK,40703,38.42,44.98,1192.0,KHOY            ,,IR,METAR
OITL,,38.33,48.42,1314.0,ARDABIL         ,,IR,METAR TAF
OITM,,37.35,46.15,1340.0,SAHAND AIRPORT  ,,IR,METAR
OITP,,39.6,47.88,72.0,PARSABAD        ,,IR,METAR
OITR,40712,37.67,45.07,1312.0,ORUMIEH         ,,IR,METAR TAF
OITS,40727,36.25,46.27,1493.0,SAGHEZ          ,,IR,METAR
OITT,40706,38.13,46.23,1353.0,TABRIZ(IRAN-AB/C,,IR,METAR TAF
OITU,,39.33,44.43,1364.0,MAKOU AIRPORT   ,,IR,METAR
OITZ,40729,36.77,48.37,1630.0,ZANJAN          ,,IR,METAR
OIYY,40821,31.9,54.28,1226.0,YAZD            ,,IR,METAR TAF
OIZB,40829,31.1,61.55,483.0,ZABOL           ,,IR,METAR
OIZC,40898,25.45,60.38,13.0,CHAH BAHAR (IR-A,,IR,METAR TAF
OIZH,40856,29.47,60.92,1378.0,ZAHEDAN INTL ARP,,IR,METAR TAF
OIZI,40879,27.23,60.72,622.0,IRANSHAHR       ,,IR,METAR
OIZJ,40893,25.65,57.8,6.0,JASK            ,,IR,METAR
OJAI,40272,31.72,36.0,723.0,QUEEN ALIA INTL ,,JO,METAR TAF
OJAM,40270,31.98,35.98,765.0,AMMAN/KING ABDUL,,JO,METAR TAF
OJAQ,40340,29.62,35.02,45.0,AQABA INTL AIRPO,,JO,METAR TAF
OJBD,40255,32.53,35.85,619.0,IRBID (MET)     ,,JO,METAR
OJHF,40260,32.2,37.12,670.0,HOTEL-5 'SAFAWI',,JO,METAR
OJHR,40250,32.5,38.2,688.0,HOTEL-4 'IRWAISH,,JO,METAR
OJMF,40265,32.37,36.25,687.0,MAFRAQ (JOR-AFB),,JO,METAR
OJMN,40310,30.17,35.77,1070.0,MA'AN           ,,JO,METAR
OKAS,,29.35,47.52,144.0,AL JAHRA        ,,KW,METAR TAF
OKBK,40582,29.22,47.97,55.0,KUWAIT INTL (MIL,,KW,METAR TAF
OLBA,40100,33.82,35.48,29.0,BEIRUT (CIV/MIL),,LB,METAR TAF
OMAA,41217,24.42,54.65,13.0,ABU DHABI INTL  ,,AE,METAR TAF
OMAB,,23.62,53.37,94.0,BUHASA          ,,AE,METAR
OMAD,41216,24.42,54.47,9.0,ABU DHABI/BATEEN,,AE,METAR TAF
OMAH,,24.08,52.47,4.0,AL HAMRA AUX    ,,AE,METAR
OMAJ,,24.18,52.62,13.0,JEBEL DHANA     ,,AE,METAR
OMAL,41218,24.25,55.6,247.0,AL AIN INTNL ARP,,AE,METAR TAF
OMAM,,24.25,54.55,13.0,ABU DHABI AL DAF,,AE,METAR
OMDB,41194,25.25,55.37,5.0,DUBAI INTL AIRPO,,AE,METAR TAF
OMDL,,24.5,52.33,25.0,DELMA ISLAND    ,,AE,METAR
OMDM,,25.03,55.37,42.0,AL MINHAD AIRB  ,,AE,METAR
OMDW,,24.9,55.17,34.0,DUBAI AL MAKTOUM,,AE,METAR TAF
OMFJ,41198,25.1,56.32,27.0,FUJAIRAH INTL AR,,AE,METAR TAF
OMRK,41184,25.62,55.93,18.0,RAS AL KHAIMAH  ,,AE,METAR TAF
OMSJ,41196,25.32,55.52,33.0,SHARJAH INTL ARP,,AE,METAR TAF
OMSN,,25.22,54.23,7.0,SIR ABU NAIR    ,,AE,METAR
OOAD,,22.5,57.37,327.0,ADAM            ,,OM,METAR
OOBR,41244,24.22,55.77,299.0,BURAIMI (AUT)   ,,OM,METAR TAF
OODQ,,19.52,57.65,116.0,DUQM            ,,OM,METAR TAF
OOFD,41262,22.35,56.47,170.0,FAHUD (AUT)     ,,OM,METAR
OOGB,,21.37,57.03,135.0,GHABA CENTRAL(PV,,OM,METAR
OOHA,,19.97,56.27,122.0,HAIMA           ,,OM,METAR
OOIA,,22.62,58.67,1100.0,IBRA            ,,OM,METAR
OOII,,23.27,56.52,1000.0,IBRI            ,,OM,METAR
OOKB,41240,26.17,56.23,30.0,KHASSAB (MIL)   ,,OM,METAR TAF
OOMA,41288,20.67,58.88,19.0,MASIRAH (OM-AFB),,OM,METAR
OOMS,41256,23.58,58.28,8.0,SEEB INTL/MUSCAT,,OM,METAR TAF
OONZ,,22.92,57.52,1900.0,NIZWA           ,,OM,METAR
OOSA,41316,17.03,54.1,20.0,SALALAH         ,,OM,METAR TAF
OOSH,41246,24.38,56.62,35.0,SOHAR MAJIS     ,,OM,METAR TAF
OOSQ,41254,23.07,57.63,1755.0,SAIQ            ,,OM,METAR TAF
OOSR,41268,22.52,59.47,14.0,SUR             ,,OM,METAR TAF
OOTH,41314,17.67,54.02,445.0,THUMRAIT (OM-AFB,,OM,METAR TAF
OPBN,,32.97,70.52,404.0,BANNU           ,,PK,METAR
OPBW,41700,29.35,71.72,120.0,BAHAWALPUR      ,,PK,METAR TAF
OPCH,41506,35.85,71.82,1500.0,CHITRAL         ,,PK,METAR
OPDG,,29.97,70.48,150.0,DERA GHAZI      ,,PK,TAF
OPDI,41624,31.82,70.92,173.0,DERA ISMAIL KHAN,,PK,METAR
OPFA,,31.37,73.0,180.0,FAISALABAD INTL ,,PK,METAR TAF
OPGD,,25.23,62.33,9.0,GWADAR          ,,PK,METAR TAF
OPGT,41517,35.92,74.32,1454.0,GILGIT          ,,PK,METAR
OPIS,,33.55,72.83,542.0,ISLAMABAD       ,,PK,METAR TAF
OPJA,41715,28.3,68.47,56.0,JACOBABAD (CIV/M,,PK,METAR
OPJI,41756,25.07,61.78,57.0,JIWANI (CAPE)   ,,PK,METAR
OPKC,41780,24.9,67.13,20.0,KARACHI INTL ARP,,PK,METAR TAF
OPKD,41764,25.32,68.37,41.0,HYDERABAD AIRPOR,,PK,METAR
OPKL,,29.02,66.57,2015.0,KALAT           ,,PK,METAR
OPLA,41641,31.52,74.4,217.0,LAHORE (CIV/MIL),,PK,METAR TAF
OPLH,41640,31.55,74.32,215.0,LAHORE/WALTON   ,,PK,METAR
OPMI,41592,32.53,71.52,212.0,MIANWALI (CIV/MI,,PK,METAR
OPMN,,32.97,70.12,921.0,MIRANSHAH(CIV/MI,,PK,METAR
OPMR,41781,24.88,66.92,16.0,KARACHI/MASROOR ,,PK,METAR
OPMT,41675,30.2,71.42,122.0,MULTAN          ,,PK,METAR TAF
OPNH,41749,26.22,68.38,30.0,NAWABSHAH       ,,PK,METAR TAF
OPOR,,25.22,64.62,2.0,ORMARA          ,,PK,METAR
OPPG,41739,26.95,64.13,1003.0,PANJGUR         ,,PK,METAR
OPPI,41759,25.28,63.35,11.0,PASNI           ,,PK,METAR
OPPS,41530,33.98,71.52,356.0,PESHAWAR (CIV/MI,,PK,METAR TAF
OPQT,41660,30.25,66.93,1606.0,QUETTA (CIV/MIL),,PK,METAR
OPRK,,28.38,70.28,83.0,SHAIKH ZAID     ,,PK,METAR TAF
OPRN,41571,33.62,73.08,502.0,ISLAMABAD (CIV/M,,PK,METAR TAF
OPRQ,,30.77,72.27,150.0,RAIFIQUI (PAK-AF,,PK,METAR
OPRS,41533,34.07,71.97,317.0,RISALPUR (PAK-AF,,PK,METAR
OPSB,41697,29.55,67.87,134.0,SIBI            ,,PK,METAR
OPSK,41593,27.72,68.8,62.0,SUKKUR          ,,PK,METAR TAF
OPSR,41594,32.03,72.67,188.0,SARGODHA (PAK-AF,,PK,METAR
OPSS,41523,34.82,72.35,970.0,SAIDU SHARIF    ,,PK,METAR
OPST,,32.53,74.37,234.0,SIALKOT AIRPORT ,,PK,METAR TAF
OPTA,,33.98,72.6,340.0,TARBELA DAM     ,,PK,METAR
OPTU,,25.97,63.02,122.0,TURBAT NEW      ,,PK,METAR
ORAA,,33.78,42.43,188.0,AL ASAD         ,,IQ,METAR
ORAQ,40627,34.38,41.02,180.0,AL QAIM         ,,IQ,METAR
ORBB,40650,33.22,44.22,34.0,BAGHDAD-SIRSENK ,,IQ,METAR
ORBD,,33.93,44.37,45.0,BALAD           ,,IQ,METAR TAF
ORBI,,33.27,44.23,37.0,BAGHDAD INTL    ,,IQ,METAR TAF
ORBM,,36.32,43.13,213.0,MOSUL (IRQ-AFB) ,,IQ,METAR TAF
ORBS,,33.27,44.22,34.0,SADDAM(IRQ-AFB/C,,IQ,METAR TAF
ORER,40616,36.23,43.97,399.0,ERBIL INTL      ,,IQ,METAR TAF
ORMM,40689,30.53,47.67,2.0,BASRAH/MAGAL    ,,IQ,METAR TAF
ORMS,40688,30.42,47.63,19.0,SHAIBAH/BASRAH  ,,IQ,METAR
ORNI,,31.98,44.4,33.0,AL NAJAF        ,,IQ,METAR TAF
ORQW,,35.77,43.12,228.0,QAYYARAH        ,,IQ,METAR
ORSH,40653,34.67,43.53,130.0,TIKRIT          ,,IQ,METAR
ORSU,,35.57,45.32,760.0,SULAYMANIYAH    ,,IQ,METAR TAF
ORTL,,30.93,46.08,6.0,TALLIL          ,,IQ,METAR
OSAP,40007,36.17,37.22,390.0,ALEPPO (CIV/MIL),,SY,METAR TAF
OSDI,40080,33.42,36.52,614.0,DAMASCUS (CIV/MI,,SY,METAR TAF
OSDZ,40045,35.28,40.18,208.0,DEIR ZZOR (CIV/M,,SY,METAR
OSKL,40001,37.03,41.2,443.0,KAMISHLI        ,,SY,METAR TAF
OSLK,40022,35.4,35.95,47.0,LATAKIA         ,,SY,METAR TAF
OSPR,40061,34.53,38.28,404.0,PALMYRA (CIV/MIL,,SY,METAR
OTBD,41170,25.25,51.57,13.0,DOHA INTL AIRPOR,,QA,METAR TAF
OTBH,,25.12,51.32,40.0,DOHA/AL UDEID AB,,QA,METAR TAF
OTHH,,25.27,51.6,3.0,DOHA HAMAD INTL ,,QA,METAR TAF
OYAA,41480,12.83,45.02,3.0,ADEN INTL       ,,YE,METAR TAF
OYAG,41428,16.18,52.17,36.0,AL GHAIDAH      ,,YE,METAR
OYAN,41430,15.37,42.57,15.0,KAMARAN ISLAND  ,,YE,METAR
OYAR,41443,14.65,49.37,19.0,RIYAN           ,,YE,METAR
OYAS,,16.02,43.17,175.0,ABBS            ,,YE,METAR
OYAT,41437,14.55,46.83,1136.0,ATAQ            ,,YE,METAR
OYBI,,13.97,45.57,1011.0,AL-BAYDA        ,,YE,METAR
OYDM,41434,14.55,44.4,2404.0,DHAMAR          ,,YE,METAR
OYGD,,16.18,52.17,37.0,AL-GHAIDAH      ,,YE,METAR
OYHD,41431,14.75,42.97,115.0,HODEIDAH        ,,YE,METAR TAF
OYHJ,,15.7,43.6,1807.0,HAJJAH          ,,YE,METAR
OYIB,,13.97,44.32,1920.0,IBB             ,,YE,METAR
OYMB,41350,15.47,45.32,1100.0,MARIB           ,,YE,METAR
OYMC,41477,13.25,44.12,3.0,MOKHA           ,,YE,METAR
OYMK,40579,13.32,43.23,1.0,MOKHA           ,,YE,METAR
OYRN,,14.67,49.38,17.0,RMUKALLA INTL   ,,YE,METAR TAF
OYSH,41324,16.97,43.72,1884.0,SA'ADA/SADAH    ,,YE,METAR
OYSN,41344,15.48,44.22,2191.0,SANA'A (CIV/MIL),,YE,METAR TAF
OYSQ,41494,12.62,53.9,33.0,SOCOTRA ISLAND  ,,YE,METAR
OYSY,,15.97,48.78,701.0,SAYUN           ,,YE,METAR TAF
OYTZ,41466,13.68,44.13,1385.0,TAIZ/GANED      ,,YE,METAR TAF
OYZM,41326,16.18,44.77,1900.0,AL-HAZM         ,,YE,METAR
PAAD,,70.13,-146.28,8.0,POINT THOMPSON  ,AK,US,METAR
PAAK,,52.22,-174.2,11.0,ATKA            ,AK,US,METAR
PAAP,,56.23,-134.65,4.0,PORT ALEXANDER  ,AK,US,METAR
PAAQ,70274,61.6,-149.08,68.0,PALMER          ,AK,US,METAR TAF
PABA,,70.13,-143.58,1.0,BARTER ISLAND   ,AK,US,METAR
PABC,,60.8,-161.88,49.0,BETHEL/88D      ,AK,US,NEXRAD
PABE,70219,60.78,-161.83,28.0,BETHEL          ,AK,US,METAR rawinsonde TAF
PABI,70267,64.0,-145.72,388.0,DELTA JUNCTION  ,AK,US,METAR TAF
PABL,,65.98,-161.15,7.0,BUCKLAND        ,AK,US,METAR
PABN,,62.4,-143.0,880.0,NABESNA         ,AK,US,METAR
PABR,70026,71.28,-156.78,6.0,UTQIAGVIK       ,AK,US,METAR rawinsonde TAF
PABT,70174,66.92,-151.52,195.0,BETTLES         ,AK,US,METAR TAF
PABV,,61.42,-149.52,21.0,BIRCHWOOD       ,AK,US,METAR
PACD,70316,55.22,-162.72,23.0,COLD BAY        ,AK,US,METAR rawinsonde TAF
PACE,,65.57,-144.78,286.0,CENTRAL         ,AK,US,METAR
PACG,,56.85,-135.53,63.0,SITKA/BIORKA/88D,AK,US,NEXRAD
PACM,,61.85,-165.57,3.0,SCAMMON BAY     ,AK,US,METAR
PACR,,65.83,-144.07,182.0,CIRCLE/PAFC RFC ,AK,US,METAR
PACV,70296,60.5,-145.47,15.0,CORDOVA         ,AK,US,METAR TAF
PACZ,70212,61.78,-166.03,129.0,CAPE ROMANZOF   ,AK,US,METAR TAF
PADE,,66.07,-162.77,5.0,DEERING         ,AK,US,METAR
PADG,,68.03,-162.9,296.0,REG DOG         ,AK,US,METAR
PADK,70454,51.88,-176.65,3.0,ADAK NAS        ,AK,US,METAR TAF
PADL,70321,59.05,-158.5,20.0,DILLINGHAM      ,AK,US,METAR TAF
PADM,,61.87,-162.03,17.0,MARSHALL        ,AK,US,METAR
PADQ,70350,57.75,-152.5,5.0,KODIAK          ,AK,US,METAR rawinsonde TAF
PADT,,62.72,-143.92,738.0,SLANA           ,AK,US,METAR
PADU,70489,53.9,-166.53,4.0,DUTCH HARBOR    ,AK,US,METAR TAF
PAEC,,62.88,-149.57,389.0,CHULITNA        ,AK,US,METAR
PAEC,,64.52,-165.3,16.0,NOME/88D/PAEC   ,AK,US,NEXRAD
PAED,70272,61.25,-149.83,54.0,ELMENDORF AFB   ,AK,US,METAR TAF
PAEG,,64.78,-141.15,273.0,EAGLE           ,AK,US,METAR
PAEH,70305,58.65,-162.07,101.0,CAPE NEWENHAM   ,AK,US,METAR TAF
PAEI,70265,64.67,-147.1,166.0,EIELSON AFB     ,AK,US,METAR TAF
PAEL,,58.2,-136.35,8.0,ELFIN COVE      ,AK,US,METAR
PAEM,,62.78,-164.48,2.0,EMMONAK         ,AK,US,METAR
PAEN,70259,60.57,-151.25,30.0,KENAI           ,AK,US,METAR TAF
PAER,,61.27,-153.82,358.0,STONY RIVER LAND,AK,US,METAR
PAFA,70261,64.8,-147.87,130.0,FAIRBANKS       ,AK,US,METAR rawinsonde TAF
PAFB,,64.83,-147.62,137.0,FORT WAINWRIGHT ,AK,US,METAR TAF
PAFC,,61.17,-150.03,48.0,ANCHORAGE/WFO   ,AK,US,WFO_office
PAFE,,56.97,-133.92,1.0,KAKE            ,AK,US,METAR
PAFG,,64.8,-147.88,140.0,FAIRBANKS/WFO   ,AK,US,WFO_office
PAFK,,62.53,-153.6,335.0,FAREWELL LAKE   ,AK,US,METAR
PAFM,,67.1,-157.85,79.0,AMBLER          ,AK,US,METAR
PAFN,,58.25,-134.87,0.0,FUNTER BAY      ,AK,US,METAR
PAFR,70270,61.27,-149.65,106.0,BRYANT ARMY AF  ,AK,US,METAR
PAFS,,63.02,-154.35,131.0,NIKOLAI         ,AK,US,METAR
PAGA,70222,64.73,-156.93,39.0,GALENA          ,AK,US,METAR TAF
PAGB,,68.48,-149.48,822.0,GALBRAITH LAKE  ,AK,US,METAR
PAGH,,66.88,-157.17,56.0,SHUNGNAK        ,AK,US,METAR
PAGK,70271,62.15,-145.45,481.0,GULKANA         ,AK,US,METAR TAF
PAGL,,64.55,-163.0,20.0,GOLOVIN         ,AK,US,METAR
PAGM,70204,63.77,-171.73,6.0,GAMBELL         ,AK,US,METAR
PAGN,70383,57.5,-134.58,2.0,ANGOON SEAPLANE ,AK,US,METAR
PAGP,99451,18.0,145.42,2.0,PAGAN/N. MARIANA,UM,GU,METAR
PAGS,70367,58.42,-135.7,9.0,GUSTAVUS        ,AK,US,METAR TAF
PAGY,70362,59.47,-135.32,7.0,SKAGWAY         ,AK,US,METAR TAF
PAHC,,62.18,-159.78,21.0,HOLY CROSS      ,AK,US,METAR
PAHG,,60.73,-151.35,74.0,ANCHORAG/NIKISKI,AK,US,NEXRAD
PAHL,,65.7,-156.35,49.0,HUSLIA          ,AK,US,METAR
PAHN,,59.25,-135.52,15.0,HAINES          ,AK,US,METAR TAF
PAHO,70341,59.63,-151.48,6.0,HOMER           ,AK,US,METAR TAF
PAHP,,61.52,-166.15,8.0,HOOPER BAY      ,AK,US,METAR
PAHS,,65.7,-156.38,55.0,HUSLIA          ,AK,US,METAR
PAHV,,63.87,-148.97,387.0,HEALY           ,AK,US,METAR
PAHX,,62.7,-159.57,20.0,SHAGELUK        ,AK,US,METAR
PAHY,,55.2,-132.83,0.0,HYDABURG        ,AK,US,METAR
PAHZ,,61.98,-152.08,305.0,HAYES RIVER     ,AK,US,METAR
PAIG,,59.32,-155.9,24.0,IGIUGIG         ,AK,US,METAR
PAIH,,59.47,-146.3,20.0,MIDDLETON IS 88D,AK,US,NEXRAD
PAII,,58.18,-157.38,31.0,EGEGIK          ,AK,US,METAR
PAIK,,66.98,-160.43,49.0,KIANA           ,AK,US,METAR
PAIL,70340,59.75,-154.92,44.0,ILIAMNA         ,AK,US,METAR TAF
PAIM,70173,66.0,-153.7,309.0,INDIAN MOUNTAIN ,AK,US,METAR TAF
PAIN,,63.73,-148.92,525.0,MCKINLEY PARK   ,AK,US,METAR
PAIW,,65.62,-168.1,6.0,WALES           ,AK,US,METAR
PAIZ,,61.63,-149.03,236.0,WOLVERINE ROAD  ,AK,US,METAR
PAJC,,56.32,-158.37,10.0,CHIGNIK BAY     ,AK,US,METAR
PAJK,,58.37,-134.57,7.0,JUNEAU/WFO      ,AK,US,WFO_office
PAJN,70381,58.35,-134.55,6.0,JUNEAU          ,AK,US,METAR TAF
PAJV,,61.72,-148.88,265.0,SUTTON          ,AK,US,METAR
PAJZ,,59.73,-157.27,80.0,KOLIGANEK       ,AK,US,METAR
PAKC,,58.68,-156.63,19.0,KING SALMON/88D ,AK,US,NEXRAD
PAKF,,54.85,-163.42,2.0,FALSE PASS      ,AK,US,METAR
PAKH,0000000,56.93,-154.18,15.0,AKHIOK          ,AK,US,METAR
PAKI,,59.93,-164.03,4.0,KIPNUK          ,AK,US,METAR
PAKK,,64.93,-161.15,56.0,KOYUK           ,AK,US,METAR
PAKN,70326,58.68,-156.65,20.0,KING SALMON     ,AK,US,METAR rawinsonde TAF
PAKP,,68.13,-151.73,649.0,ANAKTUVUK PASS  ,AK,US,METAR
PAKT,70395,55.35,-131.72,27.0,KETCHIKAN       ,AK,US,METAR TAF
PAKU,,70.32,-149.6,23.0,KUPARUK         ,AK,US,METAR
PAKV,,64.33,-158.72,53.0,KALTAG          ,AK,US,METAR
PAKW,,55.58,-133.07,7.0,KLAWOCK         ,AK,US,METAR TAF
PAKX,,60.2,-154.32,88.0,WILDER NATWICK  ,AK,US,METAR
PALG,,61.53,-160.33,13.0,KALSKAG         ,AK,US,METAR
PALH,,61.18,-149.97,26.0,ANCHORAGE/LAKE H,AK,US,METAR
PALJ,,60.2,-154.3,88.0,PORT ALSWORTH   ,AK,US,METAR
PALK,,62.03,-146.67,736.0,SNOWSHOE LAKE   ,AK,US,METAR
PALP,,70.33,-150.93,4.0,NUIQSUT VILLAGE ,AK,US,METAR
PALR,,67.5,-148.48,579.0,CHANDALAR LAKE  ,AK,US,METAR
PALU,70104,68.88,-166.1,8.0,CAPE LISBURNE   ,AK,US,METAR TAF
PALV,,60.82,-152.3,12.0,BIG RIVER LAKES ,AK,US,METAR
PAMB,,58.98,-159.05,28.0,MANOKOTAK       ,AK,US,METAR
PAMC,70231,62.97,-155.62,101.0,MCGRATH         ,AK,US,METAR rawinsonde TAF
PAMD,70343,59.43,-146.3,20.0,MIDDLETON ISLAND,AK,US,METAR
PAMH,70246,63.9,-152.28,200.0,MINCHUMINA      ,AK,US,METAR
PAMK,,63.48,-162.12,31.0,ST MICHAEL      ,AK,US,METAR
PAML,,65.0,-150.65,78.0,MANLEY HOT SPRIN,AK,US,METAR
PAMM,,55.13,-131.58,0.0,METLAKATLA      ,AK,US,METAR
PAMO,,62.1,-163.68,93.0,MOUNTAIN VILLAGE,AK,US,METAR
PAMR,,61.22,-149.85,43.0,ANCHORAGE/MERRIL,AK,US,METAR
PAMX,,61.43,-142.88,452.0,MCCARTHY        ,AK,US,METAR
PAMY,,60.37,-166.27,14.0,MEKORYUK        ,AK,US,METAR
PANA,,60.68,-161.98,7.0,NAPAKIAK        ,AK,US,METAR
PANC,70273,61.17,-150.02,39.0,ANCHORAGE INTL  ,AK,US,METAR rawinsonde TAF
PANI,70232,61.58,-159.53,21.0,ANIAK           ,AK,US,METAR
PANN,70260,64.55,-149.08,110.0,NENANA          ,AK,US,METAR
PANT,70398,55.03,-131.57,29.0,ANNETTE ISLAND  ,AK,US,METAR rawinsonde
PANV,,62.65,-160.18,91.0,ANVIK           ,AK,US,METAR
PANW,,59.45,-157.32,100.0,NEW STUYAHOK    ,AK,US,METAR
PAOH,,58.1,-135.45,0.0,HOONAH          ,AK,US,METAR
PAOM,70200,64.5,-165.43,6.0,NOME            ,AK,US,METAR rawinsonde TAF
PAOO,,60.53,-165.08,15.0,TOKSOOK BAY     ,AK,US,METAR
PAOR,70291,62.97,-141.93,524.0,NORTHWAY        ,AK,US,METAR TAF
PAOT,70133,66.88,-162.6,3.0,KOTZEBUE        ,AK,US,METAR rawinsonde TAF
PAOU,,56.0,-161.17,3.0,NELSON LAGOON   ,AK,US,METAR
PAPB,,56.58,-169.67,33.0,ST GEORGE       ,AK,US,METAR
PAPC,70119,65.25,-166.85,4.0,PORT CLARENCE   ,AK,US,METAR
PAPD,,65.03,-147.5,790.0,FRBNKS/PEDRO DOM,AK,US,NEXRAD
PAPG,70386,56.82,-132.93,24.0,PETERSBURG      ,AK,US,METAR TAF
PAPH,70333,56.95,-158.62,29.0,PORT HEIDEN     ,AK,US,METAR
PAPM,,59.02,-161.82,4.0,PLATINUM        ,AK,US,METAR
PAPN,,57.58,-157.57,19.0,PILOT POINT     ,AK,US,METAR
PAPO,,68.35,-166.8,4.0,POINT HOPE      ,AK,US,METAR
PAPR,,66.82,-150.65,324.0,PROSPECT CREEK  ,AK,US,METAR
PAPT,70249,62.1,-152.72,577.0,PUNTILLA LAKE   ,AK,US,METAR
PAQH,,59.75,-161.85,8.0,QUINHAGAK       ,AK,US,METAR
PAQT,,70.22,-151.0,11.0,NUIQSUT         ,AK,US,METAR TAF
PARC,,68.12,-145.58,626.0,ARCTIC VILLAGE  ,AK,US,METAR
PARD,,68.03,-162.9,297.0,REG DOG         ,AK,US,METAR
PARL,,65.57,-144.78,284.0,CENTRAL         ,AK,US,METAR
PARS,,61.77,-161.32,15.0,RUSSIAN MISSION ,AK,US,METAR
PARY,,64.73,-155.47,185.0,RUBY            ,AK,US,METAR
PASA,,63.68,-170.5,9.0,SAVOONGA        ,AK,US,METAR
PASC,,70.2,-148.47,17.0,DEADHORSE       ,AK,US,METAR TAF
PASD,,55.33,-160.52,6.0,SAND POINT      ,AK,US,METAR TAF
PASH,,66.27,-166.08,3.0,SHISHMAREF      ,AK,US,METAR
PASI,70371,57.03,-135.35,2.0,SITKA           ,AK,US,METAR TAF
PASK,,66.6,-160.0,3.0,SELAWIK         ,AK,US,METAR
PASL,,61.68,-157.15,64.0,SLEETMUTE       ,AK,US,METAR
PASM,,62.07,-163.3,108.0,SAINT MARYS     ,AK,US,METAR
PASN,70308,57.15,-170.22,8.0,ST PAUL ISLAND  ,AK,US,METAR rawinsonde TAF
PASO,,59.45,-151.7,20.0,SELDOVIA        ,AK,US,METAR
PASP,,61.82,-147.5,838.0,TAHNETNA PASS LO,AK,US,METAR
PASV,70235,61.1,-155.57,462.0,SPARREVOHN      ,AK,US,METAR TAF
PASW,70255,61.97,-151.2,45.0,SKWENTNA        ,AK,US,METAR
PASX,,60.48,-151.05,28.0,SOLDOTNA        ,AK,US,METAR
PASY,70414,52.72,174.12,6.0,EARECKSON/SHEMYA,AK,US,METAR rawinsonde TAF
PATA,70178,65.17,-152.1,62.0,TANANA          ,AK,US,METAR TAF
PATC,70117,65.57,-167.92,77.0,TIN CITY AFS    ,AK,US,METAR TAF
PATE,,65.23,-166.33,93.0,TELLER          ,AK,US,METAR
PATG,,59.05,-160.38,1.0,TOGIAK          ,AK,US,METAR
PATK,70251,62.32,-150.1,107.0,TALKEETNA       ,AK,US,METAR TAF
PATL,,62.9,-155.97,261.0,TATALINA AFS    ,AK,US,METAR TAF
PATO,,60.78,-148.85,47.0,PORTAGE GLACIER ,AK,US,METAR
PATQ,,70.47,-157.43,28.0,ATQASUK BURNELL ,AK,US,METAR
PATW,,63.38,-148.95,675.0,CANTWELL        ,AK,US,METAR
PAUD,,70.25,-148.33,14.0,PRUDHOE BAY     ,AK,US,METAR
PAUM,70162,69.37,-152.13,79.0,UMIAT           ,AK,US,METAR
PAUN,70207,63.88,-160.8,4.0,UNALAKLEET      ,AK,US,METAR TAF
PAUO,,61.75,-150.05,61.0,WILLOW          ,AK,US,METAR
PAUT,,54.13,-165.6,25.0,AKUTAN          ,AK,US,METAR
PAVA,,61.53,-165.6,14.0,CHEVAK          ,AK,US,METAR
PAVC,,55.12,-162.27,48.0,KING COVE       ,AK,US,METAR
PAVD,,61.13,-146.25,21.0,VALDEZ          ,AK,US,METAR TAF
PAVL,,67.73,-164.55,6.0,KIVALINA        ,AK,US,METAR
PAVW,70275,61.13,-146.35,10.0,VALDEZ WSO      ,AK,US,METAR
PAWD,70277,60.12,-149.42,3.0,SEWARD          ,AK,US,METAR
PAWG,70387,56.48,-132.37,6.0,WRANGELL        ,AK,US,METAR TAF
PAWI,70030,70.63,-160.02,12.0,WAINWRIGHT      ,AK,US,METAR
PAWM,,64.68,-163.42,80.0,WHITE MOUNTAIN  ,AK,US,METAR
PAWN,,67.57,-162.98,26.0,NOATAK          ,AK,US,METAR
PAWR,,60.78,-148.68,12.0,WHITTIER        ,AK,US,METAR
PAWS,,61.57,-149.53,102.0,WASILLA         ,AK,US,METAR
PAXK,,63.03,-145.5,805.0,PAXSON          ,AK,US,METAR
PAYA,70361,59.52,-139.67,9.0,YAKUTAT         ,AK,US,METAR rawinsonde TAF
PAZK,,61.93,-147.17,1002.0,EUREKA          ,AK,US,METAR
PFCL,,58.83,-158.53,23.0,CLARKS POINT    ,AK,US,METAR
PFEL,,64.62,-162.27,50.0,ELIM APRT       ,AK,US,METAR
PFKT,,65.33,-166.47,8.0,BREVIG MISSION  ,AK,US,METAR
PFKW,,60.8,-161.43,4.0,KWETHLUK        ,AK,US,METAR
PFNO,,66.82,-161.02,14.0,NOORVIK         ,AK,US,METAR
PFNU,,70.5,-150.25,8.0,OOOGURUK ISLAND ,AK,US,METAR
PFSH,,64.37,-161.22,6.0,SHAKTOOLIK      ,AK,US,METAR
PFWS,,58.7,-157.0,40.0,SOUTH NAKNEK    ,AK,US,METAR
PFYU,70194,66.57,-145.23,130.0,FORT YUKON      ,AK,US,METAR
PGAC,,13.55,144.82,111.0,TAGUAC          ,GU,GU,rawinsonde
PGNT,,15.0,145.62,80.0,SABANETTAN/TINIA,UM,GU,METAR
PGRO,91221,14.18,145.25,181.0,ROTA INTL AIRP  ,,MH,METAR TAF
PGSN,91232,15.12,145.72,65.0,SAIPAN/KOBLER   ,,MH,METAR TAF
PGTI,,15.0,145.62,82.0,WEST TINIAN     ,UM,GU,METAR
PGUA,91218,13.57,144.92,159.0,MARIANA/ANDERSEN,GU,GU,METAR NEXRAD WFO_office TAF
PGUM,91212,13.48,144.8,74.0,AGANA           ,GU,GU,METAR TAF
PGWT,,14.98,145.62,84.0,PEIPEINIMARU/TIN,GU,GU,METAR TAF
PHAC,91161,22.15,-159.65,1280.0,KOKEE           ,HI,US
PHBK,91162,22.03,-159.78,5.0,BARKING SANDS/KA,HI,US,METAR
PHFO,,21.32,-157.92,4.0,HONOLULU/WFO    ,HI,US,WFO_office
PHHI,91170,21.48,-158.05,246.0,WHEELER AFB/OAHU,HI,US,METAR TAF
PHHN,91194,20.8,-156.02,20.0,HANA            ,HI,US,METAR
PHIK,,21.32,-157.93,7.0,HICKAM AFB      ,HI,US,METAR TAF
PHJH,,20.97,-156.67,67.0,LAHAINA/WEST MAU,HI,US,METAR TAF
PHJR,91178,21.32,-158.07,9.0,KALAELOA        ,HI,US,METAR TAF
PHKI,,21.9,-159.55,55.0,NUMILA/S KAUAI  ,HI,US,NEXRAD
PHKM,,20.13,-155.78,1162.0,KOHALA 88D      ,HI,US,NEXRAD
PHKO,,19.73,-156.05,11.0,KAILUA/KONA     ,HI,US,METAR TAF
PHKP,91189,20.93,-156.7,3.0,KAANAPALI       ,HI,US
PHLI,91165,21.97,-159.33,32.0,LIHUE/KAUAI IS  ,HI,US,METAR rawinsonde TAF
PHLU,,21.22,-156.97,7.0,KALAUPAPA       ,HI,US,METAR
PHMK,91186,21.15,-157.1,135.0,MOLOKAI         ,HI,US,METAR TAF
PHMO,,21.13,-157.18,415.0,MOLOKAI/KUKUI   ,HI,US,METAR NEXRAD
PHMU,,20.0,-155.67,809.0,KAMUELA/WAIMEA  ,HI,US
PHNC,,21.35,-157.93,1.0,PEARL HARBOR    ,HI,US
PHNG,91176,21.43,-157.77,1.0,KANEOHE MCAS    ,HI,US,METAR TAF
PHNL,91182,21.33,-157.93,2.0,HONOLULU        ,HI,US,METAR TAF
PHNY,,20.77,-156.95,395.0,LANAI CITY AIRPO,HI,US,METAR TAF
PHOG,91190,20.9,-156.43,14.0,KAHULUI         ,HI,US,METAR TAF
PHSF,,19.77,-155.55,1863.0,BRADSHAW AAF/HAW,HI,US,METAR TAF
PHTO,91285,19.72,-155.05,9.0,HILO            ,HI,US,METAR rawinsonde TAF
PHUP,,20.27,-155.87,30.0,UPOLU           ,HI,US
PHWA,,19.1,-155.57,421.0,NAALEHU/S HAWAII,HI,US,NEXRAD
PHWR,,21.32,-157.93,4.0,HICKAM AWC      ,HI,US
PJON,91275,16.73,-169.52,5.0,JOHNSTON ISLAND ,UM,US,METAR TAF
PKMA,91250,11.33,162.33,5.0,ENIWETOK AUX AF ,UM,US,METAR
PKMJ,91376,7.07,171.27,2.0,MAJURO WSO AIRPO,MH,MH,METAR rawinsonde TAF
PKMR,91446,7.08,171.38,7.0,MAJURO ATOLL/NWS,MH,MH,METAR WFO_office
PKWA,91366,8.72,167.72,6.0,KWAJALEIN/BUCHOL,MH,MH,METAR TAF
PLCH,91490,1.98,-157.35,5.0,CHRISTMAS/CASSID,UM,KI,METAR TAF
PLFA,91487,3.85,-159.37,5.0,FANNING ISLAND  ,UM,US,METAR
PLPA,91385,5.87,-162.05,2.0,PALMYRA/COOPER(A,UM,US,METAR
PLUR,91901,-0.37,-160.02,2.0,JARVIS ISLAND (A,UM,US,METAR
PMDY,91066,28.22,-177.37,6.0,MIDWAY ISLAND NA,HI,UM,METAR TAF
POLI,70063,70.5,-149.88,5.0,OLIKTOK POINT   ,AK,US,METAR
PPIT,,60.9,-162.43,4.0,NUNAPITCHUK     ,AK,US,METAR
PPIZ,,69.73,-163.0,5.0,POINT LAY       ,AK,US,METAR
PPNU,,70.2,-150.98,11.0,NUIQSUT         ,AK,US,METAR
PTKK,91334,7.47,151.85,3.0,WENO IS/CHUUK   ,,FM,METAR rawinsonde TAF
PTKR,,7.33,134.48,6.0,KOROR PALAU/NWS ,,PW,METAR WFO_office
PTPN,91348,6.98,158.22,3.0,POHNPEI AIRPORT ,,FM,METAR TAF
PTRO,91408,7.37,134.55,30.0,BABELTHUAP/KOROR,,PW,METAR rawinsonde TAF
PTSA,91356,5.35,162.95,3.0,KOSRAE ISLAND   ,,FM,METAR TAF
PTTK,91355,5.33,162.93,2.0,KOSRAE CAROLINES,,FM,METAR
PTTP,,6.97,158.22,36.0,POHNPEI NWS     ,,FM,METAR rawinsonde
PTYA,91413,9.48,138.08,4.0,YAP ISLAND      ,,FM,METAR rawinsonde TAF
PWAK,91245,19.28,166.62,7.0,WAKE ISLAND AIRF,UM,UM,METAR TAF
PZ74,,60.15,-164.28,1.0,ALASKAN ARTCC   ,AK,US
PZ76,,65.25,-134.65,647.0,ALASKAN ARTCC   ,AK,US
PZAN,,61.17,-149.98,22.0,ANCHORAGE/ARTCC ,AK,US
PZHN,,21.32,-157.92,4.0,HONOLULU/ARTCC  ,HI,US
RCAY,46745,22.77,120.27,10.0,KANGSHAN TW-AFB ,,TW,METAR
RCBS,46736,24.42,118.37,9.0,CHINMEM/SHATOU  ,,TW,METAR TAF
RCDC,46750,22.67,120.47,24.0,PINGTUNG SOUTH  ,,TW,METAR
RCFG,46689,26.17,119.92,91.0,MAZU            ,,TW,METAR TAF
RCFN,,22.77,121.1,42.0,FENG NIN TW-AFB ,,TW,METAR TAF
RCFS,46772,22.42,120.53,20.0,CHIA TUNG       ,,TW,METAR
RCGI,,22.67,121.45,8.0,GREEN ISLAND    ,,TW,METAR TAF
RCGM,46697,25.07,121.22,45.0,TAOYUAN AB      ,,TW,METAR
RCKH,46740,22.57,120.33,6.0,KAOHSIUNG INTL  ,,TW,METAR TAF
RCKU,46746,23.47,120.37,25.0,CHIAYI TW-AFB   ,,TW,METAR
RCKW,46752,21.92,120.82,13.0,HENGCHUN        ,,TW,METAR TAF
RCLG,46751,24.17,120.65,112.0,TAICHUNG TW-AFB ,,TW,METAR
RCLM,46810,20.67,116.72,6.0,DONGSHA/PRATAS  ,,TW,METAR
RCLY,46762,22.02,121.53,325.0,LAN YU          ,,TW,METAR TAF
RCMJ,46747,22.47,120.42,8.0,DONGGANG        ,,TW,METAR
RCMQ,46770,24.27,120.62,202.0,WUCHIA OBSERVATO,,TW,METAR TAF
RCMS,46764,24.75,121.77,9.0,ILAN            ,,TW,METAR
RCMT,,26.22,119.98,1.0,BAI GAN         ,,TW,METAR TAF
RCNN,46743,22.93,120.2,15.0,TAINAN TW-AFB   ,,TW,METAR TAF
RCNO,46730,23.27,119.67,45.0,DONGSHI         ,,TW,METAR
RCPO,46756,24.82,120.92,8.0,HSINCHU TW-AFB  ,,TW,METAR
RCQC,46734,23.57,119.62,31.0,MAKUNG AB       ,,TW,METAR
RCQS,46760,22.8,121.17,37.0,CHIHHANG TW-AFB ,,TW,METAR
RCSQ,46758,22.68,120.47,29.0,PINGTUNG N AFB  ,,TW,METAR
RCSS,46696,25.07,121.55,8.0,SUNGSHAN/TAIPEI ,,TW,METAR TAF
RCTP,46686,25.07,121.22,33.0,TAIPEI TAOYUAN  ,,TW,METAR TAF
RCUK,46738,24.92,121.28,141.0,PA KUEI/BAKUAI  ,,TW,METAR
RCYU,46763,24.02,121.62,16.0,HUALIEN AB      ,,TW,METAR
RJAA,47686,35.77,140.38,36.0,NARITA INTL     ,,JP,METAR TAF
RJAF,47709,36.17,137.92,652.0,MATSUMOTO AIRPOR,,JP,METAR
RJAH,47715,36.17,140.42,31.0,HYAKURI (JASDF) ,,JP,METAR TAF
RJAI,,35.72,139.92,31.0,ICHIKAWA        ,,JP,METAR
RJAK,47716,36.03,140.18,20.0,KASUMIGAURA (JAS,,JP,METAR
RJAM,47991,24.3,153.97,9.0,MINAMITORISHIMA ,,JP,METAR
RJAO,47971,27.07,142.17,8.0,CHICHIJIMA ISLAN,,JP,METAR
RJAT,47721,35.32,138.87,675.0,FUJI (JASDF)    ,,JP,METAR
RJAW,47981,24.78,141.32,116.0,IWOJIMA (JMSDF) ,,JP,METAR
RJBB,47774,34.43,135.25,8.0,KANSAI INTL     ,,JP,METAR TAF
RJBD,47782,33.67,135.37,91.0,NANKISHIRAHAMA A,,JP,METAR
RJBE,47770,34.63,135.23,5.0,KOBE            ,,JP,METAR
RJBH,,34.37,132.42,5.0,HIROSHIMANISHI  ,,JP,METAR
RJBT,,35.5,134.8,172.0,TAJIMA          ,,JP,METAR
RJCA,47477,43.78,142.37,113.0,ASAHIKAWA (JASDF,,JP,METAR
RJCB,47490,42.72,143.22,149.0,OBIHIRO AIRPORT ,,JP,METAR TAF
RJCC,47425,42.77,141.68,19.0,CHITOSE (JASDF/C,,JP,METAR TAF
RJCH,47488,41.77,140.82,36.0,HAKODATE AIRPORT,,JP,METAR TAF
RJCJ,47434,42.8,141.67,27.0,CHITOSE (JASDF) ,,JP,METAR
RJCK,47489,43.03,144.18,94.0,KUSHIRO AIRPORT ,,JP,METAR TAF
RJCM,47481,43.88,144.17,30.0,MEMAMBETSU AIRPO,,JP,METAR TAF
RJCN,47483,43.57,144.97,62.0,NAKASHIBETSU ARP,,JP,METAR
RJCO,47479,43.12,141.37,7.0,SAPPORO (JGSDF/C,,JP,METAR
RJCR,,45.45,141.02,27.0,REBUN ISLAND    ,,JP,METAR
RJCS,47418,42.97,144.4,37.0,KUSHIRO/KENEBETS,,JP,METAR
RJCT,,42.88,143.17,79.0,TOKACHI (JGSDF) ,,JP,METAR
RJCW,47441,45.4,141.8,11.0,WAKKANAI AIRPORT,,JP,METAR
RJCY,47423,42.32,140.97,49.0,MURORAN/YAKUMO  ,,JP,METAR
RJDB,47858,33.75,129.78,13.0,IKI AIRPORT (ISL,,JP,METAR
RJDC,47786,33.92,131.27,5.0,YAMAGUCHI/UBE AR,,JP,METAR
RJDK,,33.02,129.18,82.0,KAMIGOTO        ,,JP,METAR
RJDM,47860,33.32,130.42,19.0,METABARU (JASDF),,JP,METAR
RJDO,,33.22,129.05,20.0,OJIKA ISLAND    ,,JP,METAR
RJDT,47799,34.28,129.32,61.0,TSUSHIMA AIRPORT,,JP,METAR
RJEB,47474,44.3,143.4,24.0,MONBETSU AIRPORT,,JP,METAR
RJEC,47476,43.67,142.43,209.0,ASAHIKAWA AIRPOR,,JP,METAR TAF
RJEO,,42.07,139.43,36.0,OKUSHIRI ISLAND ,,JP,METAR
RJER,,45.25,141.17,30.0,RISHIRI ISLAND  ,,JP,METAR
RJFA,47803,33.87,130.65,33.0,ASHIYA (JASDF)  ,,JP,METAR
RJFC,47836,30.37,130.67,38.0,YAKUSHIMA ISLAND,,JP,METAR
RJFE,47844,32.67,128.82,80.0,FUKUE AIRPORT   ,,JP,METAR
RJFF,47808,33.58,130.45,7.0,FUKUOKA/ITAZUKE ,,JP,METAR TAF
RJFG,47870,30.62,130.98,234.0,TANEGASHIMA AIRP,,JP,METAR
RJFK,47851,31.8,130.72,271.0,KAGOSHIMA AIRPOR,,JP,METAR TAF
RJFM,47857,31.87,131.43,10.0,MIYAZAKI AIRPORT,,JP,METAR TAF
RJFN,47854,32.07,131.43,82.0,NYUTABARU (JASDF,,JP,METAR
RJFO,47852,33.47,131.73,3.0,OITA AIRPORT    ,,JP,METAR TAF
RJFR,47853,33.83,131.03,9.0,KITAKYUSHU/KOKUR,,JP,METAR TAF
RJFS,47810,33.15,130.3,2.0,SAGA AIRPORT    ,,JP,METAR TAF
RJFT,47856,32.83,130.85,188.0,KUMAMOTO(CIV/JAS,,JP,METAR TAF
RJFU,47855,32.92,129.92,2.0,NAGASAKI(CIV/JMS,,JP,METAR TAF
RJFW,,33.17,129.72,3.0,SASABO NAS      ,,JP,METAR
RJFY,47850,31.37,130.83,59.0,KANOYA (JMSDF)  ,,JP,METAR
RJFZ,47840,33.67,131.05,20.0,TSUIKI (JASDF)  ,,JP,METAR
RJGG,,34.87,136.8,5.0,NAGOYA/CHUBU    ,,JP,METAR TAF
RJKA,47872,28.42,129.72,7.0,AMAMI AIRPORT   ,,JP,METAR
RJKB,47942,27.42,128.68,29.0,OKINOERABU/OKIER,,JP,METAR
RJKI,,28.32,129.92,6.0,KIKAI ISLAND    ,,JP,METAR
RJKN,47910,27.82,128.87,4.0,TOKUNOSHIMA ISLA,,JP,METAR
RJNA,,35.25,136.92,17.0,NAGOYA (CIV/JASD,,JP,METAR TAF
RJNF,47706,36.13,136.22,5.0,FUKUI AIRPORT   ,,JP,METAR
RJNG,47634,35.38,136.87,39.0,GIFU (JASDF)    ,,JP,METAR
RJNH,47681,34.75,137.68,48.0,HAMAMATSU (JASDF,,JP,METAR
RJNK,47704,36.38,136.42,7.0,KOMATSU (CIV/JAS,,JP,METAR TAF
RJNN,47635,35.25,136.92,17.0,NAGOYA (CIV/JASD,,JP,METAR TAF
RJNO,47739,36.17,133.32,95.0,OKI AIRPORT     ,,JP,METAR
RJNS,,34.8,138.18,133.0,SHIZOUKA        ,,JP,METAR TAF
RJNT,47707,36.63,137.18,30.0,TOYAMA AIRPORT  ,,JP,METAR TAF
RJNW,,37.3,136.97,222.0,NOTO            ,,JP,METAR
RJNY,47658,34.82,138.3,7.0,SHIZUHAMA (JASDF,,JP,METAR
RJOA,47789,34.43,132.92,318.0,NEW HIROSHIMA   ,,JP,METAR TAF
RJOB,47793,34.75,133.85,242.0,OKAYAMA AIRPORT ,,JP,METAR TAF
RJOC,47790,35.42,132.88,2.0,IZUMO AIRPORT   ,,JP,METAR TAF
RJOE,47730,34.52,136.67,6.0,AKENO (JASDF)   ,,JP,METAR
RJOF,47788,34.03,131.55,2.0,HOFU (JASDF)    ,,JP,METAR
RJOH,47743,35.48,133.25,6.0,MIHO (CIV/JASDF),,JP,METAR TAF
RJOI,47764,34.13,132.23,2.0,IWAKUNI MCAS    ,,JP,METAR TAF
RJOK,47883,33.53,133.67,7.0,KOCHI AIRPORT   ,,JP,METAR TAF
RJOM,47882,33.82,132.68,3.0,MATSUYAMA AIRPOR,,JP,METAR TAF
RJOO,47771,34.78,135.43,11.0,OSAKA INTL/ITAMI,,JP,METAR TAF
RJOP,47884,34.0,134.62,3.0,KOMATSUJIMA (JAS,,JP,METAR
RJOR,47794,35.52,134.17,11.0,TOTTORI AIRPORT ,,JP,METAR
RJOS,47881,34.12,134.62,3.0,TOKUSHIMA(JMSDF/,,JP,METAR
RJOT,47880,34.22,134.02,181.0,TAKAMATSU AIRPOR,,JP,METAR TAF
RJOW,47783,34.67,131.8,54.0,IWAMI           ,,JP,METAR
RJOY,47779,34.6,135.6,10.0,YAO (CIV/JGSDF) ,,JP,METAR
RJOZ,47787,34.03,131.05,4.0,OZUKI (JMSDF)   ,,JP,METAR
RJSA,47542,40.72,140.68,196.0,AOMORI AIRPORT  ,,JP,METAR TAF
RJSC,47553,38.42,140.37,104.0,YAMAGATA(CIV/JGS,,JP,METAR
RJSD,47700,38.05,138.42,19.0,SADO AIRPORT    ,,JP,METAR
RJSF,47557,37.22,140.42,373.0,FUKUSHIMA ARPT  ,,JP,METAR TAF
RJSH,47515,40.55,141.47,46.0,HACHINOHE (JMSDF,,JP,METAR
RJSI,47549,39.42,141.13,89.0,HANAMAKI AIRPORT,,JP,METAR TAF
RJSK,47545,39.62,140.22,95.0,AKITA AIRPORT   ,,JP,METAR TAF
RJSM,47580,40.7,141.37,31.0,MISAWA(JASDF/AF/,,JP,METAR TAF
RJSN,47573,37.95,139.12,4.0,NIIGATA (CIV/JAS,,JP,METAR TAF
RJSO,47516,41.22,141.12,7.0,OMINATO (JASDF) ,,JP,METAR
RJSR,47583,40.18,140.37,83.0,ODATE-NOSHIRO   ,,JP,METAR
RJSS,47569,38.13,140.92,5.0,SENDAI AIRPORT  ,,JP,METAR TAF
RJST,47591,38.38,141.22,5.0,MATSUSHIMA (JASD,,JP,METAR
RJSU,47567,38.23,140.92,9.0,KASUMINOME (JASD,,JP,METAR
RJSY,,38.82,139.78,17.0,SHONAI          ,,JP,METAR
RJTA,47679,35.45,139.43,65.0,ATSUGI NAS (JMSD,,JP,METAR
RJTC,47660,35.7,139.4,86.0,TACHIKAWA (JASDF,,JP,METAR
RJTD,47662,35.68,139.77,36.0,TOKYO, JMA      ,,JP,METAR
RJTE,47688,34.98,139.82,3.0,TATEYAMA (JMSDF),,JP,METAR
RJTF,47683,35.67,139.52,37.0,CHOFU AIRPORT   ,,JP,METAR
RJTH,47738,33.12,139.78,93.0,HACHIJOJIMA ISLA,,JP,METAR
RJTI,47687,35.63,139.83,4.0,TOKYO HELIPORT  ,,JP,METAR
RJTJ,47643,35.82,139.42,93.0,IRUMA (JASDF)   ,,JP,METAR
RJTK,47661,35.38,139.92,2.0,KISARAZU (JGSDF),,JP,METAR
RJTL,47727,35.78,140.02,29.0,SHIMOFUSA (JMSDF,,JP,METAR
RJTO,47735,34.77,139.37,37.0,OSHIMA AIRPORT  ,,JP,METAR
RJTQ,47737,34.07,139.57,23.0,MIYAKEJIMA AIRPO,,JP,METAR
RJTR,47680,35.52,139.4,106.0,KASTNER AAF/ZAMA,,JP,METAR
RJTT,47671,35.55,139.77,5.0,TOKYO INTL AIRPO,,JP,METAR TAF
RJTU,47692,36.52,139.87,99.0,UTSUNOMIYA (JGSD,,JP,METAR
RJTX,47696,35.3,139.68,5.0,YOKOSUKA FWF    ,,JP,METAR TAF
RJTY,47642,35.75,139.33,136.0,YOKOTA (JASDF/US,,JP,METAR TAF
RKJB,47163,34.98,126.38,16.0,MUAN INTL       ,,KR,METAR TAF
RKJJ,47158,35.12,126.82,13.0,GWANGJU (KOR-AFB,,KR,METAR TAF
RKJK,47141,35.9,126.62,8.0,KUNSAN (US/KOR-A,,KR,METAR TAF
RKJM,,34.77,126.37,3.0,MOKPO (KOR-NAVY),,KR,METAR
RKJU,,35.87,127.12,29.0,JHUNJU (KOR-ARMY,,KR,METAR
RKJY,47167,34.82,127.62,18.0,YOSU AIRPORT    ,,KR,METAR TAF
RKNC,47104,37.87,127.72,75.0,CAMP PAGE/CHUNCH,,KR,METAR TAF
RKND,47091,38.12,128.58,14.0,SOKCHO AIRPORT  ,,KR,METAR
RKNF,,37.75,128.67,1230.0,WHANG RYEONG    ,,KR,METAR
RKNH,47118,37.42,127.95,101.0,HOENGSONG (KOR-A,,KR,METAR
RKNN,47107,37.75,128.93,11.0,KANGNUNG (KOR-AF,,KR,METAR TAF
RKNO,,38.47,128.47,104.0,KEO JIN         ,,KR,METAR
RKNR,,37.1,128.9,792.0,KOTAR RANGE     ,,KR,METAR
RKNW,47114,37.33,127.95,152.0,WONJU           ,,KR,METAR
RKNY,47092,38.07,128.67,76.0,YANGYANG INTL   ,,KR,METAR TAF
RKPC,47182,33.5,126.48,23.0,JEJU INTL AIRPO ,,KR,METAR TAF
RKPE,,35.13,128.68,2.0,JINHAE (KOR-ARM ,,KR,METAR
RKPK,47153,35.17,128.93,3.0,BUSAN/KIMHAE INT,,KR,METAR TAF
RKPM,47187,33.28,126.15,53.0,MOSULPO (KOR-AFB,,KR,METAR
RKPS,47161,35.08,128.07,2.0,SACHON (KOR-AFB),,KR,METAR TAF
RKPU,47152,35.55,129.32,32.0,ULSAN           ,,KR,METAR TAF
RKSB,47106,37.5,129.13,37.0,DONGHAE RADAR   ,,KR,METAR
RKSC,,37.35,126.92,406.0,SV RI SAN       ,,KR,METAR
RKSD,,37.35,127.27,144.0,MAESANRI        ,,KR,METAR
RKSE,,37.95,124.72,2.0,PAENGNYONGDO BEA,,KR,METAR
RKSF,47117,37.5,126.92,49.0,SEOUL (KOR-AF HQ,,KR,METAR
RKSG,47127,36.97,127.02,12.0,PYONGTAEK (A-511,,KR,METAR TAF
RKSH,,37.52,126.97,73.0,COMMAND POST TAN,,KR,METAR
RKSI,,37.47,126.45,7.0,CHAJANG NI      ,,KR,METAR TAF
RKSJ,,38.2,127.53,1182.0,TAESONG-SAN     ,,KR,METAR
RKSL,47108,37.57,126.97,87.0,SEOUL CITY      ,,KR,METAR
RKSM,47111,37.43,127.12,18.0,SEOUL EAST(KOR-A,,KR,METAR TAF
RKSN,69010,37.02,126.75,15.0,KOON-NI RANGE   ,,KR,METAR
RKSO,47122,37.08,127.02,10.0,OSAN (US/KOR-AFB,,KR,METAR TAF
RKSP,47103,37.97,124.67,171.0,PAENGNYONGDO (KA,,KR,METAR
RKSQ,,37.67,125.7,6.0,YEONPYEUNGDO    ,,KR,METAR
RKSS,47110,37.55,126.78,18.0,SEOUL/KIMPO INTL,,KR,METAR TAF
RKST,,37.92,127.05,60.0,CAMP CASEY/TONGD,,KR,METAR
RKSU,,37.42,127.62,43.0,YEOJU RANGE     ,,KR,METAR
RKSV,,37.77,126.37,250.0,PYORIPSAN       ,,KR,METAR
RKSW,47120,37.25,127.0,24.0,SUWON (US/KOR-AF,,KR,METAR TAF
RKSX,,37.72,127.08,71.0,CAMP STANLEY/H-2,,KR,METAR TAF
RKSY,,37.52,126.97,16.0,YONGSAN/H-208 HP,,KR,METAR
RKTA,47136,36.53,128.72,142.0,ANDONG          ,,KR,METAR
RKTB,,37.05,126.0,12.0,PAEKADO         ,,KR,METAR
RKTD,47132,36.53,126.33,63.0,TAEJON (KOR-AFB),,KR,METAR
RKTE,47124,36.57,127.5,78.0,SONGMU (KOR-AFB),,KR,METAR TAF
RKTF,47133,36.37,127.37,65.0,TAEJON          ,,KR,METAR
RKTG,,35.85,128.6,75.0,CAMP WALKER (H-8,,KR,METAR
RKTH,47139,35.98,129.42,20.0,POHANG (KOR-NAVY,,KR,METAR TAF
RKTI,47125,37.02,127.88,55.0,JUNG WON (ROK-AB,,KR,METAR
RKTL,,36.98,129.4,49.0,ULJIN           ,,KR,METAR
RKTM,47126,36.93,126.45,302.0,MANGILSAN (KOR-A,,KR,METAR
RKTN,47142,35.88,128.65,25.0,TAEGU (US/KOR-AF,,KR,METAR TAF
RKTP,,36.7,126.48,13.0,HAE MI          ,,KR,METAR TAF
RKTS,,36.42,128.17,150.0,SANGJU          ,,KR,METAR
RKTT,47143,35.87,128.62,61.0,TAEGU ACC (KOR-A,,KR,METAR
RKTU,47128,36.7,127.5,46.0,JONGJU (KAFB-AR ,,KR,METAR TAF
RKTV,,37.07,127.87,59.0,JUNGJU          ,,KR,METAR
RKTW,,36.2,126.53,13.0,WOONG CHEON     ,,KR,METAR
RKTY,47134,36.62,128.33,108.0,YECHON (KOR-AFB),,KR,METAR TAF
RKTZ,,36.38,126.33,31.0,HAEMI           ,,KR,METAR
RKXX,,38.07,127.33,0.0,NIGHTMARE RANGE ,,KR,METAR
ROAH,47930,26.18,127.65,6.0,NAHA (CIV/JASDF),,JP,METAR TAF
RODE,47938,26.72,127.77,69.0,IEJIMA AUX (USAF,,JP,METAR
RODN,47931,26.35,127.77,38.0,KADENA (USAFB-NA,,JP,METAR TAF
ROHF,47935,26.3,127.77,6.0,HAMBY AAF/BUCKNE,,JP,METAR
ROIG,47918,24.38,124.23,37.0,ISHIGAKIJIMA ISL,,JP,METAR TAF
ROKJ,47929,26.32,126.78,5.0,KUMEJIMA ISLAND ,,JP,METAR
ROMD,47945,25.83,131.25,45.0,MINAMIDAITOJIMA ,,JP,METAR
ROMY,47927,24.78,125.27,38.0,MIYAKOJIMA ISLAN,,JP,METAR
RORA,,26.6,127.22,29.0,AGUNI ISLAND    ,,JP,METAR
RORH,,24.07,123.78,13.0,HATERUMA        ,,JP,METAR
RORK,,25.93,131.32,11.0,KITADAITO ISLAND,,JP,METAR
RORS,,24.82,125.15,13.0,SHIMOJI-SHIMA IS,,JP,METAR
RORT,,24.63,124.7,9.0,TARAMA ISLAND   ,,JP,METAR
RORY,,27.05,128.4,13.0,YORON ISLAND    ,,JP,METAR
ROTM,47933,26.27,127.75,80.0,FUTENMA(US-MCAS),,JP,METAR TAF
ROYN,47911,24.47,122.97,21.0,YONAGUNI AIRPORT,,JP,METAR
RPLB,98426,14.8,120.27,19.0,OLONGAPO/SUBIC  ,,PH,METAR TAF
RPLC,,15.18,120.55,138.0,ANGELES/PAMPANGA,,PH,METAR TAF
RPLI,98223,18.17,120.52,5.0,LAOAG INTL(PH-AR,,PH,METAR TAF
RPLL,98429,14.52,121.0,15.0,NINOY AQUINO INT,,PH,METAR TAF
RPMD,98753,7.12,125.65,19.0,DAVAO/FRANCISCO ,,PH,METAR TAF
RPML,98748,8.4,124.62,183.0,CAGAYAN DE ORO  ,,PH,METAR TAF
RPMP,98444,13.15,123.73,17.0,LEGAZPI/LUZON IS,,PH,METAR
RPMR,98851,6.05,125.1,47.0,GEN SANTOS      ,,PH,METAR TAF
RPMS,98428,14.5,120.92,4.0,SANGLEY POINT AB,,PH,METAR
RPMZ,98836,6.92,122.07,8.0,ZAMBOANGA (CIV/A,,PH,METAR TAF
RPUA,98232,18.37,121.62,3.0,APARRI/LUZON ISL,,PH,METAR
RPUB,98328,16.38,120.62,1296.0,BAGUIO/LUZON ISL,,PH,METAR
RPUD,98440,14.12,122.97,4.0,DAET/LUZON ISLAN,,PH,METAR
RPUH,98531,12.33,121.02,3.0,SAN JOSE/MINDORO,,PH,METAR
RPUI,98324,15.32,119.97,5.0,IBA/LUZON ISLAND,,PH,METAR
RPUK,98431,13.42,121.17,41.0,CALAPAN/MINDORO ,,PH,METAR
RPUM,,13.22,120.58,4.0,MAMBURAO/MINDORO,,PH,METAR
RPUN,,13.57,123.27,43.0,NAGA/LUZON ISLAN,,PH,METAR
RPUO,98135,20.43,121.97,11.0,BASCO/BATAN ISLA,,PH,METAR
RPUQ,98222,17.9,120.47,33.0,VIGAN/LUZON ISLA,,PH,METAR
RPUR,98333,15.77,121.57,6.0,BALER/LUZON ISLA,,PH,METAR
RPUT,98233,17.62,121.72,62.0,TUGUEGARAO/LUZON,,PH,METAR
RPUV,98446,13.57,124.22,40.0,VIRAC/CATANDUANE,,PH,METAR
RPUW,,13.37,121.82,5.0,MARINDUQUE ISLAN,,PH,METAR
RPVA,98550,11.22,125.02,3.0,TACLOBAN/LEYTE I,,PH,METAR
RPVB,,10.65,122.92,9.0,BACOLOD/NEGROS I,,PH,METAR
RPVC,,12.07,124.53,3.0,CALBAYOG/SAMAR I,,PH,METAR
RPVD,98642,9.33,123.3,11.0,DUMAGUETE/NEGROS,,PH,METAR TAF
RPVF,98546,12.47,124.62,5.0,CATARMAN/SAMAR I,,PH,METAR
RPVG,98558,11.02,125.72,60.0,GUIUAN/SAMAR ISL,,PH,METAR
RPVI,98637,10.68,122.57,8.0,ILOILO/PANAY ISL,,PH,METAR TAF
RPVJ,,12.37,123.63,6.0,MASBATE         ,,PH,METAR
RPVK,98537,11.67,122.37,6.0,KALIBO/PANAY ISL,,PH,METAR TAF
RPVM,98543,10.32,123.98,9.0,MACTAN-CEBU     ,,PH,METAR TAF
RPVP,98618,9.75,118.75,15.0,PUERTO PRINCESA ,,PH,METAR TAF
RPVR,98538,11.57,122.75,4.0,ROXAS/PANAY ISLA,,PH,METAR
RPVT,98644,9.58,123.83,8.0,TAGBILARAN/BOHOL,,PH,METAR
RPWB,,6.12,125.17,15.0,GENERAL SANTOS  ,,PH,METAR
RPWC,98746,7.17,124.22,58.0,COTABATO/MINDANA,,PH,METAR
RPWE,98752,8.95,125.48,46.0,BUTUAN/MINDANAO ,,PH,METAR
RPWG,98741,8.58,123.33,5.0,DIPOLOG/MINDANAO,,PH,METAR
RPWI,,8.17,123.83,5.0,OZAMIS/MINDANAO ,,PH,METAR
RPWJ,98830,6.03,121.0,13.0,JOLO ISLAND     ,,PH,METAR
RPWL,,8.47,124.62,6.0,CAGAYAN DE ORO  ,,PH,METAR
RPWM,,7.62,124.07,8.0,MALABANG/MINDANA,,PH,METAR
RPWP,,7.82,123.47,2.0,PAGADIAN/MINDANA,,PH,METAR
RPWS,98653,9.8,125.5,55.0,SURIGAO/MINDANAO,,PH,METAR
RPWW,,9.07,126.17,5.0,TANDAG/MINDANAO ,,PH,METAR
RPWX,,8.15,124.22,396.0,ILIGAN/MINDANAO ,,PH,METAR
RPWY,98751,8.15,125.07,627.0,MALAYBALAY/MINDA,,PH,METAR
RPWZ,,8.22,126.32,3.0,BISLIG/MINDANAO ,,PH,METAR
RPXC,98322,15.32,120.37,161.0,CROW VALLEY GNRY,,PH,METAR
RPXT,98435,14.23,121.93,5.0,ALABAT ISLAND   ,,PH,METAR
SAAC,87395,-31.3,-58.02,38.0,CONCORDIA/PIERRE,,AR,METAR TAF
SAAG,87497,-33.0,-58.62,21.0,GUALEGUAYCHU ARP,,AR,METAR
SAAJ,87548,-34.53,-60.95,81.0,JUNIN AIRPORT   ,,AR,METAR
SAAP,87374,-31.77,-60.47,78.0,PARANA/GEN URQUI,,AR,METAR TAF
SAAR,87480,-32.92,-60.77,24.0,ROSARIO AIRPORT ,,AR,METAR TAF
SAAU,87385,-31.85,-59.07,43.0,VILLAGUAY       ,,AR,METAR
SAAV,87371,-31.68,-60.82,18.0,SAUCE VIEJO AIRP,,AR,METAR TAF
SABA,87585,-34.57,-58.47,25.0,BUENOS AIRES (OB,,AR,METAR
SABE,87582,-34.57,-58.42,3.0,AEROPARQUE(CIV/M,,AR,METAR TAF
SACC,,-31.0,-64.53,1138.0,LA CUMBRE       ,,AR,METAR
SACI,87349,-31.67,-63.87,338.0,PILAR OBSERVATOR,,AR,METAR
SACO,87344,-31.32,-64.22,474.0,CORDOBA AIRPORT ,,AR,METAR TAF
SACP,87322,-31.32,-66.58,658.0,CHEPES          ,,AR,METAR
SACQ,87071,-25.75,-62.87,220.0,MONTE QUEMADO   ,,AR,METAR
SACT,,-30.37,-66.28,457.0,GOBERNADOR GORDI,,AR,METAR
SACV,87244,-29.88,-63.67,341.0,VILLA MARIA DEL ,,AR,METAR
SADD,87568,-34.48,-58.62,4.0,DON TORCUATO ARP,,AR,METAR TAF
SADF,87553,-34.45,-58.58,4.0,SAN FERNANDO    ,,AR,METAR TAF
SADJ,87572,-34.53,-58.77,16.0,MARIANO MORENO  ,,AR,METAR
SADL,87593,-34.97,-57.88,19.0,LA PLATA AIRPORT,,AR,METAR
SADM,,-34.67,-58.63,18.0,BUENOS AIRES/MOR,,AR,METAR
SADP,87571,-34.6,-58.6,12.0,EL PALOMAR AIRPO,,AR,METAR TAF
SAEZ,87576,-34.82,-58.53,16.0,BUENOS AIRES/EZE,,AR,METAR TAF
SAME,87418,-32.82,-68.78,709.0,MENDOZA/EL PLUME,,AR,METAR TAF
SAMI,87416,-33.07,-68.42,653.0,SAN MARTIN      ,,AR,METAR
SAMJ,87305,-30.25,-68.75,1165.0,JACHAL          ,,AR,METAR
SAMM,87506,-35.5,-69.57,1425.0,MALARGUE AIRPORT,,AR,METAR
SAMR,87509,-34.57,-68.4,748.0,SAN RAFAEL AIRPO,,AR,METAR
SAMS,87412,-33.77,-69.02,940.0,SAN CARLOS      ,,AR,METAR
SAMU,87405,-32.6,-69.32,1844.0,USPALLATA       ,,AR,METAR
SANC,87222,-28.6,-65.77,454.0,CATAMARCA AIRPOR,,AR,METAR TAF
SANE,87129,-27.77,-64.28,199.0,SANTIAGO DEL EST,,AR,METAR TAF
SANI,87211,-28.07,-67.57,1201.0,TINOGASTA       ,,AR,METAR
SANL,87217,-29.37,-66.82,429.0,LA RIOJA/CAPT VI,,AR,METAR TAF
SANO,87214,-29.22,-67.42,950.0,CHILECITO       ,,AR,METAR
SANR,,-27.5,-64.93,286.0,TERMAS DE RIO HO,,AR,METAR TAF
SANT,87121,-26.85,-65.1,446.0,TUCUMAN/TENIENTE,,AR,METAR TAF
SANU,87311,-31.57,-68.42,596.0,SAN JUAN AIRPORT,,AR,METAR TAF
SANW,87257,-29.87,-61.95,88.0,CERES           ,,AR,METAR
SAOC,87453,-33.08,-64.27,422.0,RIO CUARTO AIRPO,,AR,METAR TAF
SAOD,87328,-31.93,-65.12,569.0,VILLA DOLORES AR,,AR,METAR
SAOL,87534,-34.12,-63.37,137.0,LABOULAYE       ,,AR,METAR
SAOM,87467,-32.7,-62.13,114.0,MARCOS JUAREZ AR,,AR,METAR
SAOR,87448,-33.72,-65.37,486.0,VILLA REYNOLDS A,,AR,METAR TAF
SAOU,87436,-33.27,-66.35,704.0,SAN LUIS AIRPORT,,AR,METAR
SARC,87166,-27.43,-58.77,60.0,CORRIENTES AIRPO,,AR,METAR TAF
SARE,87155,-27.43,-59.05,52.0,RESISTENCIA AIRP,,AR,METAR TAF
SARF,87162,-26.22,-58.22,65.0,FORMOSA AIRPORT ,,AR,METAR TAF
SARI,87097,-25.73,-54.47,268.0,IGUAZU/CATARATAS,,AR,METAR TAF
SARL,87289,-29.68,-57.15,70.0,PASO DE LOS LIBR,,AR,METAR TAF
SARM,87393,-30.25,-57.63,54.0,MONTE CASEROS AR,,AR,METAR
SARP,87178,-27.38,-55.97,123.0,POSADAS AIRPORT ,,AR,METAR TAF
SARS,87149,-26.82,-60.45,92.0,PRESIDENT R S PE,,AR,METAR
SASA,87047,-24.85,-65.48,1235.0,SALTA AIRPORT   ,,AR,METAR rawinsonde TAF
SASJ,87046,-24.38,-65.1,913.0,JUJUY AIRPORT   ,,AR,METAR TAF
SASO,87016,-23.13,-64.32,357.0,ORAN AIRPORT    ,,AR,METAR
SASQ,87007,-22.1,-65.58,3462.0,LA QUIACA OBSERV,,AR,METAR
SASR,87065,-24.17,-62.88,205.0,RIVADAVIA       ,,AR,METAR
SAST,87022,-22.63,-63.82,450.0,TARTAGAL AIRPORT,,AR,METAR
SATG,,-29.1,-59.22,38.0,GOYA            ,,AR,METAR
SATK,87078,-24.68,-60.57,130.0,LAS LOMITAS     ,,AR,METAR
SATM,,-29.22,-58.07,107.0,MERCEDES        ,,AR,METAR
SATR,,-29.22,-59.68,48.0,RECONQUISTA     ,,AR,METAR
SATU,87286,-29.77,-57.97,73.0,CURUZU CUATIA AR,,AR,METAR
SAVB,87800,-41.97,-71.52,337.0,EL BOLSON AERO  ,,AR,METAR
SAVC,87860,-45.78,-67.47,58.0,COMODORO RIVADAV,,AR,METAR TAF
SAVD,,-42.02,-71.17,720.0,EL MAITEN       ,,AR,METAR
SAVE,87803,-42.9,-71.15,799.0,ESQUEL AIRPORT  ,,AR,METAR TAF
SAVO,87784,-40.75,-65.03,7.0,SAN ANTONIO OEST,,AR,METAR
SAVP,87814,-43.82,-68.87,460.0,PASO DE INDIOS  ,,AR,METAR
SAVR,,-45.02,-70.82,697.0,ALTO RIO SENGUER,,AR,METAR
SAVT,87828,-43.2,-65.27,37.0,TRELEW/ALMIRANTE,,AR,METAR TAF
SAVV,87791,-40.85,-63.02,7.0,VIEDMA/CASTELLO ,,AR,METAR TAF
SAVY,,-42.77,-65.1,136.0,EL TEHUELCHE    ,,AR,METAR
SAWA,87903,-50.32,-72.28,220.0,LAGO ARGENTINO A,,AR,METAR
SAWC,,-50.28,-72.05,204.0,El CALAFATE     ,,AR,METAR
SAWD,87896,-47.72,-65.92,80.0,PUERTO DESEADO A,,AR,METAR
SAWE,87934,-53.78,-67.75,22.0,RIO GRANDE AIRPO,,AR,METAR TAF
SAWG,87925,-51.62,-69.27,15.0,RIO GALLEGOS ARP,,AR,METAR TAF
SAWH,87938,-54.85,-68.3,22.0,USHUAIA (ARG-NAV,,AR,METAR TAF
SAWJ,87909,-49.32,-67.77,62.0,SAN JULIAN AIRPO,,AR,METAR
SAWM,,-45.7,-70.25,545.0,RIO MAYO        ,,AR,METAR
SAWP,87852,-46.52,-71.02,429.0,PERITO MORENO AR,,AR,METAR
SAWR,87880,-48.77,-70.17,356.0,GOBERNADOR GREGO,,AR,METAR
SAWT,,-51.6,-72.22,273.0,EL TURBIO/RIO TU,,AR,METAR TAF
SAWU,87912,-50.02,-68.57,111.0,SANTA CRUZ AIRPO,,AR,METAR
SAZA,87642,-36.75,-59.82,132.0,AZUL AIRPORT    ,,AR,METAR
SAZB,87750,-38.72,-62.17,77.0,BAHIA BLANCA    ,,AR,METAR TAF
SAZD,87648,-36.35,-57.72,9.0,DOLORES AIRPORT ,,AR,METAR
SAZE,87679,-37.6,-62.37,304.0,PIGUE AIRPORT   ,,AR,METAR
SAZG,87532,-35.7,-63.75,145.0,GENERAL PICO ARP,,AR,METAR
SAZH,87688,-38.32,-60.25,115.0,TRES ARROYOS    ,,AR,METAR
SAZI,87639,-36.18,-61.08,94.0,BOLIVAR         ,,AR,METAR
SAZM,87692,-37.92,-57.57,17.0,MAR DEL PLATA AR,,AR,METAR TAF
SAZN,87715,-38.95,-68.15,273.0,NEUQUEN AIRPORT ,,AR,METAR TAF
SAZO,87758,-38.47,-58.82,32.0,NECOCHEA AIRPORT,,AR,METAR
SAZP,87544,-35.87,-61.88,86.0,PEHUAJO/CMDR ZAN,,AR,METAR
SAZQ,87736,-39.02,-64.07,79.0,RIO COLORADO    ,,AR,METAR
SAZR,87623,-36.58,-64.27,190.0,SANTA ROSA AIRPO,,AR,METAR TAF
SAZS,87765,-41.15,-71.17,843.0,SAN CARLOS BARIL,,AR,METAR TAF
SAZT,87645,-37.22,-59.25,175.0,TANDIL AIRPORT  ,,AR,METAR
SAZV,87663,-37.22,-57.02,7.0,VILLA GESELL    ,,AR,METAR
SAZY,87761,-40.07,-71.12,779.0,CHAPELCO        ,,AR,METAR TAF
SBAA,82861,-8.35,-49.3,192.0,CONCEICAO ARAGUA,,BR,METAR
SBAC,,-4.57,-37.8,36.0,REGIONAL DE ARAC,,BR,METAR TAF
SBAF,83748,-22.87,-43.38,34.0,AFONSOS ARPT (MI,,BR,METAR TAF
SBAM,82030,2.07,-50.85,10.0,AMAPA AIRPORT   ,,BR,METAR
SBAN,83419,-16.22,-48.97,1131.0,ANAPOLIS (BRAZ-A,,BR,METAR TAF
SBAQ,,-21.8,-48.13,706.0,ARARAQUARA      ,,BR,METAR
SBAR,83095,-10.98,-37.07,4.0,ARACAJU/SANTA MA,,BR,METAR TAF
SBAS,,-22.63,-50.45,564.0,ASSIS           ,,BR,METAR
SBAT,82965,-9.87,-56.1,287.0,ALTA FLORESTA   ,,BR,METAR TAF
SBAU,83672,-21.13,-50.43,415.0,ARACATUBA       ,,BR,METAR
SBAX,,-19.57,-46.97,989.0,ARAXA           ,,BR,METAR
SBBA,82816,-8.72,-67.32,112.0,BOCADOACRE      ,,BR,METAR
SBBC,82410,-4.37,-70.02,65.0,BENJAMIN CONSTAN,,BR,METAR
SBBE,82193,-1.37,-48.47,16.0,BELEM/VAL DE CAE,,BR,METAR TAF
SBBG,83981,-31.38,-54.12,182.0,BAGE/CMDT KRAEME,,BR,METAR TAF
SBBH,83583,-19.85,-43.95,799.0,BELO HORIZ/PAMPU,,BR,METAR TAF
SBBI,83842,-25.4,-49.23,928.0,CURITIBA/BACACHE,,BR,METAR TAF
SBBQ,83689,-21.25,-43.77,1106.0,BARBACENA (CIV/M,,BR,METAR
SBBR,83378,-15.87,-47.92,1051.0,BRASILIA (CIV/MI,,BR,METAR TAF
SBBT,,-20.58,-48.6,580.0,BARRETOS        ,,BR,METAR
SBBU,83722,-22.33,-49.07,616.0,BAURU           ,,BR,METAR TAF
SBBV,82022,2.85,-60.7,80.0,BOA VISTA (CIV/M,,BR,METAR rawinsonde TAF
SBBW,83359,-15.87,-52.38,354.0,BERRA DO GARCAS ,,BR,METAR TAF
SBBZ,,-22.75,-41.95,3.0,BUZIOS/MODIANO  ,,BR,METAR
SBCA,,-25.0,-53.5,753.0,CASCAVEL        ,,BR,METAR
SBCB,83719,-22.92,-42.08,3.0,CABO FRIO       ,,BR,METAR TAF
SBCC,,-9.33,-54.95,540.0,CACHIMBO        ,,BR,METAR
SBCD,,-26.78,-50.93,1029.0,CACADOR         ,,BR,METAR
SBCF,83587,-19.63,-43.97,825.0,BELO HORIZ/TANCR,,BR,METAR TAF
SBCG,83612,-20.47,-54.67,556.0,CAMPO GRANDE INT,,BR,METAR TAF
SBCH,83883,-27.13,-52.67,639.0,CHAPECO         ,,BR,METAR
SBCI,82764,-7.32,-47.47,174.0,CAROLINA AIRPORT,,BR,METAR TAF
SBCJ,,-6.12,-50.0,634.0,CARAJAS/MARABA  ,,BR,METAR TAF
SBCM,,-28.72,-49.42,27.0,FORQUILHINHA    ,,BR,METAR
SBCO,83967,-29.95,-51.15,8.0,PORTO ALEGRE/CAN,,BR,METAR TAF
SBCP,83698,-21.7,-41.3,15.0,CAMPOS/BARTOLOME,,BR,METAR TAF
SBCR,83552,-19.0,-57.67,142.0,CORUMBA INTL ARP,,BR,METAR TAF
SBCT,83840,-25.52,-49.17,914.0,CURITIBA/AFONSO ,,BR,METAR TAF
SBCV,83497,-17.62,-39.25,4.0,CARAVELAS AIRPOR,,BR,METAR TAF
SBCX,,-29.2,-51.18,752.0,CAXIAS DO SUL   ,,BR,METAR
SBCY,83362,-15.65,-56.12,182.0,CUIABA/MARECHAL ,,BR,METAR TAF
SBCZ,82704,-7.58,-72.77,193.0,CRUZEIRO DO SUL ,,BR,METAR rawinsonde TAF
SBDN,83716,-22.18,-51.43,438.0,PRESIDENTE PRUDE,,BR,METAR TAF
SBEC,,-22.67,-40.6,10.0,PIRANA P15 OIL  ,,BR,METAR
SBEG,82111,-3.03,-60.03,69.0,EDUARDO GOMES IN,,BR,METAR TAF
SBEK,82640,-6.23,-57.78,98.0,JACAREACANGA    ,,BR,METAR
SBER,82610,-6.67,-69.87,104.0,EIRUNEPE        ,,BR,METAR
SBES,83759,-22.82,-42.1,16.0,SAO PEDRO DA ALD,,BR,METAR
SBFI,83827,-25.6,-54.48,233.0,FOZ DO IGUACU AR,,BR,METAR TAF
SBFL,83899,-27.67,-48.53,5.0,FLORIANOPOLIS AR,,BR,METAR TAF
SBFN,82400,-3.85,-32.42,52.0,FERNANDO DE NORO,,BR,METAR TAF
SBFS,,-22.02,-41.07,3.0,CMP D GOITACAZES,,BR,METAR
SBFT,,-20.28,-49.18,487.0,FRONTEIRA       ,,BR,METAR
SBFU,,-20.68,-46.32,735.0,FURNAS (PRIVATE),,BR,METAR
SBFZ,82398,-3.77,-38.52,32.0,FORTALEZA/PINTO ,,BR,METAR TAF
SBGA,83375,-16.05,-48.03,700.0,GAMA            ,,BR,METAR
SBGL,83746,-22.82,-43.25,3.0,GALEAO/RIO(CIV/M,,BR,METAR TAF
SBGM,,-10.78,-65.28,147.0,GUAJARA MIRIM   ,,BR,METAR
SBGO,83424,-16.62,-49.22,740.0,GOIANIA/SANTA GE,,BR,METAR TAF
SBGP,,-21.77,-48.4,609.0,GAVIAO PEIXOTO  ,,BR,METAR
SBGR,,-23.42,-46.47,745.0,GUARULHOS (CIV/M,,BR,METAR TAF
SBGU,,-25.38,-51.52,1065.0,GUARAPUAVA      ,,BR,METAR
SBGV,,-18.88,-41.98,171.0,GOV VALADARES   ,,BR,METAR
SBGW,83708,-22.78,-45.2,539.0,GUARATINGUETA (M,,BR,METAR TAF
SBHT,82353,-3.25,-52.27,105.0,ALTAMIRA        ,,BR,METAR
SBIC,82336,-3.12,-58.47,36.0,ITACOATIARA     ,,BR,METAR
SBIH,82444,-4.25,-56.0,30.0,ITAITUBA        ,,BR,METAR TAF
SBIL,83349,-14.8,-39.02,9.0,ILHEUS AIRPORT  ,,BR,METAR TAF
SBIP,,-19.47,-42.48,240.0,USIMINAS/PARAISO,,BR,METAR
SBIT,,-18.43,-49.2,499.0,ITUMBIARA       ,,BR,METAR
SBIZ,82564,-5.52,-47.45,131.0,IMPERATRIZE     ,,BR,METAR TAF
SBJE,,-2.9,-40.35,25.0,MONTEIRO        ,,BR,TAF
SBJF,83692,-21.78,-43.38,914.0,JUIZ FORA/FRANCI,,BR,METAR
SBJP,82798,-7.15,-34.95,66.0,JOAO PESSOA/PRES,,BR,METAR TAF
SBJR,83111,-22.98,-43.37,5.0,RIO/JACAREPAGUA ,,BR,METAR TAF
SBJU,,-7.22,-39.27,407.0,JUAZEIRO D NORTE,,BR,METAR
SBJV,,-26.22,-48.8,3.0,JOINVILLE       ,,BR,METAR TAF
SBKG,82795,-7.27,-35.88,499.0,CAMPINA GRANDE  ,,BR,METAR TAF
SBKP,83721,-23.0,-47.13,659.0,CAMPINAS/VIRACOP,,BR,METAR TAF
SBLB,,-22.1,-39.92,10.0,ALBACORA P25 OIL,,BR,METAR
SBLE,,-12.48,-41.28,495.0,LENCOIS CHAPADA ,,BR,METAR
SBLJ,,-27.78,-50.28,934.0,LAGES           ,,BR,METAR
SBLN,83674,-21.67,-49.75,426.0,LINS            ,,BR,METAR
SBLO,83768,-23.33,-51.12,563.0,LONDRINA AIRPORT,,BR,METAR TAF
SBLP,83288,-13.27,-43.42,446.0,BOM JESUS DA LAP,,BR,METAR TAF
SBLS,,-19.67,-43.88,850.0,LAGOA SANTA(CV/M,,BR,METAR
SBMA,82562,-5.37,-49.13,110.0,MARABA          ,,BR,METAR TAF
SBMC,,-13.55,-48.2,440.0,MINACU          ,,BR,METAR
SBMD,,-0.88,-52.6,206.0,MONTE DOURADO   ,,BR,METAR
SBME,,-22.35,-41.77,2.0,MACAE           ,,BR,METAR TAF
SBMG,83767,-23.48,-52.02,543.0,MARINGA         ,,BR,METAR
SBMK,83437,-16.7,-43.82,665.0,MONTES CLAROS   ,,BR,METAR
SBML,,-22.18,-49.92,643.0,MARILIA         ,,BR,METAR
SBMM,,-22.35,-40.08,10.0,MARLIM P20 OIL  ,,BR,METAR
SBMN,82332,-3.13,-59.98,71.0,MANAUS/PONTA PEL,,BR,METAR TAF
SBMO,82993,-9.52,-35.78,116.0,MACEIO/CAMPO PAL,,BR,METAR TAF
SBMQ,82098,0.05,-51.07,15.0,MACAPA INTL AIRP,,BR,METAR TAF
SBMS,82591,-5.2,-37.37,23.0,MOSSORO         ,,BR,METAR
SBMT,83779,-23.52,-46.63,722.0,MARTE (CIV/MIL) ,,BR,METAR TAF
SBMY,82533,-5.82,-61.28,44.0,MANICORE        ,,BR,METAR
SBMZ,82184,-1.73,-52.25,17.0,PORTO DE MOZ    ,,BR,METAR
SBNF,,-26.88,-48.65,5.0,NAVEGANTES      ,,BR,METAR TAF
SBNM,,-28.27,-54.17,325.0,SANTO ANGELO ARP,,BR,METAR
SBNT,82599,-5.92,-35.25,51.0,NATAL/AUGUSTO SE,,BR,METAR TAF
SBOI,82017,3.85,-51.78,15.0,OIAPOQUE        ,,BR,METAR TAF
SBPA,83971,-30.0,-51.17,3.0,PORTO ALEGRE/SAL,,BR,METAR TAF
SBPB,82288,-2.88,-41.72,3.0,PARNAIBA AIRPORT,,BR,METAR TAF
SBPC,83681,-21.85,-46.57,1259.0,POCOS DE CALDAS ,,BR,METAR
SBPF,83914,-28.25,-52.33,720.0,PASSO FUNDO/LAUR,,BR,METAR
SBPG,83844,-25.18,-50.13,9.0,PONTA GROSSA    ,,BR,METAR
SBPJ,,-10.28,-48.37,226.0,PALMAS          ,,BR,METAR TAF
SBPK,83985,-31.72,-52.33,17.0,PELOTAS         ,,BR,METAR TAF
SBPL,82984,-9.37,-40.57,386.0,PETROLINA AIRPOR,,BR,METAR TAF
SBPN,83063,-10.72,-48.38,263.0,PORTO NACIONAL A,,BR,METAR
SBPP,83703,-22.55,-55.7,650.0,PONTA PORA INTL ,,BR,METAR TAF
SBPR,,-19.9,-43.98,936.0,BELO HORIZONTE  ,,BR,METAR
SBPS,,-16.43,-39.07,44.0,PORTO SEGURO    ,,BR,METAR TAF
SBPV,82824,-8.72,-63.9,89.0,PORTO VELHO(CV/M,,BR,METAR TAF
SBQV,83344,-14.87,-40.87,912.0,VITORIA DA CONQU,,BR,METAR
SBRB,82917,-9.87,-67.88,190.0,RIO BRANCO/MEDIC,,BR,METAR rawinsonde TAF
SBRF,82899,-8.13,-34.92,10.0,RECIFE/GUARARAPE,,BR,METAR TAF
SBRG,83995,-32.02,-52.08,8.0,RIO GRANDE      ,,BR,METAR
SBRJ,83755,-22.9,-43.17,6.0,SANTOS DUMONT/RI,,BR,METAR TAF
SBRP,,-21.13,-47.77,550.0,LEITE LOPES/RIBE,,BR,METAR TAF
SBRQ,83058,-23.52,-47.12,750.0,SAO ROQUE/S. PAU,,BR,METAR
SBRS,83738,-22.47,-44.47,439.0,RESENDE         ,,BR,METAR
SBSA,83726,-22.02,-47.87,856.0,SAO CARLOS(PRIVA,,BR,METAR
SBSC,83741,-22.92,-43.72,6.0,SANTA CRUZ (MIL),,BR,METAR TAF
SBSG,,-5.77,-35.37,83.0,NATAL           ,,BR,METAR TAF
SBSJ,,-23.22,-45.87,640.0,SAO JOSE DOS CAM,,BR,METAR TAF
SBSL,82281,-2.58,-44.23,53.0,SAO LUIS/MARECHA,,BR,METAR rawinsonde TAF
SBSM,83937,-29.72,-53.7,86.0,SANTA MARIA(CV/M,,BR,METAR TAF
SBSN,82244,-2.42,-54.78,57.0,SANTAREM INTL AR,,BR,METAR TAF
SBSP,83780,-23.62,-46.65,802.0,SAO PAULO/CONGON,,BR,METAR TAF
SBSR,,-20.8,-49.4,537.0,SAO JOSE PRETO  ,,BR,METAR
SBST,83818,-23.92,-46.3,5.0,SANTOS (BRAZ-AFB,,BR,METAR TAF
SBSV,83248,-12.9,-38.32,9.0,SALVADOR/DOIS JU,,BR,METAR TAF
SBSY,83156,-11.57,-50.67,197.0,SANTA ISABEL MOR,,BR,METAR
SBTA,83784,-23.03,-45.5,578.0,TAUBATE (BASE)  ,,BR,METAR
SBTB,,-1.48,-56.38,87.0,ORIXIMINA       ,,BR,METAR
SBTC,82108,-15.35,-38.98,6.0,UNA HOTEL TRANSA,,BR,METAR
SBTD,,-24.68,-53.7,558.0,TOLEDO          ,,BR,METAR TAF
SBTE,82579,-5.05,-42.82,60.0,TERESINA AIRPORT,,BR,METAR TAF
SBTF,82317,-3.37,-64.72,55.0,TEFE            ,,BR,METAR TAF
SBTK,82807,-8.17,-70.77,194.0,TARAUACA        ,,BR,METAR
SBTL,,-24.32,-50.65,796.0,TELEMACO BORBA  ,,BR,METAR
SBTR,83948,-29.35,-49.73,1.0,TORRES          ,,BR,METAR
SBTS,82026,-2.22,-55.93,325.0,TIRIOS          ,,BR,METAR
SBTT,82411,-4.25,-69.93,79.0,TABATINGA INTL A,,BR,METAR TAF
SBTU,82361,-3.78,-49.72,250.0,TUCURUI         ,,BR,METAR TAF
SBUA,82106,-0.15,-66.98,73.0,SAO GABRIEL CACH,,BR,METAR
SBUF,82986,-9.4,-38.25,266.0,PAULO AFONSO    ,,BR,METAR
SBUG,83928,-29.77,-57.03,79.0,URUGUAIANA/RUBEM,,BR,METAR TAF
SBUI,82418,-4.95,-66.9,81.0,CARAUARI        ,,BR,METAR
SBUL,,-18.87,-48.22,945.0,UBERLANDIA      ,,BR,METAR TAF
SBUP,83617,-20.8,-51.57,356.0,URUBUPUNGA/CASTI,,BR,METAR
SBUR,83576,-19.77,-47.97,807.0,UBERABA         ,,BR,METAR TAF
SBUY,,-4.88,-65.35,44.0,PORTO URUCU     ,,BR,METAR
SBVG,,-21.58,-45.47,923.0,VARGINHA        ,,BR,METAR
SBVH,83208,-12.68,-60.08,615.0,VILHENA         ,,BR,METAR TAF
SBVT,83649,-20.25,-40.28,4.0,VITORIA/GOIABEIR,,BR,METAR TAF
SBXI,82930,-9.35,-54.88,432.0,CACHIMBO-IN-PAR ,,BR,METAR
SBXV,83319,-14.68,-52.35,315.0,XAVANTINA       ,,BR,METAR
SBYA,82067,0.62,-69.2,123.0,IAUARETE (PRIVAT,,BR,METAR
SBYS,83671,-21.97,-47.33,600.0,PIRASSUNUNGA/CAM,,BR,METAR TAF
SCAC,85818,-41.88,-73.78,114.0,ANCUD/PUPELDE   ,,CL,METAR
SCAP,85836,-43.62,-71.8,252.0,ALTO PALENA     ,,CL,METAR
SCAR,85406,-18.35,-70.33,57.0,ARICA/CHACALLUTA,,CL,METAR TAF
SCAS,85862,-45.4,-72.67,8.0,CABO JUAN ROMAN ,,CL,METAR
SCAT,,-27.27,-70.77,209.0,DESIERTO ATACAMA,,CL,METAR TAF
SCBA,85874,-45.92,-71.68,516.0,BALMACEDA       ,,CL,METAR TAF
SCBL,85562,-33.03,-71.42,123.0,EL BELLOTO (MIL),,CL,METAR
SCBO,89059,-63.32,-56.68,10.0,BERNADO OHIGGINS,,CL,METAR
SCBQ,85581,-33.57,-70.67,573.0,EL BOSQUE (MIL) ,,CL,METAR
SCCC,85886,-46.58,-71.7,305.0,CHILE CHICO     ,,CL,METAR
SCCF,85432,-22.5,-68.9,2290.0,CALAMA/EL LOA   ,,CL,METAR TAF
SCCH,85672,-36.57,-72.02,148.0,CHILLAN/GEN BERN,,CL,METAR
SCCI,85934,-53.0,-70.85,37.0,PUNTA ARENAS/PRE,,CL,METAR TAF
SCCY,85864,-45.58,-72.1,301.0,COYHAIQUE/TENIEN,,CL,METAR TAF
SCDA,85418,-20.53,-70.17,41.0,IQUIQUE/DIEGO AR,,CL,METAR TAF
SCEL,85574,-33.38,-70.78,478.0,PUDAHUEL/ARTURO ,,CL,METAR TAF
SCER,85543,-32.77,-71.52,8.0,QUINTERO (MIL)  ,,CL,METAR
SCFA,85442,-23.43,-70.43,113.0,ANTOFAGASTA/CERR,,CL,METAR TAF
SCFM,,-53.25,-70.32,28.0,CAPT FUENTES MAR,,CL,METAR TAF
SCFT,85832,-43.18,-71.85,345.0,FUTALEUFU       ,,CL,METAR
SCGE,85703,-37.4,-72.42,122.0,MARIA DOLORES   ,,CL,METAR
SCGZ,85967,-54.93,-67.63,21.0,GUARDIAMARINA   ,,CL,METAR
SCHA,85470,-27.3,-70.42,291.0,COPIAPO/CHAMONAT,,CL,METAR TAF
SCHR,85892,-47.23,-72.58,203.0,COCHRANE        ,,CL,METAR
SCIC,85629,-34.97,-71.22,230.0,CURICO/GEN FREIR,,CL,METAR
SCIE,85682,-36.77,-73.07,8.0,CONCEPCION/CARRI,,CL,METAR TAF
SCIP,85469,-27.17,-109.43,48.0,EASTER ISLAND   ,,CL,METAR TAF
SCIR,,-33.67,-78.93,132.0,ROBINSON CRUSOE ,,CL,METAR
SCJO,85782,-40.6,-73.05,61.0,OSORNO/CANAL BAJ,,CL,METAR TAF
SCLL,85486,-28.6,-70.77,538.0,VALLENAR        ,,CL,METAR
SCMK,,-43.9,-73.73,22.0,MELINKA ARPT    ,,CL,METAR
SCNT,85921,-51.67,-72.53,68.0,TENIENTE GALLARD,,CL,METAR TAF
SCON,85831,-43.13,-73.62,11.0,QUELLON         ,,CL,METAR
SCPQ,,-42.33,-73.72,166.0,MONOPULLI       ,,CL,METAR TAF
SCQP,,-38.92,-72.65,97.0,TEMUCO          ,,CL,METAR TAF
SCRA,85460,-26.32,-70.62,30.0,CHANARAL        ,,CL,METAR
SCRD,85561,-33.07,-71.55,342.0,RODELILLO       ,,CL,METAR
SCRG,85608,-34.17,-70.77,488.0,DE LA INDEPENDEN,,CL,METAR
SCRM,,-62.18,-58.98,45.0,TENIENTE R MARSH,,AQ,METAR
SCSE,85488,-29.92,-71.2,141.0,LA SERENA/LAFLOR,,CL,METAR TAF
SCSN,85586,-33.65,-71.62,73.0,SANTO DOMINGO   ,,CL,METAR
SCSR,,-42.07,-71.87,366.0,SEGUNDO CORRAL A,,CL,METAR
SCST,85825,-42.47,-73.77,44.0,CASTRO/GAMBOA   ,,CL,METAR
SCTB,85580,-33.45,-70.53,655.0,EULOGIO SANCHEZ ,,CL,METAR
SCTC,85743,-38.77,-72.63,93.0,TEMUCO/MAQUEHUE ,,CL,METAR TAF
SCTE,85799,-41.43,-73.08,85.0,PUERTO MONTT/TEP,,CL,METAR TAF
SCTI,85579,-33.47,-70.7,511.0,LOS CERRILLOS   ,,CL,METAR
SCTN,85830,-42.92,-72.7,8.0,CHAITEN         ,,CL,METAR
SCVD,85766,-39.65,-73.08,19.0,VALDIVIA/PICHOY ,,CL,METAR TAF
SCVM,,-32.95,-71.48,136.0,VINA DEL MAR    ,,CL,METAR TAF
SEAM,84147,-1.2,-78.57,2520.0,AMBATO/CHACHOAN ,,EC,METAR
SEAS,,-0.07,-78.28,2743.0,ASCAZUBI        ,,EC,METAR
SEBC,84101,-0.57,-80.4,3.0,BAHIA DE CARAQUE,,EC,METAR
SECA,,-4.0,-79.37,1237.0,CIUDAD DE CATAMY,,EC,METAR
SECH,84015,-0.7,-80.12,69.0,CHONE           ,,EC,METAR
SECO,84099,-0.45,-76.98,256.0,COCA/FRANCISCO  ,,EC,METAR
SECU,84239,-2.88,-78.98,2516.0,CUENCA/MARISCAL ,,EC,METAR
SEES,84018,0.97,-79.62,8.0,ESMERALDAS-TACHI,,EC,METAR
SEGS,84001,-0.45,-90.27,51.0,SAN CRISTOBAL   ,,EC,METAR
SEGU,84203,-2.15,-79.88,6.0,GUAYAQUIL/SIMON ,,EC,METAR TAF
SEGZ,,-3.42,-78.57,805.0,GUALAQUIZA      ,,EC,METAR
SEIB,84043,0.35,-78.12,2228.0,IBARRA/ATAHUALPA,,EC,METAR
SEJD,,-1.07,-77.58,376.0,JUMANDY         ,,EC,METAR
SELA,84063,0.07,-76.87,299.0,LAGO AGRIO      ,,EC,METAR
SELI,,-0.4,-76.58,221.0,LIMONCOCHA      ,,EC,METAR
SELO,84265,-4.0,-79.37,1238.0,CATAMAYO/ENRIQUE,,EC,METAR
SELT,84123,-0.92,-78.62,2779.0,LATACUNGA/COTOPA,,EC,METAR TAF
SEMA,84279,-4.37,-79.92,430.0,MACARA/J.M.VELAS,,EC,METAR
SEMC,84217,-2.3,-78.12,1036.0,MACAS           ,,EC,METAR
SEMH,84248,-3.25,-79.97,10.0,MACHALA/GEN SERR,,EC,METAR
SEMT,84117,-0.95,-80.67,13.0,MANTA/ELOY ALFAR,,EC,METAR TAF
SENL,,0.1,-76.87,293.0,LAGO AGRIO      ,,EC,METAR
SEPA,84163,-1.5,-78.03,1043.0,PASTAZA/RIO AMAZ,,EC,METAR
SEPV,,-1.02,-80.47,44.0,PORTOVIEJO/REALE,,EC,METAR
SEQM,,-0.12,-78.35,2386.0,QUITO/NEW INTL  ,,EC,METAR TAF
SEQU,84071,-0.15,-78.48,2812.0,QUITO/MARISCAL S,,EC,METAR TAF
SERB,84176,-1.65,-78.67,2788.0,RIOBAMBA/CHIMBOR,,EC,METAR
SERO,,-3.43,-79.98,6.0,SANTA ROSA      ,,EC,METAR
SESA,84200,-2.2,-80.98,6.0,SALINAS/GEN ULPI,,EC,METAR
SESD,84069,-0.25,-79.2,495.0,SANTO DOMINGO   ,,EC,METAR
SESL,,1.27,-78.83,40.0,SAN LORENZO     ,,EC,METAR
SESM,84006,-1.5,-78.07,1056.0,SHELL MERA/AMAZO,,EC,METAR
SEST,84008,-0.9,-89.62,13.0,SAN CRISTOBAL IS,,EC,METAR
SETA,84125,-2.27,-79.67,17.0,TAURA (EQ-AFB)  ,,EC,METAR
SETI,84131,-0.77,-75.52,220.0,TIPUTINI        ,,EC,METAR
SETN,84026,0.98,-79.63,10.0,TACHINA         ,,EC,METAR
SETU,84027,0.82,-77.7,2936.0,TULCAN/EL ROSAL ,,EC,METAR
SFAL,88891,-51.68,-57.77,23.0,STANLEY AIRPORT ,,FK,METAR TAF
SGAS,86218,-25.25,-57.52,83.0,ASUNCION/SILVIO ,,PY,METAR TAF
SGCO,86134,-23.43,-57.42,74.0,CONCEPCION/MARIS,,PY,METAR TAF
SGEN,86297,-27.23,-55.83,202.0,ENCARNACION     ,,PY,METAR TAF
SGES,,-25.45,-54.85,256.0,GUARANY         ,,PY,METAR TAF
SGFI,,-22.37,-60.03,139.0,FILADELFIA      ,,PY,METAR
SGGR,,-24.03,-54.35,297.0,SALTO DEL GUAIRA,,PY,METAR
SGLV,,-22.28,-57.93,78.0,PUERTO CASADO   ,,PY,METAR
SGME,86068,-22.03,-60.62,166.0,MARISCAL ESTIGAR,,PY,METAR
SGNA,86017,-20.72,-61.92,315.0,NUEVA ASUNCION  ,,PY,METAR
SGPC,,-23.5,-58.78,98.0,POZO COLORADO   ,,PY,METAR
SGPI,86255,-26.87,-58.32,59.0,PILAR           ,,PY,METAR
SGPJ,,-22.63,-55.83,571.0,CABALLERO       ,,PY,METAR
SGSJ,,-26.67,-57.13,131.0,SAN JUAN BATISTA,,PY,METAR
SGSP,,-24.03,-57.02,81.0,SAN PEDRO       ,,PY,METAR
SGVR,,-25.75,-56.43,161.0,VILLARRRICA     ,,PY,METAR
SKAR,80211,4.45,-75.77,1214.0,ARMENIA/EL EDEN ,,CO,METAR TAF
SKAS,80372,0.5,-76.5,251.0,PUERTO ASIS     ,,CO,METAR
SKBC,80074,9.07,-73.97,34.0,EL BANCO/LAS FLO,,CO,METAR
SKBG,80094,7.13,-73.18,1187.0,BUCARAMANGO/PALO,,CO,METAR TAF
SKBO,80222,4.7,-74.15,2547.0,BOGOTA/ELDORADO ,,CO,METAR TAF
SKBQ,80028,10.87,-74.77,23.0,BARRANQUILLA/ERN,,CO,METAR TAF
SKBS,,6.17,-77.4,24.0,BAHIA SOLANO/JOS,,CO,METAR
SKBU,80252,3.87,-77.07,15.0,BUENAVENTURA    ,,CO,METAR
SKCC,80097,7.92,-72.52,308.0,CUCUTA/CAMILO DA,,CO,METAR TAF
SKCG,80022,10.43,-75.52,6.0,CARTAGENA/RAFAEL,,CO,METAR TAF
SKCL,80259,3.53,-76.37,967.0,CALI/ALFONSO BON,,CO,METAR TAF
SKCO,80336,1.82,-78.75,6.0,TUMACO/LA FLORID,,CO,METAR
SKEJ,80091,7.02,-73.8,123.0,BARRANCABERMEJA ,,CO,METAR
SKFL,80354,1.6,-75.52,244.0,FLORENCIA/CAPITO,,CO,METAR
SKGI,80219,4.27,-74.78,282.0,GIRARDOT/SANTIAG,,CO,METAR
SKGP,80300,2.57,-77.9,2.0,GUAPI           ,,CO,METAR
SKIB,80214,4.42,-75.12,899.0,IBAGUE/PERALES  ,,CO,METAR
SKIP,80370,0.85,-77.67,2964.0,IPIALES/SAN LUIS,,CO,METAR
SKLC,80084,7.82,-76.72,20.0,APARTADO/LOS CED,,CO,METAR
SKLT,80398,-4.2,-69.93,78.0,LETICIA/VASQUEZ ,,CO,METAR TAF
SKMD,80110,6.22,-75.58,1491.0,MEDELLIN/OLAYA H,,CO,METAR
SKMR,80063,8.82,-75.83,12.0,MONTERIA/LOS GAR,,CO,METAR
SKMU,80361,1.12,-70.03,207.0,MITU            ,,CO,METAR
SKMZ,80149,5.03,-75.47,2075.0,MANIZALES LNUBIA,,CO,METAR
SKNV,80315,2.93,-75.28,449.0,NEIVA/LA MANGUIT,,CO,METAR
SKOT,80089,7.0,-74.72,630.0,OTU             ,,CO,METAR
SKPC,80139,6.18,-67.5,51.0,PUERTO CARRENO  ,,CO,METAR
SKPE,80210,4.82,-75.73,1341.0,PEREIRA/MATECANA,,CO,METAR TAF
SKPI,80346,1.87,-76.03,1320.0,PITALITO        ,,CO,METAR
SKPP,80308,2.47,-76.58,1730.0,POPAYAN/GUILLERM,,CO,METAR
SKPS,80342,1.4,-77.28,1798.0,PASTO/ANTONIO NA,,CO,METAR
SKPV,80002,13.37,-81.35,7.0,PROVIDENCIA ISLA,,CO,METAR
SKQU,,5.22,-74.87,467.0,MARIQUITA       ,,CO,METAR
SKRG,80112,6.17,-75.42,2132.0,RIONEGRO/JOSE MA,,CO,METAR TAF
SKRH,80035,11.52,-72.92,11.0,RIOHACHA/ALMIRAN,,CO,METAR TAF
SKSA,,6.95,-71.87,207.0,SARAVENA/COLONIZ,,CO,METAR
SKSJ,80322,2.57,-72.62,155.0,SAN JOSE GUAVIAR,,CO,METAR
SKSM,80009,11.12,-74.22,5.0,SANTA MARTA/SIMO,,CO,METAR TAF
SKSP,80001,12.58,-81.72,6.0,SAN ANDRES ISLAN,,CO,METAR TAF
SKSV,80318,2.15,-74.77,280.0,SAN VINCENTE DEL,,CO,METAR
SKTD,80175,5.42,-71.65,217.0,TRINIDAD        ,,CO,METAR
SKTM,80132,6.45,-71.75,361.0,TAME            ,,CO,METAR
SKTU,80062,8.12,-76.72,5.0,TURBO/GONZALO ME,,CO,METAR
SKUC,80099,7.07,-70.73,127.0,ARAUCA/SANTIAGO ,,CO,METAR
SKUI,80144,5.68,-76.63,55.0,QUIBDO/EL CARANO,,CO,METAR
SKUL,,4.08,-76.22,955.0,TULUA/FARFAN    ,,CO,METAR
SKVP,80036,10.43,-73.25,137.0,VALLEDUPAR/ALFON,,CO,METAR
SKVV,80234,4.17,-73.62,421.0,VILLAVICENCIO/VA,,CO,METAR
SKYP,,5.32,-72.38,312.0,YOPAL/EL ALCARAV,,CO,METAR
SLAL,,-19.23,-65.15,3109.0,ALCANTARI       ,,BO,METAR TAF
SLAP,85151,-14.72,-68.42,1415.0,APOLO           ,,BO,METAR
SLAS,85175,-15.72,-63.1,247.0,ASCENCION GUARAY,,BO,METAR
SLCA,85315,-20.0,-63.53,796.0,CAMIRI          ,,BO,METAR
SLCB,85223,-17.42,-66.18,2560.0,COCHABAMBA/JORGE,,BO,METAR TAF
SLCN,85230,-17.58,-69.45,4057.0,CHARANA         ,,BO,METAR
SLCO,85041,-11.03,-68.78,238.0,COBIJA          ,,BO,METAR TAF
SLCP,85196,-16.15,-62.02,502.0,CONCEPCION      ,,BO,METAR
SLET,85245,-17.8,-63.17,421.0,SANTA CRUZ/EL TR,,BO,METAR TAF
SLGY,85033,-10.82,-65.33,130.0,GUAYARAMERIN    ,,BO,METAR
SLJE,85247,-17.82,-60.75,286.0,SAN JOSE        ,,BO,METAR
SLJO,85104,-13.07,-64.67,140.0,SAN JOAQUIN     ,,BO,METAR
SLJV,85195,-16.27,-62.47,539.0,SAN JAVIER      ,,BO,METAR
SLLP,85201,-16.52,-68.17,4061.0,LA PAZ/JFK INTL ,,BO,METAR TAF
SLMG,85114,-13.27,-64.07,146.0,MAGDALENA       ,,BO,METAR
SLOR,85242,-17.97,-67.08,3720.0,ORURO/JUAN MENDO,,BO,METAR TAF
SLPO,85293,-19.53,-65.72,3915.0,POTOSI/ROJAS    ,,BO,METAR
SLPS,85289,-18.98,-57.82,136.0,PUERTO SUAREZ/SA,,BO,METAR TAF
SLRB,85268,-18.32,-59.75,266.0,ROBORE (CIV/MIL),,BO,METAR
SLRI,85043,-11.02,-66.08,136.0,RIBERALTA       ,,BO,METAR
SLRQ,85141,-14.42,-67.5,209.0,RURRENABAQUE    ,,BO,METAR TAF
SLRY,85140,-14.3,-67.37,187.0,REYES           ,,BO,METAR
SLSA,85123,-13.77,-65.43,144.0,SANTA ANA DE YAC,,BO,METAR
SLSB,85152,-14.87,-66.75,194.0,SAN BORJA/CAPT G,,BO,METAR
SLSI,85207,-16.38,-60.95,417.0,SAN IGNACIO VELA,,BO,METAR
SLSM,85153,-14.97,-65.63,160.0,SAN IGNACIO DE M,,BO,METAR
SLSU,85283,-19.02,-65.28,2904.0,SUCRE/JUANA AZUR,,BO,METAR TAF
SLSV,,-16.4,-61.05,450.0,SAN IGNACIO DE V,,BO,METAR
SLTJ,85364,-21.55,-64.72,1850.0,TARIJA/CAPT ORIE,,BO,METAR TAF
SLTR,85154,-14.83,-64.92,157.0,TRINIDAD/JORGE H,,BO,METAR TAF
SLVG,,-18.47,-64.1,1998.0,VALLEGRANDE     ,,BO,METAR
SLVM,85345,-21.25,-63.4,396.0,VILLA MONTES/RAF,,BO,METAR
SLVR,85244,-17.63,-63.13,377.0,VIRU VIRU INTL A,,BO,METAR TAF
SLYA,85365,-21.97,-63.65,646.0,YACUIBA         ,,BO,METAR TAF
SMJP,,5.45,-55.18,14.0,JOHAN A. PENGEL ,,SR,METAR TAF
SMNI,,5.95,-57.03,10.0,NICKERIE FERNAND,,SR,METAR TAF
SMSI,81251,2.02,-56.12,265.0,SIPALIWINI      ,,SR,METAR
SMST,81209,4.33,-54.42,52.0,STOELMANSEILAND ,,SR,METAR
SMTB,81250,3.77,-56.13,323.0,TAFELBERG/RUDI K,,SR,METAR
SMZO,81200,5.82,-55.18,7.0,PARAMARIBO      ,,SR,METAR TAF
SMZY,81225,5.45,-55.2,15.0,ZANDERY/PARAMARI,,SR,METAR
SOCA,81405,4.82,-52.37,7.0,CAYENNE/ROCHAMBE,,GF,METAR TAF
SOOM,81401,5.5,-54.02,6.0,ST LAURENT DU MA,,GF,METAR
SPAY,84593,-10.72,-73.77,451.0,ATALAYA         ,,PE,METAR
SPBB,84435,-6.02,-76.97,833.0,MOYOBAMBA       ,,PE,METAR
SPCL,84515,-8.38,-74.58,154.0,PUCALLPA (CIV/MI,,PE,METAR TAF
SPDO,84761,-17.02,-72.02,13.0,MOLLENDO        ,,PE,METAR
SPEO,84531,-9.17,-78.52,13.0,CHIMBOTE/TENIENT,,PE,METAR TAF
SPEQ,,-17.17,-70.92,1366.0,CESAR TORQUE POD,,PE,METAR
SPGM,84534,-9.28,-76.0,643.0,TINGO MARIA     ,,PE,METAR TAF
SPHI,84452,-6.78,-79.82,33.0,CHICLAYO/CAPT JO,,PE,METAR TAF
SPHO,84673,-13.17,-74.22,2743.0,AYACUCHO/CORONEL,,PE,METAR TAF
SPHU,,-12.07,-75.22,3350.0,HUANCAYO        ,,PE,METAR
SPHY,84688,-13.7,-73.35,3553.0,ANDAHUAYLA      ,,PE,METAR TAF
SPHZ,84542,-9.33,-77.58,2760.0,ANTA/HUARAZ     ,,PE,METAR TAF
SPIL,84677,-13.27,-70.67,634.0,QUINCEMIL       ,,PE,METAR
SPIM,,-12.02,-77.12,26.0,LIMA/JORGE CHAVE,,PE,METAR TAF
SPJA,84440,-6.03,-77.15,792.0,RIOJA           ,,PE,METAR
SPJC,84628,-12.02,-77.12,26.0,LIMA/JORGE CHAVE,,PE,METAR TAF
SPJI,84474,-7.17,-76.72,363.0,JUANJUI         ,,PE,METAR TAF
SPJJ,,-11.77,-75.47,3322.0,JAUJA           ,,PE,METAR TAF
SPJL,84735,-15.47,-70.15,3837.0,JULIACA         ,,PE,METAR TAF
SPJN,84721,-15.35,-75.13,40.0,SAN JUAN DE MARC,,PE,METAR
SPJR,84472,-7.13,-78.48,2622.0,CAJAMARCA/REVORE,,PE,METAR TAF
SPLO,84771,-17.7,-71.35,25.0,ILO             ,,PE,METAR TAF
SPLP,,-12.17,-77.0,76.0,LAS PALMAS (MIL),,PE,METAR
SPME,84370,-3.55,-80.4,26.0,TUMBES/PEDRO CAN,,PE,METAR TAF
SPMS,84425,-5.9,-76.12,149.0,YURIMAGUAS/MOISE,,PE,METAR TAF
SPNC,84564,-9.87,-76.2,1856.0,HUANUCO/ALFEREZ ,,PE,METAR TAF
SPOS,,-3.67,-80.67,49.0,ZORRITOS        ,,PE,METAR
SPPG,,-10.67,-77.82,46.0,PARAMONGA       ,,PE,METAR
SPPY,84444,-6.22,-77.85,2536.0,CHACHAPOYAS     ,,PE,METAR TAF
SPQT,84377,-3.78,-73.32,92.0,IQUITOS/SECADA  ,,PE,METAR TAF
SPQU,84752,-16.33,-71.57,2527.0,AREQUIPA/RODRIGU,,PE,METAR TAF
SPRU,84501,-8.08,-79.12,23.0,TRUJILLO/MARTINE,,PE,METAR TAF
SPSO,84691,-13.73,-76.22,8.0,PISCO (CIV/MIL) ,,PE,METAR TAF
SPST,84455,-6.52,-76.37,282.0,TARAPOTO        ,,PE,METAR TAF
SPTN,84782,-18.03,-70.28,459.0,TACNA/CIRIANI   ,,PE,METAR TAF
SPTU,84658,-12.62,-69.22,213.0,PUERTO MALDONADO,,PE,METAR TAF
SPUR,84401,-5.17,-80.58,55.0,PIURA/CAPT CONCH,,PE,METAR TAF
SPVL,,-15.77,-73.37,1833.0,CARAVELI        ,,PE,METAR
SPYL,84390,-4.57,-81.25,89.0,TALARA/CAPT MONT,,PE,METAR TAF
SPZA,84720,-14.87,-74.95,546.0,NAZCA REICHE APT,,PE,METAR TAF
SPZO,84686,-13.55,-71.93,3249.0,CUZCO/VELAZCO AS,,PE,METAR TAF
SUAA,86575,-34.78,-56.25,48.0,MELILLA/ANGEL S.,,UY,METAR TAF
SUAG,86330,-30.4,-56.5,119.0,ARTIGAS         ,,UY,METAR
SUCA,86560,-34.45,-57.77,26.0,COLONIA SACRAMEN,,UY,METAR TAF
SUDU,86530,-33.35,-56.5,91.0,DURAZNO/SANTA BE,,UY,METAR TAF
SULS,,-34.87,-55.1,22.0,CAPITAN CORBETA ,,UY,METAR TAF
SUME,86490,-33.25,-58.07,22.0,MERCEDES/RICARDO,,UY,METAR
SUMO,86440,-32.33,-54.22,100.0,MELO/CERRO LARGO,,UY,METAR
SUMU,86580,-34.83,-56.02,32.0,CARRASCO (CIV/MI,,UY,METAR TAF
SUPE,,-34.92,-54.92,15.0,MALDONADO/PUNTA ,,UY,METAR
SUPU,86430,-32.35,-58.07,23.0,PAYSANDU        ,,UY,METAR
SURV,86350,-30.97,-55.47,201.0,RIVERA          ,,UY,METAR TAF
SUSO,86360,-31.43,-57.98,37.0,SALTO           ,,UY,METAR TAF
SUTB,86370,-31.72,-55.97,128.0,TACUAREMBO      ,,UY,METAR
SUTR,86500,-33.22,-54.37,46.0,TREINTA Y TRES  ,,UY,METAR
SVAC,80427,9.55,-69.23,226.0,ACARIGUA/OSWALDO,,VE,METAR
SVBC,80419,10.12,-64.68,7.0,BARCELONA/GEN JO,,VE,METAR TAF
SVBI,80440,8.62,-70.22,185.0,BARINAS         ,,VE,METAR
SVBL,,10.17,-67.53,442.0,EL LIBERTADOR (A,,VE,METAR
SVBM,80410,10.05,-69.37,624.0,BARQUISIMETO (MI,,VE,METAR TAF
SVBS,80413,10.25,-67.65,435.0,MARISCAL SUCRE(M,,VE,METAR
SVCB,80444,8.12,-63.53,47.0,CIUDAD BOLIVAR  ,,VE,METAR
SVCJ,,9.65,-68.58,156.0,SAN CARLOS      ,,VE,METAR
SVCL,80442,8.92,-67.42,117.0,CALABOZO        ,,VE,METAR
SVCN,,6.23,-62.85,402.0,CANAIMA ARPT    ,,VE,METAR
SVCP,,10.67,-63.27,15.0,CARUPANO/GEN. JO,,VE,METAR
SVCR,80403,11.42,-69.67,17.0,CORO/JOSE LEONAR,,VE,METAR
SVCS,,10.3,-66.82,656.0,CARACAS/OSCAR MA,,VE,METAR
SVCU,80420,10.45,-64.13,5.0,CUMANA/ANTONIO J,,VE,METAR
SVCZ,,9.37,-66.92,184.0,CARRIZAL        ,,VE,METAR
SVFM,80416,10.48,-66.83,852.0,CARACAS/LA CARLO,,VE,METAR
SVGD,80448,7.22,-70.75,129.0,GUASDUALITO     ,,VE,METAR
SVGI,80423,10.57,-62.32,18.0,GUIRIA          ,,VE,METAR
SVGU,80428,9.03,-69.75,165.0,GUANARE         ,,VE,METAR
SVHG,,10.47,-66.08,7.0,HIGUEROTE       ,,VE,METAR
SVJC,,11.77,-70.15,21.0,PARAGUANA/JOSEFA,,VE,METAR TAF
SVJM,80431,9.92,-67.38,448.0,SAN JUAN LOS MOR,,VE,METAR
SVLF,,8.25,-72.27,88.0,LA FRIA         ,,VE,METAR
SVLO,80405,11.8,-66.18,3.0,LA ORCHILA ISL(M,,VE,METAR
SVMC,80407,10.57,-71.72,76.0,MARACAIBO/LA CHI,,VE,METAR TAF
SVMD,80438,8.58,-71.17,1495.0,MERIDA/ALBERTO C,,VE,METAR
SVMG,,10.92,-63.97,16.0,MARGARITA/DEL CA,,VE,METAR TAF
SVMI,80415,10.6,-67.0,48.0,CARACAS/S. BOLIV,,VE,METAR TAF
SVMN,80425,9.82,-70.88,29.0,MENE GRANDE     ,,VE,METAR
SVMP,,10.12,-66.77,175.0,METROPOLITANO (P,,VE,METAR
SVMT,80435,9.75,-63.17,67.0,MATURIN         ,,VE,METAR
SVPA,80457,5.62,-67.6,77.0,PUERTO AYACUCHO ,,VE,METAR
SVPC,80412,10.48,-68.07,10.0,PUERTO CABELLO(M,,VE,METAR
SVPM,,7.8,-72.2,1011.0,PARAMILLO (PRIVA,,VE,METAR
SVPR,,8.3,-62.77,140.0,GUAYANA/MANUEL C,,VE,METAR TAF
SVSA,80447,7.83,-72.45,383.0,SAN ANTONIO TACH,,VE,METAR TAF
SVSE,80462,4.55,-61.13,898.0,SANTA ELENA UAIR,,VE,METAR
SVSO,80475,7.57,-72.03,323.0,SANTO DOMINGO/MA,,VE,METAR
SVSP,,10.27,-68.75,236.0,SAN FELIPE      ,,VE,METAR
SVSR,80450,7.87,-67.43,49.0,SAN FERNANDO APU,,VE,METAR
SVST,,8.93,-64.15,260.0,SAN TOME (PRIVAT,,VE,METAR
SVSZ,,8.97,-71.95,4.0,SANTA BARBARA ZU,,VE,METAR
SVTM,80453,7.28,-61.45,181.0,TUMEREMO        ,,VE,METAR
SVTR,80478,9.02,-62.62,30.0,TEMBLADOR (PRIVA,,VE,METAR
SVVA,80472,10.15,-67.92,428.0,ZIM VALENCIA INT,,VE,METAR TAF
SVVG,,8.62,-71.67,70.0,EL VIGIA/PEREZ A,,VE,METAR
SVVL,80426,9.33,-70.58,575.0,VALERA/DR. ANTON,,VE,METAR
SVVP,80434,9.22,-65.98,178.0,VALLE DE LA PASC,,VE,METAR
SWBC,82113,-0.97,-62.92,40.0,BARCELOS        ,,BR,METAR
SWPI,,-2.67,-56.78,27.0,PARINTINS       ,,BR,METAR
SYCJ,81002,6.5,-58.25,30.0,GEORGETOWN/TIMEH,,GY,METAR TAF
SYEB,81010,5.57,-57.78,27.0,EBINI           ,,GY,TAF
SYEC,,6.8,-58.1,2.0,GEORGETOWN/CORRE,,GY,METAR TAF
SYGO,,6.8,-58.1,1.0,OGLE AIRPORT    ,,GY,METAR TAF
SYGT,81001,6.78,-58.13,2.0,GEORGETOWN      ,,GY,METAR TAF
SYKA,81080,5.18,-59.48,444.0,KAIETEUR FALLS  ,,GY,TAF
SYKM,81005,5.87,-60.62,488.0,KAMARANG        ,,GY,METAR TAF
SYKT,,4.65,-59.83,701.0,KATO            ,,GY,METAR TAF
SYLT,81006,3.37,-59.78,88.0,LETHEM          ,,GY,METAR TAF
SYMB,81100,8.2,-59.78,13.0,MABARUMA        ,,GY,METAR TAF
TAKA,,35.57,133.22,15.0,TAKAO RADAR     ,,JP
TAPA,78862,17.13,-61.78,15.0,COOLIDGE/ANTIGUA,,AG,METAR TAF
TBPB,78954,13.07,-59.48,55.0,GRANTLEY ADAMS  ,,BB,METAR rawinsonde TAF
TBPO,,13.08,-59.62,50.0,BRIDGETOWN CITY ,,BB,METAR
TDCF,78906,15.33,-61.4,4.0,CANEFIELD AIRPOR,,DM,METAR
TDPD,78905,15.55,-61.3,13.0,MELVILLE HALL AR,,DM,METAR TAF
TDPR,78907,15.3,-61.38,72.0,ROSEAU          ,,DM,METAR
TFFF,78925,14.6,-61.0,3.0,LE LAMENTIN/MART,,MQ,METAR TAF
TFFJ,78894,17.9,-62.85,290.0,GUSTAVIA/ST.BART,,GP,METAR
TFFR,78897,16.27,-61.53,6.0,LE RAIZET       ,,GP,METAR rawinsonde TAF
TGPY,78958,12.0,-61.78,12.0,POINT SALINES   ,,GD,METAR TAF
TIST,78543,18.33,-64.98,5.0,ST THOMAS (KING),,VI,METAR TAF
TISX,78547,17.7,-64.8,16.0,CHRISTIANSTED   ,,VI,METAR TAF
TJBQ,78514,18.5,-67.13,69.0,AGUADILLA/BORINQ,,PR,METAR TAF
TJIG,,18.45,-66.1,3.0,FERN LUIS RIBAS ,,PR,METAR
TJMZ,,18.27,-67.15,6.0,MAYAGUEZ/EUGENIO,,PR,METAR TAF
TJNR,78535,18.25,-65.63,7.0,ROOSEVELT RD NAS,,PR,METAR TAF
TJPS,,18.02,-66.57,12.0,PONCE/MERCEDITA ,,PR,METAR TAF
TJRV,,18.25,-65.63,11.0,ROOSEVELT RD NAS,,PR,METAR TAF
TJSJ,78526,18.43,-66.02,3.0,SAN JUAN/WFO    ,,PR,METAR rawinsonde WFO_office TAF
TJUA,,18.12,-66.08,852.0,SAN JUAN/CAYEY  ,,PR,METAR NEXRAD
TKPK,78858,17.3,-62.72,62.0,GOLDEN ROCKS/NEV,,KN,METAR TAF
TKPN,78859,17.2,-62.58,12.0,CHARLESTOWN/NEWC,,KN,METAR TAF
TLPC,78947,14.02,-61.0,8.0,VIGIE/ST LUCIA  ,,LC,METAR TAF
TLPL,78948,13.75,-60.95,13.0,HEWANORRA INTL  ,,LC,METAR TAF
TNCA,78982,12.5,-70.0,7.0,QUEEN BEATRIX   ,,AW,METAR TAF
TNCB,78990,12.13,-68.28,6.0,BONAIRE/FLAMINGO,,BQ,METAR TAF
TNCC,78988,12.2,-68.97,10.0,HATO AIR CURACAO,,CW,METAR rawinsonde TAF
TNCE,78873,17.48,-62.97,38.0,FDR ARPT/ORANJES,,BQ,METAR
TNCM,78866,18.05,-63.12,9.0,ST MAARTEN JULIA,,SX,METAR rawinsonde TAF
TQPF,78846,18.2,-63.05,33.0,WALL BLAKE      ,,AI,METAR TAF
TRPG,,16.78,-62.2,170.0,JOHN OSBORNE APT,,MS,METAR TAF
TRPM,,16.75,-62.17,12.0,BLACKBURNE/PLYMO,,AG,METAR
TSDM,78486,18.47,-69.88,14.0,SANTO DOMINGO   ,,DO,METAR rawinsonde
TTCP,,11.15,-60.85,13.0,CROWN PT/SCARBOR,,TT,METAR TAF
TTPP,78970,10.58,-61.35,11.0,PIARCO INT AIRPT,,TT,METAR rawinsonde TAF
TTPS,78967,10.65,-61.52,2.0,PORT OF SPAIN   ,,TT,METAR
TTPT,78962,11.15,-60.83,6.0,CROWN POINT AIRP,,TT,METAR
TUPJ,78550,18.43,-64.53,6.0,BEEF ISL/ROADTOW,,VG,METAR TAF
TVSA,,13.15,-61.15,3.0,ARGYLE          ,,VC,METAR TAF
TVSB,,12.98,-61.27,4.0,J F MITCHELL ARP,,VC,METAR
TVSC,78950,12.7,-61.35,2.0,CANOUAN AIRPORT ,,VC,METAR
TVSM,,12.88,-61.18,10.0,MUSTIQUE        ,,VC,METAR
TVSU,,12.6,-61.42,15.0,UNION ISLAND    ,,VC,METAR
TVSV,78951,13.13,-61.2,7.0,ARNOS VALE/ST V ,,VC,METAR TAF
TXKF,78016,32.37,-64.68,4.0,BERMUDA NAS     ,,BM,METAR rawinsonde TAF
UAAA,36870,43.35,77.03,673.0,ALMA-ATA        ,,KZ,METAR TAF
UAAH,,46.9,75.0,427.0,BALKHASH        ,,KZ,METAR TAF
UAAN,36874,43.6,76.32,685.0,UZUNAGAC        ,,KZ,METAR
UAAT,,45.12,78.45,588.0,TALDY KURGAN    ,,KZ,METAR TAF
UACC,35188,51.02,71.47,354.0,ASTANA KAZAKHSTA,,KZ,METAR TAF
UACK,,53.32,69.58,261.0,KOKSHETAU       ,,KZ,METAR TAF
UACP,28679,54.78,69.18,134.0,PETROPAVLOVSK   ,,KZ,METAR TAF
UADD,,42.85,71.3,663.0,TARAZ           ,,KZ,METAR TAF
UAFF,38353,42.85,74.52,760.0,FRUNZE          ,,KZ,METAR
UAFM,,43.07,74.48,760.0,BISHKEK/MANAS   ,,KZ,METAR TAF
UAFO,,40.6,72.8,892.0,OSH             ,,KZ,METAR TAF
UAII,38328,42.37,69.48,410.0,CIMKENT         ,,KZ,METAR TAF
UAIT,,43.32,68.55,301.0,TURKISTAN       ,,KZ,METAR TAF
UAKD,35671,47.7,67.73,379.0,ZHEZKAZGAN      ,,KZ,METAR TAF
UAKK,35394,49.68,73.35,532.0,KARAGANDA       ,,KZ,METAR TAF
UAOO,38062,44.7,65.6,130.0,KZYL-ORDA       ,,KZ,METAR TAF
UARR,35108,51.15,51.53,33.0,URALSK          ,,KZ,METAR TAF
UASK,,50.03,82.5,285.0,UST KAMENOGORSK ,,KZ,METAR TAF
UASP,36003,52.2,77.07,122.0,PAVLODAR        ,,KZ,METAR TAF
UASS,,50.35,80.23,215.0,SEMIPALATINSK   ,,KZ,METAR TAF
UATA,35746,46.78,61.65,56.0,ARALSK          ,,KZ,METAR
UATE,38001,43.87,51.1,21.0,AKTAU KAZAKHSTAN,,KZ,METAR TAF
UATG,,47.12,51.83,-23.0,ATYRAU          ,,KZ,METAR TAF
UATR,35633,47.85,59.62,176.0,CELKAR          ,,KZ,METAR
UATT,35229,50.25,57.2,217.0,AKTJUBINSK      ,,KZ,METAR TAF
UAUU,,53.2,63.55,177.0,KOSTANAY        ,,KZ,METAR TAF
UBBB,37864,40.47,50.07,94.0,BAKU/BINE ARPT  ,,AZ,METAR TAF
UBBF,,39.6,47.2,370.0,FUZULI          ,,AZ,METAR TAF
UBBG,,40.73,46.32,333.0,GYANDZHA        ,,AZ,METAR TAF
UBBL,,38.75,48.82,-11.0,LENKORAN        ,,AZ,METAR TAF
UBBN,,39.18,45.45,857.0,NAKHCHIVAN      ,,AZ,METAR TAF
UBBQ,,40.82,47.72,339.0,QABALA          ,,AZ,METAR TAF
UBBY,,41.57,46.67,383.0,ZAKATALY        ,,AZ,METAR TAF
UBBZ,,39.1,46.73,489.0,ZANGILAN        ,,AZ,METAR TAF
UBEE,,40.63,47.13,14.0,YEVLAKH         ,,AZ,METAR TAF
UCFL,,42.58,76.7,1654.0,TAMCHY          ,,KG,METAR TAF
UCFM,,43.07,74.48,632.0,MANAS           ,,KG,METAR TAF
UCFO,,40.6,72.8,881.0,OSH             ,,KG,METAR TAF
UDSG,,40.75,43.87,1515.0,SHIRAK          ,,AM,METAR TAF
UDYZ,,40.15,44.4,851.0,ZVARTNOTS       ,,AM,METAR TAF
UEEE,24959,62.08,129.77,106.0,YAKUTSK         ,,RU,METAR TAF
UELL,30393,56.92,124.92,846.0,CULMAN/NERIUGRI ,,RU,METAR TAF
UERP,,66.4,112.03,514.0,POLYARNY        ,,RU,METAR TAF
UERR,24726,62.53,114.05,352.0,MIRNY           ,,RU,METAR TAF
UESO,,70.63,147.88,31.0,CHOKURDAKH      ,,RU,METAR TAF
UEST,21824,71.7,128.9,7.0,TIKSI           ,,RU,METAR TAF
UGAM,,42.53,43.13,544.0,AMBROLAURI      ,,GE,METAR TAF
UGEE,37789,40.12,44.47,907.0,YEREVAN/ZAPADNY ,,AM,METAR TAF
UGEL,,40.75,43.85,1524.0,SHIRAK          ,,AM,METAR TAF
UGKO,,42.18,42.48,44.0,KOPITNARI       ,,GE,METAR TAF
UGMM,37541,41.92,44.57,551.0,MUHRANI         ,,GE,METAR
UGMS,,43.05,42.75,1442.0,MESTIA          ,,GE,METAR TAF
UGSB,37484,41.62,41.6,32.0,BATUMI          ,,GE,METAR TAF
UGSP,37379,42.15,41.67,3.0,POTI (PORT)     ,,GE,METAR
UGTB,,41.67,44.95,468.0,TBILISI/NOVO-AL ,,GE,METAR TAF
UHBB,,50.43,127.42,185.0,BLAGOVESHCHENSK ,,RU,METAR TAF
UHBP,31329,53.07,132.92,543.0,EKIMCAN         ,,RU,METAR
UHHH,31735,48.52,135.18,74.0,KHABAROVSK/NOVY ,,RU,METAR TAF
UHHO,31655,49.45,136.57,29.0,TROICKOE        ,,RU,METAR
UHMA,25563,64.73,177.73,53.0,ANADYR'         ,,RU,METAR TAF
UHMD,25594,64.38,-173.23,40.0,PROVIDENJA BAY  ,,RU,METAR TAF
UHMG,,61.83,160.55,61.0,CHAYBUKHA       ,,RU,METAR
UHMI,,68.9,-179.45,1.0,MYS SCHMIDTA    ,,RU,TAF
UHML,25496,65.58,-171.0,9.0,LAVRENTIJA      ,,RU,METAR TAF
UHMM,25913,59.92,150.72,175.0,MAGADAN/NAGAEVO ,,RU,METAR TAF
UHMO,,64.65,170.45,18.0,MARKOVO         ,,RU,METAR
UHMP,25551,69.78,170.6,4.0,PEVEK           ,,RU,METAR TAF
UHMR,25677,63.03,179.32,1.0,UGOLNAYA BAY/BE ,,RU,METAR
UHNN,31369,53.15,140.65,57.0,NIKOLAEVSK-NA-AM,,RU,METAR TAF
UHPP,32540,53.17,158.45,33.0,PETROPAVLOVSK-KA,,RU,METAR TAF
UHSH,,53.52,142.88,30.0,OKHA            ,,RU,METAR TAF
UHSS,32150,46.88,142.72,14.0,JUZNO-SAHALINSK ,,RU,METAR TAF
UHWW,31960,43.4,132.15,11.0,VLADIVOSTOK     ,,RU,METAR TAF
UIAA,,52.02,113.32,650.0,CITA/KADALA     ,,RU,METAR TAF
UIBB,30309,56.37,101.7,485.0,BRATSK/IRKUTSK  ,,RU,METAR TAF
UIII,30710,52.27,104.37,480.0,IRKUTSK         ,,RU,METAR TAF
UIIO,30713,52.82,104.77,525.0,UST-ORDYNSKIJ   ,,RU,METAR
UIKB,30253,57.85,114.2,278.0,BODAJBO         ,,RU,METAR
UIKK,30230,57.77,108.07,258.0,KIRENSK         ,,RU,METAR
UIKW,30054,59.45,112.57,193.0,VITIM-IN-YAKUT  ,,RU,METAR
UINN,29698,54.87,99.02,410.0,NIZNE-UDINSK    ,,RU,METAR
UIUH,30739,52.17,109.77,666.0,HORINSK         ,,RU,METAR
UIUU,30823,51.8,107.45,508.0,ULAN-UDE/MUHINO ,,RU,METAR TAF
UJAP,99449,8.92,165.75,2.0,UJAE ATOLL/MARSH,,RU,METAR
UKBB,33347,50.33,30.9,125.0,BORISPOL'/KIEV  ,,UA,METAR TAF
UKCC,34519,48.08,37.75,235.0,DONETSK         ,,UA,METAR TAF
UKCM,34712,47.08,37.45,72.0,MARIUPOL INTL   ,,UA,METAR TAF
UKCW,,48.42,39.38,187.0,LUHANSK         ,,UA,METAR TAF
UKDD,,48.37,35.1,147.0,DNIPROPETROVSK  ,,UA,METAR TAF
UKDE,34601,47.87,35.32,106.0,MOKRAYA         ,,UA,METAR TAF
UKDR,33791,48.05,33.22,119.0,KRIVYY RIH      ,,UA,METAR TAF
UKFF,33946,45.03,33.98,187.0,SIMFEROPOL'     ,,UA,METAR TAF
UKHH,34300,49.92,36.28,149.0,HAR'KOV/OSNOVA  ,,UA,METAR TAF
UKII,33815,47.02,28.87,180.0,CHISINAU        ,,MD,METAR
UKKE,,49.42,32.0,108.0,CHERKASY        ,,UA,METAR TAF
UKKK,33345,50.4,30.45,175.0,KIEV/ZHYLIANY   ,,UA,METAR TAF
UKKM,,50.6,30.2,156.0,GOSTOMEL'       ,,UA,METAR TAF
UKLI,,48.88,24.68,273.0,IVANO-FRANKIVSK ,,UA,METAR TAF
UKLL,33393,49.82,23.95,316.0,LVIV            ,,UA,METAR TAF
UKLN,33658,48.27,25.98,242.0,CHERNOVTSY      ,,UA,METAR TAF
UKLR,33301,50.6,26.13,227.0,ROVNO           ,,UA,METAR TAF
UKLU,33631,48.63,22.27,111.0,UZHGOROD        ,,UA,METAR TAF
UKOH,33902,46.67,32.5,43.0,KHERSON         ,,UA,METAR TAF
UKON,33846,47.05,31.92,48.0,MYKOLAIV        ,,UA,METAR TAF
UKOO,33837,46.42,30.68,52.0,ODESSA/TSENTRALN,,UA,METAR TAF
UKWW,,49.25,28.6,293.0,VINNITSA        ,,UA,METAR TAF
ULAA,22550,64.6,40.72,10.0,ARHANGELSK      ,,RU,METAR TAF
ULDD,23022,69.75,61.57,1.0,AMDERMA         ,,RU,METAR TAF
ULKK,22887,61.23,46.7,52.0,KOTLAS          ,,RU,METAR TAF
ULLI,26063,59.8,30.27,25.0,ST PETERSBURG   ,,RU,METAR TAF
ULMM,22113,68.78,32.75,79.0,MURMANSK        ,,RU,METAR TAF
ULOL,26477,56.37,30.6,98.0,VELIKIE LUKI    ,,RU,METAR TAF
ULOO,26478,57.78,28.4,46.0,PSKOV           ,,RU,METAR TAF
ULPB,,61.88,34.15,41.0,PETROZAVODSK    ,,RU,METAR TAF
ULWC,,59.28,38.02,113.0,BOTOVO/CHEREPOVE,,RU,METAR TAF
ULWT,27051,59.87,42.75,134.0,TOT'MA          ,,RU,METAR
ULWW,27037,59.28,39.93,116.0,VOLOGDA         ,,RU,METAR TAF
UMBB,33008,52.12,23.9,138.0,BREST           ,,BY,METAR TAF
UMGG,33041,52.53,31.02,135.0,GOMEL           ,,BY,METAR TAF
UMII,26666,55.13,30.35,208.0,VITEBSK         ,,BY,METAR TAF
UMIO,,54.43,30.3,189.0,ORSHA           ,,BY,METAR TAF
UMKK,26702,54.88,20.57,6.0,KALININGRAD     ,,RU,METAR TAF
UMLI,,53.77,27.58,214.0,UNKNOWN         ,,BY,METAR
UMMG,26825,53.6,24.05,125.0,GRODNO          ,,BY,METAR TAF
UMMM,,53.87,27.53,221.0,MINSK-IN-MIN    ,,BY,METAR TAF
UMMS,26850,53.88,28.03,196.0,MINSK           ,,BY,METAR TAF
UMOO,,53.95,30.1,188.0,MOGILEV         ,,BY,METAR TAF
UMRR,26422,56.97,24.07,3.0,RIGA            ,,LV,METAR
UMRW,26314,57.37,21.55,4.0,VENTSPILS (HARBO,,LV,METAR
UNAA,,53.75,91.4,249.0,ABAKAN          ,,RU,METAR TAF
UNBB,29838,53.37,83.53,249.0,BARNAUL         ,,RU,METAR TAF
UNCE,,53.72,87.17,308.0,NOVOKUZNETSK    ,,RU,METAR
UNCL,29231,58.28,82.87,76.0,KOLPASHEVO-IN-T ,,RU,METAR
UNEE,29642,55.27,86.1,261.0,KEMEROVO        ,,RU,METAR TAF
UNII,29263,58.45,92.15,78.0,JENISEJSK       ,,RU,METAR
UNKA,29865,53.75,91.4,245.0,ABAKAN          ,,RU,METAR
UNKI,24908,60.32,102.27,260.0,VANAVARA        ,,RU,METAR
UNKK,29574,56.0,92.87,277.0,KRASNOJARSK     ,,RU,METAR
UNKL,,56.17,92.48,278.0,KRASNOYARSK     ,,RU,METAR TAF
UNKT,23884,61.6,90.0,63.0,PODKAMENNAYA TU ,,RU,METAR
UNNN,29634,55.08,82.98,177.0,NOVOSIBIRSK/TOLM,,RU,METAR
UNNT,,55.02,82.65,106.0,TOLMACHEVO      ,,RU,METAR TAF
UNOO,28698,54.97,73.32,85.0,TSENTRALNY/OMSK ,,RU,METAR TAF
UNTT,,56.38,85.22,179.0,PLOTNIKOVO/TOMSK,,RU,METAR TAF
UNWW,29846,53.82,86.88,307.0,NOVOKUZNETSK    ,,RU,METAR TAF
UOHH,38402,71.98,102.47,53.0,KHATANGA        ,,RU,METAR TAF
UOII,38401,67.43,86.62,29.0,IGARKA          ,,RU,METAR TAF
UOOO,,69.32,87.33,177.0,ALYKEL          ,,RU,METAR TAF
URFF,,45.03,33.98,190.0,SIMFEROPOL'     ,,RU,METAR TAF
URKA,37001,45.0,37.35,41.0,ANAPA/VITIAZEVO ,,RU,METAR TAF
URKK,34929,45.03,39.15,29.0,KRASNODAR       ,,RU,METAR TAF
URKM,,44.68,40.03,177.0,MAYKOP          ,,RU,METAR TAF
URMG,37235,43.38,45.7,160.0,GROZNY          ,,RU,METAR TAF
URML,,42.82,47.65,4.0,UYTASH          ,,RU,METAR TAF
URMM,37054,44.22,43.07,318.0,MINERALYNE VODY ,,RU,METAR TAF
URMN,37212,43.52,43.63,424.0,NALCHIK         ,,RU,METAR TAF
URMO,,43.2,44.6,505.0,BESLAN          ,,RU,METAR TAF
URMT,34949,45.12,42.12,448.0,STAVROPOL/SHPAKO,,RU,METAR TAF
URRP,,47.5,39.92,73.0,PLATOV          ,,RU,METAR TAF
URRR,34731,47.25,39.82,81.0,ROSTOV-ON-DON   ,,RU,METAR TAF
URSS,37171,43.45,39.92,4.0,SOTCHI          ,,RU,METAR TAF
URWA,,46.28,47.98,-19.0,ASTRAKHAN       ,,RU,METAR TAF
URWI,34861,46.37,44.33,145.0,ELISTA          ,,RU,METAR TAF
URWW,34560,48.78,44.33,131.0,VOLGOGRAD/GUMRAK,,RU,METAR TAF
USCC,28642,55.3,61.5,227.0,CHELYABINSK-BALA,,RU,METAR TAF
USCM,,53.4,58.75,425.0,MAGNITOGORSK    ,,RU,METAR TAF
USDA,,71.2,72.05,5.0,SABETTE         ,,RU,METAR TAF
USDD,,66.58,66.62,53.0,SALEKHARD       ,,RU,METAR TAF
USHH,23933,61.03,69.08,46.0,KHANTY-MANSIYSK ,,RU,METAR TAF
USMM,,65.48,72.7,15.0,NADYM           ,,RU,METAR TAF
USMU,,66.07,76.52,62.0,NOVYI URENGOI   ,,RU,METAR TAF
USNN,,60.95,76.48,52.0,NIZHNEVARTOVSK  ,,RU,METAR TAF
USNR,,62.15,77.33,76.0,RADUZHNY        ,,RU,METAR TAF
USPP,28225,57.92,56.02,120.0,PERM/BOLSHOE SAV,,RU,METAR TAF
USRK,,62.18,74.53,67.0,RUSSKINSKAJA    ,,RU,METAR TAF
USRR,23849,61.33,73.42,52.0,SURGUT          ,,RU,METAR TAF
USSI,23921,60.67,60.42,101.0,IVDEL-IN-SVERDL ,,RU,METAR
USSS,28440,56.75,60.78,222.0,EKATERINBURG    ,,RU,METAR TAF
USTR,,57.18,65.32,93.0,ROSCHINO        ,,RU,METAR TAF
UTAA,38880,37.98,58.37,207.0,ASHGABAT        ,,TL,METAR TAF
UTAK,,40.05,53.0,83.0,TURKMENBASHI    ,,TL,METAR TAF
UTAM,,37.62,61.9,218.0,MARY            ,,TL,METAR TAF
UTAT,,41.77,59.83,84.0,DASHOGUZ        ,,TL,METAR TAF
UTAV,38687,39.08,63.62,187.0,TURKMENABAT     ,,TL,METAR TAF
UTDD,38836,38.53,68.82,785.0,DUSHANBE        ,,TJ,METAR TAF
UTDK,,37.98,69.8,675.0,KOLUB           ,,TJ,METAR TAF
UTDL,,40.22,69.7,436.0,KHUDZHAND       ,,TJ,METAR TAF
UTDT,,37.87,68.87,443.0,QURGHONTEPPA    ,,TJ,METAR TAF
UTED,38579,40.12,67.82,345.0,DZIZAK          ,,TL,METAR
UTFA,,40.73,72.3,474.0,ANDIZAN         ,,UZ,METAR TAF
UTFF,,40.37,71.73,612.0,FERGANA         ,,UZ,METAR TAF
UTFN,38611,40.98,71.57,477.0,NAMANGAN        ,,UZ,METAR TAF
UTKN,,40.98,71.58,474.0,NAMANGAN        ,,UZ,METAR TAF
UTNN,,42.48,59.63,76.0,NUKUS/KARAKALPAK,,UZ,METAR TAF
UTNU,,41.58,60.63,97.0,URGENCH         ,,UZ,METAR TAF
UTSA,38567,40.12,65.17,346.0,NAVOI           ,,UZ,METAR TAF
UTSB,,39.77,64.48,225.0,BUKHARA         ,,UZ,METAR TAF
UTSH,,39.03,66.78,599.0,SHAHRISABZ      ,,TL,METAR
UTSK,,38.8,65.77,399.0,KARSHI KHANABAD ,,UZ,METAR TAF
UTSM,38413,41.72,64.62,238.0,TAMDY-BULAK     ,,TL,METAR
UTSS,38696,39.7,66.98,665.0,SAMARKAND       ,,UZ,METAR TAF
UTST,38927,37.28,67.32,311.0,TERMEZ          ,,UZ,METAR TAF
UTTP,,41.32,69.38,466.0,TASHKENT-VOSTOCH,,UZ,METAR TAF
UTTT,38457,41.27,69.27,429.0,TASKENT/YUZNI   ,,UZ,METAR TAF
UUBC,27703,54.55,36.37,198.0,UGRYUMOVO       ,,RU,METAR TAF
UUBI,27347,56.93,40.95,121.0,IVANOVO SOUTH   ,,RU,METAR TAF
UUBP,26898,53.22,34.18,197.0,BRJANSK         ,,RU,METAR TAF
UUBW,,55.55,38.15,111.0,MOSCOW/NOVOYE SR,,RU,METAR TAF
UUDD,,55.4,37.9,165.0,MOSCOW/DOMODEDOV,,RU,METAR TAF
UUDL,,57.57,40.17,88.0,YAROSLAV        ,,RU,METAR TAF
UUEE,,55.97,37.42,186.0,MOSCOW/SHEREMET',,RU,METAR TAF
UUEM,27402,56.82,35.75,138.0,KALININ/MIGALOVO,,RU,METAR TAF
UUMO,,55.52,37.5,167.0,OSTAFYEVO INTL  ,,RU,METAR TAF
UUOB,34214,50.65,36.58,218.0,BELGOROD        ,,RU,METAR TAF
UUOK,,51.75,36.28,203.0,KURSK           ,,RU,METAR TAF
UUOL,27930,52.7,39.53,176.0,LIPETSK         ,,RU,METAR TAF
UUOO,34122,51.82,39.23,154.0,VORONEZ         ,,RU,METAR TAF
UUWW,,55.6,37.27,195.0,MOSCOW/VNUKOVO  ,,RU,METAR TAF
UUYH,,63.57,53.8,134.0,UKHTA           ,,RU,METAR TAF
UUYS,23221,66.0,57.37,70.0,USINSK          ,,RU,METAR TAF
UUYT,23803,61.67,53.67,139.0,UST-KULOM       ,,RU,METAR
UUYW,23226,67.48,64.0,173.0,VORKUTA         ,,RU,METAR TAF
UUYY,23804,61.65,50.83,107.0,SYKTYVKAR       ,,RU,METAR TAF
UWGG,27459,56.23,43.78,73.0,NIZHNY NOVGOROD ,,RU,METAR TAF
UWKD,27595,55.62,49.28,114.0,KAZAN           ,,RU,METAR TAF
UWKE,27607,55.57,52.08,193.0,BEGISHEVO       ,,RU,METAR TAF
UWKS,,56.08,47.35,165.0,CHEBOKSARY      ,,RU,METAR TAF
UWLL,27786,54.27,48.23,119.0,ULJANOVSK       ,,RU,METAR TAF
UWLW,,54.4,48.8,67.0,ULYANOVSK       ,,RU,METAR TAF
UWOO,35121,51.8,55.47,90.0,ORENBURG/TSENTRA,,RU,METAR TAF
UWOR,37865,51.07,58.6,270.0,ORSK            ,,RU,METAR TAF
UWPP,27962,53.12,45.02,168.0,PENZA (STREAM)  ,,RU,METAR TAF
UWPS,,54.12,45.2,206.0,SARANSK         ,,RU,METAR TAF
UWSG,,51.72,46.17,31.0,SARATOV/GAGARIN ,,RU,METAR TAF
UWSS,34172,51.57,46.03,147.0,SARATOV/TSENTRAL,,RU,METAR TAF
UWUU,28722,54.57,55.87,137.0,BASHKORTOSTAN   ,,RU,METAR TAF
UWWS,,53.22,50.32,44.0,KUJBYSEV/BEZENCU,,RU,METAR TAF
UWWW,28900,53.5,50.17,124.0,KURUMOCH        ,,RU,METAR TAF
VAAH,42647,23.07,72.63,52.0,AHMADABAD       ,,IN,METAR TAF
VAAK,42934,20.68,77.07,309.0,AKOLA AIRPORT   ,,IN,METAR
VAAU,43014,19.85,75.4,578.0,AURANGABAD AIRPO,,IN,METAR TAF
VABB,43003,19.1,72.87,14.0,BOMBAY/SANTACRUZ,,IN,METAR TAF
VABI,42080,31.25,76.67,587.0,BILASPUR        ,,IN,METAR
VABJ,42634,23.28,69.67,79.0,BHUJ-RUDRAMATA(A,,IN,METAR TAF
VABM,,15.85,74.62,766.0,BELGAUM/SAMBRA  ,,IN,METAR TAF
VABO,42748,22.33,73.22,36.0,VADODARA        ,,IN,METAR TAF
VABP,42667,23.28,77.33,520.0,BHOPAL/BAIRAGARH,,IN,METAR TAF
VABV,42838,21.75,72.2,8.0,BHAUNAGAR       ,,IN,METAR TAF
VADU,,21.72,70.92,10.0,DIU             ,,IN,METAR TAF
VAID,42754,22.72,75.8,564.0,INDORE          ,,IN,METAR TAF
VAJB,42675,23.18,80.05,489.0,JABALPUR        ,,IN,METAR TAF
VAJJ,43002,19.08,72.83,1.0,BOMBAY/JUHU     ,,IN,METAR
VAJL,,20.97,75.63,257.0,JALGAON         ,,IN,METAR TAF
VAJM,42734,22.43,70.07,20.0,JAMNAGAR (IN-AFB,,IN,METAR TAF
VAKD,42855,21.82,76.37,318.0,KHANDWA         ,,IN,METAR
VAKE,,23.13,70.12,29.0,KANDLA AERODROME,,IN,METAR TAF
VAKP,43157,16.65,74.28,612.0,KOLHAPUR        ,,IN,METAR TAF
VAKS,,21.32,70.32,51.0,KESHOD          ,,IN,METAR
VANP,42867,21.08,79.05,309.0,NAGPUR SONEGAON ,,IN,METAR TAF
VAOZ,42920,20.12,73.92,598.0,NASIK OJHAR(AFS),,IN,METAR TAF
VAPO,43064,18.57,73.92,593.0,PUNE/POONA (IN-A,,IN,METAR TAF
VAPR,42830,21.63,69.67,8.0,PORBANDAR       ,,IN,METAR TAF
VARK,42737,22.3,70.77,125.0,RAJKOT          ,,IN,METAR TAF
VARP,42875,21.22,81.65,298.0,RAIPUR          ,,IN,METAR TAF
VASD,,19.68,74.38,587.0,SHIRDI          ,,IN,METAR TAF
VASL,43117,17.67,75.9,479.0,SHOLAPUR        ,,IN,METAR TAF
VASU,,21.12,72.73,6.0,SURAT           ,,IN,METAR TAF
VAUD,42542,24.62,73.9,506.0,UDIAPUR         ,,IN,METAR TAF
VBBM,48019,24.27,97.2,113.0,BHAMO           ,,MM,METAR
VBBS,48094,16.77,94.77,10.0,PATHEIN/BASSEIN ,,MM,METAR
VBCI,48109,14.12,93.37,3.0,COCO ISLAND     ,,MM,METAR
VBHL,48010,24.87,94.92,131.0,HOMALIN         ,,MM,METAR
VBKG,48060,21.3,99.62,828.0,KENGTUNG        ,,MM,METAR
VBKP,48071,19.42,93.53,5.0,KYAUKPYU/RAMREE ,,MM,METAR
VBLS,48035,22.92,97.75,749.0,LASHIO          ,,MM,METAR
VBMK,48008,25.37,97.4,147.0,MYITKYINA       ,,MM,METAR
VBML,48053,20.82,95.82,220.0,MEIKTILA        ,,MM,METAR
VBMM,48103,16.5,97.62,22.0,MOULMEIN        ,,MM,METAR
VBMS,48070,20.55,99.27,572.0,MONGHSAT        ,,MM,METAR
VBNU,48048,21.18,94.92,55.0,NYAUNG-U/PAGAN  ,,MM,METAR
VBPA,48099,16.75,97.67,10.0,HPA-AN/PA-AN    ,,MM,METAR
VBPG,48093,17.32,96.5,15.0,BAGO/PEGU       ,,MM,METAR
VBPR,48077,18.8,95.22,60.0,PROME/PYE       ,,MM,METAR
VBPT,48001,27.32,97.42,409.0,PUTAO           ,,MM,METAR
VBRA,,20.12,92.87,5.0,AKYAB           ,,MM,METAR
VBRM,48042,21.97,96.08,76.0,MANDALAY        ,,MM,METAR
VBRN,48110,12.42,98.58,37.0,MERGUI          ,,MM,METAR
VBRR,48096,16.88,96.17,29.0,RANGOON/MINGALAD,,MM,METAR
VBSY,48080,18.47,94.33,11.0,SANDOWAY/MAZIN  ,,MM,METAR
VBTV,48108,14.08,98.22,17.0,DAWEI           ,,MM,METAR
VBYE,48107,15.25,97.87,7.0,YE              ,,MM,METAR
VCBI,43450,7.17,79.88,10.0,COLOMBO/KATUNAYA,,LK,METAR TAF
VCCA,43421,8.32,80.42,89.0,ANURADHAPURA (AF,,LK,METAR
VCCB,43436,7.72,81.7,12.0,BATTICALOA (AFB),,LK,METAR
VCCC,43467,6.82,79.88,6.0,COLOMBO/RATMALAN,,LK,METAR
VCCT,43418,8.57,81.25,7.0,TRINCOMALEE (AFB,,LK,METAR
VCRI,,6.28,81.13,50.0,MATTALA RAJAPAKS,,LK,METAR TAF
VDGB,48962,13.08,103.2,13.0,BATTAMBANG      ,,KH,METAR
VDKC,48995,12.0,105.45,16.0,KOMPONG-CHAM    ,,KH,METAR
VDKH,48969,12.25,104.67,15.0,KAMPONG CHHNANG ,,KH,METAR
VDPP,48991,11.55,104.83,10.0,PHNOM-PENH/POCHE,,KH,METAR TAF
VDSR,48966,13.42,103.8,16.0,SIEMREAP        ,,KH,METAR TAF
VDST,48972,13.52,105.97,56.0,STUNG TRENG     ,,KH,METAR
VDSV,,10.58,103.63,1.0,SIHANOUKVILLE   ,,KH,METAR TAF
VEAB,,25.43,81.73,98.0,ALLAHABAD       ,,IN,METAR TAF
VEAN,,28.18,94.8,274.0,ALONG           ,,IN,METAR TAF
VEAT,42724,23.88,91.25,20.0,AGARTALA        ,,IN,METAR TAF
VEBD,42398,26.68,88.33,126.0,BAGHDOGRA (IN-AF,,IN,METAR TAF
VEBI,,25.7,91.98,892.0,SHILLONG        ,,IN,METAR TAF
VEBN,42479,25.45,82.85,81.0,VARANASI        ,,IN,METAR TAF
VEBS,42971,20.25,85.82,42.0,BHUBANESWAR     ,,IN,METAR TAF
VEBU,,21.98,82.12,274.0,BILASPUR        ,,IN,METAR TAF
VECC,42809,22.65,88.43,11.0,CALCUTTA/DUM DUM,,IN,METAR TAF
VECO,42403,26.33,89.47,48.0,COOCH BEHAR     ,,IN,METAR TAF
VECX,43368,9.15,92.82,14.0,CAR NICOBAR(IN-A,,IN,METAR TAF
VEDG,,23.62,87.25,88.0,KAZI NAJRUL     ,,IN,METAR TAF
VEDO,,24.45,86.7,244.0,DEOGHAR         ,,IN,METAR TAF
VEDZ,,27.98,94.22,229.0,DAPORIJO        ,,IN,METAR TAF
VEGK,42379,26.75,83.45,83.0,GORAKHPUR (IN-AF,,IN,METAR TAF
VEGT,42410,26.1,91.58,50.0,GAUHATI (IN-AFB),,IN,METAR TAF
VEGY,42591,24.75,84.95,115.0,GAYA            ,,IN,METAR TAF
VEIM,42623,24.77,93.9,777.0,IMPHAL/TULIHAL  ,,IN,METAR TAF
VEJH,42886,21.92,84.03,231.0,JHARSUGUDA      ,,IN,METAR TAF
VEJR,,19.07,82.03,555.0,JAGDALPUR       ,,IN,METAR TAF
VEJS,42798,22.82,86.17,151.0,JAMSHEDPUR(PRIVA,,IN,METAR TAF
VEJT,,26.73,94.17,95.0,JORHAT          ,,IN,METAR TAF
VEKI,,26.78,83.88,81.0,KUSHINAGAR      ,,IN,METAR TAF
VEKO,,24.82,79.92,222.0,KHAJURAHO       ,,IN,METAR TAF
VEKU,,24.92,92.98,107.0,SILCHAR_KUMBHIGR,,IN,METAR TAF
VELP,42726,23.83,92.62,429.0,LENGPUI         ,,IN,METAR TAF
VELR,42309,27.3,94.1,101.0,NORTH LAKHIMPUR/,,IN,METAR TAF
VEMH,42503,25.02,88.12,31.0,MALDA           ,,IN,METAR
VEMN,42314,27.47,95.02,111.0,DIBRUGARH/MOHANB,,IN,METAR TAF
VEMR,,25.88,93.77,147.0,DIMAPUR         ,,IN,METAR TAF
VEPB,43333,11.67,92.72,79.0,PORT BLAIR      ,,IN,METAR
VEPT,42492,25.6,85.08,53.0,PATNA           ,,IN,METAR TAF
VEPY,,27.22,88.58,1399.0,PAKYONG         ,,IN,METAR TAF
VERB,,26.25,81.38,110.0,FURSATGANJ      ,,IN,METAR
VERC,42701,23.32,85.32,646.0,RANCHI          ,,IN,METAR TAF
VERK,42793,22.22,84.87,196.0,ROURKELA (PRIVAT,,IN,METAR
VERL,42382,26.97,84.83,79.0,RAXAUL          ,,IN,METAR
VERP,,21.18,81.73,318.0,RAIPUR          ,,IN,METAR TAF
VERU,,26.13,89.92,45.0,RUPSI           ,,IN,METAR TAF
VETJ,,27.93,96.13,244.0,TEZU            ,,IN,METAR TAF
VETZ,,26.72,92.78,73.0,TEZPUR          ,,IN,METAR TAF
VEZO,,27.58,93.83,1647.0,ZERO            ,,IN,METAR TAF
VGBG,41883,24.85,89.37,20.0,BOGRA           ,,BD,METAR
VGCB,41992,21.42,91.97,4.0,COX'S BAZAR     ,,BD,METAR
VGCM,41933,23.42,91.17,10.0,COMILLA         ,,BD,METAR
VGEG,41978,22.23,91.82,7.0,CHITTAGONG (CV/M,,BD,METAR TAF
VGHS,,23.85,90.4,11.0,DHAKA           ,,BD,METAR TAF
VGIS,41907,24.12,89.03,14.0,ISHURDI         ,,BD,METAR
VGJR,41936,23.17,89.17,7.0,JESSORE (CIV/MIL,,BD,METAR
VGRJ,41895,24.37,88.7,20.0,RAJSHAHI        ,,BD,METAR
VGSG,41852,26.02,88.4,54.0,THAKURGAON      ,,BD,METAR
VGSY,41891,24.97,91.87,16.0,SYLHET OSMANI   ,,BD,METAR
VGTJ,41923,23.77,90.37,9.0,DHAKA/TEJGAON (M,,BD,METAR
VHCH,45001,22.18,114.02,79.0,CHEUNG CHAU     ,,CN,METAR
VHHH,45007,22.32,113.92,9.0,HONG KONG INTL  ,,CN,METAR TAF
VIAG,42260,27.15,77.97,159.0,AGRA (IN-AFB)   ,,IN,METAR TAF
VIAH,42262,27.87,78.07,187.0,ALIGARH         ,,IN,METAR
VIAL,42475,25.43,81.72,98.0,ALLAHABAD (IN-AF,,IN,METAR
VIAR,42071,31.7,74.8,226.0,AMRITSAR        ,,IN,METAR TAF
VIBN,,25.45,82.87,83.0,VARANASI/BABATPU,,IN,METAR TAF
VIBR,42081,31.82,77.15,1089.0,KULLU           ,,IN,METAR TAF
VIBT,42097,30.17,74.57,211.0,BHATINDA        ,,IN,METAR TAF
VIBY,42189,28.42,79.45,175.0,BAREILLY (IN-AFB,,IN,METAR TAF
VICG,42105,30.67,76.78,316.0,CHANDIGARH      ,,IN,METAR TAF
VICX,42367,26.38,80.4,126.0,KANPUR/CHAKERI(A,,IN,METAR TAF
VIDD,42182,28.58,77.22,213.0,DELHI/SAFDARJUNG,,IN,METAR
VIDN,,30.2,78.18,550.0,DEHRADUN        ,,IN,METAR TAF
VIDP,42181,28.57,77.12,236.0,INDIRA GANDHI/DE,,IN,METAR TAF
VIGG,,32.17,76.25,760.0,KANGRA          ,,IN,METAR TAF
VIGR,,26.28,78.22,187.0,GWALIOR (IN-AFB),,IN,METAR TAF
VIHR,42131,29.17,75.72,221.0,HISSAR          ,,IN,METAR
VIJN,42463,25.43,78.57,251.0,JHANSI          ,,IN,METAR
VIJO,42339,26.25,73.05,215.0,JODHPUR (IN-AFB),,IN,METAR TAF
VIJP,42348,26.82,75.8,383.0,JAIPUR/SANGANER ,,IN,METAR TAF
VIJR,,26.88,70.87,229.0,JAISALMER       ,,IN,METAR TAF
VIJU,42056,32.68,74.83,285.0,JAMMU           ,,IN,METAR TAF
VIKA,42366,26.42,80.37,126.0,KANPUR          ,,IN,METAR
VIKG,,26.58,74.82,450.0,KISHANGARH      ,,IN,METAR TAF
VIKO,42452,25.15,75.83,275.0,KOTA            ,,IN,METAR TAF
VILD,,30.85,75.95,270.0,LUDHIANA        ,,IN,METAR
VILH,42034,34.13,77.55,3256.0,LEH KUSHOK      ,,IN,METAR TAF
VILK,42369,26.75,80.88,121.0,LUCKNOW/AMAUSI  ,,IN,METAR TAF
VIPT,42146,29.03,79.47,236.0,PANTNAGAR       ,,IN,METAR TAF
VISM,,31.08,77.07,1537.0,SHIMLA          ,,IN,METAR TAF
VISP,,30.0,77.42,272.0,SAHARANPUR SARSA,,IN,METAR TAF
VISR,42042,33.98,74.77,1655.0,SRINAGAR (CIV/MI,,IN,METAR TAF
VIST,42571,24.57,80.82,317.0,SATNA           ,,IN,METAR
VIUD,,24.62,73.87,514.0,UDAIPUR/DABOK   ,,IN,METAR
VIUT,,25.82,71.48,152.0,UTTARLAI        ,,IN,METAR TAF
VLAP,48957,14.8,106.82,105.0,ATTOPEU         ,,LA,METAR
VLHS,,20.25,100.42,421.0,BAN HOUAYXAY/BAN,,LA,METAR
VLIP,48955,15.12,105.17,102.0,PAKSE (CIV/MIL) ,,LA,METAR
VLKG,,14.12,105.83,76.0,MUANG KHONG     ,,LA,METAR
VLLB,48930,19.9,102.17,297.0,LUANG-PRABANG   ,,LA,METAR TAF
VLLN,,20.97,101.4,548.0,LUANG NAMTHA    ,,LA,METAR TAF
VLPS,,15.13,105.78,102.0,PAKSE INTL      ,,LA,METAR TAF
VLSB,48938,19.22,101.72,326.0,SAYABOURY       ,,LA,METAR
VLSK,48947,16.55,104.75,148.0,SAVANNAKHET(CV/M,,LA,METAR TAF
VLSN,48928,20.42,104.07,1000.0,SAM-NEUA        ,,LA,METAR
VLSV,48952,15.67,106.42,168.0,SARAVANE        ,,LA,METAR
VLTK,48946,17.37,104.65,52.0,THAKHEK         ,,LA,METAR
VLVT,48940,17.98,102.57,171.0,VIENTIANE/WATTAY,,LA,METAR TAF
VLVV,,18.92,102.45,296.0,VANG VIENG(CIV/M,,LA,METAR
VMMC,45011,22.15,113.58,1.0,MACAO/MACAU     ,,CN,METAR TAF
VNBW,44438,27.52,83.45,109.0,BHAIRAWA AIRPORT,,NP,METAR
VNJL,44424,29.27,82.17,2300.0,JUMLA           ,,NP,METAR
VNKT,44454,27.68,85.37,1334.0,KATHMANDU INTL A,,NP,METAR TAF
VNPK,44434,28.22,84.0,827.0,POKHARA AIRPORT ,,NP,METAR
VNSI,44449,27.17,84.97,137.0,SIMRA AIRPORT   ,,NP,METAR
VNSK,44416,28.6,81.62,720.0,SURKHET         ,,NP,METAR
VNTJ,44474,27.35,87.67,1732.0,TAPLEJUNG       ,,NP,METAR
VNVT,44478,26.47,87.27,72.0,BIRATNAGAR AIRPO,,NP,METAR
VOAR,,13.07,79.68,81.0,ARKONAM         ,,IN,METAR TAF
VOAT,,10.82,72.18,5.0,AGATTI          ,,IN,METAR TAF
VOBG,43296,12.95,77.65,884.0,BANGALORE ARP   ,,IN,METAR TAF
VOBI,43205,15.15,76.83,449.0,BELLARY         ,,IN,METAR
VOBL,,13.2,77.7,908.0,BENGALURU       ,,IN,METAR TAF
VOBM,,15.85,74.62,758.0,BELGAUM         ,,IN,METAR TAF
VOBX,,7.02,93.92,1.0,CAMPBELL BAY    ,,IN,METAR
VOBZ,43181,16.52,80.78,26.0,VIJAYAWADA/GANNA,,IN,METAR TAF
VOCB,43321,11.02,77.03,394.0,COIMBATORE/PEELA,,IN,METAR TAF
VOCC,43353,9.93,76.27,3.0,COCHIN (IN-NAVY),,IN,METAR TAF
VOCI,43336,10.15,76.4,8.0,COCHIN INTL     ,,IN,METAR TAF
VOCL,,11.13,75.95,104.0,CALICUT         ,,IN,METAR TAF
VOCP,43241,14.5,78.77,134.0,CUDDAPAH        ,,IN,METAR TAF
VODX,,13.23,93.05,1.0,SHIBPUR(NAS)    ,,IN,METAR
VOGB,,17.35,76.85,458.0,GULBARGA        ,,IN,METAR TAF
VOGO,,15.38,73.83,56.0,GOA             ,,IN,METAR TAF
VOHB,,15.37,75.08,661.0,HUBLI           ,,IN,METAR TAF
VOHS,,17.23,78.43,607.0,RAJIV GANDHI INL,,IN,METAR TAF
VOHY,43128,17.45,78.47,540.0,HYDERABAD (CIV/M,,IN,METAR TAF
VOJV,,15.17,76.63,508.0,JINDAL VIJAYANAG,,IN,METAR TAF
VOKN,,11.92,75.55,105.0,KANNUR          ,,IN,METAR TAF
VOKU,,15.72,78.17,280.0,KURNOOL         ,,IN,METAR TAF
VOLT,,18.4,76.47,649.0,LATUR           ,,IN,METAR TAF
VOMD,43360,9.83,78.08,135.0,MADURAI         ,,IN,METAR TAF
VOML,43284,12.97,74.88,100.0,MANGALORE/BAJPE ,,IN,METAR TAF
VOMM,43279,13.0,80.17,7.0,MADRAS/CHENNAI  ,,IN,METAR TAF
VOMY,43291,12.23,76.65,727.0,MYSORE          ,,IN,METAR TAF
VOND,,19.18,77.32,86.0,NANDED          ,,IN,METAR TAF
VOPB,,11.63,92.73,1.0,PORT BLAIR      ,,IN,METAR TAF
VOPC,,11.97,79.82,43.0,PONDICHERRY     ,,IN,METAR
VORY,,17.1,81.82,47.0,RAJAHMUNDRY     ,,IN,METAR TAF
VOSM,,11.78,78.07,301.0,SALEM           ,,IN,METAR
VOSR,,16.0,73.53,62.0,SINDHUDURG      ,,IN,METAR TAF
VOTK,,8.72,78.02,25.0,TUTICORIN       ,,IN,METAR
VOTP,,13.63,79.55,103.0,TIRUPATI        ,,IN,METAR TAF
VOTR,43344,10.77,78.72,90.0,TIRUCHCHIRAPALLI,,IN,METAR TAF
VOTV,43372,8.48,76.92,9.0,THIRUVANANTHAPUR,,IN,METAR TAF
VOVR,43303,12.92,79.15,214.0,VELLORE         ,,IN,METAR
VOVZ,,17.72,83.22,4.0,VIZAGAPATAM     ,,IN,METAR TAF
VQPR,,27.4,89.43,2227.0,PARO            ,,BT,METAR
VRGN,43599,-0.67,73.15,2.0,GAN ISLAND      ,,MV,METAR
VRMG,,-0.7,73.15,2.0,GAN INTL AIRPORT,,MV,METAR TAF
VRMH,,6.75,73.17,1.0,HANIMAADHOO     ,,MV,METAR TAF
VRMM,43555,4.2,73.52,2.0,MALE INTL/HULULE,,MV,METAR TAF
VTBC,48480,12.58,102.12,4.0,CHANTHABURI     ,,TH,METAR
VTBD,48456,13.92,100.6,6.0,BANGKOK/DON MUAN,,TH,METAR TAF
VTBG,48450,14.02,99.53,29.0,KANCHANABURI    ,,TH,METAR
VTBI,48430,14.05,101.37,6.0,PRACHIN BURI (AR,,TH,METAR
VTBJ,48465,13.15,100.07,4.0,PHETCHABURI/THA ,,TH,METAR
VTBK,,14.08,99.92,9.0,KAMPHAENG SAEN(A,,TH,METAR
VTBL,,14.87,100.67,30.0,KOKE KATHIEM (MI,,TH,METAR
VTBO,,12.28,102.32,25.0,TRAT/KHAO SAMING,,TH,METAR TAF
VTBP,48500,11.82,99.82,5.0,PRACHUAP KHIRI K,,TH,METAR
VTBS,48459,13.68,100.75,1.0,CHON BURI/SATTAH,,TH,METAR TAF
VTBU,48478,12.68,101.0,12.0,RAYONG/U-TAPHAO ,,TH,METAR TAF
VTCB,,19.5,100.27,389.0,CHIANG KHAM (ARM,,TH,METAR
VTCC,48327,18.77,98.97,308.0,CHIANG MAI(CIV/A,,TH,METAR TAF
VTCH,48300,19.3,97.98,266.0,MAE HONG SON/MUA,,TH,METAR TAF
VTCL,48328,18.27,99.52,240.0,LAMPANG         ,,TH,METAR TAF
VTCN,48331,18.82,100.78,211.0,NAN/MUANG NAN   ,,TH,METAR TAF
VTCP,48330,18.13,100.17,166.0,PHRAE           ,,TH,METAR TAF
VTCR,48303,19.92,99.82,395.0,CHIANG RAI      ,,TH,METAR
VTCS,48325,18.17,97.92,213.0,MAE SARIANG     ,,TH,METAR
VTCT,,19.95,99.88,389.0,CHIANG RAI INTL ,,TH,METAR TAF
VTPB,48379,16.67,101.2,134.0,PHETCHABUN      ,,TH,METAR TAF
VTPH,48475,12.63,99.95,12.0,HUA HIN         ,,TH,METAR TAF
VTPL,,16.82,101.25,152.0,LOM SAK (THAI-AF,,TH,METAR
VTPM,48375,16.7,98.53,211.0,MAE SOT/TAK     ,,TH,METAR TAF
VTPN,48400,15.8,100.17,35.0,NAKHON SAWAN/PAK,,TH,METAR
VTPO,,17.23,99.82,58.0,SUKHOTHAI       ,,TH,METAR TAF
VTPP,,16.78,100.28,45.0,PHITSANULOK     ,,TH,METAR TAF
VTPS,48378,16.77,100.27,45.0,PHITSANULOK/SARI,,TH,METAR
VTPT,48376,16.88,99.25,148.0,TAK             ,,TH,METAR TAF
VTPU,48351,17.62,100.08,64.0,UTTARADIT EAST  ,,TH,METAR
VTSA,48570,6.65,100.07,6.0,SATUN (THAI-AFB),,TH,METAR
VTSB,48551,9.12,99.15,10.0,SURAT THANI     ,,TH,METAR TAF
VTSC,48583,6.52,101.75,5.0,NARATHIWAT      ,,TH,METAR TAF
VTSD,48517,10.47,99.17,5.0,CHUMPHON        ,,TH,METAR
VTSE,,10.72,99.37,8.0,CHUMPHON        ,,TH,METAR TAF
VTSF,,8.53,99.95,6.0,NAKHON SI THAMMA,,TH,METAR TAF
VTSG,,8.1,98.98,32.0,KRABI           ,,TH,METAR TAF
VTSH,48568,7.2,100.6,10.0,SONGKHLA(THAI-NA,,TH,METAR TAF
VTSK,48580,6.78,101.15,8.0,PATTANI         ,,TH,METAR TAF
VTSM,,9.55,100.07,12.0,SAMUI           ,,TH,METAR TAF
VTSN,48552,8.47,99.97,9.0,NAKHON SI THAMMA,,TH,METAR
VTSP,48565,8.12,98.32,12.0,PHUKET INTL AIRP,,TH,METAR TAF
VTSR,48532,9.78,98.58,23.0,RANONG          ,,TH,METAR TAF
VTSS,48569,6.92,100.38,28.0,HAT YAI         ,,TH,METAR TAF
VTST,48567,7.52,99.62,17.0,TRANG           ,,TH,METAR TAF
VTSY,,5.78,101.15,225.0,YALA            ,,TH,METAR
VTUB,48383,16.52,104.72,139.0,MUKDAHAN/BAKHON ,,TH,METAR
VTUC,48403,15.8,102.02,183.0,CHAIYAPHUM      ,,TH,METAR
VTUD,48354,17.37,102.78,177.0,UDON THANI(CIV/A,,TH,METAR TAF
VTUI,,17.2,104.12,162.0,SAKON NAKHON    ,,TH,METAR TAF
VTUJ,,14.87,103.5,146.0,SURIN           ,,TH,METAR TAF
VTUK,48381,16.47,102.78,190.0,KHON KAEN       ,,TH,METAR TAF
VTUL,48353,17.43,101.72,257.0,LOEI            ,,TH,METAR TAF
VTUM,48352,17.87,102.72,175.0,NONG KHAI       ,,TH,METAR
VTUN,48431,14.97,102.07,188.0,KORAT/NAKHON RAT,,TH,METAR
VTUO,,15.23,103.25,182.0,BURIRUM         ,,TH,METAR TAF
VTUP,48357,17.42,104.77,148.0,NAKHON PHANOM   ,,TH,METAR
VTUQ,,14.95,102.32,225.0,NAKHON RATCHASIM,,TH,METAR TAF
VTUR,48405,16.05,103.67,142.0,ROI ET          ,,TH,METAR
VTUS,48356,17.13,104.12,172.0,SAKON NAKHON (AR,,TH,METAR
VTUU,48407,15.25,104.87,119.0,UBON/RATCHATHANI,,TH,METAR TAF
VTUV,,16.12,103.78,136.0,ROIET           ,,TH,METAR TAF
VTUW,,17.38,104.63,167.0,NAKHON PHANOM   ,,TH,METAR TAF
VVCI,48825,20.82,106.73,6.0,CAT VI          ,,VN,METAR TAF
VVCR,48897,12.0,109.22,12.0,CAM RANH BAY    ,,VN,METAR TAF
VVCT,48911,10.08,105.72,6.0,CAN THO         ,,VN,METAR TAF
VVDN,48855,16.03,108.2,7.0,DA NANG INTL ARP,,VN,METAR TAF
VVGL,,21.03,105.88,16.0,HANOI/GIALAM    ,,VN,METAR
VVNB,48820,21.22,105.8,6.0,HANOI/NOIBAI INT,,VN,METAR TAF
VVNT,48877,12.25,109.2,10.0,NHA TRANG       ,,VN,METAR
VVPB,48852,16.38,107.7,15.0,HUE/PHUBAI      ,,VN,METAR TAF
VVPK,48866,13.97,108.0,801.0,PLEIKU CITY     ,,VN,METAR
VVPQ,48917,10.23,103.97,8.0,PHU QUOC        ,,VN,METAR TAF
VVQN,48870,13.77,109.22,6.0,QUI NHO'N       ,,VN,METAR
VVTS,48900,10.82,106.67,10.0,HO CHI MINH/TANS,,VN,METAR TAF
VVVD,,21.12,107.42,8.0,VAN DON         ,,VN,METAR
VVVH,48845,18.68,105.67,6.0,VINH            ,,VN,METAR
VVVT,,10.37,107.07,4.0,VUNG TAU        ,,VN,METAR
VYMD,,21.7,95.98,87.0,MANDALAY        ,,MM,METAR TAF
VYNT,,19.62,96.2,610.0,NAYPYITAW       ,,MM,METAR TAF
VYSW,48062,20.12,92.87,5.0,SITTWE/AKYAB    ,,MM,METAR
VYYY,48097,16.9,96.13,31.0,YANGON INTL MYAN,,MM,METAR TAF
WAAA,97180,-5.07,119.55,13.0,HASANUDDIN/UJUNG,,ID,METAR TAF
WAAB,97192,-5.47,122.62,2.0,BAU-BAU/BETO AMB,,ID,METAR
WAAP,97142,-4.18,121.62,3.0,KOLAKA/POMALAA  ,,ID,METAR
WAAS,97114,-2.52,121.33,10.0,SOROAKO/LUWU    ,,ID,METAR
WAAU,97146,-4.08,122.42,50.0,KENDARI/WOLTER(A,,ID,METAR
WABB,97560,-1.18,136.12,12.0,BIAK/FRANS KAISI,,ID,METAR TAF
WABI,97682,-3.32,135.5,3.0,NABIRE/IRIAN JAY,,ID,METAR TAF
WABN,97796,-4.72,136.42,3.0,KOKONAO/TIMUKA  ,,ID,METAR
WABO,97570,-1.87,136.22,3.0,SERUI/YENDOSA   ,,ID,METAR TAF
WABP,,-4.52,136.88,32.0,TIMIKA MOSES    ,,ID,METAR
WABT,97780,-3.92,136.37,1770.0,ENAROTALI       ,,ID,METAR TAF
WADA,,-8.53,116.07,3.0,SELAPARANG      ,,ID,METAR TAF
WADD,,-8.73,115.17,3.0,BALI INTL       ,,ID,METAR TAF
WADL,,-8.75,116.28,97.0,BANDARA         ,,ID,METAR TAF
WAHQ,,-7.52,110.75,125.0,ADI SOEMARMO    ,,ID,METAR
WAHS,,-6.98,110.38,3.0,AHMAD YANI      ,,ID,METAR
WAJI,97580,-1.82,138.72,3.0,SARMI/ORAI      ,,ID,METAR TAF
WAJJ,97690,-2.58,140.52,93.0,JAYAPURA/SENTANI,,ID,METAR TAF
WAJW,97686,-4.07,138.93,1660.0,WAMENA/IRIAN JAY,,ID,METAR TAF
WAKK,97980,-8.52,140.42,5.0,MERAUKE/MOPAH   ,,ID,METAR TAF
WAKT,97876,-6.08,140.3,16.0,TANAH MERAH     ,,ID,METAR TAF
WALL,96633,-1.27,116.9,3.0,SEPINGGAN       ,,ID,METAR TAF
WALS,,-0.38,117.25,3.0,SAMARINDA       ,,ID,TAF
WAMA,97406,1.82,127.82,8.0,GALELA/GAMARMALA,,ID,METAR TAF
WAMG,97048,0.52,123.07,2.0,GORONTALO/JALAL ,,ID,METAR TAF
WAMH,97008,3.68,125.53,5.0,TAHUNA/NAHA     ,,ID,METAR TAF
WAMI,97028,1.12,120.8,2.0,TOLI-TOLI/LALOS ,,ID,METAR TAF
WAML,97072,-0.67,119.72,6.0,PALU/MUTIARA    ,,ID,METAR
WAMM,97014,1.55,124.92,86.0,MENADO/SAM RATUL,,ID,METAR TAF
WAMN,,4.0,126.67,4.0,MALANGUANE/TALAU,,ID,METAR TAF
WAMP,97096,-1.37,120.72,2.0,POSO/KASIGUNCU  ,,ID,METAR TAF
WAMR,97404,2.03,129.32,15.0,MOROTAI/PITU    ,,ID,METAR
WAMT,97430,0.83,127.38,15.0,TERNATE/BABULLAH,,ID,METAR TAF
WAMW,97086,-0.9,122.77,2.0,LUWUK/BUBUNG    ,,ID,METAR TAF
WAOO,,-3.45,114.77,23.0,SYAMSUDIN NOOR  ,,ID,METAR TAF
WAPA,97722,-3.35,128.87,10.0,AMAHAI          ,,ID,METAR TAF
WAPH,97460,-1.62,124.53,3.0,LABUHA/TALIABU  ,,ID,METAR TAF
WAPI,97900,-7.97,131.3,24.0,SAUMLAKI        ,,ID,METAR TAF
WAPN,97600,-2.1,125.97,2.0,SANANA          ,,ID,METAR TAF
WAPP,97724,-3.7,128.08,20.0,AMBON/PATTIMURA ,,ID,METAR TAF
WAPR,97700,-3.25,127.07,20.0,NAMLEA/BURU ISLA,,ID,METAR TAF
WAQA,,4.13,117.67,9.0,NUNUKAN         ,,ID,TAF
WAQD,,2.83,117.38,3.0,TANJUNG HARAPAN ,,ID,TAF
WAQJ,,3.9,115.7,762.0,YUVAI SEMARING  ,,ID,TAF
WAQQ,,3.33,117.57,6.0,JUWATA          ,,ID,METAR TAF
WAQT,,2.15,117.43,18.0,KALIMARAU       ,,ID,TAF
WARJ,96853,-7.78,110.43,107.0,ADI SUTJIPTO    ,,ID,METAR TAF
WARQ,,-7.52,110.75,125.0,ADI SUMARMO WIRY,,ID,METAR TAF
WARR,,-7.37,112.78,3.0,JUANDA          ,,ID,METAR TAF
WARS,,-6.97,110.38,3.0,ACHMAD YANI     ,,ID,METAR TAF
WASF,97630,-2.87,132.25,130.0,FAK-FAK/TOREA   ,,ID,METAR TAF
WASK,97760,-3.67,133.75,3.0,KAIMANA/UTAROM  ,,ID,METAR TAF
WASR,97530,-0.87,134.05,3.0,MANOKWARI/RENDAN,,ID,METAR TAF
WASS,97502,-0.92,131.12,3.0,SORONG/JEFMAN   ,,ID,METAR TAF
WATT,,-10.17,123.67,104.0,EL TARI         ,,ID,METAR TAF
WAYY,,-4.53,136.88,32.0,TIMIKA MOSES    ,,ID,METAR
WBGB,96441,3.12,113.02,34.0,BINTULU/KALIMANT,,MY,METAR TAF
WBGG,96413,1.48,110.35,26.0,KUCHING (CIV/MIL,,MY,METAR TAF
WBGR,96449,4.32,113.98,18.0,MIRI/KALIMANTAN ,,MY,METAR TAF
WBGS,96421,2.27,111.98,26.0,SIBU            ,,MY,METAR TAF
WBGY,,1.22,111.45,13.0,SIMANGGANG      ,,MY,METAR
WBKK,96471,5.93,116.05,9.0,KOTA KINABALU IN,,MY,METAR TAF
WBKL,96465,5.3,115.25,29.0,LABUAN (AFB)    ,,MY,METAR TAF
WBKS,96491,5.9,118.07,13.0,SANDAKAN/KALIMAN,,MY,METAR TAF
WBKT,96477,6.92,116.83,11.0,KUDAT           ,,MY,METAR
WBKW,96481,4.32,118.12,17.0,TAWAU/KALIMANTAN,,MY,METAR TAF
WBSB,96315,4.93,114.92,15.0,BRUNEI INTL AIRP,,BN,METAR TAF
WIAA,96001,5.87,95.32,126.0,SABANG/CUT BAU  ,,ID,METAR
WIAG,96273,-4.45,105.17,19.0,MENGGALA/ASTRA K,,ID,METAR
WIAM,96801,-7.32,108.25,335.0,CIBEUREM/TASIK(A,,ID,METAR
WIAR,96881,-7.62,111.52,110.0,MADIUN/ISWAHYUD ,,ID,METAR
WIAS,96947,-7.97,112.7,526.0,MALANG/ABDUL (AF,,ID,METAR
WIBB,96109,0.47,101.45,41.0,PAKANBARU/SIMPAN,,ID,METAR TAF
WIDD,96087,1.12,104.12,26.0,HANG NADIM      ,,ID,METAR TAF
WIDN,96091,0.92,104.53,18.0,TANJUNG PINANG  ,,ID,METAR
WIEE,,-0.78,100.28,5.0,MINANGKABAU     ,,ID,METAR TAF
WIHH,,-6.27,106.88,26.0,HALIM PERDANAKUS,,ID,METAR TAF
WIIA,96739,-6.3,106.57,46.0,CURUG/BUDIARTO  ,,ID,METAR
WIIB,96781,-6.9,107.57,740.0,BANDUNG/HUSEIN(A,,ID,METAR
WIID,96743,-6.15,106.83,5.0,JAKARTA/KEMAYOR ,,ID,METAR
WIIH,96747,-6.25,106.9,30.0,HALIM INTL(CIV/M,,ID,METAR TAF
WIII,96749,-6.13,106.67,9.0,SOEKARNO-HATTA I,,ID,METAR TAF
WIIJ,,-7.77,110.42,107.0,ADISUCIPTO/JOGYA,,ID,METAR
WIIK,96773,-6.53,107.67,110.0,KALIJATI        ,,ID,METAR
WIIL,96805,-7.72,109.02,6.0,CILACAP/TUNGGUL ,,ID,METAR
WIIS,96839,-6.97,110.37,3.0,ACHMAD YANI (ARM,,ID,METAR
WIIT,96295,-5.27,105.17,96.0,TELUKBETUNG/BRAN,,ID,METAR
WIKB,,1.12,104.12,40.0,HANG NADIM      ,,ID,METAR
WIKD,,-2.75,107.75,44.0,TANJUNG PANDAN/B,,ID,METAR
WIKK,96237,-2.17,106.13,33.0,PANGKALPINANG   ,,ID,METAR
WIKN,,0.92,104.52,18.0,TANJUNGPINANG/KI,,ID,METAR
WIKS,96179,-0.47,104.57,31.0,SINGKEP/DABO    ,,ID,METAR
WILL,96249,-5.25,105.18,83.0,BANDAR LAMPUNG  ,,ID,METAR
WIMB,96075,1.17,97.7,6.0,GUNUNG SITOLI/BI,,ID,METAR
WIMG,96163,-0.87,100.33,3.0,PADANG/TABING   ,,ID,METAR
WIMM,96035,3.57,98.67,27.0,MEDAN/POLONIA (M,,ID,METAR TAF
WIMS,96073,1.55,98.87,3.0,SIBOLGA/PINANGSO,,ID,METAR
WIMT,96039,3.37,99.12,23.0,TEBINGTINGGI/PAB,,ID,METAR
WIOI,96533,1.07,109.67,38.0,SINGKAWANG II   ,,ID,METAR
WIOK,96615,-1.85,109.97,9.0,KETAPANG/RAHADI ,,ID,METAR
WION,96147,3.95,108.37,2.0,RANAI (MIL/CIV) ,,ID,METAR
WIOO,96581,-0.15,109.4,4.0,PONTIANAK/SUPADI,,ID,METAR TAF
WIOS,96559,0.12,111.52,30.0,SINTANG/SUSILO(A,,ID,METAR
WIPA,96195,-1.62,103.65,25.0,JAMBI/SULTAN TAH,,ID,METAR TAF
WIPB,,-3.28,102.92,98.0,LUBUKLINGGAU    ,,ID,TAF
WIPH,96207,-2.77,101.37,782.0,KERINCI/DEPATI P,,ID,METAR TAF
WIPK,,-2.17,106.13,33.0,DEPATI AMIR     ,,ID,METAR TAF
WIPL,96253,-3.87,102.32,16.0,BENGKULA/PADANGK,,ID,METAR TAF
WIPP,96221,-2.88,104.7,7.0,PALEMBANG/SULTAN,,ID,METAR TAF
WIPR,96171,-0.35,102.33,19.0,RENGAT/JAPURA   ,,ID,METAR
WIPT,,-0.78,100.28,5.0,MINANGKABAU INTL,,ID,METAR
WIPY,,-4.03,103.38,638.0,ATUNG BUNGSU    ,,ID,METAR TAF
WITA,96045,3.47,97.28,75.0,TAPAK TUAN/TEUKU,,ID,METAR
WITC,96015,4.25,96.12,90.0,MEULABOH/CUT NYA,,ID,METAR
WITM,96009,5.23,96.95,28.0,LHOKSEUMAWE/MALI,,ID,METAR
WITT,96011,5.52,95.42,21.0,BANDA ACEH/BLANG,,ID,METAR TAF
WMAP,48672,2.02,103.32,88.0,KLUANG          ,,MY,TAF
WMAU,48674,2.38,103.88,5.0,MERSING         ,,MY,METAR
WMBA,48620,4.22,100.7,9.0,SITIAWAN        ,,MY,METAR
WMBT,,2.82,104.17,5.0,TIOMAN ISLAND   ,,MY,TAF
WMKA,48603,6.2,100.4,5.0,S ABDUL HALIM   ,,MY,METAR TAF
WMKB,48602,5.47,100.38,4.0,BUTTERWORTH(AUS-,,MY,METAR TAF
WMKC,48615,6.17,102.28,7.0,KOTA BHARU/SULTA,,MY,METAR TAF
WMKD,48657,3.77,103.22,18.0,KUANTAN (AFB)   ,,MY,METAR TAF
WMKE,,4.53,103.43,5.0,KERTEH          ,,MY,METAR TAF
WMKF,,3.12,101.7,34.0,SIMPANG (AFB)   ,,MY,METAR
WMKI,,4.57,101.08,37.0,IPOH            ,,MY,METAR TAF
WMKJ,48679,1.63,103.67,38.0,JOHORE BHARU/SEN,,MY,METAR TAF
WMKK,48647,2.75,101.72,21.0,KUALA LUMPUR/SUB,,MY,METAR TAF
WMKL,48600,6.32,99.72,4.0,LANGKAWI INTL AR,,MY,METAR TAF
WMKM,48665,2.27,102.25,9.0,MALACCA         ,,MY,METAR TAF
WMKN,48618,5.37,103.1,12.0,KUALA TRENGGANU ,,MY,METAR TAF
WMKP,48601,5.28,100.27,4.0,PENANG/BAYAN LEP,,MY,METAR TAF
WMPA,,4.25,100.55,1.0,PANGKOR ISLAND  ,,MY,TAF
WMSA,,3.13,101.55,19.0,KUALA LUMPUR SA ,,MY,METAR TAF
WPDL,97390,-8.57,125.57,6.0,DILLI ARPT/TIMOR,,TP,METAR TAF
WPEC,97395,-8.5,126.4,522.0,BAUCAU/TIMOR ISL,,TP,METAR
WPOC,97385,-9.18,124.37,5.0,OE-CUSSE/TIMOR I,,TP,METAR
WPVQ,97394,-8.87,126.37,47.0,VIQUEQUE/TIMOR I,,TP,METAR
WRBB,,-3.42,114.75,20.0,BANJARMASIN/SYAM,,ID,METAR
WRBI,96645,-2.7,111.7,25.0,PANGKALAN BUN/IS,,ID,METAR
WRBK,96695,-3.38,116.22,18.0,KOTABARU/SETAGEN,,ID,METAR
WRBM,96595,-0.95,114.9,60.0,MUARATEWE/BERING,,ID,METAR
WRBP,96655,-1.0,114.0,27.0,PANARUNG/PALANGK,,ID,METAR
WRKA,97374,-9.32,124.9,125.0,ATAMBUA/HALIWEN ,,ID,METAR
WRKC,97300,-8.62,122.25,3.0,MAUMERE/WAI OTI ,,ID,METAR
WRKE,97290,-8.8,121.58,3.0,ENDEH/IPI       ,,ID,METAR
WRKK,97372,-10.17,123.67,108.0,KUPANG/EL TARI  ,,ID,METAR TAF
WRKL,97310,-8.27,122.97,9.0,LARANTUKA/GEWAYE,,ID,METAR
WRKM,97320,-8.22,124.57,12.0,ALOR/MALI/KALABA,,ID,METAR
WRKR,97378,-10.72,123.07,1.0,ROTE/BAA/LEKUNIK,,ID,METAR
WRKS,97380,-10.5,121.82,26.0,SABU/TARDAMU    ,,ID,METAR
WRLB,96505,3.72,115.67,550.0,LONGBAWAN/JUVAI ,,ID,METAR
WRLG,96525,2.85,117.32,50.0,TANJUNG SELOR   ,,ID,METAR
WRLH,96639,-2.2,116.32,10.0,TANAHGROGOT     ,,ID,METAR
WRLK,96529,2.12,117.45,26.0,TANJUNG REDEP/BE,,ID,METAR
WRLL,,-1.27,116.9,3.0,BALIKPAPAN/SEPIN,,ID,METAR
WRLR,96509,3.32,117.57,6.0,TARAKAN/JUWATA  ,,ID,METAR
WRLS,96607,-0.62,117.15,230.0,SAMARINDA/TEMIND,,ID,METAR
WRLU,96577,1.0,118.0,210.0,SANGKULIRANG    ,,ID,METAR
WRRA,97240,-8.52,116.07,3.0,AMPENAN/SELAPARA,,ID,METAR
WRRB,97270,-8.55,118.7,2.0,BIMA/MOHAMMAD SA,,ID,METAR
WRRS,97260,-8.42,117.42,3.0,SUMBAWA BESAR   ,,ID,METAR
WRRW,97340,-9.67,120.32,12.0,WAINGAPU/MAU HAU,,ID,METAR
WRSJ,96935,-7.37,112.77,3.0,SURABAYA/JUANDA ,,ID,METAR TAF
WRSP,96933,-7.22,112.72,3.0,SURABAYA/PERAK  ,,ID,METAR
WRSQ,96845,-7.87,110.92,104.0,SURAKARTA/ADISUM,,ID,METAR
WRSS,96937,-7.22,112.72,3.0,SURABAYA/GEDANGA,,ID,METAR
WSAP,48694,1.37,103.92,20.0,PAYA LEBAR      ,,SG,METAR TAF
WSAT,48687,1.37,103.72,12.0,SINGAPORE/TENGAH,,SG,METAR
WSSL,48692,1.42,103.87,11.0,SINGAPORE/SELETA,,SG,METAR TAF
WSSS,48698,1.37,103.97,17.0,SINGAPORE/CHANGI,,SG,METAR TAF
YABA,94802,-34.93,117.8,67.0,ALBANY AIRPORT  ,,AU,METAR
YAMB,,-27.63,152.72,26.0,AMBERLEY        ,,AU,METAR TAF
YARG,94217,-16.63,128.45,157.0,ARGYLE AERO     ,,AU,METAR
YAYE,,-25.18,130.98,489.0,AYERS ROCK      ,,AU,METAR
YAYT,,-15.92,145.35,17.0,AYTON           ,QL,AU,METAR
YBAF,94575,-27.57,153.0,18.0,ARCHEFIELD/BRISB,,AU,METAR
YBAM,94568,-27.62,152.72,31.0,AMBERLEY (AUS-AF,,AU,METAR
YBAS,94326,-23.8,133.9,549.0,ALICE SPRINGS AR,,AU,METAR TAF
YBBN,94578,-27.38,153.13,3.0,BRISBANE INTL AR,,AU,METAR TAF
YBCG,94592,-28.17,153.5,5.0,COOLANGATTA AWS ,,AU,METAR TAF
YBCS,94287,-16.87,145.75,2.0,CAIRNS AIRPORT  ,,AU,METAR TAF
YBCV,94510,-26.4,146.27,306.0,CHARLEVILLE ARPT,,AU,METAR
YBDV,95482,-25.9,139.35,46.0,BIRDSVILLE      ,,AU,METAR
YBGL,94380,-23.85,151.25,76.0,GLADSTONE       ,,AU,METAR
YBHI,,-32.0,141.47,285.0,BROKEN HILL     ,,AU,METAR
YBHM,,-20.35,148.95,4.0,HAMILTON ISLAND ,,AU,METAR TAF
YBLN,,-33.68,115.4,17.0,BUSSELTON       ,,AU,METAR TAF
YBLR,94346,-23.42,144.27,193.0,LONGREACH AIRPOR,,AU,METAR
YBMA,94332,-20.67,139.48,346.0,MOUNT ISA AIRPOR,,AU,METAR TAF
YBMK,95367,-21.17,149.17,4.0,MACKAY          ,,AU,METAR
YBNA,94596,-28.83,153.57,3.0,BALLINA BYRON G.,,AU,METAR
YBOK,94552,-27.42,151.73,406.0,OAKEY (ARMY/CIV),,AU,METAR
YBPN,94365,-20.5,148.55,20.0,PROSPERINE AIRPO,,AU,METAR
YBRK,94374,-23.37,150.47,10.0,ROCKHAMPTON AIRP,,AU,METAR TAF
YBRM,94203,-17.93,122.23,11.0,BROOME AIRPORT  ,,AU,METAR TAF
YBSU,,-26.6,153.08,4.0,SUNSHINE COAST  ,,AU,METAR
YBTL,94294,-19.25,146.75,4.0,TOWNSVILLE(CIV/M,,AU,METAR TAF
YBUD,94387,-24.9,152.32,30.0,BUNDABERG       ,,AU,METAR
YBWP,94171,-12.68,141.92,21.0,WEIPA CITY      ,,AU,METAR
YBWW,,-27.55,151.8,460.0,TOOWOOMBA       ,,AU,METAR TAF
YBWX,95304,-20.85,115.4,5.0,BARROW ISLAND   ,,AU,METAR
YCAR,94300,-24.88,113.67,4.0,CARNARVON       ,,AU,METAR
YCAS,94574,-28.88,153.07,25.0,CASINO AIRPORT  ,,AU,METAR
YCBA,,-31.53,145.8,219.0,COBAR AIRPORT   ,,AU,METAR
YCBB,,-31.33,149.27,644.0,COONABARABRAN   ,,AU,METAR
YCBP,,-29.03,134.72,227.0,COOBER PEDY     ,,AU,METAR
YCCY,,-20.67,140.5,188.0,CLONCURRY       ,,AU,METAR
YCDU,94653,-32.12,133.7,21.0,CEDUNA AIRPORT  ,,AU,METAR
YCFS,,-30.32,153.12,2.0,COFFS HARBOUR   ,,AU,METAR TAF
YCIN,,-17.58,123.83,83.0,CURTIN/DERBY    ,,AU,METAR TAF
YCNM,,-30.98,148.38,180.0,COONAMBLE       ,,AU,METAR
YCOM,,-36.3,148.97,930.0,COOMA SNOWY MTNS,,AU,METAR
YDBY,,-17.37,123.67,7.0,DERBY           ,,AU,METAR
YDGV,94150,-12.27,136.82,54.0,GOVE AIRPORT    ,,AU,METAR
YDTC,94238,-19.62,134.17,376.0,TENNANT CREEK AR,,AU,METAR
YDYL,94462,-25.17,130.97,493.0,YULARA AWS      ,,AU,METAR
YEML,,-23.57,148.18,192.0,EMERALD ARPT    ,,AU,METAR
YESP,,-33.68,121.82,143.0,ESPERANCE ARPT  ,,AU,METAR
YFRT,,-30.83,128.12,159.0,FORREST         ,,AU,METAR TAF
YGEL,,-28.8,114.7,32.0,GERALDTON       ,,AU,METAR TAF
YGFN,,-29.77,153.03,26.0,GRAFTON ARPT    ,,AU,METAR
YGLA,94381,-23.87,151.22,17.0,GLADSTONE       ,,AU,METAR TAF
YGTE,94153,-13.97,136.45,14.0,GROOTE EYLANDT  ,,AU,METAR
YGTH,,-34.25,146.07,132.0,GRIFFITH ARPT   ,,AU,METAR
YHID,,-10.58,142.3,5.0,HORN ISLAND     ,,AU,METAR TAF
YHUG,,-20.82,144.23,320.0,HUGHENDEN ARPT  ,,AU,METAR
YKRY,,-26.57,151.83,435.0,KINGAROY ARPT   ,,AU,METAR
YLEC,,-30.6,138.43,261.0,LEIGH CREEK     ,,AU,METAR
YLHI,,-31.53,159.07,2.0,LORD HOWE ISLAND,,AU,METAR TAF
YLIS,,-28.83,153.27,6.0,LISMORE ARPT    ,,AU,METAR
YLRE,,-23.43,144.28,191.0,LONGREACH ARPT  ,,AU,METAR
YMAV,94854,-38.03,144.48,11.0,AVALON AIRPORT  ,,AU,METAR TAF
YMAY,94896,-36.07,146.95,156.0,ALBURY AIRPORT  ,,AU,METAR
YMDG,,-32.57,149.62,470.0,MUDGEE ARPT     ,,AU,METAR
YMDV,94960,-41.17,146.37,47.0,DEVONPORT EAST  ,,AU,METAR
YMEK,,-26.62,118.55,521.0,MEEKATHARRA ARPT,,AU,METAR
YMEN,94864,-37.72,144.9,86.0,MELBOURNE/ESSEND,,AU,METAR
YMER,,-36.92,149.9,2.0,MERIMBULA ARPT  ,,AU,METAR
YMES,94907,-38.1,147.12,8.0,EAST SALE (AUS-A,,AU,METAR
YMHB,94975,-42.83,147.52,2.0,HOBART/TASMANIA ,,AU,METAR TAF
YMIA,,-34.23,142.08,53.0,MILDURA ARPT    ,,AU,METAR
YMLT,94968,-41.53,147.2,167.0,LAUNCESTON AIRPO,,AU,METAR TAF
YMLV,94865,-37.85,144.72,21.0,LAVERTON AERO   ,,AU,METAR
YMMB,94870,-37.97,145.08,16.0,MELBOURNE/MOORAB,,AU,METAR
YMMG,94821,-37.72,140.77,69.0,MOUNT GAMBIER AR,,AU,METAR
YMMI,94693,-34.22,142.07,52.0,MILDURA AIRPORT ,,AU,METAR
YMML,94866,-37.67,144.82,115.0,MELBOURNE INTL A,,AU,METAR TAF
YMMQ,94998,-54.47,158.92,6.0,MACQUARIE ISLAND,,AU,METAR
YMOR,,-29.5,149.85,211.0,MOREE ARPT      ,,AU,METAR
YMTG,,-37.75,140.78,65.0,MOUNT GAMBIER   ,,AU,METAR
YMWY,94957,-40.97,145.72,11.0,WYNYARD WEST    ,,AU,METAR
YNAR,,-34.7,146.52,142.0,NARRANDERA      ,,AU,METAR
YNBR,,-30.32,149.83,230.0,NARRABRI        ,,AU,METAR
YNTN,,-17.68,141.07,19.0,NORMANTON       ,,AU,METAR
YNWN,,-23.42,119.8,526.0,NEWMAN ARPT     ,,AU,METAR
YOLD,,-30.48,136.88,102.0,OLYMPIC DAM ARPT,,AU,METAR TAF
YPAD,94672,-34.95,138.52,2.0,ADELAIDE INTL AR,,AU,METAR TAF
YPBH,94689,-31.97,141.47,315.0,BROKEN HILL     ,,AU,METAR
YPBO,,-23.17,117.75,425.0,PARABURDOO      ,,AU,METAR
YPCC,96996,-12.18,96.83,3.0,COCOS ISL INTL A,,AU,METAR TAF
YPDN,94120,-12.42,130.9,32.0,DARWIN (CIV/MIL),,AU,METAR TAF
YPEA,94612,-31.67,116.02,38.0,PEARCE (AUS-AFB),,AU,METAR TAF
YPED,95676,-34.7,138.62,20.0,EDINBURGH (AUS-A,,AU,METAR
YPFT,94646,-30.82,128.08,160.0,FORREST AIRPORT ,,AU,METAR
YPGN,94403,-28.77,114.7,34.0,GERALDTON AIRPOR,,AU,METAR
YPGV,,-12.27,136.82,53.0,GOVE AIRPORT    ,,AU,METAR TAF
YPJT,,-32.1,115.88,29.0,JANDAKOT        ,,AU,METAR TAF
YPKG,94637,-30.78,121.45,372.0,KALGOORLIE/BOULD,,AU,METAR TAF
YPKU,94216,-15.77,128.7,42.0,KUNUNURRA AIRPOR,,AU,METAR TAF
YPLC,94674,-30.6,138.42,262.0,LEIGH CREEK S. A,,AU,METAR
YPLM,94302,-22.23,114.08,5.0,LEARMOUTH       ,,AU,METAR TAF
YPMQ,,-31.43,152.87,4.0,PORT MACQUARIE  ,,AU,METAR
YPMR,94430,-26.6,118.52,518.0,MEEKATHARRA AIRP,,AU,METAR
YPPD,94312,-20.37,118.62,6.0,PORT HEDLAND ARR,,AU,METAR TAF
YPPF,95677,-34.77,138.62,16.0,ADELAIDE/PARAFIE,,AU,METAR
YPPH,94610,-31.93,115.98,16.0,PERTH INTL/BELMO,,AU,METAR TAF
YPTN,94132,-14.52,132.38,135.0,KATHERINE/TINDAL,,AU,METAR TAF
YPWR,94659,-31.15,136.82,169.0,WOOMERA (AUS-AFB,,AU,METAR TAF
YPXM,96995,-10.45,105.68,262.0,CHRISTMAS ISL (P,,AU,METAR TAF
YRMD,94341,-20.7,143.12,209.0,RICHMOND        ,,AU,METAR TAF
YSBK,94765,-33.93,150.98,14.0,BANKSTOWN AIRPOR,,AU,METAR
YSCB,94926,-35.3,149.18,577.0,CANBERRA (CIV/MI,,AU,METAR TAF
YSCM,94923,-36.22,149.07,778.0,COOMA           ,,AU,METAR
YSCN,94755,-34.02,150.67,70.0,CAMDEN AIRPORT  ,,AU,METAR
YSDU,94719,-32.22,148.57,285.0,DUBBO           ,,AU,METAR TAF
YSNF,94996,-29.03,167.93,113.0,NORFOLK ISLAND A,,AU,METAR TAF
YSNW,94750,-34.95,150.53,109.0,NOWRA (AUS-NAVY),,AU,METAR TAF
YSRI,94753,-33.6,150.77,19.0,RICHMOND (AUS-AF,,AU,METAR TAF
YSSY,94767,-33.95,151.17,3.0,SYDNEY INTL AIRP,,AU,METAR TAF
YSTW,94762,-31.08,150.85,404.0,TAMWORTH AIRPORT,,AU,METAR TAF
YSWG,94910,-35.15,147.47,212.0,WAGGA WAGGA(CV/M,,AU,METAR TAF
YSWM,,-32.77,151.82,8.0,WILLIAMTOWN(AUS-,,AU,METAR
YTEF,,-21.72,122.23,298.0,TELFER AIRPORT  ,,AU,METAR TAF
YTNK,,-19.63,134.18,368.0,TENNANT CREEK   ,,AU,METAR TAF
YTRE,,-31.88,152.52,8.0,TAREE AIRPORT   ,,AU,METAR TAF
YWGT,,-36.42,146.3,152.0,WANGARATTA ARP  ,,AU,METAR TAF
YWHA,95664,-33.07,137.52,12.0,WHYALLA AIRPORT ,,AU,METAR TAF
YWLM,94776,-32.8,151.83,7.0,WILLIAMTOWN ARP ,,AU,METAR TAF
ZBAA,54511,40.07,116.6,31.0,BEIJING/PEKING  ,,CN,METAR TAF
ZBAD,,39.5,116.42,25.0,BEIJING/DAXING  ,,CN,METAR TAF
ZBDS,,39.48,109.87,1390.0,ORDOS           ,,CN,METAR
ZBHH,53463,40.85,111.82,1081.0,HUHHOT          ,,CN,METAR TAF
ZBOW,,40.67,109.98,1049.0,BAOTOU          ,,CN,METAR
ZBSJ,,38.28,114.7,70.0,ZHENGDING       ,,CN,METAR TAF
ZBTJ,,39.12,117.35,4.0,TIANJIN/ZHANGGUI,,CN,METAR TAF
ZBYN,53772,37.73,112.63,778.0,TAIYUAN/WUSU    ,,CN,METAR TAF
ZGBH,59644,21.48,109.1,16.0,BEIHAI          ,,CN,METAR
ZGCS,57679,28.18,113.07,46.0,CHANGSHA/DATUOPU,,CN,METAR
ZGDY,,29.13,110.48,900.0,DAYONG          ,,CN,METAR
ZGGG,59287,23.4,113.3,11.0,GUANGZHOU/BAIYUN,,CN,METAR TAF
ZGHA,,28.18,113.22,61.0,HUANGHUA/CHANGSH,,CN,METAR TAF
ZGHK,59758,20.02,110.33,15.0,HAIKOU          ,,CN,METAR
ZGKL,57957,25.22,110.03,151.0,GUILIN          ,,CN,METAR TAF
ZGNN,59431,22.62,108.17,128.0,NANNING/WUXU    ,,CN,METAR TAF
ZGOW,59316,23.55,116.5,4.0,SHAN-TOU        ,,CN,METAR TAF
ZGSZ,59493,22.63,113.8,18.0,SHENZHEN        ,,CN,METAR TAF
ZGZJ,59658,21.22,110.4,28.0,ZHANJIANG       ,,CN,METAR
ZHCC,57083,34.52,113.83,149.0,ZHENGZHOU       ,,CN,METAR TAF
ZHHH,57494,30.78,114.22,33.0,WUHAN/NANHU     ,,CN,METAR TAF
ZJHK,,19.93,110.43,21.0,HAIKOU          ,,CN,METAR TAF
ZJSY,,18.3,109.42,27.0,SANYA/FENGHUANG ,,CN,METAR TAF
ZKKC,47025,40.68,129.2,8.0,KIMCHAEK/SONGJIN,,KP,METAR
ZKPY,47058,39.03,125.78,37.0,PYONGYANG/SUNAN ,,KP,METAR TAF
ZKWS,,39.17,127.48,2.0,WONSAN          ,,KP,TAF
ZLIC,53614,38.32,106.4,1112.0,HEDONG AIRPORT  ,,CN,METAR
ZLJQ,52533,39.77,98.47,1478.0,JIUQUAN/SUZHOU  ,,CN,METAR
ZLLL,,36.52,103.62,1939.0,LANZHOU         ,,CN,METAR TAF
ZLSN,57036,34.28,108.92,398.0,XI'AN           ,,CN,METAR
ZLXN,52866,36.62,101.77,2262.0,XINING          ,,CN,METAR
ZLXY,,34.43,108.75,478.0,XIANYANG        ,,CN,METAR TAF
ZLYA,53845,36.6,109.5,959.0,YAN AN          ,,CN,METAR
ZMCK,,47.65,106.82,1366.0,ULAANBAATAR     ,,MN,METAR TAF
ZMUB,,47.83,106.75,1300.0,ULAN-BATOR      ,,MN,METAR TAF
ZPLC,,23.7,100.02,2107.0,BOSHANG LINCANG ,,CN,METAR
ZPPP,56778,25.0,102.65,1885.0,KUNMING/WUJIABA ,,CN,METAR TAF
ZSAM,59134,24.53,118.13,13.0,XIAMEN          ,,CN,METAR TAF
ZSCG,,31.7,119.97,2.0,CHANGZHOU       ,,CN,METAR
ZSCN,58606,28.6,115.92,50.0,NANCHANG        ,,CN,METAR
ZSFZ,58847,25.93,119.67,14.0,FUZHOU          ,,CN,METAR TAF
ZSGZ,57993,25.85,114.95,125.0,GAN-ZHOU        ,,CN,METAR
ZSHC,58457,30.22,120.43,8.0,HANGZHOU/JIANQIA,,CN,METAR TAF
ZSJN,,36.85,117.22,22.0,JINAN YAOQIANG  ,,CN,METAR TAF
ZSLC,,28.42,122.37,1.0,HUANGYAN        ,,CN,METAR
ZSNB,58239,29.83,121.47,5.0,NINGBO/LISHE    ,,CN,METAR TAF
ZSNJ,58238,31.75,118.87,27.0,NANJING/LUKOU   ,,CN,METAR TAF
ZSNT,,32.02,120.85,6.0,NANTONG         ,,CN,METAR TAF
ZSOF,58321,31.98,116.97,23.0,HEFEI/XINGIAO   ,,CN,METAR TAF
ZSPD,,31.15,121.8,4.0,SHANGHAI/PUDONG ,,CN,METAR TAF
ZSQD,54857,36.27,120.38,8.0,QINGDAO/TSINGTAO,,CN,METAR TAF
ZSSS,58367,31.2,121.33,2.0,SHANGHAI/HONGQIA,,CN,METAR TAF
ZSTN,54823,36.67,116.97,58.0,JINAN/TSINAN    ,,CN,METAR
ZSTX,,29.72,118.27,145.0,TUNXI           ,,CN,METAR
ZSWY,,27.75,118.03,298.0,WUYISHAN        ,,CN,METAR
ZSWZ,,27.9,120.85,6.0,WENZHOU         ,,CN,METAR
ZSXZ,,34.27,117.18,42.0,XUZHOU          ,,CN,METAR
ZSYT,,37.4,121.37,18.0,YANTAI/PENGLAI  ,,CN,METAR
ZUCK,57516,29.72,106.63,416.0,CHONGQING/CHUNGK,,CN,METAR TAF
ZUGY,57816,26.53,106.8,1130.0,GUIYANG         ,,CN,METAR TAF
ZULS,00005,29.3,90.92,3650.0,LHASA           ,,CN,METAR TAF
ZUTF,,30.3,104.43,443.0,CHENGDU/TIANFU  ,,CN,METAR
ZUUU,56294,30.58,103.95,494.0,CHENGDU         ,,CN,METAR TAF
ZWHM,52203,42.82,93.52,739.0,HAMI            ,,CN,METAR
ZWSH,51709,39.55,76.02,1374.0,KASHI           ,,CN,METAR TAF
ZWTN,51828,37.12,79.92,1375.0,HOTAN           ,,CN,METAR
ZWWW,,43.9,87.47,654.0,URUM-QI/DIWOPU  ,,CN,METAR TAF
ZWYN,51431,43.95,81.32,663.0,YINING          ,,CN,METAR
ZYCC,54161,43.98,125.68,211.0,CHANGCHUN       ,,CN,METAR TAF
ZYCY,54324,41.6,120.4,176.0,CHAOYANG        ,,CN,METAR
ZYHB,,45.62,126.25,134.0,HARBIN          ,,CN,METAR TAF
ZYJL,,43.87,126.65,187.0,JILIN/CHANGCHUN ,,CN,METAR
ZYMD,,44.52,129.57,269.0,MUDANJIANG-HAILA,,CN,METAR
ZYQQ,50745,47.37,123.92,148.0,QIQIHAR         ,,CN,METAR
ZYTL,54662,38.97,121.55,33.0,DALIAN/DAIREN/LU,,CN,METAR TAF
ZYTX,,41.63,123.48,56.0,SHENYANG/TAOKIAN,,CN,METAR TAF
ZYYJ,,42.88,129.45,190.0,YANJI           ,,CN,METAR
ZYYY,54342,41.78,123.5,43.0,SHENYANG/DONGTA ,,CN,METAR`;

module.exports = metar_station_info;
},{}],39:[function(require,module,exports){
/*
* This file is the entry point for the METARs module.
*/

// load the starting file
require('./menu_item');
},{"./menu_item":42}],40:[function(require,module,exports){
const ut = require('../core/utils');
const load_images = require('./load_images');
const pako = require('pako');
const Papa = require('papaparse');
const metar_station_info = require('./data/metar_station_info');
var map = require('../core/map/map');

const metar_info_lookup = Papa.parse(metar_station_info, {
    header: true,
    dynamicTyping: true,
}).data;
function _get_metar_station_info(station_id) {
    const result = metar_info_lookup.find(obj => obj.station_id === station_id);
    return result;
}

function xhrGzipFile(url, cb) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.addEventListener('load', function () {
        cb(this.response);
    })
    xhr.send();
}

function fetchMETARData() {
    // var curStation = $('#dataDiv').data('currentStation');
    // $('#dataDiv').data('currentMetarRadarStation', curStation);

    // var distance = 250000;
    // var distanceMiles = distance / 1609;
    // var stationLat = radarStations[curStation][1];
    // var stationLon = radarStations[curStation][2];

    // var bbx = geolib.getBoundsOfDistance(
    //     { latitude: stationLat, longitude: stationLon },
    //     distance
    // );

    // var minLat = bbx[0].latitude;
    // var minLon = bbx[0].longitude;
    // var maxLat = bbx[1].latitude;
    // var maxLon = bbx[1].longitude;

    //var url = `https://www.aviationweather.gov/adds/dataserver_current/httpparam?dataSource=metars&requestType=retrieve&format=xml&minLat=${minLat}&minLon=${minLon}&maxLat=${maxLat}&maxLon=${maxLon}&hoursBeforeNow=3#`;
    //var url = `https://www.aviationweather.gov/adds/dataserver_current/httpparam?dataSource=metars&requestType=retrieve&format=xml&stationString=~us&hoursBeforeNow=3#`;
    //var url = `https://www.aviationweather.gov/adds/dataserver_current/httpparam?dataSource=metars&requestType=retrieve&format=xml&radialDistance=${distanceMiles};${stationLon},${stationLat}&hoursBeforeNow=3#`;
    var url = 'https://www.aviationweather.gov/adds/dataserver_current/current/metars.cache.xml.gz#';
    //var url =  '../resources/USA_Test_METAR.xml';
    var noCacheURL = ut.preventFileCaching(ut.phpProxy + url);
    // console.log(noCacheURL)
    xhrGzipFile(noCacheURL, function(data) {
        var xml = pako.inflate(new Uint8Array(data), { to: 'string' });
        var parsedXMLData = ut.xmlToJson(xml);

        for (var item in parsedXMLData.response.data.METAR) {
            if (parsedXMLData.response.data.METAR[item].hasOwnProperty('latitude')) {
                var stationId = parsedXMLData.response.data.METAR[item].station_id['#text'];
                const current_metar_info = _get_metar_station_info(stationId);

                const only_USA = true; // $('#armrUSAMETARSBtnSwitchElem').is(':checked');
                if (only_USA) {
                    if (current_metar_info.country != 'US'/* || current_metar_info.country == 'CA'*/) {
                        delete parsedXMLData.response.data.METAR[item];
                    }
                }
            }
        }

        load_images(parsedXMLData);
    })
}

module.exports = {
    fetchMETARData
}
},{"../core/map/map":13,"../core/utils":30,"./data/metar_station_info":38,"./load_images":41,"pako":118,"papaparse":134}],41:[function(require,module,exports){
const use_data = require('./use_data');
const create_circle_with_text = require('../core/misc/create_circle_with_text');
const get_temp_color = require('../core/misc/temp_colors');
const metar_plot = require('metar-plot');

function _add_image_to_map(image_url, image_name, callback) {
    const img = new Image(200, 200);
    img.onload = () => map.addImage(image_name, img);
    img.src = image_url;
}

function load_images(parsedXMLData) {
    var all_images_to_add = [];

    for (var i = 0; i < 120; i++) {
        const temp_color = get_temp_color(i);
        // const png_data = create_circle_with_text(`${degrees} °F`, tempColor[0], tempColor[1], 200, 0.75);
        const png_data = create_circle_with_text(`${i}`, temp_color[0], temp_color[1], 200, 1.2);
        all_images_to_add.push([png_data, `${i}`]);
    }

    // for (var item in parsedXMLData.response.data.METAR) {
    //     const base = parsedXMLData.response.data.METAR[item];
    //     if (base.hasOwnProperty('station_id') && base.hasOwnProperty('raw_text')) {
    //         var stationId = base.station_id['#text'];
    //         var rawMetarText = base.raw_text['#text'];

    //         try {
    //             const metar_img_data = metar_plot.metarToImgSrc(metar_plot.rawMetarToMetarPlot(rawMetarText));
    //             all_images_to_add.push([metar_img_data, stationId]);
    //         } catch (e) {
    //             console.warn(e);
    //         }
    //     }
    // }

    for (let i = 0; i < all_images_to_add.length; i++) {
        _add_image_to_map(all_images_to_add[i][0], all_images_to_add[i][1]);
    }

    use_data.useData(parsedXMLData);
}

module.exports = load_images;
},{"../core/misc/create_circle_with_text":25,"../core/misc/temp_colors":29,"./use_data":43,"metar-plot":114}],42:[function(require,module,exports){
const fetchMETARData = require('./fetch_data');
const useData = require('./use_data');
var map = require('../core/map/map');

const divElem = '#metarStationMenuItemDiv';
const iconElem = '#metarStationMenuItemIcon';

$(iconElem).on('click', function() {
    if (!$(iconElem).hasClass('icon-blue')) {
        $(iconElem).addClass('icon-blue');
        $(iconElem).removeClass('icon-grey');

        if (map.getLayer('metarSymbolLayer')) {
            // layer does exist - toggle the visibility to on
            useData.toggleMETARStationMarkers('show');
        } else {
            // layer doesn't exist - load it onto the map for the first time
            fetchMETARData.fetchMETARData();
        }
    } else if ($(iconElem).hasClass('icon-blue')) {
        $(iconElem).removeClass('icon-blue');
        $(iconElem).addClass('icon-grey');

        // layer does exist - toggle the visibility to off
        useData.toggleMETARStationMarkers('hide');
    }
})
},{"../core/map/map":13,"./fetch_data":40,"./use_data":43}],43:[function(require,module,exports){
var map = require('../core/map/map');
const ut = require('../core/utils');
const display_attic_dialog = require('../core/menu/attic_dialog');
const getTempColor = require('../core/misc/temp_colors');
const chroma = require('chroma-js');

// const parseMETAR = require('metar');
const metarParser = require('aewx-metar-parser');
// const metar_plot = require('metar-plot');

var geojsonTemplate = {
    "type": "FeatureCollection",
    "features": []
}
function resetTemplate() {
    geojsonTemplate = {
        "type": "FeatureCollection",
        "features": []
    }
}

function useData(data) {
    resetTemplate();
    console.log(data);
    for (var item in data.response.data.METAR) {
        if (data.response.data.METAR[item].hasOwnProperty('latitude')) {
            var lat = parseFloat(data.response.data.METAR[item].latitude['#text']);
            var lon = parseFloat(data.response.data.METAR[item].longitude['#text']);
            var stationId = data.response.data.METAR[item].station_id['#text'];
            var rawMetarText = data.response.data.METAR[item].raw_text['#text'];

            // if (stationId == 'CWRU') {
            //     console.log(data.response.data.METAR[item])
            // }

            try {
                var parsedMetarData = metarParser(rawMetarText);
                var parsedMetarTemp = parseInt(ut.CtoF(parsedMetarData.temperature.celsius));
                var tempColor = getTempColor(parsedMetarTemp);

                // const metar_img_data = metar_plot.metarToImgSrc(metar_plot.rawMetarToMetarPlot(rawMetarText));

                geojsonTemplate.features.push({
                    'properties': {
                        'stationID': stationId,
                        'rawMetarText': rawMetarText,
                        'temp': parsedMetarTemp,
                        'tempColor': tempColor[0],
                        'tempColorText': tempColor[1],
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates":
                            [lon, lat]
                    }
                });
            }
            catch(err) {
                // console.warn(`${stationId}: ${err.message}`)
            }
        } else {
            //console.log(data.response.data.METAR[item].station_id['#text'])
        }
    }

    map.loadImage(
        './icons/rounded_rectangle.png',
        (error, image) => {
            if (error) throw error;
            map.addImage('custom-marker-metar', image, {
                "sdf": "true"
            });
            map.addSource('metarSymbolLayer', {
                'type': 'geojson',
                'generateId': true,
                'data': geojsonTemplate
            });

            // Add a symbol layer
            map.addLayer({
                'id': 'metarSymbolLayer',
                'type': 'symbol',
                'source': 'metarSymbolLayer',
                'layout': {
                    'icon-image': ['get', 'temp'],
                    'icon-size': 0.15,
                    // 'text-field': ['get', 'temp'],
                    // 'text-size': 13,
                    // 'text-font': [
                    //     //'Open Sans Semibold',
                    //     'Arial Unicode MS Bold'
                    // ],
                    //'text-offset': [0, 1.25],
                    //'text-anchor': 'top'
                },
                // 'paint': {
                //     //'text-color': 'white',
                //     'text-color': 'black',
                //     'icon-color': ['get', 'tempColor'],
                // }
            });
            map.moveLayer('stationSymbolLayer');
        }
    );

    map.on('click', 'metarSymbolLayer', (e) => {
        const coordinates = e.features[0].geometry.coordinates.slice();
        const id = e.features[0].properties.stationID;
        const rawText = e.features[0].properties.rawMetarText;

        // KTTF 211655Z AUTO 26009G16KT 2 1/2SM -RA SCT055 SCT075 BKN110 24/20 A2981 RMK AO2 T02410198 P0001
        //var parsedMetarData = parseMETAR(rawText);
        var parsedMetarData = metarParser(rawText);
        console.log(parsedMetarData)

        // var metarSVG = rawMetarToSVG(rawText);
        // var doc = new DOMParser().parseFromString(metarSVG, "image/svg+xml");
        // var parsedDoc = $(doc.querySelector('svg')).attr('height', 150).attr('width', 150);
        // var svgStr = new XMLSerializer().serializeToString(parsedDoc[0]);

        // https://stackoverflow.com/a/58142441/18758797
        // ^^ svg string to data url

        // https://github.com/aeharding/metar-taf-parser

        try {
            var metarTemp = parsedMetarData.temperature.celsius;
            var parsedMetarTemp = parseInt(ut.CtoF(metarTemp));
            var metarDewPoint = parsedMetarData.dewpoint.celsius;
            var metarBarometer = parsedMetarData.barometer.hg;
            var metarVisibility = parsedMetarData.visibility.miles;
            var metarWindSpeed = parsedMetarData.wind.speed_kts; // in knots
            var metarWindGustSpeed = parsedMetarData.wind.gust_kts; // in knots
            var metarWindDirection = parsedMetarData.wind.degrees;
            if (metarWindDirection == null) {
                metarWindDirection = 0;
            }
            var metarFancyTime = ut.printFancyTime(parsedMetarData.observed);

            var tempColor = getTempColor(parsedMetarTemp);

            // var metarHTMLBody =
            // `<div>
            //     <div style="text-align: center; font-size: 30px; color: ${tempColor[1]}; background-color: ${tempColor[0]}"><b>${parsedMetarTemp}</b> ℉</div>
            //     <br>
            //     <div><i><b>VALID: </b>${metarFancyTime}</i></div>
            //     <div><b>Dew Point: </b>${parseInt(ut.CtoF(metarDewPoint))} ℉</div>
            //     <div><b>Barometer: </b>${metarBarometer} inHG</div>
            //     <div><b>Visibility: </b>${metarVisibility} miles</div>
            //     <br>
            //     <div><b>Wind:</b></div>
            //     <div>${ut.knotsToMph(metarWindSpeed, 0)} mph</div>
            //     <div>${ut.knotsToMph(metarWindGustSpeed, 0)} mph gusts</div>
            //     <div>${metarWindDirection}° (${ut.degToCompass(metarWindDirection)})</div>
            //     <img src="https://steepatticstairs.github.io/AtticRadar/resources/compass.png" class="centerImg" style="max-width: 50%; max-height: 50%; transform: rotate(${metarWindDirection}deg)">
            //     <!-- <br>
            //     <div><b>METAR Plot <a href="https://github.com/phoenix-opsgroup/metar-plot">(credit)</a>:</b></div>
            //     <div>{svgStr}</div> -->
            //     <br>
            //     <div><b>Raw Text: </b><u>${rawText}</u></div>

            //     <!--<br>
            //     <pre>${JSON.stringify(parsedMetarData, undefined, 2)}</pre> -->
            // </div>`

            // ut.spawnModal({
            //     'title': `Station ${id}`,
            //     'headerColor': 'alert-success',
            //     'body': metarHTMLBody
            // })

            var metarHTMLBody = 
`<div style="text-align: center; font-size: 30px; color: ${tempColor[1]}; background-color: ${tempColor[0]}"><b>${parsedMetarTemp}</b> °F</div>
<i><b>VALID: </b>${metarFancyTime}</i>
<b>Dew Point: </b>${parseInt(ut.CtoF(metarDewPoint))} °F
<b>Barometer: </b>${metarBarometer} inHG
<b>Visibility: </b>${metarVisibility} miles

<b>Wind:</b>
${ut.knotsToMph(metarWindSpeed, 0)} mph
${ut.knotsToMph(metarWindGustSpeed, 0)} mph gusts
${metarWindDirection}° (${ut.degToCompass(metarWindDirection)})
<img src="./icons/compass.png" class="centerImg" style="max-width: 50%; max-height: 50%; transform: rotate(${metarWindDirection}deg)">
<!-- <br>
<div><b>METAR Plot <a href="https://github.com/phoenix-opsgroup/metar-plot">(credit)</a>:</b></div>
<div>{svgStr}</div> -->
<b>Raw Text: </b><u>${rawText}</u>
<!--<br>
<pre>${JSON.stringify(parsedMetarData, undefined, 2)}</pre> -->`

            // var dialogColor = chroma(tempColor[0]).alpha(0.8).css();
            // var dialogTextColor = chroma(dialogColor).luminance() > 0.4 ? 'black' : 'white';
            display_attic_dialog({
                'title': `Station ${id}`,
                'body': metarHTMLBody, //JSON.stringify(data, null, 4),
                'color': 'rgb(19, 19, 19)',
                'textColor': 'white'
            });
        } catch(err) {
            var headerColor = '#ba3043';
            display_attic_dialog({
                'title': `Station ${id}: Error`,
                'color': headerColor,
                'textColor': chroma(headerColor).luminance() > 0.4 ? 'black' : 'white',
                'body': 
`There was an error parsing the ${id} station's METAR data.

<b>Raw Text:</b>
<i>${rawText}</i>

<b>Error message:</b>
${err.message}`
            })
            console.warn(err.message);
        }

        // {
        //     "type": "METAR",
        //     "correction": false,
        //     "station": "KOQN",
        //     "time": "2022-09-17T21:35:47.993Z",
        //     "auto": true,
        //     "wind": {
        //         "speed": 4,
        //         "gust": null,
        //         "direction": 230,
        //         "variation": null,
        //         "unit": "KT"
        //     },
        //     "cavok": false,
        //     "visibility": 10,
        //     "visibilityVariation": null,
        //     "visibilityVariationDirection": null,
        //     "weather": null,
        //     "clouds": [
        //         {
        //             "abbreviation": "SCT",
        //             "meaning": "scattered",
        //             "altitude": 4700,
        //             "cumulonimbus": false
        //         }
        //     ],
        //     "temperature": 26,
        //     "dewpoint": 15,
        //     "altimeterInHg": 30.19
        // }
    });
    map.on('mouseenter', 'metarSymbolLayer', () => {
        map.getCanvas().style.cursor = 'pointer';
    });
    map.on('mouseleave', 'metarSymbolLayer', () => {
        map.getCanvas().style.cursor = '';
    });
}

function toggleMETARStationMarkers(showHide) {
    if (showHide == 'hide') {
        map.setLayoutProperty('metarSymbolLayer', 'visibility', 'none');
        //mapFuncs.removeMapLayer('tideStationDots');
    } else if (showHide == 'show') {
        map.setLayoutProperty('metarSymbolLayer', 'visibility', 'visible');
    }
}

module.exports = {
    useData,
    toggleMETARStationMarkers
}
},{"../core/map/map":13,"../core/menu/attic_dialog":18,"../core/misc/temp_colors":29,"../core/utils":30,"aewx-metar-parser":107,"chroma-js":110}],44:[function(require,module,exports){
const reflectivity = {
    colors: [
        'rgb(116, 78, 173)',
        'rgb(147, 141, 117)',

        'rgb(150, 145, 83)',
        'rgb(210, 212, 180)',

        'rgb(204, 207, 180)',
        'rgb(65, 91, 158)',

        'rgb(67, 97, 162)',
        'rgb(106, 208, 225)',

        'rgb(111, 214, 232)',
        'rgb(53, 213, 91)',

        'rgb(17, 213, 24)',
        'rgb(9, 94, 9)',

        'rgb(29, 104, 9)',
        'rgb(234, 210, 4)',

        'rgb(255, 226, 0)',
        'rgb(255, 128, 0)',

        'rgb(255, 0, 0)',
        'rgb(113, 0, 0)',

        'rgb(255, 255, 255)',
        'rgb(255, 146, 255)',

        'rgb(255, 117, 255)',
        'rgb(225, 11, 227)',

        'rgb(178, 0, 255)',
        'rgb(99, 0, 214)',

        'rgb(5, 236, 240)',
        'rgb(1, 32, 32)',

        'rgb(1, 32, 32)',
        'rgb(1, 32, 32)'
    ],
    values: [
        -30, -20,
        -20, -10,
        -10, 10,
        10, 18,
        18, 22,
        22, 35,
        35, 40,
        40, 50,
        50, 60,
        60, 65,
        65, 70,
        70, 75,
        75, 85,
        85,
        95
    ]
}
const velocity = {
    // Product:bv
    // units: KTS
    // step: 5
    // scale: 1.9426

    // color: 0 137 117 122 130 51 59 
    // color: 10 109 0 0 242 0 7
    // color: 40 249 51 76 255 149 207
    // color: 55 253 160 201 255 232 172
    // color: 60 253 228 160 253 149 83 
    // color: 80 254 142 80 110 14 9
    // color: 120 110 14 9

    // color: -10 78 121 76 116 131 112
    // color: -40 3 234 2  0 100 0
    // color: -50 181 237 239 2 241 3
    // color: -70 47 222 226 181 237 239 
    // color: -80 30 111 188 40 204 220
    // color: -90  24 39 165 30 111 188
    // color: -100 110 3 151 22 13 156
    // color: -120 252 0 130 109 2 150 
    // RF: 139 0 218

    // 'rgb(000, 000, 000)',
    colors: [
        'rgb(252, 0, 130)', // -120
        'rgb(109, 2, 150)', // -100
        'rgb(110, 3, 151)', // -100
        'rgb(22, 13, 156)', // -90
        'rgb(24, 39, 165)', // -90
        'rgb(30, 111, 188)', // -80
        'rgb(30, 111, 188)', // -80
        'rgb(40, 204, 220)', // -70
        'rgb(47, 222, 226)', // -70
        'rgb(181, 237, 239)', // -50
        'rgb(181, 237, 239)', // -50
        'rgb(2, 241, 3)', // -40
        'rgb(3, 234, 2)', // -40

        'rgb(0, 100, 0)', // -10
        'rgb(78, 121, 76)', // -10
        'rgb(116, 131, 112)', // 0
        'rgb(137, 117, 122)', // 0
        'rgb(130, 51, 59)', // 10
        'rgb(109, 0, 0)', // 10

        'rgb(242, 0, 7)', // 40
        'rgb(249, 51, 76)', // 40
        'rgb(255, 149, 207)', // 55
        'rgb(253, 160, 201)', // 55
        'rgb(255, 232, 172)', // 60
        'rgb(253, 228, 160)', // 60
        'rgb(253, 149, 83)', // 80
        'rgb(254, 142, 80)', // 80
        'rgb(110, 14, 9)', // 120
        'rgb(110, 14, 9)', // 120
    ],
    values: [
        -120, -100,
        -100, -90,
        -90, -80,
        -80, -70,
        -70, -50,
        -50, -40,
        -40, -10,
        -10, 0,
        0, 10,
        10, 40,
        40, 55,
        55, 60,
        60, 80,
        80, 120,
        120
    ],
    balance: {
        colors: [
            'rgb(24, 28, 67)', // -120
            'rgb(41, 56, 136)', // -100
            'rgb(12, 94, 190)', // -80
            'rgb(56, 136, 186)', // -60
            'rgb(117, 170, 190)', // -40
            'rgb(182, 201, 207)', // -20
            'rgb(241, 236, 235)', // 0
            'rgb(223, 187, 176)', // 20
            'rgb(208, 139, 115)', // 40
            'rgb(191, 87, 58)', // 60
            'rgb(165, 33, 37)', // 80
            'rgb(115, 14, 39)', // 100
            'rgb(60, 9, 18)' // 120
        ],
        values: [
            -120, -100, -80, -60, -40, -20, 0, 20, 40, 60, 80, 100, 120
        ],
    },
}
const diff_reflectivity = {
    colors: [
        'rgb(0, 0, 0)',
        'rgb(55, 55, 55)',
        'rgb(110, 110, 110)',
        'rgb(165, 165, 165)',
        'rgb(220, 220, 220)',
        'rgb(142, 121, 181)',
        'rgb(10, 10, 155)',
        'rgb(68, 248, 212)',
        'rgb(90, 221, 98)',
        'rgb(255, 255, 100)',
        'rgb(220, 10, 5)',
        'rgb(175, 0, 0)',
        'rgb(240, 120, 180)',
        'rgb(255, 255, 255)',
        'rgb(145, 45, 150)'
    ],
    values: [
        -8, -6, -4, -2, 0, 0, 0.25, 1, 1.5, 2, 3, 4, 5, 6, 8
    ],
}
const corr_coeff = {
    colors: [
        '#000000', '#949494', '#7593FF', '#0045BD', '#ADF4FF', '#00FA32', '#FFD53D', '#F01000', '#C20047', '#FFB8D8', '#FFEBF2'
    ],
    values: [
        0.2, 0.4, 0.55, 0.65, 0.8, 0.85, 0.95, 0.975, 1, 1.04, 1.05
    ],
}
const spectrum_width = {
    colors: [
        '#242424',
        '#afafaf',
        '#ff700a',
        '#b30000',
        '#f000ac',
        '#8800c2',
        '#e0fcff',
        '#b4eb00',
        '#7dd100',
    ],
    values: [
        0, 5, 8, 10, 13, 15.5, 18, 20.5, 31 // m/s
        // yes, those are strange values. here are the originals in knots:
        // 0, 10, 15, 20, 25, 30, 35, 40, 60
    ],
}
const hydrometer_class = {
    colors: [
        'rgb(156, 156, 156)',
        'rgb(156, 156, 156)',

        'rgb(118, 118, 118)',
        'rgb(118, 118, 118)',

        'rgb(243, 179, 178)',
        'rgb(243, 179, 178)',

        'rgb(117, 250, 243)',
        'rgb(117, 250, 243)',

        'rgb(63, 141, 247)',
        'rgb(63, 141, 247)',

        'rgb(115, 247, 154)',
        'rgb(115, 247, 154)',

        'rgb(84, 184, 54)',
        'rgb(84, 184, 54)',

        'rgb(208, 207, 112)',
        'rgb(208, 207, 112)',

        'rgb(199, 135, 134)',
        'rgb(199, 135, 134)',

        'rgb(234, 51, 36)',
        'rgb(234, 51, 36)',

        'rgb(147, 37, 30)',
        'rgb(147, 37, 30)',

        'rgb(255, 254, 84)',
        'rgb(255, 254, 84)',

        'rgb(0, 0, 0)',
        'rgb(0, 0, 0)',

        'rgb(212, 45, 246)',
        'rgb(212, 45, 246)',

        'rgb(109, 18, 121)',
        'rgb(109, 18, 121)'
    ],
    values: [
        0, 10,
        10, 20,
        20, 30,
        30, 40,
        40, 50,
        50, 60,
        60, 70,
        70, 80,
        80, 90,
        90, 100,
        100, 110,
        110, 120,
        120, 130,
        130, 140,
        140, 150
    ],
}

/**
 * This is the main object that contains
 * the colormaps for all products.
 */
const productColors = {
    DVL: {
        colors: [
            'rgb(120, 120, 120)',
            'rgb(0, 236, 236)',
            'rgb(1, 160, 246)',
            'rgb(0, 0, 246)',
            'rgb(0, 255, 0)',
            'rgb(0, 200, 0)',
            'rgb(0, 144, 0)',
            'rgb(255, 255, 0)',
            'rgb(231, 192, 0)',
            'rgb(255, 144, 0)',
            'rgb(255, 0, 0)',
            'rgb(214, 0, 0)',
            'rgb(192, 0, 0)',
            'rgb(255, 0, 255)',
            'rgb(153, 85, 201)',
            'rgb(255, 255, 255)',
            'rgb(235, 235, 235)'
        ],
        values: [
            0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80
        ],
    },
    HHC: hydrometer_class,

    N0B: reflectivity,
    N1B: reflectivity,
    N2B: reflectivity,
    N3B: reflectivity,

    N0C: corr_coeff,
    N1C: corr_coeff,
    N2C: corr_coeff,
    N3C: corr_coeff,

    N0G: velocity,
    N1G: velocity,
    N2G: velocity,
    N3G: velocity,

    N0H: hydrometer_class,
    N1H: hydrometer_class,
    N2H: hydrometer_class,
    N3H: hydrometer_class,

    N0S: {
        colors: [
            'rgb(155, 31, 139)',
            'rgb(155, 31, 139)',

            'rgb(48, 7, 147)',
            'rgb(48, 7, 147)',

            'rgb(64, 128, 189)',
            'rgb(64, 128, 189)',

            'rgb(133, 226, 231)',
            'rgb(133, 226, 231)',

            'rgb(163, 240, 186)',
            'rgb(163, 240, 186)',

            'rgb(96, 209, 62)',
            'rgb(96, 209, 62)',

            'rgb(56, 127, 33)',
            'rgb(56, 127, 33)',

            'rgb(117, 131, 114)',
            'rgb(117, 131, 114)',

            'rgb(121, 21, 13)',
            'rgb(121, 21, 13)',

            'rgb(201, 43, 30)',
            'rgb(201, 43, 30)',

            'rgb(235, 123, 169)',
            'rgb(235, 123, 169)',

            'rgb(251, 229, 166)',
            'rgb(251, 229, 166)',

            'rgb(242, 162, 103)',
            'rgb(242, 162, 103)',

            'rgb(196, 104, 67)',
            'rgb(196, 104, 67)',

            'rgb(115, 20, 198)',
            'rgb(115, 20, 198)'
        ],
        values: [
            1, 2,
            2, 3,
            3, 4,
            4, 5,
            5, 6,
            6, 7,
            7, 8,
            8, 9,
            9, 10,
            10, 11,
            11, 12,
            12, 13,
            13, 14,
            14, 15,
            15, 16
        ],
    },
    N0U: velocity,
    N1U: velocity,
    N2U: velocity,
    N3U: velocity,

    N0X: diff_reflectivity,
    N1X: diff_reflectivity,
    N2X: diff_reflectivity,
    N3X: diff_reflectivity,

    NSW: spectrum_width,

    N0Q: reflectivity,
    N1Q: reflectivity,
    N2Q: reflectivity,
    N3Q: reflectivity,

    PHI: {
        colors: [
            'rgb(255, 255, 255)',
            'rgb(210, 210, 180)',
            'rgb(10, 20, 95)',
            'rgb(0, 255, 0)',
            'rgb(30, 100, 0)',
            'rgb(255, 255, 0)',
            'rgb(255, 125, 0)',
            'rgb(90, 0, 0)',
            'rgb(255, 140, 255)'
        ],
        values: [
            0, 15, 30, 45, 60, 75, 90, 120, 180
        ],
    },
    REF: reflectivity,
    RHO: corr_coeff,
    SW: spectrum_width, // 'SW '

    TV0: velocity,
    TV1: velocity,
    TV2: velocity,

    TZL: reflectivity,
    TZ0: reflectivity,
    TZ1: reflectivity,
    TZ2: reflectivity,
    TZ3: reflectivity,

    VEL: velocity,
    ZDR: diff_reflectivity
}

module.exports = productColors;
},{}],45:[function(require,module,exports){
/*
* This file is the entry point for the data inspector tool.
*/

// load the starting file
require('./menu_item');
},{"./menu_item":48}],46:[function(require,module,exports){
const ut = require('../../core/utils');

const product_units = {
    'REF': 'dBZ', // level 2 reflectivity
    'VEL': 'm/s', // level 2 velocity
    'SW': 'mph', // level 2 spectrum width
    'ZDR': 'dB', // level 2 differential reflectivity
    'RHO': '%', // level 2 correlation coefficient
    'PHI': 'deg', // level 2 differential phase shift

    153: 'dBZ', // super-res reflectivity
    154: 'm/s', // super-res velocity
    161: '%', // correlation coefficient
    159: 'dB', // differential reflectivity
    // 'NSW': 'mph', // spectrum width
    94: 'dBZ', // digital reflectivity
    99: 'm/s', // digital base velocity
    134: 'kg/m²', // vertically integrated liquid
    // 'N0S': 'knots', // storm relative velocity

    180: 'dBZ', // tdwr short-range reflectivity
    186: 'dBZ', // tdwr long-range reflectivity
    182: 'm/s', // tdwr base velocity
}

function formatValue(color, cmin, cmax) {
    // const product = window.atticData.product;
    const product_code = window.atticData.product_code;

    // decode the rgb data
    var scaled = color[0] / Math.pow(255, 1) + color[1] / Math.pow(255, 2) + color[2] / Math.pow(255, 3);
    // if it isn't 255 alpha (opaque), there is no radar data to read
    if (color[3] == 255) {
        var value = scaled * (cmax - cmin) + cmin;

        if (value == -999) {
            value = 'Range Folded';
        } else {
            if (
            product_code == 'REF' || product_code == 153 /* N0B */ || product_code == 94 /* NXQ */ || product_code == 180 /* TZ0 */ || product_code == 186 /* TZL */ || // reflectivity
            product_code == 'SW' /* || product_code == 'NSW' */ // spectrum width
            ) {
                // round to the nearest 0.5
                value = Math.round(value * 2) / 2;
            } else if (
                product_code == 154 /* N0G */ || product_code == 99 /* N0U */ || product_code == 182 /* TVX */ || product_code == 'VEL' // velocity
            ) {
                // round to the nearest 0.1
                // level 2 & 3 velocity values are provided by default in m/s
                value = parseFloat(value.toFixed(1));
            } else if (
            product_code == 159 /* N0X */ || product_code == 'ZDR' || // differential reflectivity
            product_code == 134 /* DVL */ // vertically integrated liquid
            ) {
                value = parseFloat(value.toFixed(2));
            } else if (
            product_code == 161 /* N0C */ || product_code == 'RHO' || // correlation coefficient
            product_code == 'PHI' // differential phase shift
            ) {
                // round to the nearest 16th
                value = parseFloat(value.toFixed(3));
            } else if (
                product_code == 165 || product_code == 177 // hydrometer classification || hybrid hydrometer classification
            ) {
                var hycValues = {
                    0: 'Below Threshold', // ND
                    10: 'Biological', // BI
                    20: 'Ground Clutter', // GC
                    30: 'Ice Crystals', // IC
                    40: 'Dry Snow', // DS
                    50: 'Wet Snow', // WS
                    60: 'Light-Mod. Rain', // RA
                    70: 'Heavy Rain', // HR
                    80: 'Big Drops', // BD
                    90: 'Graupel', // GR
                    100: 'Hail / Rain', // HA
                    110: 'Large Hail', // LH
                    120: 'Giant Hail', // GH,
                    130: '130', // ??
                    140: 'Unknown', // UK
                    150: 'Range Folded' // RF
                }
                value = hycValues[Math.round(value)];
            }

            // we don't need to add units to hydrometer classification
            if (product_code != 165 /* N0H */ && product_code != 177 /* HHC */) {
                value = `${value} ${product_units[product_code]}`;
            }
        }
        return value;
    } else {
        return null;
    }
}

module.exports = formatValue;
},{"../../core/utils":30}],47:[function(require,module,exports){
const turf = require('@turf/turf');
const formatValue = require('./format_value');

function beam_height(distance_km, elevation_meters, elevation_angle) {
    var elevation = elevation_meters; // m
    var height = elevation / 1000; // km
    var range = distance_km; // km
    var elevAngle = elevation_angle; // 0.5;
    var earthRadius = 6374; // km

    const radians = Math.PI / 180;

    /*
    * Calculates the beam height MSL (mean sea level (this means above sea level)) in km.
    * Formula taken from https://wx.erau.edu/faculty/mullerb/Wx365/Doppler_formulas/doppler_formulas.pdf
    */
    var beamHeightMSL = Math.sqrt(
        Math.pow(range, 2)
        +
        Math.pow((4/3) * earthRadius + height, 2)
        +
        (2*range)*((4/3) * earthRadius + height)
        *
        Math.sin(elevAngle * radians)
    ) - (4/3) * earthRadius;

    function km_to_kft(km) { return km * 3.28084 }
    function km_to_miles(km) { return km * 1.609 }

    var beamHeightKFT = km_to_kft(beamHeightMSL);
    var beamHeightMI = km_to_miles(beamHeightMSL);

    return beamHeightMI;
}

function readPixels(gl, x, y) {
    var data = new Uint8Array(4);
    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);
    return data;
}

// https://stackoverflow.com/a/73854666/18758797
function getValue(e) {
    const canvas = map.getCanvas();
    const gl = canvas.getContext('webgl') || canvas.getContext('webgl2');

    if (gl) {
        // canvas width and height is what you see on the screen
        const canvasWidth = parseFloat(canvas.style.width, 10);
        const canvasHeight = parseFloat(canvas.style.height, 10);

        const map_center = map.getCenter();
        var mapCenter = map.project(map_center);
        // e.point.x and y, specifying the horizontal and vertical pixels read from the lower left corner of the screen
        canvasX = mapCenter.x; // e.point.x;
        canvasY = mapCenter.y; // e.point.y;

        // WebGL buffer is larger than canvas, there 
        const bufferX = (gl.drawingBufferWidth / canvasWidth * canvasX).toFixed(0);
        const bufferY = (gl.drawingBufferHeight / canvasHeight * (canvasHeight - canvasY)).toFixed(0);

        gl.bindFramebuffer(gl.FRAMEBUFFER, window.atticData.fb);
        var data = readPixels(gl, bufferX, bufferY);

        const cmin = window.atticData.cmin;
        const cmax = window.atticData.cmax;
        if (cmin != undefined) {
            var value = formatValue(data, cmin, cmax);
            if (value == null) {
                $('#colorPickerText').hide();
            } else {
                $('#colorPickerText').show();
            }
            $('#colorPickerTextValue').text(value);
        }

        gl.bindFramebuffer(gl.FRAMEBUFFER, null);
        var [r, g, b, a] = readPixels(gl, bufferX, bufferY);
        var color = `rgba(${r}, ${g}, ${b}, ${a})`;
        if (color != 'rgba(0, 0, 0, 0)') {
            $('#colorPicker').css('background-color', color);
        }

        const radar_location = window.atticData.current_nexrad_location;
        if (radar_location != undefined) {
            const map_center_formatted = turf.point([map_center.lng, map_center.lat]);
            const radar_location_formatted = turf.point([radar_location[1], radar_location[0]]);
            const bearing = turf.bearing(map_center_formatted, radar_location_formatted);

            $('#radarCenterLine').css({
                '-webkit-transform': `rotate(${bearing}deg)`,
                '-moz-transform': `rotate(${bearing}deg)`,
                'transform': `rotate(${bearing}deg)` /* For modern browsers(CSS3)  */
            });

            const current_elevation_angle = window.atticData.current_elevation_angle;
            const distance_from_radar = turf.distance(map_center_formatted, radar_location_formatted, { units: 'kilometers' });
            const beam_height_calculated = beam_height(distance_from_radar, radar_location[2], current_elevation_angle);
            $('#colorPickerTextBeamHeight').text(`${beam_height_calculated.toFixed(1)} mi`)
        }
    }
}

module.exports = getValue;
},{"./format_value":46,"@turf/turf":105}],48:[function(require,module,exports){
var map = require('../../core/map/map');
const ut = require('../../core/utils');
const getValue = require('./get_value');

const divElem = '#colorPickerItemDiv';
const iconElem = '#colorPickerItemClass';

$(iconElem).on('click', function() {
    if (!$(iconElem).hasClass('icon-blue')) {
        $(iconElem).addClass('icon-blue');
        $(iconElem).removeClass('icon-grey');

        map.on('move', getValue);
        $('.colorPicker').show();
        $('#colorPickerText').hide();
        $('#colorPickerBorder').css('display', 'flex');

        // $(document).on('mousemove', function (e) {
        //     $('#colorPickerBorder').css({
        //         left: e.pageX - $('#colorPickerBorder').height() / 2,
        //         top: e.pageY - $('#colorPickerBorder').width() / 2,
        //     });
        //     $('#colorPicker').css({
        //         left: e.pageX - $('#colorPicker').height() / 2,
        //         top: e.pageY - $('#colorPicker').width() / 2,
        //     });
        //     $('#colorPickerBorder,#colorPicker').css('bottom', '');
        // });

        // if (window.l3rad != undefined) {
        //     if (window.prevl3rad != window.l3rad) {
        //         window.prevl3rad = window.l3rad;
        //         calculateVerticies(window.l3rad, 3, {
        //             'mode': 'geojson'
        //         });
        //     }
        // } else if (window.l2rad != undefined) {
        //     if (window.prevl2radOpt != window.l2radOptions) {
        //         window.prevl2radOpt = window.l2radOptions;

        //         var opt = window.l2radOptions;
        //         calculateVerticies(window.l2rad, 2, {
        //             'product': opt[0],
        //             'elevation': opt[1],
        //             'mode': 'geojson'
        //         });
        //     }
        // }
    } else if ($(iconElem).hasClass('icon-blue')) {
        $(iconElem).removeClass('icon-blue');
        $(iconElem).addClass('icon-grey');

        $('.colorPicker').hide();
        map.off('move', getValue);
    }
})
},{"../../core/map/map":13,"../../core/utils":30,"./get_value":47}],49:[function(require,module,exports){
(function (Buffer){(function (){
const BufferPack = require('bufferpack');

function _access_object_by_index(object, index) {
    var keys = Object.keys(object);
    return object[keys[index]];
}

class IOBuffer {
    /* Holds bytes from a buffer to simplify parsing and random access. */

    constructor (source) {
        /* Initialize the IOBuffer with the source data */
        this.buffer = source;
        this._data = source;
        this.reset();
    }
    reset() {
        /* Reset buffer back to initial state */
        this._offset = 0;
        this.clear_marks();
    }
    set_mark() {
        /* Mark the current location and return its id so that the buffer can return later */
        this._bookmarks.push(this._offset);
        return this._bookmarks.length - 1;
    }
    jump_to(mark, offset = 0) {
        /* Jump to a previously set mark */
        this._offset = this._bookmarks[mark] + offset;
    }
    offset_from(mark) {
        /* Calculate the current offset relative to a marked location */
        return this._offset - this._bookmarks[mark];
    }
    clear_marks() {
        /* Clear all marked locations */
        this._bookmarks = [];
    }
    splice(mark, newdata) {
        /* Replace the data after the marked location with the specified data */
        this.jump_to(mark);
        this._data = Buffer.from([...this._data.slice(0, this._offset), ...newdata]);
    }
    read_struct(struct_class) {
        /* Parse and return a structure from the current buffer offset */
        var struct = _unpack_from_buf(this._data, this._offset, struct_class);
        struct = this._check_if_modifier_func(struct_class, struct);
        this.skip(_structure_size(struct_class));
        return struct;
    }
    read_func(func, num_bytes = null) {
        /* Parse data from the current buffer offset using a function */
        // only advance if func succeeds
        var res = func(this.get_next(num_bytes));
        this.skip(num_bytes);
        return res;
    }
    read_ascii(num_bytes = null) {
        /* Return the specified bytes as ascii-formatted text */
        return this.read(num_bytes).toString('ascii');
    }
    read_binary(num, item_type = 'B') {
        /* Parse the current buffer offset as the specified code */
        if (item_type.includes('B')) {
            return this.read(num);
        }

        var order;
        if (['@', '=', '<', '>', '!'].includes(item_type[0])) {
            order = item_type[0];
            item_type = item_type.substring(1);
        } else {
            order = '@';
        }

        var format = `${order}${parseInt(num)}${item_type}`;
        var size = BufferPack.calcLength(format);
        return BufferPack.unpack(format, this.read(size));
    }
    read_int(size, endian, signed) {
        let buffer = this.read(size);
        let offset = 0;
        if (endian == 'little') {
            if (signed) {
                return buffer.readIntLE(offset, size);
            } else {
                return buffer.readUIntLE(offset, size);
            }
        } else {
            if (signed) {
                return buffer.readIntBE(offset, size);
            } else {
                return buffer.readUIntBE(offset, size);
            }
        }
    }
    read_array(count, dtype) {
        /* Read an array of values from the buffer */
        var dataView = new DataView(this._data.buffer, this._offset);
        var elementSize = dtype === 'float64' || dtype === 'int64' ? 8 : 4;
        var length = count === -1 ? (this._data.length - this._offset) / elementSize : count;
        var ret = new window[dtype + 'Array'](this._data.buffer, this._offset, length);
        for (let i = 0; i < length; i++) {
            ret[i] = dataView['get' + dtype](i * elementSize, true);
        }
        this.skip(ret.byteLength);
        return ret;
    }
    read(num_bytes = null) {
        /* Read and return the specified bytes from the buffer */
        var res = this.get_next(num_bytes);
        this.skip(res.length);
        return res;
    }
    get_next(num_bytes = null) {
        /* Get the next bytes in the buffer without modifying the offset */
        if (num_bytes == null) {
            return this._data.slice(this._offset);
        } else {
            return this._data.subarray(this._offset, this._offset + num_bytes);
        }
    }
    skip(num_bytes) {
        /* Jump the ahead the specified bytes in the buffer */
        if (num_bytes == null) {
            this._offset = this._data.length;
        } else {
            this._offset += num_bytes;
        }
    }
    check_remains(num_bytes) {
        /* Check that the number of bytes specified remains in the buffer */
        return this._data.length - this._offset >= num_bytes;
    }
    truncate(num_bytes) {
        /* Remove the specified number of bytes from the end of the buffer */
		this._data = this._data.slice(0, -num_bytes);
	}
    at_end() {
        /* Return whether the buffer has reached the end of data */
        return this._offset >= this._data.length;
    }
    __getitem__(item) {
        /* Return the data at the specified location */
        return this._data[item];
    }
    __str__() {
        /* Return a string representation of the IOBuffer */
        return `Size: ${this._data.length} Offset: ${this._offset}`;
    }
    __len__() {
        /* Return the amount of data in the buffer */
        return this._data.length;
    }

    _check_if_modifier_func(struct_class, struct) {
        for (var i in struct_class) {
            var func = struct_class[i][2];
            var val = _access_object_by_index(struct, i);
            if (func instanceof Function) {
                var converted = func(val);
                struct[Object.keys(struct)[i]] = converted;
            } else if (func instanceof Object) {
                var converted = func.__call__(val);
                struct[Object.keys(struct)[i]] = converted;
            }
        }
        return struct;
    }
}

function _structure_size(structure) {
    /* Find the size of a structure in bytes. */
    var format = '>' + structure.map(i => i[1]).join('');
    var size = BufferPack.calcLength(format);
    return size;
}

function _unpack_from_buf(buf, pos, structure) {
    /* Unpack a structure from a buffer. */
    var size = _structure_size(structure);
    return _unpack_structure(buf.slice(pos, pos + size), structure);
}

function _unpack_structure(buffer, structure) {
    /* Unpack a structure from a buffer. */
    var fmt = '>' + structure.map(i => i[1]).join('');  // NEXRAD is big-endian
    var lst = BufferPack.unpack(fmt, buffer);
    var result = structure.reduce((acc, curr, index) => {
        acc[curr[0]] = lst[index];
        return acc;
    }, {});
    return result;
}

// class IOBuffer:
//     """Holds bytes from a buffer to simplify parsing and random access."""

//     def __init__(self, source):
//         """Initialize the IOBuffer with the source data."""
//         self._data = bytearray(source)
//         self.reset()

//     @classmethod
//     def fromfile(cls, fobj):
//         """Initialize the IOBuffer with the contents of the file object."""
//         return cls(fobj.read())

//     def reset(self):
//         """Reset buffer back to initial state."""
//         self._offset = 0
//         self.clear_marks()

//     def set_mark(self):
//         """Mark the current location and return its id so that the buffer can return later."""
//         self._bookmarks.append(self._offset)
//         return len(self._bookmarks) - 1

//     def jump_to(self, mark, offset=0):
//         """Jump to a previously set mark."""
//         self._offset = self._bookmarks[mark] + offset

//     def offset_from(self, mark):
//         """Calculate the current offset relative to a marked location."""
//         return self._offset - self._bookmarks[mark]

//     def clear_marks(self):
//         """Clear all marked locations."""
//         self._bookmarks = []

//     def splice(self, mark, newdata):
//         """Replace the data after the marked location with the specified data."""
//         self.jump_to(mark)
//         self._data = self._data[:self._offset] + bytearray(newdata)

//     def read_struct(self, struct_class):
//         """Parse and return a structure from the current buffer offset."""
//         struct = struct_class.unpack_from(memoryview(self._data), self._offset)
//         self.skip(struct_class.size)
//         return struct

//     def read_func(self, func, num_bytes=None):
//         """Parse data from the current buffer offset using a function."""
//         # only advance if func succeeds
//         res = func(self.get_next(num_bytes))
//         self.skip(num_bytes)
//         return res

//     def read_ascii(self, num_bytes=None):
//         """Return the specified bytes as ascii-formatted text."""
//         return self.read(num_bytes).decode('ascii')

//     def read_binary(self, num, item_type='B'):
//         """Parse the current buffer offset as the specified code."""
//         if 'B' in item_type:
//             return self.read(num)

//         if item_type[0] in ('@', '=', '<', '>', '!'):
//             order = item_type[0]
//             item_type = item_type[1:]
//         else:
//             order = '@'

//         return list(self.read_struct(Struct(order + f'{int(num):d}' + item_type)))

//     def read_int(self, size, endian, signed):
//         """Parse the current buffer offset as the specified integer code."""
//         return int.from_bytes(self.read(size), endian, signed=signed)

//     def read_array(self, count, dtype):
//         """Read an array of values from the buffer."""
//         ret = np.frombuffer(self._data, offset=self._offset, dtype=dtype, count=count)
//         self.skip(ret.nbytes)
//         return ret

//     def read(self, num_bytes=None):
//         """Read and return the specified bytes from the buffer."""
//         res = self.get_next(num_bytes)
//         self.skip(len(res))
//         return res

//     def get_next(self, num_bytes=None):
//         """Get the next bytes in the buffer without modifying the offset."""
//         if num_bytes is None:
//             return self._data[self._offset:]
//         else:
//             return self._data[self._offset:self._offset + num_bytes]

//     def skip(self, num_bytes):
//         """Jump the ahead the specified bytes in the buffer."""
//         if num_bytes is None:
//             self._offset = len(self._data)
//         else:
//             self._offset += num_bytes

//     def check_remains(self, num_bytes):
//         """Check that the number of bytes specified remains in the buffer."""
//         return len(self._data[self._offset:]) == num_bytes

//     def truncate(self, num_bytes):
//         """Remove the specified number of bytes from the end of the buffer."""
//         self._data = self._data[:-num_bytes]

//     def at_end(self):
//         """Return whether the buffer has reached the end of data."""
//         return self._offset >= len(self._data)

//     def __getitem__(self, item):
//         """Return the data at the specified location."""
//         return self._data[item]

//     def __str__(self):
//         """Return a string representation of the IOBuffer."""
//         return f'Size: {len(self._data)} Offset: {self._offset}'

//     def __len__(self):
//         """Return the amount of data in the buffer."""
//         return len(self._data)

module.exports = IOBuffer;
}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":172,"bufferpack":108}],50:[function(require,module,exports){
(function (Buffer){(function (){
const BIG_ENDIAN = 0;
const LITTLE_ENDIAN = 1;

class RandomAccessFile {
	/**
	 * Store a buffer or string and add functionality for random access
	 * Unless otherwise noted all read functions advance the file's pointer by the length of the data read
	 *
	 * @param {Buffer|string} file A file as a string or Buffer to load for random access
	 * @param {number} endian Endianess of the file constants BIG_ENDIAN and LITTLE_ENDIAN are provided
	 */
	constructor(file, endian = BIG_ENDIAN) {
		this.offset = 0;
		this.buffer = null;

		// set the binary endian order
		if (endian < 0) return;
		this.bigEndian = (endian === BIG_ENDIAN);

		// string to buffer if string was provided
		if (typeof file === 'string') {
			this.buffer = Buffer.from(file, 'binary');
		} else {
			// load the buffer directly
			this.buffer = file;
		}

		// set up local read functions so we don't constantly query endianess
		if (this.bigEndian) {
			this.readFloatLocal = this.buffer.readFloatBE.bind(this.buffer);
			this.readIntLocal = this.buffer.readUIntBE.bind(this.buffer);
			this.readSignedIntLocal = this.buffer.readIntBE.bind(this.buffer);
		}	else {
			this.readFloatLocal = this.buffer.readFloatLE.bind(this.buffer);
			this.readIntLocal = this.buffer.readUIntLE.bind(this.buffer);
			this.readSignedIntLocal = this.buffer.readIntLE.bind(this.buffer);
		}
	}

	/**
	 * Get buffer length
	 *
	 * @category Positioning
	 * @returns {number}
	 */
	getLength() {
		return this.buffer.length;
	}

	/**
	 * Get current position in the file
	 *
	 * @category Positioning
	 * @returns {number}
	 */
	getPos() {
		return this.offset;
	}

	/**
	 * Seek to a provided buffer offset
	 *
	 * @category Positioning
	 * @param {number} position Byte offset
	 */
	seek(position) {
		this.offset = position;
	}

	/**
	 * Read data without advancing the offset
	 *
	 * @category Positioning
	 * @param {number} position Byte offset
	 */
	peek(position) {
		var origOffset = this.offset;
        var peekedData = this.read(position);
        this.offset = origOffset;
        return peekedData;
	}

	/**
	 * Read a string of a specificed length from the buffer
	 *
	 * @category Data
	 * @param {number} length Length of string to read
	 * @returns {string}
	 */
	readString(length) {
		const data = this.buffer.toString('utf-8', this.offset, (this.offset += length));

		return data;
	}

	/**
	 * Read a float from the buffer
	 *
	 * @category Data
	 * @returns {number}
	 */
	readFloat() {
		const float = this.readFloatLocal(this.offset);
		this.offset += 4;

		return float;
	}

	/**
	 * Read a 4-byte unsigned integer from the buffer
	 *
	 * @category Data
	 * @returns {number}
	 */
	readInt() {
		const int = this.readIntLocal(this.offset, 4);
		this.offset += 4;

		return int;
	}

	/**
	 * Read a 2-byte unsigned integer from the buffer
	 *
	 * @category Data
	 * @returns {number}
	 */
	readShort() {
		const short = this.readIntLocal(this.offset, 2);
		this.offset += 2;

		return short;
	}

	/**
	 * Read a 2-byte signed integer from the buffer
	 *
	 * @category Data
	 * @returns {number}
	 */
	readSignedInt() {
		const short = this.readSignedIntLocal(this.offset, 2);
		this.offset += 2;

		return short;
	}

	/**
	 * Read a single byte from the buffer
	 *
	 * @category Data
	 * @returns {number}
	 */
	readByte() {
		return this.read();
	}

	// read a set number of bytes from the buffer
	/**
	 * Read a set number of bytes from the buffer
	 *
	 * @category Data
	 * @param {number} length Number of bytes to read
	 * @returns {number|number[]} number if length = 1, otherwise number[]
	 */
	read(length) {
		let data = null;
		if (length == undefined) {
			length = this.buffer.length;
		}

		if (length > 1) {
			data = this.buffer.slice(this.offset, this.offset + length);
			this.offset += length;
		} else {
			data = this.buffer[this.offset];
			this.offset += 1;
		}
		return data;
	}

	/**
	 * Advance the pointer forward a set number of bytes
	 *
	 * @category Positioning
	 * @param {number} length Number of bytes to skip
	 */
	skip(length) {
		this.offset += length;
	}
}

module.exports = RandomAccessFile;
// module.exports.RandomAccessFile = RandomAccessFile;
// module.exports.BIG_ENDIAN = BIG_ENDIAN;
// module.exports.LITTLE_ENDIAN = LITTLE_ENDIAN;
}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":172}],51:[function(require,module,exports){
(function (Buffer){(function (){
const pako = require('pako');

/**
 * Detect the NEXRAD level from a radar file.
 * 
 * @param {Buffer} buffer A buffer containing the radar file data.
 * @returns {Number} A number representing the radar file's NEXRAD level. This can be "2", "3", or "undefined" in the case of an error.
 */
function detect_level(buffer) {
    // detect the magic number BZh9 (31, 139)
    if (buffer[0] == 31 && buffer[1] == 139) {
        var decompressed = pako.inflate(buffer);
        decompressed = Buffer.from(decompressed);
        buffer = decompressed;
    }

    const pseudo_header = buffer.slice(0, 100);
    const pseudo_header_string = pseudo_header.toString('UTF-8');

    if (pseudo_header_string.startsWith('SDUS')) {
        // standard level 3 file
        return 3;
    } else if (pseudo_header_string.startsWith('AR2V')) {
        // standard level 2 file (e.g. tape is "AR2V0006.")
        return 2;
    } else if (pseudo_header_string.startsWith('ARCHIVE2')) {
        // older level 2 file
        return 2;
    } else {
        return undefined;
    }
}

module.exports = detect_level;
}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":172,"pako":118}],52:[function(require,module,exports){
const get_nexrad_location = require('../nexrad_locations').get_nexrad_location;
const calculate_coordinates = require('../../plot/calculate_coordinates');
const display_file_info = require('../../libnexrad_helpers/display_file_info');
const elevation_menu = require('../../libnexrad_helpers/level2/elevation_menu');
const dealias = require('../../libnexrad_helpers/level2/dealias/dealias');
const map = require('../../../core/map/map');

// https://stackoverflow.com/a/8043061
function _zero_pad(num) {
    const formatted_number = num.toLocaleString('en-US', {
        minimumIntegerDigits: 2,
        useGrouping: false
    })
    return formatted_number;
}

/**
 * A class that provides simple access to the radar data returned from the 'NEXRADLevel2File' class.
 * It sorts the radar sweeps by elevation, and provides several functions that assist with retrieving specific bits of data.
 */
class Level2Factory {
    constructor (initial_radar_obj) {
        this.initial_radar_obj = initial_radar_obj;

        this.nexrad_level = 2;
        this.filename = initial_radar_obj.filename;

        this.header = initial_radar_obj.volume_header;
        this.vcp = initial_radar_obj.vcp;
        this.nscans = this.initial_radar_obj.nscans;
        this.vcp = this.get_vcp();

        this.station = this.header.icao;
        const station_remove_irregular = this.station.replaceAll('\u0000', '').trim();
        if (station_remove_irregular == '') {
            const station_from_filename = this.filename.substring(0, 4);
            this.station = station_from_filename;
            this.header.icao = station_from_filename;
        }

        this._group_and_sort_sweeps();
        this.elevation_angle = this.get_elevation_angle(1);
        this.elevation_number = 1;
    }

    /**
     * Get the gate values for a given moment and elevation number.
     * 
     * @param {*} moment The moment being requested. Can be one of the following: 'REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', 'CFP'
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @param {Boolean} retrieve_dealiased Whether or not to return the dealiased data.
     * @returns {Array} A 2D array, with each sub-array being an array of its corresponding radial's data.
     */
    get_data(moment, elevation_number, retrieve_dealiased) {
        var key = 'data';
        if (retrieve_dealiased == undefined) { retrieve_dealiased = false }
        if (retrieve_dealiased) { key = 'dealiased_data' }
        var data = this.get_value_from_sweep(key, moment, elevation_number);
        if (retrieve_dealiased) {
            return data;
        }

        var prod_hdr = this.grouped_sweeps[elevation_number][0][moment];
        var offset = prod_hdr.offset;
        var scale = prod_hdr.scale;

        var scaleFunction = function(x) {
            if (x <= 1) { return null; }
            else { return (x - offset) / scale; }
        };
        data = this._scale_values(data, scaleFunction);

        return data;
    }

    /**
     * Get the azimuth angles for a given moment and elevation number.
     * 
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @returns {Array} An array, containing all of the azimuth angles for each radial in the sweep.
     */
    get_azimuth_angles(elevation_number) {
        var azimuths = this.get_value_from_sweep('azimuth_angle', 'msg_header', elevation_number);

        var msg_type = this.initial_radar_obj.msg_type;
        var scale;
        if (msg_type == '1') {
            scale = 180 / (4096 * 8);
        } else {
            scale = 1;
        }

        var scaleFunction = function(x) { return x * scale; };
        azimuths = this._scale_values(azimuths, scaleFunction);

        // adjust the azimuth values
        azimuths = this._adjust_azimuths(azimuths);
        return azimuths;
    }

    /**
     * Get the ranges (distances) from the radar, for each gate along a radial at any azimuth.
     * 
     * @param {*} moment The moment being requested. Can be one of the following: 'REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', 'CFP'
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @returns {Array} An array, containing all of the ranges for any azimuth in the sweep.
     */
    get_ranges(moment, elevation_number) {
        var prod_hdr = this.grouped_sweeps[elevation_number][0][moment];
        var gate_count = prod_hdr.ngates;
        var gate_size = prod_hdr.gate_spacing / 1000;
        var first_gate = prod_hdr.first_gate / 1000;
        // level 2 = 1832 0.25 2.125
        var prod_range = [...Array(gate_count + 1).keys()];
        for (var i in prod_range) {
            prod_range[i] = (prod_range[i] - 0.5) * gate_size + first_gate;
        }
        return prod_range;
    }

    /**
     * Gets a specific value in a moment for each radial in a sweep. This can be useful when gathering data that varies across all radials.
     * 
     * @param {String} key The key to look for in the requested moment's object.
     * @param {String} moment The moment being requested. Can be one of the following: 'REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', 'CFP', 'ELV', 'RAD', 'VOL', 'header', 'msg_header'
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @returns {Array} An array, containing the requested values for each radial in a sweep.
     */
    get_value_from_sweep(key, moment, elevation_number) {
        var output = [];
        var curSweep = this.grouped_sweeps[elevation_number];
        for (var i in curSweep) {
            var curRecord = curSweep[i];
            if (curRecord.hasOwnProperty(moment)) {
                var data = curRecord[moment][key];
                if (key == 'data') {
                    data = Array.from(data);
                }
                output.push(data);
            }
        }
        return output;
    }

    /**
     * Retrieves the radar's coordinates and altitude, by first searching a radial record, and if that fails, by looking up the radar's ICAO.
     * 
     * @param {String} station (optional) The four-letter ICAO of a radar station. If passed, the function will return the coordinates of that station.
     * This is useful for older AR2V files where the location data is not included.
     * @returns {Array} An array in the format [latitude, longitude, altitude (in meters)]. Will return [0, 0, 0] if the radar's location could not be determined.
     */
    get_location(station = null) {
        var lat, lng, alt;

        if (station != null) {
            [lat, lng, alt] = get_nexrad_location(station);
            return [lat, lng, alt];
        }
        var msg_type = this.initial_radar_obj.msg_type;
        if (msg_type == '1') {
            if (this.header.hasOwnProperty('icao')) {
                [lat, lng, alt] = get_nexrad_location(this.header['icao']);
            } else {
                return [0, 0, 0];
            }
        } else {
            if (this.initial_radar_obj.radial_records[0].hasOwnProperty('VOL')) {
                var dic = this.initial_radar_obj.radial_records[0]['VOL'];
                var height = dic['height'] + dic['feedhorn_height'];
                [lat, lng, alt] = [dic['lat'], dic['lon'], height];
            } else if (this.header.hasOwnProperty('icao')) {
                [lat, lng, alt] = get_nexrad_location(this.header['icao']);
            } else {
                return [0, 0, 0];
            }
        }

        return [lat, lng, alt];
    }

    /**
     * Get the elevation angle for a given elevation number.
     * 
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     */
    get_elevation_angle(elevation_number) {
        var msg_type = this.initial_radar_obj.msg_type;
        var elev_angle;
        if (msg_type == '1') {
            elev_angle = this.get_value_from_sweep('elevation_angle', 'msg_header', elevation_number)[0];
        } else {
            elev_angle = this.initial_radar_obj.vcp.cut_parameters[elevation_number - 1].elevation_angle;
        }

        return elev_angle * (180 / (4096 * 8));
    }

    /**
     * Gets the date at which the radar volume was collected.
     * If an elevation number is passed, the date for that sweep is returned.
     * If nothing is passed, the date for the whole volume is returned.
     * 
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @returns {Date} A Date object that contains the radar volume's time.
     */
    get_date(elevation_number = null) {
        var modifiedJulianDate, milliseconds;

        if (elevation_number == null) {
            modifiedJulianDate = this.header.date;
            milliseconds = this.header.time;
        } else {
            // the date & time for the first radial in a sweep. each radial has its own date,
            // but we'll only use the first one, representing the start of the sweep.
            var sweepHeader = this.grouped_sweeps[elevation_number][0].header;
            modifiedJulianDate = sweepHeader.date;
            milliseconds = sweepHeader.ms;
        }

        if (this.station == 'KULM' || this.station == 'WILU' || this.station == 'FWLX') {
            modifiedJulianDate = this.grouped_sweeps[1][0].header.date;
        }

        return this._julian_and_millis_to_date(modifiedJulianDate, milliseconds);
    }

    /**
     * Finds the numerical VCP (volume coverage pattern) of the radar file. Returns 'null' if it could not be found.
     * 
     * @returns {Number} The VCP of the radar file.
     */
    get_vcp() {
        var volMomentVCP = this?.initial_radar_obj?.radial_records?.[0]?.['VOL']?.vcp;
        var msg_headerMomentVCP = this?.initial_radar_obj?.radial_records?.[0]?.['msg_header']?.vcp;
        var headerVCP = this?.vcp?.['msg5_header']?.['pattern_number'];

        if (headerVCP == 0) {
            return volMomentVCP ??
                msg_headerMomentVCP ??
                null;
        } else {
            return headerVCP ??
                volMomentVCP ??
                msg_headerMomentVCP ??
                null;
        }
    }

    /**
     * Function that plots the factory with its radar data to the map.
     * 
     * @param {*} moment The moment being requested. Can be one of the following: 'REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', 'CFP'
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     */
    plot(moment, elevation_number) {
        this.elevation_angle = this.get_elevation_angle(elevation_number);
        this.elevation_number = elevation_number;

        // we don't want to load the elevation menu multiple times for the same radar file
        const file_id = this.generate_unique_id();
        if (window.atticData.L2_file_id != file_id) { // if we're on a new file
            window.atticData.L2_file_id = file_id; // set the new id globally
            elevation_menu.apply(this, [this.list_elevations_and_products()]); // load the elevation menu
        }

        this.display_file_info();
        const options = {'product': moment, 'elevation': elevation_number};
        calculate_coordinates(this, options);
    }

    /**
     * Function that writes the necessary file information to the DOM.
     */
    display_file_info() {
        // execute code from another file
        display_file_info.apply(this);
    }

    /**
     * Function that loops over every sweep, and stores information about the sweep in an array.
     * This is useful for creating buttons in the DOM. Often abbreviated "lEAP".
     * 
     * @returns {Array} An array with sorted information about each sweep. Formatted as such:
     * [elevation angle, elevation number, moments in the elevation, waveform type]
     */
    list_elevations_and_products() {
        var elevation_angle;
		var elev_angle_arr = [];
        if (this.initial_radar_obj.msg_type == '31') {
            for (var key = 0; key < this.initial_radar_obj.vcp.cut_parameters.length; key++) {
                try {
                    var elevations_base = this.initial_radar_obj.vcp.cut_parameters[key];
                    var product_base = this.grouped_sweeps[key + 1][0];

                    var all_products_arr = [];
                    ['REF', 'VEL', 'RHO', 'PHI', 'ZDR', 'SW'].forEach(prop => {
                        if (product_base.hasOwnProperty(prop)) {
                            all_products_arr.push(prop);
                        }
                    });

                    elevation_angle = elevations_base.elevation_angle * (180 / (4096 * 8));
                    elev_angle_arr.push([
                        elevation_angle,
                        (key + 1).toString(),
                        all_products_arr,
                        elevations_base.waveform_type
                    ]);
                } catch (e) {
                    console.warn(`Warning on elevation ${elevation_angle}: ${e}`);
                }
            }
        } else if (this.initial_radar_obj.msg_type == '1') {
            for (var key = 1; key < this.grouped_sweeps.length; key++) {
                try {
                    var elevations_base = this.grouped_sweeps[key][0].msg_header;
                    var product_base = this.grouped_sweeps[key][0];

                    var all_products_arr = [];
                    ['REF', 'VEL', 'RHO', 'PHI', 'ZDR', 'SW'].forEach(prop => {
                        if (product_base.hasOwnProperty(prop)) {
                            all_products_arr.push(prop);
                        }
                    });

                    elevation_angle = elevations_base.elevation_angle * (180 / (4096 * 8));
                    elev_angle_arr.push([
                        elevation_angle,
                        key.toString(),
                        all_products_arr,
                        null
                    ]);
                } catch (e) {
                    console.warn(`Warning on elevation ${elevation_angle}: ${e}`);
                }
            }
        }
        return elev_angle_arr;
    }

    /**
     * Function that returns an array with the product abbreviations of all of the products contained in the radar file
     * 
     * @returns {Array} An array with all of the radar file's moments
     */
	get_all_products() {
		var lEAP = this.list_elevations_and_products();

		var all_products = [];
		for (var i in lEAP) {
			var products = lEAP[i][2];
			for (var n in products) {
				if (!all_products.includes(products[n])) {
					all_products.push(products[n]);
				}
			}
		}

		return all_products;
	}

    /**
     * Generates a unique ID associated with the file.
     * 
     * @returns {String} A string with the file's ID.
     */
    generate_unique_id() {
        const station = this.station;
        const date = this.get_date();
        const year = date.getUTCFullYear();
        const month = _zero_pad(date.getUTCMonth() + 1);
        const day = _zero_pad(date.getUTCDate());
        const hour = _zero_pad(date.getUTCHours());
        const minute = _zero_pad(date.getUTCMinutes());
        const second = _zero_pad(date.getUTCSeconds());

        const formatted_string = `${station}${year}${month}${day}_${hour}${minute}${second}`;
        return formatted_string;
    }

    /**
     * Zooms and pans the map to the radar's location.
     */
    fly_to_location() {
        const location = this.get_location();
        map.flyTo({ center: [location[1], location[0]], zoom: 6.5, speed: 1.75, essential: true });
    }

    /**
     * Returns the nyquist velocity for a given sweep.
     * 
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @returns {Number} The nyquist velocity.
     */
    get_nyquist_vel(elevation_number) {
        var nyquist; 
        if (this.initial_radar_obj.msg_type == '31') {
            nyquist = this.grouped_sweeps[elevation_number][0].RAD.nyquist_vel;
        } else if (this.initial_radar_obj.msg_type == '1') {
            nyquist = this.grouped_sweeps[elevation_number][0].msg_header.nyquist_vel;
        }
        return nyquist / 100;
    }

    /**
     * Dealiases the velocity data for a given sweep.
     * The data is outputted to the "dealiased_data" key for the "VEL" moment in the sweep.
     * 
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     */
    dealias(elevation_number) {
        const nyquist = this.get_nyquist_vel(elevation_number);
        const velocities = this.get_data('VEL', elevation_number);
        const dealiased_velocities = dealias(velocities, nyquist);

        for (var i = 0; i < this.grouped_sweeps[elevation_number].length; i++) {
            this.grouped_sweeps[elevation_number][i].VEL.dealiased_data = dealiased_velocities[i];
        }
    }

    /**
     * Checks whether or not a given sweep has been dealiased yet.
     * 
     * @param {Number} elevation_number A number that represents the elevation's index from the base sweep. Indices start at 1.
     * @returns {Boolean} Whether or not the sweep has been dealiased yet.
     */
    check_if_already_dealiased(elevation_number) {
        if (this.grouped_sweeps[elevation_number][0]?.VEL?.dealiased_data == undefined) {
            // we HAVEN'T dealiased yet
            return false;
        } else {
            // we HAVE dealiased
            return true;
        }
    }

    /**
     * Helper function that converts a modified julian date (MJD) and milliseconds to a JavaScript Date object.
     * 
     * @param {Number} modifiedJulianDate A Number representing the modified julian date.
     * @param {Number} milliseconds A Number representing the number of milliseconds.
     * e.g. 0 ms = 00:00 UTC, 82800000 ms == 23:00 UTC
     * @returns {Date} The two input values converted to a Date object.
     */
    _julian_and_millis_to_date(modifiedJulianDate, milliseconds) {
        // page 14 - https://www.roc.noaa.gov/wsr88d/PublicDocs/ICDs/2620001Y.pdf
        // page 16 - https://www.roc.noaa.gov/wsr88d/PublicDocs/ICDs/2620002U.pdf
        var julianDate = modifiedJulianDate + 2440586.5;
        // https://stackoverflow.com/a/36073807
        var millis = (julianDate - 2440587.5) * 86400000;

        var fileDateObj = new Date(millis);
        var fileHours = msToTime(milliseconds).hours;
        var fileMinutes = msToTime(milliseconds).minutes;
        var fileSeconds = msToTime(milliseconds).seconds;
        fileDateObj.setUTCHours(fileHours);
        fileDateObj.setUTCMinutes(fileMinutes);
        fileDateObj.setUTCSeconds(fileSeconds);

        return fileDateObj;
    }

    /**
     * Helper function that scales all of the values in an input array to the desired size. This is useful when converting NEXRAD binary data from its stored format to its readable format, as defined in the ICD.
     * 
     * @param {*} inputValues A 1D or 2D array containing values you wish to scale.
     * @param {Function} scaleFunction The function to perform on every value. For example, passing 'function(x) { return x * 2 }' will double each element in the array.
     * @returns {Array} An array in the same shape as the original, but with the values scaled.
     */
    _scale_values(inputValues, scaleFunction) {
        for (var i in inputValues) {
            if (Array.isArray(inputValues[i])) { // this check allows for the scaling of 2D arrays
                inputValues[i] = inputValues[i].map(i => scaleFunction(i)); // perform the scaling function on every sub-element
            } else {
                inputValues[i] = scaleFunction(inputValues[i]);
            }
        }
        return inputValues;
    }

    /**
     * Helper function that performs some adjustments on the azimuth values.
     * Taken from the example at:
     * https://unidata.github.io/MetPy/latest/examples/formats/NEXRAD_Level_2_File.html
     * 
     * @param {Array} azimuths An array of azimuth values to adjust.
     * @returns {Array} An array with the corrected azimuth values.
     */
    _adjust_azimuths(azimuths) {
        var diff = azimuths.slice(1).map((val, index) => val - azimuths[index]);
        var crossed = diff.map(i => i < -180);
        diff = diff.map((val, index) => crossed[index] ? val + 360 : val);
        var avg_spacing = diff.reduce((a, b) => a + b) / diff.length;

        // Convert mid-point to edge
        azimuths = azimuths.slice(0, -1).map((val, index) => (val + azimuths[index + 1]) / 2);
        azimuths = azimuths.map((val, index) => crossed[index] ? val + 180 : val);

        // Concatenate with overall start and end of data we calculate using the average spacing
        azimuths = [azimuths[0] - avg_spacing].concat(azimuths, [azimuths[azimuths.length - 1] + avg_spacing]);
        return azimuths;
    }

    /**
     * Helper function that groups all of the
     * radial records found in the file by their elevation number.
     * 
     * Creates a new array in the Level2Factory class called 'grouped_sweeps'.
     */
    _group_and_sort_sweeps() {
        var grouped = [];
        var scan_msgs = this.initial_radar_obj.scan_msgs; // the 2d array that stores the index of each radial record for each elevation
        var radial_records = this.initial_radar_obj.radial_records; // the array that stores all radial records from the file
        for (var i = 0; i < scan_msgs.length; i++) { // loop through all of the scan messages indices
            var curElevNum = i + 1; // elevation numbers are 1-based, while JS array indices are 0-based
            var curSweep = scan_msgs[i]; // pull the scan messages for the current sweep
            for (var n in curSweep) { // loop through the current sweep's scan messages (a 1d array of indices)
                var radialRecordNumber = curSweep[n]; // the current scan message index
                var cur_radial_record = radial_records[radialRecordNumber]; // pull the relevant radial record pertaining to the current scan message index

                if (grouped[curElevNum] == undefined) { // create a sub-array in the output array if it doesn't exist
                    grouped[curElevNum] = [];
                }
                grouped[curElevNum].push(cur_radial_record); // push the current radial record to its correct position
            }
        }
        this.grouped_sweeps = grouped;
    }
}

function msToTime(s) {
    // Pad to 2 or 3 digits, default is 2
    function pad(n, z) {
        z = z || 2;
        return ('00' + n).slice(-z);
    }
    var ms = s % 1000;
    s = (s - ms) / 1000;
    var secs = s % 60;
    s = (s - secs) / 60;
    var mins = s % 60;
    var hrs = (s - mins) / 60;
    return {
        'hours': pad(hrs),
        'minutes': pad(mins),
        'seconds': pad(secs),
        'milliseconds': pad(ms, 3),
    }
    // return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + pad(ms, 3);
}

module.exports = Level2Factory;
},{"../../../core/map/map":13,"../../libnexrad_helpers/display_file_info":60,"../../libnexrad_helpers/level2/dealias/dealias":61,"../../libnexrad_helpers/level2/elevation_menu":62,"../../plot/calculate_coordinates":67,"../nexrad_locations":58}],53:[function(require,module,exports){
(function (Buffer){(function (){
// const fs = require('fs');
// https://github.com/cscott/seek-bzip
const bzip = require('seek-bzip');
const compressjs = require('../../../../lib/compressjs/main');
const pako = require('pako');
const BufferPack = require('bufferpack');
const RandomAccessFile = require('../buffer_tools/RandomAccessFile');
const get_nexrad_location = require('../nexrad_locations').get_nexrad_location;

function _arraysEqual(arr1, arr2) {
    return JSON.stringify(arr1) == JSON.stringify(arr2);
}

function min(arr) { return Math.min(...[...new Set(arr)]) }
function max(arr) { return Math.max(...[...new Set(arr)]) }

/**
 * Check if the file is gzip compressed.
 * If it is, return the decompressed RAF.
 * If not, return the original RAF.
 */
function _decompressFile(fh) {
    var magic = fh.peek(3);
    magic = Array.from(magic);
    if (_arraysEqual(magic, [31, 139, 8])) {
        // console.log('GZIP compressed.');
        var inflated = pako.inflate(fh.buffer);
        return new RandomAccessFile(Buffer.from(inflated));
    } else {
        return fh;
    }
}

function _bufferToString(buffer) {
    return buffer.toString('UTF-8');
}

class NEXRADLevel2File {
    constructor (fileBuffer, filename) {
        var fh = new RandomAccessFile(fileBuffer);
        fh = _decompressFile(fh);

        this.filename = filename;

        this.nexradLevel = 2;

        var size = _structure_size(VOLUME_HEADER);
        this.volume_header = _unpack_structure(fh.read(size), VOLUME_HEADER);
        var compression_record = fh.read(COMPRESSION_RECORD_SIZE);

        // read the records in the file, decompressing as needed
        var compression_or_ctm_info = compression_record.slice(CONTROL_WORD_SIZE, CONTROL_WORD_SIZE + 2);
        var buf;
        if (_bufferToString(compression_or_ctm_info) == 'BZ') {
            buf = _decompress_records(fh);
        } else if (_arraysEqual(new Uint8Array(compression_or_ctm_info), new Uint8Array([0x00, 0x00])) || _arraysEqual(new Uint8Array(compression_or_ctm_info), new Uint8Array([0x09, 0x80]))) {
            buf = fh.read();
        } else {
            console.error('Unknown compression record.');
        }
        this._fh = fh;

        // read the records from the buffer
        this._records = [];
        var buf_length = buf.length;
        var pos = 0;
        while (pos < buf_length) {
            var record = _get_record_from_buf(buf, pos);
            pos = record[0];
            var dic = record[1];
            this._records.push(dic);
        }

        // pull out radial records (1 or 31) which contain the moment data.
        this.radial_records = this._records.filter(r => r['header']['type'] == 31);
        this.msg_type = '31';
        if (this.radial_records.length == 0) {
            this.radial_records = this._records.filter(r => r['header']['type'] == 1);
            this.msg_type = '1';
        }
        if (this.radial_records.length == 0) {
            console.error('No MSG31 records found, cannot read file');
        }
        var elev_nums = this.radial_records.map(m => m['msg_header']['elevation_number']);
        this.scan_msgs = Array.from({ length: Math.max(...elev_nums) }, (_, i) => {
            return elev_nums.reduce((acc, val, idx) => {
                if (val === i + 1) acc.push(idx);
                return acc;
            }, []);
        });
        this.nscans = this.scan_msgs.length;

        // pull out the vcp record
        var msg_5 = this._records.filter(r => r['header']['type'] == 5);

        if (msg_5.length) {
            this.vcp = msg_5[0];
        } else {
            // There is no VCP Data.. This is uber dodgy
            this.vcp = null;

            console.error(`No MSG5 detected. Setting to meaningless data. Rethink your life choices and be ready for errors. Specifically fixed angle data will be missing`);
        }
        return;
    }
    location(station = null) {
        /*
        Find the location of the radar.

        Returns all zeros if location is not available.

        Returns
        -------
        latitude : float
            Latitude of the radar in degrees.
        longitude : float
            Longitude of the radar in degrees.
        height : int
            Height of radar and feedhorn in meters above mean sea level.
        */

        var lat, lon, alt;
        if (this.msg_type == '1' && station != null) {
            [lat, lon, alt] = get_nexrad_location(station);
        } else if (
            this.volume_header.hasOwnProperty('icao') &&
            this.msg_type == '1'
        ) {
            [lat, lon, alt] = get_nexrad_location(this.volume_header['icao']);
        } else if (this.radial_records[0].hasOwnProperty('VOL')) {
            var dic = this.radial_records[0]['VOL'];
            var height = dic['height'] + dic['feedhorn_height'];
            [lat, lon, alt] = [dic['lat'], dic['lon'], height];
        } else {
            return [0.0, 0.0, 0.0];
        }
        return [lat, lon, alt];
    }
    scan_info(scans = null) {
        /*
        Return a list of dictionaries with scan information.

        Parameters
        ----------
        scans : list ot None
            Scans (0 based) for which ray (radial) azimuth angles will be
            retrieved.  None (the default) will return the angles for all
            scans in the volume.

        Returns
        -------
        scan_info : list, optional
            A list of the scan performed with a dictionary with keys
            'moments', 'ngates', 'nrays', 'first_gate' and 'gate_spacing'
            for each scan.  The 'moments', 'ngates', 'first_gate', and
            'gate_spacing' keys are lists of the NEXRAD moments and gate
            information for that moment collected during the specific scan.
            The 'nrays' key provides the number of radials collected in the
            given scan.
        */

        let info = [];

        if (scans === null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        for (var scan of scans) {
            var nrays = this.get_nrays(scan);
            if (nrays < 2) {
                this.nscans -= 1;
                continue;
            }
            var msg31_number = this.scan_msgs[scan][0];
            var msg = this.radial_records[msg31_number];
            var nexrad_moments = ['REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', 'CFP'];
            var moments = nexrad_moments.filter(f => f in msg);
            var ngates = moments.map(f => msg[f]['ngates']);
            var gate_spacing = moments.map(f => msg[f]['gate_spacing']);
            var first_gate = moments.map(f => msg[f]['first_gate']);
            info.push({
                'nrays': nrays,
                'ngates': ngates,
                'gate_spacing': gate_spacing,
                'first_gate': first_gate,
                'moments': moments
            });
        }
        return info;
    }
    get_vcp_pattern() {
        /*
        Return the numerical volume coverage pattern (VCP) or None if unknown.
        */
        if (this.vcp == null) {
            return null;
        } else {
            return this.vcp['msg5_header']['pattern_number'];
        }
    }
    get_nrays(scan) {
        /*
        Return the number of rays in a given scan.

        Parameters
        ----------
        scan : int
            Scan of interest (0 based).

        Returns
        -------
        nrays : int
            Number of rays (radials) in the scan.
        */

        return this.scan_msgs[scan].length;
    }
    get_ngates(scan_num, moment) {
        // obj = this.scan_info([scan])[0]
        // moment_index = obj['moments'].index(moment)
        // return obj['ngates'][moment_index]
        var dic = this.radial_records[this.scan_msgs[scan_num][0]][moment];
        var ngates = dic['ngates'];
        return ngates;
    }
    get_range(scan_num, moment) {
        /*
        Return an array of gate ranges for a given scan and moment.

        Parameters
        ----------
        scan_num : int
            Scan number (0 based).
        moment : 'REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', or 'CFP'
            Moment of interest.

        Returns
        -------
        range : ndarray
            Range in meters from the antenna to the center of gate (bin).
        */

        var dic = this.radial_records[this.scan_msgs[scan_num][0]][moment];
        var ngates = dic['ngates'];
        var first_gate = dic['first_gate'];
        var gate_spacing = dic['gate_spacing'];
        return Array.from({ length: ngates }, (_, i) => i * gate_spacing + first_gate);
    }
    // helper functions for looping over scans
    _msg_nums(scans) {
        /* Find the all message number for a list of scans. */
        return scans.flatMap(i => this.scan_msgs[i]);
    }
    _radial_array(scans, key) {
        /* Return an array of radial header elements for all rays in scans. */
        var msg_nums = this._msg_nums(scans);
        var temp = msg_nums.map(i => this.radial_records[i]['msg_header'][key]);
        return temp;
    }
    _radial_sub_array(scans, key) {
        /* Return an array of RAD or msg_header elements for all rays in scans. */
        var msg_nums = this._msg_nums(scans);
        var tmp;
        if (this.msg_type == '31') {
            tmp = msg_nums.map(i => this.radial_records[i]['RAD'][key]);
        } else {
            tmp = msg_nums.map(i => this.radial_records[i]['msg_header'][key]);
        }
        return tmp;
    }
    get_times(scans = null) {
        /*
        Retrieve the times at which the rays were collected.

        Parameters
        ----------
        scans : list or None
            Scans (0-based) to retrieve ray (radial) collection times from.
            None (the default) will return the times for all scans in the
            volume.

        Returns
        -------
        time_start : Datetime
            Initial time.
        time : ndarray
            Offset in seconds from the initial time at which the rays
            in the requested scans were collected.
        */

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        var days = this._radial_array(scans, 'collect_date');
        var secs = this._radial_array(scans, 'collect_ms').map(ms => ms / 1000.0);
        var offset = new Date((parseInt(days[0]) - 1) * 86400000 + parseInt(secs[0]) * 1000);
        var time_start = new Date(offset.getTime());
        var time = secs.map((sec, index) => {
            return sec - parseInt(secs[0]) + (parseInt(days[index]) - parseInt(days[0])) * 86400;
        });
        return [time_start, time];
    }
    get_azimuth_angles(scans = null) {
        /*
        Retrieve the azimuth angles of all rays in the requested scans.

        Parameters
        ----------
        scans : list ot None
            Scans (0 based) for which ray (radial) azimuth angles will be
            retrieved. None (the default) will return the angles for all
            scans in the volume.

        Returns
        -------
        angles : ndarray
            Azimuth angles in degress for all rays in the requested scans.
        */

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        var scale;
        if (this.msg_type == '1') {
            scale = 180 / (4096 * 8.0);
        } else {
            scale = 1.0;
        }
        return this._radial_array(scans, 'azimuth_angle').map(i => i * scale);
    }
    get_elevation_angles(scans = null) {
        /*
        Retrieve the elevation angles of all rays in the requested scans.

        Parameters
        ----------
        scans : list or None
            Scans (0 based) for which ray (radial) azimuth angles will be
            retrieved. None (the default) will return the angles for
            all scans in the volume.

        Returns
        -------
        angles : ndarray
            Elevation angles in degress for all rays in the requested scans.
        */

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        var scale;
        if (this.msg_type == '1') {
            scale = 180 / (4096 * 8.0);
        } else {
            scale = 1.0;
        }
        return this._radial_array(scans, 'elevation_angle').map(i => i * scale);
    }
    get_target_angles(scans = null) {
        /*
        Retrieve the target elevation angle of the requested scans.

        Parameters
        ----------
        scans : list or None
            Scans (0 based) for which the target elevation angles will be
            retrieved. None (the default) will return the angles for all
            scans in the volume.

        Returns
        -------
        angles : ndarray
            Target elevation angles in degress for the requested scans.
        */

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        if (this.msg_type == '31') {
            var cut_parameters;
            if (this.vcp != null) {
                cut_parameters = this.vcp['cut_parameters'];
            }
            var scale = 360.0 / 65536.0;
            return scans.map(i => cut_parameters[i]['elevation_angle'] * scale);
        } else {
            var scale = 180 / (4096 * 8.0);
            var msgs = scans.map(i => this.radial_records[this.scan_msgs[i][0]]);
            var msgs_elevation = msgs.map(m => m.msg_header.elevation_angle * scale);
            var rounded_elevation = msgs_elevation.map(e => Math.round(e * 10) / 10);
            return rounded_elevation;
        }
    }
    get_nyquist_vel(scans = null) {
        /*
        Retrieve the Nyquist velocities of the requested scans.

        Parameters
        ----------
        scans : list or None
            Scans (0 based) for which the Nyquist velocities will be
            retrieved. None (the default) will return the velocities for all
            scans in the volume.

        Returns
        -------
        velocities : ndarray
            Nyquist velocities (in m/s) for the requested scans.
        */

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        return this._radial_sub_array(scans, 'nyquist_vel').map(i => i * 0.01);
    }
    get_unambigous_range(scans = null) {
        /*
        Retrieve the unambiguous range of the requested scans.

        Parameters
        ----------
        scans : list or None
            Scans (0 based) for which the unambiguous range will be retrieved.
            None (the default) will return the range for all scans in the
            volume.

        Returns
        -------
        unambiguous_range : ndarray
            Unambiguous range (in meters) for the requested scans.
        */

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }
        // unambiguous range is stored in tenths of km, x100 for meters
        return this._radial_sub_array(scans, 'unambig_range').map(i => i * 100.0);
    }
    get_data(moment, scans = null, raw_data = false) {
        /*
        Retrieve moment data for a given set of scans.

        Masked points indicate that the data was not collected, below
        threshold or is range folded.

        Parameters
        ----------
        moment : 'REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', or 'CFP'
            Moment for which to to retrieve data.
        raw_data : bool
            True to return the raw data, False to perform masking as well as
            applying the appropiate scale and offset to the data.  When
            raw_data is True values of 1 in the data likely indicate that
            the gate was not present in the sweep, in some cases in will
            indicate range folded data.
        scans : list or None.
            Scans to retrieve data from (0 based). None (the default) will
            get the data for all scans in the volume.

        Returns
        -------
        data : ndarray
        */

        function _masked_less_equal(arr, val) {
            var masked_data = [];
            for (var i = 0; i < arr.length; i++) {
                var row = [];
                for (var j = 0; j < arr[i].length; j++) {
                    if (arr[i][j] <= val) {
                        row.push(null);
                    } else {
                        row.push(arr[i][j]);
                    }
                }
                masked_data.push(row);
            }
            return masked_data;
        }

        if (scans == null) {
            scans = Array.from({ length: this.nscans }, (_, i) => i);
        }

        var max_ngates = this.get_ngates(scans[0], moment);

        // determine the number of rays
        var msg_nums = this._msg_nums(scans);
        var nrays = msg_nums.length;
        // extract the data
        var set_datatype = false;
        var data = Array.from({ length: nrays }, () => Array(max_ngates).fill(1));
        for (var [i, msg_num] of msg_nums.entries()) {
            var msg = this.radial_records[msg_num];
            if (!msg.hasOwnProperty(moment)) {
                continue;
            }
            // if (!set_datatype) {
            //     data = data.astype('>' + _bits_to_code(msg, moment));
            //     set_datatype = true;
            // }
            var ngates = Math.min(msg[moment]['ngates'], max_ngates, msg[moment]['data'].length);
            data[i] = Array.from(msg[moment]['data']);
        }
        // return raw data if requested
        if (raw_data) {
            return data;
        }

        // mask, scan and offset, assume that the offset and scale
        // are the same in all scans/gates
        for (var scan of scans) {  // find a scan which contains the moment
            var msg_num = this.scan_msgs[scan][0];
            var msg = this.radial_records[msg_num];
            if (msg.hasOwnProperty(moment)) {
                var offset = new Float32Array([msg[moment]['offset']])[0];
                var scale = new Float32Array([msg[moment]['scale']])[0];
                var mask = data.map(row => row.map(val => val <= 1));
                var scaled_data = data.map(row => row.map(val => (val - offset) / scale));
                return scaled_data.map((row, i) => row.map((val, j) => {
                    var is_masked = mask[i][j];
                    return is_masked ? null : val;
                }));
            }
        }

        // moment is not present in any scan, mask all values
        return data.map(row => row.map(val => (val <= 1) ? null : val));
    }
}

function _bits_to_code(msg, moment) {
    /*
    Convert number of bits to the proper code for unpacking.
    Based on the code found in MetPy:
    https://github.com/Unidata/MetPy/blob/40d5c12ab341a449c9398508bd41
    d010165f9eeb/src/metpy/io/_tools.py#L313-L321
    */

    if (msg['header']['type'] == 1) {
        return 'B';
        // var word_size = msg[moment]['data'].dtype;
        // if (word_size = 'uint16') {
        //     return 'H';
        // } else if (word_size == 'uint8') {
        //     return 'B';
        // } else {
        //     console.warn('Unsupported bit size, returning 'B'.');
        //     return 'B';
        // }
    } else if (msg['header']['type'] == 31) {
        var word_size = msg[moment]['word_size'];
        if (word_size == 16) {
            return 'H';
        } else if (word_size == 8) {
            return 'B';
        } else {
            console.warn('Unsupported bit size, returning "B".');
            return 'B';
        }
    } else {
        console.error(`Unsupported msg type ${msg['header']['type']}`);
    }
}

function _get_record_from_buf(buf, pos) {
    /* Retrieve and unpack a NEXRAD record from a buffer. */
    var dic = {'header': _unpack_from_buf(buf, pos, MSG_HEADER)};
    var msg_type = dic['header']['type'];
    // if (msg_type != 31) {
    //     console.log(msg_type)
    // }

    var new_pos;
    if (msg_type == 31) {
        new_pos = _get_msg31_from_buf(buf, pos, dic);
    } else if (msg_type == 5) {
        // Sometimes we encounter incomplete buffers
        try {
            new_pos = _get_msg5_from_buf(buf, pos, dic);
        } catch (e) {
            console.warn('Encountered incomplete MSG5. File may be corrupt.');
            new_pos = pos + RECORD_SIZE;
        }
    } else if (msg_type == 29) {
        new_pos = _get_msg29_from_buf(pos, dic);
        // warnings.warn('Message 29 encountered, not parsing.', RuntimeWarning)
    } else if (msg_type == 1) {
        new_pos = _get_msg1_from_buf(buf, pos, dic);
    } else { // not message 31 or 1, no decoding performed
        new_pos = pos + RECORD_SIZE;
    }

    return [new_pos, dic];
}

function _get_msg1_from_buf(buf, pos, dic) {
    /* Retrieve and unpack a MSG1 record from a buffer. */
    var msg_header_size = _structure_size(MSG_HEADER);
    var msg1_header = _unpack_from_buf(buf, pos + msg_header_size, MSG_1);
    dic['msg_header'] = msg1_header;

    var sur_nbins = parseInt(msg1_header['sur_nbins']);
    var doppler_nbins = parseInt(msg1_header['doppler_nbins']);

    var sur_step = parseInt(msg1_header['sur_range_step']);
    var doppler_step = parseInt(msg1_header['doppler_range_step']);

    var sur_first = parseInt(msg1_header['sur_range_first']);
    var doppler_first = parseInt(msg1_header['doppler_range_first']);
    if (doppler_first > 2**15) {
        doppler_first = doppler_first - 2**16;
    }

    function _check_empty(moment, nbins) {
        var key = moment;
        if (nbins == 0) {
            key = `${moment}_empty`;
        }
        return key;
    }

    if (msg1_header['sur_pointer']) {
        var offset = pos + msg_header_size + msg1_header['sur_pointer']
        var data = Uint8Array.from(buf.slice(offset, offset + sur_nbins));

        var key = _check_empty('REF', sur_nbins);
        dic[key] = {
            'ngates': sur_nbins,
            'gate_spacing': sur_step,
            'first_gate': sur_first,
            'data': data,
            'scale': 2.0,
            'offset': 66.0,
        }
    }
    if (msg1_header['vel_pointer']) {
        var offset = pos + msg_header_size + msg1_header['vel_pointer']
        var data = Uint8Array.from(buf.slice(offset, offset + doppler_nbins));

        var key = _check_empty('VEL', doppler_nbins);
        dic[key] = {
            'ngates': doppler_nbins,
            'gate_spacing': doppler_step,
            'first_gate': doppler_first,
            'data': data,
            'scale': 2.0,
            'offset': 129.0,
        }
        if (msg1_header['doppler_resolution'] == 4) {
            // 1 m/s resolution velocity, offset remains 129.
            dic['VEL']['scale'] = 1.0
        }
    }
    if (msg1_header['width_pointer']) {
        var offset = pos + msg_header_size + msg1_header['width_pointer']
        var data = Uint8Array.from(buf.slice(offset, offset + doppler_nbins));

        var key = _check_empty('SW', doppler_nbins);
        dic[key] = {
            'ngates': doppler_nbins,
            'gate_spacing': doppler_step,
            'first_gate': doppler_first,
            'data': data,
            'scale': 2.0,
            'offset': 129.0,
        }
    }
    return pos + RECORD_SIZE;
}

function _get_msg29_from_buf(pos, dic) {
    var msg_size = dic['header']['size'];
    if (msg_size == 65535) {
        msg_size = (dic['header']['segments'] << 16) | dic['header']['seg_num'];
    }
    var msg_header_size = _structure_size(MSG_HEADER)
    var new_pos = pos + msg_header_size + msg_size
    return new_pos;
}

function _get_msg5_from_buf(buf, pos, dic) {
    /* Retrieve and unpack a MSG5 record from a buffer. */
    var msg_header_size = _structure_size(MSG_HEADER);
    var msg5_header_size = _structure_size(MSG_5);
    var msg5_elev_size = _structure_size(MSG_5_ELEV);

    dic['msg5_header'] = _unpack_from_buf(buf, pos + msg_header_size, MSG_5);
    dic['cut_parameters'] = [];
    for (var i = 0; i < dic['msg5_header']['num_cuts']; i++) {
        var pos2 = pos + msg_header_size + msg5_header_size + msg5_elev_size * i;
        dic['cut_parameters'].push(_unpack_from_buf(buf, pos2, MSG_5_ELEV));
    }
    return pos + RECORD_SIZE;
}

function _get_msg31_from_buf(buf, pos, dic) {
    /* Retrieve and unpack a MSG31 record from a buffer. */
    var msg_size = dic['header']['size'] * 2 - 4;
    var msg_header_size = _structure_size(MSG_HEADER);
    var new_pos = pos + msg_header_size + msg_size;
    var mbuf = buf.slice(pos + msg_header_size, new_pos);
    var msg_31_header = _unpack_from_buf(mbuf, 0, MSG_31);

    var block_pointers = Object.values(msg_31_header).filter((v, k) => Object.keys(msg_31_header)[k].startsWith('block_pointer') && v > 0);
    for (var i in block_pointers) {
        var block_pointer = block_pointers[i];
        var [block_name, block_dic] = _get_msg31_data_block(mbuf, block_pointer);
        dic[block_name] = block_dic;
    }

    dic['msg_header'] = msg_31_header;
    return new_pos;
}

function _get_msg31_data_block(buf, ptr) {
    /* Unpack a msg_31 data block into a dictionary. */
    var block_name = _bufferToString(buf.slice(ptr + 1, ptr + 4)).trim();
    // remove invalid characters (https://stackoverflow.com/a/12756018)
    block_name = block_name.replace(/[^a-z0-9 ,.?!]/ig, '');

    var dic;
    if (block_name == 'VOL') {
        dic = _unpack_from_buf(buf, ptr, VOLUME_DATA_BLOCK);
    } else if (block_name == 'ELV') {
        dic = _unpack_from_buf(buf, ptr, ELEVATION_DATA_BLOCK);
    } else if (block_name == 'RAD') {
        dic = _unpack_from_buf(buf, ptr, RADIAL_DATA_BLOCK);
    } else if (['REF', 'VEL', 'SW', 'ZDR', 'PHI', 'RHO', 'CFP'].includes(block_name)) {
        dic = _unpack_from_buf(buf, ptr, GENERIC_DATA_BLOCK);
        var ngates = dic['ngates'];
        var ptr2 = ptr + _structure_size(GENERIC_DATA_BLOCK);
        var data;
        if (dic['word_size'] == 16) {
            var buffer = buf.slice(ptr2, ptr2 + ngates * 2);
            buffer.swap16();
            data = new Uint16Array(buffer.buffer, buffer.byteOffset, buffer.length / 2);
        } else if (dic['word_size'] == 8) {
            data = Array.from(buf.slice(ptr2, ptr2 + ngates)); // Uint8Array.from()
        } else {
            console.error(`Unsupported bit size: ${s}.`);
        }

        dic['data'] = data;
    } else {
        dic = {};
    }
    return [block_name, dic];
}

class RadarDecompressor {
    constructor() {
        this.unused_data;
    }
    _decompress_chunk(chunk) {
        const algorithm = compressjs.Bzip2;
        return algorithm.decompressFile(chunk);
        // skip 32 bits 'BZh9' header
        // return bzip.decodeBlock(chunk, 32);
        // https://github.com/jvrousseau/bzip2.js
        // return bzip2.simple(bzip2.array(chunk));
    }
    decompress(data) {
        this.compressedData = data;

        var rafData = new RandomAccessFile(data);
        var blockSize = Math.abs(rafData.readInt());
        // console.log(blockSize, data.slice(0, 4))

        data = data.slice(CONTROL_WORD_SIZE, data.length);
        var uncompressed = this._decompress_chunk(data);

        this.unused_data = data.slice(blockSize, data.length);
        if (blockSize > data.length) {
            this.unused_data = new Buffer.alloc(0);
        }

        return uncompressed;
    }
}

function _decompress_records(file_handler) {
    /* Decompressed the records from an BZ2 compressed Archive 2 file. */
    file_handler.seek(0);
    // read all data from the file
    var cbuf = file_handler.peek();
    var decompressor = new RadarDecompressor();
    // skip the radar file header (24 bits)
    var skip = _structure_size(VOLUME_HEADER);
    // initialize the buffer with all of the radar file's data, except for the header
    var buf = [decompressor.decompress(cbuf.slice(skip, cbuf.length))];
    // while there's still data to decompress
    while (decompressor.unused_data.length) {
        // store the remaining compressed data
        cbuf = decompressor.unused_data;
        // create a new RadarDecompressor
        decompressor = new RadarDecompressor();
        var decompressed = decompressor.decompress(cbuf);
        // uncompress and push to the final buffer
        buf.push(decompressed);
    }
    // combine the array of Uint8Arrays + 1 buffer to a single buffer
    var finalBuffer = Buffer.concat(buf);
    // trim the 'COMPRESSION_RECORD_SIZE' from the start of the buffer
    finalBuffer = finalBuffer.slice(COMPRESSION_RECORD_SIZE, finalBuffer.length);
    return finalBuffer;
}

function _structure_size(structure) {
    /* Find the size of a structure in bytes. */
    var format = '>' + structure.map(i => i[1]).join('');
    var size = BufferPack.calcLength(format);
    return size;
}

function _unpack_from_buf(buf, pos, structure) {
    /* Unpack a structure from a buffer. */
    var size = _structure_size(structure);
    return _unpack_structure(buf.slice(pos, pos + size), structure);
}

function _unpack_structure(string, structure) {
    /* Unpack a structure from a string. */
    var fmt = '>' + structure.map(i => i[1]).join('');  // NEXRAD is big-endian
    var lst = BufferPack.unpack(fmt, string);
    var result = structure.reduce((acc, curr, index) => {
        acc[curr[0]] = lst[index];
        return acc;
    }, {});
    return result;
}

// NEXRAD Level II file structures and sizes
// The deails on these structures are documented in:
// "Interface Control Document for the Achive II/User" RPG Build 12.0
// Document Number 2620010E
// and
// "Interface Control Document for the RDA/RPG" Open Build 13.0
// Document Number 2620002M
// Tables and page number refer to those in the second document unless
// otherwise noted.
const RECORD_SIZE = 2432;
const COMPRESSION_RECORD_SIZE = 12;
const CONTROL_WORD_SIZE = 4;

// format of structure elements
// section 3.2.1, page 3-2
const CODE1 = 'B';
const CODE2 = 'H';
const INT1 = 'B';
const INT2 = 'H';
const INT4 = 'I';
const REAL4 = 'f';
const REAL8 = 'd';
const SINT1 = 'b';
const SINT2 = 'h';
const SINT4 = 'i';

// Figure 1 in Interface Control Document for the Archive II/User
// page 7-2
const VOLUME_HEADER = [
    ['tape', '9s'],
    ['extension', '3s'],
    ['date', 'I'],
    ['time', 'I'],
    ['icao', '4s']
]

// Table II Message Header Data
// page 3-7
const MSG_HEADER = [
    ['size', INT2],  // size of data, no including header
    ['channels', INT1],
    ['type', INT1],
    ['seq_id', INT2],
    ['date', INT2],
    ['ms', INT4],
    ['segments', INT2],
    ['seg_num', INT2],
]

// Table XVII Digital Radar Generic Format Blocks (Message Type 31)
// pages 3-87 to 3-89
const MSG_31 = [
    ['id', '4s'],  // 0-3
    ['collect_ms', INT4],  // 4-7
    ['collect_date', INT2],  // 8-9
    ['azimuth_number', INT2],  // 10-11
    ['azimuth_angle', REAL4],  // 12-15
    ['compress_flag', CODE1],  // 16
    ['spare_0', INT1],  // 17
    ['radial_length', INT2],  // 18-19
    ['azimuth_resolution', CODE1],  // 20
    ['radial_spacing', CODE1],  // 21
    ['elevation_number', INT1],  // 22
    ['cut_sector', INT1],  // 23
    ['elevation_angle', REAL4],  // 24-27
    ['radial_blanking', CODE1],  // 28
    ['azimuth_mode', SINT1],  // 29
    ['block_count', INT2],  // 30-31
    ['block_pointer_1', INT4],  // 32-35  Volume Data Constant XVII-E
    ['block_pointer_2', INT4],  // 36-39  Elevation Data Constant XVII-F
    ['block_pointer_3', INT4],  // 40-43  Radial Data Constant XVII-H
    ['block_pointer_4', INT4],  // 44-47  Moment 'REF' XVII-{B/I}
    ['block_pointer_5', INT4],  // 48-51  Moment 'VEL'
    ['block_pointer_6', INT4],  // 52-55  Moment 'SW'
    ['block_pointer_7', INT4],  // 56-59  Moment 'ZDR'
    ['block_pointer_8', INT4],  // 60-63  Moment 'PHI'
    ['block_pointer_9', INT4],  // 64-67  Moment 'RHO'
    ['block_pointer_10', INT4],  // Moment 'CFP'
]


// Table III Digital Radar Data (Message Type 1)
// pages 3-7 to
const MSG_1 = [
    ['collect_ms', INT4],  // 0-3
    ['collect_date', INT2],  // 4-5
    ['unambig_range', SINT2],  // 6-7
    ['azimuth_angle', CODE2],  // 8-9
    ['azimuth_number', INT2],  // 10-11
    ['radial_status', CODE2],  // 12-13
    ['elevation_angle', INT2],  // 14-15
    ['elevation_number', INT2],  // 16-17
    ['sur_range_first', CODE2],  // 18-19
    ['doppler_range_first', CODE2],  // 20-21
    ['sur_range_step', CODE2],  // 22-23
    ['doppler_range_step', CODE2],  // 24-25
    ['sur_nbins', INT2],  // 26-27
    ['doppler_nbins', INT2],  // 28-29
    ['cut_sector_num', INT2],  // 30-31
    ['calib_const', REAL4],  // 32-35
    ['sur_pointer', INT2],  // 36-37
    ['vel_pointer', INT2],  // 38-39
    ['width_pointer', INT2],  // 40-41
    ['doppler_resolution', CODE2],  // 42-43
    ['vcp', INT2],  // 44-45
    ['spare_1', '8s'],  // 46-53
    ['spare_2', '2s'],  // 54-55
    ['spare_3', '2s'],  // 56-57
    ['spare_4', '2s'],  // 58-59
    ['nyquist_vel', SINT2],  // 60-61
    ['atmos_attenuation', SINT2],  // 62-63
    ['threshold', SINT2],  // 64-65
    ['spot_blank_status', INT2],  // 66-67
    ['spare_5', '32s'],  // 68-99
    // 100+  reflectivity, velocity and/or spectral width data, CODE1
]

// Table XI Volume Coverage Pattern Data (Message Type 5 & 7)
// pages 3-51 to 3-54
const MSG_5 = [
    ['msg_size', INT2],
    ['pattern_type', CODE2],
    ['pattern_number', INT2],
    ['num_cuts', INT2],
    ['clutter_map_group', INT2],
    ['doppler_vel_res', CODE1],  // 2: 0.5 degrees, 4: 1.0 degrees
    ['pulse_width', CODE1],  // 2: short, 4: long
    ['spare', '10s'],  // halfwords 7-11 (10 bytes, 5 halfwords)
]

const MSG_5_ELEV = [
    ['elevation_angle', CODE2],  // scaled by 360/65536 for value in degrees.
    ['channel_config', CODE1],
    ['waveform_type', CODE1],
    ['super_resolution', CODE1],
    ['prf_number', INT1],
    ['prf_pulse_count', INT2],
    ['azimuth_rate', CODE2],
    ['ref_thresh', SINT2],
    ['vel_thresh', SINT2],
    ['sw_thresh', SINT2],
    ['zdr_thres', SINT2],
    ['phi_thres', SINT2],
    ['rho_thres', SINT2],
    ['edge_angle_1', CODE2],
    ['dop_prf_num_1', INT2],
    ['dop_prf_pulse_count_1', INT2],
    ['spare_1', '2s'],
    ['edge_angle_2', CODE2],
    ['dop_prf_num_2', INT2],
    ['dop_prf_pulse_count_2', INT2],
    ['spare_2', '2s'],
    ['edge_angle_3', CODE2],
    ['dop_prf_num_3', INT2],
    ['dop_prf_pulse_count_3', INT2],
    ['spare_3', '2s'],
]

// Table XVII-B Data Block (Descriptor of Generic Data Moment Type)
// pages 3-90 and 3-91
const GENERIC_DATA_BLOCK = [
    ['block_type', '1s'],
    ['data_name', '3s'],  // VEL, REF, SW, RHO, PHI, ZDR
    ['reserved', INT4],
    ['ngates', INT2],
    ['first_gate', SINT2],
    ['gate_spacing', SINT2],
    ['thresh', SINT2],
    ['snr_thres', SINT2],
    ['flags', CODE1],
    ['word_size', INT1],
    ['scale', REAL4],
    ['offset', REAL4],
    // then data
]

// Table XVII-E Data Block (Volume Data Constant Type)
// page 3-92
const VOLUME_DATA_BLOCK = [
    ['block_type', '1s'],
    ['data_name', '3s'],
    ['lrtup', INT2],
    ['version_major', INT1],
    ['version_minor', INT1],
    ['lat', REAL4],
    ['lon', REAL4],
    ['height', SINT2],
    ['feedhorn_height', INT2],
    ['refl_calib', REAL4],
    ['power_h', REAL4],
    ['power_v', REAL4],
    ['diff_refl_calib', REAL4],
    ['init_phase', REAL4],
    ['vcp', INT2],
    ['spare', '2s'],
]

// Table XVII-F Data Block (Elevation Data Constant Type)
// page 3-93
const ELEVATION_DATA_BLOCK = [
    ['block_type', '1s'],
    ['data_name', '3s'],
    ['lrtup', INT2],
    ['atmos', SINT2],
    ['refl_calib', REAL4],
]

// Table XVII-H Data Block (Radial Data Constant Type)
// pages 3-93
const RADIAL_DATA_BLOCK = [
    ['block_type', '1s'],
    ['data_name', '3s'],
    ['lrtup', INT2],
    ['unambig_range', SINT2],
    ['noise_h', REAL4],
    ['noise_v', REAL4],
    ['nyquist_vel', SINT2],
    ['spare', '2s'],
]

module.exports = NEXRADLevel2File;
}).call(this)}).call(this,require("buffer").Buffer)
},{"../../../../lib/compressjs/main":104,"../buffer_tools/RandomAccessFile":50,"../nexrad_locations":58,"buffer":172,"bufferpack":108,"pako":118,"seek-bzip":159}],54:[function(require,module,exports){
const get_nexrad_location = require('../nexrad_locations').get_nexrad_location;
const nexrad_locations = require('../nexrad_locations').NEXRAD_LOCATIONS;
const nexrad_station_abbreviations = require('../nexrad_station_abbreviations');
const level3_formatters = require('./level3_formatters');
const calculate_coordinates = require('../../plot/calculate_coordinates');
const display_file_info = require('../../libnexrad_helpers/display_file_info');
const { get_date_diff_obj } = require('../../../core/misc/get_date_diff');
const luxon = require('luxon');
const ut = require('../../../core/utils');

const plot_storm_tracks = require('../../libnexrad_helpers/level3/storm_tracks/plot_storm_tracks');
const plot_tornado_vortex_signature = require('../../libnexrad_helpers/level3/storm_tracks/plot_tornado_vortex_signature');

// https://stackoverflow.com/a/8043061
function _zero_pad(num) {
    const formatted_number = num.toLocaleString('en-US', {
        minimumIntegerDigits: 2,
        useGrouping: false
    })
    return formatted_number;
}

/**
 * A class that provides simple access to the radar data returned from the 'NEXRADLevel3File' class.
 */
class Level3Factory {
    constructor (initial_radar_obj) {
        this.initial_radar_obj = initial_radar_obj;

        this.nexrad_level = 3;

        this.header = initial_radar_obj.header;
        this.vcp = initial_radar_obj.prod_desc.vcp;
        this.product_code = this.header.code;
        this.product_abbv = initial_radar_obj.product_abbv;
        this.station = nexrad_station_abbreviations[this.initial_radar_obj.siteID];
        this.elevation_angle = this.get_elevation_angle();

        const tab_pages = this.initial_radar_obj?.tab_pages;
        const graph_pages = this.initial_radar_obj?.graph_pages;
        if (this.product_code == 58) {
            // storm tracks
            this.formatted_tabular = level3_formatters.format_storm_tracks(tab_pages, graph_pages);
        } else if (this.product_code == 59) {
            // hail index
            this.formatted_tabular = level3_formatters.format_hail_index(tab_pages);
        } else if (this.product_code == 61) {
            // tornado vortex signature
            this.formatted_tabular = level3_formatters.format_tornado_vortex_signature(tab_pages);
        } else if (this.product_code == 141) {
            // mesocyclone detection
            this.formatted_tabular = level3_formatters.format_mesocyclone_detection(tab_pages);
        }
    }
    /**
     * Get the gate values in the Level 3 file. Returns the scaled values, as documented per the ICD.
     * 
     * @returns {Array} A 2D array, with each sub-array being an array of its corresponding radial's data.
     */
    get_data() {
        var data = this.initial_radar_obj.sym_block[0][0].data;
        data = this._scale_values(data);

        return data;
    }
    /**
     * Get the azimuth angles in the Level 3 file.
     * 
     * @returns {Array} An array, containing all of the azimuth angles for each radial in the sweep.
     */
    get_azimuth_angles() {
        var start_az = this.initial_radar_obj.sym_block[0][0].start_az;
        var end_az = this.initial_radar_obj.sym_block[0][0].end_az;
        var azimuths = start_az.concat([end_az[end_az.length - 1]]);
        return azimuths;
    }
    /**
     * Get the ranges (distances) from the radar, for each gate along a radial at any azimuth.
     * 
     * @returns {Array} An array, containing all of the ranges for any azimuth in the sweep.
     */
    get_ranges() {
        var max_range = this.initial_radar_obj.max_range;
        var num_bins = this.initial_radar_obj.sym_block[0][0].num_bins;
        var prod_range = np_linspace(0, max_range, num_bins + 1);
        return prod_range;
    }
    /**
     * Retrieves the radar's coordinates and altitude, by first searching the file's header, and if that fails, by looking up the radar's ICAO.
     * 
     * @param {String} station (optional) The four-letter ICAO of a radar station. If passed, the function will return the coordinates of that station.
     * @returns {Array} An array in the format [latitude, longitude, altitude]. Will return [0, 0, 0] if the radar's location could not be determined.
     */
    get_location(station = null) {
        var lat, lng, alt;

        if (station != null) {
            [lat, lng, alt] = get_nexrad_location(station);
            return [lat, lng, alt];
        } else {
            if (this.initial_radar_obj.hasOwnProperty('lat')) {
                // the coordinates and altitude are provided, so we'll return them
                return [this.initial_radar_obj.lat, this.initial_radar_obj.lon, this.initial_radar_obj.height];
            } else if (this.initial_radar_obj.hasOwnProperty('siteID')) {
                // no coordinates, but a site id is provided, so we'll look it up
                [lat, lng, alt] = get_nexrad_location(this.station);
            } else {
                // no coordinates OR site id, likely a corrupted file
                return [0, 0, 0];
            }
        }
    }
    /**
     * Finds the numerical VCP (volume coverage pattern) of the radar file. Returns 'null' if it could not be found.
     * 
     * @returns {Number} The VCP of the radar file.
     */
    get_vcp() {
        if (this.vcp != undefined) {
            return this.vcp;
        } else if (this.initial_radar_obj.prod_desc.vcp != undefined) {
            return this.initial_radar_obj.prod_desc.vcp;
        } else {
            return null;
        }
    }
    /**
     * Gets the date at which the radar volume was collected.
     * 
     * @returns {Date} A Date object that contains the radar volume's time.
     */
    get_date() {
        return this.initial_radar_obj.metadata.vol_time;
    }

    /**
     * Returns the elevation angle of the radar product.
     * 
     * @returns {Number} A number representing the file's elevation angle.
     * If the angle is "undefined", the return value will be "0.0".
     */
    get_elevation_angle() {
        const el_angle = this.initial_radar_obj.metadata.el_angle;
        return el_angle !== undefined ? el_angle : 0.0;
    }

    /**
     * Function that plots the factory with its radar data to the map.
     * No parameters are needed since this is a Level 3 file, and nothing is returned.
     */
    plot() {
        // 58 = storm tracks (NST)
        // 141 = mesocyclone detection (NMD)
        // 61 = tornado vortex signature (TVS)
        if (this.product_code == 58) {
            plot_storm_tracks(this);
        } else if (this.product_code == 61) {
            plot_tornado_vortex_signature(this);
        } else {
            this.display_file_info();
            calculate_coordinates(this);
        }
    }

    /**
     * Function that writes the necessary file information to the DOM.
     */
    display_file_info() {
        // execute code from another file
        display_file_info.apply(this);
    }

    /**
     * Generates a unique ID associated with the file.
     * 
     * @returns {String} A string with the file's ID.
     */
    generate_unique_id() {
        const station = this.station;
        const product_abbv = this.product_abbv;
        const date = this.get_date();
        const year = date.getUTCFullYear();
        const month = _zero_pad(date.getUTCMonth() + 1);
        const day = _zero_pad(date.getUTCDate());
        const hour = _zero_pad(date.getUTCHours());
        const minute = _zero_pad(date.getUTCMinutes());
        const second = _zero_pad(date.getUTCSeconds());

        const formatted_string = `${station}_${product_abbv}_${year}_${month}_${day}_${hour}_${minute}_${second}`;
        return formatted_string;
    }

    /**
     * Gets the file's age in minutes.
     * 
     * @returns {Number} The file's age in minutes
     */
    get_file_age_in_minutes() {
        const date_diff = get_date_diff_obj(this.get_date(), new Date());
        const duration = luxon.Duration.fromObject(date_diff);
        return duration.shiftTo('minutes').toObject().minutes;
    }

    /**
     * Zooms and pans the map to the radar's location.
     */
    fly_to_location() {
        const location = this.get_location();
        map.flyTo({ center: [location[1], location[0]], zoom: 6.5, speed: 1.75, essential: true });
    }

    /**
     * Helper function that scales all of the values in an input array to the desired size. This is useful when converting NEXRAD binary data from its stored format to its readable format, as defined in the ICD.
     * 
     * @param {*} inputValues A 1D or 2D array containing values you wish to scale.
     * @returns {Array} An array in the same shape as the original, but with the values scaled.
     */
    _scale_values(input_values) {
        for (var i in input_values) {
            if (ArrayBuffer.isView(input_values[i])) { // convert to regular array if it's a typed array
                input_values[i] = Array.from(input_values[i]);
            }
            if (Array.isArray(input_values[i])) { // this check allows for the scaling of 2D arrays
                input_values[i] = input_values[i].map(i => this.initial_radar_obj.map_data.__call__(i)); // perform the scaling function on every sub-element
            } else {
                input_values[i] = this.initial_radar_obj.map_data.__call__(input_values[i]);
            }
        }
        return input_values;
    }
}

// https://stackoverflow.com/a/40475362/18758797
function np_linspace(startValue, stopValue, cardinality) {
    var arr = [];
    var step = (stopValue - startValue) / (cardinality - 1);
    for (var i = 0; i < cardinality; i++) {
      arr.push(startValue + (step * i));
    }
    return arr;
}

module.exports = Level3Factory;
},{"../../../core/misc/get_date_diff":28,"../../../core/utils":30,"../../libnexrad_helpers/display_file_info":60,"../../libnexrad_helpers/level3/storm_tracks/plot_storm_tracks":64,"../../libnexrad_helpers/level3/storm_tracks/plot_tornado_vortex_signature":65,"../../plot/calculate_coordinates":67,"../nexrad_locations":58,"../nexrad_station_abbreviations":59,"./level3_formatters":55,"luxon":111}],55:[function(require,module,exports){
/**
 * Function that takes all of the tabular pages in a storm tracks product, and creates a nicely-formatted object with the data.
 * The code is from netbymatt's "nexrad-level-3-data":
 * https://github.com/netbymatt/nexrad-level-3-data/blob/main/src/products/58/formatter.js
 * 
 *  format the text data provided
 *  extract data from lines that follow this format
 *  "  P2     244/125   232/ 38     245/116   246/107   247/ 97   NO DATA    1.1/ 0.9"
 *  using this header information
 *  " STORM    CURRENT POSITION              FORECAST POSITIONS               ERROR  ",
 *  "  ID     AZRAN     MOVEMENT    15 MIN    30 MIN    45 MIN    60 MIN    FCST/MEAN",
 *  "        (DEG/NM)  (DEG/KTS)   (DEG/NM)  (DEG/NM)  (DEG/NM)  (DEG/NM)     (NM)   "
 *  returns an an arrya of objects {
 *  id: id of storm assigned by algorithm
 *  current: {deg,nm} current position from radar in degrees and nautical miles
 *  movement: {deg,kts} movement of storm in degrees and knots
 *  forecast: [{deg, nm},...] forecasted position of storm in degrees and nm from radar site at [15,30,45,60] minutes
 *  }
 * 
 * @param {*} pages An array with all of the tabular pages to parse. Each array element should be one page, with lines separated by "\n".
 * @returns {Object} An object with the formatted storm tracks.
 */
function format_storm_tracks(tab_pages, graph_pages) {
    // parse no data, new and positional info
    // kts returns {deg,kts} instead of the default {deg,nm}
    const parseStringPosition = (position, kts = false) => {
        // fixed strings
        if (position === 'NO DATA') return null;
        if (position === '  NEW  ') return 'new';

        // extract the two numbers
        const values = position.match(/([ 0-9]{3})\/([ 0-9]{3})/);
        // couldn't find two numbers
        if (!values) return undefined;
        // return the formatted numbers
        if (kts) {
            return {
                deg: +values[1],
                kts: +values[2],
            };
        }
        return {
            deg: +values[1],
            nm: +values[2],
        };
    };

    var graph_formatted = {};
    graph_pages.forEach((page) => {
        var storm_ids = [];
        var dbzm_hgt_arr = [];
        page.forEach((line) => {
            if (!line.hasOwnProperty('text')) return;
            line = line.text;

            if (line.startsWith(' STORM ID')) {
                // an array of storm ids, e.g. ['Q9', 'I1', 'F0', 'X9', 'C9', 'V7']
                storm_ids = line.replace(' STORM ID', '').split(' ').filter(String);
            } else if (line.startsWith(' DBZM HGT')) {
                // an array with max dBZ and max dBZ height, e.g. ['38', '8.6', '38', '9.7', '38', '9.6']
                dbzm_hgt_arr = line.replace(' DBZM HGT', '').split(' ').filter(String);
            }
        })
        for (var i = 0; i < storm_ids.length; i++) {
            var storm_id = storm_ids[i];
            var dbzm_index = i * 2;
            var hgt_index = i * 2 + 1;
            graph_formatted[storm_id] = {
                'dbzm': parseFloat(dbzm_hgt_arr[dbzm_index]),
                'hgt': parseFloat(dbzm_hgt_arr[hgt_index])
            };
        }
    })

    // extract relevant data
    // divide tabular data into lines
    tab_pages = tab_pages.map(i => i.split('\n'));
    if (!tab_pages) return {};
    var result = {};

    // format line by line
    tab_pages.forEach((page) => {
        page.forEach((line) => {
            // console.log(`"${line}"`)
            // look for ID and current position to find valid line
            const idMatch = line.match(/ {2}([A-Z][0-9]) {5}[0-9 ]{3}\/[0-9 ]{3} {3}/);
            // console.log(!(idMatch == null))
            if (!idMatch) return;

            // store the id
            const id = idMatch[1];

            // extract 6 positional values
            const rawPositions = [...line.matchAll(/([ 0-9]{3}\/[ 0-9]{3}|NO DATA| {2}NEW {2})/g)];
            // extract the matched strings and parse into objects
            // second string (index 1) is in knots
            const stringPositions = rawPositions.map((position, index) => parseStringPosition(position[1], index === 1));

            // format the result
            const [current, movement, ...forecast] = stringPositions;
            var graph_data;
            if (graph_formatted[id] != undefined) { graph_data = graph_formatted[id]; }

            // store to array
            result[id] = {
                current, movement, forecast, graph_data,
            };
        });
    });

    return {
		storms: result,
	};
}

/**
 * Same as the first function, but for the NHI (Hail Index) product. The code can be found here:
 * https://github.com/netbymatt/nexrad-level-3-data/blob/main/src/products/59/formatter.js
 * 
 *  format the text data provided
 *  extract data from lines that follow this format
 *  "        U3               0                   50                <0.50            "
 *  using this header information
 *  "      STORM       PROBABILITY OF       PROBABILITY OF       MAX EXPECTED        "
 *  "        ID        SEVERE HAIL (%)         HAIL (%)         HAIL SIZE (IN)       "
 *  returns an array of objects {
 *  id: id of storm assigned by algorithm
 *  probSevere: probability of severe hail %
 *  probHail: probability of hail %
 *  maxSize: max expected size of hail (read as <x.xx in)
 *  }
 */
function format_hail_index(pages) {
    // extract relevant data
    // divide tabular data into lines
    pages = pages.map(i => i.split('\n'));
    if (!pages) return {};
    const result = {};

    // format line by line
    pages.forEach((page) => {
        page.forEach((line) => {
            // extrat values
            const rawMatch = line.match(/ {8}([A-Z]\d) {4} *([0-9.]{1,3}) *([0-9.]{1,3}) *<?>?([0-9.]{4,6}) */);
            if (!rawMatch) return;

            // format the result
            const [, id, probSevere, probHail, maxSize] = [...rawMatch];
            // store to array
            result[id] = {
                probSevere: +probSevere,
                probHail: +probHail,
                maxSize: +maxSize,
            };
        });
    });

    return {
		hail: result,
	};
}

/**
 * Same as the first function, but for the NTV (Tornado Vortex Signature) product. The code can be found here:
 * https://github.com/netbymatt/nexrad-level-3-data/blob/main/src/products/61/formatter.js
 * 
 *  format the text data provided
 *  extract data from lines that follow this format
 *  "  TVS    F0    74/ 52    35    52    52/ 4.9   >11.1  < 4.9/ 16.0    16/ 4.9    "
 *  using this header information
 *  " Feat  Storm   AZ/RAN  AVGDV  LLDV  MXDV/Hgt   Depth    Base/Top   MXSHR/Hgt    "
 *  " Type    ID   (deg,nm)  (kt)  (kt)  (kt,kft)   (kft)     (kft)     (E-3/s,kft)  "
 *  returns an array of objects {
 *  type: feature type
 *  id: id of storm assigned by algorithm
 *  az: azimuth
 *  range: range to storm
 *  avgdv
 *  lldv
 *  mxdv
 *  mxdvhgt
 *  depth
 *  base
 *  top
 *  maxshear
 *  maxshearheight
 *  }
 */
function format_tornado_vortex_signature(pages) {
    // extract relevant data
    // divide tabular data into lines
    pages = pages.map(i => i.split('\n'));
	if (!pages) return {};
	const result = {};

	// format line by line
	pages.forEach((page) => {
		page.forEach((line) => {
			// extrat values
			const rawMatch = line.match(/ {2}([A-Z0-9]{3}) {4}([A-Z][0-9]) {3,5}([0-9.]{1,3})\/ {0,2}([0-9.]{1,3}) {3,5}([0-9.]{1,3}) {3,5}([0-9.]{1,3}) {3,5}([0-9.]{1,3})\/ {0,2}([0-9.]{1,4})[ <>]{4}([0-9. ]{4})[ <>]{3,4}([0-9.]{3,4})\/ {0,2}([0-9.]{1,4}) {3,5}([0-9.]{2,4})\/ {0,2}([0-9.]{1,4})/);
			if (!rawMatch) return;

			// format the result
			var [, type, id, az, range, avfdv, lldv, mxdv, mvdvhgt, depth, base, top, maxshear, maxshearheight] = [...rawMatch];
            const cell_id = `${id}`; // copy the string
			// store to array
            // allow for duplicate cell IDs
            if (result[id] != undefined) {
                while (result[id] != undefined) {
                    id = `${id}-0`;
                }
            }
            result[id] = {
                type,
                cell_id: cell_id,
                az: +az,
                range: +range,
                avfdv: +avfdv,
                lldv: +lldv,
                mxdv: +mxdv,
                mvdvhgt: +mvdvhgt,
                depth: +depth,
                base: +base,
                top: +top,
                maxshear: +maxshear,
                maxshearheight: +maxshearheight,
            };
		});
	});

	return {
		tvs: result,
	};
}

/**
 * Same as first function, but for the NMD (Mesocyclone Detection) product. The code can be found here:
 * https://github.com/netbymatt/nexrad-level-3-data/blob/main/src/products/141/formatter.js
 * 
 *  format the text data provided
 *  extract data from lines that follow this format
 *  "        U3               0                   50                <0.50            "
 *  using this header information
 *  " CIRC  AZRAN   SR STM |-LOW LEVEL-|  |--DEPTH--|  |-MAX RV-| TVS  MOTION   MSI  "
 *  "  ID   deg/nm     ID  RV   DV  BASE  kft STMREL%  kft    kts     deg/kts        "
 *  returns an array of objects
 */
function format_mesocyclone_detection(pages) {
    // extract relevant data
    // divide tabular data into lines
    pages = pages.map(i => i.split('\n'));
	if (!pages) return {};
	const result = {};

	// format line by line
	pages.forEach((page) => {
		page.forEach((line) => {
			// extrat values
			const rawMatch = line.match(/ +([0-9.]+) +([0-9.]+)\/ *([0-9.]+) +([0-9.]+[A-Z]*) +([A-Z0-9]{2}) +([0-9.]+) +([0-9.]+)[ <]+([0-9.]+)[ <>]+([0-9.]+)[ <>]+([0-9.]+)[ <>]+([0-9.]+)[ <>]+([0-9.]+) +([YN]) {1,4}([0-9.]*)\/* {0,3}([0-9.]*) +([0-9.]*)/);
			if (!rawMatch) return;

			// format the result
			const [, id, az, ran, sr, stmId, llRv, llDv, llBase, depthKft, depthStmrel, maxRvKft, maxrvKts, tvs, motionDeg, motionKts, msi] = [...rawMatch];
			// check for motion
			let motion = false;
			if (motionDeg !== '') {
				motion = {
					deg: +motionDeg,
					kts: +motionKts,
				};
			}
			// store to array
			result[id] = {
				az: +az,
				ran: +ran,
				sr: +sr,
				stmId,
				lowLevel: {
					rv: +llRv,
					dv: +llDv,
					base: +llBase,
				},
				depth: {
					kft: +depthKft,
					stmrel: +depthStmrel,
				},
				maxRv: {
					kft: +maxRvKft,
					kts: +maxrvKts,
				},
				tvs: tvs === 'Y',
				motion,
				msi: msi ?? null,
			};
		});
	});

	return {
		mesocyclone: result,
	};
}

module.exports = {
    format_storm_tracks,
    format_hail_index,
    format_tornado_vortex_signature,
    format_mesocyclone_detection
};
},{}],56:[function(require,module,exports){
(function (Buffer){(function (){
// const fs = require('fs');
const BufferPack = require('bufferpack');
const zlib = require('zlib');
const bzip = require('seek-bzip');
const IOBuffer = require('../buffer_tools/IOBuffer');

function _structure_size(structure) {
    /* Find the size of a structure in bytes. */
    var format = '>' + structure.map(i => i[1]).join('');
    var size = BufferPack.calcLength(format);
    return size;
}

function _copy(arr) {
    return JSON.parse(JSON.stringify(arr));
}

function msToTime(s) {
    // Pad to 2 or 3 digits, default is 2
    function pad(n, z) {
        z = z || 2;
        return ('00' + n).slice(-z);
    }
    var ms = s % 1000;
    s = (s - ms) / 1000;
    var secs = s % 60;
    s = (s - secs) / 60;
    var mins = s % 60;
    var hrs = (s - mins) / 60;
    return {
        'hours': pad(hrs),
        'minutes': pad(mins),
        'seconds': pad(secs),
        'milliseconds': pad(ms, 3),
    }
    // return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + pad(ms, 3);
}

function _julian_and_millis_to_date(modifiedJulianDate, milliseconds) {
    // page 14 - https://www.roc.noaa.gov/wsr88d/PublicDocs/ICDs/2620001Y.pdf
    // page 16 - https://www.roc.noaa.gov/wsr88d/PublicDocs/ICDs/2620002U.pdf
    var julianDate = modifiedJulianDate + 2440586.5;
    // https://stackoverflow.com/a/36073807
    var millis = (julianDate - 2440587.5) * 86400000;

    var fileDateObj = new Date(millis);
    var fileHours = msToTime(milliseconds).hours;
    var fileMinutes = msToTime(milliseconds).minutes;
    var fileSeconds = msToTime(milliseconds).seconds;
    fileDateObj.setUTCHours(fileHours);
    fileDateObj.setUTCMinutes(fileMinutes);
    fileDateObj.setUTCSeconds(fileSeconds);

    return fileDateObj;
}

function zlib_decompress_all_frames(data) {
    /* Decompress all frames of zlib-compressed bytes.
    Repeatedly tries to decompress `data` until all data are decompressed, or decompression
    fails. This will skip over bytes that are not compressed with zlib.
    Parameters
    ----------
    data : bytearray or bytes
        Binary data compressed using zlib.
    Returns
    -------
        bytearray
            All decompressed bytes
    */

    return data;
    // frames = bytearray()
    // data = bytes(data)
    // while data:
    //     decomp = zlib.decompressobj()
    //     try:
    //         frames += decomp.decompress(data)
    //         data = decomp.unused_data
    //         log.debug('Decompressed zlib frame (total %d bytes). %d bytes remain.',
    //                     len(frames), len(data))
    //     except zlib.error:
    //         log.debug('Remaining %d bytes are not zlib compressed.', len(data))
    //         frames.extend(data)
    //         break
    // return frames
}

class BitField {
    constructor(...names) {
        this._names = names;
    }

    __call__(val) {
        if (!val) {
            return null;
        }

        var bits = [];
        for (var n of this._names) {
            if (val & 0x1) {
                bits.push(n);
            }
            val >>= 1;
            if (!val) {
                break;
            }
        }

        return bits.length === 1 ? bits[0] : bits;
    }
}

class Bits {
    constructor(num_bits) {
        this._bits = [...Array(num_bits).keys()];
    }

    __call__(val) {
        return this._bits.map(i => Boolean((val >> i) & 0x1));
    }
}

function scaler(scale) {
    /* Create a function that scales by a specific value. */
    function inner(val) {
        return val * scale;
    }
    return inner;
}

function version(val) {
    var ver = val > 2 * 100 ? val / 100 : val / 10;
    return ver.toFixed(1);
}

function date_elem(ind_days, ind_minutes) {
    /* Create a function to parse a datetime from the product-specific blocks. */
    function inner(seq) {
        return _julian_and_millis_to_date(seq[ind_days], seq[ind_minutes] * 60 * 1000);
    }
    return inner;
}

function scaled_elem(index, scale) {
    /* Create a function to scale a certain product-specific block. */
    function inner(seq) {
        return seq[index] * scale;
    }
    return inner;
}

function combine_elem(ind1, ind2) {
    /* Create a function to combine two specified product-specific blocks into a single int. */
    function inner(seq) {
        var shift = 2**16
        if (seq[ind1] < 0) {
            seq[ind1] += shift;
        }
        if (seq[ind2] < 0) {
            seq[ind2] += shift;
        }
        return (seq[ind1] << 16) | seq[ind2];
    }
    return inner;
}

function reduce_lists(d) {
    // Replace single item lists in a dictionary with the single item.
    for (var field in d) {
        var oldData = d[field];
        if (oldData.length === 1) {
            d[field] = oldData[0];
        }
    }
    return d;
}

function float32(short1, short2) {
    /* Unpack a pair of 16-bit integers as a JavaScript float. */
    // Masking below in JavaScript will properly convert signed values to unsigned
    let buffer = new ArrayBuffer(4);
    let uint8 = new Uint8Array(buffer);
    let float32 = new Float32Array(buffer);
    uint8[3] = (short1 >> 8) & 0xff;
    uint8[2] = short1 & 0xff;
    uint8[1] = (short2 >> 8) & 0xff;
    uint8[0] = short2 & 0xff;
    return float32[0];
}

function float_elem(ind1, ind2) {
    /* Create a function to combine two specified product-specific blocks into a float. */
    return function(seq) {
        return float32(seq[ind1], seq[ind2]);
    };
}

function high_byte(ind) {
    /* Create a function to return the high-byte of a product-specific block. */
    function inner(seq) {
        return seq[ind] >> 8;
    }
    return inner;
}

function low_byte(ind) {
    /* Create a function to return the low-byte of a product-specific block. */
    function inner(seq) {
        return seq[ind] & 0x00FF;
    }
    return inner;
}

function delta_time(ind) {
    /* Create a function to return the delta time from a product-specific block. */
    function inner(seq) {
        return seq[ind] >> 5;
    }
    return inner;
}

function two_comp16(val) {
    /* Return the two's-complement signed representation of a 16-bit unsigned integer. */
    if (val >> 15) {
        val = -(~val & 0x7fff) - 1;
    }
    return val;
}

function float16(val) {
    /* Convert a 16-bit floating point value to a standard JavaScript float. */
    // Fraction is 10 LSB, Exponent middle 5, and Sign the MSB
    var frac = val & 0x03ff;
    var exp = (val >> 10) & 0x1F;
    var sign = val >> 15;

    var value;
    if (exp) {
        value = 2 ** (exp - 16) * (1 + parseFloat(frac) / 2**10);
    } else {
        value = parseFloat(frac) / 2**9;
    }

    if (sign) {
        value *= -1;
    }

    return value;
}

function supplemental_scan(ind) {
    /* Create a function to return the supplement scan type from a product-specific block. */
    function inner(seq) {
        // ICD says 1->SAILS, 2->MRLE, but testing on 2020-08-17 makes this seem inverted
        // given what's being reported by sites in the GSM.
        const scanTypes = {
            0: 'Non-supplemental scan',
            2: 'SAILS scan',
            1: 'MRLE scan'
        };
        return scanTypes[(seq[ind] & 0x001F)] || 'Unknown';
    }
    return inner;
}

function _hex_string_to_decimal(hexString) {
    hexString = hexString.replace('0x', '');
    return parseInt(hexString, 16);
}
function _decimal_to_hex(decimal) {
    var hex = decimal.toString(16);
    return `0x${hex}`;
}

function _check_property_exists(obj, property) {
    if (Array.isArray(property)) {
        for (var i in property) {
            if (!obj.hasOwnProperty(property[i])) {
                obj[property[i]] = [];
            }
        }
    } else {
        if (!obj.hasOwnProperty(property)) {
            obj[property] = [];
        }
    }
    return obj;
}

// Data mappers used to take packed data and turn into physical units
// Default is to use numpy array indexing to use LUT to change data bytes
// into physical values. Can also have a 'labels' attribute to give
// categorical labels
class DataMapper {
    /* Convert packed integer data into physical units. */

    constructor(num = 256) {
        // Need to find way to handle range folded
        // RANGE_FOLD = -9999
        this.RANGE_FOLD = null; // NaN;
        this.MISSING = null; // NaN;

        this.lut = new Array(num).fill(this.MISSING);
    }

    __call__(data) {
        /* Convert the values. */
        return this.lut[data];
    }
}

class DigitalMapper extends DataMapper {
    /* Maps packed integers to floats using a scale and offset from the product. */

    constructor(prod) {
        /* Initialize the mapper and the lookup table. */
        super();

        this._min_scale = 0.1;
        this._inc_scale = 0.1;
        this._min_data = 2;
        this._max_data = 255;
        this.range_fold = false;

        var min_val = two_comp16(prod.thresholds[0]) * this._min_scale;
        var inc = prod.thresholds[1] * this._inc_scale;
        var num_levels = prod.thresholds[2];

        // Generate lookup table -- sanity check on num_levels handles
        // the fact that DHR advertises 256 levels, which *includes*
        // missing, differing from other products
        num_levels = Math.min(num_levels, this._max_data - this._min_data + 1);
        for (var i = 0; i < num_levels; i++) {
            this.lut[i + this._min_data] = min_val + i * inc;
        }
    }
}

class DigitalRefMapper extends DigitalMapper {
    /* Mapper for digital reflectivity products. */

    constructor(prod) {
        super(prod);
        this.units = 'dBZ';
    }
}

class DigitalVelMapper extends DigitalMapper {
    /* Mapper for digital velocity products. */

    constructor(prod) {
        super(prod);
        this.units = 'm/s';
        this.range_fold = true;
    }
}

class DigitalSPWMapper extends DigitalMapper {
    /* Mapper for digital spectrum width products. */

    constructor(prod) {
        super(prod);
        this._min_data = 129;
        // ICD says up to 152, but also says max value is 19, which implies 129 + 19/0.5 -> 167
        this._max_data = 167;
    }
}

class PrecipArrayMapper extends DigitalMapper {
    /* Mapper for precipitation array products. */

    constructor(prod) {
        super(prod);
        this._inc_scale = 0.001;
        this._min_data = 1;
        this._max_data = 254;
        this.units = 'dBA';
    }
}

class DigitalStormPrecipMapper extends DigitalMapper {
    /* Mapper for digital storm precipitation products. */

    constructor(prod) {
        super(prod);
        this.units = 'inches';
        this._inc_scale = 0.01;
    }
}

class DigitalVILMapper extends DataMapper {
    // Mapper for digital VIL products.
    constructor(prod) {
        super();
        var lin_scale = float16(prod.thresholds[0]);
        var lin_offset = float16(prod.thresholds[1]);
        var log_start = prod.thresholds[2];
        var log_scale = float16(prod.thresholds[3]);
        var log_offset = float16(prod.thresholds[4]);

        // VIL is allowed to use 2 through 254 inclusive. 0 is thresholded,
        // 1 is flagged, and 255 is reserved
        var ind = new Array(255).fill().map((_, i) => i);
        this.lut[2] = (ind[2] - lin_offset) / lin_scale;
        for (var i = 3; i < log_start; i++) {
            this.lut[i] = (ind[i] - lin_offset) / lin_scale;
        }
        for (var i = log_start; i < ind.length - 1; i++) {
            this.lut[i] = Math.exp((ind[i] - log_offset) / log_scale);
        }
        // this.lut.set((ind.slice(2, log_start).map((val) => (val - lin_offset) / lin_scale)), 2);
        // this.lut.set((ind.slice(log_start).map((val) => Math.exp((val - log_offset) / log_scale))), log_start);
    }
}

class DigitalEETMapper extends DataMapper {
    /* Mapper for digital echo tops products. */

    constructor(prod) {
        super();
        var data_mask = prod.thresholds[0];
        var scale = prod.thresholds[1];
        var offset = prod.thresholds[2];
        var topped_mask = prod.thresholds[3];
        this.topped_lut = new Array(256).fill(false);
        for (var i = 2; i < 256; i++) {
            this.lut[i] = ((i & data_mask) - offset) / scale;
            this.topped_lut[i] = Boolean(i & topped_mask);
        }
        this.topped_lut = new Float32Array(this.topped_lut);
    }

    __call__(data_vals) {
        /* Convert the data values. */
        return [this.lut[data_vals], this.topped_lut[data_vals]];
    }
}

class GenericDigitalMapper extends DataMapper {
    /*
    * Maps packed integers to floats using a scale and offset from the product.
    * Also handles special data flags.
    */
    constructor(prod) {
        /* Initialize the mapper by pulling out all the information from the product. */
        // Need to treat this value as unsigned, so we can use the full 16-bit range. This
        // is necessary at least for the DPR product, otherwise it has a value of -1.
        var max_data_val = prod.thresholds[5] & 0xFFFF;

        // Values will be [0, max] inclusive, so need to add 1 to max value to get proper size.
        super(max_data_val + 1);

        var scale = float32(prod.thresholds[0], prod.thresholds[1]);
        var offset = float32(prod.thresholds[2], prod.thresholds[3]);
        var leading_flags = prod.thresholds[6];
        var trailing_flags = prod.thresholds[7];

        if (leading_flags > 1) {
            this.lut[1] = this.RANGE_FOLD;
        }

        // Need to add 1 to the end of the range so that it's inclusive
        for (var i = leading_flags; i < max_data_val - trailing_flags + 1; i++) {
            this.lut[i] = (i - offset) / scale;
        }
    }
}

class DigitalHMCMapper extends DataMapper {
    /*
    * Mapper for hydrometeor classification products.
    * Handles assigning string labels based on values.
    */

    constructor(prod) {
        super();
        this.labels = ['ND', 'BI', 'GC', 'IC', 'DS', 'WS', 'RA', 'HR', 'BD', 'GR', 'HA', 'LH', 'GH', 'UK', 'RF'];
        for (let i = 10; i < 256; i++) {
            this.lut[i] = Math.floor(i/* / 10*/);
        }
        this.lut[150] = this.RANGE_FOLD;
    }
}

class EDRMapper extends DataMapper {
    /* Mapper for eddy dissipation rate products. */

    constructor(prod) {
        /* Initialize the mapper based on the product. */
        var data_levels = prod.thresholds[2];
        var scale = prod.thresholds[0] / 1000.0;
        var offset = prod.thresholds[1] / 1000.0;
        var leading_flags = prod.thresholds[3];
        super(data_levels);
        for (var i = leading_flags; i < data_levels; i++) {
            this.lut[i] = scale * i + offset;
        }
    }
}

class LegacyMapper extends DataMapper {
    constructor(prod) {
        super();
        this.lut_names = ['Blank', 'TH', 'ND', 'RF', 'BI', 'GC', 'IC', 'GR', 'WS', 'DS', 'RA', 'HR', 'BD', 'HA', 'UK'];
        this.labels = [];
        this.lut = [];
        for (let t of prod.thresholds) {
            let codes = t >> 8, val = t & 0xFF;
            let label = '';
            if (codes >> 7) {
                label = this.lut_names[val];
                if (label in ['Blank', 'TH', 'ND']) {
                    val = this.MISSING;
                } else if (label == 'RF') {
                    val = this.RANGE_FOLD;
                }
            } else if (codes >> 6) {
                val *= 0.01;
                label = `${val.toFixed(2)}`;
            } else if (codes >> 5) {
                val *= 0.05;
                label = `${val.toFixed(2)}`;
            } else if (codes >> 4) {
                val *= 0.1;
                label = `${val.toFixed(1)}`;
            }
            if (codes & 0x1) {
                val *= -1;
                label = '-' + label;
            } else if ((codes >> 1) & 0x1) {
                label = '+' + label;
            }
            if ((codes >> 2) & 0x1) {
                label = '<' + label;
            } else if ((codes >> 3) & 0x1) {
                label = '>' + label;
            }
            if (!label) {
                label = String(val);
            }
            this.lut.push(val);
            this.labels.push(label);
        }
    }
}

class NEXRADLevel3File {
    constructor (fileBuffer) {
        this._setup_packet_map();

        var fobj = fileBuffer;
        // var fobj = fs.readFileSync(filename);
        // const request = require('sync-request');
        // var fobj = request('GET', filename).getBody();

        // just read in the entire set of data at once
        this._buffer = new IOBuffer(fobj);
        this.filename = 'test_for_now'; // filename;

        // pop off the WMO header if we find it
        this._process_wmo_header();

        // pop off last 4 bytes if necessary
        this._process_end_bytes();

        // set up places to store data and metadata
        this.metadata = {};

        // handle free text message products that are pure text
        if (this.wmo_code == 'NOUS') {
            this.header = null;
            this.prod_desc = null;
            this.thresholds = null;
            this.depVals = null;
            this.product_name = 'Free Text Message';
            this.text = this._buffer.read_ascii();
            return;
        }

        // decompress the data if necessary, and if so, pop off new header
        this._buffer = new IOBuffer(this._buffer.read_func(zlib_decompress_all_frames));
        this._process_wmo_header();

        // check for empty product
        if (this._buffer.__len__() == 0) {
            console.warn(`Empty product! ${this.filename}`);
            return;
        }

        // unpack the message header and the product description block
        var msg_start = this._buffer.set_mark();
        this.header = this._buffer.read_struct(header_fmt);

        if (!this._buffer.check_remains(this.header.msg_len - _structure_size(header_fmt))) {
            console.warn(`Product contains an unexpected amount of data remaining -- have: ${this._buffer.length - this._buffer._offset}, expected: ${this.header.msg_len - _structure_size(header_fmt)}. This product may not parse correctly.`);
        }

        // Handle GSM and jump out
        if (this.header.code == 2) {
            this.gsm = this._buffer.read_struct(gsm_fmt);
            this.product_name = 'General Status Message';
            console.assert(this.gsm.divider == -1);
            if (this.gsm.block_len > 82) {
                // Due to the way the structures read it in, one bit from the count needs
                // to be popped off and added as the supplemental cut status for the 25th
                // elevation cut.
                var more = this._buffer.read_struct(additional_gsm_fmt);
                var cut_count = more.supplemental_cut_count;
                more.supplemental_cut_map2.push(Boolean(cut_count & 0x1));
                this.gsm_additional = {...more, supplemental_cut_count: cut_count >> 1};
                console.assert(this.gsm.block_len == 178);
            } else {
                console.assert(this.gsm.block_len == 82);
            }
            return;
        }

        // Convert thresholds and dependent values to lists of values
        this.prod_desc = this._buffer.read_struct(prod_desc_fmt);
        this.thresholds = Array.from({length: 16}, (_, i) => this.prod_desc[`thr${i+1}`]);
        this.depVals = Array.from({length: 10}, (_, i) => this.prod_desc[`dep${i+1}`]);

        // Set up some time/location metadata
        this.metadata['msg_time'] = _julian_and_millis_to_date(this.header.date, this.header.time * 1000);
        this.metadata['vol_time'] = _julian_and_millis_to_date(this.prod_desc.vol_date, this.prod_desc.vol_start_time * 1000);
        this.metadata['prod_time'] = _julian_and_millis_to_date(this.prod_desc.prod_gen_date, this.prod_desc.prod_gen_time * 1000);
        this.lat = this.prod_desc.lat * 0.001;
        this.lon = this.prod_desc.lon * 0.001;
        this.height = this.prod_desc.height;

        // Handle product-specific blocks. Default to compression and elevation angle
        // Also get other product specific information, like name,
        // maximum range, and how to map data bytes to values
        const defaultValues = ['Unknown Product', 230.0, LegacyMapper, [
            ['el_angle', scaled_elem(2, 0.1)],
            ['compression', 7],
            ['uncompressed_size', combine_elem(8, 9)],
            ['defaultVals', 0]
        ]];
        var [product_name, max_range, mapper, meta] = prod_spec_map[this.header.code] || defaultValues;
        this.product_name = product_name;
        this.max_range = max_range;

        for (var [name, block] of meta) {
            if (typeof block === 'function') {
                this.metadata[name] = block(this.depVals);
            } else {
                this.metadata[name] = this.depVals[block];
            }
        }

        // Now that we have the header, we have everything needed to make tables
        // Store as class that can be called
        this.map_data = new mapper(this);

        // Process compression if indicated. We need to fail
        // gracefully here since we default to it being on
        if (this.metadata.compression || false) {
            try {
                function bz2_decompress(buffer) {
                    // skip 32 bits 'BZh9' header
                    return bzip.decodeBlock(buffer, 32);
                }
                var comp_start = this._buffer.set_mark();
                var decomp_data = this._buffer.read_func(bz2_decompress);
                this._buffer.splice(comp_start, decomp_data);
                console.assert(this._buffer.check_remains(this.metadata['uncompressed_size']))
            } catch (e) {
                // Compression didn't work, so we just assume it wasn't actually compressed.
                console.warn(e);
            }
        }

        // Unpack the various blocks, if present. The factor of 2 converts from
        // 'half-words' to bytes
        // Check to see if this is one of the "special" products that uses
        // header-free blocks and re-assigns the offsets
        if (standalone_tabular.includes(this.header.code)) {
            if (this.prod_desc.sym_off) {
                // For standalone tabular alphanumeric, symbology offset is
                // actually tabular
                this._unpack_tabblock(msg_start, 2 * this.prod_desc.sym_off, false);
            }
            if (this.prod_desc.graph_off) {
                // Offset seems to be off by 1 from where we're counting, but
                // it's not clear why.
                this._unpack_standalone_graphblock(msg_start, 2 * (this.prod_desc.graph_off - 1));
            }
        } else if (this.header.code == 74) {
            // Need special handling for (old) radar coded message format
            this._unpack_rcm(msg_start, 2 * this.prod_desc.sym_off);
        } else {
            if (this.prod_desc.sym_off) {
                this._unpack_symblock(msg_start, 2 * this.prod_desc.sym_off);
            }
            if (this.prod_desc.graph_off) {
                this._unpack_graphblock(msg_start, 2 * this.prod_desc.graph_off);
            }
            if (this.prod_desc.tab_off) {
                this._unpack_tabblock(msg_start, 2 * this.prod_desc.tab_off);
            }
        }
        // console.log(this.product_name);
    }

    _unpack_symblock(start, offset) {
        this._buffer.jump_to(start, offset);
        var blk = this._buffer.read_struct(sym_block_fmt);

        this.sym_block = [];
        console.assert(blk.divider == -1, `Bad divider for symbology block: ${blk.divider} should be -1`);
        console.assert(blk.block_id == 1, `Bad block ID for symbology block: ${blk.block_id} should be 1`);

        for (var _ = 0; _ < blk.nlayer; _++) {
            var layer_hdr = this._buffer.read_struct(sym_layer_fmt);
            console.assert(layer_hdr.divider == -1);
            var layer = [];
            this.sym_block.push(layer);
            var layer_start = this._buffer.set_mark();
            while (this._buffer.offset_from(layer_start) < layer_hdr['length']) {
                var packet_code = this._buffer.read_int(2, 'big', false);
                if (this.packet_map.hasOwnProperty(packet_code)) {
                    layer.push(this.packet_map[packet_code].apply(this, [packet_code, true]));
                } else {
                    var packet_code_to_print = packet_code;
                    if (packet_code > 29) {
                        packet_code_to_print = _decimal_to_hex(packet_code);
                    }
                    console.warn(`${this.filename}: Unknown symbology packet type ${packet_code_to_print}.`);
                    this._buffer.jump_to(layer_start, layer_hdr['length']);
                }
            }
            console.assert(this._buffer.offset_from(layer_start) == layer_hdr['length']);
        }
    }

    _unpack_graphblock(start, offset) {
        this._buffer.jump_to(start, offset);
        var hdr = this._buffer.read_struct(graph_block_fmt);
        console.assert(hdr.divider == -1, `Bad divider for graphical block: ${hdr.divider} should be -1`);
        console.assert(hdr.block_id == 2, `Bad block ID for graphical block: ${hdr.block_id} should be 2`);
        this.graph_pages = [];
        for (var page = 0; page < hdr.num_pages; page++) {
            var page_num = this._buffer.read_int(2, 'big', false);
            console.assert(page + 1 == page_num);
            var page_size = this._buffer.read_int(2, 'big', false);
            var page_start = this._buffer.set_mark();
            var packets = [];
            while (this._buffer.offset_from(page_start) < page_size) {
                var packet_code = this._buffer.read_int(2, 'big', false);
                if (this.packet_map.hasOwnProperty(packet_code)) {
                    packets.push(this.packet_map[packet_code].apply(this, [packet_code, false]));
                } else {
                    var packet_code_to_print = packet_code;
                    if (packet_code > 29) {
                        packet_code_to_print = _decimal_to_hex(packet_code);
                    }
                    console.warn(`${this.filename}: Unknown graphical packet type ${packet_code_to_print}.`);
                    this._buffer.skip(page_size);
                }
            }
            this.graph_pages.push(packets);
        }
    }
    _unpack_standalone_graphblock(start, offset) {
        this._buffer.jump_to(start, offset);
        var packets = [];
        while (!this._buffer.at_end()) {
            var packet_code = this._buffer.read_int(2, 'big', false);
            if (this.packet_map.hasOwnProperty(packet_code)) {
                packets.push(this.packet_map[packet_code].apply(this, [packet_code, false]));
            } else {
                var packet_code_to_print = packet_code;
                if (packet_code > 29) {
                    packet_code_to_print = _decimal_to_hex(packet_code);
                }
                console.warn(`${this.filename}: Unknown standalone graphical packet type ${packet_code_to_print}.`);
                // Assume next 2 bytes is packet length and try skipping
                var num_bytes = this._buffer.read_int(2, 'big', false);
                this._buffer.skip(num_bytes);
            }
        }
        this.graph_pages = [packets];
    }
    _unpack_tabblock(start, offset, have_header = true) {
        this._buffer.jump_to(start, offset);
        var block_start = this._buffer.set_mark();

        // Read the header and validate if needed
        if (have_header) {
            var header = this._buffer.read_struct(tab_header_fmt);
            console.assert(header.divider == -1);
            console.assert(header.block_id == 3);

            // Read off secondary message and product description blocks,
            // but as far as I can tell, all we really need is the text that follows
            this._buffer.read_struct(header_fmt);
            this._buffer.read_struct(prod_desc_fmt);
        }

        // Get the start of the block with number of pages and divider
        var blk = this._buffer.read_struct(tab_block_fmt);
        console.assert(blk.divider == -1);

        // Read the pages line by line, break pages on a -1 character count
        this.tab_pages = [];
        for (var _ = 0; _ < blk.num_pages; _++) {
            var lines = [];
            var num_chars = this._buffer.read_int(2, 'big', true);
            while (num_chars != -1) {
                lines.push(this._buffer.read_ascii(num_chars));
                num_chars = this._buffer.read_int(2, 'big', true);
            }
            this.tab_pages.push(lines.join('\n'));
        }

        if (have_header) {
            console.assert(this._buffer.offset_from(block_start) == header.block_len);
        }
    }
    _unpack_rcm(start, offset) {
        this._buffer.jump_to(start, offset);
        var header = this._buffer.read_ascii(10);
        console.assert(header == '1234 ROBUU');
        var text_data = this._buffer.read_ascii();
        var end = 0;
        // Appendix B of ICD tells how to interpret this stuff, but that just
        // doesn't seem worth it.
        for (var [marker, name] of [['AA', 'ref'], ['BB', 'vad'], ['CC', 'remarks']]) {
            var start = text_data.indexOf('/NEXR' + marker, end);
            // For part C the search for end fails, but returns -1, which works
            end = text_data.indexOf('/END' + marker, start);
            this['rcm_' + name] = text_data.slice(start, end);
        }
    }

    _process_wmo_header() {
        // read off the WMO header if necessary

        // remove invalid characters
        // https://stackoverflow.com/a/12754325
        var data = this._buffer.get_next(64).toString('UTF-8').replace(/\uFFFD/g, '');
        var match = data.match(wmo_finder);
        if (match) {
            var header = {};
            header.file_type = this._buffer.read_ascii(6);
            // always a space
            this._buffer.read_ascii(1);
            // radar site id
            header.siteID = this._buffer.read_ascii(4);
            // always a space
            this._buffer.read_ascii(1);
            // ddhhmm day-hour-minute timestamp, returned as a string as a more useful timestamp is contained within the data of the file
            header.ddhhmm = this._buffer.read_ascii(6);
            // line breaks
            this._buffer.read_ascii(3);
            // type of data
            header.type = this._buffer.read_ascii(3);
            // site identifier as 3-letter code
            header.id3 = this._buffer.read_ascii(3);
            // line breaks
            this._buffer.read_ascii(3);

            this.wmo_code = header.file_type;
            this.siteID = header.id3;
            this.product_abbv = header.type;
            this.text_header = header;

            /* this.wmo_code = match[1];
            this.siteID = match[2];

            var length_to_skip = match.index + match[0].length;

            var product_abbv = this._buffer.get_next(length_to_skip).toString('UTF-8').replace(/\uFFFD/g, '');
            product_abbv = product_abbv.split('\n')[1].slice(0, 3);
            this.product_abbv = product_abbv;

            this._buffer.skip(length_to_skip); */
        } else {
            this.wmo_code = '';
        }
    }
    _process_end_bytes() {
        var check_bytes = this._buffer.buffer.slice(-4, -1);
        if (check_bytes.equals(Buffer.from([13, 13, 10])) || check_bytes.equals(Buffer.from([255, 255, 10]))) {
            this._buffer.truncate(4);
        }
    }

    pos_scale(is_sym_block) {
        /* Scale of the position information in km. */
        return is_sym_block ? 0.25 : 1;
    }

    _read_trends() {
        var [num_vols, latest] = this._buffer.read(2);
        var vals = Array.from({length: num_vols}, () => this._buffer.read_int(2, 'big', true));

        // Wrap the circular buffer so that latest is last
        return vals.slice(latest).concat(vals.slice(0, latest));
    }

    _unpack_rle_data(data) {
        // Unpack Run-length encoded data
        var unpacked = [];
        for (var i = 0; i < data.length; i++) {
            var run = data[i];
            var num = run >> 4;
            var val = run & 0x0F;
            for (var j = 0; j < num; j++) {
                unpacked.push(val);
            }
        }
        return unpacked;
    }

    _setup_packet_map() {
        this.packet_map = {
            1: this._unpack_packet_uniform_text,
            2: this._unpack_packet_special_text_symbol,
            3: this._unpack_packet_special_graphic_symbol,
            4: this._unpack_packet_wind_barbs,
            6: this._unpack_packet_linked_vector,
            8: this._unpack_packet_uniform_text,
            // // 9: this._unpack_packet_linked_vector,
            10: this._unpack_packet_vector,
            11: this._unpack_packet_special_graphic_symbol,
            12: this._unpack_packet_special_graphic_symbol,
            13: this._unpack_packet_special_graphic_symbol,
            14: this._unpack_packet_special_graphic_symbol,
            15: this._unpack_packet_special_graphic_symbol,
            16: this._unpack_packet_digital_radial,
            17: this._unpack_packet_digital_precipitation,
            18: this._unpack_packet_digital_precipitation,
            19: this._unpack_packet_special_graphic_symbol,
            20: this._unpack_packet_special_graphic_symbol,
            21: this._unpack_packet_cell_trend,
            22: this._unpack_packet_trend_times,
            23: this._unpack_packet_scit,
            24: this._unpack_packet_scit,
            25: this._unpack_packet_special_graphic_symbol,
            26: this._unpack_packet_special_graphic_symbol,
            // 28: this._unpack_packet_generic,
            // 29: this._unpack_packet_generic,
            0x0802: this._unpack_packet_contour_color,
            0x0E03: this._unpack_packet_linked_contour,
            0xaf1f: this._unpack_packet_radial_data,
            0xba07: this._unpack_packet_raster_data
        }
    }

    _unpack_packet_radial_data(code, in_sym_block) {
        const hdr_fmt = [
            ['ind_first_bin', 'H'], ['nbins', 'H'],
            ['i_center', 'h'], ['j_center', 'h'],
            ['scale_factor', 'h'], ['num_rad', 'H']
        ];
        const rad_fmt = [
            ['num_hwords', 'H'], ['start_angle', 'h'], ['angle_delta', 'h']
        ];
        var hdr = this._buffer.read_struct(hdr_fmt);
        var rads = [];
        for (var _ = 0; _ < hdr.num_rad; _++) {
            var rad = this._buffer.read_struct(rad_fmt);
            var start_az = rad.start_angle * 0.1;
            var end_az = start_az + rad.angle_delta * 0.1;
            rads.push([start_az, end_az, this._unpack_rle_data(this._buffer.read_binary(2 * rad.num_hwords))]);
        }
        var [start, end, vals] = rads.reduce((acc, val) => (val.forEach((v, i) => acc[i].push(v)), acc), [[], [], []]);
        return {
            'start_az': _copy(start),
            'end_az': _copy(end),
            'data': _copy(vals),
            'center': [hdr.i_center * this.pos_scale(in_sym_block), hdr.j_center * this.pos_scale(in_sym_block)],
            'gate_scale': hdr.scale_factor * 0.001,
            'first': hdr.ind_first_bin
        }
    }

    _unpack_packet_raster_data(code, in_sym_block) {
        const hdr_fmt = [
            ['code', 'L'],
            ['i_start', 'h'], ['j_start', 'h'], // start in km/4
            ['xscale_int', 'h'], ['xscale_frac', 'h'],
            ['yscale_int', 'h'], ['yscale_frac', 'h'],
            ['num_rows', 'h'], ['packing', 'h']
        ];
        var hdr = this._buffer.read_struct(hdr_fmt);
        console.assert(hdr.code == 0x800000C0);
        console.assert(hdr.packing == 2);
        var rows = [];
        for (var _ = 0; _ < hdr.num_rows; _++) {
            var num_bytes = this._buffer.read_int(2, 'big', false);
            rows.push(this._unpack_rle_data(this._buffer.read_binary(num_bytes)));
        }
        return {
            'start_x': hdr.i_start * hdr.xscale_int,
            'start_y': hdr.j_start * hdr.yscale_int,
            'data': rows
        }
    }

    _unpack_packet_linked_contour(code, in_sym_block) {
        // Check for initial point indicator
        console.assert(this._buffer.read_int(2, 'big', false) == 0x8000);

        var scale = this.pos_scale(in_sym_block);
        var startx = this._buffer.read_int(2, 'big', true) * scale;
        var starty = this._buffer.read_int(2, 'big', true) * scale;
        var vectors = [[startx, starty]];
        var num_bytes = this._buffer.read_int(2, 'big', false);
        var pos = this._buffer.read_binary(num_bytes / 2, '>h').map(p => p * scale);
        for (let i = 0; i < pos.length; i += 2) {
            vectors.push([pos[i], pos[i + 1]]);
        }
        return {
            'vectors': vectors
        };
    }

    _unpack_packet_contour_color(code, in_sym_block) {
        // Check for color value indicator
        console.assert(this._buffer.read_int(2, 'big', false) == 0x0002);

        // Read and return value (level) of contour
        return {
            'color': this._buffer.read_int(2, 'big', false)
        };
    }

    _unpack_packet_wind_barbs(code, in_sym_block) {
        // Figure out how much to read
        var num_bytes = this._buffer.read_int(2, 'big', true);
        var packet_data_start = this._buffer.set_mark();
        var ret = {};

        // Read while we have data, then return
        while (this._buffer.offset_from(packet_data_start) < num_bytes) {
            ret = _check_property_exists(ret, ['color', 'x', 'y', 'direc', 'speed']);

            ret['color'].push(this._buffer.read_int(2, 'big', true));
            ret['x'].push(this._buffer.read_int(2, 'big', true) * this.pos_scale(in_sym_block));
            ret['y'].push(this._buffer.read_int(2, 'big', true) * this.pos_scale(in_sym_block));
            ret['direc'].push(this._buffer.read_int(2, 'big', true));
            ret['speed'].push(this._buffer.read_int(2, 'big', true));
        }
        return ret;
    }

    _unpack_packet_linked_vector(code, in_sym_block) {
        var num_bytes = this._buffer.read_int(2, 'big', true);
        var value;
        if (code == 9) {
            value = this._buffer.read_int(2, 'big', true);
            num_bytes -= 2;
        } else {
            value = null;
        }
        var scale = this.pos_scale(in_sym_block);
        var pos = this._buffer.read_binary(num_bytes / 2, '>h').map(p => p * scale);
        var vectors = [...Array(pos.length / 2).keys()].map(i => [pos[i * 2], pos[i * 2 + 1]]);
        return {
            'vectors': vectors,
            'color': value
        };
    }

    _unpack_packet_scit(code, in_sym_block) {
        var num_bytes = this._buffer.read_int(2, 'big', false);
        var packet_data_start = this._buffer.set_mark();
        var ret = {};
        while (this._buffer.offset_from(packet_data_start) < num_bytes) {
            var next_code = this._buffer.read_int(2, 'big', false);
            if (!this.packet_map.hasOwnProperty(next_code)) {
                console.warn(`${this.filename}: Unknown packet in SCIT ${next_code}.`);
                this._buffer.jump_to(packet_data_start, num_bytes);
                return ret;
            } else {
                var next_packet = this.packet_map[next_code].apply(this, [next_code, in_sym_block]);
                if (next_code == 6) {
                    ret = _check_property_exists(ret, 'track');
                    ret['track'].push(next_packet['vectors']);
                } else if (next_code == 25) {
                    ret = _check_property_exists(ret, 'STI Circle');
                    ret['STI Circle'].push(next_packet);
                } else if (next_code == 2) {
                    ret = _check_property_exists(ret, 'markers');
                    ret['markers'].push(next_packet);
                } else {
                    console.warn(`${this.filename}: Unsupported packet in SCIT ${next_code}.`);
                    ret = _check_property_exists(ret, 'data');
                    ret['data'].push(next_packet);
                }
            }
            ret = reduce_lists(ret);
            return ret;
        }
    }

    _unpack_packet_special_text_symbol(code, in_sym_block) {
        var d = this._unpack_packet_uniform_text(code, in_sym_block);

        // Translate special characters to their meaning
        const symbol_map = {
            '!': 'past storm position',
            '"': 'current storm position',
            '#': 'forecast storm position',
            '$': 'past MDA position',
            '%': 'forecast MDA position',
            ' ': null
        };
        var ret = {};

        // Use this meaning as the key in the returned packet
        for (var i = 0; i < d['text'].length; i++) {
            var c = d['text'][i];
            if (!symbol_map.hasOwnProperty(c)) {
                console.warn(`${this.filename}: Unknown special symbol ${c}/${c.charCodeAt(0)}.`);
            } else {
                var key = symbol_map[c];
                if (key) {
                    ret[key] = [d['x'], d['y']];
                }
            }
        }
        delete d['text'];

        return ret;
    }

    _unpack_packet_digital_precipitation(code, in_sym_block) {
        // Read off a couple of unused spares
        this._buffer.read_int(2, 'big', false);
        this._buffer.read_int(2, 'big', false);

        // Get the size of the grid
        var lfm_boxes = this._buffer.read_int(2, 'big', false);
        var num_rows = this._buffer.read_int(2, 'big', false);
        var rows = [];

        // Read off each row and decode the RLE data
        for (var _ = 0; _ < num_rows; _++) {
            var row_num_bytes = this._buffer.read_int(2, 'big', false);
            var row_bytes = this._buffer.read_binary(row_num_bytes);
            var row;
            if (code == 18) {
                row = this._unpack_rle_data(row_bytes);
            } else {
                row = [];
                for (var i = 0; i < row_bytes.length; i += 2) {
                    var run = row_bytes[i];
                    var level = row_bytes[i + 1];
                    for (let j = 0; j < run; j++) {
                        row.push(level);
                    }
                }
            }
            console.assert(row.length == lfm_boxes);
            rows.push(row);
        }

        return {
            'data': rows
        };
    }

    _unpack_packet_cell_trend(code, in_sym_block) {
        const code_map = ['Cell Top', 'Cell Base', 'Max Reflectivity Height',
            'Probability of Hail', 'Probability of Severe Hail',
            'Cell-based VIL', 'Maximum Reflectivity',
            'Centroid Height'];
        const code_scales = [100, 100, 100, 1, 1, 1, 1, 100];
        var num_bytes = this._buffer.read_int(2, 'big', true);
        var packet_data_start = this._buffer.set_mark();
        var cell_id = this._buffer.read_ascii(2);
        var x = this._buffer.read_int(2, 'big', true) * this.pos_scale(in_sym_block);
        var y = this._buffer.read_int(2, 'big', true) * this.pos_scale(in_sym_block);
        var ret = {'id': cell_id, 'x': x, 'y': y};
        while (this._buffer.offset_from(packet_data_start) < num_bytes) {
            var code = this._buffer.read_int(2, 'big', true);
            var key, scale;
            try {
                var ind = code - 1;
                key = code_map[ind];
                scale = code_scales[ind];
            } catch (e) {
                console.warn(`${this.filename}: Unsupported trend code ${code}.`);
                key = 'Unknown';
                scale = 1;
            }
            var vals = this._read_trends();
            if (code == 1 || code == 2) {
                ret[key + ' Limited'] = vals.map(v => v > 700);
                vals = vals.map(v => v > 700 ? v - 1000 : v);
            }
            ret[key] = vals.map(v => v * scale);
        }

        return ret;
    }

    _unpack_packet_trend_times(code, in_sym_block) {
        this._buffer.read_int(2, 'big', true)  // number of bytes, not needed to process
        return {
            'times': this._read_trends()
        };
    }

    _unpack_packet_vector(code, in_sym_block) {
        var num_bytes = this._buffer.read_int(2, 'big', true);
        var value;
        if (code == 10) {
            value = this._buffer.read_int(2, 'big', true);
            num_bytes -= 2;
        } else {
            value = null;
        }
        var scale = this.pos_scale(in_sym_block);
        var pos = this._buffer.read_binary(num_bytes / 2, '>h').map(p => p * scale);
        var vectors = Array.from({ length: pos.length / 4 }, (_, i) => [pos[i * 4], pos[i * 4 + 1], pos[i * 4 + 2], pos[i * 4 + 3]]);
        return {
            'vectors': vectors,
            'color': value
        };
    }

    _unpack_packet_uniform_text(code, in_sym_block) {
        // By not using a struct, we can handle multiple codes
        var num_bytes = this._buffer.read_int(2, 'big', false);
        var value, read_bytes;
        if (code == 8) {
            value = this._buffer.read_int(2, 'big', false);
            read_bytes = 6;
        } else {
            value = null;
            read_bytes = 4;
        }
        var i_start = this._buffer.read_int(2, 'big', true);
        var j_start = this._buffer.read_int(2, 'big', true);

        // Text is what remains beyond what's been read, not including byte count
        var text = this._buffer.read_ascii(num_bytes - read_bytes);
        return {
            'x': i_start * this.pos_scale(in_sym_block),
            'y': j_start * this.pos_scale(in_sym_block),
            'color': value,
            'text': text
        };
    }

    _unpack_packet_special_graphic_symbol(code, in_sym_block) {
        const type_map = {
            3: 'Mesocyclone', 11: '3D Correlated Shear', 12: 'TVS',
            26: 'ETVS', 13: 'Positive Hail', 14: 'Probable Hail',
            15: 'Storm ID', 19: 'HDA', 25: 'STI Circle'
        };
        const point_feature_map = {
            1: 'Mesocyclone (ext.)', 3: 'Mesocyclone',
            5: 'TVS (Ext.)', 6: 'ETVS (Ext.)', 7: 'TVS',
            8: 'ETVS', 9: 'MDA', 10: 'MDA (Elev.)', 11: 'MDA (Weak)'
        };

        // Read the number of bytes and set a mark for sanity checking
        var num_bytes = this._buffer.read_int(2, 'big', false);
        var packet_data_start = this._buffer.set_mark();

        var scale = this.pos_scale(in_sym_block);

        // Loop over the bytes we have
        var ret = {};

        while (this._buffer.offset_from(packet_data_start) < num_bytes) {
            // Read position
            ret = _check_property_exists(ret, ['x', 'y']);
            ret['x'].push(this._buffer.read_int(2, 'big', true) * scale);
            ret['y'].push(this._buffer.read_int(2, 'big', true) * scale);

            // Handle any types that have additional info
            if ([3, 11, 25].includes(code)) {
                ret = _check_property_exists(ret, 'radius');
                ret['radius'].push(this._buffer.read_int(2, 'big', true) * scale);
            } else if (code == 15) {
                ret = _check_property_exists(ret, 'id');
                ret['id'].push(this._buffer.read_ascii(2));
            } else if (code == 19) {
                ret = _check_property_exists(ret, ['POH', 'POSH', 'Max Size']);
                ret['POH'].push(this._buffer.read_int(2, 'big', true));
                ret['POSH'].push(this._buffer.read_int(2, 'big', true));
                ret['Max Size'].push(this._buffer.read_int(2, 'big', false));
            } else if (code == 20) {
                var kind = this._buffer.read_int(2, 'big', false);
                var attr = this._buffer.read_int(2, 'big', false);
                if (kind < 5 || kind > 8) {
                    ret = _check_property_exists(ret, 'radius');
                    ret['radius'].push(attr * scale);
                }

                if (!point_feature_map.hasOwnProperty(kind)) {
                    console.warn(`${this.filename}: Unknown graphic symbol point kind ${kind}.`);
                    ret = _check_property_exists(ret, 'type');
                    ret['type'].push(`Unknown ${kind}`);
                } else {
                    ret = _check_property_exists(ret, 'type');
                    ret['type'].push(point_feature_map[kind]);
                }
            }
        }

        // Map the code to a name for this type of symbol
        if (code != 20) {
            if (!type_map.hasOwnProperty(code)) {
                console.warn(`${this.filename}: Unknown graphic symbol type ${code}.`);
                ret = _check_property_exists(ret, 'type');
                ret['type'] = 'Unknown';
            } else {
                ret = _check_property_exists(ret, 'type');
                ret['type'] = type_map[code];
            }
        }

        // Check and return
        console.assert(this._buffer.offset_from(packet_data_start) == num_bytes);

        // Reduce dimensions of lists if possible
        ret = reduce_lists(ret);

        return ret;
    }

    _unpack_packet_digital_radial(code, in_sym_block) {
        var hdr = this._buffer.read_struct(digital_radial_hdr_fmt);
        var rads = [];
        for (var _ = 0; _ < hdr.num_rad; _++) {
            var rad = this._buffer.read_struct(digital_radial_fmt);
            var start_az = rad.start_angle * 0.1;
            var end_az = start_az + rad.angle_delta * 0.1;
            rads.push([start_az, end_az, this._buffer.read_binary(rad.num_bytes)]);
        }
        var [start, end, vals] = rads.reduce((acc, val) => (val.forEach((v, i) => acc[i].push(v)), acc), [[], [], []]);
        return {
            'start_az': start,
            'end_az': end,
            'data': vals,
            'center': [
                hdr.i_center * this.pos_scale(in_sym_block),
                hdr.j_center * this.pos_scale(in_sym_block)
            ],
            'gate_scale': hdr.scale_factor * 0.001,
            'first': hdr.ind_first_bin,
            'num_bins': hdr.nbins
        };
    }
}

const wmo_finder = /((?:NX|SD|NO)US)\d{2}[\s\w\d]+\w*(\w{3})\r\r\n/;
const header_fmt = [
    ['code', 'H'], ['date', 'H'], ['time', 'l'],
    ['msg_len', 'L'], ['src_id', 'h'], ['dest_id', 'h'],
    ['num_blks', 'H']
];
// See figure 3-17 in 2620001 document for definition of status bit fields
const gsm_fmt = [
    ['divider', 'h'], ['block_len', 'H'],
    ['op_mode', 'h', new BitField('Clear Air', 'Precip')],
    ['rda_op_status', 'h', new BitField('Spare', 'Online',
        'Maintenance Required',
        'Maintenance Mandatory',
        'Commanded Shutdown', 'Inoperable',
        'Spare', 'Wideband Disconnect')],
    ['vcp', 'h'], ['num_el', 'h'],
    ['el1', 'h', scaler(0.1)], ['el2', 'h', scaler(0.1)],
    ['el3', 'h', scaler(0.1)], ['el4', 'h', scaler(0.1)],
    ['el5', 'h', scaler(0.1)], ['el6', 'h', scaler(0.1)],
    ['el7', 'h', scaler(0.1)], ['el8', 'h', scaler(0.1)],
    ['el9', 'h', scaler(0.1)], ['el10', 'h', scaler(0.1)],
    ['el11', 'h', scaler(0.1)], ['el12', 'h', scaler(0.1)],
    ['el13', 'h', scaler(0.1)], ['el14', 'h', scaler(0.1)],
    ['el15', 'h', scaler(0.1)], ['el16', 'h', scaler(0.1)],
    ['el17', 'h', scaler(0.1)], ['el18', 'h', scaler(0.1)],
    ['el19', 'h', scaler(0.1)], ['el20', 'h', scaler(0.1)],
    ['rda_status', 'h', new BitField('Spare', 'Startup', 'Standby',
        'Restart', 'Operate',
        'Off-line Operate')],
    ['rda_alarms', 'h', new BitField('Indeterminate', 'Tower/Utilities',
        'Pedestal', 'Transmitter', 'Receiver',
        'RDA Control', 'RDA Communications',
        'Signal Processor')],
    ['tranmission_enable', 'h', new BitField('Spare', 'None',
        'Reflectivity',
        'Velocity', 'Spectrum Width',
        'Dual Pol')],
    ['rpg_op_status', 'h', new BitField('Loadshed', 'Online',
        'Maintenance Required',
        'Maintenance Mandatory',
        'Commanded shutdown')],
    ['rpg_alarms', 'h', new BitField('None', 'Node Connectivity',
        'Wideband Failure',
        'RPG Control Task Failure',
        'Data Base Failure', 'Spare',
        'RPG Input Buffer Loadshed',
        'Spare', 'Product Storage Loadshed',
        'Spare', 'Spare', 'Spare',
        'RPG/RPG Intercomputer Link Failure',
        'Redundant Channel Error',
        'Task Failure', 'Media Failure')],
    ['rpg_status', 'h', new BitField('Restart', 'Operate', 'Standby')],
    ['rpg_narrowband_status', 'h', new BitField('Commanded Disconnect',
        'Narrowband Loadshed')],
    ['h_ref_calib', 'h', scaler(0.25)],
    ['prod_avail', 'h', new BitField('Product Availability',
        'Degraded Availability',
        'Not Available')],
    ['super_res_cuts', 'h', new Bits(16)],
    ['cmd_status', 'h', new Bits(6)],
    ['v_ref_calib', 'h', scaler(0.25)],
    ['rda_build', 'h', version], ['rda_channel', 'h'],
    ['reserved', 'h'], ['reserved2', 'h'],
    ['build_version', 'h', version]
];
// Build 14.0 added more bytes to the GSM
const additional_gsm_fmt = [
    ['el21', 'h', scaler(0.1)],
    ['el22', 'h', scaler(0.1)],
    ['el23', 'h', scaler(0.1)],
    ['el24', 'h', scaler(0.1)],
    ['el25', 'h', scaler(0.1)],
    ['vcp_supplemental', 'H',
        new BitField('AVSET', 'SAILS', 'Site VCP', 'RxR Noise',
            'CBT', 'VCP Sequence', 'SPRT', 'MRLE',
            'Base Tilt', 'MPDA')],
    ['supplemental_cut_map', 'H', new Bits(16)],
    ['supplemental_cut_count', 'B'],
    ['supplemental_cut_map2', 'B', new Bits(8)],
    ['spare', '80s']
];
const prod_desc_fmt = [
    ['divider', 'h'], ['lat', 'l'], ['lon', 'l'],
    ['height', 'h'], ['prod_code', 'h'],
    ['op_mode', 'h'], ['vcp', 'h'], ['seq_num', 'h'],
    ['vol_num', 'h'], ['vol_date', 'h'],
    ['vol_start_time', 'l'], ['prod_gen_date', 'h'],
    ['prod_gen_time', 'l'], ['dep1', 'h'],
    ['dep2', 'h'], ['el_num', 'h'], ['dep3', 'h'],
    ['thr1', 'h'], ['thr2', 'h'], ['thr3', 'h'],
    ['thr4', 'h'], ['thr5', 'h'], ['thr6', 'h'],
    ['thr7', 'h'], ['thr8', 'h'], ['thr9', 'h'],
    ['thr10', 'h'], ['thr11', 'h'], ['thr12', 'h'],
    ['thr13', 'h'], ['thr14', 'h'], ['thr15', 'h'],
    ['thr16', 'h'], ['dep4', 'h'], ['dep5', 'h'],
    ['dep6', 'h'], ['dep7', 'h'], ['dep8', 'h'],
    ['dep9', 'h'], ['dep10', 'h'], ['version', 'b'],
    ['spot_blank', 'b'], ['sym_off', 'L'], ['graph_off', 'L'],
    ['tab_off', 'L']
];
const sym_block_fmt = [
    ['divider', 'h'], ['block_id', 'h'],
    ['block_len', 'L'], ['nlayer', 'H']
];
const tab_header_fmt = [
    ['divider', 'h'], ['block_id', 'h'],
    ['block_len', 'L']
];
const tab_block_fmt = [
    ['divider', 'h'], ['num_pages', 'h']
];
const sym_layer_fmt = [
    ['divider', 'h'], ['length', 'L']
];
const graph_block_fmt = [
    ['divider', 'h'], ['block_id', 'h'],
    ['block_len', 'L'], ['num_pages', 'H']
];
const standalone_tabular = [62, 73, 75, 82];
const digital_radial_hdr_fmt = [
    ['ind_first_bin', 'H'], ['nbins', 'H'],
    ['i_center', 'h'], ['j_center', 'h'],
    ['scale_factor', 'h'], ['num_rad', 'H']
];
const digital_radial_fmt = [
    ['num_bytes', 'H'], ['start_angle', 'h'],
    ['angle_delta', 'h']
];
const prod_spec_map = {
    16: ['Base Reflectivity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    17: ['Base Reflectivity', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    18: ['Base Reflectivity', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    19: ['Base Reflectivity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)],
        ['calib_const', float_elem(7, 8)]]],
    20: ['Base Reflectivity', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)],
        ['calib_const', float_elem(7, 8)]]],
    21: ['Base Reflectivity', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    22: ['Base Velocity', 60., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4]]],
    23: ['Base Velocity', 115., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4]]],
    24: ['Base Velocity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4]]],
    25: ['Base Velocity', 60., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4]]],
    26: ['Base Velocity', 115., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4]]],
    27: ['Base Velocity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4],
        ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)]]],
    28: ['Base Spectrum Width', 60., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3]]],
    29: ['Base Spectrum Width', 115., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3]]],
    30: ['Base Spectrum Width', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)]]],
    31: ['User Selectable Storm Total Precipitation', 230., LegacyMapper,
        [['end_hour', 0],
        ['hour_span', 1],
        ['null_product', 2],
        ['max_rainfall', scaled_elem(3, 0.1)],
        ['rainfall_begin', date_elem(4, 5)],
        ['rainfall_end', date_elem(6, 7)],
        ['bias', scaled_elem(8, 0.01)],
        ['gr_pairs', scaled_elem(5, 0.01)]]],
    32: ['Digital Hybrid Scan Reflectivity', 230., DigitalRefMapper,
        [['max', 3],
        ['avg_time', date_elem(4, 5)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    33: ['Hybrid Scan Reflectivity', 230., LegacyMapper,
        [['max', 3], ['avg_time', date_elem(4, 5)]]],
    34: ['Clutter Filter Control', 230., LegacyMapper,
        [['clutter_bitmap', 0],
        ['cmd_map', 1],
        ['bypass_map_date', date_elem(4, 5)],
        ['notchwidth_map_date', date_elem(6, 7)]]],
    35: ['Composite Reflectivity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    36: ['Composite Reflectivity', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    37: ['Composite Reflectivity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    38: ['Composite Reflectivity', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    41: ['Echo Tops', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', scaled_elem(3, 1000)]]],  // Max in ft
    48: ['VAD Wind Profile', null, LegacyMapper,
        [['max', 3],
        ['dir_max', 4],
        ['alt_max', scaled_elem(5, 10)]]],  // Max in ft
    50: ['Cross Section Reflectivity', 230., LegacyMapper,
        [['azimuth1', scaled_elem(0, 0.1)],
        ['range1', scaled_elem(1, 0.1)],
        ['azimuth2', scaled_elem(2, 0.1)],
        ['range2', scaled_elem(3, 0.1)]]],
    51: ['Cross Section Velocity', 230., LegacyMapper,
        [['azimuth1', scaled_elem(0, 0.1)],
        ['range1', scaled_elem(1, 0.1)],
        ['azimuth2', scaled_elem(2, 0.1)],
        ['range2', scaled_elem(3, 0.1)]]],
    55: ['Storm Relative Mean Radial Velocity', 50., LegacyMapper,
        [['window_az', scaled_elem(0, 0.1)],
        ['window_range', scaled_elem(1, 0.1)],
        ['el_angle', scaled_elem(2, 0.1)],
        ['min', 3],
        ['max', 4],
        ['source', 5],
        ['height', 6],
        ['avg_speed', scaled_elem(7, 0.1)],
        ['avg_dir', scaled_elem(8, 0.1)],
        ['alert_category', 9]]],
    56: ['Storm Relative Mean Radial Velocity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3],
        ['max', 4],
        ['source', 5],
        ['avg_speed', scaled_elem(7, 0.1)],
        ['avg_dir', scaled_elem(8, 0.1)]]],
    57: ['Vertically Integrated Liquid', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3]]],  // Max in kg / m^2
    58: ['Storm Tracking Information', 460., LegacyMapper,
        [['num_storms', 3],]],
    59: ['Hail Index', 230., LegacyMapper, []],
    61: ['Tornado Vortex Signature', 230., LegacyMapper,
        [['num_tvs', 3], ['num_etvs', 4]]],
    62: ['Storm Structure', 460., LegacyMapper, []],
    63: ['Layer Composite Reflectivity [Layer 1 Average]', 230., LegacyMapper,
        [['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    64: ['Layer Composite Reflectivity [Layer 2 Average]', 230., LegacyMapper,
        [['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    65: ['Layer Composite Reflectivity [Layer 1 Max]', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    66: ['Layer Composite Reflectivity [Layer 2 Max]', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    67: ['Layer Composite Reflectivity - AP Removed', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    74: ['Radar Coded Message', 460., LegacyMapper, []],
    78: ['Surface Rainfall Accumulation [1 hour]', 230., LegacyMapper,
        [['max_rainfall', scaled_elem(3, 0.1)],
        ['bias', scaled_elem(4, 0.01)],
        ['gr_pairs', scaled_elem(5, 0.01)],
        ['rainfall_end', date_elem(6, 7)]]],
    79: ['Surface Rainfall Accumulation [3 hour]', 230., LegacyMapper,
        [['max_rainfall', scaled_elem(3, 0.1)],
        ['bias', scaled_elem(4, 0.01)],
        ['gr_pairs', scaled_elem(5, 0.01)],
        ['rainfall_end', date_elem(6, 7)]]],
    80: ['Storm Total Rainfall Accumulation', 230., LegacyMapper,
        [['max_rainfall', scaled_elem(3, 0.1)],
        ['rainfall_begin', date_elem(4, 5)],
        ['rainfall_end', date_elem(6, 7)],
        ['bias', scaled_elem(8, 0.01)],
        ['gr_pairs', scaled_elem(9, 0.01)]]],
    81: ['Hourly Digital Precipitation Array', 230., PrecipArrayMapper,
        [['max_rainfall', scaled_elem(3, 0.001)],
        ['bias', scaled_elem(4, 0.01)],
        ['gr_pairs', scaled_elem(5, 0.01)],
        ['rainfall_end', date_elem(6, 7)]]],
    82: ['Supplemental Precipitation Data', null, LegacyMapper, []],
    89: ['Layer Composite Reflectivity [Layer 3 Average]', 230., LegacyMapper,
        [['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    90: ['Layer Composite Reflectivity [Layer 3 Max]', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['layer_bottom', scaled_elem(4, 1000.)],
        ['layer_top', scaled_elem(5, 1000.)],
        ['calib_const', float_elem(7, 8)]]],
    93: ['ITWS Digital Base Velocity', 115., DigitalVelMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3],
        ['max', 4], ['precision', 6]]],
    94: ['Base Reflectivity Data Array', 460., DigitalRefMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    95: ['Composite Reflectivity Edited for AP', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    96: ['Composite Reflectivity Edited for AP', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    97: ['Composite Reflectivity Edited for AP', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    98: ['Composite Reflectivity Edited for AP', 460., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['calib_const', float_elem(7, 8)]]],
    99: ['Base Velocity Data Array', 300., DigitalVelMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3],
        ['max', 4],
        ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    113: ['Power Removed Control', 300., LegacyMapper,
        [['rpg_cut_num', 0], ['cmd_generated', 1],
        ['el_angle', scaled_elem(2, 0.1)],
        ['clutter_filter_map_dt', date_elem(4, 3)],
        // While the 2620001Y ICD doesn't talk about using these
        // product-specific blocks for this product, they have data in them
        // and the compression info is necessary for proper decoding.
        ['compression', 7], ['uncompressed_size', combine_elem(8, 9)]]],
    132: ['Clutter Likelihood Reflectivity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)]]],
    133: ['Clutter Likelihood Doppler', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)]]],
    134: ['High Resolution VIL', 460., DigitalVILMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['num_edited', 4],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    135: ['Enhanced Echo Tops', 345., DigitalEETMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', scaled_elem(3, 1000.)],  // Max in ft
        ['num_edited', 4],
        ['ref_thresh', 5],
        ['points_removed', 6],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    138: ['Digital Storm Total Precipitation', 230., DigitalStormPrecipMapper,
        [['rainfall_begin', date_elem(0, 1)],
        ['bias', scaled_elem(2, 0.01)],
        ['max', scaled_elem(3, 0.01)],
        ['rainfall_end', date_elem(4, 5)],
        ['gr_pairs', scaled_elem(6, 0.01)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    141: ['Mesocyclone Detection', 230., LegacyMapper,
        [['min_ref_thresh', 0],
        ['overlap_display_filter', 1],
        ['min_strength_rank', 2]]],
    152: ['Archive III Status Product', null, LegacyMapper,
        [['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    153: ['Super Resolution Reflectivity Data Array', 460., DigitalRefMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    154: ['Super Resolution Velocity Data Array', 300., DigitalVelMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    155: ['Super Resolution Spectrum Width Data Array', 300.,
        DigitalSPWMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    156: ['Turbulence Detection [Eddy Dissipation Rate]', 230., EDRMapper,
        [['el_start_time', 0],
        ['el_end_time', 1],
        ['el_angle', scaled_elem(2, 0.1)],
        ['min_el', scaled_elem(3, 0.01)],
        ['mean_el', scaled_elem(4, 0.01)],
        ['max_el', scaled_elem(5, 0.01)]]],
    157: ['Turbulence Detection [Eddy Dissipation Rate Confidence]', 230.,
        EDRMapper,
        [['el_start_time', 0],
        ['el_end_time', 1],
        ['el_angle', scaled_elem(2, 0.1)],
        ['min_el', scaled_elem(3, 0.01)],
        ['mean_el', scaled_elem(4, 0.01)],
        ['max_el', scaled_elem(5, 0.01)]]],
    158: ['Differential Reflectivity', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.1)],
        ['max', scaled_elem(4, 0.1)]]],
    159: ['Digital Differential Reflectivity', 300., GenericDigitalMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.1)],
        ['max', scaled_elem(4, 0.1)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    160: ['Correlation Coefficient', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.00333)],
        ['max', scaled_elem(4, 0.00333)]]],
    161: ['Digital Correlation Coefficient', 300., GenericDigitalMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.00333)],
        ['max', scaled_elem(4, 0.00333)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    162: ['Specific Differential Phase', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.05)],
        ['max', scaled_elem(4, 0.05)]]],
    163: ['Digital Specific Differential Phase', 300., GenericDigitalMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.05)],
        ['max', scaled_elem(4, 0.05)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    164: ['Hydrometeor Classification', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],]],
    165: ['Digital Hydrometeor Classification', 300., DigitalHMCMapper,
        [['el_angle', scaled_elem(2, 0.1)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    166: ['Melting Layer', 230., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)],]],
    167: ['Super Res Digital Correlation Coefficient', 300.,
        GenericDigitalMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', scaled_elem(3, 0.00333)],
        ['max', scaled_elem(4, 0.00333)], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    168: ['Super Res Digital Phi', 300., GenericDigitalMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3], ['max', 4], ['delta_time', delta_time(6)],
        ['supplemental_scan', supplemental_scan(6)], ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    169: ['One Hour Accumulation', 230., LegacyMapper,
        [['null_product', low_byte(2)],
        ['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 5)],
        ['bias', scaled_elem(6, 0.01)],
        ['gr_pairs', scaled_elem(7, 0.01)]]],
    170: ['Digital Accumulation Array', 230., GenericDigitalMapper,
        [['null_product', low_byte(2)],
        ['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 5)],
        ['bias', scaled_elem(6, 0.01)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    171: ['Storm Total Accumulation', 230., LegacyMapper,
        [['rainfall_begin', date_elem(0, 1)],
        ['null_product', low_byte(2)],
        ['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 5)],
        ['bias', scaled_elem(6, 0.01)],
        ['gr_pairs', scaled_elem(7, 0.01)]]],
    172: ['Digital Storm Total Accumulation', 230., GenericDigitalMapper,
        [['rainfall_begin', date_elem(0, 1)],
        ['null_product', low_byte(2)],
        ['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 5)],
        ['bias', scaled_elem(6, 0.01)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    173: ['Digital User-Selectable Accumulation', 230., GenericDigitalMapper,
        [['period', 1],
        ['missing_period', high_byte(2)],
        ['null_product', low_byte(2)],
        ['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 0)],
        ['start_time', 5],
        ['bias', scaled_elem(6, 0.01)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    174: ['Digital One-Hour Difference Accumulation', 230.,
        GenericDigitalMapper,
        [['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 5)],
        ['min', scaled_elem(6, 0.1)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    175: ['Digital Storm Total Difference Accumulation', 230.,
        GenericDigitalMapper,
        [['rainfall_begin', date_elem(0, 1)],
        ['null_product', low_byte(2)],
        ['max', scaled_elem(3, 0.1)],
        ['rainfall_end', date_elem(4, 5)],
        ['min', scaled_elem(6, 0.1)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    176: ['Digital Instantaneous Precipitation Rate', 230.,
        GenericDigitalMapper,
        [['rainfall_begin', date_elem(0, 1)],
        ['precip_detected', high_byte(2)],
        ['need_bias', low_byte(2)],
        ['max', 3],
        ['percent_filled', scaled_elem(4, 0.01)],
        ['max_elev', scaled_elem(5, 0.1)],
        ['bias', scaled_elem(6, 0.01)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    177: ['Hybrid Hydrometeor Classification', 230., DigitalHMCMapper,
        [['mode_filter_size', 3],
        ['hybrid_percent_filled', 4],
        ['max_elev', scaled_elem(5, 0.1)],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    180: ['TDWR Base Reflectivity', 90., DigitalRefMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    181: ['TDWR Base Reflectivity', 90., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3]]],
    182: ['TDWR Base Velocity', 90., DigitalVelMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3],
        ['max', 4],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    183: ['TDWR Base Velocity', 90., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['min', 3],
        ['max', 4]]],
    185: ['TDWR Base Spectrum Width', 90., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3]]],
    186: ['TDWR Long Range Base Reflectivity', 416., DigitalRefMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3],
        ['compression', 7],
        ['uncompressed_size', combine_elem(8, 9)]]],
    187: ['TDWR Long Range Base Reflectivity', 416., LegacyMapper,
        [['el_angle', scaled_elem(2, 0.1)],
        ['max', 3]]]
}

module.exports = NEXRADLevel3File;
}).call(this)}).call(this,require("buffer").Buffer)
},{"../buffer_tools/IOBuffer":49,"buffer":172,"bufferpack":108,"seek-bzip":159,"zlib":171}],57:[function(require,module,exports){
(function (Buffer){(function (){
const ut = require('../../core/utils');

const NEXRADLevel2File = require('../libnexrad/level2/level2_parser');
const Level2Factory = require('../libnexrad/level2/level2_factory');

const NEXRADLevel3File = require('../libnexrad/level3/level3_parser');
const Level3Factory = require('../libnexrad/level3/level3_factory');

/**
 * Function that fetches a file and returns it as a Buffer.
 * 
 * @param {String} url The path to the file. It can be a local file, or a file stored on a remote server.
 * @param {*} callback A callback function that has a single paramater, which is the buffer of the file.
 */
function file_to_buffer(url, callback) {
    fetch(url)
    .then(response => response.arrayBuffer())
    .then(buffer => {
        var fileBuffer = Buffer.from(buffer);
        callback(fileBuffer);
    });
}

/**
 * Parses a URL and returns a filename.
 * 
 * @param {String} url The url to parse.
 * @returns {String} The radar file's filename.
 */
function _url_to_filename(url) {
    const url_array = new URL(url).pathname.split('/');
    return url_array[url_array.length - 1];
}

/**
 * Function to get the latest Level 2 file for a station.
 * 
 * @param {String} station - The four letter ICAO of the station. e.g. "KLWX" / "KMHX"
 * @param {Function} callback - The function to run after the retrieval. Use a single variable
 * in this function, this will be a string with the latest file's URL.
 */
function get_latest_level_2_url(station, callback) {
    var curTime = new Date();
    var year = curTime.getUTCFullYear();
    var month = curTime.getUTCMonth() + 1;
    if (month.toString().length == 1) month = "0" + month.toString();
    var day = curTime.getUTCDate();
    if (day.toString().length == 1) day = "0" + day.toString();
    var stationToGet = station.toUpperCase().replace(/ /g, '')
    var fullURL = "https://noaa-nexrad-level2.s3.amazonaws.com/?list-type=2&delimiter=%2F&prefix=" + year + "%2F" + month + "%2F" + day + "%2F" + stationToGet + "%2F"
    //console.log(fullURL)
    var baseURL = 'https://noaa-nexrad-level2.s3.amazonaws.com';
    //https://noaa-nexrad-level2.s3.amazonaws.com/2022/08/09/KATX/KATX20220809_004942_V06
    fullURL = ut.preventFileCaching(fullURL);
    $.get(ut.phpProxy + fullURL, function (data) {
        var dataToWorkWith = JSON.stringify(ut.xmlToJson(data)).replace(/#/g, 'HASH')
        dataToWorkWith = JSON.parse(dataToWorkWith)
        //console.log(dataToWorkWith)
        var filenameKey = dataToWorkWith.ListBucketResult.Contents
        var latestFileName = filenameKey[filenameKey.length - 1].Key.HASHtext.slice(16);
        if (latestFileName.includes('MDM')) {
            latestFileName = filenameKey[filenameKey.length - 2].Key.HASHtext.slice(16);
        }

        var finishedURL = `${baseURL}/${year}/${month}/${day}/${station}/${latestFileName}`;
        callback(finishedURL);
    })
}

/**
 * Function to get the latest Level 3 file for a station.
 * 
 * @param {String} station - The four letter ICAO of the station. e.g. "KLWX" / "KMHX"
 * @param {String} product - Three letter abbreviation of the Level 3 product being retrieved. e.g. "NST", "N0B", "N0G"
 * @param {Number} index - A number that represents the time of the file to load. e.g. 0 for the latest file, 5 for 5 files back, etc.
 * @param {Function} callback - The function to run after the retrieval. Use two variables
 * in this function, which will be a string with the latest file's URL, and a date object for the radar file.
 * @param {Date} date - A value used internally within the function. Do not pass a value for this parameter.
 */
var timesGoneBack = 0;
function get_latest_level_3_url(station, product, index, callback, date) {
    if (
        product != 'NTV' && product != 'NMD' && product != 'NST' &&
        product != '134il' && product.slice(0, 3) != 'p94' && product.slice(0, 3) != 'p99'
    ) {
        /* we need to slice(1) here (remove the first letter) because the level 3 source we
        * are using only accepts a three character ICAO, e.g. "MHX" / "LWX" */
        var corrected_station = station.slice(1);
        //document.getElementById('spinnerParent').style.display = 'block';
        var curTime;
        if (date == undefined) {
            curTime = new Date();
        } else {
            curTime = date;
        }
        var year = curTime.getUTCFullYear();
        var month = curTime.getUTCMonth() + 1;
        if (month.toString().length == 1) month = "0" + month.toString();
        var day = curTime.getUTCDate();
        if (day.toString().length == 1) day = "0" + day.toString();
        var stationToGet = corrected_station.toUpperCase().replace(/ /g, '')
        var urlBase = "https://unidata-nexrad-level3.s3.amazonaws.com/";
        var filenamePrefix = `${corrected_station}_${product}_${year}_${month}_${day}`;
        // var urlPrefInfo = '?list-type=2&delimiter=/%2F&prefix=';
        var urlPrefInfo = '?prefix=';
        var fullURL = `${urlBase}${urlPrefInfo}${filenamePrefix}`
        fullURL = ut.preventFileCaching(fullURL);

        const headers = new Headers().append('Cache-Control', 'no-cache');
        fetch(ut.phpProxy + fullURL, {cache: 'no-store', headers: headers}).then(response => response.text())
        .then(function(data) {
        //$.get(ut.phpProxy + fullURL, function (data) {
            try {
                var dataToWorkWith = JSON.stringify(ut.xmlToJson(data)).replace(/#/g, 'HASH')
                dataToWorkWith = JSON.parse(dataToWorkWith)
                //console.log(dataToWorkWith)
                var contentsBase = dataToWorkWith.ListBucketResult.Contents;
                var filenameKey;
                var dateKey;
                if (Array.isArray(contentsBase)) {
                    filenameKey = contentsBase[contentsBase.length - (index + 1)].Key.HASHtext;
                    dateKey = contentsBase[contentsBase.length - (index + 1)].LastModified.HASHtext;
                } else {
                    filenameKey = contentsBase.Key.HASHtext;
                    dateKey = contentsBase.LastModified.HASHtext;
                }

                var finishedURL = `${urlBase}${filenameKey}`;
                callback(finishedURL, new Date(dateKey));
            } catch(e) {
                // we don't want to go back days for storm tracking - most of the time an empty directory
                // of storm track files means there are no storm tracks avaliable at the time (e.g. clear skies / no storms)
                if ((product != 'NTV' && product != 'NMD' && product != 'NST') && timesGoneBack < 15) {
                    // error checking - if nothing exists for this date, fetch the directory listing for the previous day
                    var d = curTime;
                    d.setDate(d.getDate() - 1);
                    timesGoneBack++;
                    get_latest_level_3_url(station, product, index, callback, d);
                } else {
                    callback(null);
                }
            }
        })
    } else {
        if (product == 'NST') { product = '58sti' }
        if (product == 'NTV') { product = '61tvs' }
        if (product == 'NMD') { product = '141md' }
        var fileUrl = `https://tgftp.nws.noaa.gov/SL.us008001/DF.of/DC.radar/DS.${product}/SI.${station.toLowerCase()}/sn.last#`;
        fileUrl = ut.preventFileCaching(fileUrl);

        fetch(ut.phpProxy + `https://tgftp.nws.noaa.gov/SL.us008001/DF.of/DC.radar/DS.${product}/SI.${station.toLowerCase()}/sn.last#`)
        .then(response => {
            const file_modified_date = response.headers.get('Last-Modified');

            callback(fileUrl, new Date(file_modified_date));
        })
    }

    /*
    * Below is all unused code to retrieve the latest file from a different data source.
    */
    // var curTime = new Date();
    // var year = curTime.getUTCFullYear();
    // var month = curTime.getUTCMonth() + 1;
    // if (month.toString().length == 1) month = "0" + month.toString();
    // var day = curTime.getUTCDate();
    // if (day.toString().length == 1) day = "0" + day.toString();
    // var yyyymmdd = `${year}${month}${day}`
    // var l3FileURL = `https://unidata3.ssec.wisc.edu/native/radar/level3/nexrad/${product}/${station}/${yyyymmdd}/`;
    // console.log(l3FileURL);
    // $.get(ut.phpProxy + l3FileURL, function(data) {
    //     var div = document.createElement('div')
    //     div.innerHTML = data;
    //     var jsonWithFileList = JSON.parse(ut.html2json(div));
    //     var fileListLength = jsonWithFileList.children[2].children.length;
    //     var filenameKey = jsonWithFileList.children[2].children[fileListLength - 2].attributes[0][1];

    //     var finishedURL = `${l3FileURL}${filenameKey}`;
    //     callback(finishedURL);
    // })
}

/**
 * Function to return a L3Factory instance from a station and a product.
 * 
 * @param {String} station - See documentation for "get_latest_level_3_url" function.
 * @param {String} product - See documentation for "get_latest_level_3_url" function.
 * @param {Function} callback - A callback function. Passes a single variable, which is an instance of a L3Factory class.
 */
function return_level_3_factory_from_info(station, product, callback) {
    get_latest_level_3_url(station, product, 0, (url) => {
        return_level_3_factory_from_url(url, (L3Factory) => {
            callback(L3Factory);
        })
    })
}
/**
 * Function to return a L3Factory instance from a URL.
 * 
 * @param {String} url - See documentation for "file_to_buffer" function.
 * @param {Function} callback - A callback function. Passes a single variable, which is an instance of a L3Factory class.
 */
function return_level_3_factory_from_url(url, callback) {
    file_to_buffer(ut.phpProxy + url, (buffer) => {
        const file = new NEXRADLevel3File(buffer);
        const L3Factory = new Level3Factory(file);
        callback(L3Factory);
    })
}
/**
 * Function to return a L3Factory instance from an ArrayBuffer.
 * 
 * @param {ArrayBuffer} arraybuffer - An ArrayBuffer which contains the data of the radar file.
 * @param {Function} callback - A callback function. Passes a single variable, which is an instance of a L3Factory class.
 */
function return_level_3_factory_from_buffer(arraybuffer, callback) {
    const file = new NEXRADLevel3File(arraybuffer);
    const L3Factory = new Level3Factory(file);
    callback(L3Factory);
}

/**
 * Function to quickly plot and display info about a Level 3 file.
 * 
 * @param {String} station - See documentation for "get_latest_level_3_url" function.
 * @param {String} product - See documentation for "get_latest_level_3_url" function.
 * @param {Function} callback - A callback function. Passes a single variable, which is an instance of a L3Factory class.
 */
function quick_level_3_plot(station, product, callback = null) {
    if (callback == null) { callback = function() {} }
    return_level_3_factory_from_info(station, product, (L3Factory) => {
        if (window?.atticData?.current_RadarUpdater != undefined) {
            window.atticData.current_RadarUpdater.disable();
        }

        console.log('Main file:', L3Factory);
        // L3Factory.display_file_info();
        L3Factory.plot();

        callback(L3Factory);
    })
}

/**
 * Plot a Level 3 file from a url.
 * 
 * @param {String} url - See documentation for "file_to_buffer" function.
 * @param {Function} callback - A callback function. Passes a single variable, which is an instance of a L3Factory class.
 */
function level_3_plot_from_url(url, callback = null) {
    if (callback == null) { callback = function() {} }
    return_level_3_factory_from_url(url, (L3Factory) => {
        if (window?.atticData?.current_RadarUpdater != undefined) {
            window.atticData.current_RadarUpdater.disable();
        }

        L3Factory.plot();
        callback(L3Factory);
    })
}


/**
 * Function to return a L2Factory instance from an ArrayBuffer.
 * 
 * @param {ArrayBuffer} arraybuffer - An ArrayBuffer which contains the data of the radar file.
 * @param {Function} callback - A callback function. Passes a single variable, which is an instance of a L2Factory class.
 */
function return_level_2_factory_from_buffer(arraybuffer, filename, callback) {
    const file = new NEXRADLevel2File(arraybuffer, filename);
    const L2Factory = new Level2Factory(file);
    callback(L2Factory);
}

module.exports = {
    file_to_buffer,
    get_latest_level_2_url,
    get_latest_level_3_url,

    return_level_3_factory_from_info,
    return_level_3_factory_from_url,
    return_level_3_factory_from_buffer,
    quick_level_3_plot,
    level_3_plot_from_url,

    return_level_2_factory_from_buffer
};
}).call(this)}).call(this,require("buffer").Buffer)
},{"../../core/utils":30,"../libnexrad/level2/level2_factory":52,"../libnexrad/level2/level2_parser":53,"../libnexrad/level3/level3_factory":54,"../libnexrad/level3/level3_parser":56,"buffer":172}],58:[function(require,module,exports){
function get_nexrad_location(station) {
    var loc = NEXRAD_LOCATIONS?.[station.toUpperCase()];
    if (loc == undefined) {
        return [0, 0, 0];
    }
    return [loc['lat'], loc['lon'], loc['elev']];
}

/**
 * Taken from https://api.weather.gov/radar/stations.
 * Elevation units are in meters.
 */
const NEXRAD_LOCATIONS = {
    'KBGM': {
        'lat': 42.1996899,
        'lon': -75.98472,
        'elev': 489.51,
        'type': 'WSR-88D',
        'name': 'Binghamton'
    },
    'KMVX': {
        'lat': 47.52805,
        'lon': -97.32499,
        'elev': 300.53,
        'type': 'WSR-88D',
        'name': 'Fargo'
    },
    'KHPX': {
        'lat': 36.73666,
        'lon': -87.2849899,
        'elev': 172,
        'type': 'WSR-88D',
        'name': 'Ft. Campbell'
    },
    'KRGX': {
        'lat': 39.75405,
        'lon': -119.46202,
        'elev': 2529.54,
        'type': 'WSR-88D',
        'name': 'Reno'
    },
    'KFSD': {
        'lat': 43.58777,
        'lon': -96.72888,
        'elev': 435.86,
        'type': 'WSR-88D',
        'name': 'Sioux Falls'
    },
    'TEWR': {
        'lat': 40.593,
        'lon': -74.27,
        'elev': 41.45278,
        'type': 'TDWR',
        'name': 'Newark'
    },
    'KCAE': {
        'lat': 33.9486,
        'lon': -81.11861,
        'elev': 70.41,
        'type': 'WSR-88D',
        'name': 'Columbia'
    },
    'TLVE': {
        'lat': 41.29,
        'lon': -82.008,
        'elev': 283.76878,
        'type': 'TDWR',
        'name': 'Cleveland'
    },
    'TMSP': {
        'lat': 44.871,
        'lon': -92.933,
        'elev': 341.68078,
        'type': 'TDWR',
        'name': 'Minneapolis'
    },
    'KMKX': {
        'lat': 42.96777,
        'lon': -88.55055,
        'elev': 292,
        'type': 'WSR-88D',
        'name': 'Milwaukee'
    },
    'KDIX': {
        'lat': 39.94694,
        'lon': -74.41072,
        'elev': 45.42,
        'type': 'WSR-88D',
        'name': 'Mt. Holly'
    },
    'PAKC': {
        'lat': 58.67944,
        'lon': -156.62942,
        'elev': 19.2,
        'type': 'WSR-88D',
        'name': 'King Salmon'
    },
    'PABC': {
        'lat': 60.79194,
        'lon': -161.87637,
        'elev': 49.07,
        'type': 'WSR-88D',
        'name': 'Bethel'
    },
    'KBOX': {
        'lat': 41.95577,
        'lon': -71.13686,
        'elev': 35.97,
        'type': 'WSR-88D',
        'name': 'Boston'
    },
    'KGRR': {
        'lat': 42.89388,
        'lon': -85.54488,
        'elev': 237.13,
        'type': 'WSR-88D',
        'name': 'Grand Rapids'
    },
    'KFTG': {
        'lat': 39.78663,
        'lon': -104.5458,
        'elev': 1675.49,
        'type': 'WSR-88D',
        'name': 'Denver'
    },
    'KLCH': {
        'lat': 30.1253,
        'lon': -93.21588,
        'elev': 17,
        'type': 'WSR-88D',
        'name': 'Lake Charles'
    },
    'KYUX': {
        'lat': 32.49527,
        'lon': -114.65668,
        'elev': 53.04,
        'type': 'WSR-88D',
        'name': 'Yuma'
    },
    'KSHV': {
        'lat': 32.45083,
        'lon': -93.84124,
        'elev': 83.21,
        'type': 'WSR-88D',
        'name': 'Shreveport'
    },
    'KSRX': {
        'lat': 35.29041,
        'lon': -94.36188,
        'elev': 200,
        'type': 'WSR-88D',
        'name': 'Ft. Smith'
    },
    'TJFK': {
        'lat': 40.589,
        'lon': -73.881,
        'elev': 34.13758,
        'type': 'TDWR',
        'name': 'New York City'
    },
    'TMCO': {
        'lat': 28.344,
        'lon': -81.3259999,
        'elev': 51.51118,
        'type': 'TDWR',
        'name': 'Orlando International'
    },
    'KICX': {
        'lat': 37.59104,
        'lon': -112.86221,
        'elev': 3244,
        'type': 'WSR-88D',
        'name': 'Cedar City'
    },
    'KMOB': {
        'lat': 30.67944,
        'lon': -88.23972,
        'elev': 63.4,
        'type': 'WSR-88D',
        'name': 'Mobile'
    },
    'KMRX': {
        'lat': 36.16833,
        'lon': -83.40194,
        'elev': 407.52,
        'type': 'WSR-88D',
        'name': 'Knoxville'
    },
    'KVBX': {
        'lat': 34.83855,
        'lon': -120.3979,
        'elev': 383,
        'type': 'WSR-88D',
        'name': 'Vandenberg AFB'
    },
    'KJGX': {
        'lat': 32.67499,
        'lon': -83.35111,
        'elev': 158.8,
        'type': 'WSR-88D',
        'name': 'Robins AFB'
    },
    'KIWA': {
        'lat': 33.28916,
        'lon': -111.66999,
        'elev': 415,
        'type': 'WSR-88D',
        'name': 'Phoenix'
    },
    'KLOT': {
        'lat': 41.6044399,
        'lon': -88.08444,
        'elev': 202.08,
        'type': 'WSR-88D',
        'name': 'Chicago'
    },
    'KPOE': {
        'lat': 31.15527,
        'lon': -92.97583,
        'elev': 124.36,
        'type': 'WSR-88D',
        'name': 'Ft. Polk'
    },
    'KEAX': {
        'lat': 38.81024,
        'lon': -94.26446,
        'elev': 303.28,
        'type': 'WSR-88D',
        'name': 'Kansas City'
    },
    'PAHG': {
        'lat': 60.72591,
        'lon': -151.35144,
        'elev': 73.76,
        'type': 'WSR-88D',
        'name': 'Kenai'
    },
    'TTUL': {
        'lat': 36.071,
        'lon': -95.827,
        'elev': 250.85038,
        'type': 'TDWR',
        'name': 'Tulsa'
    },
    'TJUA': {
        'lat': 18.1156599,
        'lon': -66.07817,
        'elev': 867,
        'type': 'WSR-88D',
        'name': 'San Juan'
    },
    'KDVN': {
        'lat': 41.61166,
        'lon': -90.58083,
        'elev': 229.82,
        'type': 'WSR-88D',
        'name': 'Quad Cities'
    },
    'KLVX': {
        'lat': 37.97527,
        'lon': -85.9438799,
        'elev': 219.15,
        'type': 'WSR-88D',
        'name': 'Louisville'
    },
    'KHNX': {
        'lat': 36.31416,
        'lon': -119.63213,
        'elev': 74.07,
        'type': 'WSR-88D',
        'name': 'San Joaquin Valley'
    },
    'KLWX': {
        'lat': 38.9761,
        'lon': -77.4875,
        'elev': 88.54,
        'type': 'WSR-88D',
        'name': 'Sterling'
    },
    'KGWX': {
        'lat': 33.89691,
        'lon': -88.32919,
        'elev': 155,
        'type': 'WSR-88D',
        'name': 'Columbus AFB'
    },
    'KDDC': {
        'lat': 37.76083,
        'lon': -99.96888,
        'elev': 789.43,
        'type': 'WSR-88D',
        'name': 'Dodge City'
    },
    'KDMX': {
        'lat': 41.7311,
        'lon': -93.7228499,
        'elev': 299.01,
        'type': 'WSR-88D',
        'name': 'Des Moines'
    },
    'PHKM': {
        'lat': 20.12527,
        'lon': -155.77776,
        'elev': 1174,
        'type': 'WSR-88D',
        'name': 'Kohala'
    },
    'KDLH': {
        'lat': 46.83694,
        'lon': -92.20971,
        'elev': 435.25,
        'type': 'WSR-88D',
        'name': 'Duluth'
    },
    'KEVX': {
        'lat': 30.56503,
        'lon': -85.92166,
        'elev': 42.67,
        'type': 'WSR-88D',
        'name': 'Eglin AFB'
    },
    'TORD': {
        'lat': 41.797,
        'lon': -87.858,
        'elev': 226.77118,
        'type': 'TDWR',
        'name': "Chicago O'Hare"
    },
    'KMAF': {
        'lat': 31.94346,
        'lon': -102.18924,
        'elev': 883,
        'type': 'WSR-88D',
        'name': 'Odessa'
    },
    'KVNX': {
        'lat': 36.74083,
        'lon': -98.12749,
        'elev': 368.81,
        'type': 'WSR-88D',
        'name': 'Vance AFB'
    },
    'KOTX': {
        'lat': 47.6805499,
        'lon': -117.62582,
        'elev': 726.64,
        'type': 'WSR-88D',
        'name': 'Spokane'
    },
    'KBBX': {
        'lat': 39.49611,
        'lon': -121.63165,
        'elev': 52.73,
        'type': 'WSR-88D',
        'name': 'Beale AFB'
    },
    'TADW': {
        'lat': 38.695,
        'lon': -76.845,
        'elev': 105.46078,
        'type': 'TDWR',
        'name': 'Andrews Air Force Base'
    },
    'TCLT': {
        'lat': 35.337,
        'lon': -80.885,
        'elev': 265.48078,
        'type': 'TDWR',
        'name': 'Charlotte'
    },
    'KGRK': {
        'lat': 30.72166,
        'lon': -97.3827699,
        'elev': 163.98,
        'type': 'WSR-88D',
        'name': 'Ft. Hood'
    },
    'TSTL': {
        'lat': 38.805,
        'lon': -90.489,
        'elev': 197.20558,
        'type': 'TDWR',
        'name': 'St. Louis'
    },
    'KEWX': {
        'lat': 29.70405,
        'lon': -98.0286,
        'elev': 204,
        'type': 'WSR-88D',
        'name': 'Austin-San Antonio'
    },
    'KRAX': {
        'lat': 35.66527,
        'lon': -78.49,
        'elev': 106.07,
        'type': 'WSR-88D',
        'name': 'Raleigh-Durham'
    },
    'KLNX': {
        'lat': 41.95794,
        'lon': -100.57621,
        'elev': 919,
        'type': 'WSR-88D',
        'name': 'North Platte'
    },
    'KLBB': {
        'lat': 33.65413,
        'lon': -101.81416,
        'elev': 1005,
        'type': 'WSR-88D',
        'name': 'Lubbock'
    },
    'TSJU': {
        'lat': 18.474,
        'lon': -66.179,
        'elev': 47.85358,
        'type': 'TDWR',
        'name': 'San Juan'
    },
    'HWPA2': {
        'lat': 59.65,
        'lon': -151.46,
        'elev': 7.6,
        'type': 'Profiler',
        'name': 'Homer'
    },
    'KPDT': {
        'lat': 45.69055,
        'lon': -118.8529,
        'elev': 461.77,
        'type': 'WSR-88D',
        'name': 'Pendleton'
    },
    'KGSP': {
        'lat': 34.8833,
        'lon': -82.21983,
        'elev': 291,
        'type': 'WSR-88D',
        'name': 'Greenville-Spartanburg'
    },
    'KEOX': {
        'lat': 31.46055,
        'lon': -85.45938,
        'elev': 144,
        'type': 'WSR-88D',
        'name': 'Ft. Rucker'
    },
    'KBIS': {
        'lat': 46.7708299,
        'lon': -100.76027,
        'elev': 505.36,
        'type': 'WSR-88D',
        'name': 'Bismarck'
    },
    'TDFW': {
        'lat': 33.065,
        'lon': -96.918,
        'elev': 178.30798,
        'type': 'TDWR',
        'name': 'Dallas/Ft. Worth'
    },
    'PAIH': {
        'lat': 59.46194,
        'lon': -146.3010899,
        'elev': 20.42,
        'type': 'WSR-88D',
        'name': 'Middleton Islands'
    },
    'KBYX': {
        'lat': 24.59694,
        'lon': -81.7033299,
        'elev': 2.44,
        'type': 'WSR-88D',
        'name': 'Key West'
    },
    'KJAX': {
        'lat': 30.48463,
        'lon': -81.7019,
        'elev': 19,
        'type': 'WSR-88D',
        'name': 'Jacksonville'
    },
    'KFDX': {
        'lat': 34.63416,
        'lon': -103.61888,
        'elev': 1417.32,
        'type': 'WSR-88D',
        'name': 'Cannon AFB'
    },
    'TSLC': {
        'lat': 40.967,
        'lon': -111.93,
        'elev': 1309.11598,
        'type': 'TDWR',
        'name': 'Salt Lake City'
    },
    'TPHX': {
        'lat': 33.421,
        'lon': -112.163,
        'elev': 331.92718,
        'type': 'TDWR',
        'name': 'Phoenix'
    },
    'KESX': {
        'lat': 35.70111,
        'lon': -114.89138,
        'elev': 1483.46,
        'type': 'WSR-88D',
        'name': 'Las Vegas'
    },
    'TCMH': {
        'lat': 40.006,
        'lon': -82.715,
        'elev': 349.91038,
        'type': 'TDWR',
        'name': 'Columbus'
    },
    'KDYX': {
        'lat': 32.53833,
        'lon': -99.25416,
        'elev': 462.38,
        'type': 'WSR-88D',
        'name': 'Dyess AFB'
    },
    'KTBW': {
        'lat': 27.70527,
        'lon': -82.40194,
        'elev': 12.5,
        'type': 'WSR-88D',
        'name': 'Tampa Bay'
    },
    'TMSY': {
        'lat': 30.022,
        'lon': -90.403,
        'elev': 30.17518,
        'type': 'TDWR',
        'name': 'New Orleans'
    },
    'KDFX': {
        'lat': 29.2725,
        'lon': -100.28027,
        'elev': 344.73,
        'type': 'WSR-88D',
        'name': 'Laughlin AFB'
    },
    'TBNA': {
        'lat': 35.9799999,
        'lon': -86.662,
        'elev': 249.02158,
        'type': 'TDWR',
        'name': 'Nashville'
    },
    'TMIA': {
        'lat': 25.758,
        'lon': -80.491,
        'elev': 38.09998,
        'type': 'TDWR',
        'name': 'Miami'
    },
    'TATL': {
        'lat': 33.647,
        'lon': -84.262,
        'elev': 327.65998,
        'type': 'TDWR',
        'name': 'Atlanta'
    },
    'KMUX': {
        'lat': 37.15522,
        'lon': -121.89843,
        'elev': 1057.35,
        'type': 'WSR-88D',
        'name': 'San Francisco'
    },
    'KBRO': {
        'lat': 25.91555,
        'lon': -97.4186,
        'elev': 7.01,
        'type': 'WSR-88D',
        'name': 'Brownsville'
    },
    'RKJK': {
        'lat': 35.9241699,
        'lon': 126.62222,
        'elev': 23.77,
        'type': 'WSR-88D',
        'name': 'Kunsan AB'
    },
    'KAKQ': {
        'lat': 36.98388,
        'lon': -77.0074999,
        'elev': 48,
        'type': 'WSR-88D',
        'name': 'Norfolk-Richmond'
    },
    'KBMX': {
        'lat': 33.17194,
        'lon': -86.76972,
        'elev': 196.6,
        'type': 'WSR-88D',
        'name': 'Birmingham'
    },
    'TPIT': {
        'lat': 40.501,
        'lon': -80.486,
        'elev': 422.45278,
        'type': 'TDWR',
        'name': 'Pittsburgh'
    },
    'TMDW': {
        'lat': 41.651,
        'lon': -87.73,
        'elev': 232.56238,
        'type': 'TDWR',
        'name': 'Chicago Midway'
    },
    'KABR': {
        'lat': 45.45583,
        'lon': -98.41305,
        'elev': 396.85,
        'type': 'WSR-88D',
        'name': 'Aberdeen'
    },
    'KSFX': {
        'lat': 43.10559,
        'lon': -112.68612,
        'elev': 1363.68,
        'type': 'WSR-88D',
        'name': 'Idaho Falls'
    },
    'KSOX': {
        'lat': 33.81773,
        'lon': -117.63599,
        'elev': 927,
        'type': 'WSR-88D',
        'name': 'Santa Ana Mountains'
    },
    'KTLH': {
        'lat': 30.39749,
        'lon': -84.32889,
        'elev': 19.2,
        'type': 'WSR-88D',
        'name': 'Tallahassee'
    },
    'KHGX': {
        'lat': 29.47194,
        'lon': -95.07888,
        'elev': 5.49,
        'type': 'WSR-88D',
        'name': 'Houston'
    },
    'KAMX': {
        'lat': 25.61055,
        'lon': -80.41305,
        'elev': 4.27,
        'type': 'WSR-88D',
        'name': 'Miami'
    },
    'KMTX': {
        'lat': 41.26277,
        'lon': -112.44777,
        'elev': 1975,
        'type': 'WSR-88D',
        'name': 'Salt Lake City'
    },
    'TDAY': {
        'lat': 40.022,
        'lon': -84.123,
        'elev': 310.59118,
        'type': 'TDWR',
        'name': 'Dayton'
    },
    'KEPZ': {
        'lat': 31.87305,
        'lon': -106.69799,
        'elev': 1250.9,
        'type': 'WSR-88D',
        'name': 'El Paso'
    },
    'KLZK': {
        'lat': 34.83638,
        'lon': -92.26194,
        'elev': 173.13,
        'type': 'WSR-88D',
        'name': 'Little Rock'
    },
    'KHTX': {
        'lat': 34.9305499,
        'lon': -86.0836099,
        'elev': 537.06,
        'type': 'WSR-88D',
        'name': 'Huntsville-Hytop'
    },
    'KEYX': {
        'lat': 35.09777,
        'lon': -117.56074,
        'elev': 846,
        'type': 'WSR-88D',
        'name': 'Edwards AFB'
    },
    'KSGF': {
        'lat': 37.23527,
        'lon': -93.40027,
        'elev': 389.53,
        'type': 'WSR-88D',
        'name': 'Springfield'
    },
    'KBLX': {
        'lat': 45.85377,
        'lon': -108.60679,
        'elev': 1109,
        'type': 'WSR-88D',
        'name': 'Billings'
    },
    'KPUX': {
        'lat': 38.45944,
        'lon': -104.18138,
        'elev': 1615,
        'type': 'WSR-88D',
        'name': 'Pueblo'
    },
    'KHDX': {
        'lat': 33.07699,
        'lon': -106.12002,
        'elev': 1286.87,
        'type': 'WSR-88D',
        'name': 'Holloman AFB'
    },
    'KINX': {
        'lat': 36.17499,
        'lon': -95.56413,
        'elev': 203.61,
        'type': 'WSR-88D',
        'name': 'Tulsa'
    },
    'KIWX': {
        'lat': 41.3586,
        'lon': -85.7,
        'elev': 292.3,
        'type': 'WSR-88D',
        'name': 'North Webster'
    },
    'KGGW': {
        'lat': 48.20635,
        'lon': -106.62468,
        'elev': 702,
        'type': 'WSR-88D',
        'name': 'Glasgow'
    },
    'KNQA': {
        'lat': 35.34472,
        'lon': -89.87333,
        'elev': 103,
        'type': 'WSR-88D',
        'name': 'Memphis'
    },
    'TDAL': {
        'lat': 32.926,
        'lon': -96.968,
        'elev': 189.58558,
        'type': 'TDWR',
        'name': 'Dallas Love Field'
    },
    'RODN': {
        'lat': 26.3019399,
        'lon': 127.90972,
        'elev': 91,
        'type': 'WSR-88D',
        'name': 'Kadena'
    },
    'TPBI': {
        'lat': 26.688,
        'lon': -80.273,
        'elev': 40.53838,
        'type': 'TDWR',
        'name': 'West Palm Beach'
    },
    'KCLX': {
        'lat': 32.65552,
        'lon': -81.04219,
        'elev': 35,
        'type': 'WSR-88D',
        'name': 'Charleston'
    },
    'KIND': {
        'lat': 39.70749,
        'lon': -86.28027,
        'elev': 240.79,
        'type': 'WSR-88D',
        'name': 'Indianapolis'
    },
    'TTPA': {
        'lat': 27.86,
        'lon': -82.518,
        'elev': 28.34638,
        'type': 'TDWR',
        'name': 'Tampa Bay'
    },
    'KOKX': {
        'lat': 40.8655199,
        'lon': -72.8639199,
        'elev': 25.91,
        'type': 'WSR-88D',
        'name': 'New York City'
    },
    'KGLD': {
        'lat': 39.36694,
        'lon': -101.70027,
        'elev': 1112.82,
        'type': 'WSR-88D',
        'name': 'Goodland'
    },
    'KVTX': {
        'lat': 34.41166,
        'lon': -119.1786,
        'elev': 830.88,
        'type': 'WSR-88D',
        'name': 'Los Angeles'
    },
    'KICT': {
        'lat': 37.65444,
        'lon': -97.44305,
        'elev': 406.91,
        'type': 'WSR-88D',
        'name': 'Wichita'
    },
    'TDEN': {
        'lat': 39.728,
        'lon': -104.526,
        'elev': 1737.66478,
        'type': 'TDWR',
        'name': 'Denver'
    },
    'TPHL': {
        'lat': 39.949,
        'lon': -75.069,
        'elev': 46.63438,
        'type': 'TDWR',
        'name': 'Philadelphia'
    },
    'ROCO2': {
        'lat': 35.2299999,
        'lon': -97.45,
        'elev': 363.3,
        'type': 'Profiler',
        'name': 'Norman'
    },
    'TCVG': {
        'lat': 38.898,
        'lon': -84.58,
        'elev': 320.95438,
        'type': 'TDWR',
        'name': 'Covington'
    },
    'KDOX': {
        'lat': 38.82555,
        'lon': -75.44,
        'elev': 15.24,
        'type': 'WSR-88D',
        'name': 'Dover AFB'
    },
    'TBWI': {
        'lat': 39.09,
        'lon': -76.63,
        'elev': 90.52558,
        'type': 'TDWR',
        'name': 'Baltimore/Wash'
    },
    'KRIW': {
        'lat': 43.0661,
        'lon': -108.47729,
        'elev': 1697.13,
        'type': 'WSR-88D',
        'name': 'Riverton'
    },
    'KVAX': {
        'lat': 30.89027,
        'lon': -83.0018,
        'elev': 66,
        'type': 'WSR-88D',
        'name': 'Moody AFB'
    },
    'KABX': {
        'lat': 35.14972,
        'lon': -106.82388,
        'elev': 1789.18,
        'type': 'WSR-88D',
        'name': 'Albuquerque'
    },
    'KNKX': {
        'lat': 32.91888,
        'lon': -117.04193,
        'elev': 291.08,
        'type': 'WSR-88D',
        'name': 'San Diego'
    },
    'PACG': {
        'lat': 56.85277,
        'lon': -135.5291499,
        'elev': 63.09,
        'type': 'WSR-88D',
        'name': 'Biorka Island'
    },
    'KMSX': {
        'lat': 47.0411,
        'lon': -113.9861,
        'elev': 2417,
        'type': 'WSR-88D',
        'name': 'Missoula'
    },
    'KGRB': {
        'lat': 44.49862,
        'lon': -88.1110999,
        'elev': 216,
        'type': 'WSR-88D',
        'name': 'Green Bay'
    },
    'KATX': {
        'lat': 48.19461,
        'lon': -122.49568,
        'elev': 161,
        'type': 'WSR-88D',
        'name': 'Seattle-Tacoma'
    },
    'TSDF': {
        'lat': 38.046,
        'lon': -85.61,
        'elev': 222.80878,
        'type': 'TDWR',
        'name': 'Louisville'
    },
    'KCRP': {
        'lat': 27.78388,
        'lon': -97.51083,
        'elev': 13.72,
        'type': 'WSR-88D',
        'name': 'Corpus Christi'
    },
    'TLAS': {
        'lat': 36.144,
        'lon': -115.007,
        'elev': 627.27838,
        'type': 'TDWR',
        'name': 'Las Vegas'
    },
    'TFLL': {
        'lat': 26.143,
        'lon': -80.344,
        'elev': 36.57598,
        'type': 'TDWR',
        'name': 'Fort Lauderdale'
    },
    'TIAD': {
        'lat': 39.084,
        'lon': -77.529,
        'elev': 144.17038,
        'type': 'TDWR',
        'name': 'Dulles'
    },
    'KSJT': {
        'lat': 31.37111,
        'lon': -100.49221,
        'elev': 576.07,
        'type': 'WSR-88D',
        'name': 'San Angelo'
    },
    'TDTW': {
        'lat': 42.111,
        'lon': -83.515,
        'elev': 235.30558,
        'type': 'TDWR',
        'name': 'Detroit'
    },
    'KPBZ': {
        'lat': 40.53166,
        'lon': -80.21794,
        'elev': 361.19,
        'type': 'WSR-88D',
        'name': 'Pittsburgh'
    },
    'TMEM': {
        'lat': 34.896,
        'lon': -89.993,
        'elev': 147.21838,
        'type': 'TDWR',
        'name': 'Memphis'
    },
    'KPAH': {
        'lat': 37.06833,
        'lon': -88.77194,
        'elev': 119.48,
        'type': 'WSR-88D',
        'name': 'Paducah'
    },
    'KLIX': {
        'lat': 30.33666,
        'lon': -89.82541,
        'elev': 20,
        'type': 'WSR-88D',
        'name': 'New Orleans'
    },
    'KRTX': {
        'lat': 45.71499,
        'lon': -122.96499,
        'elev': 492,
        'type': 'WSR-88D',
        'name': 'Portland'
    },
    'TMCI': {
        'lat': 39.498,
        'lon': -94.742,
        'elev': 332.23198,
        'type': 'TDWR',
        'name': 'Kansas City'
    },
    'KFCX': {
        'lat': 37.02416,
        'lon': -80.27416,
        'elev': 874.17,
        'type': 'WSR-88D',
        'name': 'Roanoke'
    },
    'KARX': {
        'lat': 43.82277,
        'lon': -91.1911,
        'elev': 388.92,
        'type': 'WSR-88D',
        'name': 'LaCrosse'
    },
    'KJKL': {
        'lat': 37.5908299,
        'lon': -83.31305,
        'elev': 415.75,
        'type': 'WSR-88D',
        'name': 'Jackson'
    },
    'KGYX': {
        'lat': 43.8913,
        'lon': -70.25636,
        'elev': 124.66,
        'type': 'WSR-88D',
        'name': 'Portland'
    },
    'KAMA': {
        'lat': 35.23333,
        'lon': -101.70927,
        'elev': 1104,
        'type': 'WSR-88D',
        'name': 'Amarillo'
    },
    'KFSX': {
        'lat': 34.57433,
        'lon': -111.19843,
        'elev': 2260.7,
        'type': 'WSR-88D',
        'name': 'Flagstaff'
    },
    'KMPX': {
        'lat': 44.84888,
        'lon': -93.56552,
        'elev': 301,
        'type': 'WSR-88D',
        'name': 'Minneapolis-St. Paul'
    },
    'TIAH': {
        'lat': 30.065,
        'lon': -95.5669999,
        'elev': 77.11438,
        'type': 'TDWR',
        'name': 'Houston Intercontinental'
    },
    'TICH': {
        'lat': 37.507,
        'lon': -97.437,
        'elev': 411.78478,
        'type': 'TDWR',
        'name': 'Wichita'
    },
    'KCXX': {
        'lat': 44.5111,
        'lon': -73.16639,
        'elev': 96.62,
        'type': 'WSR-88D',
        'name': 'Burlington'
    },
    'KDGX': {
        'lat': 32.27999,
        'lon': -89.98444,
        'elev': 150.92,
        'type': 'WSR-88D',
        'name': 'Jackson'
    },
    'KLSX': {
        'lat': 38.69888,
        'lon': -90.68277,
        'elev': 185.32,
        'type': 'WSR-88D',
        'name': 'St. Louis'
    },
    'KGJX': {
        'lat': 39.06222,
        'lon': -108.21375,
        'elev': 3059,
        'type': 'WSR-88D',
        'name': 'Grand Junction'
    },
    'KOAX': {
        'lat': 41.32027,
        'lon': -96.3668,
        'elev': 349.91,
        'type': 'WSR-88D',
        'name': 'Omaha'
    },
    'PHMO': {
        'lat': 21.13277,
        'lon': -157.18026,
        'elev': 415.44,
        'type': 'WSR-88D',
        'name': 'Molokai'
    },
    'KMXX': {
        'lat': 32.53664,
        'lon': -85.78975,
        'elev': 136,
        'type': 'WSR-88D',
        'name': 'Montgomery-Maxwell AFB'
    },
    'KCBX': {
        'lat': 43.49021,
        'lon': -116.23602,
        'elev': 942,
        'type': 'WSR-88D',
        'name': 'Boise'
    },
    'KRLX': {
        'lat': 38.3111,
        'lon': -81.72277,
        'elev': 335,
        'type': 'WSR-88D',
        'name': 'Charleston'
    },
    'TIDS': {
        'lat': 39.637,
        'lon': -86.436,
        'elev': 258.16558,
        'type': 'TDWR',
        'name': 'Indianapolis'
    },
    'KLTX': {
        'lat': 33.98916,
        'lon': -78.42916,
        'elev': 19.51,
        'type': 'WSR-88D',
        'name': 'Wilmington'
    },
    'KILX': {
        'lat': 40.15049,
        'lon': -89.3367899,
        'elev': 188,
        'type': 'WSR-88D',
        'name': 'Lincoln'
    },
    'KDTX': {
        'lat': 42.69999,
        'lon': -83.47166,
        'elev': 336,
        'type': 'WSR-88D',
        'name': 'Detroit'
    },
    'KLRX': {
        'lat': 40.73972,
        'lon': -116.80277,
        'elev': 2067,
        'type': 'WSR-88D',
        'name': 'Elko'
    },
    'TDCA': {
        'lat': 38.759,
        'lon': -76.962,
        'elev': 105.15598,
        'type': 'TDWR',
        'name': 'Washington National'
    },
    'KENX': {
        'lat': 42.58655,
        'lon': -74.06408,
        'elev': 565,
        'type': 'WSR-88D',
        'name': 'Albany'
    },
    'RKSG': {
        'lat': 37.2075699,
        'lon': 127.28556,
        'elev': 439,
        'type': 'WSR-88D',
        'name': 'Camp Humphreys'
    },
    'TMKE': {
        'lat': 42.819,
        'lon': -88.046,
        'elev': 284.37838,
        'type': 'TDWR',
        'name': 'Milwaukee'
    },
    'KOHX': {
        'lat': 36.24722,
        'lon': -86.5625,
        'elev': 176.48,
        'type': 'WSR-88D',
        'name': 'Nashville'
    },
    'KMAX': {
        'lat': 42.08111,
        'lon': -122.71735,
        'elev': 2289.96,
        'type': 'WSR-88D',
        'name': 'Medford'
    },
    'KFDR': {
        'lat': 34.36219,
        'lon': -98.97666,
        'elev': 386.18,
        'type': 'WSR-88D',
        'name': 'Frederick'
    },
    'KMQT': {
        'lat': 46.5311,
        'lon': -87.54833,
        'elev': 430.07,
        'type': 'WSR-88D',
        'name': 'Marquette'
    },
    'KCBW': {
        'lat': 46.03916,
        'lon': -67.80642,
        'elev': 227.38,
        'type': 'WSR-88D',
        'name': 'Hodgdon'
    },
    'KBUF': {
        'lat': 42.9486,
        'lon': -78.73694,
        'elev': 211.23,
        'type': 'WSR-88D',
        'name': 'Buffalo'
    },
    'KTFX': {
        'lat': 47.45972,
        'lon': -111.38527,
        'elev': 1140,
        'type': 'WSR-88D',
        'name': 'Great Falls'
    },
    'THOU': {
        'lat': 29.516,
        'lon': -95.242,
        'elev': 35.66158,
        'type': 'TDWR',
        'name': 'Houston Hobby'
    },
    'KDAX': {
        'lat': 38.50111,
        'lon': -121.67782,
        'elev': 9.14,
        'type': 'WSR-88D',
        'name': 'Sacramento'
    },
    'KTLX': {
        'lat': 35.33305,
        'lon': -97.27775,
        'elev': 369.72,
        'type': 'WSR-88D',
        'name': 'Oklahoma City'
    },
    'KTWX': {
        'lat': 38.99694,
        'lon': -96.23249,
        'elev': 416.66,
        'type': 'WSR-88D',
        'name': 'Topeka'
    },
    'PAEC': {
        'lat': 64.51139,
        'lon': -165.29498,
        'elev': 17.68,
        'type': 'WSR-88D',
        'name': 'Nome'
    },
    'TOKC': {
        'lat': 35.276,
        'lon': -97.51,
        'elev': 398.67838,
        'type': 'TDWR',
        'name': 'Oklahoma City'
    },
    'KEMX': {
        'lat': 31.89361,
        'lon': -110.63027,
        'elev': 1586.48,
        'type': 'WSR-88D',
        'name': 'Tucson'
    },
    'PHWA': {
        'lat': 19.095,
        'lon': -155.56887,
        'elev': 420.62,
        'type': 'WSR-88D',
        'name': 'South Hawaii'
    },
    'KFWS': {
        'lat': 32.57277,
        'lon': -97.30313,
        'elev': 212,
        'type': 'WSR-88D',
        'name': 'Dallas-Ft. Worth'
    },
    'TBOS': {
        'lat': 42.158,
        'lon': -70.933,
        'elev': 80.46718,
        'type': 'TDWR',
        'name': 'Boston'
    },
    'KUDX': {
        'lat': 44.12471,
        'lon': -102.82999,
        'elev': 939,
        'type': 'WSR-88D',
        'name': 'Rapid City'
    },
    'PHKI': {
        'lat': 21.89389,
        'lon': -159.55249,
        'elev': 69,
        'type': 'WSR-88D',
        'name': 'South Kauai'
    },
    'TRDU': {
        'lat': 36.002,
        'lon': -78.697,
        'elev': 156.97198,
        'type': 'TDWR',
        'name': 'Raleigh Durham'
    },
    'KMLB': {
        'lat': 28.11305,
        'lon': -80.6544399,
        'elev': 10.67,
        'type': 'WSR-88D',
        'name': 'Melbourne'
    },
    'KCYS': {
        'lat': 41.15194,
        'lon': -104.8061,
        'elev': 1867.81,
        'type': 'WSR-88D',
        'name': 'Cheyenne'
    },
    'KFFC': {
        'lat': 33.36333,
        'lon': -84.56583,
        'elev': 261.52,
        'type': 'WSR-88D',
        'name': 'Atlanta'
    },
    'AWPA2': {
        'lat': 61.15,
        'lon': -149.78,
        'elev': 97,
        'type': 'Profiler',
        'name': 'Anchorage'
    },
    'KVWX': {
        'lat': 38.26024,
        'lon': -87.72452,
        'elev': 155.75,
        'type': 'WSR-88D',
        'name': 'Evansville'
    },
    'KAPX': {
        'lat': 44.90634,
        'lon': -84.71953,
        'elev': 446.23,
        'type': 'WSR-88D',
        'name': 'Gaylord'
    },
    'KCCX': {
        'lat': 40.92305,
        'lon': -78.00389,
        'elev': 733.04,
        'type': 'WSR-88D',
        'name': 'State College'
    },
    'KBHX': {
        'lat': 40.49833,
        'lon': -124.29215,
        'elev': 732.13,
        'type': 'WSR-88D',
        'name': 'Eureka'
    },
    'KILN': {
        'lat': 39.42027,
        'lon': -83.82166,
        'elev': 321.87,
        'type': 'WSR-88D',
        'name': 'Wilmington'
    },
    'PGUA': {
        'lat': 13.45583,
        'lon': 144.81112,
        'elev': 83,
        'type': 'WSR-88D',
        'name': 'Anderson AFB'
    },
    'KCLE': {
        'lat': 41.41305,
        'lon': -81.86,
        'elev': 232.56,
        'type': 'WSR-88D',
        'name': 'Cleveland'
    },
    'KUEX': {
        'lat': 40.32083,
        'lon': -98.44194,
        'elev': 602.28,
        'type': 'WSR-88D',
        'name': 'Grand Island'
    },
    'PAPD': {
        'lat': 65.03511,
        'lon': -147.5014,
        'elev': 790.35,
        'type': 'WSR-88D',
        'name': 'Pedro Dome'
    },
    'TLKA2': {
        'lat': 62.31,
        'lon': -150.4199999,
        'elev': 151,
        'type': 'Profiler',
        'name': 'Talkeetna'
    },
    'KMHX': {
        'lat': 34.77583,
        'lon': -76.87639,
        'elev': 9.45,
        'type': 'WSR-88D',
        'name': 'Morehead City'
    },
    'KMBX': {
        'lat': 48.39249,
        'lon': -100.86443,
        'elev': 455.07,
        'type': 'WSR-88D',
        'name': 'Minot AFB'
    },
    'KTYX': {
        'lat': 43.75582,
        'lon': -75.68,
        'elev': 562.66,
        'type': 'WSR-88D',
        'name': 'Montague'
    },
    'KLGX': {
        'lat': 47.11689,
        'lon': -124.10663,
        'elev': 76.8,
        'type': 'WSR-88D',
        'name': 'Langley Hill'
    },

    'KULM': {
        'NONSTANDARD': true,
        'lat': 32.52944,
        'lon': -92.01222,
        'elev': 43,
        'type': 'N/A', // Polarimetric S-band Doppler
        'name': 'Monroe / ULM'
    },
    'WILU': {
        'NONSTANDARD': true,
        'lat': 40.46551,
        'lon': -90.68594,
        'elev': 212,
        'type': 'N/A',
        'name': 'Western Illinois University'
    },
    'FWLX': {
        'NONSTANDARD': true,
        'lat': 35.25498,
        'lon': -87.32543,
        'elev': 303,
        'type': 'N/A',
        'name': 'WLX X-Band'
    },
}

module.exports = {
    get_nexrad_location,
    NEXRAD_LOCATIONS
};
},{}],59:[function(require,module,exports){
const nexrad_station_abbreviations = {
    'WPA2': 'HWPA2',
    'ABR': 'KABR',
    'ABX': 'KABX',
    'AKQ': 'KAKQ',
    'AMA': 'KAMA',
    'AMX': 'KAMX',
    'APX': 'KAPX',
    'ARX': 'KARX',
    'ATX': 'KATX',
    'BBX': 'KBBX',
    'BGM': 'KBGM',
    'BHX': 'KBHX',
    'BIS': 'KBIS',
    'BLX': 'KBLX',
    'BMX': 'KBMX',
    'BOX': 'KBOX',
    'BRO': 'KBRO',
    'BUF': 'KBUF',
    'BYX': 'KBYX',
    'CAE': 'KCAE',
    'CBW': 'KCBW',
    'CBX': 'KCBX',
    'CCX': 'KCCX',
    'CLE': 'KCLE',
    'CLX': 'KCLX',
    'CRP': 'KCRP',
    'CXX': 'KCXX',
    'CYS': 'KCYS',
    'DAX': 'KDAX',
    'DDC': 'KDDC',
    'DFX': 'KDFX',
    'DGX': 'KDGX',
    'DIX': 'KDIX',
    'DLH': 'KDLH',
    'DMX': 'KDMX',
    'DOX': 'KDOX',
    'DTX': 'KDTX',
    'DVN': 'KDVN',
    'DYX': 'KDYX',
    'EAX': 'KEAX',
    'EMX': 'KEMX',
    'ENX': 'KENX',
    'EOX': 'KEOX',
    'EPZ': 'KEPZ',
    'ESX': 'KESX',
    'EVX': 'KEVX',
    'EWX': 'KEWX',
    'EYX': 'KEYX',
    'FCX': 'KFCX',
    'FDR': 'KFDR',
    'FDX': 'KFDX',
    'FFC': 'KFFC',
    'FSD': 'KFSD',
    'FSX': 'KFSX',
    'FTG': 'KFTG',
    'FWS': 'KFWS',
    'GGW': 'KGGW',
    'GJX': 'KGJX',
    'GLD': 'KGLD',
    'GRB': 'KGRB',
    'GRK': 'KGRK',
    'GRR': 'KGRR',
    'GSP': 'KGSP',
    'GWX': 'KGWX',
    'GYX': 'KGYX',
    'HDX': 'KHDX',
    'HGX': 'KHGX',
    'HNX': 'KHNX',
    'HPX': 'KHPX',
    'HTX': 'KHTX',
    'ICT': 'KICT',
    'ICX': 'KICX',
    'ILN': 'KILN',
    'ILX': 'KILX',
    'IND': 'KIND',
    'INX': 'KINX',
    'IWA': 'KIWA',
    'IWX': 'KIWX',
    'JAX': 'KJAX',
    'JGX': 'KJGX',
    'JKL': 'KJKL',
    'LBB': 'KLBB',
    'LCH': 'KLCH',
    'LGX': 'KLGX',
    'LIX': 'KLIX',
    'LNX': 'KLNX',
    'LOT': 'KLOT',
    'LRX': 'KLRX',
    'LSX': 'KLSX',
    'LTX': 'KLTX',
    'LVX': 'KLVX',
    'LWX': 'KLWX',
    'LZK': 'KLZK',
    'MAF': 'KMAF',
    'MAX': 'KMAX',
    'MBX': 'KMBX',
    'MHX': 'KMHX',
    'MKX': 'KMKX',
    'MLB': 'KMLB',
    'MOB': 'KMOB',
    'MPX': 'KMPX',
    'MQT': 'KMQT',
    'MRX': 'KMRX',
    'MSX': 'KMSX',
    'MTX': 'KMTX',
    'MUX': 'KMUX',
    'MVX': 'KMVX',
    'MXX': 'KMXX',
    'NKX': 'KNKX',
    'NQA': 'KNQA',
    'OAX': 'KOAX',
    'OHX': 'KOHX',
    'OKX': 'KOKX',
    'OTX': 'KOTX',
    'PAH': 'KPAH',
    'PBZ': 'KPBZ',
    'PDT': 'KPDT',
    'POE': 'KPOE',
    'PUX': 'KPUX',
    'RAX': 'KRAX',
    'RGX': 'KRGX',
    'RIW': 'KRIW',
    'RLX': 'KRLX',
    'RTX': 'KRTX',
    'SFX': 'KSFX',
    'SGF': 'KSGF',
    'SHV': 'KSHV',
    'SJT': 'KSJT',
    'SOX': 'KSOX',
    'SRX': 'KSRX',
    'TBW': 'KTBW',
    'TFX': 'KTFX',
    'TLH': 'KTLH',
    'TLX': 'KTLX',
    'TWX': 'KTWX',
    'TYX': 'KTYX',
    'UDX': 'KUDX',
    'UEX': 'KUEX',
    'VAX': 'KVAX',
    'VBX': 'KVBX',
    'VNX': 'KVNX',
    'VTX': 'KVTX',
    'VWX': 'KVWX',
    'YUX': 'KYUX',
    'ABC': 'PABC',
    'ACG': 'PACG',
    'AEC': 'PAEC',
    'AHG': 'PAHG',
    'AIH': 'PAIH',
    'AKC': 'PAKC',
    'APD': 'PAPD',
    'GUA': 'PGUA',
    'HKI': 'PHKI',
    'HKM': 'PHKM',
    'HMO': 'PHMO',
    'HWA': 'PHWA',
    'KJK': 'RKJK',
    'KSG': 'RKSG',
    'OCO2': 'ROCO2',
    'ODN': 'RODN',
    'ADW': 'TADW',
    'ATL': 'TATL',
    'BNA': 'TBNA',
    'BOS': 'TBOS',
    'BWI': 'TBWI',
    'CLT': 'TCLT',
    'CMH': 'TCMH',
    'CVG': 'TCVG',
    'DAL': 'TDAL',
    'DAY': 'TDAY',
    'DCA': 'TDCA',
    'DEN': 'TDEN',
    'DFW': 'TDFW',
    'DTW': 'TDTW',
    'EWR': 'TEWR',
    'FLL': 'TFLL',
    'HOU': 'THOU',
    'IAD': 'TIAD',
    'IAH': 'TIAH',
    'ICH': 'TICH',
    'IDS': 'TIDS',
    'JFK': 'TJFK',
    'JUA': 'TJUA',
    'LAS': 'TLAS',
    'LKA2': 'TLKA2',
    'LVE': 'TLVE',
    'MCI': 'TMCI',
    'MCO': 'TMCO',
    'MDW': 'TMDW',
    'MEM': 'TMEM',
    'MIA': 'TMIA',
    'MKE': 'TMKE',
    'MSP': 'TMSP',
    'MSY': 'TMSY',
    'OKC': 'TOKC',
    'ORD': 'TORD',
    'PBI': 'TPBI',
    'PHL': 'TPHL',
    'PHX': 'TPHX',
    'PIT': 'TPIT',
    'RDU': 'TRDU',
    'SDF': 'TSDF',
    'SJU': 'TSJU',
    'SLC': 'TSLC',
    'STL': 'TSTL',
    'TPA': 'TTPA',
    'TUL': 'TTUL'
}

module.exports = nexrad_station_abbreviations;
},{}],60:[function(require,module,exports){
const nexrad_locations = require('../libnexrad/nexrad_locations').NEXRAD_LOCATIONS;
const { get_date_diff } = require('../../core/misc/get_date_diff');
const { DateTime } = require('luxon');
const ut = require('../../core/utils');

var alreadyClicked = false;
function _position_footer() {
    if (!alreadyClicked) {
        alreadyClicked = true;
        var offset;
        if (require('../../core/misc/detect_mobile_browser')) {
            offset = $(window).height() * (5 / 100);
        } else {
            offset = 0;
        }
        // show the parent div for the PSM
        $('#productMapFooter').show();
        //$('#productMapFooter').height('30px');
        var productFooterBottomMargin = parseInt($('#map').css('bottom'));
        var productFooterHeight = parseInt($('#productMapFooter').height());
        $('#productMapFooter').css('bottom', productFooterBottomMargin - offset);
        ut.setMapMargin('bottom', productFooterBottomMargin + productFooterHeight);
    }
}

function _display_time_diff() {
    const date_diff = get_date_diff(this.get_date(), 'radar_plot');

    $('#top-right').removeClass();
    $('#top-right').addClass(date_diff.class);
    $('#top-right').html(date_diff.formatted);
}

/**
 * This function is called using ".apply()", so "this" is a reference to an instance of the L3Factory class.
 */
function display_file_info() {
    _position_footer();

    // make sure the file upload stuff is hidden
    $('#fileUploadSpan').hide();
    $('#radarInfoSpan').show();

    // set some DOM content
    $('#radarStation').html(this.station);
    var radar_name = nexrad_locations[this.station]?.name;
    if (radar_name == undefined) { radar_name = 'Unknown'; }
    $('#radarLocation').html(radar_name);

    // set the date box content
    var fileDateObj;
    if (this.nexrad_level == 2) {
        fileDateObj = this.get_date(this.elevation_number);
    } else {
        fileDateObj = this.get_date();
    }
    var formattedDateObj = DateTime.fromJSDate(fileDateObj).setZone(ut.userTimeZone);
    var formattedRadarDate = formattedDateObj.toFormat('L/d/yyyy');
    var formattedRadarTime = formattedDateObj.toFormat('h:mm a ZZZZ');
    $('#radarDateTime').show().html(`${formattedRadarDate}<br>${formattedRadarTime}`);
    // display the time difference
    _display_time_diff.apply(this);

    // show the main box containing station name, vcp, etc.
    $('#radarInfoSpan').show();

    // show the text to open the product selection menu
    $('#productsDropdownTrigger').show();

    // display the VCP
    var radar_vcp = ut.vcpObj[this.vcp];
    if (radar_vcp == undefined) { radar_vcp = 'Unknown'; }
    $('#radarVCP').html(`VCP: ${this.vcp} (${radar_vcp})`);

    // display the elevation angle
    $('#extraProductInfo').show().html(`Elevation: ${this.elevation_angle.toFixed(1)}°`);

    if (window.atticData.from_file_upload && this.nexrad_level == 3) {
        $('#productsDropdownTriggerText').hide();
    } else {
        $('#productsDropdownTriggerText').show();
    }

    // function showTimeDiff() { getTimeDiff(fileDateObj) }
    // if (window.countInterval && !$('#dataDiv').data('fromFileUpload')) {
    //     clearInterval(window.countInterval)
    // }
    // showTimeDiff();
    // // update the time difference every 10 seconds
    // if (!$('#dataDiv').data('fromFileUpload')) { window.countInterval = setInterval(showTimeDiff, 10000) }
    // if ($('#dataDiv').data('fromFileUpload')) {
    //     document.getElementById('top-right').innerHTML += ' ago';
    //     $('#top-right').addClass('uploaded-file');
    //     // shrink the map header because the file upload box is no longer there
    //     $('#radarHeader').css('height', '-=25px');
    //     $('.progressBar').css('top', '-=25px');
    //     ut.setMapMargin('top', '-=25px');
    //     $('#productsSelectionMenu').html('<b>No product selections avaliable for a Level 3 file.</b>')
    // }
}

module.exports = display_file_info;
},{"../../core/misc/detect_mobile_browser":27,"../../core/misc/get_date_diff":28,"../../core/utils":30,"../libnexrad/nexrad_locations":58,"luxon":111}],61:[function(require,module,exports){
/**
 * This implementation of a region based doppler dealiasing algorithm
 * was ported almost exactly from pyart's "dealias_region_based" function.
 * I used a specific commit as a reference point for this work, because
 * it was right when "scipy.sparse.coo_matrix" had stopped being used
 * by the algorithm.
 * 
 * You can find that commit here:
 * https://github.com/ARM-DOE/pyart/blob/41b34052dc36becd1783bb7dfb87c39570cab707/pyart/correct/region_dealias.py
 * 
 * All of this is to say that I only truly wrote a couple of lines of this code.
 * I simply ported pyart's dealiasing function from Python to JavaScript, with
 * a lot of help from ChatGPT and Google.
 */

const np = {
    // https://stackoverflow.com/a/40475362/18758797
    linspace(startValue, stopValue, cardinality) {
        var arr = [];
        var step = (stopValue - startValue) / (cardinality - 1);
        for (var i = 0; i < cardinality; i++) {
            arr.push(startValue + (step * i));
        }
        return arr;
    },
    shape(arr) {
        var numRows = arr.length;
        var numCols = arr[0].length;
        if (numRows == undefined) { numRows = 1 }
        if (numCols == undefined) { numCols = 1 }
        return [numRows, numCols];
    },
    zeros(shape) {
        if (shape.length === 0) {
            return 0;
        } else {
            const arr = new Array(shape[0]);
            for (let i = 0; i < shape[0]; i++) {
                arr[i] = this.zeros(shape.slice(1));
            }
            return arr;
        }
    },
    ones_like(arr) {
        return new Array(arr.length).fill(1);
    },
    bincount(arr) {
        // Initialize the result array with zeros up to the maximum value in arr
        let counts = new Array(max(arr) + 1).fill(0);
        // Count the occurrences of each value in arr
        for (let x of arr) {
            counts[x] += 1;
        }
        return counts;
    },
    lexsort(arr1, arr2) {
        const indices = Array.from({ length: arr1.length }, (_, i) => i);
        indices.sort((a, b) => {
            let cmp = arr1[a] - arr1[b];
            if (cmp !== 0) {
                return cmp;
            }
            return arr2[a] - arr2[b];
        });
        return indices;
    },
    nonzero(arr) {
        return arr.reduce((acc, cur, i) => {
            if (cur) {
                acc.push(i);
            }
            return acc;
        }, []);
    },
    argmax(arr) {
        let maxIndex = 0;
        for (let i = 1; i < arr.length; i++) {
            if (arr[i] > arr[maxIndex]) {
                maxIndex = i;
            }
        }
        return maxIndex;
    },
    add: {
        reduceat(arr, indices) {
            var result = [];
            for (var i = 0; i < indices.length; i++) {
                // if (indices[i + 1] != undefined) {
                    var curIndex = indices[i];
                    var nextIndex = indices[i + 1];
                    if (curIndex > nextIndex) {
                        result.push(curIndex);
                    } else {
                        var sliced = arr.slice(curIndex, nextIndex);
                        var added = sliced.reduce((a, b) => a + b, 0);
                        result.push(added);
                    }
                // }
            }
            return result;
        }
    }
}

function label_image(arr) {
    // create a 2D array to store the labels of each pixel
    let labels = new Array(arr.length).fill(0).map(() => new Array(arr[0].length).fill(0));
    // initialize the label counter
    let label_count = 1;

    // loop over each pixel in the array
    for (let i = 0; i < arr.length; i++) {
        for (let j = 0; j < arr[0].length; j++) {
            // if the pixel is true and has not been labeled yet
            if (arr[i][j] && labels[i][j] == 0) {
                // perform a breadth-first search to label the connected component
                let queue = [[i, j]];
                while (queue.length > 0) {
                    // pop the next pixel off the queue
                    let [row, col] = queue.shift();
                    // label the pixel
                    labels[row][col] = label_count;
                    // add neighboring pixels to the queue
                    for (let [dx, dy] of [[1, 0], [-1, 0], [0, 1], [0, -1]]) {
                        let x = row + dx;
                        let y = col + dy;
                        if (x >= 0 && x < arr.length && y >= 0 && y < arr[0].length && arr[x][y] && labels[x][y] == 0) {
                            queue.push([x, y]);
                            // mark the neighbor as labeled to prevent revisiting it
                            labels[x][y] = -1;
                        }
                    }
                }
                // increment the label counter
                label_count += 1;
            }
        }
    }

    // replace all -1 labels with 0
    for (let i = 0; i < labels.length; i++) {
        for (let j = 0; j < labels[0].length; j++) {
            if (labels[i][j] == -1) {
                labels[i][j] = 0;
            }
        }
    }

    // return the labeled array and the number of regions
    return [labels, label_count - 1];
}

function _jumpToMapPosition() {
    // lng: -97.51734430176083, lat: 35.316678641320166, zoom: 11 // KTLX
    // lng: lng: -97.35454576227136, lat: 27.812346235337856, zoom: 6.5 // KCRP
    // map.on('move', (e) => { console.log(map.getCenter()) })
    // map.on('move', (e) => { console.log(map.getZoom()) })
    map.jumpTo({center: [-97.51734430176083, 35.316678641320166], zoom: 11});
}

function copy(arr) {
    return JSON.parse(JSON.stringify(arr));
}

function remove(arr, value) {
    const index = arr.indexOf(value);
    if (index !== -1) {
        arr.splice(index, 1);
    }
    return arr;
}

function min(arr) { return Math.min(...[...new Set(arr)]) }
function max(arr) { return Math.max(...[...new Set(arr)]) }

function _mask_values(velocities) {
    // mask values
    for (var i in velocities) {
        for (var n in velocities[i]) {
            if (velocities[i][n] == null) {
                velocities[i][n] = -64.5;
            }
        }
    }
    return velocities;
}

function _find_sweep_interval_splits(nyquist, interval_splits, velocities) {
    /* Return the interval limits for a given sweep. */
    // The Nyquist interval is split into interval_splits  equal sized areas.
    // If velocities outside the Nyquist are present the number and
    // limits of the interval splits must be adjusted so that theses
    // velocities are included in one of the splits.

    var add_start = 0;
    var add_end = 0;
    var interval = (2 * nyquist) / (interval_splits);
    // no change from default if all gates filtered
    if (velocities.length != 0) {
        var max_vel = max(velocities.flat());
        var min_vel = min(velocities.flat());
        if (max_vel > nyquist || min_vel < -nyquist) {
            console.warn('Velocities outside of the Nyquist interval found in sweep.');
            // additional intervals must be added to capture the velocities
            // outside the nyquist limits
            add_start = parseInt(Math.ceil((max_vel - nyquist) / (interval)));
            add_end = parseInt(Math.ceil(-(min_vel + nyquist) / (interval)));
        }
    }

    var start = -nyquist - add_start * interval;
    var end = nyquist + add_end * interval;
    var num = interval_splits + 1 + add_start + add_end;
    return np.linspace(start, end, num);
}

/**
 * This function dealiases a 2D array of
 * doppler velocity values using a region-based algorithm.
 * 
 * @param {Array} velocities A 2D array containing all of the velocity values.
 * @param {Number} nyquist_vel A number representing the nyquist velocity.
 * 
 * @returns {Array} The corrected 2D array. It is the same as the original,
 * except the aliased regions are corrected.
 */
function dealias(velocities, nyquist_vel) {
    var interval_splits = 3;
    // scan number "9" (pyart "8") of the radar file "KBMX20210325_222143_V06"
    // only dealiases correctly with a value of 99 instead of 100
    var skip_between_rays = 99;
    var skip_along_ray = 100;
    var centered = true;
    var rays_wrap_around = true;

    for (var sweep_slice = 1; sweep_slice < 2; sweep_slice++) {
        // extract sweep data
        var sdata = copy(velocities); // copy of data for processing
        sdata = _mask_values(sdata);
        var scorr = copy(velocities); // copy of data for output

        var nyquist_interval = 2 * nyquist_vel;
        var interval_limits = _find_sweep_interval_splits(nyquist_vel, interval_splits, sdata);
        // skip sweep if all gates are masked or only a single region
        if (nfeatures < 2) {
            continue;
        }

        var [labels, nfeatures] = _find_regions(sdata, interval_limits);
        var bincount = np.bincount(labels.flat());
        var num_masked_gates = bincount[0];
        var region_sizes = bincount.slice(1);

        var [indices, edge_count, velos] = _edge_sum_and_count(
            labels, num_masked_gates, sdata, rays_wrap_around,
            skip_between_rays, skip_along_ray);

        // no unfolding required if no edges exist between regions
        if (edge_count.length == 0) {
            continue;
        }

        // find the number of folds in the regions
        var region_tracker = new _RegionTracker(region_sizes);
        var edge_tracker = new _EdgeTracker(indices, edge_count, velos, nyquist_interval, nfeatures + 1);
        while (true) {
            if (_combine_regions(region_tracker, edge_tracker)) {
                break;
            }
        }

        // center sweep if requested, determine a global sweep unfold number
        // so that the average number of gate folds is zero.
        if (centered) {
            var gates_dealiased = region_sizes.reduce((a, b) => a + b, 0);
            var total_folds = 0;
            for (var i = 0; i < region_sizes.length; i++) {
                total_folds += region_sizes[i] * region_tracker.unwrap_number[i + 1];
            }
            var sweep_offset = Math.round(total_folds / gates_dealiased);
            if (sweep_offset !== 0) {
                for (var i = 0; i < region_tracker.unwrap_number.length; i++) {
                    region_tracker.unwrap_number[i] -= sweep_offset;
                }
            }
        }

        // dealias the data using the fold numbers
        // start from label 1 to skip masked region
        for (var i = 1; i < nfeatures + 1; i++) {
            var nwrap = region_tracker.unwrap_number[i];
            if (nwrap != 0) {
                // scorr[labels == i] += nwrap * nyquist_interval
                for (let r = 0; r < labels.length; r++) {
                    for (let c = 0; c < labels[0].length; c++) {
                        if (labels[r][c] === i) {
                            scorr[r][c] += nwrap * nyquist_interval;
                        }
                    }
                }
            }
        }
    }

    // _jumpToMapPosition();
    // l2rad = _mergeCorrectedVelocities(scorr, l2rad, scanNumber);

    return scorr;
}

function _combine_regions(region_tracker, edge_tracker) {
    /* Returns True when done. */
    // Edge parameters from edge with largest weight
    var [status, extra] = edge_tracker.pop_edge();
    if (status) {
        return true;
    }
    var [node1, node2, weight, diff, edge_number] = extra;
    var rdiff = parseInt(Math.round(diff));

    // node sizes of nodes to be merged
    var node1_size = region_tracker.get_node_size(node1);
    var node2_size = region_tracker.get_node_size(node2);

    var base_node;
    var merge_node;
    // determine which nodes should be merged
    if (node1_size > node2_size) {
        [base_node, merge_node] = [node1, node2];
    }
    else {
        [base_node, merge_node] = [node2, node1]
        rdiff = -rdiff;
    }

    // unwrap merge_node
    if (rdiff != 0) {
        region_tracker.unwrap_node(merge_node, rdiff);
        edge_tracker.unwrap_node(merge_node, rdiff);
    }

    // merge nodes
    region_tracker.merge_nodes(base_node, merge_node);
    edge_tracker.merge_nodes(base_node, merge_node, edge_number);

    return false;
}

class _EdgeTracker {
    constructor(indices, edge_count, velocities, nyquist_interval, nnodes) {
        /* initialize */

        var nedges = parseInt(indices[0].length / 2);

        // node number and different in sum for each edge
        this.node_alpha = new Array(nedges).fill(0);
        this.node_beta = new Array(nedges).fill(0);
        this.sum_diff = new Array(nedges).fill(0);

        // number of connections between the regions
        this.weight = new Array(nedges).fill(0);

        // fast finding
        this._common_finder = new Array(nnodes).fill(false);
        this._common_index = new Array(nnodes).fill(0);
        this._last_base_node = -1;

        // array of linked lists pointing to each node
        this.edges_in_node = new Array(nnodes).fill(0);
        for (var i = 0; i < nnodes; i++) {
            this.edges_in_node[i] = [];
        }

        // fill out data from the provides indicies, edge counts and velocities
        var edge = 0;
        var [idx1, idx2] = indices;
        var [vel1, vel2] = velocities;

        for (let k = 0; k < idx1.length; k++) {
            var i = idx1[k];
            var j = idx2[k];
            var count = edge_count[k];
            var vel = vel1[k];
            var nvel = vel2[k];

            if (i < j) {
                continue;
            }
            this.node_alpha[edge] = i;
            this.node_beta[edge] = j;
            this.sum_diff[edge] = ((vel - nvel) / nyquist_interval);
            this.weight[edge] = count;
            this.edges_in_node[i].push(edge);
            this.edges_in_node[j].push(edge);

            edge += 1;
        }

        // list which orders edges according to their weight, highest first
        this.priority_queue = [];
    }
    merge_nodes(base_node, merge_node, foo_edge) {
        /* Merge nodes. */

        // remove edge between base and merge nodes
        this.weight[foo_edge] = -999;
        this.edges_in_node[merge_node] = remove(this.edges_in_node[merge_node], foo_edge);
        this.edges_in_node[base_node] = remove(this.edges_in_node[base_node], foo_edge);
        this._common_finder[merge_node] = false;

        // find all the edges in the two nodes
        var edges_in_merge = [...this.edges_in_node[merge_node]];

        // loop over base_node edges if last base_node was different
        if (this._last_base_node != base_node) {
            this._common_finder.fill(false);
            var edges_in_base = [...this.edges_in_node[base_node]];
            for (var edge_num in edges_in_base) {
                edge_num = edges_in_base[edge_num];
                // reverse edge if needed so node_alpha is base_node
                if (this.node_beta[edge_num] == base_node) {
                    this._reverse_edge_direction(edge_num);
                }
                // console.assert(this.node_alpha[edge_num] == base_node);

                // find all neighboring nodes to base_node
                var neighbor = this.node_beta[edge_num];
                this._common_finder[neighbor] = true;
                this._common_index[neighbor] = edge_num;
            }
        }

        // loop over edge nodes
        for (var edge_num in edges_in_merge) {
            edge_num = edges_in_merge[edge_num];
            // reverse edge so that node alpha is the merge_node
            if (this.node_beta[edge_num] == merge_node) {
                this._reverse_edge_direction(edge_num);
            }
            // console.assert(this.node_alpha[edge_num] == merge_node);

            // update all the edges to point to the base node
            this.node_alpha[edge_num] = base_node;

            // if base_node also has an edge with the neighbor combine them
            var neighbor = this.node_beta[edge_num];
            if (this._common_finder[neighbor]) {
                var base_edge_num = this._common_index[neighbor];
                this._combine_edges(base_edge_num, edge_num, merge_node, neighbor);
            } else {
                // if not fill in _common_ arrays.
                this._common_finder[neighbor] = true;
                this._common_index[neighbor] = edge_num;
            }
        }

        // move all edges from merge_node to base_node
        var edges = this.edges_in_node[merge_node];
        this.edges_in_node[base_node].push(...edges);
        this.edges_in_node[merge_node] = [];
        this._last_base_node = parseInt(base_node);
        return;
    }
    _combine_edges(base_edge, merge_edge, merge_node, neighbor_node) {
        /* Combine edges into a single edge. */
        // Merging nodes MUST be set to alpha prior to calling this function

        // combine edge weights
        this.weight[base_edge] += this.weight[merge_edge];
        this.weight[merge_edge] = -999;

        // combine sums
        this.sum_diff[base_edge] += this.sum_diff[merge_edge];

        // remove merge_edge from both node lists
        this.edges_in_node[merge_node] = remove(this.edges_in_node[merge_node], merge_edge);
        this.edges_in_node[neighbor_node] = remove(this.edges_in_node[neighbor_node], merge_edge);
    }
    _reverse_edge_direction(edge) {
        /* Reverse an edges direction, change alpha and beta. */

        // swap nodes
        var old_alpha = parseInt(this.node_alpha[edge]);
        var old_beta = parseInt(this.node_beta[edge]);
        this.node_alpha[edge] = old_beta;
        this.node_beta[edge] = old_alpha;
        // swap sums
        this.sum_diff[edge] = -1 * this.sum_diff[edge];
        return;
    }
    unwrap_node(node, nwrap) {
        /* Unwrap a node. */

        if (nwrap == 0) {
            return;
        }
        // add weight * nwrap to each edge in node
        for (var edge in this.edges_in_node[node]) {
            edge = this.edges_in_node[node][edge];
            var weight = this.weight[edge];
            if (node == this.node_alpha[edge]) {
                this.sum_diff[edge] += weight * nwrap;
            }
            else {
                // console.assert(this.node_beta[edge] == node);
                this.sum_diff[edge] += -weight * nwrap;
            }
        }
        return;
    }
    pop_edge() {
        /* Pop edge with largest weight.  Return node numbers and diff */

        var edge_num = np.argmax(this.weight);
        var node1 = this.node_alpha[edge_num];
        var node2 = this.node_beta[edge_num];
        var weight = this.weight[edge_num];
        var diff = this.sum_diff[edge_num] / (parseFloat(weight));

        if (weight < 0) {
            return [true, null];
        }
        return [false, [node1, node2, weight, diff, edge_num]];
    }
}

class _RegionTracker {
    /* Tracks the location of radar volume regions contained in each node
    * as the network is reduced. */

    constructor(region_sizes) {
        /* initialize. */

        // number of gates in each node
        var nregions = region_sizes.length + 1;
        this.node_size = new Array(nregions).fill(0);
        this.node_size.fill(0, 1, nregions);
        this.node_size.splice(1, region_sizes.length, ...region_sizes);

        // array of lists containing the regions in each node
        this.regions_in_node = new Array(nregions).fill(0);
        for (let i = 0; i < nregions; i++) {
            this.regions_in_node[i] = [i];
        }

        // number of unwrappings to apply to dealias each region
        this.unwrap_number = new Array(nregions).fill(0);
    }
    merge_nodes(node_a, node_b) {
        /* Merge node b into node a. */

        // move all regions from node_b to node_a
        var regions_to_merge = this.regions_in_node[node_b];
        this.regions_in_node[node_a].push(...regions_to_merge);
        this.regions_in_node[node_b] = [];

        // update node sizes
        this.node_size[node_a] += this.node_size[node_b];
        this.node_size[node_b] = 0;
        return;
    }
    unwrap_node(node, nwrap) {
        /* Unwrap all gates contained a node. */

        if (nwrap == 0) {
            return;
        }
        // for each region in node add nwrap
        var regions_to_unwrap = this.regions_in_node[node];
        for (var i = 0; i < regions_to_unwrap.length; i++) {
            this.unwrap_number[regions_to_unwrap[i]] += nwrap;
        }
        return;
    }

    get_node_size(node) {
        /* Return the number of gates in a node. */
        return this.node_size[node];
    }
}

function _edge_sum_and_count(labels, num_masked_gates, data, rays_wrap_around, max_gap_x, max_gap_y) {
    var lShape = np.shape(labels);
    var total_nodes = lShape[0] * lShape[1] - num_masked_gates;
    if (rays_wrap_around) {
        total_nodes += lShape[0] * 2;
    }

    var [indices, velocities] = _fast_edge_finder(labels, data, rays_wrap_around, max_gap_x, max_gap_y, total_nodes);
    var [index1, index2] = indices;
    var [vel1, vel2] = velocities;
    count = np.ones_like(vel1);

    // return early if not edges were found
    if (vel1.length == 0) {
        return [[[], []], [], [[], []]];
    }

    // find the unique edges, procedure based on method in
    // scipy.sparse.coo_matrix.sum_duplicates
    // except we have three data arrays, vel1, vel2, and count
    var order = np.lexsort(index1, index2);
    // console.log(np.lexsort([9,4,0,4,0,2,1], [1,5,1,4,3,4,4]))
    index1 = index1.filter((_, i) => order[i]).map((_, i) => index1[order[i]]);
    index2 = index2.filter((_, i) => order[i]).map((_, i) => index2[order[i]]);
    vel1 = vel1.filter((_, i) => order[i]).map((_, i) => vel1[order[i]]);
    vel2 = vel2.filter((_, i) => order[i]).map((_, i) => vel2[order[i]]);
    count = count.filter((_, i) => order[i]).map((_, i) => count[order[i]]);

    var unique_mask = new Array(index1.length - 1);
    for (let i = 0; i < unique_mask.length; i++) {
        unique_mask[i] = (index1[i + 1] !== index1[i]) || (index2[i + 1] !== index2[i]);
    }
    unique_mask.unshift(true);
    index1 = index1.filter((_, i) => unique_mask[i]);
    index2 = index2.filter((_, i) => unique_mask[i]);

    var unique_inds = np.nonzero(unique_mask);
    vel1 = np.add.reduceat(vel1, unique_inds);
    vel2 = np.add.reduceat(vel2, unique_inds);
    count = np.add.reduceat(count, unique_inds);
    // console.log(np.add.reduceat([0, 1, 2, 3, 4, 5, 6, 7], [0, 4, 1, 5, 2, 6, 3, 7]))
    // console.log(np.add.reduceat([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1,3,4,5]))

    return [[index1, index2], count, [vel1, vel2]];
}

function _fast_edge_finder(labels, data, rays_wrap_around, max_gap_x, max_gap_y, total_nodes) {
    var lShape = np.shape(labels);
    var collector = new _EdgeCollector(total_nodes);
    var right = lShape[0] - 1;
    var bottom = lShape[1] - 1;

    for (var x_index = 0; x_index < lShape[0]; x_index++) {
        for (var y_index = 0; y_index < lShape[1]; y_index++) {
            var label = labels[x_index][y_index];
            if (label == 0) {
                continue;
            }

            var vel = data[x_index][y_index];

            // left
            var x_check = x_index - 1;
            if (x_check == -1 && rays_wrap_around) {
                x_check = right; // wrap around
            }
            if (x_check != -1) {
                var neighbor = labels[x_check][y_index];

                // if the left side gate is masked, keep looking to the left
                // until we find a valid gate or reach the maximum gap size
                if (neighbor == 0) {
                    for (var i = 0; i < max_gap_x; i++) {
                        x_check -= 1;
                        if (x_check == -1) {
                            if (rays_wrap_around) {
                                x_check = right;
                            } else {
                                break;
                            }
                        }
                        neighbor = labels[x_check][y_index];
                        if (neighbor != 0) {
                            break;
                        }
                    }
                }
                // add the edge to the collection (if valid)
                var nvel = data[x_check][y_index];
                collector.add_edge(label, neighbor, vel, nvel);
            }

            // right
            var x_check = x_index + 1;
            if (x_check == right + 1 && rays_wrap_around) {
                x_check = 0; // wrap around
            }
            if (x_check != right + 1) {
                var neighbor = labels[x_check][y_index];

                // if the right side gate is masked, keep looking to the left
                // until we find a valid gate or reach the maximum gap size
                if (neighbor == 0) {
                    for (var i = 0; i < max_gap_x; i++) {
                        x_check += 1;
                        if (x_check == right + 1) {
                            if (rays_wrap_around) {
                                x_check = 0;
                            } else {
                                break;
                            }
                        }
                        neighbor = labels[x_check][y_index];
                        if (neighbor != 0) {
                            break;
                        }
                    }
                }
                // add the edge to the collection (if valid)
                var nvel = data[x_check][y_index];
                collector.add_edge(label, neighbor, vel, nvel);
            }

            // top
            var y_check = y_index - 1
            if (y_check != -1) {
                var neighbor = labels[x_index][y_check];

                // if the top side gate is masked, keep looking up
                // until we find a valid gate or reach the maximum gap size
                if (neighbor == 0) {
                    for (var i = 0; i < max_gap_y; i++) {
                        y_check -= 1;
                        if (y_check == -1) {
                            break;
                        }
                        neighbor = labels[x_index][y_check];
                        if (neighbor != 0) {
                            break;
                        }
                    }
                }
                // add the edge to the collection (if valid)
                var nvel = data[x_index][y_check];
                collector.add_edge(label, neighbor, vel, nvel);
            }

            // bottom
            var y_check = y_index + 1
            if (y_check != bottom + 1) {
                var neighbor = labels[x_index][y_check];

                // if the top side gate is masked, keep looking up
                // until we find a valid gate or reach the maximum gap size
                if (neighbor == 0) {
                    for (var i = 0; i < max_gap_y; i++) {
                        y_check += 1;
                        if (y_check == bottom + 1) {
                            break;
                        }
                        neighbor = labels[x_index][y_check];
                        if (neighbor != 0) {
                            break;
                        }
                    }
                }
                // add the edge to the collection (if valid)
                var nvel = data[x_index][y_check];
                collector.add_edge(label, neighbor, vel, nvel);
            }
        }
    }

    var [indices, velocities] = collector.get_indices_and_velocities();
    return [indices, velocities];
}

class _EdgeCollector {
    /* Class for collecting edges, used by _edge_sum_and_count function. */
    constructor(total_nodes) {
        this.l_index = new Array(total_nodes * 4);
        this.n_index = new Array(total_nodes * 4);
        this.l_velo = new Array(total_nodes * 4);
        this.n_velo = new Array(total_nodes * 4);

        this.l_data = this.l_index;
        this.n_data = this.n_index;
        this.lv_data = this.l_velo;
        this.nv_data = this.n_velo;

        this.idx = 0;
    }

    add_edge(label, neighbor, vel, nvel) {
        /* Add an edge. */
        if (neighbor === label || neighbor === 0) {
            // Do not add edges between the same region (circular edges)
            // or edges to masked gates (indicated by a label of 0).
            return 0;
        }
        this.l_data[this.idx] = label;
        this.n_data[this.idx] = neighbor;
        this.lv_data[this.idx] = vel;
        this.nv_data[this.idx] = nvel;
        this.idx += 1;
        return 1;
    }

    get_indices_and_velocities() {
        /* Return the edge indices and velocities. */
        var indices = [this.l_index.slice(0, this.idx), this.n_index.slice(0, this.idx)];
        var velocities = [this.l_velo.slice(0, this.idx), this.n_velo.slice(0, this.idx)];
        return [indices, velocities];
    }
}

function _find_regions(vel, limits) {
    var label = np.zeros(np.shape(vel));
    var nfeatures = 0;

    for (let i = 0; i < limits.length - 1; i++) {
        const lmin = limits[i];
        const lmax = limits[i + 1];

        // find connected regions within the limits
        var rows = vel.length;
        var cols = vel[0].length;
        var inp = new Array(rows);
        for (let i = 0; i < rows; i++) {
            inp[i] = new Array(cols);
            for (let j = 0; j < cols; j++) {
                inp[i][j] = (lmin <= vel[i][j]) && (vel[i][j] < lmax);
            }
        }

        var [limit_label, limit_nfeatures] = label_image(inp);

        var llshape = np.shape(limit_label);
        for (let i = 0; i < llshape[0]; i++) {
            for (let j = 0; j < llshape[1]; j++) {
                if (limit_label[i][j] !== 0) {
                    limit_label[i][j] += nfeatures;
                }
            }
        }

        for (let i = 0; i < label.length; i++) {
            for (let j = 0; j < label[i].length; j++) {
                label[i][j] += limit_label[i][j];
            }
        }

        nfeatures += limit_nfeatures;
    }

    return [label, nfeatures];
}

module.exports = dealias;
},{}],62:[function(require,module,exports){
function _generateBtnTemplate(angle, number) {
    return `<div class="col">
        <div class="l2ElevationBtn" value="${angle}" number="${number}">${angle.toFixed(1)}°</div>
    </div>`;
}
function _generateRow(btnsHTML) {
    return `<div class="row gx-1" style="margin-top: 0.25rem">${btnsHTML}</div>`;
}

const dealiasBtnSelector = ':not(#dealiasBtn)';
const dbs = dealiasBtnSelector; // just for shorthand

function _generateElevationProductLookup(lEAP) {
    // object to lookup a scan number from elevation angle and product
    var elevationProductLookup = {};
    // array to store elevations already "seen" in search for duplicates
    var seenElevs = [];
    // store all duplicate elevation angles
    var doubleElevs = [];
    for (var i in lEAP) {
        var angle = lEAP[i][0];
        // store the angle if it's a duplicate
        if (seenElevs.includes(angle)) { doubleElevs.push(angle) } else { seenElevs.push(angle) }

        // initialize the angle sub-object in our lookup table, if it doesn't exist
        if (!elevationProductLookup.hasOwnProperty(angle)) {
            elevationProductLookup[angle] = {};
        }
        var productsInElev = lEAP[i][2];
        var scanNumber = lEAP[i][1];
        // loop through all of the products contained in the current elevation angle
        for (var n in productsInElev) {
            // initialize the product sub-array in the angle sub-object of our lookup table, if it doesn't exist
            if (!elevationProductLookup[angle].hasOwnProperty(productsInElev[n])) {
                elevationProductLookup[angle][productsInElev[n]] = [];
            }
            // push the current scan number to the angle->product array in the lookup table
            elevationProductLookup[angle][productsInElev[n]].push(scanNumber);
        }
    }
    return elevationProductLookup;
}

function _enable_correct_buttons(lEAP) {
    // make sure the correct product selection rows are available
    $('.psmRowDisabled').removeClass('psmRowDisabled'); // reset all of the rows
    const moments = lEAP[window.atticData.currentScanNumber - 1][2]; // scan number indices start at 1, lEAP indices start at 0
    ['REF', 'VEL', 'RHO', 'PHI', 'ZDR', 'SW'].forEach(prop => { // loop through all possible moments
        const formatted_moment = `l2-${prop.toLowerCase()}`; // convert to the psmRow's abbreviation convention
        if (!moments.includes(prop)) { // if the current elevation doesn't contain the moment
            $(`.l2prodSel[value="${formatted_moment}"]`).addClass('psmRowDisabled'); // disable the corresponding psmRow
        }
    })
    // make sure the correct elevation buttons are available
    $('.l2ElevationBtnDisabled').removeClass('l2ElevationBtnDisabled'); // reset all of the buttons
    for (var i = 0; i < lEAP.length; i++) { // loop through the lEAP
        const scan_number = i + 1; // scan number indices start at 1, lEAP indices start at 0
        const moments = lEAP[i][2]; // all the moments in the elevation number
        if (!moments.includes(window.atticData.currentProduct)) { // if the elevation number does not contain the current product
            $(`.l2ElevationBtn[number="${scan_number}"]`).addClass('l2ElevationBtnDisabled'); // disable the corresponding elevation button
        }
    }
}

function initEventListeners(L2Factory, lEAP, elevationProductLookup) {
    // we start with reflectivity
    window.atticData.currentProduct = 'REF';
    // we start at 1
    window.atticData.currentScanNumber = 1;
    // sorts all the full elevations from least to greatest, and picks the lowest one
    window.atticData.fullAngle = Object.keys(elevationProductLookup).map(n => parseFloat(n)).sort(function(a, b) { return a - b })[0];
    // turn green the button that references the starting elevation
    $(`.l2ElevationBtn${dbs}[number="${window.atticData.currentScanNumber}"]`).addClass('l2ElevationBtnSelected');

    // make sure the correct buttons are available
    _enable_correct_buttons(lEAP);

    $(`.l2ElevationBtn${dbs}`).click(function() {
        // turn all green buttons back to normal
        $(`.l2ElevationBtnSelected${dbs}`).removeClass('l2ElevationBtnSelected');
        // turn the current button green
        $(this).addClass('l2ElevationBtnSelected');

        var product = window.atticData.currentProduct; // e.g. 'VEL';

        var fullAngle = $(this).attr('value'); // e.g. 0.4833984375
        window.atticData.fullAngle = fullAngle; // store it globally

        var scanNumber = parseInt($(this).attr('number')); // e.g. 7
        window.atticData.currentScanNumber = scanNumber; // store it globally

        // make sure the correct buttons are available
        _enable_correct_buttons(lEAP);

        L2Factory.plot(product, scanNumber); // plot the current product and selected elevation
    })

    function _psm_click() {
        $('#productsDropdownTriggerText').text($(this).text()); // e.g. "Velocity"
        var product = $(this).attr('value'); // e.g. l2-vel
        product = product.replace('l2-', '').toUpperCase(); // l2-vel --> VEL
        window.atticData.currentProduct = product; // store it globally

        var scanNumber = window.atticData.currentScanNumber; // e.g. 7

        // make sure the correct buttons are available
        _enable_correct_buttons(lEAP);

        if (product == 'VEL') {
            $('#completeDealiasBtnContainer').show();
        } else {
            $('#completeDealiasBtnContainer').hide();
        }

        L2Factory.plot(product, scanNumber); // plot the selected product and the current elevation
    }
    $('.psmRow.l2prodSel').off('click'); // disable all prior listeners
    $('.psmRow.l2prodSel').click(_psm_click);

    $('#dealiasBtn').click(function() {
        if ($(this).hasClass('dealiasBtnDeSelected')) {
            // we're turning dealias mode ON
            window.atticData.should_plot_dealiased = true;
            $(this).removeClass('dealiasBtnDeSelected').addClass('dealiasBtnSelected');
            $(this).find('i').removeClass('fa-xmark').addClass('fa-check');
        } else if ($(this).hasClass('dealiasBtnSelected')) {
            // we're turning dealias mode OFF
            window.atticData.should_plot_dealiased = false;
            $(this).removeClass('dealiasBtnSelected').addClass('dealiasBtnDeSelected');
            $(this).find('i').removeClass('fa-check').addClass('fa-xmark');
        }

        if (window.atticData.currentProduct == 'VEL') {
            L2Factory.plot(window.atticData.currentProduct, window.atticData.currentScanNumber);
        }
    })
}

function load_elevation_menu(lEAP) {
    var elevationProductLookup = _generateElevationProductLookup(lEAP);
    console.log(lEAP);
    console.log(elevationProductLookup);

    var iters = 1; // track how many buttons have been added to the current row
    var completeHTML = ''; // string to store the complete "buttons div"
    var btnsInThisRow = ''; // string to store buttons in the current row - gets reset every new row
    for (var i in lEAP) {
        var elevationAngle = lEAP[i][0]; // elevation angle in degrees, e.g. 0.4833984375
        var elevationNumber = lEAP[i][1]; // the iteration from the base sweep, e.g. 7
        var elevationProducts = lEAP[i][2]; // array listing all of the products in the elevation, e.g. ['REF', 'VEL', 'SW ']
        var elevationWFT = lEAP[i][3]; // waveform type

        var btnHTML = _generateBtnTemplate(elevationAngle, elevationNumber); // generate the single button template for the current angle
        btnsInThisRow += btnHTML; // add the button to the current row
        if (iters % 3 == 0 && iters != 1) { // every three buttons, but not the first iteration
            completeHTML += _generateRow(btnsInThisRow); // generate the row from the buttons and add to the final HTML string
            btnsInThisRow = ''; // reset the string to hold the row's buttons
        }
        iters++; // increase the counter
    }
    if (btnsInThisRow != '') {
        completeHTML += _generateRow(btnsInThisRow); // if there are leftover buttons, generate a row with the remaining buttons
    }
    $('#l2ElevationButtons').html(completeHTML); // add the complete "buttons div" to the DOM
    $('.psm').hide();
    $('#level2_psm').show(); // show the parent div for the elevation buttons and the psmRows

    $('#productsDropdownTriggerText').text('Reflectivity'); // we start out with reflectivity
    initEventListeners(this, lEAP, elevationProductLookup); // initialize the event listeners for all of these buttons
}

module.exports = load_elevation_menu;
},{}],63:[function(require,module,exports){
function _load_storm_track_product(product, callback) {
    const current_station = window.atticData.currentStation;
    // imports have to be inside function for some reason
    const loaders_nexrad = require('../../../libnexrad/loaders_nexrad');

    loaders_nexrad.get_latest_level_3_url(current_station, product, 0, (url) => {
        if (url == null) {
            // nothing here yet
            deal_with_storm_track_layers();
            deal_with_tvs_layers();
        } else {
            loaders_nexrad.return_level_3_factory_from_url(url, (L3Factory) => {
                var desc_str = 'Storm Tracks:';
                if (product == 'NTV') { desc_str = 'Tornado Vortex Signature:' }

                if (L3Factory.get_file_age_in_minutes() <= 30) {
                    function _plot() {
                        console.log(desc_str, L3Factory);
                        L3Factory.plot();
                        callback();
                    }

                    const file_id = L3Factory.generate_unique_id();

                    if (product == 'NST' && window.atticData.current_storm_track_id != file_id) {
                        window.atticData.current_storm_track_id == file_id;
                        deal_with_storm_track_layers();
                        _plot();
                    }
                    if (product == 'NTV' && window.atticData.current_tvs_id != file_id) {
                        window.atticData.current_tvs_id == file_id;
                        deal_with_tvs_layers();
                        _plot();
                    }
                    if (product == 'NMD' && window.atticData.current_nmd_id != file_id) {
                        window.atticData.current_nmd_id == file_id;
                        // deal_with_storm_track_layers();
                        _plot();
                    }
                } else {
                    deal_with_storm_track_layers();
                    deal_with_tvs_layers();
                }
            })
        }
    })
}

function deal_with_storm_track_layers() {
    const map = require('../../../../core/map/map');

    var storm_track_layers = window.atticData.storm_track_layers;
    if (storm_track_layers != undefined) {
        for (var i in storm_track_layers) {
            if (map.getLayer(storm_track_layers[i])) { map.removeLayer(storm_track_layers[i]) }
            if (map.getSource(storm_track_layers[i])) { map.removeSource(storm_track_layers[i]) }
        }
    }
}

function deal_with_tvs_layers() {
    const map = require('../../../../core/map/map');

    var tvs_layers = window.atticData.tvs_layers;
    if (tvs_layers != undefined) {
        for (var i in tvs_layers) {
            if (map.getLayer(tvs_layers[i])) { map.removeLayer(tvs_layers[i]) }
            if (map.getSource(tvs_layers[i])) { map.removeSource(tvs_layers[i]) }
        }
    }
}

function fetch_data() {
    _load_storm_track_product('NST', () => {
        _load_storm_track_product('NTV', () => {});
    })
}

module.exports = {
    fetch_data,
    deal_with_storm_track_layers,
    deal_with_tvs_layers
};
},{"../../../../core/map/map":13,"../../../libnexrad/loaders_nexrad":57}],64:[function(require,module,exports){
// const radarStations = require('../../../../../resources/radarStations');
const nexrad_locations = require('../../../libnexrad/nexrad_locations').NEXRAD_LOCATIONS;
const turf = require('@turf/turf');
const map = require('../../../../core/map/map');
const setLayerOrder = require('../../../../core/map/setLayerOrder');
const ut = require('../../../../core/utils');

function findTerminalCoordinates(startLat, startLng, distanceNM, bearingDEG) {
    var metersInNauticalMiles = 1852;
    var distanceMeters = distanceNM * metersInNauticalMiles;
    var bearing = bearingDEG;

    var point = turf.point([startLng, startLat]);
    var destiation = turf.destination(point, distanceMeters, bearing, {units: 'meters'});
    return destiation;
}

function getCoords(degNmObj, station) {
    const currentStationCoords = { 'lat': nexrad_locations[station].lat, 'lng': nexrad_locations[station].lon }

    var coords = findTerminalCoordinates(currentStationCoords.lat, currentStationCoords.lng, degNmObj.nm, degNmObj.deg);
    return turf.getCoords(coords);
}

function generateParallelLine(basePoint, destPoint, cellData, forecastIndex) {
    function addToBearing(bearing, angle) { return (bearing + angle) % 360 }
    function subtractFromBearing(bearing, angle) { return (bearing - angle + 360) % 360 }

    // basePoint = turf.point(turf.getCoords(basePoint));
    // destPoint = turf.point(turf.getCoords(destPoint));

    var bearing = turf.bearing(basePoint, destPoint);

    // 15min, 30min, 45min, 1hr
    var timeIntervalLookup = [0.25, 0.5, 0.75, 1];
    // ((speed * time interval) * convert kts to mph) / scaling
    // const distanceForLine = (cellData.movement.kts * timeIntervalLookup[forecastIndex] * 0.868976242) / 12; // miles
    const distanceForLine = 1.25; // miles

    var leftBearing = subtractFromBearing(bearing, 90);
    var leftPoint = turf.destination(destPoint, distanceForLine, leftBearing, {units: 'miles'});
    var rightBearing = addToBearing(bearing, 90);
    var rightPoint = turf.destination(destPoint, distanceForLine, rightBearing, {units: 'miles'});

    return turf.lineString([turf.getCoords(leftPoint), turf.getCoords(rightPoint)]);
}

function plot_storm_tracks(L3Factory) {
    const allTracks = L3Factory.formatted_tabular.storms;

    function individualCell(id) {
        var points = [];
        var parallelLines = [];
        var coords;
        var initialPoint;
        var curCell = allTracks[id];

        coords = getCoords(curCell.current, L3Factory.station);
        points.push(coords);
        const originalInitialPoint = turf.point(coords, {cellID: id, coords: coords, cellProperties: curCell});
        initialPoint = turf.point(coords, {cellID: id, coords: coords, cellProperties: curCell});
        for (var i in curCell.forecast) {
            var curPoint = curCell.forecast[i];
            if (curPoint != null) {
                coords = getCoords(curPoint, L3Factory.station);
                parallelLines.push(generateParallelLine(initialPoint, coords, curCell, i));
                points.push(coords);
                initialPoint = turf.point(coords, {cellID: id, coords: coords, cellProperties: curCell});
            }
        }

        return [points, originalInitialPoint, parallelLines];
    }

    var stormIDs = Object.keys(allTracks);
    var multiLineStringCoords = [];
    var multiPointCoords = [];
    var featureCollectionObjects = [];
    for (var i in stormIDs) {
        var icResult = individualCell(stormIDs[i]); // L5
        multiLineStringCoords.push(icResult[0]);
        multiPointCoords.push(icResult[1]);
        featureCollectionObjects.push(icResult[2]);
    }
    var multiLineGeoJSON = turf.multiLineString(multiLineStringCoords);
    var multiPointGeoJSON = turf.featureCollection(multiPointCoords);
    var featureCollectionGeoJSON = turf.featureCollection(featureCollectionObjects.flat());

    var storm_track_layers = [];
    // to add black borders to the lines
    for (var i = 0; i <= 1; i++) {
        storm_track_layers.push('stormTrackParallelLines' + i);
        map.addLayer({
            id: 'stormTrackParallelLines' + i,
            type: 'line',
            source: {
                'type': 'geojson',
                'data': featureCollectionGeoJSON,
            },
            layout: {
                'line-cap': 'square'
            },
            paint: {
                'line-color': i == 1 ? 'white' : 'black',
                'line-width': i == 1 ? 2 : 4,
            }
        })
        storm_track_layers.push('stormTrackLines' + i);
        map.addLayer({
            id: 'stormTrackLines' + i,
            type: 'line',
            source: {
                'type': 'geojson',
                'data': multiLineGeoJSON,
            },
            layout: {
                'line-cap': 'square'
            },
            paint: {
                'line-color': i == 1 ? 'white' : 'black',
                'line-width': i == 1 ? 2 : 4,
            }
        })
    }
    storm_track_layers.push('stormTrackInitialPoint');
    map.addLayer({
        id: 'stormTrackInitialPoint',
        type: 'circle',
        source: {
            'type': 'geojson',
            'data': multiPointGeoJSON,
        },
        paint: {
            'circle-radius': 3,
            'circle-stroke-width': 1,
            'circle-color': 'white',
            'circle-stroke-color': 'black',
        }
    })
    window.atticData.storm_track_layers = storm_track_layers;

    function cellClick(e) {
        // if (window.atticData.currentStation == L3Factory.station) {
            const properties = e.features[0].properties;
            const cellID = properties.cellID;
            const cellProperties = JSON.parse(properties.cellProperties);
            // console.log(allTracks)

            var fileTime = L3Factory.get_date();
            var hourMin = ut.printHourMin(fileTime, ut.userTimeZone);

            var popupHTML =
`<b><u>Storm Track</u></b>
<div>Cell <b>${cellID}</b> at <b>${hourMin}</b></div>`

            function flip(num) {
                if (num >= 180) {
                    return num - 180;
                } else if (num < 180) {
                    return num + 180;
                }
            }

            if (cellProperties.movement != 'new') {
                popupHTML += `<div><b>${ut.degToCompass(flip(cellProperties.movement.deg))}</b> at <b>${ut.knotsToMph(cellProperties.movement.kts, 0)}</b> mph</div>`
            }

            if (cellProperties.graph_data != undefined) {
                popupHTML +=
`<br>
<div>Max Reflectivity: <b>${cellProperties?.graph_data?.dbzm} dBZ</b>
<div>Height of Max Refl: <b>${cellProperties?.graph_data?.hgt} kft</b>`
            }

            new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000' })
                .setLngLat(JSON.parse(properties.coords))
                .setHTML(popupHTML)
                .addTo(map);
        // }
    }
    map.on('click', 'stormTrackInitialPoint', cellClick);
    map.on('mouseenter', 'stormTrackInitialPoint', () => { map.getCanvas().style.cursor = 'pointer'; });
    map.on('mouseleave', 'stormTrackInitialPoint', () => { map.getCanvas().style.cursor = ''; });

    setLayerOrder();

    var isSTVisChecked = $('#armrSTVisBtnSwitchElem').is(':checked');
    if (!isSTVisChecked) {
        if (storm_track_layers != undefined) {
            for (var i in storm_track_layers) {
                map.setLayoutProperty(storm_track_layers[i], 'visibility', 'none');
            }
        }
    }
}

module.exports = plot_storm_tracks;
},{"../../../../core/map/map":13,"../../../../core/map/setLayerOrder":15,"../../../../core/utils":30,"../../../libnexrad/nexrad_locations":58,"@turf/turf":105}],65:[function(require,module,exports){
const nexrad_locations = require('../../../libnexrad/nexrad_locations').NEXRAD_LOCATIONS;
const turf = require('@turf/turf');
const ut = require('../../../../core/utils');
const setLayerOrder = require('../../../../core/map/setLayerOrder');
const icons = require('../../../../core/map/icons/icons');

function findTerminalCoordinates(startLat, startLng, distanceNM, bearingDEG) {
    var metersInNauticalMiles = 1852;
    var distanceMeters = distanceNM * metersInNauticalMiles;
    var bearing = bearingDEG;

    var point = turf.point([startLng, startLat]);
    var destiation = turf.destination(point, distanceMeters, bearing, {units: 'meters'});
    return destiation;
}

function plot_tornado_vortex_signature(L3Factory) {
    icons.add_icon_svg([
        [icons.icons.tornado_icon, 'tornado']
    ], () => {
        const all_tracks = L3Factory.formatted_tabular.tvs;
        const station_info = nexrad_locations[L3Factory.station];

        function individual_cell(id) {
            const base_point = findTerminalCoordinates(station_info.lat, station_info.lon, all_tracks[id].range, all_tracks[id].az);
            const coords = {'lng': base_point.geometry.coordinates[0], 'lat': base_point.geometry.coordinates[1]};
            base_point.properties.cellProperties = all_tracks[id];
            base_point.properties.cellID = all_tracks[id].cell_id;
            base_point.properties.coords = coords;
            return base_point;
        }

        var storm_IDs = Object.keys(all_tracks);
        var multipoint_coords = [];
        for (var i in storm_IDs) {
            var ic_result = individual_cell(storm_IDs[i]);
            multipoint_coords.push(ic_result);
        }
        var multipoint_geoJSON = turf.featureCollection(multipoint_coords);

        var tvs_layers = [];
        tvs_layers.push('tvsInitialPoint');
        map.addLayer({
            id: 'tvsInitialPoint',
            type: 'symbol',
            source: {
                'type': 'geojson',
                'data': multipoint_geoJSON,
            },
            layout: {
                'icon-image': 'tornado_icon',
                'icon-size': 0.2,
                'text-allow-overlap': true,
                'text-ignore-placement': true,
                'icon-allow-overlap': true,
                'icon-ignore-placement': true,
            },
        })
        window.atticData.tvs_layers = tvs_layers;

        function cellClick(e) {
            // if (window.atticData.currentStation == L3Factory.station) {
                const properties = e.features[0].properties;
                const cellID = properties.cellID;
                const cellProperties = JSON.parse(properties.cellProperties);

                var fileTime = L3Factory.get_date();
                var hourMin = ut.printHourMin(fileTime, ut.userTimeZone);

                function flip(num) {
                    if (num >= 180) {
                        return num - 180;
                    } else if (num < 180) {
                        return num + 180;
                    }
                }

                var popupHTML =
    `<b><u>TVS</u></b>
    <div>Cell <b>${cellID}</b> at <b>${hourMin}</b></div>
    <div><b>${ut.degToCompass(flip(cellProperties.az))}</b> at <b>${ut.knotsToMph(cellProperties.range, 0)}</b> mph</div>
    <br>
    <div>Average Delta Velocity: <b>${cellProperties.avfdv} kts</b>
    <div>Low-level Delta Velocity: <b>${cellProperties.lldv} kts</b>
    <div>Maximum Delta Velocity: <b>${cellProperties.mxdv} kts</b>
    <div>Height of Max Delta Velocity: <b>${cellProperties.mvdvhgt} kft</b>
    <div>Depth: <b>${cellProperties.depth} kft</b>
    <div>Base: <b>${cellProperties.base} kft</b>
    <div>Top: <b>${cellProperties.top} kft</b>
    <div>Maximum Shear: <b>${cellProperties.maxshear} m/s/km</b>
    <div>Height of Max Shear: <b>${cellProperties.maxshearheight} kft</b>`

                new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000', maxHeight: '300' })
                    .setLngLat(JSON.parse(properties.coords))
                    .setHTML(popupHTML)
                    .addTo(map);
            // }
        }
        map.on('click', 'tvsInitialPoint', cellClick);
        map.on('mouseenter', 'tvsInitialPoint', () => { map.getCanvas().style.cursor = 'pointer'; });
        map.on('mouseleave', 'tvsInitialPoint', () => { map.getCanvas().style.cursor = ''; });

        setLayerOrder();

        var isSTVisChecked = $('#armrSTVisBtnSwitchElem').is(':checked');
        if (!isSTVisChecked) {
            if (tvs_layers != undefined) {
                for (var i in tvs_layers) {
                    map.setLayoutProperty(tvs_layers[i], 'visibility', 'none');
                }
            }
        }
    })
}

module.exports = plot_tornado_vortex_signature;
},{"../../../../core/map/icons/icons":12,"../../../../core/map/setLayerOrder":15,"../../../../core/utils":30,"../../../libnexrad/nexrad_locations":58,"@turf/turf":105}],66:[function(require,module,exports){
var map = require('../core/map/map');
const ut = require('../core/utils');

ut.setMapMargin('bottom', $('#mapFooter').height());
ut.setMapMargin('top', $('#radarHeader').height());

if (require('../core/misc/detect_mobile_browser')) {
    //$('#mapFooter').css("height", "+=20px");
    var div = document.createElement('div');
    div.className = 'mapFooter';
    $(div).css("z-index", $('#mapFooter').css("z-index") - 1);
    document.body.appendChild(div);

    $('#mapFooter').css('bottom', '5%');
    var offset = $(window).height() * (5 / 100);
    ut.setMapMargin('bottom', offset + $('#mapFooter').height());
    // $('#colorPicker').css('bottom', offset);
    // $('#colorPickerText').css('bottom', offset);
    //$('#mapFooter').css("align-items", "start");

    $('.mapFooter').css('justify-content', 'space-evenly');
}

// function roundArrayElements(array) {
//     const roundedArray = [];
//     for (let i = 0; i < array.length; i++) {
//         if (Array.isArray(array[i])) {
//             roundedArray.push(roundArrayElements(array[i])); // Recursively handle nested arrays
//         } else {
//             // Round the current element to three decimal places
//             const roundedValue = parseFloat(array[i].toFixed(3));
//             roundedArray.push(roundedValue);
//         }
//     }
//     return roundedArray;
// }

// for (var i in forecast_zones) {
//     forecast_zones[i].geometry.coordinates = roundArrayElements(forecast_zones[i].geometry.coordinates);
// }
// console.log(forecast_zones);

// $('#armrUploadFileBtn').click();

// ../data/RODN20220831_075245_V06
// ../data/KCRP20170825_235733_V06
// ../data/KLIX20050829_061516.gz
// ../data/KTLX20130520_201643_V06.gz
// ../data/KAMA20190506_021539_V06
// ../data/KMLB19920824_134828.gz
// ../data/level3/MHX_N0B_2022_08_02_01_57_08
// ../data/level3/KOUN_SDUS54_N0QTLX_201305202016
// ../data/level3/KOUN_SDUS54_N0UTLX_201305202016

function doWhenLoad(func) {
    setTimeout(function() {
        if (map.loaded()) {
            func();
        } else {
            map.on('load', function() {
                func();
            })
        }
    }, 0)
}
// doWhenLoad(function() {
//     const NEXRADLevel2File = require('./libnexrad/level2/level2_parser');
//     const Level2Factory = require('./libnexrad/level2/level2_factory');

//     const NEXRADLevel3File = require('./libnexrad/level3/level3_parser');
//     const Level3Factory = require('./libnexrad/level3/level3_factory');

//     const loaders_nexrad = require('./libnexrad/loaders_nexrad');

//     // // ../data/KTLX20130520_201643_V06.gz#
//     // // ../data/level3/SHV_NMD_2023_04_03_02_29_56# (from Unidata AWS bucket)
//     // // ../data/level3/DTX_NTV_2023_04_05_17_40_06# (from https://tgftp.nws.noaa.gov/SL.us008001/DF.of/DC.radar/)
//     // // ../data/level3/DTX_NHI_2023_04_05_18_05_14# (from https://tgftp.nws.noaa.gov/SL.us008001/DF.of/DC.radar/)
//     // TLX_NST_2023_04_19_21_55_59
//     // TLX_TVS_2023_04_19_21_55_59
//     // TLX_NMD_2023_04_19_21_55_59
//     loaders_nexrad.file_to_buffer('../data/level3/TLX_TVS_2023_04_19_21_55_59#', function(buffer) {
//         const file = new NEXRADLevel3File(buffer);
//         const L3Factory = new Level3Factory(file);
//         console.log(L3Factory);
//         L3Factory.plot();
//     })
// })
},{"../core/map/map":13,"../core/misc/detect_mobile_browser":27,"../core/utils":30}],67:[function(require,module,exports){
const plot_to_map = require('./plot_to_map');
const product_colors = require('../colormaps/colormaps');
const ut = require('../../core/utils')
const chroma = require('chroma-js');
const work = require('webworkify');

function deg2rad(angle) { return angle * (Math.PI / 180) }

function calculate_coordinates(nexrad_factory, options) {
    const start = Date.now();

    var product;
    var elevation;
    if (nexrad_factory.nexrad_level == 2) {
        product = options.product;
        elevation = options.elevation;
        window.atticData.product_code = product;
    } else if (nexrad_factory.nexrad_level == 3) {
        product = nexrad_factory.product_abbv;
        window.atticData.product_code = nexrad_factory.product_code;
    }
    window.atticData.product = product;

    var should_plot_dealiased;
    if (nexrad_factory.nexrad_level == 2 && product == 'VEL') {
        should_plot_dealiased = window.atticData.should_plot_dealiased;
        var already_dealiased = nexrad_factory.check_if_already_dealiased(elevation);
        if (should_plot_dealiased && !already_dealiased) {
            nexrad_factory.dealias(elevation);
        }
    }

    var azimuths = nexrad_factory.get_azimuth_angles(elevation);
    var ranges = nexrad_factory.get_ranges(product, elevation);
    var data;
    if (nexrad_factory.nexrad_level == 2) {
        data = nexrad_factory.get_data(product, elevation, should_plot_dealiased);
    } else {
        data = nexrad_factory.get_data(product, elevation);
    }

    var location = nexrad_factory.get_location();
    var radar_lat_lng = {'lat': location[0], 'lng': location[1]};
    var radar_lat = deg2rad(radar_lat_lng.lat);
    var radar_lng = deg2rad(radar_lat_lng.lng);

    var color_data = product_colors[product];
    var values = [...color_data.values];
    values = ut.scaleValues(values, product);
    var chroma_scale = chroma.scale(color_data).domain(values).mode('lab');

    var total = 0;
    var data_copy = [...data];
    for (var i in data_copy) {
        data_copy[i] = data_copy[i].filter(function (el) { return el != null });
        total += data_copy[i].length;
    }

    var points = new Float32Array(total * 12);
    var colors = new Float32Array(total * 6);
    var points_index = 0;
    var colors_index = 0;

    function push_point(pointArray) {
        for (var i = 0; i < pointArray.length; i++) {
            points[points_index++] = pointArray[i];
        }
    }

    function push_color(colorArray) {
        for (var i = 0; i < colorArray.length; i++) {
            colors[colors_index++] = colorArray[i];
        }
    }

    function get_azimuth_distance(i, n) {
        return {
            azimuth: azimuths[i],
            distance: ranges[n]
        };
    }

    for (var i = 0; i < azimuths.length - 1; i++) {
        for (var n = 0; n < ranges.length - 1; n++) {
            try {
                if (data[i][n] !== null) {
                    var base_locs = get_azimuth_distance(i, n);
                    // var base = destVincenty(base_locs.azimuth, base_locs.distance);

                    var one_up_locs = get_azimuth_distance(i, n + 1);
                    // var one_up = destVincenty(one_up_locs.azimuth, one_up_locs.distance);

                    var one_sideways_locs = get_azimuth_distance(i + 1, n);
                    // var one_sideways = destVincenty(one_sideways_locs.azimuth, one_sideways_locs.distance);

                    var other_corner_locs = get_azimuth_distance(i + 1, n + 1);
                    // var other_corner = destVincenty(other_corner_locs.azimuth, other_corner_locs.distance);

                    push_point([
                        base_locs.azimuth,
                        base_locs.distance,
                        one_up_locs.azimuth,
                        one_up_locs.distance,
                        one_sideways_locs.azimuth,
                        one_sideways_locs.distance,
                        one_sideways_locs.azimuth,
                        one_sideways_locs.distance,
                        one_up_locs.azimuth,
                        one_up_locs.distance,
                        other_corner_locs.azimuth,
                        other_corner_locs.distance
                    ]);

                    var color = data[i][n];
                    push_color([
                        color,
                        color,
                        color,
                        color,
                        color,
                        color
                    ]);
                    // push_color([
                    //     data[i][n],
                    //     data[i][n + 1],
                    //     data[i + 1][n],
                    //     data[i + 1][n],
                    //     data[i][n + 1],
                    //     data[i + 1][n + 1],
                    // ]);
                }
            } catch (e) {
                // console.warn(e)
            }
        }
    }

    var w = work(require('./calculation_worker'));
    w.addEventListener('message', function(ev) {
        console.log(`Calculated vertices in ${Date.now() - start} ms`);
        plot_to_map(ev.data, colors, product, radar_lat_lng, nexrad_factory);
    })
    w.postMessage([points, radar_lat_lng], [points.buffer]);
}

module.exports = calculate_coordinates;
},{"../../core/utils":30,"../colormaps/colormaps":44,"./calculation_worker":68,"./plot_to_map":74,"chroma-js":110,"webworkify":162}],68:[function(require,module,exports){
const CheapRuler = require('cheap-ruler');

module.exports = function (self) {
    self.addEventListener('message', function(ev) {
        function mc(coords) {
            function mercatorXfromLng(lng) {
                return (180 + lng) / 360;
            }
            function mercatorYfromLat(lat) {
                return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;
            }
            return [mercatorXfromLng(coords[0]), mercatorYfromLat(coords[1])];
        }

        var points = ev.data[0];
        var lngLat = ev.data[1];
        // [-75.0, 45.0] // lng, lat
        var ruler = new CheapRuler(lngLat.lat, 'kilometers');

        for (var i = 0; i < points.length; i += 2) {
            var az = points[i];
            var distance = points[i + 1];
            var calc = mc(ruler.destination([lngLat.lng, lngLat.lat], distance, az));
            points[i] = calc[0];
            points[i + 1] = calc[1];
        }

        self.postMessage(points);
    })
}
},{"cheap-ruler":109}],69:[function(require,module,exports){
const ut = require('../../core/utils');
const PNG = require('pngjs').PNG;
const chroma = require('chroma-js');

function rgbValToArray(rgbString) {
    return rgbString
        .replace('rgb(', '')
        .replace('rgba(', '')
        .replace(')', '')
        .split(', ')
}
function chromaScaleToRgbString(scaleOutput) {
    return `rgb(${parseInt(scaleOutput._rgb[0])}, ${parseInt(scaleOutput._rgb[1])}, ${parseInt(scaleOutput._rgb[2])})`
}

function create_WebGL_texture(colors, values) {
    const width = 1500;
    const height = 1;
    const cmin = values[0];
    const cmax = values[values.length - 1];

    const png = new PNG({
        colorType: 2,
        filterType: 4,
        width: width,
        height: height
    });

    var colorsArray = [];
    for (var i in values) {
        var colArr = rgbValToArray(colors[i]);
        colorsArray.push(colArr)
    }
    var chromaScale = chroma.scale(colors).domain(values).mode('lab');

    for (let y = 0; y < height; y++) {
        for (let x = 0; x < width; x++) {
            const i = (y * width + x) * 4;

            //console.log((values[x] - cmin) / (cmax - cmin))
            var scaledVal = ut.scale(x, 0, width - 1, cmin, cmax);
            var colorAtVal = chromaScaleToRgbString(chromaScale(scaledVal));
            var arrayColorAtVal = rgbValToArray(colorAtVal);

            png.data[i + 0] = arrayColorAtVal[0]; //getRandomInt(0, 255);
            png.data[i + 1] = arrayColorAtVal[1]; //getRandomInt(0, 255);
            png.data[i + 2] = arrayColorAtVal[2]; //getRandomInt(0, 255);
            png.data[i + 3] = 255;
        }
    }

    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    ctx.canvas.width = png.width;
    ctx.canvas.height = png.height;

    // https://stackoverflow.com/a/16404317
    var imgData = ctx.createImageData(png.width, png.height);

    var ubuf = new Uint8Array(png.data);
    for (var i = 0; i < ubuf.length; i += 4) {
        imgData.data[i] = ubuf[i];   // red
        imgData.data[i + 1] = ubuf[i + 1]; // green
        imgData.data[i + 2] = ubuf[i + 2]; // blue
        imgData.data[i + 3] = ubuf[i + 3]; // alpha
    }

    // for (var i = 0; i < imgData.data.length; i = i + 4) {
    //     var rgb = `rgba(${imgData.data[i]}, ${imgData.data[i + 1]}, ${imgData.data[i + 2]}, ${imgData.data[i + 3]})`;
    //     //ut.colorLog(rgb, rgb)
    // }

    return imgData;
}

module.exports = create_WebGL_texture;
},{"../../core/utils":30,"chroma-js":110,"pngjs":154}],70:[function(require,module,exports){
const ut = require('../../core/utils');

function rgbValToArray(rgbString) {
    return rgbString
            .replace('rgb(', '')
            .replace('rgba(', '')
            .replace(')', '')
            .split(', ')
}
function chromaScaleToRgbString(scaleOutput) {
    return `rgb(${parseInt(scaleOutput._rgb[0])}, ${parseInt(scaleOutput._rgb[1])}, ${parseInt(scaleOutput._rgb[2])})`
}

function remove(arr, value) {
    var index = arr.indexOf(value);
    if (index > -1) { // only splice array when item is found
        arr.splice(arr, 1); // 2nd parameter means remove one item only
    }
    return arr;
}

function create_and_show_colorbar(colors, values) {
    colors = [...colors];
    values = [...values];
    // we don't want the "range folded" colors on the map colorbar
    colors = remove(colors, 'rgb(139, 0, 218)');
    values = remove(values, -999);

    if ($('#mapColorScale').is(":hidden")) {
        ut.setMapMargin('bottom', '+=15px');
    }
    var offset;
    if (require('../../core/misc/detect_mobile_browser')) {
        offset = $(window).height() * (5 / 100);
    } else {
        offset = 0;
    }
    $('#mapColorScale').css({
        'bottom': offset + $('#mapFooter').height(),
        'height': '15px'
    }).show();
    $('#productMapFooter').css('bottom', 0 + $('#mapFooter').height() + $('#mapColorScale').height());

    var actualCanvas = document.getElementById('texturecolorbar');
    var visualCanvas = document.getElementById('mapColorScale');

    var width = 1500;
    var height = 1;

    actualCanvas.width = width;
    actualCanvas.height = height;
    visualCanvas.width = $('#mapColorScale').width();
    visualCanvas.height = $('#mapColorScale').height();

    var actualCTX = actualCanvas.getContext('2d');
    var visualCTX = visualCanvas.getContext('2d');

    actualCTX.clearRect(0, 0, actualCanvas.width, actualCanvas.height);
    visualCTX.clearRect(0, 0, visualCanvas.width, visualCanvas.height);

    var actualGradient = actualCTX.createLinearGradient(0, 0, actualCanvas.width, 0);
    var visualGradient = visualCTX.createLinearGradient(0, 0, visualCanvas.width, 0);

    var cmax = values[values.length - 1];
    var cmin = values[0];
    var clen = colors.length;

    var gradColors = '';
    for (var i = 0; i < clen; ++i) {
        actualGradient.addColorStop((values[i] - cmin) / (cmax - cmin), colors[i]);
        visualGradient.addColorStop((values[i] - cmin) / (cmax - cmin), colors[i]);

        var curPercent = (((values[i] - cmin) / (cmax - cmin)) * 100);
        gradColors += `${colors[i]} ${curPercent}%`;
        if (!(i == clen - 1)) { gradColors += ',\n' }
    }
    actualCTX.fillStyle = actualGradient;
    //visualCTX.fillStyle = visualGradient;

    actualCTX.fillRect(0, 0, actualCanvas.width, actualCanvas.height);
    //visualCTX.fillRect(0, 0, visualCanvas.width, visualCanvas.height);

    $('<style>')
        .prop('type', 'text/css')
        .html(`
        #mapColorScale {
            background: linear-gradient(
                to right,
                ${gradColors}
            );
        }`)
        .appendTo('head');

    // const png = new PNG({
    //     colorType: 2,
    //     filterType: 4,
    //     width: width,
    //     height: height
    // });

    // var colorsArr = [];
    // for (var i in values) {
    //     var colArr = rgbValToArray(colors[i]);
    //     colorsArr.push(colArr)
    // }
    // var chromaScale = chroma.scale(colors).domain(values).mode('lab');

    // for (let y = 0; y < height; y++) {
    //     for (let x = 0; x < width; x++) {
    //         const i = (y * width + x) * 4;

    //         //console.log((values[x] - cmin) / (cmax - cmin))
    //         var scaledVal = ut.scale(x, 0, width - 1, cmin, cmax);
    //         var colorAtVal = chromaScaleToRgbString(chromaScale(scaledVal));
    //         var arrayColorAtVal = rgbValToArray(colorAtVal);

    //         png.data[i + 0] = arrayColorAtVal[0]; //getRandomInt(0, 255);
    //         png.data[i + 1] = arrayColorAtVal[1]; //getRandomInt(0, 255);
    //         png.data[i + 2] = arrayColorAtVal[2]; //getRandomInt(0, 255);
    //         png.data[i + 3] = 255;
    //     }
    // }

    // const canvas = document.createElement('canvas');
    // const ctx = canvas.getContext('2d');
    // ctx.canvas.width = png.width;
    // ctx.canvas.height = png.height;

    // // https://stackoverflow.com/a/16404317
    // var imgData = ctx.createImageData(png.width, png.height);

    // var ubuf = new Uint8Array(png.data);
    // for (var i = 0; i < ubuf.length; i += 4) {
    //     imgData.data[i] = ubuf[i];   // red
    //     imgData.data[i + 1] = ubuf[i + 1]; // green
    //     imgData.data[i + 2] = ubuf[i + 2]; // blue
    //     imgData.data[i + 3] = ubuf[i + 3]; // alpha
    // }

    // for (var i = 0; i < imgData.data.length; i = i + 4) {
    //     var rgb = `rgba(${imgData.data[i]}, ${imgData.data[i + 1]}, ${imgData.data[i + 2]}, ${imgData.data[i + 3]})`;
    //     //ut.colorLog(rgb, rgb)
    // }

    // imagedata = imgData;
    // imagetexture = gl.createTexture();
    // gl.bindTexture(gl.TEXTURE_2D, imagetexture);
    // pageState.imagedata = imagedata;
    // pageState.imagetexture = imagetexture;

    // $('#texturecolorbar').clone().appendTo('#mapColorScaleContainer').attr('id', 'mapColorScale');
    // $('#mapColorScale').removeClass('texturecolorbar');
    // $('#mapColorScale').css({
    //     'position': 'absolute',
    //     'z-index': 115,
    //     'bottom': '50px',
    //     'height': '10px',
    //     'width': '100%',
    //     'display': 'block'
    // })
    // // position: absolute;
    // // z-index: 115;
    // // bottom: 50px;
    // // height: 10px;
    // // width: 100%;
    // console.log($('#mapColorScale'))
    //tt.initPaletteTooltip(produc, colortcanvas);
}

module.exports = create_and_show_colorbar;
},{"../../core/misc/detect_mobile_browser":27,"../../core/utils":30}],71:[function(require,module,exports){
module.exports = "precision highp float;\n#define GLSLIFY 1\nuniform vec2 minmax;\nuniform sampler2D u_texture;\nvarying float color;\n\nvoid main() {\n    float calcolor = (color - minmax.x) / (minmax.y - minmax.x);\n    gl_FragColor = texture2D(u_texture, vec2(min(max(calcolor, 0.0), 1.0), 0.0));\n}";
},{}],72:[function(require,module,exports){
module.exports = "precision highp float;\n#define GLSLIFY 1\nuniform vec2 minmax;\nvarying float color;\n\nvec4 EncodeFloatRGBA(float v) {\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * v;\n    enc = fract(enc);\n    enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n    return enc;\n}\n\nvoid main() {\n    vec4 encoded;\n\n    // get on 0-1 scale\n    float calcolor = min(1.0, max((color - minmax.x) / (minmax.y - minmax.x), 0.0));\n\n    // if upper end, need this check because [0,1)\n    if (abs(calcolor - 1.0) < 0.00001) {\n        encoded = vec4(1.0, 0.0, 0.0, 1.0);\n    } else {\n        encoded = EncodeFloatRGBA(calcolor);\n        encoded.a = 1.0;\n    }\n\n    gl_FragColor = encoded;\n}";
},{}],73:[function(require,module,exports){
module.exports = "#define GLSLIFY 1\nuniform mat4 u_matrix;\n// uniform vec4 u_eye_high;\n// uniform vec4 u_eye_low;\nattribute vec2 aPosition;\nuniform vec2 radarLatLng;\nattribute float aColor;\nvarying float color;\n\nfloat PI = 3.141592654;\n\nvec2 ds_set(float a) {\n    vec2 z;\n    z.x = a;\n    z.y = 0.0;\n    return z;\n}\n\nfloat add(float a, float b) { return (b != 0.) ? a + b : a; }\nfloat sub(float a, float b) { return (b != 0.) ? a - b : a; }\nfloat mul(float a, float b) { return (b != 1.) ? a * b : a; }\nfloat div(float a, float b) { return (b != 1.) ? a / b : a; }\nfloat fma(float a, float b, float c) { return a * b + c; }\n\nvec2 fastTwoSum(float a, float b) {\n    float s = add(a, b);\n    return vec2(s, sub(b, sub(s, a)));\n}\n\nvec2 twoSum(float a, float b) {\n    float s = add(a, b);\n    float b1 = sub(s, a);\n    return vec2(s, add(sub(b, b1), sub(a, sub(s, b1))));\n}\n\nvec2 twoProd(float a, float b) {\n    float ab = mul(a, b);\n    return vec2(ab, fma(a, b, -ab));\n}\n\nvec2 add22(vec2 X, vec2 Y) {\n    vec2 S = twoSum(X[0], Y[0]);\n    vec2 T = twoSum(X[1], Y[1]);\n    vec2 V = fastTwoSum(S[0], add(S[1], T[0]));\n    return fastTwoSum(V[0], add(T[1], V[1]));\n}\n\nvec2 sub22(vec2 X, vec2 Y) {\n    vec2 S = twoSum(X[0], -Y[0]);\n    vec2 T = twoSum(X[1], -Y[1]);\n    vec2 V = fastTwoSum(S[0], add(S[1], T[0]));\n    return fastTwoSum(V[0], add(T[1], V[1]));\n}\n\nvec2 mul22(vec2 X, vec2 Y) {\n    vec2 S = twoProd(X[0], Y[0]);\n    float t = mul(X[0], Y[1]);\n    float c = fma(X[1], Y[0], mul(X[0], Y[1]));\n    return fastTwoSum(S[0], add(S[1], c));\n}\n\nvec2 div22(vec2 X, vec2 Y) {\n    float s = div(X[0], Y[0]);\n    vec2 T = twoProd(s, Y[0]);\n    float c = add(sub(sub(X[0], T[0]), T[1]), X[1]);\n    return fastTwoSum(s, div(sub(c, mul(s, Y[1])), Y[0]));\n}\n\nfloat atan2(float x, float y) {\n    return atan(x / y);\n}\n\nfloat toRad(float degree) {\n    return degree * (PI / 180.0);\n}\nfloat toDeg(float radian) {\n    return radian * (180.0 / PI);\n}\n\nvec2 calcLngLat(float az, float distance) {\n    // convert distance from meters to kilometers\n    distance = distance * 1000.0;\n\n    // Define the starting latitude and longitude\n    float lat1 = radarLatLng.x;\n    float lon1 = radarLatLng.y;\n\n    // Convert the azimuth and starting coordinates to radians\n    float azRad = az * (PI / 180.0);\n    float lat1Rad = lat1 * (PI / 180.0);\n    float lon1Rad = lon1 * (PI / 180.0);\n\n    // the earth radius in meters\n    float earthRadius = 6378137.0;\n\n    // Calculate the destination latitude and longitude in radians\n    float lat2Rad = asin(sin(lat1Rad) * cos(distance / earthRadius) + cos(lat1Rad) * sin(distance / earthRadius) * cos(azRad));\n    float lon2Rad = lon1Rad + atan2(sin(azRad) * sin(distance / earthRadius) * cos(lat1Rad), cos(distance / earthRadius) - sin(lat1Rad) * sin(lat2Rad));\n\n    // Convert the destination latitude and longitude from radians to degrees\n    float lat2 = lat2Rad * (180.0 / PI);\n    float lon2 = lon2Rad * (180.0 / PI);\n\n    float x = (180.0 + lon2) / 360.0;\n    float y = (180.0 - (180.0 / PI * log(tan(PI / 4.0 + lat2 * PI / 360.0)))) / 360.0;\n\n    return vec2(x, y);\n}\n\n// https://github.com/TankofVines/node-vincenty\nvec2 destVincenty(float az, float distance) {\n    // convert azimuth to bearing\n    float brng = az;\n    // convert distance from meters to kilometers\n    float dist = distance * 1000.0;\n    float lat1 = radarLatLng.x;\n    float lon1 = radarLatLng.y;\n\n    /*\n    * Define Earth's ellipsoidal constants (WGS-84 ellipsoid)\n    */\n    // length of semi-major axis of the ellipsoid (radius at equator) - meters\n    float a = 6378137.0;\n    // flattening of the ellipsoid\n    float f = 1.0 / 298.257223563; // (a − b) / a\n    // length of semi-minor axis of the ellipsoid (radius at the poles) - meters\n    float b = 6356752.3142; // (1 − ƒ) * a\n\n    float s = dist;\n    float alpha1 = toRad(brng);\n    float sinAlpha1 = sin(alpha1);\n    float cosAlpha1 = cos(alpha1);\n\n    float tanU1 = (1.0 - f) * tan(toRad(lat1));\n    float cosU1 = 1.0 / sqrt((1.0 + tanU1 * tanU1));\n    float sinU1 = tanU1 * cosU1;\n    float sigma1 = atan2(tanU1, cosAlpha1);\n    float sinAlpha = cosU1 * sinAlpha1;\n    float cosSqAlpha = 1.0 - sinAlpha * sinAlpha;\n    float uSq = cosSqAlpha * (a * a - b * b) / (b * b);\n    float A = 1.0 + uSq / 16384.0 * (4096.0 + uSq * (-768.0 + uSq * (320.0 - 175.0 * uSq)));\n    float B = uSq / 1024.0 * (256.0 + uSq * (-128.0 + uSq * (74.0 - 47.0 * uSq)));\n\n    // float x = 0.0;\n    // for (int i = 0; i < 100; i++) {\n    //     x = x + 1.0;\n    //     if (x == 10.0) {\n    //         break;\n    //     }\n    // }\n\n    float sigma = s / (b * A);\n    float sigmaP = 2.0 * PI;\n\n    float cos2SigmaM;\n    float sinSigma;\n    float cosSigma;\n    float deltaSigma;\n    // 100 checks should be enough\n    for (int i = 0; i < 100; i++) {\n        cos2SigmaM = cos(2.0 * sigma1 + sigma);\n        sinSigma = sin(sigma);\n        cosSigma = cos(sigma);\n        deltaSigma = B * sinSigma * (cos2SigmaM + B / 4.0 * (cosSigma * (-1.0 + 2.0 * cos2SigmaM * cos2SigmaM) -\n            B / 6.0 * cos2SigmaM * (-3.0 + 4.0 * sinSigma * sinSigma) * (-3.0 + 4.0 * cos2SigmaM * cos2SigmaM)));\n        sigmaP = sigma;\n        sigma = s / (b * A) + deltaSigma;\n\n        if (abs(sigma - sigmaP) > 1e-12) {\n            break;\n        }\n    }\n\n    float tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n    float lat2 = atan2(sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n        (1.0 - f) * sqrt(sinAlpha * sinAlpha + tmp * tmp));\n    float lambda = atan2(sinSigma * sinAlpha1, cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1);\n    float C = f / 16.0 * cosSqAlpha * (4.0 + f * (4.0 - 3.0 * cosSqAlpha));\n    float L = lambda - (1.0 - C) * f * sinAlpha *\n        (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1.0 + 2.0 * cos2SigmaM * cos2SigmaM)));\n    float lon2 = mod((toRad(lon1) + L + 3.0 * PI), (2.0 * PI) - PI);  // normalise to -180...+180\n\n    // float revAz = atan2(sinAlpha, -tmp);  // final bearing, if required\n    //float result = { lat: toDeg(lat2), lon: toDeg(lon2), finalBearing: toDeg(revAz) };\n\n    float x = (toDeg(lon2)) / 360.0;\n    float y = (180.0 - (180.0 / PI * log(tan(PI / 4.0 + toDeg(lat2) * PI / 360.0)))) / 360.0;\n\n    return vec2(x, y);\n}\n\nvoid main() {\n    // float azimuth = float(aPosition.x);\n    // float distance = float(aPosition.y);\n    // vec2 mercatorCoords = destVincenty(azimuth, distance);\n    // vec4 coords = vec4(\n    //     mercatorCoords.x,\n    //     mercatorCoords.y,\n    //     ds_sub(ds_set(mercatorCoords.x), ds_set(mercatorCoords.x)).x,\n    //     ds_sub(ds_set(mercatorCoords.y), ds_set(mercatorCoords.y)).x\n    // );\n\n    // float x = div22((\n    //     add22(add22(\n    //     mul22(twoSum(u_high_matrix[0][0], u_low_matrix[0][0]), ds_set(mercatorCoords.x)),\n    //     mul22(twoSum(u_high_matrix[1][0], u_low_matrix[1][0]), ds_set(mercatorCoords.y))),\n    //     mul22(twoSum(u_high_matrix[3][0], u_low_matrix[3][0]), ds_set(1.0)))\n    // ), (\n    //     add22(add22(\n    //     mul22(twoSum(u_high_matrix[0][3], u_low_matrix[0][3]), ds_set(mercatorCoords.x)),\n    //     mul22(twoSum(u_high_matrix[1][3], u_low_matrix[1][3]), ds_set(mercatorCoords.y))),\n    //     mul22(twoSum(u_high_matrix[3][3], u_low_matrix[3][3]), ds_set(1.0)))\n    // )).x;\n    // float y = div22((\n    //     add22(add22(\n    //     mul22(twoSum(u_high_matrix[0][1], u_low_matrix[0][1]), ds_set(mercatorCoords.x)),\n    //     mul22(twoSum(u_high_matrix[1][1], u_low_matrix[1][1]), ds_set(mercatorCoords.y))),\n    //     mul22(twoSum(u_high_matrix[3][1], u_low_matrix[3][1]), ds_set(1.0)))\n    // ), (\n    //     add22(add22(\n    //     mul22(twoSum(u_high_matrix[0][3], u_low_matrix[0][3]), ds_set(mercatorCoords.x)),\n    //     mul22(twoSum(u_high_matrix[1][3], u_low_matrix[1][3]), ds_set(mercatorCoords.y))),\n    //     mul22(twoSum(u_high_matrix[3][3], u_low_matrix[3][3]), ds_set(1.0)))\n    // )).x;\n\n    gl_Position = u_matrix * vec4(aPosition.x, aPosition.y, 0.0, 1.0);\n    // gl_Position = vec4(vec3(coords.x, coords.y, 0.0) - u_eye_high.xyz, 0.0);\n    // gl_Position += vec4(vec3(coords.z, coords.w, 0.0) - u_eye_low.xyz, 0.0);\n    // gl_Position = u_matrix * gl_Position;\n    // gl_Position.w += u_eye_high.w;\n    color = aColor;\n}";
},{}],74:[function(require,module,exports){
const product_colors = require('../colormaps/colormaps');
const ut = require('../../core/utils')
const map_funcs = require('../../core/map/mapFunctions');
// const initStormTracks = require('../level3/stormTracking/fetchData');
const init_storm_tracks = require('../libnexrad_helpers/level3/storm_tracks/init_storm_tracks');
const setLayerOrder = require('../../core/map/setLayerOrder');
const create_and_show_colorbar = require('./create_and_show_colorbar');
const create_WebGL_texture = require('./create_WebGL_texture');
const vertex_source = require('./glsl/vertex.glsl');
const fragment_source = require('./glsl/fragment.glsl');
const fragment_framebuffer_source = require('./glsl/fragment_framebuffer.glsl');
const map = require('../../core/map/map');
const RadarUpdater = require('../updater/RadarUpdater');
const filter_lightning = require('../../lightning/filter_lightning');
const load_lightning = require('../../lightning/load_lightning');

function plot_to_map(verticies_arr, colors_arr, product, radar_lat_lng, nexrad_factory) {
    var color_scale_data = product_colors[product];
    var colors = [...color_scale_data.colors];
    var values = [...color_scale_data.values];

    // // add range folded colors
    // colors.unshift('rgb(139, 0, 218)');
    // values.unshift(-999);

    values = ut.scaleValues(values, product);
    const cmin = values[0];
    window.atticData.cmin = cmin;
    const cmax = values[values.length - 1];
    window.atticData.cmax = cmax;

    //var vertexF32 = new Float32Array(verticiesArr);
    //var colorF32 = new Float32Array(colorsArr);
    var vertexF32 = verticies_arr;
    var colorF32 = colors_arr;

    var imagedata;
    var imagetexture;

    var fb;
    function createFramebuffer(gl) {
        const targetTexture = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_2D, targetTexture);

        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.drawingBufferWidth, gl.drawingBufferHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);

        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);

        window.atticData.fb = gl.createFramebuffer();

        gl.bindFramebuffer(gl.FRAMEBUFFER, window.atticData.fb);
        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, targetTexture, 0);
    }
    function renderToFramebuffer(gl, matrix) {
        gl.useProgram(this.programFramebuffer);

        // set uniforms for the framebuffer shaders
        gl.uniformMatrix4fv(this.matrixLocationFramebuffer, false, matrix);
        gl.uniform2fv(this.radarLngLatLocationFramebuffer, [radar_lat_lng.lat, radar_lat_lng.lng]);
        gl.uniform2fv(this.minmaxLocationFramebuffer, [cmin, cmax]);

        // render to the framebuffer
        gl.bindFramebuffer(gl.FRAMEBUFFER, window.atticData.fb);

        // transparent black is no radar data
        gl.clearColor(0, 0, 0, 0);
        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
        gl.drawArrays(gl.TRIANGLES, 0, vertexF32.length / 2);

        // disable framebuffer, render to the map
        gl.bindFramebuffer(gl.FRAMEBUFFER, null);
    }

    var layer = {
        id: 'baseReflectivity',
        type: 'custom',

        onAdd: function (map, gl) {
            create_and_show_colorbar(colors, values);
            // create the color scale texture
            imagedata = create_WebGL_texture(colors, values);
            imagetexture = gl.createTexture();
            gl.bindTexture(gl.TEXTURE_2D, imagetexture);

            // compile the vertex shader
            var vertexShader = gl.createShader(gl.VERTEX_SHADER);
            gl.shaderSource(vertexShader, vertex_source);
            gl.compileShader(vertexShader);

            // compile the main fragment shader
            var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
            gl.shaderSource(fragmentShader, fragment_source);
            gl.compileShader(fragmentShader);

            // compile the framebuffer fragment shader
            var fragmentShaderFramebuffer = gl.createShader(gl.FRAGMENT_SHADER);
            gl.shaderSource(fragmentShaderFramebuffer, fragment_framebuffer_source);
            gl.compileShader(fragmentShaderFramebuffer);

            // create the main program
            this.program = gl.createProgram();
            gl.attachShader(this.program, vertexShader);
            gl.attachShader(this.program, fragmentShader);
            gl.linkProgram(this.program);

            // create the framebuffer program
            this.programFramebuffer = gl.createProgram();
            gl.attachShader(this.programFramebuffer, vertexShader);
            gl.attachShader(this.programFramebuffer, fragmentShaderFramebuffer);
            gl.linkProgram(this.programFramebuffer);

            // retrieve the main program's uniforms
            this.matrixLocation = gl.getUniformLocation(this.program, 'u_matrix')
            this.positionLocation = gl.getAttribLocation(this.program, 'aPosition');
            this.colorLocation = gl.getAttribLocation(this.program, 'aColor');
            this.textureLocation = gl.getUniformLocation(this.program, 'u_texture');
            this.minmaxLocation = gl.getUniformLocation(this.program, 'minmax');
            this.radarLngLatLocation = gl.getUniformLocation(this.program, 'radar_lat_lng');

            // retrieve the framebuffer program's uniforms
            this.matrixLocationFramebuffer = gl.getUniformLocation(this.programFramebuffer, 'u_matrix');
            this.minmaxLocationFramebuffer = gl.getUniformLocation(this.programFramebuffer, 'minmax');
            this.radarLngLatLocationFramebuffer = gl.getUniformLocation(this.programFramebuffer, 'radar_lat_lng');

            // var newVertexF32 = new Float32Array(vertexF32.length * 2);
            // var offset = 0;
            // for (var i = 0; i < vertexF32.length; i += 2) {
            //     var x = vertexF32[i];
            //     var y = vertexF32[i + 1];
            //     var f32x = x - x;
            //     var f32y = y - y;
            //     // if (f32x != 0) { console.log(x) }
            //     // if (f32y != 0) { console.log(y) }

            //     newVertexF32[offset] = x;
            //     newVertexF32[offset + 1] = y;
            //     newVertexF32[offset + 2] = f32x;
            //     newVertexF32[offset + 3] = f32y;
            //     offset += 4;
            // }

            // create and bind the buffer for the vertex data
            this.vertexBuffer = gl.createBuffer();
            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
            gl.bufferData(
                gl.ARRAY_BUFFER,
                vertexF32,
                gl.STATIC_DRAW
            );

            // create and bind the buffer for the color data
            this.colorBuffer = gl.createBuffer();
            gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);
            gl.bufferData(
                gl.ARRAY_BUFFER,
                colorF32,
                gl.STATIC_DRAW
            );

            // initialize the framebuffer
            createFramebuffer(gl);
        },
        render: function (gl, matrix) {
            // function splitDouble(dbl) {
            //     function doubleToFloat(d) { return new Float32Array([d])[0] }
            //     var arr = new Float32Array(2);
            //     arr[0] = doubleToFloat(dbl);
            //     arr[1] = doubleToFloat(dbl - arr[0]);
            //     return arr;
            // }
            // var highMatrix = [];
            // var lowMatrix = [];
            // for (var i in matrix) {
            //     var split = splitDouble(matrix[i]);
            //     highMatrix.push(split[0]);
            //     lowMatrix.push(split[1]);
            // }

            // bind the buffers for the vertices, colors, and the texture
            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
            gl.enableVertexAttribArray(this.positionLocation);
            gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);

            gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);
            gl.enableVertexAttribArray(this.colorLocation);
            gl.vertexAttribPointer(this.colorLocation, 1, gl.FLOAT, false, 0, 0);

            gl.bindTexture(gl.TEXTURE_2D, imagetexture);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, imagedata);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);

            /*
            * use the program to render to the framebuffer
            */
            // only render to the framebuffer if the color picker is active,
            // this helps with performance
            if ($('#colorPickerItemClass').hasClass('icon-blue')) {
                renderToFramebuffer.apply(this, [gl, matrix]);
            }

            /*
            * use the main program to render to the map
            */
            gl.useProgram(this.program);

            // set uniforms for the main shaders
            gl.uniformMatrix4fv(this.matrixLocation, false, matrix);
            gl.uniform2fv(this.radarLngLatLocation, [radar_lat_lng.lat, radar_lat_lng.lng]);
            gl.uniform2fv(this.minmaxLocation, [cmin, cmax]);
            gl.uniform1i(this.textureLocation, 0);

            // draw vertices
            gl.enable(gl.BLEND);
            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
            gl.drawArrays(gl.TRIANGLES, 0, vertexF32.length / 2);
        }
    }

    map_funcs.removeMapLayer('baseReflectivity');
    map.addLayer(layer, 'land-structure-line');

    var isInFileUploadMode = window.atticData.from_file_upload; /* $('#armrModeBtnSwitchElem').is(':checked'); */
    if (!isInFileUploadMode) {
        init_storm_tracks.fetch_data();
        // STstuff.loadAllStormTrackingStuff();

        function _after() {
            filter_lightning();
            const isLightningVisChecked = $('#armrLightningVisBtnSwitchElem').is(':checked');
            if (!isLightningVisChecked) {
                if (map.getLayer('lightningLayer')) {
                    map.setLayoutProperty('lightningLayer', 'visibility', 'none');
                }
            }
        }
        if (!map.getLayer('lightningLayer')) {
            load_lightning(() => {
                _after();
            });
        } else {
            _after();
        }
    } else {
        filter_lightning(true);
    }

    // make sure the alerts are always on top
    setLayerOrder();

    var isRadarVisChecked = $('#armrRadarVisBtnSwitchElem').is(':checked');
    if (!isRadarVisChecked) {
        map.setLayoutProperty('baseReflectivity', 'visibility', 'none');
    }

    // console.log('File plotting complete');
    ut.betterProgressBar('set', 100);
    ut.betterProgressBar('hide');

    var distanceMeasureMapLayers = $('#dataDiv').data('distanceMeasureMapLayers');
    for (var i in distanceMeasureMapLayers) {
        if (map.getLayer(distanceMeasureMapLayers[i])) {
            map.moveLayer(distanceMeasureMapLayers[i]);
        }
    }

    if (isInFileUploadMode) {
        if (nexrad_factory.nexrad_level == 2) {
            const file_id = nexrad_factory.generate_unique_id();
            if (window.atticData.L2_file_id_zoomed_yet != file_id) { // if we're on a new file
                window.atticData.L2_file_id_zoomed_yet = file_id; // set the new id globally
                nexrad_factory.fly_to_location();
            }
        } else {
            nexrad_factory.fly_to_location();
        }
    }

    if (window?.atticData?.current_RadarUpdater != undefined) {
        window.atticData.current_RadarUpdater.disable();
    }
    if (!isInFileUploadMode) {
        const current_RadarUpdater = new RadarUpdater(nexrad_factory);
        window.atticData.current_RadarUpdater = current_RadarUpdater;
        current_RadarUpdater.enable();
    }

    window.atticData.current_nexrad_location = nexrad_factory.get_location();
    window.atticData.current_elevation_angle = nexrad_factory.elevation_angle;
}

module.exports = plot_to_map;
},{"../../core/map/map":13,"../../core/map/mapFunctions":14,"../../core/map/setLayerOrder":15,"../../core/utils":30,"../../lightning/filter_lightning":36,"../../lightning/load_lightning":37,"../colormaps/colormaps":44,"../libnexrad_helpers/level3/storm_tracks/init_storm_tracks":63,"../updater/RadarUpdater":79,"./create_WebGL_texture":69,"./create_and_show_colorbar":70,"./glsl/fragment.glsl":71,"./glsl/fragment_framebuffer.glsl":72,"./glsl/vertex.glsl":73}],75:[function(require,module,exports){
const ut = require('../../core/utils');
const nexrad_locations = require('../libnexrad/nexrad_locations').NEXRAD_LOCATIONS;
const { get_date_diff } = require('../../core/misc/get_date_diff');
const get_station_status = require('../station_markers/get_station_status');

// https://www.weather.gov/nl2/NEXRADView

function showRadarStatus(station) {
    if (station == 'No Station Selected') {
        ut.displayAtticDialog({
            'title': 'Error',
            'body': '<div>Please <b>select a radar station</b> before attempting to view station info.</div',
            'color': 'rgb(186, 48, 67)',
            'textColor': '#f8d7da',
        })
        return;
    }

    var latestURL = `https://tgftp.nws.noaa.gov/SL.us008001/DF.of/DC.radar/DS.75ftm/SI.${station.toLowerCase()}/sn.last`
    var url = ut.preventFileCaching(ut.phpProxy + latestURL + '#');
    // console.log(url)
    fetch(url)
    .then(response => {
        response.text().then(text => {
            console.log(text);
            const file_modified_date = response.headers.get('Last-Modified');

            var message_date_string;
            var message_date_obj;
            // convert to uppercase so we don't run into case issues
            const message_text_to_use = text.toUpperCase();
            // split the FTM product into lines
            const newline_split = message_text_to_use.split(/\r?\n/);
            // find and return the line that contains 'Message Date'
            const match = newline_split.find(element => { if (element.includes('MESSAGE DATE')) { return true; } });
            if (match !== undefined) { // we want to extract the message send time from the message itself, preferably
                // remove the string from the line, we only need the date text (e.g. 'Sep 14 2022 14:17:04')
                const date_str = match.replace('MESSAGE DATE:  ', '');
                // convert to a date object in UTC time
                const date_obj = new Date(`${date_str} UTC`);
                message_date_obj = date_obj;
                message_date_string = ut.printFancyTime(date_obj);
            } else { // if not, we'll use the "Last-Modified" header for the message file
                // convert to a date object in UTC time
                const date_obj = new Date(`${file_modified_date} UTC`);
                message_date_obj = date_obj;
                message_date_string = ut.printFancyTime(date_obj);
            }

            const date_diff = get_date_diff(message_date_obj, 'radar_message');
            var message_age = `<b class='${date_diff.class}'>${date_diff.formatted} old</b>`;

            const radar_station_status = window.atticData.radar_station_status;
            const current_station_status = radar_station_status[station].status;
            var radar_station_status_div;
            if (radar_station_status == undefined) {
                radar_station_status_div = `<b>unknown</b>`;
            } else {
                if (current_station_status == 'up') {
                    radar_station_status_div = `<b class='new-file'>ONLINE</b>`;
                } else if (current_station_status == 'down') {
                    radar_station_status_div = `<b class='old-file'>OFFLINE</b>`;
                }
            }

            var html_content = 
`<b>Radar Station: </b>${station}
<b>Radar Name: </b>${nexrad_locations[station].name}
<b>Radar Type: </b>${nexrad_locations[station].type}
<b>Station Status: ${radar_station_status_div}</b>

<b>Message Send Time: </b>${message_date_string}
<div style="white-space: pre-wrap;"><b>Message (${message_age}):</b><div class="code">${text}</div></div>`

            ut.displayAtticDialog({
                'title': `${station} Info`,
                'body': html_content,
                'color': 'rgb(37, 94, 151)',
                'textColor': 'rgb(182, 218, 255)',
            })
        });
    });
}

$('#radarStation').on('click', function() {
    showRadarStatus($('#radarStation').text())
})

//module.exports = showRadarStatus;
},{"../../core/misc/get_date_diff":28,"../../core/utils":30,"../libnexrad/nexrad_locations":58,"../station_markers/get_station_status":76}],76:[function(require,module,exports){
const ut = require('../../core/utils');

var allStationStatusObj = {};
function getStationStatus(callback) {
    $.getJSON('https://api.weather.gov/radar/stations', function (data) {
        for (let n = 0; n < data.features.length; n++) {
            var radarStation = data.features[n].properties.id;
            var latt = data.features[n].geometry.coordinates[1];
            var lonn = data.features[n].geometry.coordinates[0];
            var stationType = data.features[n].properties.stationType;

            var nonDateRadstatLastReceivedData = data.features[n].properties.latency.levelTwoLastReceivedTime;
            var radstatLastReceivedData = new Date(data.features[n].properties.latency.levelTwoLastReceivedTime);
            var currentTimeForStatus = new Date();
            var timeDiff = currentTimeForStatus - radstatLastReceivedData;
            var formattedLastReceivedData = ut.printFancyTime(radstatLastReceivedData);

            if (timeDiff >= 900000) {
                //allStationStatusArray.push([radarStation, 'down', [nonDateRadstatLastReceivedData, stationType]]);
                allStationStatusObj[radarStation] = {
                    'status': 'down',
                    'lastRecievedL2': nonDateRadstatLastReceivedData,
                    'stationType': stationType
                }
            } else if (timeDiff < 900000) {
                //allStationStatusArray.push([radarStation, 'up', [nonDateRadstatLastReceivedData, stationType]]);
                allStationStatusObj[radarStation] = {
                    'status': 'up',
                    'lastRecievedL2': nonDateRadstatLastReceivedData,
                    'stationType': stationType
                }
            }
        }
        $('#dataDiv').data('stationStatusObj', allStationStatusObj);
        callback(allStationStatusObj);
    })
}

module.exports = getStationStatus;
},{"../../core/utils":30}],77:[function(require,module,exports){
const createMenuOption = require('../../core/menu/createMenuOption');
const showStations = require('./station_markers');
const ut = require('../../core/utils');
const map = require('../../core/map/map');

const divElem = '#stationMenuItemDiv';
const iconElem = '#stationMenuItemIcon';

$(iconElem).on('click', function() {
    if ($(iconElem).hasClass('icon-grey')) {
        $(iconElem).removeClass('icon-grey');
        $(iconElem).addClass('icon-blue');

        $('#dataDiv').data('stationMarkersVisible', true);
        if (map.getLayer('stationSymbolLayer')) {
            // station marker layer already exists, simply toggle visibility here
            map.setLayoutProperty('stationSymbolLayer', 'visibility', 'visible');
        } else {
            // station marker layer does not exist, load it into the map style
            showStations();
        }
    } else if ($(iconElem).hasClass('icon-blue')) {
        $(iconElem).removeClass('icon-blue');
        $(iconElem).addClass('icon-grey');

        $('#dataDiv').data('stationMarkersVisible', false);
        // hide the station marker layer
        map.setLayoutProperty('stationSymbolLayer', 'visibility', 'none');
    }
})

$('#stationMenuItemIcon').removeClass('icon-grey');
$('#stationMenuItemIcon').addClass('icon-blue');
$('#dataDiv').data('stationMarkersVisible', true);
setTimeout(function() {
    showStations();
}, 200)
},{"../../core/map/map":13,"../../core/menu/createMenuOption":19,"../../core/utils":30,"./station_markers":78}],78:[function(require,module,exports){
const turf = require('@turf/turf');
const ut = require('../../core/utils');
const map = require('../../core/map/map');
const get_station_status = require('./get_station_status');
const set_layer_order = require('../../core/map/setLayerOrder');
const icons = require('../../core/map/icons/icons');

const NEXRADLevel2File = require('../libnexrad/level2/level2_parser');
const Level2Factory = require('../libnexrad/level2/level2_factory');

const NEXRADLevel3File = require('../libnexrad/level3/level3_parser');
const Level3Factory = require('../libnexrad/level3/level3_factory');

const loaders_nexrad = require('../libnexrad/loaders_nexrad');
const nexrad_locations = require('../libnexrad/nexrad_locations').NEXRAD_LOCATIONS;

function _copy(obj) {
    return JSON.parse(JSON.stringify(obj));
}

function do_when_map_load(func) {
    setTimeout(function() {
        if (map.loaded()) {
            func();
        } else {
            map.on('load', function() {
                func();
            })
        }
    }, 0)
}

/**
 * Helper function that generates a geojson object from a simple object with radar station data.
 * 
 * @param {Object} status_info OPTIONAL - An object containing the status of each radar station, from the "get_station_status" function.
 * @returns {Object} A geojson object containing the radar station data.
 */
function _generate_stations_geojson(status_info = null) {
    var points = [];
    for (var station in nexrad_locations) {
        if (nexrad_locations[station].NONSTANDARD == undefined || nexrad_locations[station].NONSTANDARD == false) {
            if (nexrad_locations[station].type == 'WSR-88D' || nexrad_locations[station].type == 'TDWR') {
                const lat = nexrad_locations[station].lat;
                const lon = nexrad_locations[station].lon;

                const station_properties = _copy(nexrad_locations[station]);
                station_properties.station_id = station;
                if (status_info != null) {
                    station_properties.status = status_info[station].status;
                }

                const point = turf.point([lon, lat], station_properties);
                points.push(point);
            }
        }
    }
    const feature_collection = turf.featureCollection(points);
    return feature_collection;
}

/**
 * Helper function that adds the radar station layer to the map.
 * 
 * @param {Object} radar_stations_geojson A geojson object containing the radar station data. Comes from the "_generate_stations_geojson" function.
 * @param {Function} callback A callback function.
 */
function _add_stations_layer(radar_stations_geojson, callback) {
    do_when_map_load(() => {
        icons.add_icon_svg([
            [icons.icons.grey_station_marker, 'grey_station'],
            [icons.icons.blue_station_marker, 'blue_station'],
            [icons.icons.red_station_marker, 'red_station'],
            [icons.icons.orange_station_marker, 'orange_station'],
        ], () => {
            map.addSource('stationSymbolLayer', {
                'type': 'geojson',
                'generateId': true,
                'data': radar_stations_geojson
            });

            // Add a symbol layer
            map.addLayer({
                'id': 'stationSymbolLayer',
                'type': 'symbol',
                'source': 'stationSymbolLayer',
                'layout': {
                    'icon-image': [
                        'case',
                        ['==', ['get', 'clicked'], 'yes'],
                        'blue_station',
                        ['==', ['get', 'status'], 'down'],
                        'red_station',
                        ['==', ['get', 'type'], 'TDWR'],
                        'orange_station',
                        // ['==', ['feature-state', 'color'], 1],
                        // 'dark_grey_station_marker', // mouse-over
                        // ['==', ['feature-state', 'color'], 2],
                        // 'grey_station_marker',
                        'grey_station'
                    ],

                    'icon-size': 0.23,
                    'text-field': ['get', 'station_id'],
                    'text-size': 13,
                    'text-font': [
                        'Arial Unicode MS Bold'
                    ],
                },
                'paint': {
                    'text-color': 'black'
                }
            });

            get_station_status((data) => {
                window.atticData.radar_station_status = data;
                const statusified_geojson = _generate_stations_geojson(data);
                map.getSource('stationSymbolLayer').setData(statusified_geojson);
            });

            set_layer_order();

            callback();
        });
    });
}

/**
 * Code that executes when the mouse enters a station's bubble
 */
function mouse_over() {
    map.getCanvas().style.cursor = 'pointer';
}
/**
 * Code that executes when the mouse leaves a station's bubble
 */
function mouse_out() {
    map.getCanvas().style.cursor = '';
}

function mouse_move(e) {
    const station = e.features[0].properties.station_id;
    const geojson = map.getSource('stationSymbolLayer')._data;
    for (var i in geojson.features) {
        if (geojson.features[i].properties.station_id == station) {
            geojson.features[i].properties.clicked = 'yes';
        } else {
            geojson.features[i].properties.clicked = 'no';
        }
    }
    map.getSource('stationSymbolLayer').setData(geojson);
}

/**
 * Function that enables all mouse-related event listeners for the radar station layer
 */
function _enable_mouse_listeners() {
    map.on('mouseover', 'stationSymbolLayer', mouse_over);
    map.on('mouseout', 'stationSymbolLayer', mouse_out);
    map.on('click', 'stationSymbolLayer', mouse_move);
}
/**
 * Function that disables all mouse-related event listeners for the radar station layer
 */
function _disable_mouse_listeners() {
    map.off('mouseover', 'stationSymbolLayer', mouse_over);
    map.off('mouseout', 'stationSymbolLayer', mouse_out);
    map.off('click', 'stationSymbolLayer', mouse_move);
}

/**
 * Initialize the mouse listeners for the first time.
 */
function _init_mouse_listeners() {
    _enable_mouse_listeners();
}
/**
 * Initialize the click listener for the first time.
 */
function _init_click_listener() {
    map.on('click', 'stationSymbolLayer', (e) => {
        const base = e.features[0].properties;
        const clickedStation = base.station_id;
        window.atticData.currentStation = clickedStation;
        $('#radarStation').html(clickedStation);
        $('#radarLocation').html(nexrad_locations[clickedStation].name);
        const stationType = base.type;
        window.atticData.L2_file_id = '';

        var productToLoad;
        var abbvProductToLoad;
        if (stationType == 'WSR-88D') {
            $('#wsr88d_psm').show();
            $('#tdwr_psm').hide();
            $('#level2_psm').hide();

            productToLoad = 'N0B';
            abbvProductToLoad = 'ref';
            // $(`.productOption[value="${abbvProductToLoad}"]`).html()
            $('#productsDropdownTriggerText').html(window.longProductNames[abbvProductToLoad]);
        } else if (stationType == 'TDWR') {
            $('#wsr88d_psm').hide();
            $('#tdwr_psm').show();
            $('#level2_psm').hide();

            productToLoad = 'TZ0';
            abbvProductToLoad = 'sr-ref';
            // $(`.productOption[value="${abbvProductToLoad}"]`).html()
            $('#productsDropdownTriggerText').html(window.longProductNames[abbvProductToLoad]);
        }

        $('#radarInfoSpan').show();

        window.atticData.from_file_upload = false;
        loaders_nexrad.quick_level_3_plot(clickedStation, productToLoad, (L3Factory) => {});
    });
}


/**
 * Main function.
 */
function showStations() {
    const radar_stations_geojson = _generate_stations_geojson();

    _add_stations_layer(radar_stations_geojson, () => {
        _init_mouse_listeners();
        _init_click_listener();
    });
}

module.exports = showStations;
},{"../../core/map/icons/icons":12,"../../core/map/map":13,"../../core/map/setLayerOrder":15,"../../core/utils":30,"../libnexrad/level2/level2_factory":52,"../libnexrad/level2/level2_parser":53,"../libnexrad/level3/level3_factory":54,"../libnexrad/level3/level3_parser":56,"../libnexrad/loaders_nexrad":57,"../libnexrad/nexrad_locations":58,"./get_station_status":76,"@turf/turf":105}],79:[function(require,module,exports){
const product_abbv_dict = {
    'N0Q': 'p94r0',
    'N1Q': 'p94r1',
    'N2Q': 'p94r2',
    'N3Q': 'p94r3',

    'N0U': 'p99v0',
    'N1U': 'p99v1',
    'N2U': 'p99v2',
    'N3U': 'p99v3',

    // 'DVL': '134il'
}

class RadarUpdater {
    constructor(nexrad_factory) {
        const loaders_nexrad = require('../libnexrad/loaders_nexrad');

        this.nexrad_factory = nexrad_factory;
        this.latest_date = undefined;

        var get_latest_url_func;
        var plot_func;
        if (this.nexrad_factory.nexrad_level == 2) {
            get_latest_url_func = loaders_nexrad.get_latest_level_2_url;
        } else if (this.nexrad_factory.nexrad_level == 3) {
            get_latest_url_func = loaders_nexrad.get_latest_level_3_url;
            plot_func = loaders_nexrad.level_3_plot_from_url;
        }
        this.get_latest_url_func = get_latest_url_func;
        this.plot_func = plot_func;
    }

    enable() {
        this._check_for_new_file();
        // check for a new radar scan every 15 seconds
        this.interval = setInterval(() => {
            this._check_for_new_file();
        }, 15000);
    }

    disable() {
        clearInterval(this.interval);
    }

    _check_for_new_file() {
        const { DateTime } = require('luxon');
        const formatted_now = DateTime.now().toFormat('h:mm.ss a ZZZZ');

        // this is so we can update the time elapsed counter in the top right
        this.nexrad_factory.display_file_info();

        var product = this.nexrad_factory.product_abbv;
        if (product_abbv_dict.hasOwnProperty(product)) {
            product = product_abbv_dict[product];
        }
        this.get_latest_url_func(this.nexrad_factory.station, product, 0, (url, fetched_date) => {
            if (this.latest_date == undefined) {
                this.latest_date = fetched_date;
            }

            // console.log(fetched_date, this.latest_date);
            // console.log(url);

            if (fetched_date.getTime() > this.latest_date.getTime()) {
                console.log(`Successfully found new radar scan at ${formatted_now}.`);
                this.plot_func(url);
            } else {
                console.log(`There is no new radar scan as of ${formatted_now}.`);
            }
        })
    }
}

module.exports = RadarUpdater;
},{"../libnexrad/loaders_nexrad":57,"luxon":111}],80:[function(require,module,exports){
(function (Buffer){(function (){
const ut = require('../../core/utils');
const loaders_nexrad = require('../libnexrad/loaders_nexrad');
const map_funcs = require('../../core/map/mapFunctions');
const detect_level = require('../libnexrad/detect_level');
const { deal_with_storm_track_layers, deal_with_tvs_layers } = require('../libnexrad_helpers/level3/storm_tracks/init_storm_tracks');

function reset_everything() {
    // $('#drop_zone').off();
    // $('#drop_zone').replaceWith($('#drop_zone').clone());
    // $('#hiddenFileUploader').off();
    // $('.levelRadioInputs').off();

    // $('#file_upload_contents').append($('#hiddenFileUploader'));
    // $('#file_upload_contents').append($('#drop_zone'));

    $('#atcDlgClose').click();
}

/*
* https://stackoverflow.com/a/55576752
*/

function load_file(files_obj) {
    const uploaded_file = files_obj[0];

    const reader = new FileReader();
    reader.addEventListener('load', function () {
        const filename = uploaded_file.name;
        const buffer = Buffer.from(this.result);
        const detected_radar_level = detect_level(buffer);

        if (detected_radar_level == 3) {
            loaders_nexrad.return_level_3_factory_from_buffer(buffer, (L3Factory) => {
                window.atticData.from_file_upload = true;
                console.log(L3Factory);

                map_funcs.removeMapLayer('baseReflectivity');
                deal_with_storm_track_layers();
                deal_with_tvs_layers();

                // L3Factory.display_file_info();
                L3Factory.plot();

                reset_everything();
            })
        } else if (detected_radar_level == 2) {
            loaders_nexrad.return_level_2_factory_from_buffer(buffer, filename, (L2Factory) => {
                window.atticData.from_file_upload = true;
                console.log(L2Factory);
                // console.log(L2Factory.list_elevations_and_products())

                map_funcs.removeMapLayer('baseReflectivity');
                deal_with_storm_track_layers();
                deal_with_tvs_layers();

                // L2Factory.display_file_info();
                L2Factory.plot('REF', 1);

                reset_everything();
            })
        } else if (detected_radar_level == undefined) {
            // nothing here yet
            console.error('Level detection failed.');
        }
    }, false);
    reader.readAsArrayBuffer(uploaded_file);
}

function dragEnter(thisObj) {
    $(thisObj).animate({
        backgroundColor: 'rgb(212, 212, 212)',
        'border-width': '5px',
        'border-color': 'rgb(17, 167, 17)'
    }, 150);
}
function dragLeave(thisObj) {
    $(thisObj).animate({
        backgroundColor: 'rgba(0, 0, 0, 0)',
        'border-width': '2px',
        'border-color': 'rgb(136, 136, 136)'
    }, 150);
}

function init_event_listeners() {
    $('#hiddenFileUploader').on('input', () => {
        var files = document.getElementById('hiddenFileUploader').files;
        window.atticData.uploaded_file_name = files[0].name;

        load_file(files);
    })

    const drop_zone = document.getElementById('drop_zone');
    drop_zone.addEventListener('dragover', function(e) {
        e.stopPropagation();
        e.preventDefault();
        e.dataTransfer.dropEffect = 'copy';
    }, false);
    drop_zone.addEventListener('drop', function(e) {
        e.stopPropagation();
        e.preventDefault();

        const files = e.dataTransfer.files;
        window.atticData.uploaded_file_name = files[0].name;
        load_file(files);
    }, false);

    $('#drop_zone').on('mouseenter', function(e) {
        $(this).animate({
            backgroundColor: 'rgb(150, 150, 150)',
        }, 150);
    })
    $('#drop_zone').on('mouseleave', function(e) {
        $(this).animate({
            backgroundColor: 'rgba(0, 0, 0, 0)',
        }, 150);
    })
    $('#drop_zone').on('dragenter', function(e) {
        dragEnter(this);
    })
    $('#drop_zone').on('dragleave drop', function(e) {
        dragLeave(this);
    })
    $('#drop_zone').on('click', function(e) {
        $('#hiddenFileUploader').click();
    })

    // // $('#dataDiv').data('currentLevelInput', '2');
    // window.atticData.current_level_input = 3;
    // $('.levelRadioInputs').on('click', function () {
    //     window.atticData.current_level_input = parseInt(this.value);
    //     // $('#dataDiv').data('currentLevelInput', this.value);
    //     $('#drop_zone').text(`Drop Level ${this.value} file here`);
    // })
}

module.exports = init_event_listeners;
}).call(this)}).call(this,require("buffer").Buffer)
},{"../../core/map/mapFunctions":14,"../../core/utils":30,"../libnexrad/detect_level":51,"../libnexrad/loaders_nexrad":57,"../libnexrad_helpers/level3/storm_tracks/init_storm_tracks":63,"buffer":172}],81:[function(require,module,exports){
const ut = require('../../core/utils');
const arm_functions = require('../../core/menu/atticRadarMenu');
const init_event_listeners = require('./file_upload');

const upload_dialog_content = 
`<input type="file" id="hiddenFileUploader" style="display: none">\
<div id="drop_zone">Drop NEXRAD file here</div>`

$('#armrUploadFileBtn').click(() => {
    arm_functions.hideARMwindow();

    ut.displayAtticDialog({
        'title': 'UPLOAD',
        'body': upload_dialog_content,
        'color': 'rgb(76, 143, 195)',
        'textColor': 'black'
    });

    // add file upload listeners
    init_event_listeners();
})
},{"../../core/menu/atticRadarMenu":17,"../../core/utils":30,"./file_upload":80}],82:[function(require,module,exports){

const nwr_stations = {"WNG681":{"ST":"AK","STATE":"Alaska","COUNTY":"Dillingham","SAME":"002070","SITENAME":"Dillingham","SITELOC":"Dillingham","SITESTATE":"AK","FREQ":"162.500","CALLSIGN":"WNG681","LAT":"59.0422","LON":"-158.455","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"S"},"WNG525":{"ST":"AK","STATE":"Alaska","COUNTY":"Dillingham","SAME":"002070","SITENAME":"Tuklung Mtn.","SITELOC":"Tuklung Mtn.","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"WNG525","LAT":"58.8575","LON":"-159.465833","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"S"},"WXJ81":{"ST":"AK","STATE":"Alaska","COUNTY":"Yukon-Koyukuk","SAME":"002290","SITENAME":"Fairbanks","SITELOC":"Ester Dome","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ81","LAT":"64.8789","LON":"-148.0558","PWR":"1000","STATUS":"NORMAL","WFO":"Fairbanks|AK","REMARKS":"C"},"WXM97":{"ST":"AK","STATE":"Alaska","COUNTY":"Skagway","SAME":"002230","SITENAME":"Haines","SITELOC":"Haines","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"WXM97","LAT":"59.247378","LON":"-135.435426","PWR":"300","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"KZZ86":{"ST":"AK","STATE":"Alaska","COUNTY":"Sitka","SAME":"002220","SITENAME":"Althorp Peak","SITELOC":"Althorp Peak","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"KZZ86","LAT":"58.093889","LON":"-136.41","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"WXJ25":{"ST":"AK","STATE":"Alaska","COUNTY":"Juneau","SAME":"002110","SITENAME":"Juneau","SITELOC":"Juneau","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ25","LAT":"58.301746","LON":"-134.42035","PWR":"300","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"C|N|S|W"},"KZZ87":{"ST":"AK","STATE":"Alaska","COUNTY":"Juneau","SAME":"002110","SITENAME":"Mt. Robert Barron","SITELOC":"Mt. Robert Barron","SITESTATE":"AK","FREQ":"162.450","CALLSIGN":"KZZ87","LAT":"58.226944","LON":"-134.841667","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"W"},"KZZ88":{"ST":"AK","STATE":"Alaska","COUNTY":"Wrangell","SAME":"002275","SITENAME":"Cape Fanshaw","SITELOC":"Cape Fanshaw","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"KZZ88","LAT":"57.204722","LON":"-133.465833","PWR":"5","STATUS":"OUT OF SERVICE","WFO":"Juneau|AK","REMARKS":"ALL"},"KEC43":{"ST":"AK","STATE":"Alaska","COUNTY":"Anchorage","SAME":"002020","SITENAME":"Anchorage","SITELOC":"Anchorage","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"KEC43","LAT":"61.1575","LON":"-149.9872","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"C|N|S|W"},"WNG528":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Bede Mountain","SITELOC":"Bede Mountain","SITESTATE":"AK","FREQ":"162.450","CALLSIGN":"WNG528","LAT":"59.310278","LON":"-151.943889","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"N"},"WXJ24":{"ST":"AK","STATE":"Alaska","COUNTY":"Kenai Peninsula","SAME":"002122","SITENAME":"Homer","SITELOC":"Diamond Ridge","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"WXJ24","LAT":"59.6769","LON":"-151.615278","PWR":"1000","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"S|W"},"KZZ97":{"ST":"AK","STATE":"Alaska","COUNTY":"Kenai Peninsula","SAME":"002122","SITENAME":"Ninilchik","SITELOC":"Ninilchik","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"KZZ97","LAT":"60.043611","LON":"-151.6744","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"C| W"},"WNG526":{"ST":"AK","STATE":"Alaska","COUNTY":"Kenai Peninsula","SAME":"002122","SITENAME":"Rugged Island","SITELOC":"Rugged Island","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"WNG526","LAT":"59.860661","LON":"-149.39478","PWR":"5","STATUS":"OUT OF SERVICE","WFO":"Anchorage|AK","REMARKS":"S"},"KEC81":{"ST":"AK","STATE":"Alaska","COUNTY":"Kenai Peninsula","SAME":"002122","SITENAME":"Seward","SITELOC":"Spring Creek","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"KEC81","LAT":"60.083348","LON":"-149.344095","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"E"},"WWG39":{"ST":"AK","STATE":"Alaska","COUNTY":"Kenai Peninsula","SAME":"002122","SITENAME":"Soldotna","SITELOC":"Soldotna","SITESTATE":"AK","FREQ":"162.475","CALLSIGN":"WWG39","LAT":"60.508346","LON":"-151.02448","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"C|W"},"KZZ92":{"ST":"AK","STATE":"Alaska","COUNTY":"Ketchikan Gateway","SAME":"002130","SITENAME":"Duke Island","SITELOC":"Duke Island","SITESTATE":"AK","FREQ":"162.450","CALLSIGN":"KZZ92","LAT":"54.883333","LON":"-131.358333","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"KZZ96":{"ST":"AK","STATE":"Alaska","COUNTY":"Ketchikan Gateway","SAME":"002130","SITENAME":"Gravina Island","SITELOC":"Gravina Island","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"KZZ96","LAT":"55.3675","LON":"-131.8","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"WXJ26":{"ST":"AK","STATE":"Alaska","COUNTY":"Ketchikan Gateway","SAME":"002130","SITENAME":"Ketchikan","SITELOC":"Point Higgins","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ26","LAT":"55.460822","LON":"-131.810428","PWR":"1000","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"C|N|E|S|W"},"WNG529":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Cape Gull","SITELOC":"Cape Gull","SITESTATE":"AK","FREQ":"162.500","CALLSIGN":"WNG529","LAT":"58.199694","LON":"-154.205084","PWR":"5","STATUS":"OUT OF SERVICE","WFO":"Kodiak|AK (WSO)","REMARKS":"W"},"WXJ78":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Kodiak","SITELOC":"Woman's Bay","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ78","LAT":"57.7344","LON":"-152.5014","PWR":"1000","STATUS":"NORMAL","WFO":"Kodiak|AK (WSO)","REMARKS":"C|E"},"WNG716":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Marmot Island","SITELOC":"Marmot Island","SITESTATE":"AK","FREQ":"162.500","CALLSIGN":"WNG716","LAT":"58.235833","LON":"-151.820833","PWR":"5","STATUS":"NORMAL","WFO":"Kodiak|AK (WSO)","REMARKS":"N|E"},"WZ2556":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Middle Cape","SITELOC":"Kodiak Island","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"WZ2556","LAT":"57.3728","LON":"-154.6264","PWR":"5","STATUS":"OUT OF SERVICE","WFO":"Kodiak|AK (WSO)","REMARKS":""},"WNG531":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Pillar Mtn.","SITELOC":"Pillar Mtn.","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"WNG531","LAT":"57.788202","LON":"-152.437856","PWR":"5","STATUS":"NORMAL","WFO":"Kodiak|AK (WSO)","REMARKS":"E"},"KZZ90":{"ST":"AK","STATE":"Alaska","COUNTY":"Bristol Bay","SAME":"002060","SITENAME":"Raspberry Island","SITELOC":"Raspberry Island","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"KZZ90","LAT":"58.066389","LON":"-153.376944","PWR":"5","STATUS":"NORMAL","WFO":"Kodiak|AK (WSO)","REMARKS":"N|W"},"WNG718":{"ST":"AK","STATE":"Alaska","COUNTY":"Kodiak Island","SAME":"002150","SITENAME":"Sitkinak Dome","SITELOC":"Sitkinak Dome","SITESTATE":"AK","FREQ":"162.450","CALLSIGN":"WNG718","LAT":"56.559444","LON":"-154.182222","PWR":"5","STATUS":"OUT OF SERVICE","WFO":"Kodiak|AK (WSO)","REMARKS":"S"},"":{"ST":"VI","STATE":"Virgin Islands","COUNTY":"St. John","SAME":"078020","SITENAME":"---No  NWR Coverage---","SITELOC":"","SITESTATE":"","FREQ":"","CALLSIGN":"","LAT":"","LON":"","PWR":"0","STATUS":"NORMAL","WFO":"","REMARKS":""},"KPS503":{"ST":"AK","STATE":"Alaska","COUNTY":"Copper River","SAME":"002066","SITENAME":"Glennallen","SITELOC":"Glennallen","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"KPS503","LAT":"62.1042","LON":"-146.174722","PWR":"1000","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"KZZ98":{"ST":"AK","STATE":"Alaska","COUNTY":"Anchorage","SAME":"002020","SITENAME":"Wasilla","SITELOC":"Wasilla","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"KZZ98","LAT":"61.601269","LON":"-149.363385","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"N|E|W"},"WXJ62":{"ST":"AK","STATE":"Alaska","COUNTY":"Nome","SAME":"002180","SITENAME":"Nome","SITELOC":"Fort Davis","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ62","LAT":"64.486667","LON":"-165.3025","PWR":"1000","STATUS":"NORMAL","WFO":"Fairbanks|AK","REMARKS":"C"},"KZZ53":{"ST":"AK","STATE":"Alaska","COUNTY":"North Slope","SAME":"002185","SITENAME":"Utqiagvik","SITELOC":"Utqiagvik","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"KZZ53","LAT":"71.288889","LON":"-156.775278","PWR":"300","STATUS":"NORMAL","WFO":"Fairbanks|AK","REMARKS":"N"},"KWN30":{"ST":"AK","STATE":"Alaska","COUNTY":"Northwest Arctic","SAME":"002188","SITENAME":"Kotzebue","SITELOC":"Kotzebue","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"KWN30","LAT":"66.8861","LON":"-162.613611","PWR":"1000","STATUS":"NORMAL","WFO":"Fairbanks|AK","REMARKS":"C|S|W"},"KAD96":{"ST":"AK","STATE":"Alaska","COUNTY":"Petersburg","SAME":"002195","SITENAME":"Manleyville","SITELOC":"Manleyville","SITESTATE":"AK","FREQ":"162.500","CALLSIGN":"KAD96","LAT":"57.105556","LON":"-134.816944","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"KXI80":{"ST":"AK","STATE":"Alaska","COUNTY":"Prince of Wales-Hyder","SAME":"002198","SITENAME":"Craig","SITELOC":"Craig","SITESTATE":"AK","FREQ":"162.475","CALLSIGN":"KXI80","LAT":"55.474069","LON":"-133.137279","PWR":"1000","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"W"},"KZZ89":{"ST":"AK","STATE":"Alaska","COUNTY":"Prince of Wales-Hyder","SAME":"002198","SITENAME":"Sukkwan Island","SITELOC":"Sukkwan Island","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"KZZ89","LAT":"55.111944","LON":"-132.758611","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"WZ2555":{"ST":"AK","STATE":"Alaska","COUNTY":"Sitka","SAME":"002220","SITENAME":"Duffield Peninsula","SITELOC":"Duffield Peninsula","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"WZ2555","LAT":"57.5228","LON":"-135.4617","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":""},"KZZ95":{"ST":"AK","STATE":"Alaska","COUNTY":"Sitka","SAME":"002220","SITENAME":"Mt. McArthur","SITELOC":"Mt. McArthur","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"KZZ95","LAT":"56.069167","LON":"-134.191944","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"WXJ80":{"ST":"AK","STATE":"Alaska","COUNTY":"Sitka","SAME":"002220","SITENAME":"Sitka","SITELOC":"Biorka Island","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ80","LAT":"56.854937","LON":"-135.536129","PWR":"1000","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"C|S|W"},"KPS504":{"ST":"AK","STATE":"Alaska","COUNTY":"Denali","SAME":"002068","SITENAME":"Nenana","SITELOC":"Nenana","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"KPS504","LAT":"64.581944","LON":"-149.079444","PWR":"300","STATUS":"NORMAL","WFO":"Fairbanks|AK","REMARKS":""},"WXJ83":{"ST":"AK","STATE":"Alaska","COUNTY":"Wrangell","SAME":"002275","SITENAME":"Wrangell","SITELOC":"Wrangell","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"WXJ83","LAT":"56.472495","LON":"-132.386953","PWR":"1000","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"KZZ91":{"ST":"AK","STATE":"Alaska","COUNTY":"Wrangell","SAME":"002275","SITENAME":"Zarembo Island","SITELOC":"Zarembo Island","SITESTATE":"AK","FREQ":"162.450","CALLSIGN":"KZZ91","LAT":"56.345278","LON":"-132.861389","PWR":"5","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"ALL"},"WXK69":{"ST":"AK","STATE":"Alaska","COUNTY":"Yakutat","SAME":"002282","SITENAME":"Yakutat","SITELOC":"Monti Bay","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"WXK69","LAT":"59.510673","LON":"-139.671921","PWR":"1000","STATUS":"NORMAL","WFO":"Juneau|AK","REMARKS":"C|S"},"WNG607":{"ST":"AL","STATE":"Alabama","COUNTY":"Wilcox","SAME":"001131","SITENAME":"Greenville","SITELOC":"Greenville","SITESTATE":"AL","FREQ":"162.425","CALLSIGN":"WNG607","LAT":"31.877222","LON":"-86.728333","PWR":"300","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"KIH55":{"ST":"AL","STATE":"Alabama","COUNTY":"Wilcox","SAME":"001131","SITENAME":"Montgomery","SITELOC":"WAIQ TV","SITESTATE":"AL","FREQ":"162.400","CALLSIGN":"KIH55","LAT":"32.381944","LON":"-86.292583","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"WNG635":{"ST":"AL","STATE":"Alabama","COUNTY":"Wilcox","SAME":"001131","SITENAME":"Selma","SITELOC":"Selma","SITESTATE":"AL","FREQ":"162.450","CALLSIGN":"WNG635","LAT":"32.5256","LON":"-86.9828","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"WWF55":{"ST":"AL","STATE":"Alabama","COUNTY":"Washington","SAME":"001129","SITENAME":"Jackson","SITELOC":"ToddTown","SITESTATE":"AL","FREQ":"162.500","CALLSIGN":"WWF55","LAT":"31.594722","LON":"-87.845278","PWR":"1000","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"KEC61":{"ST":"MS","STATE":"Mississippi","COUNTY":"Jackson","SAME":"028059","SITENAME":"Mobile","SITELOC":"Mobile","SITESTATE":"AL","FREQ":"162.550","CALLSIGN":"KEC61","LAT":"30.659444","LON":"-87.8925","PWR":"1000","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"KEC86":{"ST":"FL","STATE":"Florida","COUNTY":"Santa Rosa","SAME":"012113","SITENAME":"Pensacola","SITELOC":"Milton","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"KEC86","LAT":"30.588611","LON":"-87.070556","PWR":"1000","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"KIH56":{"ST":"GA","STATE":"Georgia","COUNTY":"Quitman","SAME":"013239","SITENAME":"Louisville","SITELOC":"Texasville","SITESTATE":"AL","FREQ":"162.475","CALLSIGN":"KIH56","LAT":"31.718056","LON":"-85.434139","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"KIH54":{"ST":"AL","STATE":"Alabama","COUNTY":"Walker","SAME":"001127","SITENAME":"Birmingham","SITELOC":"WBIQ TV","SITESTATE":"AL","FREQ":"162.550","CALLSIGN":"KIH54","LAT":"33.489083","LON":"-86.799306","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"KIH60":{"ST":"MS","STATE":"Mississippi","COUNTY":"Noxubee","SAME":"028103","SITENAME":"Tuscaloosa","SITELOC":"WVUA FM","SITESTATE":"AL","FREQ":"162.400","CALLSIGN":"KIH60","LAT":"33.209222","LON":"-87.548611","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"WNG606":{"ST":"AL","STATE":"Alabama","COUNTY":"Walker","SAME":"001127","SITENAME":"Oneonta","SITELOC":"Oneonta","SITESTATE":"AL","FREQ":"162.425","CALLSIGN":"WNG606","LAT":"33.985861","LON":"-86.459972","PWR":"300","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"WWF54":{"ST":"AL","STATE":"Alabama","COUNTY":"Tallapoosa","SAME":"001123","SITENAME":"Auburn","SITELOC":"Auburn","SITESTATE":"AL","FREQ":"162.525","CALLSIGN":"WWF54","LAT":"32.622078","LON":"-85.501314","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"KIH59":{"ST":"FL","STATE":"Florida","COUNTY":"Walton","SAME":"012131","SITENAME":"Dozier","SITELOC":"Dozier","SITESTATE":"AL","FREQ":"162.550","CALLSIGN":"KIH59","LAT":"31.554444","LON":"-86.392222","PWR":"1000","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"KIH58":{"ST":"GA","STATE":"Georgia","COUNTY":"Carroll","SAME":"013045","SITENAME":"Anniston","SITELOC":"Mt. Cheaha","SITESTATE":"AL","FREQ":"162.475","CALLSIGN":"KIH58","LAT":"33.485139","LON":"-85.808889","PWR":"1000","STATUS":"OUT OF SERVICE","WFO":"Birmingham|AL","REMARKS":""},"KXI76":{"ST":"GA","STATE":"Georgia","COUNTY":"Troup","SAME":"013285","SITENAME":"La Grange","SITELOC":"La Grange","SITESTATE":"GA","FREQ":"162.450","CALLSIGN":"KXI76","LAT":"33.021361","LON":"-84.997833","PWR":"300","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WWF44":{"ST":"AL","STATE":"Alabama","COUNTY":"Marshall","SAME":"001095","SITENAME":"Henagar","SITELOC":"Pea Ridge","SITESTATE":"AL","FREQ":"162.500","CALLSIGN":"WWF44","LAT":"34.613611","LON":"-85.680278","PWR":"1000","STATUS":"NORMAL","WFO":"Huntsville|AL","REMARKS":""},"WXJ72":{"ST":"GA","STATE":"Georgia","COUNTY":"Walker","SAME":"013295","SITENAME":"Summerville","SITELOC":"Taylors Ridge","SITESTATE":"GA","FREQ":"162.450","CALLSIGN":"WXJ72","LAT":"34.469028","LON":"-85.297306","PWR":"300","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WXL72":{"ST":"MS","STATE":"Mississippi","COUNTY":"Lauderdale","SAME":"028075","SITENAME":"Demopolis","SITELOC":"Jefferson","SITESTATE":"AL","FREQ":"162.475","CALLSIGN":"WXL72","LAT":"32.362389","LON":"-87.87525","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"KIH49":{"ST":"MS","STATE":"Mississippi","COUNTY":"Wayne","SAME":"028153","SITENAME":"Meridian","SITELOC":"Rose Hill","SITESTATE":"MS","FREQ":"162.550","CALLSIGN":"KIH49","LAT":"32.1386","LON":"-89.093694","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"WWH20":{"ST":"FL","STATE":"Florida","COUNTY":"Washington","SAME":"012133","SITENAME":"Westville","SITELOC":"Westville","SITESTATE":"FL","FREQ":"162.450","CALLSIGN":"WWH20","LAT":"30.8275","LON":"-85.926944","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"KIH57":{"ST":"MS","STATE":"Mississippi","COUNTY":"Itawamba","SAME":"028057","SITENAME":"Florence","SITELOC":"Crooked Oak","SITESTATE":"AL","FREQ":"162.475","CALLSIGN":"KIH57","LAT":"34.5839","LON":"-87.7872","PWR":"1000","STATUS":"NORMAL","WFO":"Huntsville|AL","REMARKS":""},"WNG646":{"ST":"FL","STATE":"Florida","COUNTY":"Santa Rosa","SAME":"012113","SITENAME":"Brewton","SITELOC":"Brewton","SITESTATE":"AL","FREQ":"162.475","CALLSIGN":"WNG646","LAT":"31.264722","LON":"-87.125833","PWR":"1000","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"WNG642":{"ST":"AL","STATE":"Alabama","COUNTY":"Marshall","SAME":"001095","SITENAME":"Arab","SITELOC":"Marshall County","SITESTATE":"AL","FREQ":"162.525","CALLSIGN":"WNG642","LAT":"34.3444","LON":"-86.4389","PWR":"300","STATUS":"NORMAL","WFO":"Huntsville|AL","REMARKS":""},"WWF66":{"ST":"AL","STATE":"Alabama","COUNTY":"Cullman","SAME":"001043","SITENAME":"Cullman","SITELOC":"Cullman","SITESTATE":"AL","FREQ":"162.450","CALLSIGN":"WWF66","LAT":"34.171389","LON":"-86.844167","PWR":"300","STATUS":"NORMAL","WFO":"Huntsville|AL","REMARKS":""},"KIH20":{"ST":"TN","STATE":"Tennessee","COUNTY":"Lincoln","SAME":"047103","SITENAME":"Huntsville","SITELOC":"Huntsville","SITESTATE":"AL","FREQ":"162.400","CALLSIGN":"KIH20","LAT":"34.737778","LON":"-86.533889","PWR":"1000","STATUS":"NORMAL","WFO":"Huntsville|AL","REMARKS":""},"WWF53":{"ST":"MS","STATE":"Mississippi","COUNTY":"Monroe","SAME":"028095","SITENAME":"Winfield","SITELOC":"Guin","SITESTATE":"AL","FREQ":"162.525","CALLSIGN":"WWF53","LAT":"33.937139","LON":"-87.875111","PWR":"1000","STATUS":"NORMAL","WFO":"Birmingham|AL","REMARKS":""},"KZZ70":{"ST":"GA","STATE":"Georgia","COUNTY":"Terrell","SAME":"013273","SITENAME":"Blakely","SITELOC":"Blakely","SITESTATE":"GA","FREQ":"162.525","CALLSIGN":"KZZ70","LAT":"31.402222","LON":"-84.959167","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"WNG633":{"ST":"GA","STATE":"Georgia","COUNTY":"Seminole","SAME":"013253","SITENAME":"Sneads","SITELOC":"Sneads (AG)","SITESTATE":"FL","FREQ":"162.425","CALLSIGN":"WNG633","LAT":"30.639167","LON":"-84.979722","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"WNG554":{"ST":"TN","STATE":"Tennessee","COUNTY":"Moore","SAME":"047127","SITENAME":"Winchester","SITELOC":"Belvidere","SITESTATE":"TN","FREQ":"162.525","CALLSIGN":"WNG554","LAT":"35.0875","LON":"-86.111667","PWR":"1000","STATUS":"NORMAL","WFO":"Huntsville|AL","REMARKS":""},"KUT404":{"ST":"MS","STATE":"Mississippi","COUNTY":"Pontotoc","SAME":"028115","SITENAME":"Aberdeen","SITELOC":"Hatley","SITESTATE":"MS","FREQ":"162.450","CALLSIGN":"KUT404","LAT":"33.9269","LON":"-88.5603","PWR":"300","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"WZ2506":{"ST":"TN","STATE":"Tennessee","COUNTY":"Wayne","SAME":"047181","SITENAME":"Clifton","SITELOC":"Cypress Inn (AG)","SITESTATE":"TN","FREQ":"162.500","CALLSIGN":"WZ2506","LAT":"35.2736","LON":"-87.9322","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WXM32":{"ST":"GA","STATE":"Georgia","COUNTY":"Webster","SAME":"013307","SITENAME":"Columbus","SITELOC":"Phenix City","SITESTATE":"AL","FREQ":"162.400","CALLSIGN":"WXM32","LAT":"32.4667","LON":"-85.0561","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WNG640":{"ST":"MS","STATE":"Mississippi","COUNTY":"Wayne","SAME":"028153","SITENAME":"Leakesville","SITELOC":"Green County","SITESTATE":"MS","FREQ":"162.425","CALLSIGN":"WNG640","LAT":"31.176667","LON":"-88.597222","PWR":"1000","STATUS":"NORMAL","WFO":"Mobile|AL","REMARKS":""},"WXJ55":{"ST":"AR","STATE":"Arkansas","COUNTY":"Yell","SAME":"005149","SITENAME":"Little Rock","SITELOC":"Shinall Mtn.","SITESTATE":"AR","FREQ":"162.550","CALLSIGN":"WXJ55","LAT":"34.799722","LON":"-92.499444","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WXJ54":{"ST":"AR","STATE":"Arkansas","COUNTY":"Lincoln","SAME":"005079","SITENAME":"Star City","SITELOC":"Star City","SITESTATE":"AR","FREQ":"162.400","CALLSIGN":"WXJ54","LAT":"33.954306","LON":"-91.878972","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WNG725":{"ST":"LA","STATE":"Louisiana","COUNTY":"Claiborne","SAME":"022027","SITENAME":"El Dorado","SITELOC":"El Dorado","SITESTATE":"AR","FREQ":"162.525","CALLSIGN":"WNG725","LAT":"33.128333","LON":"-92.469278","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"KGG86":{"ST":"LA","STATE":"Louisiana","COUNTY":"West Carroll","SAME":"022123","SITENAME":"Fountain Hill","SITELOC":"Fountain Hill","SITESTATE":"AR","FREQ":"162.475","CALLSIGN":"KGG86","LAT":"33.3894","LON":"-91.853889","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"WXL66":{"ST":"AR","STATE":"Arkansas","COUNTY":"Van Buren","SAME":"005141","SITENAME":"Mountain View","SITELOC":"Fox","SITESTATE":"AR","FREQ":"162.450","CALLSIGN":"WXL66","LAT":"35.813111","LON":"-92.290028","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WWG54":{"ST":"AR","STATE":"Arkansas","COUNTY":"Marion","SAME":"005089","SITENAME":"Yellville","SITELOC":"Rea Valley","SITESTATE":"AR","FREQ":"162.500","CALLSIGN":"WWG54","LAT":"36.202639","LON":"-92.558111","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WXJ52":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Delaware","SAME":"040041","SITENAME":"Fayetteville","SITELOC":"Winslow","SITESTATE":"AR","FREQ":"162.475","CALLSIGN":"WXJ52","LAT":"35.814333","LON":"-94.028194","PWR":"1000","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"WWH38":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Ottawa","SAME":"040115","SITENAME":"Grove","SITELOC":"Grove","SITESTATE":"OK","FREQ":"162.525","CALLSIGN":"WWH38","LAT":"36.455","LON":"-94.779167","PWR":"300","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"WNG694":{"ST":"MO","STATE":"Missouri","COUNTY":"McDonald","SAME":"029119","SITENAME":"Springdale","SITELOC":"Washington County","SITESTATE":"AR","FREQ":"162.400","CALLSIGN":"WNG694","LAT":"36.179444","LON":"-94.086111","PWR":"300","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"WXN92":{"ST":"AR","STATE":"Arkansas","COUNTY":"Searcy","SAME":"005129","SITENAME":"Harrison","SITELOC":"Harrison","SITESTATE":"AR","FREQ":"162.525","CALLSIGN":"WXN92","LAT":"36.1692","LON":"-93.2497","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WXJ48":{"ST":"AR","STATE":"Arkansas","COUNTY":"Union","SAME":"005139","SITENAME":"Gurdon","SITELOC":"Gurdon","SITESTATE":"AR","FREQ":"162.475","CALLSIGN":"WXJ48","LAT":"33.907389","LON":"-93.113056","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"KIH50":{"ST":"MS","STATE":"Mississippi","COUNTY":"Yazoo","SAME":"028163","SITENAME":"Inverness","SITELOC":"Inverness","SITESTATE":"MS","FREQ":"162.425","CALLSIGN":"KIH50","LAT":"33.376306","LON":"-90.542278","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"KXI92":{"ST":"AR","STATE":"Arkansas","COUNTY":"Yell","SAME":"005149","SITENAME":"High Peak","SITELOC":"Mt. Ida","SITESTATE":"AR","FREQ":"162.425","CALLSIGN":"KXI92","LAT":"34.4728","LON":"-93.605","PWR":"300","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":"S "},"WXJ51":{"ST":"MO","STATE":"Missouri","COUNTY":"Pemiscot","SAME":"029155","SITENAME":"Jonesboro","SITELOC":"Bono","SITESTATE":"AR","FREQ":"162.550","CALLSIGN":"WXJ51","LAT":"35.9039","LON":"-90.7706","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"WWG47":{"ST":"TN","STATE":"Tennessee","COUNTY":"Lake","SAME":"047095","SITENAME":"Wardell","SITELOC":"Gideon","SITESTATE":"MO","FREQ":"162.525","CALLSIGN":"WWG47","LAT":"36.364222","LON":"-89.864083","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"KXI96":{"ST":"AR","STATE":"Arkansas","COUNTY":"Woodruff","SAME":"005147","SITENAME":"Russell","SITELOC":"Bald Knob","SITESTATE":"AR","FREQ":"162.400","CALLSIGN":"KXI96","LAT":"35.3811","LON":"-91.524667","PWR":"1000","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WXJ49":{"ST":"TX","STATE":"Texas","COUNTY":"Cass","SAME":"048067","SITENAME":"Texarkana","SITELOC":"Texarkana","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXJ49","LAT":"33.448","LON":"-94.066833","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"KXI91":{"ST":"AR","STATE":"Arkansas","COUNTY":"Pope","SAME":"005115","SITENAME":"Morrilton","SITELOC":"Morrilton","SITESTATE":"AR","FREQ":"162.475","CALLSIGN":"KXI91","LAT":"35.165194","LON":"-92.714333","PWR":"300","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WWF96":{"ST":"AR","STATE":"Arkansas","COUNTY":"Yell","SAME":"005149","SITENAME":"Russellville","SITELOC":"Mt. Nebo","SITESTATE":"AR","FREQ":"162.525","CALLSIGN":"WWF96","LAT":"35.218306","LON":"-93.256056","PWR":"300","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"KJY87":{"ST":"AK","STATE":"Alaska","COUNTY":"Aleutians East","SAME":"002013","SITENAME":"Cold Bay","SITELOC":"Cold Bay","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"KJY87","LAT":"55.2503","LON":"-162.763364","PWR":"5","STATUS":"OUT OF SERVICE","WFO":"Anchorage|AK","REMARKS":"CENTRAL "},"WNG714":{"ST":"AK","STATE":"Alaska","COUNTY":"Aleutians East","SAME":"002013","SITENAME":"Sand Point","SITELOC":"Sand Point","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WNG714","LAT":"55.349444","LON":"-160.4731","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"C|E"},"KJY73":{"ST":"AK","STATE":"Alaska","COUNTY":"Aleutians West","SAME":"002016","SITENAME":"Saint Paul Island","SITELOC":"Saint Paul Island","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"KJY73","LAT":"57.12","LON":"-170.281111","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"N"},"WXK89":{"ST":"AK","STATE":"Alaska","COUNTY":"Aleutians West","SAME":"002016","SITENAME":"Unalaska","SITELOC":"Dutch Harbor","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXK89","LAT":"53.8908","LON":"-166.5303","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"E"},"WNG675":{"ST":"AK","STATE":"Alaska","COUNTY":"Bethel","SAME":"002050","SITENAME":"Bethel","SITELOC":"Bethel","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WNG675","LAT":"60.785278","LON":"-161.839722","PWR":"1000","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":"C| W"},"WNG532":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"Cape Hinchinbrook","SITELOC":"Cape Hinchinbrook","SITESTATE":"AK","FREQ":"162.525","CALLSIGN":"WNG532","LAT":"60.275576","LON":"-146.638974","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"WXJ79":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"Cordova","SITELOC":"Ski Hill","SITESTATE":"AK","FREQ":"162.400","CALLSIGN":"WXJ79","LAT":"60.548981","LON":"-145.7503","PWR":"1000","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"WNG530":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"East Point","SITELOC":"Naked Island","SITESTATE":"AK","FREQ":"162.500","CALLSIGN":"WNG530","LAT":"60.645","LON":"-147.346944","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"KZZ93":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"Point Pigot","SITELOC":"Point Pigot","SITESTATE":"AK","FREQ":"162.450","CALLSIGN":"KZZ93","LAT":"60.817222","LON":"-148.38","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"WNG527":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"Potato Point","SITELOC":"Potato Point","SITESTATE":"AK","FREQ":"162.425","CALLSIGN":"WNG527","LAT":"61.056543","LON":"-146.697377","PWR":"5","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"WXJ63":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"Valdez","SITELOC":"Valdez","SITESTATE":"AK","FREQ":"162.550","CALLSIGN":"WXJ63","LAT":"61.131917","LON":"-146.342511","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"KXI29":{"ST":"AK","STATE":"Alaska","COUNTY":"Chugach","SAME":"002063","SITENAME":"Whittier","SITELOC":"Whittier","SITESTATE":"AK","FREQ":"162.475","CALLSIGN":"KXI29","LAT":"60.7775","LON":"-148.685556","PWR":"300","STATUS":"NORMAL","WFO":"Anchorage|AK","REMARKS":""},"WXJ50":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Sequoyah","SAME":"040135","SITENAME":"Fort Smith","SITELOC":"Ft. Chaffee","SITESTATE":"AR","FREQ":"162.550","CALLSIGN":"WXJ50","LAT":"35.294417","LON":"-94.305278","PWR":"1000","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"WXK49":{"ST":"TN","STATE":"Tennessee","COUNTY":"Tipton","SAME":"047167","SITENAME":"Memphis","SITELOC":"Memphis","SITESTATE":"TN","FREQ":"162.475","CALLSIGN":"WXK49","LAT":"35.181278","LON":"-89.832306","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"WNG639":{"ST":"AR","STATE":"Arkansas","COUNTY":"Sharp","SAME":"005135","SITENAME":"Cherokee Village","SITELOC":"Agnos - Ash Flat","SITESTATE":"AR","FREQ":"162.475","CALLSIGN":"WNG639","LAT":"36.259472","LON":"-91.693417","PWR":"300","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"KXI97":{"ST":"OK","STATE":"Oklahoma","COUNTY":"McCurtain","SAME":"040089","SITENAME":"Mena","SITELOC":"Eagle Mtn./Bald Knob","SITESTATE":"AR","FREQ":"162.400","CALLSIGN":"KXI97","LAT":"34.4545","LON":"-94.143333","PWR":"300","STATUS":"NORMAL","WFO":"Little Rock|AR","REMARKS":""},"WXJ65":{"ST":"TX","STATE":"Texas","COUNTY":"Red River","SAME":"048387","SITENAME":"Broken Bow","SITELOC":"Choctaw","SITESTATE":"OK","FREQ":"162.450","CALLSIGN":"WXJ65","LAT":"34.245944","LON":"-94.783139","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"WWH30":{"ST":"TN","STATE":"Tennessee","COUNTY":"Weakley","SAME":"047183","SITENAME":"Dyersburg","SITELOC":"Dyersburg","SITESTATE":"TN","FREQ":"162.500","CALLSIGN":"WWH30","LAT":"36.057611","LON":"-89.440944","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"WNG643":{"ST":"AR","STATE":"Arkansas","COUNTY":"Phillips","SAME":"005107","SITENAME":"Marvell","SITELOC":"Phillips County","SITESTATE":"AR","FREQ":"162.525","CALLSIGN":"WNG643","LAT":"34.6225","LON":"-90.979056","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"WZ2529":{"ST":"AS","STATE":"American Samoa","COUNTY":"Western District","SAME":"060050","SITENAME":"Mt. Olotele","SITELOC":"Mt. Olotele","SITESTATE":"AS","FREQ":"162.550","CALLSIGN":"WZ2529","LAT":"-14.3175","LON":"-170.7642","PWR":"300","STATUS":"NORMAL","WFO":"Pago Pago|AS (WSO)","REMARKS":""},"WNG710":{"ST":"AS","STATE":"American Samoa","COUNTY":"Western District","SAME":"060050","SITENAME":"Pago Pago","SITELOC":"Pago Pago","SITESTATE":"AS","FREQ":"162.400","CALLSIGN":"WNG710","LAT":"-14.330556","LON":"-170.714167","PWR":"300","STATUS":"NORMAL","WFO":"Pago Pago|AS (WSO)","REMARKS":""},"KXI23":{"ST":"AZ","STATE":"Arizona","COUNTY":"Navajo","SAME":"004017","SITENAME":"Greer","SITELOC":"Greens Peak","SITESTATE":"AZ","FREQ":"162.525","CALLSIGN":"KXI23","LAT":"34.1125","LON":"-109.5747","PWR":"300","STATUS":"NORMAL","WFO":"Flagstaff|AZ","REMARKS":"SOUTH CENTRAL"},"WXM89":{"ST":"UT","STATE":"Utah","COUNTY":"San Juan","SAME":"049037","SITENAME":"Lake Powell","SITELOC":"Navajo Mountain","SITESTATE":"UT","FREQ":"162.550","CALLSIGN":"WXM89","LAT":"37.034444","LON":"-110.868611","PWR":"75","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"S 1/3"},"WWF99":{"ST":"NM","STATE":"New Mexico","COUNTY":"San Juan","SAME":"035045","SITENAME":"Window Rock","SITELOC":"Piney Hill","SITESTATE":"AZ","FREQ":"162.550","CALLSIGN":"WWF99","LAT":"35.761034","LON":"-109.167805","PWR":"100","STATUS":"NORMAL","WFO":"Flagstaff|AZ","REMARKS":"SOUTHWEST"},"KXI24":{"ST":"AZ","STATE":"Arizona","COUNTY":"Greenlee","SAME":"004011","SITENAME":"Safford","SITELOC":"Solomon","SITESTATE":"AZ","FREQ":"162.550","CALLSIGN":"KXI24","LAT":"32.649444","LON":"-109.849167","PWR":"100","STATUS":"NORMAL","WFO":"Tucson|AZ","REMARKS":""},"WXK76":{"ST":"AZ","STATE":"Arizona","COUNTY":"Yavapai","SAME":"004025","SITENAME":"Flagstaff","SITELOC":"Mt Elden","SITESTATE":"AZ","FREQ":"162.400","CALLSIGN":"WXK76","LAT":"35.2414","LON":"-111.5975","PWR":"100","STATUS":"NORMAL","WFO":"Flagstaff|AZ","REMARKS":"NW NC NE OR C "},"WWF52":{"ST":"AZ","STATE":"Arizona","COUNTY":"Coconino","SAME":"004005","SITENAME":"Grand Canyon","SITELOC":"Hopi Point","SITESTATE":"AZ","FREQ":"162.475","CALLSIGN":"WWF52","LAT":"36.071111","LON":"-112.156667","PWR":"100","STATUS":"NORMAL","WFO":"Flagstaff|AZ","REMARKS":""},"WWG41":{"ST":"AZ","STATE":"Arizona","COUNTY":"Yavapai","SAME":"004025","SITENAME":"Payson Gila County N.","SITELOC":"Mt. Ord","SITESTATE":"AZ","FREQ":"162.425","CALLSIGN":"WWG41","LAT":"33.905278","LON":"-111.41","PWR":"150","STATUS":"NORMAL","WFO":"Flagstaff|AZ","REMARKS":"SOUTHEAST"},"WWF98":{"ST":"AZ","STATE":"Arizona","COUNTY":"Yavapai","SAME":"004025","SITENAME":"Prescott","SITELOC":"Mingus Mtn.","SITESTATE":"AZ","FREQ":"162.525","CALLSIGN":"WWF98","LAT":"34.7","LON":"-112.118333","PWR":"100","STATUS":"NORMAL","WFO":"Flagstaff|AZ","REMARKS":"ALL BUT S SW"},"WWG42":{"ST":"AZ","STATE":"Arizona","COUNTY":"Gila","SAME":"004007","SITENAME":"Globe","SITELOC":"Signal Peak","SITESTATE":"AZ","FREQ":"162.500","CALLSIGN":"WWG42","LAT":"33.293056","LON":"-110.835833","PWR":"100","STATUS":"NORMAL","WFO":"Phoenix|AZ","REMARKS":"Southern"},"KXI83":{"ST":"NV","STATE":"Nevada","COUNTY":"Clark","SAME":"832003","SITENAME":"Kingman","SITELOC":"Hayden Peak","SITESTATE":"AZ","FREQ":"162.425","CALLSIGN":"KXI83","LAT":"35.094191","LON":"-113.905661","PWR":"100","STATUS":"NORMAL","WFO":"Las Vegas|NV","REMARKS":"SOUTH"},"KXI84":{"ST":"CA","STATE":"California","COUNTY":"San Bernardino","SAME":"006071","SITENAME":"Lake Havasu","SITELOC":"Ram Mtn.","SITESTATE":"AZ","FREQ":"162.400","CALLSIGN":"KXI84","LAT":"34.616667","LON":"-114.270556","PWR":"100","STATUS":"NORMAL","WFO":"Las Vegas|NV","REMARKS":"EASTERN"},"KEC94":{"ST":"AZ","STATE":"Arizona","COUNTY":"Pinal","SAME":"004021","SITENAME":"Phoenix","SITELOC":"South Mtn.","SITESTATE":"AZ","FREQ":"162.550","CALLSIGN":"KEC94","LAT":"33.332778","LON":"-112.066944","PWR":"300","STATUS":"NORMAL","WFO":"Phoenix|AZ","REMARKS":"NORTHWEST"},"KQC45":{"ST":"NV","STATE":"Nevada","COUNTY":"Clark","SAME":"032003","SITENAME":"Bullhead City","SITELOC":"Spirit Mtn.","SITESTATE":"NV","FREQ":"162.500","CALLSIGN":"KQC45","LAT":"35.247222","LON":"-114.743333","PWR":"200","STATUS":"NORMAL","WFO":"Las Vegas|NV","REMARKS":"ALL"},"WWF51":{"ST":"UT","STATE":"Utah","COUNTY":"Washington","SAME":"049053","SITENAME":"St. George","SITELOC":"Utah Hill","SITESTATE":"UT","FREQ":"162.475","CALLSIGN":"WWF51","LAT":"37.155","LON":"-113.88","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":""},"WXL30":{"ST":"AZ","STATE":"Arizona","COUNTY":"Pinal","SAME":"904021","SITENAME":"Tucson","SITELOC":"Mt. Lemmon","SITESTATE":"AZ","FREQ":"162.400","CALLSIGN":"WXL30","LAT":"32.440778","LON":"-110.788139","PWR":"100","STATUS":"NORMAL","WFO":"Tucson|AZ","REMARKS":"SOUTHEAST"},"WNG703":{"ST":"AZ","STATE":"Arizona","COUNTY":"Santa Cruz","SAME":"004023","SITENAME":"Nogales","SITELOC":"Crawford Hill","SITESTATE":"AZ","FREQ":"162.500","CALLSIGN":"WNG703","LAT":"31.338194","LON":"-110.953111","PWR":"100","STATUS":"NORMAL","WFO":"Tucson|AZ","REMARKS":""},"WXL87":{"ST":"CA","STATE":"California","COUNTY":"Riverside","SAME":"006065","SITENAME":"Yuma","SITELOC":"Black Mtn.","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"WXL87","LAT":"33.0536","LON":"-114.8278","PWR":"100","STATUS":"NORMAL","WFO":"Phoenix|AZ","REMARKS":"EAST AND SOUTH"},"WNG655":{"ST":"CA","STATE":"California","COUNTY":"Contra Costa","SAME":"006013","SITENAME":"Contra Costa County","SITELOC":"Mt. Diablo","SITESTATE":"CA","FREQ":"162.425","CALLSIGN":"WNG655","LAT":"37.8814","LON":"-121.915556","PWR":"100","STATUS":"NORMAL","WFO":"San Francisco|CA","REMARKS":""},"KEC49":{"ST":"CA","STATE":"California","COUNTY":"Santa Cruz","SAME":"006087","SITENAME":"Monterey","SITELOC":"Mt. Umunhum","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"KEC49","LAT":"37.155","LON":"-121.8983","PWR":"330","STATUS":"NORMAL","WFO":"San Francisco|CA","REMARKS":""},"WWF64":{"ST":"CA","STATE":"California","COUNTY":"Santa Cruz","SAME":"006087","SITENAME":"Monterey Marine","SITELOC":"Mt. Umunhum","SITESTATE":"CA","FREQ":"162.450","CALLSIGN":"WWF64","LAT":"37.155","LON":"-121.8983","PWR":"100","STATUS":"NORMAL","WFO":"San Francisco|CA","REMARKS":""},"KHB49":{"ST":"CA","STATE":"California","COUNTY":"Sonoma","SAME":"006097","SITENAME":"San Francisco","SITELOC":"Mount Pise","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"KHB49","LAT":"37.450556","LON":"-122.338333","PWR":"500","STATUS":"OUT OF SERVICE","WFO":"San Francisco|CA","REMARKS":"SOUTH"},"WXK58":{"ST":"NV","STATE":"Nevada","COUNTY":"Washoe","SAME":"032031","SITENAME":"Reno","SITELOC":"Slide Mtn.","SITESTATE":"NV","FREQ":"162.550","CALLSIGN":"WXK58","LAT":"39.3131","LON":"-119.8836","PWR":"300","STATUS":"NORMAL","WFO":"Reno|NV","REMARKS":""},"KEC57":{"ST":"CA","STATE":"California","COUNTY":"Yolo","SAME":"006113","SITENAME":"Sacramento","SITELOC":"Fairplay","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"KEC57","LAT":"38.5806","LON":"-120.615","PWR":"330","STATUS":"NORMAL","WFO":"Sacramento|CA","REMARKS":""},"WWF67":{"ST":"CA","STATE":"California","COUNTY":"Yuba","SAME":"006115","SITENAME":"Grass Valley","SITELOC":"Wolf Creek Mtn.","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"WWF67","LAT":"39.133056","LON":"-121.099167","PWR":"100","STATUS":"NORMAL","WFO":"Sacramento|CA","REMARKS":"WEST"},"WXL88":{"ST":"CA","STATE":"California","COUNTY":"Tehama","SAME":"006103","SITENAME":"Redding","SITELOC":"South Fork Mtn.","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"WXL88","LAT":"40.654444","LON":"-122.523611","PWR":"100","STATUS":"NORMAL","WFO":"Sacramento|CA","REMARKS":""},"KDX54":{"ST":"CA","STATE":"California","COUNTY":"Sonoma","SAME":"006097","SITENAME":"Big Rock Ridge","SITELOC":"N. San Francisco Bay","SITESTATE":"CA","FREQ":"162.500","CALLSIGN":"KDX54","LAT":"38.059722","LON":"-122.605556","PWR":"100","STATUS":"NORMAL","WFO":"San Francisco|CA","REMARKS":""},"KIH37":{"ST":"OR","STATE":"Oregon","COUNTY":"Curry","SAME":"041015","SITENAME":"Brookings","SITELOC":"Palmer Butte","SITESTATE":"OR","FREQ":"162.550","CALLSIGN":"KIH37","LAT":"42.1264","LON":"-124.2272","PWR":"500","STATUS":"NORMAL","WFO":"Eureka|CA","REMARKS":""},"WXL89":{"ST":"CA","STATE":"California","COUNTY":"Tulare","SAME":"006107","SITENAME":"Bakersfield","SITELOC":"Shirley Peak","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"WXL89","LAT":"35.7056","LON":"-118.559555","PWR":"100","STATUS":"NORMAL","WFO":"Hanford|CA","REMARKS":"W"},"KIH62":{"ST":"CA","STATE":"California","COUNTY":"Tulare","SAME":"006107","SITENAME":"Fresno","SITELOC":"Bear Mtn.","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"KIH62","LAT":"36.745833","LON":"-119.281389","PWR":"300","STATUS":"NORMAL","WFO":"Hanford|CA","REMARKS":"W"},"KEC82":{"ST":"CA","STATE":"California","COUNTY":"Humboldt","SAME":"006023","SITENAME":"Eureka","SITELOC":"Mt. Pierce","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"KEC82","LAT":"40.4175","LON":"-124.119167","PWR":"330","STATUS":"NORMAL","WFO":"Eureka|CA","REMARKS":""},"WZ2550":{"ST":"CA","STATE":"California","COUNTY":"Humboldt","SAME":"006023","SITENAME":"Willow Creek","SITELOC":"Willow Creek","SITESTATE":"CA","FREQ":"162.450","CALLSIGN":"WZ2550","LAT":"40.8739","LON":"-123.73351","PWR":"150","STATUS":"NORMAL","WFO":"Eureka|CA","REMARKS":""},"KIG78":{"ST":"CA","STATE":"California","COUNTY":"Riverside","SAME":"006065","SITENAME":"Coachella","SITELOC":"Riverside County","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"KIG78","LAT":"33.654889","LON":"-115.990222","PWR":"100","STATUS":"NORMAL","WFO":"San Diego|CA","REMARKS":"CENTRAL"},"WNG712":{"ST":"CA","STATE":"California","COUNTY":"Riverside","SAME":"006065","SITENAME":"Coachella / Spanish","SITELOC":"Riverside County","SITESTATE":"CA","FREQ":"162.525","CALLSIGN":"WNG712","LAT":"33.654889","LON":"-115.990222","PWR":"120","STATUS":"NORMAL","WFO":"San Diego|CA","REMARKS":"CENTRAL"},"WZ2524":{"ST":"CA","STATE":"California","COUNTY":"Inyo","SAME":"006027","SITENAME":"Bishop","SITELOC":"Bishop","SITESTATE":"CA","FREQ":"162.425","CALLSIGN":"WZ2524","LAT":"37.4119","LON":"-118.1886","PWR":"100","STATUS":"NORMAL","WFO":"Las Vegas|NV","REMARKS":""},"WNG659":{"ST":"CA","STATE":"California","COUNTY":"San Bernardino","SAME":"006071","SITENAME":"El Paso Mtns.","SITELOC":"Ridgecrest","SITESTATE":"CA","FREQ":"162.425","CALLSIGN":"WNG659","LAT":"35.4775","LON":"-117.700278","PWR":"300","STATUS":"NORMAL","WFO":"Hanford|CA","REMARKS":"W"},"WNG634":{"ST":"NV","STATE":"Nevada","COUNTY":"Nye","SAME":"032023","SITENAME":"Pahrump","SITELOC":"Mt Potosi","SITESTATE":"NV","FREQ":"162.400","CALLSIGN":"WNG634","LAT":"35.965","LON":"-115.500833","PWR":"100","STATUS":"NORMAL","WFO":"Las Vegas|NV","REMARKS":"EXTREME SOUTH"},"WNG720":{"ST":"CA","STATE":"California","COUNTY":"Mendocino","SAME":"006045","SITENAME":"Ukiah","SITELOC":"Laughlin Range","SITESTATE":"CA","FREQ":"162.525","CALLSIGN":"WNG720","LAT":"39.326667","LON":"-123.270833","PWR":"300","STATUS":"NORMAL","WFO":"Eureka|CA","REMARKS":"EASTERN"},"WWG20":{"ST":"NV","STATE":"Nevada","COUNTY":"Washoe","SAME":"032031","SITENAME":"Fernley","SITELOC":"Virginia Peak","SITESTATE":"NV","FREQ":"162.450","CALLSIGN":"WWG20","LAT":"39.754167","LON":"-119.462222","PWR":"150","STATUS":"NORMAL","WFO":"Reno|NV","REMARKS":""},"WZ2530":{"ST":"CA","STATE":"California","COUNTY":"Lassen","SAME":"006035","SITENAME":"Susanville","SITELOC":"Shaffer Mtn","SITESTATE":"CA","FREQ":"162.500","CALLSIGN":"WZ2530","LAT":"40.446389","LON":"-120.358056","PWR":"100","STATUS":"NORMAL","WFO":"Reno|NV","REMARKS":""},"WNG584":{"ST":"CA","STATE":"California","COUNTY":"Los Angeles","SAME":"006037","SITENAME":"Avalon","SITELOC":"Catalina Island","SITESTATE":"CA","FREQ":"162.525","CALLSIGN":"WNG584","LAT":"33.343278","LON":"-118.321667","PWR":"100","STATUS":"NORMAL","WFO":"Los Angeles|CA","REMARKS":"EXTREME WEST"},"KWO37":{"ST":"CA","STATE":"California","COUNTY":"Ventura","SAME":"006111","SITENAME":"Los Angeles","SITELOC":"Mt. Lukens/Tujunga","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"KWO37","LAT":"34.268722","LON":"-118.237694","PWR":"300","STATUS":"NORMAL","WFO":"Los Angeles|CA","REMARKS":""},"KWL22":{"ST":"CA","STATE":"California","COUNTY":"Los Angeles","SAME":"006037","SITENAME":"Malibu Marine","SITELOC":"Point Dume","SITESTATE":"CA","FREQ":"162.425","CALLSIGN":"KWL22","LAT":"34.0144","LON":"-118.812","PWR":"300","STATUS":"NORMAL","WFO":"Los Angeles|CA","REMARKS":"ALL"},"WZ2505":{"ST":"CA","STATE":"California","COUNTY":"Los Angeles","SAME":"006037","SITENAME":"Sandberg","SITELOC":"Los Angeles County","SITESTATE":"CA","FREQ":"162.425","CALLSIGN":"WZ2505","LAT":"34.743611","LON":"-118.724917","PWR":"100","STATUS":"NORMAL","WFO":"Los Angeles|CA","REMARKS":"NORTH CENTRAL "},"KAD94":{"ST":"CA","STATE":"California","COUNTY":"Mariposa","SAME":"006043","SITENAME":"Yosemite","SITELOC":"Turtleback Dome","SITESTATE":"CA","FREQ":"162.450","CALLSIGN":"KAD94","LAT":"37.712778","LON":"-119.704722","PWR":"80","STATUS":"NORMAL","WFO":"Hanford|CA","REMARKS":"NORTH CENTRAL"},"KIH30":{"ST":"CA","STATE":"California","COUNTY":"Mendocino","SAME":"006045","SITENAME":"Point Arena","SITELOC":"Cold Springs Peak","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"KIH30","LAT":"39.022222","LON":"-123.521389","PWR":"330","STATUS":"NORMAL","WFO":"Eureka|CA","REMARKS":"W"},"WXL97":{"ST":"OR","STATE":"Oregon","COUNTY":"Klamath","SAME":"041035","SITENAME":"Klamath Falls","SITELOC":"Hogback Mtn.","SITESTATE":"OR","FREQ":"162.550","CALLSIGN":"WXL97","LAT":"42.243056","LON":"-121.705","PWR":"100","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":"CENTRAL SOUTH"},"WNG595":{"ST":"CA","STATE":"California","COUNTY":"Mono","SAME":"006051","SITENAME":"Conway Summit","SITELOC":"Bridgeport","SITESTATE":"CA","FREQ":"162.525","CALLSIGN":"WNG595","LAT":"38.088333","LON":"-119.176944","PWR":"300","STATUS":"NORMAL","WFO":"Reno|NV","REMARKS":""},"WWF59":{"ST":"NV","STATE":"Nevada","COUNTY":"Mineral","SAME":"032021","SITENAME":"Hawthorne","SITELOC":"Corey Peak","SITESTATE":"NV","FREQ":"162.475","CALLSIGN":"WWF59","LAT":"38.457222","LON":"-118.763611","PWR":"100","STATUS":"NORMAL","WFO":"Reno|NV","REMARKS":""},"WWG21":{"ST":"CA","STATE":"California","COUNTY":"San Bernardino","SAME":"006071","SITENAME":"Santa Ana","SITELOC":"Beeks Place","SITESTATE":"CA","FREQ":"162.450","CALLSIGN":"WWG21","LAT":"33.817639","LON":"-117.635861","PWR":"100","STATUS":"NORMAL","WFO":"San Diego|CA","REMARKS":"SW"},"WXM66":{"ST":"CA","STATE":"California","COUNTY":"San Bernardino","SAME":"006071","SITENAME":"Victorville","SITELOC":"San Bernardino National Forest","SITESTATE":"CA","FREQ":"162.500","CALLSIGN":"WXM66","LAT":"34.232361","LON":"-117.234694","PWR":"100","STATUS":"NORMAL","WFO":"San Diego|CA","REMARKS":"SW"},"KEC62":{"ST":"CA","STATE":"California","COUNTY":"San Diego","SAME":"006073","SITENAME":"San Diego","SITELOC":"Mt. Woodson","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"KEC62","LAT":"33.0089","LON":"-116.972194","PWR":"100","STATUS":"NORMAL","WFO":"San Diego|CA","REMARKS":""},"WNG637":{"ST":"CA","STATE":"California","COUNTY":"San Diego","SAME":"006073","SITENAME":"San Diego Marine","SITELOC":"Mount Soledad","SITESTATE":"CA","FREQ":"162.425","CALLSIGN":"WNG637","LAT":"32.840056","LON":"-117.253028","PWR":"100","STATUS":"NORMAL","WFO":"San Diego|CA","REMARKS":""},"KIH31":{"ST":"CA","STATE":"California","COUNTY":"San Luis Obispo","SAME":"006079","SITENAME":"San Luis Obispo","SITELOC":"Cuesta Peak/Santa Margarita","SITESTATE":"CA","FREQ":"162.550","CALLSIGN":"KIH31","LAT":"35.360694","LON":"-120.656972","PWR":"330","STATUS":"OUT OF SERVICE","WFO":"Los Angeles|CA","REMARKS":""},"WNG592":{"ST":"CA","STATE":"California","COUNTY":"San Luis Obispo","SAME":"006079","SITENAME":"San Simeon","SITELOC":"San Simeon","SITESTATE":"CA","FREQ":"162.525","CALLSIGN":"WNG592","LAT":"35.685111","LON":"-121.167222","PWR":"100","STATUS":"OUT OF SERVICE","WFO":"Los Angeles|CA","REMARKS":"NW"},"KIH34":{"ST":"CA","STATE":"California","COUNTY":"Ventura","SAME":"006111","SITENAME":"Santa Barbara","SITELOC":"Broadcast Peak","SITESTATE":"CA","FREQ":"162.400","CALLSIGN":"KIH34","LAT":"34.525","LON":"-119.9589","PWR":"330","STATUS":"NORMAL","WFO":"Los Angeles|CA","REMARKS":""},"WWF62":{"ST":"CA","STATE":"California","COUNTY":"Ventura","SAME":"006111","SITENAME":"Santa Barbara Marine","SITELOC":"Broadcast Peak","SITESTATE":"CA","FREQ":"162.475","CALLSIGN":"WWF62","LAT":"34.525056","LON":"-119.958972","PWR":"100","STATUS":"NORMAL","WFO":"Los Angeles|CA","REMARKS":""},"WWF97":{"ST":"OR","STATE":"Oregon","COUNTY":"Klamath","SAME":"041035","SITENAME":"Mt. Ashland","SITELOC":"Ashland","SITESTATE":"OR","FREQ":"162.475","CALLSIGN":"WWF97","LAT":"42.081111","LON":"-122.716111","PWR":"100","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":"SW"},"WZ2504":{"ST":"CA","STATE":"California","COUNTY":"Sonoma","SAME":"006097","SITENAME":"Sonoma County","SITELOC":"Sonoma County","SITESTATE":"CA","FREQ":"162.475","CALLSIGN":"WZ2504","LAT":"38.348333","LON":"-122.578056","PWR":"300","STATUS":"NORMAL","WFO":"San Francisco|CA","REMARKS":"Except NW"},"WXJ45":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Deer Trail","SITELOC":"Deer Trail","SITESTATE":"CO","FREQ":"162.500","CALLSIGN":"WXJ45","LAT":"39.594722","LON":"-103.989444","PWR":"100","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":"SOUTHERN AND CENTRAL "},"KEC76":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Denver","SITELOC":"Glendale","SITESTATE":"CO","FREQ":"162.550","CALLSIGN":"KEC76","LAT":"39.692087","LON":"-104.936663","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":"SOUTHERN AND CENTRAL"},"WNG550":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Franktown","SITELOC":"Franktown","SITESTATE":"CO","FREQ":"162.450","CALLSIGN":"WNG550","LAT":"39.335","LON":"-104.885","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":"SOUTHERN AND CENTRAL"},"WXM51":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Mead/Longmont","SITELOC":"Highland","SITESTATE":"CO","FREQ":"162.475","CALLSIGN":"WXM51","LAT":"40.24","LON":"-105.055278","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":"SOUTHWEST 1/4"},"WXM54":{"ST":"CO","STATE":"Colorado","COUNTY":"Saguache","SAME":"008109","SITENAME":"Alamosa","SITELOC":"Agua Ramon Mountain","SITESTATE":"CO","FREQ":"162.475","CALLSIGN":"WXM54","LAT":"37.729444","LON":"-106.588056","PWR":"300","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":"Southern 1/2"},"KWN54":{"ST":"NM","STATE":"New Mexico","COUNTY":"San Juan","SAME":"035045","SITENAME":"Durango","SITELOC":"Durango","SITESTATE":"CO","FREQ":"162.425","CALLSIGN":"KWN54","LAT":"37.363889","LON":"-107.7825","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":""},"KWN60":{"ST":"CO","STATE":"Colorado","COUNTY":"Prowers","SAME":"008099","SITENAME":"Lamar","SITELOC":"Prowers County","SITESTATE":"CO","FREQ":"162.525","CALLSIGN":"KWN60","LAT":"38.0381","LON":"-102.4297","PWR":"1000","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"WNG664":{"ST":"CO","STATE":"Colorado","COUNTY":"Prowers","SAME":"008099","SITENAME":"Springfield","SITELOC":"Baca County","SITESTATE":"CO","FREQ":"162.400","CALLSIGN":"WNG664","LAT":"37.41","LON":"-102.626944","PWR":"1000","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"WWG23":{"ST":"CO","STATE":"Colorado","COUNTY":"Otero","SAME":"008089","SITENAME":"La Junta","SITELOC":"Miller Mesa","SITESTATE":"CO","FREQ":"162.500","CALLSIGN":"WWG23","LAT":"37.908728","LON":"-103.437073","PWR":"100","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"WWF77":{"ST":"CO","STATE":"Colorado","COUNTY":"Yuma","SAME":"008125","SITENAME":"Bethune","SITELOC":"Bethune","SITESTATE":"CO","FREQ":"162.525","CALLSIGN":"WWF77","LAT":"39.272222","LON":"-102.398333","PWR":"100","STATUS":"NORMAL","WFO":"Goodland|KS","REMARKS":"Southern 1/2"},"WWG44":{"ST":"CO","STATE":"Colorado","COUNTY":"Pueblo","SAME":"008101","SITENAME":"Fowler","SITELOC":"Olney Spring","SITESTATE":"CO","FREQ":"162.425","CALLSIGN":"WWG44","LAT":"38.180278","LON":"-104.021944","PWR":"100","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"WXM52":{"ST":"CO","STATE":"Colorado","COUNTY":"Pueblo","SAME":"008101","SITENAME":"Pueblo","SITELOC":"Pueblo","SITESTATE":"CO","FREQ":"162.400","CALLSIGN":"WXM52","LAT":"38.275556","LON":"-104.598611","PWR":"300","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"WNG579":{"ST":"CO","STATE":"Colorado","COUNTY":"Pueblo","SAME":"008101","SITENAME":"Walsenburg","SITELOC":"Walsenburg","SITESTATE":"CO","FREQ":"162.450","CALLSIGN":"WNG579","LAT":"37.641389","LON":"-104.773056","PWR":"300","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"KXI90":{"ST":"CO","STATE":"Colorado","COUNTY":"Ouray","SAME":"008091","SITENAME":"Montrose","SITELOC":"Buckhorn Lakes","SITESTATE":"CO","FREQ":"162.450","CALLSIGN":"KXI90","LAT":"38.338056","LON":"-107.638333","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":"Northern 1/2"},"WNG687":{"ST":"UT","STATE":"Utah","COUNTY":"San Juan","SAME":"049037","SITENAME":"Monticello","SITELOC":"Monticello","SITESTATE":"UT","FREQ":"162.450","CALLSIGN":"WNG687","LAT":"37.839722","LON":"-109.460556","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":"E 2/3 & N 1/2"},"WZ2518":{"ST":"CO","STATE":"Colorado","COUNTY":"Eagle","SAME":"008037","SITENAME":"Eagle","SITELOC":"Eagle","SITESTATE":"CO","FREQ":"162.450","CALLSIGN":"WZ2518","LAT":"39.775","LON":"-106.846389","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":""},"WWG43":{"ST":"CO","STATE":"Colorado","COUNTY":"Pitkin","SAME":"008097","SITENAME":"Glenwood Springs","SITELOC":"Sunlight Peak","SITESTATE":"CO","FREQ":"162.500","CALLSIGN":"WWG43","LAT":"39.425556","LON":"-107.379167","PWR":"100","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":""},"WXM56":{"ST":"CO","STATE":"Colorado","COUNTY":"Teller","SAME":"008119","SITENAME":"Colorado Springs","SITELOC":"Cheyenne Mountain","SITESTATE":"CO","FREQ":"162.475","CALLSIGN":"WXM56","LAT":"38.7425","LON":"-104.8647","PWR":"100","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":"Eastern 1/4"},"WWH32":{"ST":"CO","STATE":"Colorado","COUNTY":"Lincoln","SAME":"008073","SITENAME":"Boyero","SITELOC":"Boyero","SITESTATE":"CO","FREQ":"162.450","CALLSIGN":"WWH32","LAT":"39.095278","LON":"-103.236111","PWR":"100","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"KJY81":{"ST":"CO","STATE":"Colorado","COUNTY":"Fremont","SAME":"008043","SITENAME":"Canon City","SITELOC":"Canon City","SITESTATE":"CO","FREQ":"162.500","CALLSIGN":"KJY81","LAT":"38.515278","LON":"-105.3075","PWR":"300","STATUS":"NORMAL","WFO":"Pueblo|CO","REMARKS":""},"WXM55":{"ST":"CO","STATE":"Colorado","COUNTY":"Mesa","SAME":"008077","SITENAME":"Grand Junction","SITELOC":"Rapid Creek","SITESTATE":"CO","FREQ":"162.550","CALLSIGN":"WXM55","LAT":"39.0836","LON":"-108.2194","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":""},"WZ2544":{"ST":"CO","STATE":"Colorado","COUNTY":"Grand","SAME":"008049","SITENAME":"North Cottonwood","SITELOC":"Grand County","SITESTATE":"CO","FREQ":"162.500","CALLSIGN":"WZ2544","LAT":"40.06","LON":"-105.9983","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"KWN56":{"ST":"CO","STATE":"Colorado","COUNTY":"Summit","SAME":"008117","SITENAME":"Steamboat Springs","SITELOC":"Walton Peak","SITESTATE":"CO","FREQ":"162.525","CALLSIGN":"KWN56","LAT":"40.354444","LON":"-106.698889","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":"NORTHERN 2/3"},"WXJ37":{"ST":"NM","STATE":"New Mexico","COUNTY":"San Juan","SAME":"035045","SITENAME":"Farmington","SITELOC":"Farmington","SITESTATE":"NM","FREQ":"162.475","CALLSIGN":"WXJ37","LAT":"36.695833","LON":"-108.220556","PWR":"300","STATUS":"NORMAL","WFO":"Albuquerque|NM","REMARKS":""},"WXM92":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Fort Collins/Ault","SITELOC":"Black Hollow","SITESTATE":"CO","FREQ":"162.450","CALLSIGN":"WXM92","LAT":"40.570302","LON":"-105.079238","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"WXM50":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Greeley","SITELOC":"Point of Rocks","SITESTATE":"CO","FREQ":"162.400","CALLSIGN":"WXM50","LAT":"40.485747","LON":"-104.349355","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"KWN40":{"ST":"CO","STATE":"Colorado","COUNTY":"Washington","SAME":"008121","SITENAME":"Fort Morgan","SITELOC":"Fort Morgan","SITESTATE":"CO","FREQ":"162.525","CALLSIGN":"KWN40","LAT":"40.2442","LON":"-103.8978","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"WXM53":{"ST":"CO","STATE":"Colorado","COUNTY":"Weld","SAME":"008123","SITENAME":"Sterling","SITELOC":"Sterling","SITESTATE":"CO","FREQ":"162.400","CALLSIGN":"WXM53","LAT":"40.616111","LON":"-103.031944","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":"NORTHEAST 1/4"},"WNG737":{"ST":"CO","STATE":"Colorado","COUNTY":"Summit","SAME":"008117","SITENAME":"Dillon","SITELOC":"Dillon","SITESTATE":"CO","FREQ":"162.400","CALLSIGN":"WNG737","LAT":"39.6167","LON":"-106.11","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"KJY84":{"ST":"CO","STATE":"Colorado","COUNTY":"Washington","SAME":"008121","SITENAME":"Anton","SITELOC":"Anton","SITESTATE":"CO","FREQ":"162.425","CALLSIGN":"KJY84","LAT":"39.704672","LON":"-103.254062","PWR":"300","STATUS":"NORMAL","WFO":"Boulder|CO","REMARKS":""},"WXM87":{"ST":"NE","STATE":"Nebraska","COUNTY":"Dundy","SAME":"031057","SITENAME":"Wray","SITELOC":"Wray","SITESTATE":"CO","FREQ":"162.475","CALLSIGN":"WXM87","LAT":"40.054194","LON":"-102.225861","PWR":"300","STATUS":"NORMAL","WFO":"Goodland|KS","REMARKS":""},"WWH33":{"ST":"NY","STATE":"New York","COUNTY":"Putnam","SAME":"036079","SITENAME":"Cornwall","SITELOC":"Mohawk Mtn.","SITESTATE":"CT","FREQ":"162.500","CALLSIGN":"WWH33","LAT":"41.821111","LON":"-73.296667","PWR":"500","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"WXJ42":{"ST":"NY","STATE":"New York","COUNTY":"Suffolk","SAME":"036103","SITENAME":"Meriden","SITELOC":"West Peak","SITESTATE":"CT","FREQ":"162.400","CALLSIGN":"WXJ42","LAT":"41.563056","LON":"-72.845","PWR":"750","STATUS":"NORMAL","WFO":"New York|NY","REMARKS":"NW"},"KWO35":{"ST":"NY","STATE":"New York","COUNTY":"Westchester","SAME":"036119","SITENAME":"New York City","SITELOC":"Empire State Building","SITESTATE":"NY","FREQ":"162.550","CALLSIGN":"KWO35","LAT":"40.748477","LON":"-73.9853","PWR":"1000","STATUS":"NORMAL","WFO":"New York|NY","REMARKS":"ALL"},"WXM80":{"ST":"NY","STATE":"New York","COUNTY":"Suffolk","SAME":"036103","SITENAME":"Riverhead","SITELOC":"Riverhead","SITESTATE":"NY","FREQ":"162.475","CALLSIGN":"WXM80","LAT":"40.8825","LON":"-72.715278","PWR":"1000","STATUS":"NORMAL","WFO":"New York|NY","REMARKS":"Southern"},"WXJ41":{"ST":"MA","STATE":"Massachusetts","COUNTY":"Worcester","SAME":"025027","SITENAME":"Hartford","SITELOC":"Soapstone Mtn.","SITESTATE":"CT","FREQ":"162.475","CALLSIGN":"WXJ41","LAT":"41.958611","LON":"-72.413611","PWR":"300","STATUS":"NORMAL","WFO":"Boston/Norton|MA","REMARKS":"SW"},"KHB47":{"ST":"RI","STATE":"Rhode Island","COUNTY":"Washington","SAME":"044009","SITENAME":"New London","SITELOC":"Uncasville","SITESTATE":"CT","FREQ":"162.550","CALLSIGN":"KHB47","LAT":"41.440833","LON":"-72.141389","PWR":"750","STATUS":"NORMAL","WFO":"New York|NY","REMARKS":""},"WXM82":{"ST":"NY","STATE":"New York","COUNTY":"Rensselaer","SAME":"036083","SITENAME":"Egremont","SITELOC":"Egremont","SITESTATE":"MA","FREQ":"162.450","CALLSIGN":"WXM82","LAT":"42.163056","LON":"-73.473611","PWR":"300","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"WXL37":{"ST":"NY","STATE":"New York","COUNTY":"Ulster","SAME":"036111","SITENAME":"Highland","SITELOC":"Illinois Mtn.","SITESTATE":"NY","FREQ":"162.475","CALLSIGN":"WXL37","LAT":"41.7192","LON":"-73.996389","PWR":"1000","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"WXL93":{"ST":"RI","STATE":"Rhode Island","COUNTY":"Providence","SAME":"044007","SITENAME":"Worcester","SITELOC":"Paxton","SITESTATE":"MA","FREQ":"162.550","CALLSIGN":"WXL93","LAT":"42.303889","LON":"-71.8975","PWR":"500","STATUS":"NORMAL","WFO":"Boston/Norton|MA","REMARKS":""},"KEC83":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"York","SAME":"042133","SITENAME":"Baltimore","SITELOC":"Pikesville","SITESTATE":"MD","FREQ":"162.400","CALLSIGN":"KEC83","LAT":"39.386349","LON":"-76.730772","PWR":"1000","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":""},"KHB36":{"ST":"VA","STATE":"Virginia","COUNTY":"Warren","SAME":"051187","SITENAME":"Manassas","SITELOC":"Independent Hill","SITESTATE":"VA","FREQ":"162.550","CALLSIGN":"KHB36","LAT":"38.628722","LON":"-77.438833","PWR":"1000","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":"E"},"WNG736":{"ST":"VA","STATE":"Virginia","COUNTY":"Loudoun","SAME":"051107","SITENAME":"Washington DC","SITELOC":"Dist of Columbia","SITESTATE":"DC","FREQ":"162.450","CALLSIGN":"WNG736","LAT":"38.962917","LON":"-77.02625","PWR":"300","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":""},"WXJ94":{"ST":"NJ","STATE":"New Jersey","COUNTY":"Cape May","SAME":"034009","SITENAME":"Lewes","SITELOC":"Green Hill","SITESTATE":"DE","FREQ":"162.550","CALLSIGN":"WXJ94","LAT":"38.6269","LON":"-75.2317","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":"S"},"WXK97":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Chester","SAME":"042029","SITENAME":"Sudlersville","SITELOC":"Sudlersville","SITESTATE":"MD","FREQ":"162.500","CALLSIGN":"WXK97","LAT":"39.175389","LON":"-75.918278","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":""},"WNG704":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Montgomery","SAME":"042091","SITENAME":"Hibernia Park","SITELOC":"Chester County","SITESTATE":"PA","FREQ":"162.425","CALLSIGN":"WNG704","LAT":"40.0239","LON":"-75.8128","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":""},"KIH28":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Philadelphia","SAME":"042101","SITENAME":"Philadelphia","SITELOC":"Philadelphia","SITESTATE":"PA","FREQ":"162.475","CALLSIGN":"KIH28","LAT":"39.9517","LON":"-75.160833","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":""},"KEC92":{"ST":"VA","STATE":"Virginia","COUNTY":"Accomack","SAME":"051001","SITENAME":"Salisbury","SITELOC":"Delmar","SITESTATE":"DE","FREQ":"162.475","CALLSIGN":"KEC92","LAT":"38.504444","LON":"-75.643056","PWR":"1000","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"WXJ60":{"ST":"FL","STATE":"Florida","COUNTY":"Union","SAME":"012125","SITENAME":"Gainesville","SITELOC":"Northwood","SITESTATE":"FL","FREQ":"162.475","CALLSIGN":"WXJ60","LAT":"29.7094","LON":"-82.3903","PWR":"1000","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"KHB39":{"ST":"GA","STATE":"Georgia","COUNTY":"Charlton","SAME":"013049","SITENAME":"Jacksonville","SITELOC":"Jacksonville","SITESTATE":"FL","FREQ":"162.550","CALLSIGN":"KHB39","LAT":"30.2761","LON":"-81.5647","PWR":"1000","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"KGG67":{"ST":"FL","STATE":"Florida","COUNTY":"Washington","SAME":"012133","SITENAME":"Panama City","SITELOC":"Courtney Point","SITESTATE":"FL","FREQ":"162.550","CALLSIGN":"KGG67","LAT":"30.1472","LON":"-85.7128","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"KIH26":{"ST":"FL","STATE":"Florida","COUNTY":"Volusia","SAME":"012127","SITENAME":"Daytona Beach","SITELOC":"Bumcombe Hill","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"KIH26","LAT":"29.173333","LON":"-81.156667","PWR":"1000","STATUS":"NORMAL","WFO":"Melbourne|FL","REMARKS":""},"WXJ70":{"ST":"FL","STATE":"Florida","COUNTY":"Osceola","SAME":"012097","SITENAME":"Melbourne","SITELOC":"Melbourne","SITESTATE":"FL","FREQ":"162.550","CALLSIGN":"WXJ70","LAT":"28.2283","LON":"-80.7567","PWR":"1000","STATUS":"NORMAL","WFO":"Melbourne|FL","REMARKS":""},"KIH63":{"ST":"FL","STATE":"Florida","COUNTY":"Volusia","SAME":"012127","SITENAME":"Orlando","SITELOC":"Orlando","SITESTATE":"FL","FREQ":"162.475","CALLSIGN":"KIH63","LAT":"28.593056","LON":"-81.420278","PWR":"1000","STATUS":"NORMAL","WFO":"Melbourne|FL","REMARKS":""},"WZ2531":{"ST":"FL","STATE":"Florida","COUNTY":"Miami-Dade","SAME":"012086","SITENAME":"Hialeah Spanish","SITELOC":"Hialeah","SITESTATE":"FL","FREQ":"162.500","CALLSIGN":"WZ2531","LAT":"25.8397","LON":"-80.2925","PWR":"300","STATUS":"NORMAL","WFO":"Miami|FL","REMARKS":"ALL"},"KHB34":{"ST":"FL","STATE":"Florida","COUNTY":"Miami-Dade","SAME":"012086","SITENAME":"Miami","SITELOC":"Miami/Andover","SITESTATE":"FL","FREQ":"162.550","CALLSIGN":"KHB34","LAT":"25.967861","LON":"-80.209333","PWR":"1000","STATUS":"NORMAL","WFO":"Miami|FL","REMARKS":""},"KEC50":{"ST":"FL","STATE":"Florida","COUNTY":"St. Lucie","SAME":"012111","SITENAME":"West Palm Beach","SITELOC":"Mangonia Park","SITESTATE":"FL","FREQ":"162.475","CALLSIGN":"KEC50","LAT":"26.749722","LON":"-80.0675","PWR":"1000","STATUS":"NORMAL","WFO":"Miami|FL","REMARKS":""},"WXK83":{"ST":"FL","STATE":"Florida","COUNTY":"Lee","SAME":"012071","SITENAME":"Fort Myers","SITELOC":"Fort Myers","SITESTATE":"FL","FREQ":"162.475","CALLSIGN":"WXK83","LAT":"26.63","LON":"-81.810278","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"WWG59":{"ST":"FL","STATE":"Florida","COUNTY":"Sarasota","SAME":"012115","SITENAME":"Venice","SITELOC":"Venice","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"WWG59","LAT":"27.133056","LON":"-82.394444","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"WWF38":{"ST":"FL","STATE":"Florida","COUNTY":"Sumter","SAME":"012119","SITENAME":"Inverness","SITELOC":"Lecanto","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"WWF38","LAT":"28.8436","LON":"-82.484611","PWR":"300","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"KWN38":{"ST":"FL","STATE":"Florida","COUNTY":"Levy","SAME":"012075","SITENAME":"Morriston","SITELOC":"Gulf Hammock","SITESTATE":"FL","FREQ":"162.550","CALLSIGN":"KWN38","LAT":"29.284444","LON":"-82.663889","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"KPS505":{"ST":"FL","STATE":"Florida","COUNTY":"Sumter","SAME":"012119","SITENAME":"Sumterville","SITELOC":"Sumterville","SITESTATE":"FL","FREQ":"162.500","CALLSIGN":"KPS505","LAT":"28.763889","LON":"-82.059722","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"WNG522":{"ST":"FL","STATE":"Florida","COUNTY":"St. Johns","SAME":"012109","SITENAME":"Palatka","SITELOC":"Palatka","SITESTATE":"FL","FREQ":"162.425","CALLSIGN":"WNG522","LAT":"29.735556","LON":"-81.644444","PWR":"300","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"WWG92":{"ST":"FL","STATE":"Florida","COUNTY":"Monroe","SAME":"012087","SITENAME":"Naples","SITELOC":"Naples","SITESTATE":"FL","FREQ":"162.525","CALLSIGN":"WWG92","LAT":"26.183111","LON":"-81.574722","PWR":"1000","STATUS":"NORMAL","WFO":"Miami|FL","REMARKS":"North"},"KEB97":{"ST":"FL","STATE":"Florida","COUNTY":"Suwannee","SAME":"012121","SITENAME":"Lake City","SITELOC":"Lake City","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"KEB97","LAT":"30.1939","LON":"-82.6347","PWR":"300","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"WWF88":{"ST":"FL","STATE":"Florida","COUNTY":"Taylor","SAME":"012123","SITENAME":"Salem","SITELOC":"Salem","SITESTATE":"FL","FREQ":"162.425","CALLSIGN":"WWF88","LAT":"29.912944","LON":"-83.444167","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"WWF86":{"ST":"FL","STATE":"Florida","COUNTY":"Wakulla","SAME":"012129","SITENAME":"East Point","SITELOC":"East Point","SITESTATE":"FL","FREQ":"162.500","CALLSIGN":"WWF86","LAT":"29.7325","LON":"-84.89","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"KIH24":{"ST":"GA","STATE":"Georgia","COUNTY":"Thomas","SAME":"013275","SITENAME":"Tallahassee","SITELOC":"Tallahassee","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"KIH24","LAT":"30.566667","LON":"-84.043889","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"WXM58":{"ST":"FL","STATE":"Florida","COUNTY":"Palm Beach","SAME":"012099","SITENAME":"Belle Glade","SITELOC":"Belle Glade","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"WXM58","LAT":"26.661111","LON":"-80.636611","PWR":"300","STATUS":"NORMAL","WFO":"Miami|FL","REMARKS":""},"WWH31":{"ST":"GA","STATE":"Georgia","COUNTY":"Lowndes","SAME":"013185","SITENAME":"Valdosta","SITELOC":"Hahira","SITESTATE":"GA","FREQ":"162.500","CALLSIGN":"WWH31","LAT":"30.970278","LON":"-83.286667","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"WXK83A":{"ST":"FL","STATE":"Florida","COUNTY":"Polk","SAME":"012105","SITENAME":"Sebring","SITELOC":"Avon Park","SITESTATE":"FL","FREQ":"162.500","CALLSIGN":"WXK83A","LAT":"27.561928","LON":"-81.49364","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":"SOUTH"},"KHB32":{"ST":"FL","STATE":"Florida","COUNTY":"Polk","SAME":"012105","SITENAME":"Tampa Bay","SITELOC":"Ruskin","SITESTATE":"FL","FREQ":"162.550","CALLSIGN":"KHB32","LAT":"27.840556","LON":"-82.263056","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"KEC38":{"ST":"FL","STATE":"Florida","COUNTY":"Pinellas","SAME":"012103","SITENAME":"Largo","SITELOC":"Seminole","SITESTATE":"FL","FREQ":"162.450","CALLSIGN":"KEC38","LAT":"27.848056","LON":"-82.763333","PWR":"1000","STATUS":"NORMAL","WFO":"Tampa Bay Area|FL","REMARKS":""},"WWF69":{"ST":"FL","STATE":"Florida","COUNTY":"St. Lucie","SAME":"012111","SITENAME":"Fort Pierce","SITELOC":"Fort Pierce","SITESTATE":"FL","FREQ":"162.425","CALLSIGN":"WWF69","LAT":"27.4489","LON":"-80.4089","PWR":"1000","STATUS":"NORMAL","WFO":"Melbourne|FL","REMARKS":""},"WWF85":{"ST":"FL","STATE":"Florida","COUNTY":"Marion","SAME":"012083","SITENAME":"Ocala","SITELOC":"Ocala","SITESTATE":"FL","FREQ":"162.525","CALLSIGN":"WWF85","LAT":"29.178065","LON":"-82.15912","PWR":"250","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"WNG663":{"ST":"FL","STATE":"Florida","COUNTY":"Monroe","SAME":"012087","SITENAME":"Princeton","SITELOC":"Homestead","SITESTATE":"FL","FREQ":"162.425","CALLSIGN":"WNG663","LAT":"25.537583","LON":"-80.403639","PWR":"300","STATUS":"NORMAL","WFO":"Miami|FL","REMARKS":""},"WXJ95":{"ST":"FL","STATE":"Florida","COUNTY":"Monroe","SAME":"012087","SITENAME":"Key West","SITELOC":"Summerland Key","SITESTATE":"FL","FREQ":"162.400","CALLSIGN":"WXJ95","LAT":"24.6597","LON":"-81.5381","PWR":"1000","STATUS":"NORMAL","WFO":"Key West|FL","REMARKS":"Lower Keys"},"WWG60":{"ST":"FL","STATE":"Florida","COUNTY":"Monroe","SAME":"012087","SITENAME":"Tea Table Key","SITELOC":"Tea Table Key","SITESTATE":"FL","FREQ":"162.450","CALLSIGN":"WWG60","LAT":"24.895222","LON":"-80.663944","PWR":"300","STATUS":"NORMAL","WFO":"Key West|FL","REMARKS":"MID KEYS & N"},"WXM65":{"ST":"GA","STATE":"Georgia","COUNTY":"Toombs","SAME":"013279","SITENAME":"Baxley","SITELOC":"Plant Hatch","SITESTATE":"GA","FREQ":"162.525","CALLSIGN":"WXM65","LAT":"31.929722","LON":"-82.345","PWR":"300","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"WXJ28":{"ST":"GA","STATE":"Georgia","COUNTY":"Wayne","SAME":"013305","SITENAME":"Jesup","SITELOC":"Jesup","SITESTATE":"GA","FREQ":"162.450","CALLSIGN":"WXJ28","LAT":"31.674167","LON":"-81.886667","PWR":"300","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"WXK75":{"ST":"GA","STATE":"Georgia","COUNTY":"Wayne","SAME":"013305","SITENAME":"Waycross","SITELOC":"Hasty","SITESTATE":"GA","FREQ":"162.475","CALLSIGN":"WXK75","LAT":"31.221389","LON":"-82.573333","PWR":"1000","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"WXK53":{"ST":"GA","STATE":"Georgia","COUNTY":"Worth","SAME":"013321","SITENAME":"Pelham","SITELOC":"Pelham","SITESTATE":"GA","FREQ":"162.550","CALLSIGN":"WXK53","LAT":"31.1358","LON":"-84.1044","PWR":"1000","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"KXI89":{"ST":"GA","STATE":"Georgia","COUNTY":"Walton","SAME":"013297","SITENAME":"Eatonton","SITELOC":"Eatonton","SITESTATE":"GA","FREQ":"162.525","CALLSIGN":"KXI89","LAT":"33.3083","LON":"-83.390306","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"KXI28":{"ST":"GA","STATE":"Georgia","COUNTY":"Wilkinson","SAME":"013319","SITENAME":"Sandersville","SITELOC":"Sandersville","SITESTATE":"GA","FREQ":"162.450","CALLSIGN":"KXI28","LAT":"32.981444","LON":"-82.80525","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WXK56":{"ST":"GA","STATE":"Georgia","COUNTY":"Wilkes","SAME":"013317","SITENAME":"Athens","SITELOC":"Neese","SITESTATE":"GA","FREQ":"162.400","CALLSIGN":"WXK56","LAT":"34.0836","LON":"-83.322111","PWR":"500","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"KXI81":{"ST":"SC","STATE":"South Carolina","COUNTY":"Oconee","SAME":"045073","SITENAME":"Clayton","SITELOC":"Clayton-Tiger","SITESTATE":"GA","FREQ":"162.450","CALLSIGN":"KXI81","LAT":"34.8456","LON":"-83.4997","PWR":"300","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"WXJ53":{"ST":"GA","STATE":"Georgia","COUNTY":"White","SAME":"013311","SITENAME":"Cleveland","SITELOC":"Wauka Mtn.","SITESTATE":"GA","FREQ":"162.525","CALLSIGN":"WXJ53","LAT":"34.509472","LON":"-83.806639","PWR":"300","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WWH24":{"ST":"SC","STATE":"South Carolina","COUNTY":"Oconee","SAME":"045073","SITENAME":"Toccoa","SITELOC":"Currahee Mtn.","SITESTATE":"GA","FREQ":"162.425","CALLSIGN":"WWH24","LAT":"34.529444","LON":"-83.376111","PWR":"250","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"WWH23":{"ST":"GA","STATE":"Georgia","COUNTY":"Polk","SAME":"013233","SITENAME":"Buchanan","SITELOC":"Buchanan","SITESTATE":"GA","FREQ":"162.425","CALLSIGN":"WWH23","LAT":"33.784","LON":"-85.161444","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WXK52":{"ST":"GA","STATE":"Georgia","COUNTY":"Whitfield","SAME":"013313","SITENAME":"Chatsworth","SITELOC":"Cohutta Mtn.","SITESTATE":"GA","FREQ":"162.400","CALLSIGN":"WXK52","LAT":"34.751667","LON":"-84.715","PWR":"200","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"KXI77":{"ST":"GA","STATE":"Georgia","COUNTY":"Wilkinson","SAME":"013319","SITENAME":"Eastman","SITELOC":"Eastman","SITESTATE":"GA","FREQ":"162.400","CALLSIGN":"KXI77","LAT":"32.217583","LON":"-83.224944","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WXK71":{"ST":"GA","STATE":"Georgia","COUNTY":"Wilkinson","SAME":"013319","SITENAME":"Macon","SITELOC":"GA Forrestry Comm.","SITESTATE":"GA","FREQ":"162.475","CALLSIGN":"WXK71","LAT":"32.805278","LON":"-83.538889","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WXJ31":{"ST":"GA","STATE":"Georgia","COUNTY":"Upson","SAME":"013293","SITENAME":"Thomaston","SITELOC":"Thomaston","SITESTATE":"GA","FREQ":"162.500","CALLSIGN":"WXJ31","LAT":"32.986278","LON":"-84.365667","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WWH39":{"ST":"GA","STATE":"Georgia","COUNTY":"McIntosh","SAME":"013191","SITENAME":"Brunswick","SITELOC":"Arco","SITESTATE":"GA","FREQ":"162.425","CALLSIGN":"WWH39","LAT":"31.194167","LON":"-81.491667","PWR":"300","STATUS":"NORMAL","WFO":"Jacksonville|FL","REMARKS":""},"KEC85":{"ST":"SC","STATE":"South Carolina","COUNTY":"Jasper","SAME":"045053","SITENAME":"Savannah","SITELOC":"Ridgeland","SITESTATE":"GA","FREQ":"162.400","CALLSIGN":"KEC85","LAT":"32.3289","LON":"-80.9378","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|SC","REMARKS":""},"WWH25":{"ST":"GA","STATE":"Georgia","COUNTY":"Treutlen","SAME":"013283","SITENAME":"Metter","SITELOC":"Metter","SITESTATE":"GA","FREQ":"162.425","CALLSIGN":"WWH25","LAT":"32.394791","LON":"-82.042997","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|SC","REMARKS":""},"WXK54":{"ST":"SC","STATE":"South Carolina","COUNTY":"McCormick","SAME":"045065","SITENAME":"Augusta","SITELOC":"Wrens","SITESTATE":"GA","FREQ":"162.550","CALLSIGN":"WXK54","LAT":"33.2592","LON":"-82.285833","PWR":"1000","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"KHC29":{"ST":"SC","STATE":"South Carolina","COUNTY":"Orangeburg","SAME":"045075","SITENAME":"Barnwell","SITELOC":"Barnwell","SITESTATE":"SC","FREQ":"162.500","CALLSIGN":"KHC29","LAT":"33.1869","LON":"-81.3983","PWR":"1000","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"WXM88":{"ST":"SC","STATE":"South Carolina","COUNTY":"Barnwell","SAME":"045011","SITENAME":"Waynesboro","SITELOC":"Shell Bluff","SITESTATE":"GA","FREQ":"162.425","CALLSIGN":"WXM88","LAT":"33.1294","LON":"-81.7706","PWR":"325","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"WXK48":{"ST":"TN","STATE":"Tennessee","COUNTY":"Sequatchie","SAME":"047153","SITENAME":"Chattanooga","SITELOC":"Chattanooga","SITESTATE":"TN","FREQ":"162.550","CALLSIGN":"WXK48","LAT":"35.207222","LON":"-85.2865","PWR":"1000","STATUS":"NORMAL","WFO":"Morristown|TN","REMARKS":""},"WXJ23":{"ST":"SC","STATE":"South Carolina","COUNTY":"Jasper","SAME":"045053","SITENAME":"Beaufort","SITELOC":"Green Pond","SITESTATE":"SC","FREQ":"162.450","CALLSIGN":"WXJ23","LAT":"32.712222","LON":"-80.680278","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|SC","REMARKS":""},"KEC80":{"ST":"GA","STATE":"Georgia","COUNTY":"Walton","SAME":"013297","SITENAME":"Atlanta","SITELOC":"Stone Mtn.","SITESTATE":"GA","FREQ":"162.550","CALLSIGN":"KEC80","LAT":"33.80525","LON":"-84.144333","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":"ALL"},"WNG627":{"ST":"SC","STATE":"South Carolina","COUNTY":"Edgefield","SAME":"045037","SITENAME":"Aiken","SITELOC":"Aiken","SITESTATE":"SC","FREQ":"162.450","CALLSIGN":"WNG627","LAT":"33.5717","LON":"-81.6969","PWR":"300","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"WXJ30":{"ST":"GA","STATE":"Georgia","COUNTY":"Webster","SAME":"013307","SITENAME":"Americus","SITELOC":"Americus","SITESTATE":"GA","FREQ":"162.425","CALLSIGN":"WXJ30","LAT":"32.0625","LON":"-84.2125","PWR":"1000","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"KWN50":{"ST":"GA","STATE":"Georgia","COUNTY":"Worth","SAME":"013321","SITENAME":"Ashburn","SITELOC":"Ashburn","SITESTATE":"GA","FREQ":"162.450","CALLSIGN":"KWN50","LAT":"31.639444","LON":"-83.749444","PWR":"300","STATUS":"NORMAL","WFO":"Tallahassee|FL","REMARKS":""},"KHC28":{"ST":"SC","STATE":"South Carolina","COUNTY":"Saluda","SAME":"045081","SITENAME":"Kirksey","SITELOC":"Greenwood County","SITESTATE":"SC","FREQ":"162.425","CALLSIGN":"KHC28","LAT":"33.9975","LON":"-82.051944","PWR":"1000","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"KXI75":{"ST":"TN","STATE":"Tennessee","COUNTY":"Polk","SAME":"047139","SITENAME":"Blue Ridge","SITELOC":"Blue Ridge","SITESTATE":"GA","FREQ":"162.475","CALLSIGN":"KXI75","LAT":"34.8675","LON":"-84.333889","PWR":"300","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"KXI22":{"ST":"NC","STATE":"North Carolina","COUNTY":"Clay","SAME":"037043","SITENAME":"Brasstown Bald","SITELOC":"Brasstown Bald Mtn.","SITESTATE":"GA","FREQ":"162.500","CALLSIGN":"KXI22","LAT":"34.874167","LON":"-83.811944","PWR":"100","STATUS":"OUT OF SERVICE","WFO":"Peachtree City|GA","REMARKS":""},"KPS506":{"ST":"GA","STATE":"Georgia","COUNTY":"Wilkes","SAME":"013317","SITENAME":"Washington","SITELOC":"Wilkes County","SITESTATE":"GA","FREQ":"162.500","CALLSIGN":"KPS506","LAT":"33.721583","LON":"-82.722333","PWR":"300","STATUS":"NORMAL","WFO":"Peachtree City|GA","REMARKS":""},"WXM85":{"ST":"MP","STATE":"Commonwealth of the Northern Mariana Islands","COUNTY":"Rota","SAME":"069100","SITENAME":"Guam","SITELOC":"Mount Alutom","SITESTATE":"GU","FREQ":"162.400","CALLSIGN":"WXM85","LAT":"13.4333","LON":"144.7125","PWR":"375","STATUS":"NORMAL","WFO":"Guam|GU","REMARKS":""},"WWG76":{"ST":"HI","STATE":"Hawaii","COUNTY":"Hawaii","SAME":"015001","SITENAME":"Kulani Cone","SITELOC":"Kulani Cone (Hawaii)","SITESTATE":"HI","FREQ":"162.550","CALLSIGN":"WWG76","LAT":"19.5206","LON":"-155.2992","PWR":"1000","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":"SE 1/3"},"WWG75":{"ST":"HI","STATE":"Hawaii","COUNTY":"Maui","SAME":"015009","SITENAME":"Maui","SITELOC":"Mt. Haleakala","SITESTATE":"HI","FREQ":"162.400","CALLSIGN":"WWG75","LAT":"20.7072","LON":"-156.2586","PWR":"1000","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":""},"WZ2540":{"ST":"HI","STATE":"Hawaii","COUNTY":"Hawaii","SAME":"015001","SITENAME":"North Kohala","SITELOC":"Kamuela","SITESTATE":"HI","FREQ":"162.500","CALLSIGN":"WZ2540","LAT":"20.125345","LON":"-155.77741","PWR":"125","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":"ALL"},"WWG27":{"ST":"HI","STATE":"Hawaii","COUNTY":"Hawaii","SAME":"015001","SITENAME":"South Point","SITELOC":"South Point","SITESTATE":"HI","FREQ":"162.550","CALLSIGN":"WWG27","LAT":"19.002248","LON":"-155.674256","PWR":"1000","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":"S Tip"},"WWF39":{"ST":"HI","STATE":"Hawaii","COUNTY":"Honolulu","SAME":"015003","SITENAME":"Hawaii Kai","SITELOC":"Hawaii Kai","SITESTATE":"HI","FREQ":"162.450","CALLSIGN":"WWF39","LAT":"21.320528","LON":"-157.682008","PWR":"10","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":"S Tip"},"KBA99":{"ST":"HI","STATE":"Hawaii","COUNTY":"Honolulu","SAME":"015003","SITENAME":"Oahu","SITELOC":"Mt. Kaala","SITESTATE":"HI","FREQ":"162.550","CALLSIGN":"KBA99","LAT":"21.508889","LON":"-158.1475","PWR":"1000","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":"NW"},"WWG74":{"ST":"HI","STATE":"Hawaii","COUNTY":"Kauai","SAME":"015007","SITENAME":"Kauai","SITELOC":"Waimea (Koke'e)","SITESTATE":"HI","FREQ":"162.400","CALLSIGN":"WWG74","LAT":"22.1197","LON":"-159.6672","PWR":"1000","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":"NW"},"WZ2557":{"ST":"HI","STATE":"Hawaii","COUNTY":"Kauai","SAME":"015007","SITENAME":"Lihue","SITELOC":"Lihue","SITESTATE":"HI","FREQ":"162.450","CALLSIGN":"WZ2557","LAT":"21.9872","LON":"-159.3386","PWR":"150","STATUS":"NORMAL","WFO":"Honolulu|HI","REMARKS":""},"WXL57":{"ST":"IA","STATE":"Iowa","COUNTY":"Warren","SAME":"019181","SITENAME":"Des Moines","SITELOC":"Johnston","SITESTATE":"IA","FREQ":"162.550","CALLSIGN":"WXL57","LAT":"41.8094","LON":"-93.621583","PWR":"1000","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"KXI65":{"ST":"IA","STATE":"Iowa","COUNTY":"Union","SAME":"019175","SITENAME":"Lenox","SITELOC":"Lenox","SITESTATE":"IA","FREQ":"162.450","CALLSIGN":"KXI65","LAT":"40.842306","LON":"-94.632556","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":"Western 1/2"},"KZZ52":{"ST":"IA","STATE":"Iowa","COUNTY":"Shelby","SAME":"019165","SITENAME":"Hancock/Pottawattam","SITELOC":"Hancock","SITESTATE":"IA","FREQ":"162.525","CALLSIGN":"KZZ52","LAT":"41.34425","LON":"-95.256028","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"KXI60":{"ST":"MN","STATE":"Minnesota","COUNTY":"Houston","SAME":"027055","SITENAME":"Decorah","SITELOC":"Decorah","SITESTATE":"IA","FREQ":"162.525","CALLSIGN":"KXI60","LAT":"43.2875","LON":"-91.8844","PWR":"300","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WXJ86":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vernon","SAME":"055123","SITENAME":"LaCrescent","SITELOC":"LaCrescent","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"WXJ86","LAT":"43.804722","LON":"-91.368333","PWR":"1000","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WWG86":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Grant","SAME":"055043","SITENAME":"Prairie Du Chien","SITELOC":"Bloomington","SITESTATE":"WI","FREQ":"162.500","CALLSIGN":"WWG86","LAT":"42.902385","LON":"-90.946542","PWR":"1000","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WXN91":{"ST":"MO","STATE":"Missouri","COUNTY":"Putnam","SAME":"029171","SITENAME":"Lake Rathbun","SITELOC":"Lake Rathbun","SITESTATE":"IA","FREQ":"162.425","CALLSIGN":"WXN91","LAT":"40.81925","LON":"-92.904","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"WXM36":{"ST":"MO","STATE":"Missouri","COUNTY":"Sullivan","SAME":"029211","SITENAME":"Lancaster","SITELOC":"Lancaster","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"WXM36","LAT":"40.497778","LON":"-92.528889","PWR":"330","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":"EAST"},"KZZ51":{"ST":"IA","STATE":"Iowa","COUNTY":"Shelby","SAME":"019165","SITENAME":"Carroll","SITELOC":"Carroll","SITESTATE":"IA","FREQ":"162.425","CALLSIGN":"KZZ51","LAT":"42.049028","LON":"-94.8844","PWR":"1000","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":"Northeast"},"WXL61":{"ST":"IA","STATE":"Iowa","COUNTY":"Washington","SAME":"019183","SITENAME":"Cedar Rapids","SITELOC":"Cedar Rapids","SITESTATE":"IA","FREQ":"162.475","CALLSIGN":"WXL61","LAT":"41.909167","LON":"-91.654722","PWR":"1000","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"WXL94":{"ST":"IA","STATE":"Iowa","COUNTY":"Grundy","SAME":"019075","SITENAME":"Waterloo","SITELOC":"Bremer","SITESTATE":"IA","FREQ":"162.550","CALLSIGN":"WXL94","LAT":"42.772583","LON":"-92.376778","PWR":"1000","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"WXK84":{"ST":"IA","STATE":"Iowa","COUNTY":"Wright","SAME":"019197","SITENAME":"Fort Dodge","SITELOC":"Fort Dodge","SITESTATE":"IA","FREQ":"162.400","CALLSIGN":"WXK84","LAT":"42.456778","LON":"-94.221889","PWR":"300","STATUS":"OUT OF SERVICE","WFO":"Des Moines|IA","REMARKS":""},"KJY64":{"ST":"IA","STATE":"Iowa","COUNTY":"Linn","SAME":"019113","SITENAME":"Delaware","SITELOC":"Delaware County","SITESTATE":"IA","FREQ":"162.450","CALLSIGN":"KJY64","LAT":"42.479722","LON":"-91.346111","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"KWN47":{"ST":"IA","STATE":"Iowa","COUNTY":"Sac","SAME":"019161","SITENAME":"Storm Lake","SITELOC":"Lakeside","SITESTATE":"IA","FREQ":"162.450","CALLSIGN":"KWN47","LAT":"42.6497","LON":"-95.2119","PWR":"300","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WNG666":{"ST":"IA","STATE":"Iowa","COUNTY":"Wright","SAME":"019197","SITENAME":"Iowa Falls","SITELOC":"Hampton","SITESTATE":"IA","FREQ":"162.525","CALLSIGN":"WNG666","LAT":"42.505","LON":"-93.263167","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"WNG668":{"ST":"IA","STATE":"Iowa","COUNTY":"Shelby","SAME":"019165","SITENAME":"Denison","SITELOC":"Denison","SITESTATE":"IA","FREQ":"162.550","CALLSIGN":"WNG668","LAT":"42.0458","LON":"-95.319889","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"KZZ83":{"ST":"IL","STATE":"Illinois","COUNTY":"Jo Daviess","SAME":"017085","SITENAME":"Maquoketa","SITELOC":"Jackson","SITESTATE":"IA","FREQ":"162.425","CALLSIGN":"KZZ83","LAT":"42.090556","LON":"-90.726944","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"WXJ73":{"ST":"IL","STATE":"Illinois","COUNTY":"Whiteside","SAME":"017195","SITENAME":"Quad Cities","SITELOC":"Rock Island","SITESTATE":"IL","FREQ":"162.550","CALLSIGN":"WXJ73","LAT":"41.51","LON":"-90.574444","PWR":"1000","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"KJY63":{"ST":"MN","STATE":"Minnesota","COUNTY":"Freeborn","SAME":"027047","SITENAME":"Forest City","SITELOC":"Hancock","SITESTATE":"IA","FREQ":"162.500","CALLSIGN":"KJY63","LAT":"43.262222","LON":"-93.638583","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"KXI68":{"ST":"MN","STATE":"Minnesota","COUNTY":"Mower","SAME":"027099","SITENAME":"St. Ansgar","SITELOC":"Kirkwood & 420th","SITESTATE":"IA","FREQ":"162.450","CALLSIGN":"KXI68","LAT":"43.372222","LON":"-92.833056","PWR":"1000","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WXL62":{"ST":"SD","STATE":"South Dakota","COUNTY":"Union","SAME":"046127","SITENAME":"Sioux City","SITELOC":"Lawton","SITESTATE":"IA","FREQ":"162.475","CALLSIGN":"WXL62","LAT":"42.482139","LON":"-96.258306","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"KZZ68":{"ST":"IA","STATE":"Iowa","COUNTY":"Wayne","SAME":"019185","SITENAME":"Van Wert","SITELOC":"Osceola","SITESTATE":"IA","FREQ":"162.475","CALLSIGN":"KZZ68","LAT":"40.868111","LON":"-93.804833","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"KZZ80":{"ST":"MN","STATE":"Minnesota","COUNTY":"Jackson","SAME":"027063","SITENAME":"Milford","SITELOC":"Milford","SITESTATE":"IA","FREQ":"162.550","CALLSIGN":"KZZ80","LAT":"43.343083","LON":"-95.207889","PWR":"300","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WXL64":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Lafayette","SAME":"055065","SITENAME":"Dubuque","SITELOC":"Jamestown","SITESTATE":"WI","FREQ":"162.400","CALLSIGN":"WXL64","LAT":"42.5286","LON":"-90.613889","PWR":"1000","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"WXN85":{"ST":"IA","STATE":"Iowa","COUNTY":"Washington","SAME":"019183","SITENAME":"Fairfield","SITELOC":"Fairfield","SITESTATE":"IA","FREQ":"162.400","CALLSIGN":"WXN85","LAT":"41.089289","LON":"-91.968285","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":"SW"},"WXN83":{"ST":"IL","STATE":"Illinois","COUNTY":"Warren","SAME":"017187","SITENAME":"Burlington","SITELOC":"Burlington","SITESTATE":"IA","FREQ":"162.525","CALLSIGN":"WXN83","LAT":"40.833889","LON":"-91.212778","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":"W"},"WNG688":{"ST":"MN","STATE":"Minnesota","COUNTY":"Martin","SAME":"027091","SITENAME":"Ringsted","SITELOC":"Ringsted","SITESTATE":"IA","FREQ":"162.475","CALLSIGN":"WNG688","LAT":"43.3414","LON":"-94.460583","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"KZZ50":{"ST":"IA","STATE":"Iowa","COUNTY":"Page","SAME":"019145","SITENAME":"Essex","SITELOC":"Essex","SITESTATE":"IA","FREQ":"162.550","CALLSIGN":"KZZ50","LAT":"40.812778","LON":"-95.252194","PWR":"300","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"KXI98":{"ST":"IA","STATE":"Iowa","COUNTY":"Tama","SAME":"019171","SITENAME":"Marshalltown","SITELOC":"Marshalltown","SITESTATE":"IA","FREQ":"162.500","CALLSIGN":"KXI98","LAT":"42.0475","LON":"-92.8617","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"KIH61":{"ST":"NE","STATE":"Nebraska","COUNTY":"Washington","SAME":"031177","SITENAME":"Omaha","SITELOC":"Omaha","SITESTATE":"NE","FREQ":"162.400","CALLSIGN":"KIH61","LAT":"41.257722","LON":"-96.009333","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"KXI62":{"ST":"IA","STATE":"Iowa","COUNTY":"Tama","SAME":"019171","SITENAME":"Montezuma","SITELOC":"Montezuma","SITESTATE":"IA","FREQ":"162.450","CALLSIGN":"KXI62","LAT":"41.6108","LON":"-92.562722","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":"South"},"WNG730":{"ST":"IA","STATE":"Iowa","COUNTY":"Wapello","SAME":"019179","SITENAME":"Ottumwa","SITELOC":"Wapello County","SITESTATE":"IA","FREQ":"162.500","CALLSIGN":"WNG730","LAT":"41.024139","LON":"-92.482306","PWR":"300","STATUS":"NORMAL","WFO":"Des Moines|IA","REMARKS":""},"WXL99":{"ST":"MO","STATE":"Missouri","COUNTY":"Scotland","SAME":"029199","SITENAME":"Medill","SITELOC":"Kahoka","SITESTATE":"MO","FREQ":"162.450","CALLSIGN":"WXL99","LAT":"40.444555","LON":"-91.8056","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"WXM28":{"ST":"SD","STATE":"South Dakota","COUNTY":"Turner","SAME":"046125","SITENAME":"Sioux Falls","SITELOC":"Rowena","SITESTATE":"SD","FREQ":"162.400","CALLSIGN":"WXM28","LAT":"43.518722","LON":"-96.534917","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"KWN48":{"ST":"IA","STATE":"Iowa","COUNTY":"Sioux","SAME":"019167","SITENAME":"Sanborn","SITELOC":"Sanborn","SITESTATE":"IA","FREQ":"162.525","CALLSIGN":"KWN48","LAT":"43.180917","LON":"-95.643139","PWR":"300","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":"Eastern 1/2"},"KZZ37":{"ST":"MO","STATE":"Missouri","COUNTY":"Worth","SAME":"029227","SITENAME":"Maryville","SITELOC":"Conception Junction","SITESTATE":"MO","FREQ":"162.425","CALLSIGN":"KZZ37","LAT":"40.2875","LON":"-94.790833","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":""},"WXK68":{"ST":"ID","STATE":"Idaho","COUNTY":"Owyhee","SAME":"016073","SITENAME":"Boise","SITELOC":"Doe Point","SITESTATE":"ID","FREQ":"162.550","CALLSIGN":"WXK68","LAT":"43.754611","LON":"-116.095","PWR":"300","STATUS":"NORMAL","WFO":"Boise|ID","REMARKS":"N"},"WWF58":{"ST":"ID","STATE":"Idaho","COUNTY":"Valley","SAME":"016085","SITENAME":"McCall","SITELOC":"Brundage Mtn.","SITESTATE":"ID","FREQ":"162.475","CALLSIGN":"WWF58","LAT":"45.008139","LON":"-116.134417","PWR":"100","STATUS":"NORMAL","WFO":"Boise|ID","REMARKS":"W"},"WXL33":{"ST":"ID","STATE":"Idaho","COUNTY":"Power","SAME":"016077","SITENAME":"Pocatello","SITELOC":"Atomic City","SITESTATE":"ID","FREQ":"162.550","CALLSIGN":"WXL33","LAT":"43.500833","LON":"-112.663333","PWR":"100","STATUS":"NORMAL","WFO":"Pocatello|ID","REMARKS":"N"},"KZZ72":{"ST":"ID","STATE":"Idaho","COUNTY":"Oneida","SAME":"016071","SITENAME":"Sedgwick Peak","SITELOC":"Soda Springs","SITESTATE":"ID","FREQ":"162.425","CALLSIGN":"KZZ72","LAT":"42.515833","LON":"-111.9225","PWR":"100","STATUS":"NORMAL","WFO":"Pocatello|ID","REMARKS":"NE"},"WXL63":{"ST":"WY","STATE":"Wyoming","COUNTY":"Lincoln","SAME":"056023","SITENAME":"Bear Lake","SITELOC":"Laketown","SITESTATE":"UT","FREQ":"162.500","CALLSIGN":"WXL63","LAT":"41.8825","LON":"-111.269167","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"SW 1/3"},"WXL86":{"ST":"WA","STATE":"Washington","COUNTY":"Stevens","SAME":"053065","SITENAME":"Spokane","SITELOC":"Spokane Mtn.","SITESTATE":"WA","FREQ":"162.400","CALLSIGN":"WXL86","LAT":"47.921667","LON":"-117.113333","PWR":"100","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":""},"WNG605":{"ST":"ID","STATE":"Idaho","COUNTY":"Power","SAME":"016077","SITENAME":"Burley","SITELOC":"Alibon","SITESTATE":"ID","FREQ":"162.475","CALLSIGN":"WNG605","LAT":"42.361389","LON":"-113.455556","PWR":"100","STATUS":"NORMAL","WFO":"Pocatello|ID","REMARKS":"W"},"WZ2520":{"ST":"ID","STATE":"Idaho","COUNTY":"Blaine","SAME":"016013","SITENAME":"Sun Valley","SITELOC":"Bald Mtn","SITESTATE":"ID","FREQ":"162.450","CALLSIGN":"WZ2520","LAT":"43.661389","LON":"-114.403056","PWR":"150","STATUS":"NORMAL","WFO":"Pocatello|ID","REMARKS":""},"WWG99":{"ST":"WA","STATE":"Washington","COUNTY":"Spokane","SAME":"053063","SITENAME":"Bonners Ferry","SITELOC":"Black Mountain","SITESTATE":"ID","FREQ":"162.500","CALLSIGN":"WWG99","LAT":"48.610278","LON":"-116.256667","PWR":"100","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":""},"KJY57":{"ST":"ID","STATE":"Idaho","COUNTY":"Teton","SAME":"016081","SITENAME":"Driggs","SITELOC":"Relay Ridge","SITESTATE":"ID","FREQ":"162.450","CALLSIGN":"KJY57","LAT":"43.706667","LON":"-111.344444","PWR":"100","STATUS":"NORMAL","WFO":"Pocatello|ID","REMARKS":""},"WXK88":{"ST":"OR","STATE":"Oregon","COUNTY":"Malheur","SAME":"041045","SITENAME":"Payette","SITELOC":"Syme Hill / Ontario OR","SITESTATE":"ID","FREQ":"162.400","CALLSIGN":"WXK88","LAT":"43.948139","LON":"-116.928722","PWR":"100","STATUS":"NORMAL","WFO":"Boise|ID","REMARKS":"NE"},"WXL35":{"ST":"ID","STATE":"Idaho","COUNTY":"Twin Falls","SAME":"016083","SITENAME":"Twin Falls","SITELOC":"Jerome","SITESTATE":"ID","FREQ":"162.400","CALLSIGN":"WXL35","LAT":"42.7303","LON":"-114.413389","PWR":"300","STATUS":"NORMAL","WFO":"Boise|ID","REMARKS":"N"},"WXK98":{"ST":"WA","STATE":"Washington","COUNTY":"Whitman","SAME":"053075","SITENAME":"Lewiston","SITELOC":"Winchester Grade","SITESTATE":"ID","FREQ":"162.550","CALLSIGN":"WXK98","LAT":"46.33","LON":"-116.632778","PWR":"300","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":""},"WZ2535":{"ST":"ID","STATE":"Idaho","COUNTY":"Nez Perce","SAME":"016069","SITENAME":"Orofino","SITELOC":"Norton Knob","SITESTATE":"ID","FREQ":"162.500","CALLSIGN":"WZ2535","LAT":"46.5086","LON":"-116.2167","PWR":"100","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":""},"WXM22":{"ST":"UT","STATE":"Utah","COUNTY":"Weber","SAME":"049057","SITENAME":"Logan","SITELOC":"Mount Logan","SITESTATE":"UT","FREQ":"162.400","CALLSIGN":"WXM22","LAT":"41.713611","LON":"-111.717222","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"E 1/2"},"KXI82":{"ST":"ID","STATE":"Idaho","COUNTY":"Idaho","SAME":"016049","SITENAME":"Grangeville","SITELOC":"Grangeville","SITESTATE":"ID","FREQ":"162.450","CALLSIGN":"KXI82","LAT":"45.863611","LON":"-116.122778","PWR":"100","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":"W"},"KPS509":{"ST":"ID","STATE":"Idaho","COUNTY":"Lemhi","SAME":"016059","SITENAME":"Salmon","SITELOC":"Mt Baldy","SITESTATE":"ID","FREQ":"162.500","CALLSIGN":"KPS509","LAT":"45.145278","LON":"-114.008333","PWR":"100","STATUS":"NORMAL","WFO":"Missoula|MT","REMARKS":""},"WXK82":{"ST":"MO","STATE":"Missouri","COUNTY":"Shelby","SAME":"029205","SITENAME":"Hannibal","SITELOC":"Hannibal","SITESTATE":"MO","FREQ":"162.475","CALLSIGN":"WXK82","LAT":"39.729944","LON":"-91.4055","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"WXJ92":{"ST":"IL","STATE":"Illinois","COUNTY":"Warren","SAME":"017187","SITENAME":"Macomb","SITELOC":"Macomb","SITESTATE":"IL","FREQ":"162.500","CALLSIGN":"WXJ92","LAT":"40.427778","LON":"-90.682778","PWR":"1000","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"KXI93":{"ST":"MO","STATE":"Missouri","COUNTY":"Scott","SAME":"029201","SITENAME":"Cape Girardeau","SITELOC":"Cape Girardeau","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"KXI93","LAT":"37.3625","LON":"-89.5222","PWR":"300","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"WXM49":{"ST":"KY","STATE":"Kentucky","COUNTY":"Ballard","SAME":"021007","SITENAME":"Marion","SITELOC":"Goreville","SITESTATE":"IL","FREQ":"162.425","CALLSIGN":"WXM49","LAT":"37.557222","LON":"-89.023333","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KXI79":{"ST":"IL","STATE":"Illinois","COUNTY":"Montgomery","SAME":"017135","SITENAME":"Hillsboro","SITELOC":"Coffeen-Hillsboro","SITESTATE":"IL","FREQ":"162.425","CALLSIGN":"KXI79","LAT":"39.062861","LON":"-89.406694","PWR":"300","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"KXI49":{"ST":"IL","STATE":"Illinois","COUNTY":"Wayne","SAME":"017191","SITENAME":"Salem","SITELOC":"Salem","SITESTATE":"IL","FREQ":"162.475","CALLSIGN":"KXI49","LAT":"38.5439","LON":"-88.9245","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"KXI41":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Walworth","SAME":"055127","SITENAME":"Crystal Lake","SITELOC":"Crystal Lake","SITESTATE":"IL","FREQ":"162.500","CALLSIGN":"KXI41","LAT":"42.259444","LON":"-88.3625","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"WNG536":{"ST":"IL","STATE":"Illinois","COUNTY":"Winnebago","SAME":"017201","SITENAME":"DeKalb","SITELOC":"DeKalb","SITESTATE":"IL","FREQ":"162.550","CALLSIGN":"WNG536","LAT":"41.9356","LON":"-88.7642","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"WWG90":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Walworth","SAME":"055127","SITENAME":"Janesville","SITELOC":"Milton - Rock County","SITESTATE":"WI","FREQ":"162.425","CALLSIGN":"WWG90","LAT":"42.773889","LON":"-89.005556","PWR":"300","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"KZZ57":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Rock","SAME":"055105","SITENAME":"Rockford","SITELOC":"Latham Park","SITESTATE":"IL","FREQ":"162.475","CALLSIGN":"KZZ57","LAT":"42.3672","LON":"-89.0869","PWR":"1000","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"WXM90":{"ST":"IL","STATE":"Illinois","COUNTY":"Scott","SAME":"017171","SITENAME":"Jacksonville","SITELOC":"Jacksonville","SITESTATE":"IL","FREQ":"162.525","CALLSIGN":"WXM90","LAT":"39.6667","LON":"-90.341667","PWR":"300","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KZZ55":{"ST":"IL","STATE":"Illinois","COUNTY":"Whiteside","SAME":"017195","SITENAME":"Dixon","SITELOC":"Dixon","SITESTATE":"IL","FREQ":"162.525","CALLSIGN":"KZZ55","LAT":"41.897778","LON":"-89.605556","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"WXL22":{"ST":"IL","STATE":"Illinois","COUNTY":"Whiteside","SAME":"017195","SITENAME":"Princeton","SITELOC":"Tiskilwa","SITESTATE":"IL","FREQ":"162.425","CALLSIGN":"WXL22","LAT":"41.285556","LON":"-89.598889","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":"SE"},"KXI70":{"ST":"IL","STATE":"Illinois","COUNTY":"Madison","SAME":"017119","SITENAME":"Jerseyville","SITELOC":"Jerseyville","SITESTATE":"IL","FREQ":"162.450","CALLSIGN":"KXI70","LAT":"39.104194","LON":"-90.264611","PWR":"300","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"KZZ56":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Lafayette","SAME":"055065","SITENAME":"Freeport","SITELOC":"Eleroy","SITESTATE":"IL","FREQ":"162.450","CALLSIGN":"KZZ56","LAT":"42.328056","LON":"-89.725","PWR":"300","STATUS":"NORMAL","WFO":"Quad Cities|IA","REMARKS":""},"WXJ75":{"ST":"IL","STATE":"Illinois","COUNTY":"Sangamon","SAME":"017167","SITENAME":"Springfield","SITELOC":"Springfield","SITESTATE":"IL","FREQ":"162.400","CALLSIGN":"WXJ75","LAT":"39.7833","LON":"-89.4461","PWR":"1000","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"WXJ76":{"ST":"IL","STATE":"Illinois","COUNTY":"Vermilion","SAME":"017183","SITENAME":"Champaign","SITELOC":"Seymour","SITESTATE":"IL","FREQ":"162.550","CALLSIGN":"WXJ76","LAT":"40.1058","LON":"-88.449667","PWR":"1000","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":"ALL"},"KXI46":{"ST":"IL","STATE":"Illinois","COUNTY":"Shelby","SAME":"017173","SITENAME":"Shelbyville","SITELOC":"Shelbyville","SITESTATE":"IL","FREQ":"162.500","CALLSIGN":"KXI46","LAT":"39.306111","LON":"-88.935556","PWR":"300","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KXI48":{"ST":"IL","STATE":"Illinois","COUNTY":"Wayne","SAME":"017191","SITENAME":"Newton","SITELOC":"Newton","SITESTATE":"IL","FREQ":"162.450","CALLSIGN":"KXI48","LAT":"38.964105","LON":"-88.2231","PWR":"1000","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KXI47":{"ST":"IN","STATE":"Indiana","COUNTY":"Vigo","SAME":"018167","SITENAME":"Paris","SITELOC":"Paris","SITESTATE":"IL","FREQ":"162.525","CALLSIGN":"KXI47","LAT":"39.552222","LON":"-87.7","PWR":"300","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KWO39":{"ST":"IN","STATE":"Indiana","COUNTY":"Porter","SAME":"018127","SITENAME":"Chicago","SITELOC":"Sear's Tower","SITESTATE":"IL","FREQ":"162.550","CALLSIGN":"KWO39","LAT":"41.878889","LON":"-87.636111","PWR":"500","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"KZZ81":{"ST":"IN","STATE":"Indiana","COUNTY":"Lake","SAME":"018089","SITENAME":"Lockport","SITELOC":"Downers Grove","SITESTATE":"IL","FREQ":"162.425","CALLSIGN":"KZZ81","LAT":"41.6006","LON":"-87.97895","PWR":"1000","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"KZZ65":{"ST":"IL","STATE":"Illinois","COUNTY":"Woodford","SAME":"017203","SITENAME":"Bloomington","SITELOC":"Bloomington Heights","SITESTATE":"IL","FREQ":"162.525","CALLSIGN":"KZZ65","LAT":"40.476111","LON":"-89.033889","PWR":"300","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KXI58":{"ST":"IL","STATE":"Illinois","COUNTY":"Will","SAME":"017197","SITENAME":"Plano","SITELOC":"Yorkville","SITESTATE":"IL","FREQ":"162.400","CALLSIGN":"KXI58","LAT":"41.6061","LON":"-88.4525","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"KIG76":{"ST":"KY","STATE":"Kentucky","COUNTY":"Union","SAME":"021225","SITENAME":"Evansville","SITELOC":"Haubstadt","SITESTATE":"IN","FREQ":"162.550","CALLSIGN":"KIG76","LAT":"38.18","LON":"-87.486944","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KXI86":{"ST":"IN","STATE":"Indiana","COUNTY":"Newton","SAME":"018111","SITENAME":"Crescent City","SITELOC":"Crescent City","SITESTATE":"IL","FREQ":"162.500","CALLSIGN":"KXI86","LAT":"40.7178","LON":"-87.86","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"WXK24":{"ST":"IL","STATE":"Illinois","COUNTY":"Woodford","SAME":"017203","SITENAME":"Odell","SITELOC":"Odell","SITESTATE":"IL","FREQ":"162.450","CALLSIGN":"WXK24","LAT":"40.9925","LON":"-88.598056","PWR":"1000","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"WXJ71":{"ST":"IL","STATE":"Illinois","COUNTY":"Woodford","SAME":"017203","SITENAME":"Peoria","SITELOC":"East Peoria","SITESTATE":"IL","FREQ":"162.475","CALLSIGN":"WXJ71","LAT":"40.628889","LON":"-89.57","PWR":"1000","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KXI52":{"ST":"IL","STATE":"Illinois","COUNTY":"White","SAME":"017193","SITENAME":"McLeansboro","SITELOC":"McLeansboro","SITESTATE":"IL","FREQ":"162.400","CALLSIGN":"KXI52","LAT":"38.1139","LON":"-88.5458","PWR":"300","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KZZ66":{"ST":"IL","STATE":"Illinois","COUNTY":"Warren","SAME":"017187","SITENAME":"Galesburg","SITELOC":"Galesburg","SITESTATE":"IL","FREQ":"162.400","CALLSIGN":"KZZ66","LAT":"40.988056","LON":"-90.317778","PWR":"300","STATUS":"NORMAL","WFO":"Lincoln|IL","REMARKS":""},"KZZ58":{"ST":"IN","STATE":"Indiana","COUNTY":"Newton","SAME":"018111","SITENAME":"Kankakee","SITELOC":"Aroma Park","SITESTATE":"IL","FREQ":"162.525","CALLSIGN":"KZZ58","LAT":"41.0775","LON":"-87.756111","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"KZZ76":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Waukesha","SAME":"055133","SITENAME":"Racine","SITELOC":"Racine","SITESTATE":"WI","FREQ":"162.450","CALLSIGN":"KZZ76","LAT":"42.669722","LON":"-87.8475","PWR":"300","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"KDO89":{"ST":"MO","STATE":"Missouri","COUNTY":"Warren","SAME":"029219","SITENAME":"St. Louis","SITELOC":"Shrewsbury","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"KDO89","LAT":"38.580583","LON":"-90.32925","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"KIH46":{"ST":"TN","STATE":"Tennessee","COUNTY":"Weakley","SAME":"047183","SITENAME":"Mayfield","SITELOC":"Mayfield","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"KIH46","LAT":"36.6925","LON":"-88.536111","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KXI42":{"ST":"MO","STATE":"Missouri","COUNTY":"Ste. Genevieve","SAME":"029186","SITENAME":"Chester","SITELOC":"Chester","SITESTATE":"IL","FREQ":"162.450","CALLSIGN":"KXI42","LAT":"37.953139","LON":"-89.876639","PWR":"300","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"WXJ58":{"ST":"OH","STATE":"Ohio","COUNTY":"Paulding","SAME":"039125","SITENAME":"Fort Wayne","SITELOC":"Fort Wayne","SITESTATE":"IN","FREQ":"162.550","CALLSIGN":"WXJ58","LAT":"41.103611","LON":"-85.191111","PWR":"1000","STATUS":"NORMAL","WFO":"Northern Indiana|IN","REMARKS":""},"WWG73":{"ST":"IN","STATE":"Indiana","COUNTY":"Shelby","SAME":"018145","SITENAME":"Seymour","SITELOC":"Seymour","SITESTATE":"IN","FREQ":"162.525","CALLSIGN":"WWG73","LAT":"38.958889","LON":"-85.878611","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"WXK74":{"ST":"IN","STATE":"Indiana","COUNTY":"White","SAME":"018181","SITENAME":"Monticello/Lafayette","SITELOC":"Yeoman","SITESTATE":"IN","FREQ":"162.475","CALLSIGN":"WXK74","LAT":"40.668889","LON":"-86.695556","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"WXM98":{"ST":"IN","STATE":"Indiana","COUNTY":"Wells","SAME":"018179","SITENAME":"Marion","SITELOC":"Marion","SITESTATE":"IN","FREQ":"162.450","CALLSIGN":"WXM98","LAT":"40.5969","LON":"-85.6558","PWR":"300","STATUS":"NORMAL","WFO":"Northern Indiana|IN","REMARKS":"SOUTH WEST "},"KJY93":{"ST":"IN","STATE":"Indiana","COUNTY":"Randolph","SAME":"018135","SITENAME":"Muncie","SITELOC":"Ball State Muncie","SITESTATE":"IN","FREQ":"162.425","CALLSIGN":"KJY93","LAT":"40.093611","LON":"-85.392222","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"KEC74":{"ST":"IN","STATE":"Indiana","COUNTY":"Tipton","SAME":"018159","SITENAME":"Indianapolis","SITELOC":"Indianapolis","SITESTATE":"IN","FREQ":"162.550","CALLSIGN":"KEC74","LAT":"39.7675","LON":"-86.0025","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"WXM78":{"ST":"IN","STATE":"Indiana","COUNTY":"Owen","SAME":"018119","SITENAME":"Bloomington","SITELOC":"Indiana University","SITESTATE":"IN","FREQ":"162.450","CALLSIGN":"WXM78","LAT":"39.164167","LON":"-86.521111","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"WWG72":{"ST":"IN","STATE":"Indiana","COUNTY":"Orange","SAME":"018117","SITENAME":"Georgia","SITELOC":"Georgia","SITESTATE":"IN","FREQ":"162.500","CALLSIGN":"WWG72","LAT":"38.734722","LON":"-86.578611","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"KIH43":{"ST":"KY","STATE":"Kentucky","COUNTY":"Washington","SAME":"021229","SITENAME":"New Albany","SITELOC":"Floyds Knob","SITESTATE":"IN","FREQ":"162.475","CALLSIGN":"KIH43","LAT":"38.367222","LON":"-85.831389","PWR":"1000","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WXK72":{"ST":"IN","STATE":"Indiana","COUNTY":"Vigo","SAME":"018167","SITENAME":"Putnamville","SITELOC":"Brazil","SITESTATE":"IN","FREQ":"162.400","CALLSIGN":"WXK72","LAT":"39.568333","LON":"-86.886944","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"WWG83":{"ST":"IN","STATE":"Indiana","COUNTY":"Sullivan","SAME":"018153","SITENAME":"Edwardsport","SITELOC":"Edwardsport","SITESTATE":"IN","FREQ":"162.425","CALLSIGN":"WWG83","LAT":"38.8417","LON":"-87.267222","PWR":"1000","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"KXI94":{"ST":"OH","STATE":"Ohio","COUNTY":"Williams","SAME":"039171","SITENAME":"Angola","SITELOC":"Angola","SITESTATE":"IN","FREQ":"162.425","CALLSIGN":"KXI94","LAT":"41.6867","LON":"-84.9836","PWR":"1000","STATUS":"NORMAL","WFO":"Northern Indiana|IN","REMARKS":""},"KIH42":{"ST":"OH","STATE":"Ohio","COUNTY":"Warren","SAME":"039165","SITENAME":"Covington","SITELOC":"Covington","SITESTATE":"KY","FREQ":"162.550","CALLSIGN":"KIH42","LAT":"39.030556","LON":"-84.506389","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"KHB52":{"ST":"OH","STATE":"Ohio","COUNTY":"Preble","SAME":"039135","SITENAME":"Richmond","SITELOC":"Wayne CO Courthouse","SITESTATE":"IN","FREQ":"162.500","CALLSIGN":"KHB52","LAT":"39.8283","LON":"-84.8975","PWR":"300","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"KZZ36":{"ST":"MI","STATE":"Michigan","COUNTY":"St. Joseph","SAME":"026149","SITENAME":"North Webster","SITELOC":"State Rd. 13 (State Hwy.)","SITESTATE":"IN","FREQ":"162.500","CALLSIGN":"KZZ36","LAT":"41.358889","LON":"-85.7","PWR":"300","STATUS":"NORMAL","WFO":"Northern Indiana|IN","REMARKS":""},"WXJ57":{"ST":"MI","STATE":"Michigan","COUNTY":"St. Joseph","SAME":"026149","SITENAME":"South Bend","SITELOC":"Mishawaka","SITESTATE":"IN","FREQ":"162.400","CALLSIGN":"WXJ57","LAT":"41.616111","LON":"-86.192222","PWR":"1000","STATUS":"NORMAL","WFO":"Northern Indiana|IN","REMARKS":""},"WXJ46":{"ST":"OH","STATE":"Ohio","COUNTY":"Warren","SAME":"039165","SITENAME":"Dayton","SITELOC":"Miamisburg","SITESTATE":"OH","FREQ":"162.475","CALLSIGN":"WXJ46","LAT":"39.658333","LON":"-84.316667","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"KZZ27":{"ST":"IN","STATE":"Indiana","COUNTY":"Warren","SAME":"018171","SITENAME":"Newport","SITELOC":"Vermillion","SITESTATE":"IN","FREQ":"162.425","CALLSIGN":"KZZ27","LAT":"39.853889","LON":"-87.408333","PWR":"300","STATUS":"NORMAL","WFO":"Indianapolis|IN","REMARKS":""},"KJY62":{"ST":"MI","STATE":"Michigan","COUNTY":"Berrien","SAME":"026021","SITENAME":"Michigan City","SITELOC":"La Porte","SITESTATE":"IN","FREQ":"162.500","CALLSIGN":"KJY62","LAT":"41.660833","LON":"-86.751667","PWR":"1000","STATUS":"NORMAL","WFO":"Northern Indiana|IN","REMARKS":""},"WNG689":{"ST":"IN","STATE":"Indiana","COUNTY":"Starke","SAME":"018149","SITENAME":"Hebron","SITELOC":"Porter County","SITESTATE":"IN","FREQ":"162.450","CALLSIGN":"WNG689","LAT":"41.3536","LON":"-87.1853","PWR":"300","STATUS":"NORMAL","WFO":"Chicago|IL","REMARKS":""},"KZZ61":{"ST":"KY","STATE":"Kentucky","COUNTY":"Ohio","SAME":"021183","SITENAME":"Whitesville","SITELOC":"Whitesville","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"KZZ61","LAT":"37.691944","LON":"-86.848889","PWR":"300","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KZZ48":{"ST":"KY","STATE":"Kentucky","COUNTY":"Shelby","SAME":"021211","SITENAME":"Owenton","SITELOC":"Owenton","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"KZZ48","LAT":"38.525556","LON":"-84.811111","PWR":"300","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"WXK95":{"ST":"KS","STATE":"Kansas","COUNTY":"Woodson","SAME":"020207","SITENAME":"Chanute","SITELOC":"Erie","SITESTATE":"KS","FREQ":"162.400","CALLSIGN":"WXK95","LAT":"37.573167","LON":"-95.220167","PWR":"1000","STATUS":"NORMAL","WFO":"Wichita|KS","REMARKS":""},"KGG98":{"ST":"KS","STATE":"Kansas","COUNTY":"Woodson","SAME":"020207","SITENAME":"Halls Summit","SITELOC":"Waverly","SITESTATE":"KS","FREQ":"162.425","CALLSIGN":"KGG98","LAT":"38.335","LON":"-95.6744","PWR":"1000","STATUS":"NORMAL","WFO":"Topeka|KS","REMARKS":""},"WZ2512":{"ST":"MO","STATE":"Missouri","COUNTY":"Vernon","SAME":"029217","SITENAME":"Parker","SITELOC":"Mound City","SITESTATE":"KS","FREQ":"162.525","CALLSIGN":"WZ2512","LAT":"38.302944","LON":"-94.959806","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":"NW"},"KEC77":{"ST":"MO","STATE":"Missouri","COUNTY":"Platte","SAME":"029165","SITENAME":"Saint Joseph","SITELOC":"Wathena","SITESTATE":"KS","FREQ":"162.400","CALLSIGN":"KEC77","LAT":"39.709639","LON":"-95.0425","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":""},"WXK91":{"ST":"KS","STATE":"Kansas","COUNTY":"Wabaunsee","SAME":"020197","SITENAME":"Topeka","SITELOC":"Maple Hill","SITESTATE":"KS","FREQ":"162.475","CALLSIGN":"WXK91","LAT":"39.006028","LON":"-96.049389","PWR":"1000","STATUS":"NORMAL","WFO":"Topeka|KS","REMARKS":""},"WNG534":{"ST":"KS","STATE":"Kansas","COUNTY":"Stafford","SAME":"020185","SITENAME":"Belvidere","SITELOC":"Belvidere","SITESTATE":"KS","FREQ":"162.525","CALLSIGN":"WNG534","LAT":"37.530528","LON":"-99.050806","PWR":"1000","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"WZ2511":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Woods","SAME":"040151","SITENAME":"Sharon","SITELOC":"Sharon","SITESTATE":"KS","FREQ":"162.400","CALLSIGN":"WZ2511","LAT":"37.370667","LON":"-98.402889","PWR":"1000","STATUS":"NORMAL","WFO":"Wichita|KS","REMARKS":""},"WXK92":{"ST":"KS","STATE":"Kansas","COUNTY":"Saline","SAME":"020169","SITENAME":"Ellsworth","SITELOC":"Ellsworth","SITESTATE":"KS","FREQ":"162.400","CALLSIGN":"WXK92","LAT":"38.813472","LON":"-98.169611","PWR":"1000","STATUS":"NORMAL","WFO":"Wichita|KS","REMARKS":""},"KPS511":{"ST":"KS","STATE":"Kansas","COUNTY":"Stafford","SAME":"020185","SITENAME":"Great Bend","SITELOC":"Great Bend","SITESTATE":"KS","FREQ":"162.500","CALLSIGN":"KPS511","LAT":"38.447944","LON":"-98.76925","PWR":"1000","STATUS":"NORMAL","WFO":"Wichita|KS","REMARKS":""},"WXM35":{"ST":"KS","STATE":"Kansas","COUNTY":"Trego","SAME":"020195","SITENAME":"Hays","SITELOC":"Hays","SITESTATE":"KS","FREQ":"162.450","CALLSIGN":"WXM35","LAT":"39.0208","LON":"-99.470722","PWR":"1000","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"KZZ30":{"ST":"MO","STATE":"Missouri","COUNTY":"Vernon","SAME":"029217","SITENAME":"El Dorado Springs","SITELOC":"El Dorado Springs","SITESTATE":"MO","FREQ":"162.475","CALLSIGN":"KZZ30","LAT":"37.870194","LON":"-94.033139","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"KWN41":{"ST":"NE","STATE":"Nebraska","COUNTY":"Richardson","SAME":"031147","SITENAME":"Shubert","SITELOC":"Shubert","SITESTATE":"NE","FREQ":"162.500","CALLSIGN":"KWN41","LAT":"40.219694","LON":"-95.665583","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"WWH22":{"ST":"KS","STATE":"Kansas","COUNTY":"Greenwood","SAME":"020073","SITENAME":"Beaumont","SITELOC":"Beaumont","SITESTATE":"KS","FREQ":"162.500","CALLSIGN":"WWH22","LAT":"37.5861","LON":"-96.544917","PWR":"300","STATUS":"NORMAL","WFO":"Wichita|KS","REMARKS":""},"KEC59":{"ST":"KS","STATE":"Kansas","COUNTY":"Sumner","SAME":"020191","SITENAME":"Wichita","SITELOC":"Wichita","SITESTATE":"KS","FREQ":"162.550","CALLSIGN":"KEC59","LAT":"37.750611","LON":"-97.303667","PWR":"1000","STATUS":"NORMAL","WFO":"Wichita|KS","REMARKS":""},"WNG644":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Washington","SAME":"040147","SITENAME":"Bartlesville","SITELOC":"Washington County","SITESTATE":"OK","FREQ":"162.425","CALLSIGN":"WNG644","LAT":"36.756111","LON":"-95.8475","PWR":"1000","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"WXJ61":{"ST":"MO","STATE":"Missouri","COUNTY":"Stone","SAME":"029209","SITENAME":"Avilla","SITELOC":"La Russell","SITESTATE":"MO","FREQ":"162.425","CALLSIGN":"WXJ61","LAT":"37.164222","LON":"-94.0053","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"KJY82":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Ottawa","SAME":"040115","SITENAME":"Neosho","SITELOC":"Newton County","SITESTATE":"MO","FREQ":"162.450","CALLSIGN":"KJY82","LAT":"36.879889","LON":"-94.4255","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WXK96":{"ST":"KS","STATE":"Kansas","COUNTY":"Wallace","SAME":"020199","SITENAME":"Gem","SITELOC":"Colby","SITESTATE":"KS","FREQ":"162.400","CALLSIGN":"WXK96","LAT":"39.480694","LON":"-100.909611","PWR":"1000","STATUS":"NORMAL","WFO":"Goodland|KS","REMARKS":""},"WXK93":{"ST":"KS","STATE":"Kansas","COUNTY":"Seward","SAME":"020175","SITENAME":"Dodge City","SITELOC":"Ensign","SITESTATE":"KS","FREQ":"162.475","CALLSIGN":"WXK93","LAT":"37.641222","LON":"-100.344722","PWR":"1000","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"WNG555":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Beaver","SAME":"040007","SITENAME":"Meade","SITELOC":"Meade","SITESTATE":"KS","FREQ":"162.425","CALLSIGN":"WNG555","LAT":"37.286083","LON":"-100.399528","PWR":"1000","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"WXL71":{"ST":"KS","STATE":"Kansas","COUNTY":"Saline","SAME":"020169","SITENAME":"Abilene","SITELOC":"Abilene","SITESTATE":"KS","FREQ":"162.525","CALLSIGN":"WXL71","LAT":"38.797111","LON":"-97.217083","PWR":"1000","STATUS":"NORMAL","WFO":"Topeka|KS","REMARKS":""},"WXK94":{"ST":"KS","STATE":"Kansas","COUNTY":"Washington","SAME":"020201","SITENAME":"Concordia","SITELOC":"Concordia","SITESTATE":"KS","FREQ":"162.550","CALLSIGN":"WXK94","LAT":"39.4389","LON":"-97.7053","PWR":"1000","STATUS":"NORMAL","WFO":"Topeka|KS","REMARKS":""},"WWF42":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Osage","SAME":"040113","SITENAME":"Ponca City","SITELOC":"Ponca City","SITESTATE":"OK","FREQ":"162.450","CALLSIGN":"WWF42","LAT":"36.689333","LON":"-97.168444","PWR":"300","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"KEC39":{"ST":"NE","STATE":"Nebraska","COUNTY":"Red Willow","SAME":"031145","SITENAME":"Cambridge","SITELOC":"Cambridge","SITESTATE":"NE","FREQ":"162.525","CALLSIGN":"KEC39","LAT":"40.183167","LON":"-100.100667","PWR":"300","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"KID77":{"ST":"MO","STATE":"Missouri","COUNTY":"Ray","SAME":"029177","SITENAME":"Kansas City","SITELOC":"Independence","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"KID77","LAT":"39.0905","LON":"-94.472","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":""},"WNG535":{"ST":"KS","STATE":"Kansas","COUNTY":"Scott","SAME":"020171","SITENAME":"Dighton","SITELOC":"Dighton","SITESTATE":"KS","FREQ":"162.525","CALLSIGN":"WNG535","LAT":"38.432444","LON":"-100.464833","PWR":"1000","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"WXN81":{"ST":"KS","STATE":"Kansas","COUNTY":"Stevens","SAME":"020189","SITENAME":"Ulysses","SITELOC":"Ulysses","SITESTATE":"KS","FREQ":"162.450","CALLSIGN":"WXN81","LAT":"37.505115","LON":"-101.470286","PWR":"1000","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"WWF87":{"ST":"KS","STATE":"Kansas","COUNTY":"Phillips","SAME":"020147","SITENAME":"Lenora","SITELOC":"Lenora","SITESTATE":"KS","FREQ":"162.425","CALLSIGN":"WWF87","LAT":"39.573361","LON":"-99.986194","PWR":"300","STATUS":"NORMAL","WFO":"Goodland|KS","REMARKS":""},"WWG22":{"ST":"KS","STATE":"Kansas","COUNTY":"Wichita","SAME":"020203","SITENAME":"Tribune","SITELOC":"Tribune","SITESTATE":"KS","FREQ":"162.550","CALLSIGN":"WWG22","LAT":"38.456333","LON":"-101.642583","PWR":"300","STATUS":"NORMAL","WFO":"Dodge City|KS","REMARKS":""},"WNG578":{"ST":"NE","STATE":"Nebraska","COUNTY":"Webster","SAME":"031181","SITENAME":"Superior","SITELOC":"Superior","SITESTATE":"NE","FREQ":"162.525","CALLSIGN":"WNG578","LAT":"40.1256","LON":"-98.0678","PWR":"1000","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"KZZ67":{"ST":"KS","STATE":"Kansas","COUNTY":"Washington","SAME":"020201","SITENAME":"Blue Rapids","SITELOC":"Merrimac","SITESTATE":"KS","FREQ":"162.425","CALLSIGN":"KZZ67","LAT":"39.706686","LON":"-96.557","PWR":"1000","STATUS":"NORMAL","WFO":"Topeka|KS","REMARKS":""},"KWN59":{"ST":"NE","STATE":"Nebraska","COUNTY":"Harlan","SAME":"031083","SITENAME":"Kirwin","SITELOC":"Phillipsburg","SITESTATE":"KS","FREQ":"162.500","CALLSIGN":"KWN59","LAT":"39.6036","LON":"-99.121667","PWR":"1000","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"KIH45":{"ST":"KY","STATE":"Kentucky","COUNTY":"Warren","SAME":"021227","SITENAME":"Bowling Green","SITELOC":"Sugar Grove","SITESTATE":"KY","FREQ":"162.400","CALLSIGN":"KIH45","LAT":"37.089444","LON":"-86.634722","PWR":"1000","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WZ2547":{"ST":"KY","STATE":"Kentucky","COUNTY":"Monroe","SAME":"021171","SITENAME":"Edmonton","SITELOC":"Metcalfe Co.","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"WZ2547","LAT":"37.0103","LON":"-85.6036","PWR":"300","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WNG570":{"ST":"KY","STATE":"Kentucky","COUNTY":"Metcalfe","SAME":"021169","SITENAME":"Horse Cave","SITELOC":"Hart County","SITESTATE":"KY","FREQ":"162.500","CALLSIGN":"WNG570","LAT":"37.176389","LON":"-85.923056","PWR":"1000","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"KIH44":{"ST":"KY","STATE":"Kentucky","COUNTY":"Whitley","SAME":"021235","SITENAME":"Somerset","SITELOC":"Bethelridge","SITESTATE":"KY","FREQ":"162.550","CALLSIGN":"KIH44","LAT":"37.166667","LON":"-84.824444","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WNG631":{"ST":"TN","STATE":"Tennessee","COUNTY":"Wilson","SAME":"047189","SITENAME":"Lafayette","SITELOC":"Pleasant Shade","SITESTATE":"TN","FREQ":"162.525","CALLSIGN":"WNG631","LAT":"36.432222","LON":"-85.883611","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"KIH41":{"ST":"KY","STATE":"Kentucky","COUNTY":"Woodford","SAME":"021239","SITENAME":"Lexington","SITELOC":"Richmond","SITESTATE":"KY","FREQ":"162.400","CALLSIGN":"KIH41","LAT":"37.879167","LON":"-84.325833","PWR":"1000","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWG71":{"ST":"KY","STATE":"Kentucky","COUNTY":"Rowan","SAME":"021205","SITENAME":"Morehead","SITELOC":"Morehead","SITESTATE":"KY","FREQ":"162.400","CALLSIGN":"WWG71","LAT":"38.177222","LON":"-83.405","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"KIH40":{"ST":"KY","STATE":"Kentucky","COUNTY":"Wolfe","SAME":"021237","SITENAME":"Hazard","SITELOC":"Hazard","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"KIH40","LAT":"37.192778","LON":"-83.187778","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG62":{"ST":"KY","STATE":"Kentucky","COUNTY":"Bell","SAME":"021013","SITENAME":"Pineville","SITELOC":"Pineville","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WWG62","LAT":"36.730278","LON":"-83.773611","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG61":{"ST":"KY","STATE":"Kentucky","COUNTY":"Powell","SAME":"021197","SITENAME":"Stanton","SITELOC":"Rotten Point","SITESTATE":"KY","FREQ":"162.550","CALLSIGN":"WWG61","LAT":"37.909167","LON":"-83.925556","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"KIH39":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wayne","SAME":"054099","SITENAME":"Ashland","SITELOC":"Ashland","SITESTATE":"KY","FREQ":"162.550","CALLSIGN":"KIH39","LAT":"38.461917","LON":"-82.619833","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":"Not S"},"KZZ49":{"ST":"OH","STATE":"Ohio","COUNTY":"Brown","SAME":"039015","SITENAME":"Maysville","SITELOC":"Washington","SITESTATE":"KY","FREQ":"162.425","CALLSIGN":"KZZ49","LAT":"38.6403","LON":"-83.8083","PWR":"300","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"WWG26":{"ST":"KY","STATE":"Kentucky","COUNTY":"Breathitt","SAME":"021025","SITENAME":"Jackson","SITELOC":"Jackson","SITESTATE":"KY","FREQ":"162.425","CALLSIGN":"WWG26","LAT":"37.5911","LON":"-83.3136","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WXJ91":{"ST":"KY","STATE":"Kentucky","COUNTY":"Webster","SAME":"021233","SITENAME":"Madisonville","SITELOC":"Madisonville","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WXJ91","LAT":"37.190278","LON":"-87.513056","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KHA46":{"ST":"TN","STATE":"Tennessee","COUNTY":"Weakley","SAME":"047183","SITENAME":"Vale","SITELOC":"Hollow Rock","SITESTATE":"TN","FREQ":"162.450","CALLSIGN":"KHA46","LAT":"36.137194","LON":"-88.261","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"WWH37":{"ST":"TN","STATE":"Tennessee","COUNTY":"Stewart","SAME":"047161","SITENAME":"Clarksville","SITELOC":"Clarksville","SITESTATE":"TN","FREQ":"162.500","CALLSIGN":"WWH37","LAT":"36.516389","LON":"-87.336944","PWR":"300","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"KXI26":{"ST":"KY","STATE":"Kentucky","COUNTY":"Trigg","SAME":"021221","SITENAME":"Hopkinsville","SITELOC":"Hopkinsville","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"KXI26","LAT":"36.879444","LON":"-87.504722","PWR":"300","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"WWG66":{"ST":"KY","STATE":"Kentucky","COUNTY":"Clay","SAME":"021051","SITENAME":"Manchester","SITELOC":"Manchester","SITESTATE":"KY","FREQ":"162.400","CALLSIGN":"WWG66","LAT":"37.147222","LON":"-83.691667","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"KZZ62":{"ST":"KY","STATE":"Kentucky","COUNTY":"Cumberland","SAME":"021057","SITENAME":"Burkesville","SITELOC":"Smith Grove Ridge","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"KZZ62","LAT":"36.790556","LON":"-85.2411","PWR":"300","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWG79":{"ST":"KY","STATE":"Kentucky","COUNTY":"Morgan","SAME":"021175","SITENAME":"West Liberty","SITELOC":"West Liberty","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"WWG79","LAT":"37.941944","LON":"-83.220278","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WNG727":{"ST":"KY","STATE":"Kentucky","COUNTY":"Estill","SAME":"021065","SITENAME":"Irvine","SITELOC":"Irvine","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"WNG727","LAT":"37.7275","LON":"-83.944444","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG28":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wayne","SAME":"054099","SITENAME":"Paintsville","SITELOC":"Paintsville","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WWG28","LAT":"37.844722","LON":"-82.6675","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG69":{"ST":"VA","STATE":"Virginia","COUNTY":"Wise","SAME":"051195","SITENAME":"Pikeville","SITELOC":"Pikeville","SITESTATE":"KY","FREQ":"162.400","CALLSIGN":"WWG69","LAT":"37.285","LON":"-82.524722","PWR":"500","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WZ2523":{"ST":"KY","STATE":"Kentucky","COUNTY":"Franklin","SAME":"021073","SITENAME":"Frankfort","SITELOC":"Frankfort","SITESTATE":"KY","FREQ":"162.500","CALLSIGN":"WZ2523","LAT":"38.207222","LON":"-84.836111","PWR":"300","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"KIH43A":{"ST":"KY","STATE":"Kentucky","COUNTY":"Hardin","SAME":"021093","SITENAME":"Elizabethtown","SITELOC":"Elizabethtown","SITESTATE":"KY","FREQ":"162.550","CALLSIGN":"KIH43A","LAT":"37.681944","LON":"-85.842222","PWR":"300","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWG68":{"ST":"KY","STATE":"Kentucky","COUNTY":"Harlan","SAME":"021095","SITENAME":"Harlan","SITELOC":"Grey's Knob","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"WWG68","LAT":"36.7875","LON":"-83.291111","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG64":{"ST":"KY","STATE":"Kentucky","COUNTY":"Jackson","SAME":"021109","SITENAME":"McKee","SITELOC":"McKee","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"WWG64","LAT":"37.416207","LON":"-84.008763","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG65":{"ST":"KY","STATE":"Kentucky","COUNTY":"Laurel","SAME":"021125","SITENAME":"London","SITELOC":"London","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"WWG65","LAT":"37.146656","LON":"-84.106809","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG67":{"ST":"KY","STATE":"Kentucky","COUNTY":"Lee","SAME":"021129","SITENAME":"Beattyville","SITELOC":"Bear Track","SITESTATE":"KY","FREQ":"162.500","CALLSIGN":"WWG67","LAT":"37.625702","LON":"-83.77203","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WXM69":{"ST":"OH","STATE":"Ohio","COUNTY":"Vinton","SAME":"039163","SITENAME":"Otway","SITELOC":"Moon Ridge","SITESTATE":"OH","FREQ":"162.525","CALLSIGN":"WXM69","LAT":"38.893056","LON":"-83.255","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"WWF82A":{"ST":"KY","STATE":"Kentucky","COUNTY":"Madison","SAME":"021151","SITENAME":"East Madison County","SITELOC":"Richmond EOC","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WWF82A","LAT":"37.7744","LON":"-84.324611","PWR":"100","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWF82C":{"ST":"KY","STATE":"Kentucky","COUNTY":"Madison","SAME":"021151","SITENAME":"Madison County","SITELOC":"Big Hill","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WWF82C","LAT":"37.6181","LON":"-84.2619","PWR":"100","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWF82D":{"ST":"KY","STATE":"Kentucky","COUNTY":"Madison","SAME":"021151","SITENAME":"Moberly","SITELOC":"Moberly","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WWF82D","LAT":"37.7436","LON":"-84.1825","PWR":"110","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWF82B":{"ST":"KY","STATE":"Kentucky","COUNTY":"Madison","SAME":"021151","SITENAME":"West Madison County","SITELOC":"Jolly Ridge","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"WWF82B","LAT":"37.777222","LON":"-84.436111","PWR":"100","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"KZZ64":{"ST":"KY","STATE":"Kentucky","COUNTY":"Meade","SAME":"021163","SITENAME":"Ekron","SITELOC":"Ekron","SITESTATE":"KY","FREQ":"162.450","CALLSIGN":"KZZ64","LAT":"37.9025","LON":"-86.168333","PWR":"300","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWG63":{"ST":"KY","STATE":"Kentucky","COUNTY":"Menifee","SAME":"021165","SITENAME":"Frenchburg","SITELOC":"Frenchburg","SITESTATE":"KY","FREQ":"162.475","CALLSIGN":"WWG63","LAT":"37.934167","LON":"-83.613611","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG81":{"ST":"WV","STATE":"West Virginia","COUNTY":"Mingo","SAME":"054059","SITENAME":"Phelps","SITELOC":"Dicks Knob","SITESTATE":"KY","FREQ":"162.500","CALLSIGN":"WWG81","LAT":"37.501111","LON":"-82.227571","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG70":{"ST":"KY","STATE":"Kentucky","COUNTY":"Rockcastle","SAME":"021203","SITENAME":"Mount Vernon","SITELOC":"Mount Vernon","SITESTATE":"KY","FREQ":"162.425","CALLSIGN":"WWG70","LAT":"37.34","LON":"-84.383333","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"KZZ63":{"ST":"KY","STATE":"Kentucky","COUNTY":"Taylor","SAME":"021217","SITENAME":"Campbellsville","SITELOC":"Spurlington","SITESTATE":"KY","FREQ":"162.525","CALLSIGN":"KZZ63","LAT":"37.423611","LON":"-85.274444","PWR":"300","STATUS":"NORMAL","WFO":"Louisville|KY","REMARKS":""},"WWG80":{"ST":"KY","STATE":"Kentucky","COUNTY":"Wayne","SAME":"021231","SITENAME":"Monticello","SITELOC":"Monticello","SITESTATE":"KY","FREQ":"162.425","CALLSIGN":"WWG80","LAT":"36.844444","LON":"-84.774167","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WWG78":{"ST":"KY","STATE":"Kentucky","COUNTY":"Whitley","SAME":"021235","SITENAME":"Williamsburg","SITELOC":"Williamsburg","SITESTATE":"KY","FREQ":"162.500","CALLSIGN":"WWG78","LAT":"36.671143","LON":"-84.221466","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|KY","REMARKS":""},"WXK80":{"ST":"LA","STATE":"Louisiana","COUNTY":"Vermilion","SAME":"022113","SITENAME":"Lafayette","SITELOC":"Youngsville","SITESTATE":"LA","FREQ":"162.550","CALLSIGN":"WXK80","LAT":"30.048333","LON":"-91.996944","PWR":"1000","STATUS":"NORMAL","WFO":"Lake Charles|LA","REMARKS":""},"KHB42":{"ST":"LA","STATE":"Louisiana","COUNTY":"Jefferson Davis","SAME":"022053","SITENAME":"Lake Charles","SITELOC":"Westlake","SITESTATE":"LA","FREQ":"162.400","CALLSIGN":"KHB42","LAT":"30.221222","LON":"-93.3114","PWR":"1000","STATUS":"NORMAL","WFO":"Lake Charles|LA","REMARKS":""},"KHB46":{"ST":"MS","STATE":"Mississippi","COUNTY":"Wilkinson","SAME":"028157","SITENAME":"Baton Rouge","SITELOC":"Baker","SITESTATE":"LA","FREQ":"162.400","CALLSIGN":"KHB46","LAT":"30.443333","LON":"-91.181667","PWR":"1000","STATUS":"NORMAL","WFO":"New Orleans/Baton Rouge|LA","REMARKS":""},"KIH23":{"ST":"LA","STATE":"Louisiana","COUNTY":"Terrebonne","SAME":"022109","SITENAME":"Morgan City","SITELOC":"Morgan City","SITESTATE":"LA","FREQ":"162.475","CALLSIGN":"KIH23","LAT":"29.646111","LON":"-91.118333","PWR":"1000","STATUS":"NORMAL","WFO":"New Orleans/Baton Rouge|LA","REMARKS":""},"WXK78":{"ST":"LA","STATE":"Louisiana","COUNTY":"Winn","SAME":"022127","SITENAME":"Alexandria","SITELOC":"Jena","SITESTATE":"LA","FREQ":"162.475","CALLSIGN":"WXK78","LAT":"31.638889","LON":"-92.205","PWR":"1000","STATUS":"NORMAL","WFO":"Lake Charles|LA","REMARKS":""},"KXI54":{"ST":"TX","STATE":"Texas","COUNTY":"San Augustine","SAME":"048405","SITENAME":"Burkeville","SITELOC":"Burkeville","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"KXI54","LAT":"31.1742","LON":"-93.566667","PWR":"1000","STATUS":"NORMAL","WFO":"Lake Charles|LA","REMARKS":""},"WXN87":{"ST":"LA","STATE":"Louisiana","COUNTY":"Winn","SAME":"022127","SITENAME":"Natchitoches","SITELOC":"Natchitoches","SITESTATE":"LA","FREQ":"162.500","CALLSIGN":"WXN87","LAT":"31.787","LON":"-93.205","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"WXJ97":{"ST":"TX","STATE":"Texas","COUNTY":"Panola","SAME":"048365","SITENAME":"Shreveport","SITELOC":"Lake View","SITESTATE":"LA","FREQ":"162.400","CALLSIGN":"WXJ97","LAT":"32.575806","LON":"-93.8686","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"WXJ96":{"ST":"LA","STATE":"Louisiana","COUNTY":"Winn","SAME":"022127","SITENAME":"Monroe","SITELOC":"Monroe","SITESTATE":"LA","FREQ":"162.550","CALLSIGN":"WXJ96","LAT":"32.527694","LON":"-92.102222","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"KIH48":{"ST":"MS","STATE":"Mississippi","COUNTY":"Wilkinson","SAME":"028157","SITENAME":"Bude","SITELOC":"Smithdale","SITESTATE":"MS","FREQ":"162.550","CALLSIGN":"KIH48","LAT":"31.372917","LON":"-90.751417","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"WXL41":{"ST":"LA","STATE":"Louisiana","COUNTY":"Plaquemines","SAME":"022075","SITENAME":"Buras","SITELOC":"Buras","SITESTATE":"LA","FREQ":"162.475","CALLSIGN":"WXL41","LAT":"29.353056","LON":"-89.521111","PWR":"1000","STATUS":"NORMAL","WFO":"New Orleans/Baton Rouge|LA","REMARKS":""},"KHB43":{"ST":"LA","STATE":"Louisiana","COUNTY":"Tangipahoa","SAME":"022105","SITENAME":"New Orleans","SITELOC":"New Orleans","SITESTATE":"LA","FREQ":"162.550","CALLSIGN":"KHB43","LAT":"29.9525","LON":"-90.0672","PWR":"1000","STATUS":"NORMAL","WFO":"New Orleans/Baton Rouge|LA","REMARKS":""},"WNG521":{"ST":"MS","STATE":"Mississippi","COUNTY":"Walthall","SAME":"028147","SITENAME":"Bogalusa","SITELOC":"Bogalusa","SITESTATE":"LA","FREQ":"162.525","CALLSIGN":"WNG521","LAT":"30.886389","LON":"-90.048889","PWR":"1000","STATUS":"NORMAL","WFO":"New Orleans/Baton Rouge|LA","REMARKS":""},"KEC73":{"ST":"MA","STATE":"Massachusetts","COUNTY":"Plymouth","SAME":"025023","SITENAME":"Bourne/Hyannis","SITELOC":"Camp Edwards","SITESTATE":"MA","FREQ":"162.550","CALLSIGN":"KEC73","LAT":"41.708611","LON":"-70.565556","PWR":"1000","STATUS":"NORMAL","WFO":"Boston/Norton|MA","REMARKS":"Central/S"},"WXL34":{"ST":"NY","STATE":"New York","COUNTY":"Schoharie","SAME":"036095","SITENAME":"Albany","SITELOC":"New Scotland","SITESTATE":"NY","FREQ":"162.550","CALLSIGN":"WXL34","LAT":"42.636944","LON":"-74.001667","PWR":"1000","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"WXM68":{"ST":"VT","STATE":"Vermont","COUNTY":"Windham","SAME":"050025","SITENAME":"Leyden","SITELOC":"Leyden","SITESTATE":"MA","FREQ":"162.425","CALLSIGN":"WXM68","LAT":"42.6981","LON":"-72.605","PWR":"300","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":"ALL"},"WWF48":{"ST":"VT","STATE":"Vermont","COUNTY":"Windham","SAME":"050025","SITENAME":"Mt. Greylock","SITELOC":"Bascom Lodge","SITESTATE":"MA","FREQ":"162.525","CALLSIGN":"WWF48","LAT":"42.6367","LON":"-73.1667","PWR":"125","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"KHB35":{"ST":"MA","STATE":"Massachusetts","COUNTY":"Suffolk","SAME":"025025","SITENAME":"Boston","SITELOC":"Great Blue Hill","SITESTATE":"MA","FREQ":"162.475","CALLSIGN":"KHB35","LAT":"42.212222","LON":"-71.114444","PWR":"1000","STATUS":"NORMAL","WFO":"Boston/Norton|MA","REMARKS":""},"WXJ39":{"ST":"RI","STATE":"Rhode Island","COUNTY":"Washington","SAME":"044009","SITENAME":"Providence","SITELOC":"Johnston","SITESTATE":"RI","FREQ":"162.400","CALLSIGN":"WXJ39","LAT":"41.805","LON":"-71.4733","PWR":"500","STATUS":"NORMAL","WFO":"Boston/Norton|MA","REMARKS":"INCLUDING BLOCK IS"},"KZZ40":{"ST":"NH","STATE":"New Hampshire","COUNTY":"Strafford","SAME":"033017","SITENAME":"Deerfield","SITELOC":"Deerfield","SITESTATE":"NH","FREQ":"162.450","CALLSIGN":"KZZ40","LAT":"43.175833","LON":"-71.208056","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WNG574":{"ST":"MA","STATE":"Massachusetts","COUNTY":"Essex","SAME":"025009","SITENAME":"Gloucester Marine","SITELOC":"Essex","SITESTATE":"MA","FREQ":"162.425","CALLSIGN":"WNG574","LAT":"42.6275","LON":"-70.6444","PWR":"300","STATUS":"NORMAL","WFO":"Boston/Norton|MA","REMARKS":""},"WNG575":{"ST":"VT","STATE":"Vermont","COUNTY":"Windham","SAME":"050025","SITENAME":"Pack Monadnock","SITELOC":"Peterborough","SITESTATE":"NH","FREQ":"162.525","CALLSIGN":"WNG575","LAT":"42.861111","LON":"-71.879167","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WXM44":{"ST":"VT","STATE":"Vermont","COUNTY":"Windsor","SAME":"050027","SITENAME":"Windsor","SITELOC":"Mount Ascutney","SITESTATE":"VT","FREQ":"162.475","CALLSIGN":"WXM44","LAT":"43.4439","LON":"-72.454722","PWR":"400","STATUS":"NORMAL","WFO":"Burlington|VT","REMARKS":""},"WXM43":{"ST":"WV","STATE":"West Virginia","COUNTY":"Morgan","SAME":"054065","SITENAME":"Frostburg","SITELOC":"Midland (Frostburg)","SITESTATE":"MD","FREQ":"162.425","CALLSIGN":"WXM43","LAT":"39.582167","LON":"-78.898667","PWR":"300","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":""},"WXM42":{"ST":"WV","STATE":"West Virginia","COUNTY":"Morgan","SAME":"054065","SITENAME":"Hagerstown","SITELOC":"Clear Spring","SITESTATE":"MD","FREQ":"162.475","CALLSIGN":"WXM42","LAT":"39.651111","LON":"-77.970833","PWR":"1000","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":""},"WXM73":{"ST":"WV","STATE":"West Virginia","COUNTY":"Pendleton","SAME":"054071","SITENAME":"Moorefield","SITELOC":"Branch Mtn.","SITESTATE":"WV","FREQ":"162.400","CALLSIGN":"WXM73","LAT":"38.9825","LON":"-78.908611","PWR":"500","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":"NE 1/2"},"WZ2527":{"ST":"VA","STATE":"Virginia","COUNTY":"Westmoreland","SAME":"051193","SITENAME":"Fredericksburg","SITELOC":"Fredericksburg","SITESTATE":"VA","FREQ":"162.425","CALLSIGN":"WZ2527","LAT":"38.311389","LON":"-77.483611","PWR":"300","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":""},"KXI73":{"ST":"WV","STATE":"West Virginia","COUNTY":"Tucker","SAME":"054093","SITENAME":"Backbone Mountain","SITELOC":"Thomas","SITESTATE":"WV","FREQ":"162.450","CALLSIGN":"KXI73","LAT":"39.1456","LON":"-79.5766","PWR":"145","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"KWN36":{"ST":"WV","STATE":"West Virginia","COUNTY":"Tucker","SAME":"054093","SITENAME":"Greggs Knob","SITELOC":"Terra Alta","SITESTATE":"WV","FREQ":"162.500","CALLSIGN":"KWN36","LAT":"39.510611","LON":"-79.533139","PWR":"300","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"KJY99":{"ST":"VA","STATE":"Virginia","COUNTY":"Northampton","SAME":"051131","SITENAME":"Accomack","SITELOC":"Onley (AG)","SITESTATE":"VA","FREQ":"162.525","CALLSIGN":"KJY99","LAT":"37.8425","LON":"-75.571389","PWR":"1000","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"WXM57":{"ST":"VA","STATE":"Virginia","COUNTY":"Westmoreland","SAME":"051193","SITENAME":"Heathsville","SITELOC":"Heathsville","SITESTATE":"VA","FREQ":"162.400","CALLSIGN":"WXM57","LAT":"37.919722","LON":"-76.498333","PWR":"1000","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"WSM60":{"ST":"ME","STATE":"Maine","COUNTY":"Waldo","SAME":"023027","SITENAME":"Dresden","SITELOC":"Blinn Hill","SITESTATE":"ME","FREQ":"162.475","CALLSIGN":"WSM60","LAT":"44.122778","LON":"-69.680556","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":"FAR SW"},"KDO95":{"ST":"ME","STATE":"Maine","COUNTY":"York","SAME":"023031","SITENAME":"Falmouth","SITELOC":"Blackstrap Hill","SITESTATE":"ME","FREQ":"162.550","CALLSIGN":"KDO95","LAT":"43.7625","LON":"-70.325","PWR":"500","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WNG547":{"ST":"ME","STATE":"Maine","COUNTY":"Waldo","SAME":"023027","SITENAME":"Sugarloaf Mtn","SITELOC":"Sugarloaf Mtn","SITESTATE":"ME","FREQ":"162.450","CALLSIGN":"WNG547","LAT":"45.031722","LON":"-70.313139","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WXM77":{"ST":"ME","STATE":"Maine","COUNTY":"Penobscot","SAME":"023019","SITENAME":"Caribou","SITELOC":"Mars Hill","SITESTATE":"ME","FREQ":"162.525","CALLSIGN":"WXM77","LAT":"46.551288","LON":"-67.809185","PWR":"200","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":"N"},"KHB55":{"ST":"ME","STATE":"Maine","COUNTY":"Aroostook","SAME":"023003","SITENAME":"Frenchville","SITELOC":"Frenchville","SITESTATE":"ME","FREQ":"162.475","CALLSIGN":"KHB55","LAT":"47.286944","LON":"-68.314167","PWR":"300","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":"N"},"WXN28":{"ST":"ME","STATE":"Maine","COUNTY":"Washington","SAME":"023029","SITENAME":"Springfield","SITELOC":"Lakeville","SITESTATE":"ME","FREQ":"162.500","CALLSIGN":"WXN28","LAT":"45.344444","LON":"-68.095","PWR":"1000","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":""},"KZZ41":{"ST":"VT","STATE":"Vermont","COUNTY":"Orange","SAME":"050017","SITENAME":"Mt. Washington","SITELOC":"North Conway","SITESTATE":"NH","FREQ":"162.500","CALLSIGN":"KZZ41","LAT":"44.270278","LON":"-71.303333","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"KEC93":{"ST":"ME","STATE":"Maine","COUNTY":"Washington","SAME":"023029","SITENAME":"Ellsworth","SITELOC":"Ellsworth","SITESTATE":"ME","FREQ":"162.400","CALLSIGN":"KEC93","LAT":"44.545833","LON":"-68.511944","PWR":"1000","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":"WESTERN EDGE"},"KHB54":{"ST":"ME","STATE":"Maine","COUNTY":"Somerset","SAME":"023025","SITENAME":"Milo","SITELOC":"Milo","SITESTATE":"ME","FREQ":"162.550","CALLSIGN":"KHB54","LAT":"45.247591","LON":"-69.01068","PWR":"1000","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":"Extreme SE"},"WNG542":{"ST":"ME","STATE":"Maine","COUNTY":"Somerset","SAME":"023025","SITENAME":"Greenville","SITELOC":"Greenville","SITESTATE":"ME","FREQ":"162.425","CALLSIGN":"WNG542","LAT":"45.4625","LON":"-69.552222","PWR":"300","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":"Central"},"WNG543":{"ST":"ME","STATE":"Maine","COUNTY":"Washington","SAME":"023029","SITENAME":"Jonesboro Marine","SITELOC":"Jonesboro","SITESTATE":"ME","FREQ":"162.450","CALLSIGN":"WNG543","LAT":"44.6369","LON":"-67.6261","PWR":"1000","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":""},"KHC47":{"ST":"ME","STATE":"Maine","COUNTY":"Washington","SAME":"023029","SITENAME":"Meddybemps","SITELOC":"Meddybemps","SITESTATE":"ME","FREQ":"162.425","CALLSIGN":"KHC47","LAT":"45.028889","LON":"-67.322778","PWR":"300","STATUS":"NORMAL","WFO":"Caribou|ME","REMARKS":""},"KIG83":{"ST":"MI","STATE":"Michigan","COUNTY":"Presque Isle","SAME":"026141","SITENAME":"Alpena","SITELOC":"Herron","SITESTATE":"MI","FREQ":"162.550","CALLSIGN":"KIG83","LAT":"45.062778","LON":"-83.718333","PWR":"800","STATUS":"NORMAL","WFO":"Gaylord|MI","REMARKS":""},"WNG701":{"ST":"MI","STATE":"Michigan","COUNTY":"Tuscola","SAME":"026157","SITENAME":"Bad Axe","SITELOC":"Bad Axe (Port Austin)","SITESTATE":"MI","FREQ":"162.525","CALLSIGN":"WNG701","LAT":"43.794167","LON":"-83.001944","PWR":"300","STATUS":"NORMAL","WFO":"Detroit/Pontiac|MI","REMARKS":""},"WZ2515":{"ST":"MI","STATE":"Michigan","COUNTY":"Alger","SAME":"026003","SITENAME":"Grand Marais","SITELOC":"Grand Marais","SITESTATE":"MI","FREQ":"162.425","CALLSIGN":"WZ2515","LAT":"46.5475","LON":"-86.0364","PWR":"100","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"WNG684":{"ST":"MI","STATE":"Michigan","COUNTY":"Schoolcraft","SAME":"026153","SITENAME":"Manistique","SITELOC":"Steuben","SITESTATE":"MI","FREQ":"162.525","CALLSIGN":"WNG684","LAT":"46.109722","LON":"-86.236667","PWR":"300","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"KIG66":{"ST":"MI","STATE":"Michigan","COUNTY":"Schoolcraft","SAME":"026153","SITENAME":"Marquette","SITELOC":"Negaunee","SITESTATE":"MI","FREQ":"162.550","CALLSIGN":"KIG66","LAT":"46.514167","LON":"-87.481667","PWR":"1000","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"WZ2514":{"ST":"MI","STATE":"Michigan","COUNTY":"Alger","SAME":"026003","SITENAME":"Munising","SITELOC":"Alger County","SITESTATE":"MI","FREQ":"162.475","CALLSIGN":"WZ2514","LAT":"46.420833","LON":"-86.675","PWR":"100","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"WNG576":{"ST":"MI","STATE":"Michigan","COUNTY":"Mackinac","SAME":"026097","SITENAME":"Newberry","SITELOC":"Newberry","SITESTATE":"MI","FREQ":"162.450","CALLSIGN":"WNG576","LAT":"46.319167","LON":"-85.537222","PWR":"300","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"WZ2560":{"ST":"MI","STATE":"Michigan","COUNTY":"Ottawa","SAME":"026139","SITENAME":"Cannonsburg","SITELOC":"Cannonsburg","SITESTATE":"MI","FREQ":"162.550","CALLSIGN":"WZ2560","LAT":"43.0138","LON":"-85.4778","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"WWF34":{"ST":"MI","STATE":"Michigan","COUNTY":"Van Buren","SAME":"026159","SITENAME":"Plainwell","SITELOC":"Plainwell","SITESTATE":"MI","FREQ":"162.475","CALLSIGN":"WWF34","LAT":"42.421944","LON":"-85.528889","PWR":"300","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"WXN99":{"ST":"MI","STATE":"Michigan","COUNTY":"Ottawa","SAME":"026139","SITENAME":"West Olive","SITELOC":"West Olive","SITESTATE":"MI","FREQ":"162.425","CALLSIGN":"WXN99","LAT":"42.941389","LON":"-86.084167","PWR":"300","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"KIH22":{"ST":"MI","STATE":"Michigan","COUNTY":"Wexford","SAME":"026165","SITENAME":"Traverse City","SITELOC":"Traverse City","SITESTATE":"MI","FREQ":"162.400","CALLSIGN":"KIH22","LAT":"44.761944","LON":"-85.681389","PWR":"330","STATUS":"NORMAL","WFO":"Gaylord|MI","REMARKS":""},"KXI33":{"ST":"MI","STATE":"Michigan","COUNTY":"Roscommon","SAME":"026143","SITENAME":"West Branch","SITELOC":"West Branch","SITESTATE":"MI","FREQ":"162.450","CALLSIGN":"KXI33","LAT":"44.2736","LON":"-84.2653","PWR":"1000","STATUS":"NORMAL","WFO":"Gaylord|MI","REMARKS":""},"WXK73":{"ST":"MI","STATE":"Michigan","COUNTY":"Ontonagon","SAME":"026131","SITENAME":"Houghton","SITELOC":"Painesdale","SITESTATE":"MI","FREQ":"162.400","CALLSIGN":"WXK73","LAT":"47.035556","LON":"-88.695278","PWR":"1000","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"KIH29":{"ST":"MI","STATE":"Michigan","COUNTY":"Tuscola","SAME":"026157","SITENAME":"Flint","SITELOC":"Clio","SITESTATE":"MI","FREQ":"162.475","CALLSIGN":"KIH29","LAT":"43.216944","LON":"-83.721389","PWR":"1000","STATUS":"NORMAL","WFO":"Detroit/Pontiac|MI","REMARKS":""},"WXK81":{"ST":"MI","STATE":"Michigan","COUNTY":"Shiawassee","SAME":"026155","SITENAME":"Onondaga","SITELOC":"Rossman Rd.","SITESTATE":"MI","FREQ":"162.400","CALLSIGN":"WXK81","LAT":"42.4428","LON":"-84.572429","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"WNG572":{"ST":"MI","STATE":"Michigan","COUNTY":"Emmet","SAME":"026047","SITENAME":"Petoskey","SITELOC":"Goodhart","SITESTATE":"MI","FREQ":"162.475","CALLSIGN":"WNG572","LAT":"45.5694","LON":"-85.0406","PWR":"300","STATUS":"NORMAL","WFO":"Gaylord|MI","REMARKS":""},"KIG74":{"ST":"MI","STATE":"Michigan","COUNTY":"Mackinac","SAME":"026097","SITENAME":"Sault Ste Marie","SITELOC":"Dafter","SITESTATE":"MI","FREQ":"162.550","CALLSIGN":"KIG74","LAT":"46.3769","LON":"-84.425","PWR":"1000","STATUS":"NORMAL","WFO":"Gaylord|MI","REMARKS":"E 1/2"},"KZZ33":{"ST":"MI","STATE":"Michigan","COUNTY":"Osceola","SAME":"026133","SITENAME":"Mount Pleasant","SITELOC":"Mount Pleasant","SITESTATE":"MI","FREQ":"162.525","CALLSIGN":"KZZ33","LAT":"43.575833","LON":"-84.774722","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"WWF70":{"ST":"MI","STATE":"Michigan","COUNTY":"Otsego","SAME":"026137","SITENAME":"Gaylord","SITELOC":"Waters","SITESTATE":"MI","FREQ":"162.500","CALLSIGN":"WWF70","LAT":"44.9075","LON":"-84.718889","PWR":"300","STATUS":"NORMAL","WFO":"Gaylord|MI","REMARKS":""},"KZZ35":{"ST":"MI","STATE":"Michigan","COUNTY":"Menominee","SAME":"026109","SITENAME":"Escanaba","SITELOC":"Escanaba","SITESTATE":"MI","FREQ":"162.500","CALLSIGN":"KZZ35","LAT":"45.779722","LON":"-87.140556","PWR":"1000","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"KZZ78":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Iron","SAME":"055051","SITENAME":"Ashland","SITELOC":"Ashland","SITESTATE":"WI","FREQ":"162.525","CALLSIGN":"KZZ78","LAT":"46.608056","LON":"-90.836944","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"WNG683":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vilas","SAME":"055125","SITENAME":"Marenisco","SITELOC":"Gogebic County","SITESTATE":"MI","FREQ":"162.550","CALLSIGN":"WNG683","LAT":"46.3775","LON":"-89.7075","PWR":"300","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":"E S AND C"},"WNG647":{"ST":"OH","STATE":"Ohio","COUNTY":"Williams","SAME":"039171","SITENAME":"Adrian / Petersburg","SITELOC":"Lenawee County","SITESTATE":"MI","FREQ":"162.450","CALLSIGN":"WNG647","LAT":"41.903056","LON":"-83.986944","PWR":"300","STATUS":"NORMAL","WFO":"Detroit/Pontiac|MI","REMARKS":""},"WNG582":{"ST":"MI","STATE":"Michigan","COUNTY":"Tuscola","SAME":"026157","SITENAME":"Sandusky","SITELOC":"Sanilac County","SITESTATE":"MI","FREQ":"162.450","CALLSIGN":"WNG582","LAT":"43.4106","LON":"-82.8064","PWR":"300","STATUS":"NORMAL","WFO":"Detroit/Pontiac|MI","REMARKS":""},"KJY76":{"ST":"MI","STATE":"Michigan","COUNTY":"Iron","SAME":"026071","SITENAME":"Crystal Falls","SITELOC":"Crystal Falls","SITESTATE":"MI","FREQ":"162.475","CALLSIGN":"KJY76","LAT":"46.100833","LON":"-88.540278","PWR":"1000","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"WZ2513":{"ST":"MI","STATE":"Michigan","COUNTY":"Keweenaw","SAME":"026083","SITENAME":"Copper Harbor","SITELOC":"Copper Harbor","SITESTATE":"MI","FREQ":"162.500","CALLSIGN":"WZ2513","LAT":"47.4675","LON":"-87.8722","PWR":"300","STATUS":"NORMAL","WFO":"Marquette|MI","REMARKS":""},"WNG672":{"ST":"MI","STATE":"Michigan","COUNTY":"Wexford","SAME":"026165","SITENAME":"Wolf Lake","SITELOC":"Baldwin","SITESTATE":"MI","FREQ":"162.425","CALLSIGN":"WNG672","LAT":"43.980556","LON":"-85.843333","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"KEC63":{"ST":"MI","STATE":"Michigan","COUNTY":"Wayne","SAME":"026163","SITENAME":"Detroit","SITELOC":"Southfield","SITESTATE":"MI","FREQ":"162.550","CALLSIGN":"KEC63","LAT":"42.483056","LON":"-83.205556","PWR":"1000","STATUS":"NORMAL","WFO":"Detroit/Pontiac|MI","REMARKS":""},"WXL51":{"ST":"OH","STATE":"Ohio","COUNTY":"Wood","SAME":"039173","SITENAME":"Toledo","SITELOC":"Holland","SITESTATE":"OH","FREQ":"162.500","CALLSIGN":"WXL51","LAT":"41.625556","LON":"-83.711111","PWR":"300","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"WXN69":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Marinette","SAME":"055075","SITENAME":"Sister Bay","SITELOC":"Sister Bay","SITESTATE":"WI","FREQ":"162.425","CALLSIGN":"WXN69","LAT":"45.237887","LON":"-87.091394","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WNG553":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Oconto","SAME":"055083","SITENAME":"Wausaukee","SITELOC":"Wausaukee","SITESTATE":"WI","FREQ":"162.400","CALLSIGN":"WNG553","LAT":"45.4275","LON":"-87.9775","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WWF36":{"ST":"MI","STATE":"Michigan","COUNTY":"Oceana","SAME":"026127","SITENAME":"Hesperia","SITELOC":"Hesperia","SITESTATE":"MI","FREQ":"162.475","CALLSIGN":"WWF36","LAT":"43.549722","LON":"-86.042778","PWR":"800","STATUS":"NORMAL","WFO":"Grand Rapids|MI","REMARKS":""},"KZZ84":{"ST":"MN","STATE":"Minnesota","COUNTY":"Pine","SAME":"027115","SITENAME":"Aitkin","SITELOC":"Aitkin","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"KZZ84","LAT":"46.469444","LON":"-93.526944","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"KZZ29":{"ST":"MN","STATE":"Minnesota","COUNTY":"St. Louis","SAME":"427137","SITENAME":"Coleraine","SITELOC":"Grand Rapids","SITESTATE":"MN","FREQ":"162.400","CALLSIGN":"KZZ29","LAT":"47.2922","LON":"-93.4822","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":"WEST CENTRAL"},"WNG678":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Polk","SAME":"055095","SITENAME":"Pine City","SITELOC":"Pine County","SITESTATE":"MN","FREQ":"162.425","CALLSIGN":"WNG678","LAT":"45.8411","LON":"-92.9825","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"WNG676":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wright","SAME":"027171","SITENAME":"Clearwater","SITELOC":"Enfield","SITESTATE":"MN","FREQ":"162.500","CALLSIGN":"WNG676","LAT":"45.348472","LON":"-93.908778","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"KEC65":{"ST":"WI","STATE":"Wisconsin","COUNTY":"St. Croix","SAME":"055109","SITENAME":"Minneapolis/St. Paul","SITELOC":"Minneapolis","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"KEC65","LAT":"44.968944","LON":"-93.207833","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXM64":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wadena","SAME":"027159","SITENAME":"Detroit Lakes","SITELOC":"Detroit Lakes","SITESTATE":"MN","FREQ":"162.400","CALLSIGN":"WXM64","LAT":"46.822778","LON":"-95.861028","PWR":"100","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WNG680":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wilkin","SAME":"027167","SITENAME":"Fergus Falls","SITELOC":"Fergus Falls","SITESTATE":"MN","FREQ":"162.500","CALLSIGN":"WNG680","LAT":"46.259111","LON":"-95.980944","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WWG98":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wadena","SAME":"027159","SITENAME":"Park Rapids","SITELOC":"Park Rapids","SITESTATE":"MN","FREQ":"162.475","CALLSIGN":"WWG98","LAT":"46.984722","LON":"-95.106167","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WNG610":{"ST":"MN","STATE":"Minnesota","COUNTY":"Norman","SAME":"027107","SITENAME":"Waubun","SITELOC":"Waubun","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"WNG610","LAT":"47.180306","LON":"-95.778167","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXM99":{"ST":"MN","STATE":"Minnesota","COUNTY":"Itasca","SAME":"027061","SITENAME":"Bemidji","SITELOC":"Bemidji","SITESTATE":"MN","FREQ":"162.425","CALLSIGN":"WXM99","LAT":"47.555833","LON":"-94.801361","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WWF45":{"ST":"MN","STATE":"Minnesota","COUNTY":"Roseau","SAME":"027135","SITENAME":"Roosevelt","SITELOC":"Roosevelt","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"WWF45","LAT":"48.789083","LON":"-95.049889","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXK43":{"ST":"MN","STATE":"Minnesota","COUNTY":"Roseau","SAME":"027135","SITENAME":"Thief River Falls","SITELOC":"Thief River Falls","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"WXK43","LAT":"48.114972","LON":"-96.188833","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXL65":{"ST":"MN","STATE":"Minnesota","COUNTY":"Stearns","SAME":"027145","SITENAME":"St. Cloud","SITELOC":"St. Cloud","SITESTATE":"MN","FREQ":"162.400","CALLSIGN":"WXL65","LAT":"45.577278","LON":"-94.204667","PWR":"330","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXK44":{"ST":"MN","STATE":"Minnesota","COUNTY":"Yellow Medicine","SAME":"027173","SITENAME":"Willmar","SITELOC":"New London","SITESTATE":"MN","FREQ":"162.475","CALLSIGN":"WXK44","LAT":"45.3428","LON":"-95.007917","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"KXI32":{"ST":"SD","STATE":"South Dakota","COUNTY":"Grant","SAME":"046051","SITENAME":"Appleton","SITELOC":"Appleton","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"KXI32","LAT":"45.1675","LON":"-95.999722","PWR":"1000","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":""},"WNG707":{"ST":"MN","STATE":"Minnesota","COUNTY":"Traverse","SAME":"027155","SITENAME":"Kensington","SITELOC":"Hoffman","SITESTATE":"MN","FREQ":"162.400","CALLSIGN":"WNG707","LAT":"45.831778","LON":"-95.721111","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXM41":{"ST":"SD","STATE":"South Dakota","COUNTY":"Roberts","SAME":"046109","SITENAME":"South Shore","SITELOC":"South Shore","SITESTATE":"SD","FREQ":"162.425","CALLSIGN":"WXM41","LAT":"45.178889","LON":"-97.015833","PWR":"1000","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":""},"WXK40":{"ST":"MN","STATE":"Minnesota","COUNTY":"Watonwan","SAME":"027165","SITENAME":"Mankato","SITELOC":"Janesville","SITESTATE":"MN","FREQ":"162.400","CALLSIGN":"WXK40","LAT":"44.087722","LON":"-93.701778","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"KXI39":{"ST":"MN","STATE":"Minnesota","COUNTY":"Watonwan","SAME":"027165","SITENAME":"New Ulm","SITELOC":"New Ulm","SITESTATE":"MN","FREQ":"162.525","CALLSIGN":"KXI39","LAT":"44.2772","LON":"-94.440778","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"KXI31":{"ST":"MN","STATE":"Minnesota","COUNTY":"Watonwan","SAME":"027165","SITENAME":"Jeffers","SITELOC":"Windom","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"KXI31","LAT":"44.0567","LON":"-95.1956","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WNG711":{"ST":"MN","STATE":"Minnesota","COUNTY":"Yellow Medicine","SAME":"027173","SITENAME":"Olivia","SITELOC":"Renville County","SITESTATE":"MN","FREQ":"162.400","CALLSIGN":"WNG711","LAT":"44.776111","LON":"-94.981944","PWR":"300","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"KIG64":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Douglas","SAME":"055031","SITENAME":"Duluth","SITELOC":"Arnold Site","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"KIG64","LAT":"46.786944","LON":"-92.114444","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"WNG685":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wright","SAME":"027171","SITENAME":"Norwood","SITELOC":"Carver County","SITESTATE":"MN","FREQ":"162.425","CALLSIGN":"WNG685","LAT":"44.788889","LON":"-93.906889","PWR":"300","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXJ64":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wadena","SAME":"027159","SITENAME":"Leader","SITELOC":"Omen Lake","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"WXJ64","LAT":"46.551944","LON":"-94.520833","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"WNG673":{"ST":"MN","STATE":"Minnesota","COUNTY":"Wadena","SAME":"027159","SITENAME":"Long Prairie","SITELOC":"Long Prairie","SITESTATE":"MN","FREQ":"162.525","CALLSIGN":"WNG673","LAT":"45.9964","LON":"-94.89825","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXK42":{"ST":"ND","STATE":"North Dakota","COUNTY":"Traill","SAME":"038097","SITENAME":"Fargo","SITELOC":"Fargo","SITESTATE":"ND","FREQ":"162.475","CALLSIGN":"WXK42","LAT":"47.012417","LON":"-97.195056","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"KXI43":{"ST":"MN","STATE":"Minnesota","COUNTY":"Cook","SAME":"027031","SITENAME":"Grand Marais","SITELOC":"Bogus Lake","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"KXI43","LAT":"47.8664","LON":"-90.143889","PWR":"300","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"KXI45":{"ST":"MN","STATE":"Minnesota","COUNTY":"Lake","SAME":"027075","SITENAME":"Gun Flint Lake","SITELOC":"Gun Flint Lake","SITESTATE":"MN","FREQ":"162.525","CALLSIGN":"KXI45","LAT":"48.078333","LON":"-90.76","PWR":"300","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":"N"},"KJY80":{"ST":"WI","STATE":"Wisconsin","COUNTY":"St. Croix","SAME":"055109","SITENAME":"Red Wing","SITELOC":"Red Wing","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"KJY80","LAT":"44.524056","LON":"-92.576444","PWR":"300","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXK41":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Buffalo","SAME":"055011","SITENAME":"Rochester","SITELOC":"Viola","SITESTATE":"MN","FREQ":"162.475","CALLSIGN":"WXK41","LAT":"44.0625","LON":"-92.351944","PWR":"1000","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WNG583":{"ST":"MN","STATE":"Minnesota","COUNTY":"Roseau","SAME":"027135","SITENAME":"Lake Bronson","SITELOC":"Lake Bronson","SITESTATE":"MN","FREQ":"162.525","CALLSIGN":"WNG583","LAT":"48.717361","LON":"-96.605306","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"KZZ44":{"ST":"MN","STATE":"Minnesota","COUNTY":"St. Louis","SAME":"127137","SITENAME":"Elephant Lake","SITELOC":"Orr","SITESTATE":"MN","FREQ":"162.450","CALLSIGN":"KZZ44","LAT":"48.18","LON":"-92.750278","PWR":"300","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":"NORTHWEST"},"WXK45":{"ST":"MN","STATE":"Minnesota","COUNTY":"Koochiching","SAME":"027071","SITENAME":"International Falls","SITELOC":"Little Fork","SITESTATE":"MN","FREQ":"162.550","CALLSIGN":"WXK45","LAT":"48.389722","LON":"-93.55","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"KXI44":{"ST":"MN","STATE":"Minnesota","COUNTY":"St. Louis","SAME":"327137","SITENAME":"Ely","SITELOC":"Ely","SITESTATE":"MN","FREQ":"162.500","CALLSIGN":"KXI44","LAT":"47.894444","LON":"-91.863333","PWR":"300","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":"NORTHEAST"},"WNG630":{"ST":"MN","STATE":"Minnesota","COUNTY":"Lake","SAME":"027075","SITENAME":"Finland","SITELOC":"Lake County","SITESTATE":"MN","FREQ":"162.425","CALLSIGN":"WNG630","LAT":"47.456389","LON":"-91.231667","PWR":"300","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"KXI50":{"ST":"MN","STATE":"Minnesota","COUNTY":"Yellow Medicine","SAME":"027173","SITENAME":"Russell","SITELOC":"Russell","SITESTATE":"MN","FREQ":"162.500","CALLSIGN":"KXI50","LAT":"44.313639","LON":"-95.957472","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WXM38":{"ST":"ND","STATE":"North Dakota","COUNTY":"Walsh","SAME":"038099","SITENAME":"Petersburg","SITELOC":"Dahlen","SITESTATE":"ND","FREQ":"162.400","CALLSIGN":"WXM38","LAT":"48.138389","LON":"-97.993556","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WNG702":{"ST":"MN","STATE":"Minnesota","COUNTY":"Nobles","SAME":"027105","SITENAME":"Fulda","SITELOC":"Murry County","SITESTATE":"MN","FREQ":"162.425","CALLSIGN":"WNG702","LAT":"43.877583","LON":"-95.6069","PWR":"300","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"KZZ79":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Washburn","SAME":"055129","SITENAME":"Spooner","SITELOC":"Lampson","SITESTATE":"WI","FREQ":"162.475","CALLSIGN":"KZZ79","LAT":"45.986787","LON":"-91.793709","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":""},"WWF83":{"ST":"ND","STATE":"North Dakota","COUNTY":"Grand Forks","SAME":"038035","SITENAME":"Grand Forks","SITELOC":"Grand Forks","SITESTATE":"ND","FREQ":"162.475","CALLSIGN":"WWF83","LAT":"47.921861","LON":"-97.097694","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"KZZ45":{"ST":"MN","STATE":"Minnesota","COUNTY":"St. Louis","SAME":"627137","SITENAME":"Virginia","SITELOC":"Virginia","SITESTATE":"MN","FREQ":"162.475","CALLSIGN":"KZZ45","LAT":"47.4875","LON":"-92.52","PWR":"300","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":"EAST CENTRAL"},"KGG95":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Trempealeau","SAME":"055121","SITENAME":"Winona","SITELOC":"Fountain City","SITESTATE":"WI","FREQ":"162.425","CALLSIGN":"KGG95","LAT":"44.0739","LON":"-91.5775","PWR":"300","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WXM39":{"ST":"MO","STATE":"Missouri","COUNTY":"Sullivan","SAME":"029211","SITENAME":"La Plata","SITELOC":"La Plata","SITESTATE":"MO","FREQ":"162.525","CALLSIGN":"WXM39","LAT":"39.955556","LON":"-92.4925","PWR":"330","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":"SE"},"KZZ85":{"ST":"MO","STATE":"Missouri","COUNTY":"Ray","SAME":"029177","SITENAME":"Cameron","SITELOC":"Cameron","SITESTATE":"MO","FREQ":"162.475","CALLSIGN":"KZZ85","LAT":"39.752778","LON":"-94.25","PWR":"300","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":"ALL"},"WNG728":{"ST":"MO","STATE":"Missouri","COUNTY":"Warren","SAME":"029219","SITENAME":"Bellflower","SITELOC":"Bellflower","SITESTATE":"MO","FREQ":"162.425","CALLSIGN":"WNG728","LAT":"39.012778","LON":"-91.3022","PWR":"1000","STATUS":"OUT OF SERVICE","WFO":"St. Louis|MO","REMARKS":""},"WXL45":{"ST":"MO","STATE":"Missouri","COUNTY":"Osage","SAME":"029151","SITENAME":"Columbia","SITELOC":"Fulton","SITESTATE":"MO","FREQ":"162.400","CALLSIGN":"WXL45","LAT":"38.8786","LON":"-91.981778","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"KZZ43":{"ST":"MO","STATE":"Missouri","COUNTY":"Taney","SAME":"029213","SITENAME":"Branson","SITELOC":"Indian Ridge","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"KZZ43","LAT":"36.715889","LON":"-93.367611","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WNG608":{"ST":"MO","STATE":"Missouri","COUNTY":"Newton","SAME":"029145","SITENAME":"Cassville","SITELOC":"Cassville","SITESTATE":"MO","FREQ":"162.500","CALLSIGN":"WNG608","LAT":"36.671861","LON":"-93.896639","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WXL46":{"ST":"MO","STATE":"Missouri","COUNTY":"Wright","SAME":"029229","SITENAME":"Fordland","SITELOC":"Fordland","SITESTATE":"MO","FREQ":"162.400","CALLSIGN":"WXL46","LAT":"37.2192","LON":"-92.9492","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":"ALL"},"KZZ39":{"ST":"MO","STATE":"Missouri","COUNTY":"St. Clair","SAME":"029185","SITENAME":"Clinton","SITELOC":"Shawnee Mound","SITESTATE":"MO","FREQ":"162.500","CALLSIGN":"KZZ39","LAT":"38.503611","LON":"-93.758056","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":""},"WZ2548":{"ST":"MO","STATE":"Missouri","COUNTY":"Pulaski","SAME":"029169","SITENAME":"Eldon","SITELOC":"Eldon","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"WZ2548","LAT":"38.2794","LON":"-92.5853","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":"ALL"},"WWG49":{"ST":"MO","STATE":"Missouri","COUNTY":"Wayne","SAME":"029223","SITENAME":"Fredericktown","SITELOC":"Fredericktown","SITESTATE":"MO","FREQ":"162.500","CALLSIGN":"WWG49","LAT":"37.453806","LON":"-90.376083","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"KWN55":{"ST":"MO","STATE":"Missouri","COUNTY":"Moniteau","SAME":"029135","SITENAME":"Jamestown","SITELOC":"Prairie Home","SITESTATE":"MO","FREQ":"162.425","CALLSIGN":"KWN55","LAT":"38.750333","LON":"-92.559","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"WXL47":{"ST":"MO","STATE":"Missouri","COUNTY":"Wayne","SAME":"029223","SITENAME":"Bloomfield","SITELOC":"Idalia/Sikeston","SITESTATE":"MO","FREQ":"162.400","CALLSIGN":"WXL47","LAT":"36.9022","LON":"-89.8881","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"WWG48":{"ST":"MO","STATE":"Missouri","COUNTY":"Wayne","SAME":"029223","SITENAME":"Doniphan","SITELOC":"Doniphan","SITESTATE":"MO","FREQ":"162.450","CALLSIGN":"WWG48","LAT":"36.658333","LON":"-90.793333","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KXI66":{"ST":"MO","STATE":"Missouri","COUNTY":"Wayne","SAME":"029223","SITENAME":"Piedmont","SITELOC":"Sanders Hollow","SITESTATE":"MO","FREQ":"162.425","CALLSIGN":"KXI66","LAT":"37.0931","LON":"-90.8439","PWR":"1000","STATUS":"NORMAL","WFO":"Paducah|KY","REMARKS":""},"KZZ34":{"ST":"MO","STATE":"Missouri","COUNTY":"Saline","SAME":"029195","SITENAME":"Carrollton","SITELOC":"Carrollton","SITESTATE":"MO","FREQ":"162.450","CALLSIGN":"KZZ34","LAT":"39.367222","LON":"-93.403889","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":""},"KZZ38":{"ST":"MO","STATE":"Missouri","COUNTY":"Sullivan","SAME":"029211","SITENAME":"Trenton","SITELOC":"Galt","SITESTATE":"MO","FREQ":"162.500","CALLSIGN":"KZZ38","LAT":"40.154444","LON":"-93.422778","PWR":"1000","STATUS":"NORMAL","WFO":"Kansas City|MO","REMARKS":""},"WWF75":{"ST":"MO","STATE":"Missouri","COUNTY":"Washington","SAME":"029221","SITENAME":"Bourbon","SITELOC":"Crawford County","SITESTATE":"MO","FREQ":"162.525","CALLSIGN":"WWF75","LAT":"38.168944","LON":"-91.218806","PWR":"1000","STATUS":"NORMAL","WFO":"St. Louis|MO","REMARKS":""},"WWF76":{"ST":"MO","STATE":"Missouri","COUNTY":"Texas","SAME":"029215","SITENAME":"Summersville","SITELOC":"Summersville","SITESTATE":"MO","FREQ":"162.475","CALLSIGN":"WWF76","LAT":"37.180694","LON":"-91.665833","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"KZZ82":{"ST":"MO","STATE":"Missouri","COUNTY":"Taney","SAME":"029213","SITENAME":"Gainesville","SITELOC":"Marshfield","SITESTATE":"MO","FREQ":"162.425","CALLSIGN":"KZZ82","LAT":"36.663861","LON":"-92.517056","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"KXI38":{"ST":"MO","STATE":"Missouri","COUNTY":"Ozark","SAME":"029153","SITENAME":"West Plains","SITELOC":"West Plains","SITESTATE":"MO","FREQ":"162.525","CALLSIGN":"KXI38","LAT":"36.6936","LON":"-91.8833","PWR":"300","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WXM81":{"ST":"MO","STATE":"Missouri","COUNTY":"Hickory","SAME":"029085","SITENAME":"Hermitage","SITELOC":"Lake PomDeTerre","SITESTATE":"MO","FREQ":"162.450","CALLSIGN":"WXM81","LAT":"37.905444","LON":"-93.317028","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"KXI35":{"ST":"MO","STATE":"Missouri","COUNTY":"Shannon","SAME":"029203","SITENAME":"Alton","SITELOC":"Alton","SITESTATE":"MO","FREQ":"162.500","CALLSIGN":"KXI35","LAT":"36.6983","LON":"-91.4103","PWR":"300","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WZ2545":{"ST":"MO","STATE":"Missouri","COUNTY":"Jasper","SAME":"029097","SITENAME":"Joplin","SITELOC":"Joplin","SITESTATE":"MO","FREQ":"162.550","CALLSIGN":"WZ2545","LAT":"37.085","LON":"-94.5133","PWR":"300","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WNG648":{"ST":"MO","STATE":"Missouri","COUNTY":"Pulaski","SAME":"029169","SITENAME":"Crocker","SITELOC":"Fort  Leonard Wood","SITESTATE":"MO","FREQ":"162.500","CALLSIGN":"WNG648","LAT":"37.9522","LON":"-92.03","PWR":"1000","STATUS":"NORMAL","WFO":"Springfield|MO","REMARKS":""},"WXM86":{"ST":"MP","STATE":"Commonwealth of the Northern Mariana Islands","COUNTY":"Tinian","SAME":"069120","SITENAME":"Saipan","SITELOC":"Mount Tapochau","SITESTATE":"MP","FREQ":"162.550","CALLSIGN":"WXM86","LAT":"15.1865","LON":"145.743819","PWR":"300","STATUS":"NORMAL","WFO":"Guam|GU","REMARKS":"ALL"},"KIH53":{"ST":"TN","STATE":"Tennessee","COUNTY":"McNairy","SAME":"047109","SITENAME":"Booneville","SITELOC":"Dumas","SITESTATE":"MS","FREQ":"162.400","CALLSIGN":"KIH53","LAT":"34.709472","LON":"-88.843556","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"KIH51":{"ST":"MS","STATE":"Mississippi","COUNTY":"Yalobusha","SAME":"028161","SITENAME":"Ackerman","SITELOC":"Ackerman","SITESTATE":"MS","FREQ":"162.475","CALLSIGN":"KIH51","LAT":"33.353944","LON":"-89.15","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"KJY83":{"ST":"MS","STATE":"Mississippi","COUNTY":"Scott","SAME":"028123","SITENAME":"Carthage","SITELOC":"Carthage","SITESTATE":"MS","FREQ":"162.500","CALLSIGN":"KJY83","LAT":"32.724556","LON":"-89.545583","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"KIH52":{"ST":"MS","STATE":"Mississippi","COUNTY":"Yalobusha","SAME":"028161","SITENAME":"Oxford","SITELOC":"Taylor","SITESTATE":"MS","FREQ":"162.550","CALLSIGN":"KIH52","LAT":"34.2908","LON":"-89.706056","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"KIH38":{"ST":"MS","STATE":"Mississippi","COUNTY":"Yazoo","SAME":"028163","SITENAME":"Jackson","SITELOC":"Raymond","SITESTATE":"MS","FREQ":"162.400","CALLSIGN":"KIH38","LAT":"32.1917","LON":"-90.4","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":"ALL"},"KIH47":{"ST":"MS","STATE":"Mississippi","COUNTY":"Wayne","SAME":"028153","SITENAME":"Hattiesburg","SITELOC":"Melba","SITESTATE":"MS","FREQ":"162.475","CALLSIGN":"KIH47","LAT":"31.4395","LON":"-89.640556","PWR":"1000","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":""},"WZ2546":{"ST":"MS","STATE":"Mississippi","COUNTY":"Smith","SAME":"028129","SITENAME":"Magee","SITELOC":"Magee","SITESTATE":"MS","FREQ":"162.525","CALLSIGN":"WZ2546","LAT":"31.8742","LON":"-89.7319","PWR":"300","STATUS":"NORMAL","WFO":"Jackson|MS","REMARKS":"ALL"},"KIH21":{"ST":"MS","STATE":"Mississippi","COUNTY":"Stone","SAME":"028131","SITENAME":"Gulfport","SITELOC":"Gulfport","SITESTATE":"MS","FREQ":"162.400","CALLSIGN":"KIH21","LAT":"30.3842","LON":"-89.0958","PWR":"1000","STATUS":"NORMAL","WFO":"New Orleans/Baton Rouge|LA","REMARKS":""},"WXL79":{"ST":"MT","STATE":"Montana","COUNTY":"Silver Bow","SAME":"030093","SITENAME":"Butte","SITELOC":"Xl Heights","SITESTATE":"MT","FREQ":"162.550","CALLSIGN":"WXL79","LAT":"46.0075","LON":"-112.441667","PWR":"100","STATUS":"NORMAL","WFO":"Missoula|MT","REMARKS":""},"WNG638":{"ST":"MT","STATE":"Montana","COUNTY":"Beaverhead","SAME":"030001","SITENAME":"Dillon","SITELOC":"Red Rock","SITESTATE":"MT","FREQ":"162.475","CALLSIGN":"WNG638","LAT":"44.9444","LON":"-112.734722","PWR":"150","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":"CENTRAL"},"WXL27":{"ST":"MT","STATE":"Montana","COUNTY":"Yellowstone","SAME":"030111","SITENAME":"Billings","SITELOC":"Emerald Hills","SITESTATE":"MT","FREQ":"162.550","CALLSIGN":"WXL27","LAT":"45.805833","LON":"-108.349444","PWR":"300","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WNG724":{"ST":"MT","STATE":"Montana","COUNTY":"Big Horn","SAME":"030003","SITENAME":"Hardin","SITELOC":"Yellowtail / Crow Reservation","SITESTATE":"MT","FREQ":"162.450","CALLSIGN":"WNG724","LAT":"45.745","LON":"-107.533889","PWR":"100","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WXM46":{"ST":"WY","STATE":"Wyoming","COUNTY":"Sheridan","SAME":"056033","SITENAME":"Sheridan","SITELOC":"Banner Peak","SITESTATE":"WY","FREQ":"162.475","CALLSIGN":"WXM46","LAT":"44.601944","LON":"-106.931667","PWR":"400","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WXL53":{"ST":"MT","STATE":"Montana","COUNTY":"Hill","SAME":"030041","SITENAME":"Havre","SITELOC":"Squaw Butte","SITESTATE":"MT","FREQ":"162.400","CALLSIGN":"WXL53","LAT":"48.494364","LON":"-109.714889","PWR":"300","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":""},"WXK66":{"ST":"MT","STATE":"Montana","COUNTY":"Meagher","SAME":"030059","SITENAME":"Helena","SITELOC":"Hogback Mtn.","SITESTATE":"MT","FREQ":"162.400","CALLSIGN":"WXK66","LAT":"46.826389","LON":"-111.709167","PWR":"1000","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":"N W CENTRAL"},"WNG563":{"ST":"WY","STATE":"Wyoming","COUNTY":"Park","SAME":"056029","SITENAME":"Cody","SITELOC":"Powell","SITESTATE":"WY","FREQ":"162.400","CALLSIGN":"WNG563","LAT":"44.587222","LON":"-108.852222","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WXK57":{"ST":"SD","STATE":"South Dakota","COUNTY":"Harding","SAME":"046063","SITENAME":"Baker","SITELOC":"Bechtold Hill","SITESTATE":"MT","FREQ":"162.550","CALLSIGN":"WXK57","LAT":"46.239167","LON":"-104.335","PWR":"300","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":"NW"},"WNG567":{"ST":"MT","STATE":"Montana","COUNTY":"Powder River","SAME":"030075","SITENAME":"Broadus","SITELOC":"Five Mile Hill","SITESTATE":"MT","FREQ":"162.425","CALLSIGN":"WNG567","LAT":"45.475278","LON":"-105.498889","PWR":"300","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WZ2533":{"ST":"MT","STATE":"Montana","COUNTY":"Carter","SAME":"030011","SITENAME":"Ekalaka","SITELOC":"Carter County","SITESTATE":"MT","FREQ":"162.475","CALLSIGN":"WZ2533","LAT":"45.512222","LON":"-104.48","PWR":"300","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WXL23":{"ST":"WY","STATE":"Wyoming","COUNTY":"Weston","SAME":"056045","SITENAME":"Lead","SITELOC":"Terry Peak","SITESTATE":"SD","FREQ":"162.525","CALLSIGN":"WXL23","LAT":"44.328056","LON":"-103.834444","PWR":"300","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":"NE"},"WXL54":{"ST":"MT","STATE":"Montana","COUNTY":"Rosebud","SAME":"030087","SITENAME":"Miles City","SITELOC":"Gov't. Hill","SITESTATE":"MT","FREQ":"162.400","CALLSIGN":"WXL54","LAT":"46.404444","LON":"-105.663333","PWR":"300","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WXJ43":{"ST":"MT","STATE":"Montana","COUNTY":"Teton","SAME":"030099","SITENAME":"Great Falls","SITELOC":"Bootlegger Hill","SITESTATE":"MT","FREQ":"162.550","CALLSIGN":"WXJ43","LAT":"47.606401","LON":"-111.318561","PWR":"300","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":""},"WWG84":{"ST":"MT","STATE":"Montana","COUNTY":"Toole","SAME":"030101","SITENAME":"Belgian Hill","SITELOC":"Conrad","SITESTATE":"MT","FREQ":"162.500","CALLSIGN":"WWG84","LAT":"48.33","LON":"-112.035556","PWR":"300","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":"NE"},"KZZ54":{"ST":"MT","STATE":"Montana","COUNTY":"Judith Basin","SAME":"030045","SITENAME":"Lewistown","SITELOC":"Mocassin Mtn.","SITESTATE":"MT","FREQ":"162.500","CALLSIGN":"KZZ54","LAT":"47.177778","LON":"-109.535833","PWR":"100","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":""},"WNG719":{"ST":"MT","STATE":"Montana","COUNTY":"Treasure","SAME":"030103","SITENAME":"Forsyth","SITELOC":"Forsyth","SITESTATE":"MT","FREQ":"162.525","CALLSIGN":"WNG719","LAT":"46.330833","LON":"-106.710833","PWR":"100","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":"W C"},"KPS507":{"ST":"MT","STATE":"Montana","COUNTY":"Valley","SAME":"230105","SITENAME":"Glentana","SITELOC":"Randel","SITESTATE":"MT","FREQ":"162.525","CALLSIGN":"KPS507","LAT":"48.794444","LON":"-106.245556","PWR":"100","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"NORTH"},"WWF92":{"ST":"MT","STATE":"Montana","COUNTY":"Daniels","SAME":"630019","SITENAME":"Scobey","SITELOC":"Scobey","SITESTATE":"MT","FREQ":"162.450","CALLSIGN":"WWF92","LAT":"48.801389","LON":"-105.346667","PWR":"25","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"WEST"},"KHC26":{"ST":"MT","STATE":"Montana","COUNTY":"McCone","SAME":"930055","SITENAME":"Circle","SITELOC":"Linsay","SITESTATE":"MT","FREQ":"162.550","CALLSIGN":"KHC26","LAT":"47.276944","LON":"-105.391667","PWR":"300","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"SOUTHEAST"},"WWF93":{"ST":"MT","STATE":"Montana","COUNTY":"Wibaux","SAME":"030109","SITENAME":"Glendive","SITELOC":"Makoshika Peak","SITESTATE":"MT","FREQ":"162.475","CALLSIGN":"WWF93","LAT":"47.052222","LON":"-104.6725","PWR":"100","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"ALL"},"WXL82":{"ST":"MT","STATE":"Montana","COUNTY":"Sanders","SAME":"030089","SITENAME":"Kalispell","SITELOC":"Blacktail Mtn.","SITESTATE":"MT","FREQ":"162.550","CALLSIGN":"WXL82","LAT":"48.011667","LON":"-114.364167","PWR":"100","STATUS":"NORMAL","WFO":"Missoula|MT","REMARKS":"SOUTHEAST"},"KGG97":{"ST":"MT","STATE":"Montana","COUNTY":"Gallatin","SAME":"030031","SITENAME":"Bozeman","SITELOC":"Courthouse","SITESTATE":"MT","FREQ":"162.500","CALLSIGN":"KGG97","LAT":"45.679722","LON":"-111.041667","PWR":"100","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":"NORTH "},"WXL32":{"ST":"MT","STATE":"Montana","COUNTY":"Valley","SAME":"230105","SITENAME":"Glasgow","SITELOC":"Signal Hill","SITESTATE":"MT","FREQ":"162.400","CALLSIGN":"WXL32","LAT":"48.031389","LON":"-106.315833","PWR":"300","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"NORTH"},"KHB53":{"ST":"MT","STATE":"Montana","COUNTY":"McCone","SAME":"030055","SITENAME":"Jordan","SITELOC":"Brockway","SITESTATE":"MT","FREQ":"162.500","CALLSIGN":"KHB53","LAT":"47.306111","LON":"-106.914444","PWR":"300","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"ALL"},"WNG670":{"ST":"MT","STATE":"Montana","COUNTY":"Petroleum","SAME":"030069","SITENAME":"Winnett","SITELOC":"Mosby","SITESTATE":"MT","FREQ":"162.400","CALLSIGN":"WNG670","LAT":"46.990833","LON":"-108.333889","PWR":"300","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"ALL"},"WNG533":{"ST":"MT","STATE":"Montana","COUNTY":"Glacier","SAME":"030035","SITENAME":"Browning","SITELOC":"Browning","SITESTATE":"MT","FREQ":"162.525","CALLSIGN":"WNG533","LAT":"48.596111","LON":"-113.018889","PWR":"300","STATUS":"NORMAL","WFO":"Great Falls|MT","REMARKS":"CENTRAL"},"KAD95":{"ST":"MT","STATE":"Montana","COUNTY":"Wheatland","SAME":"030107","SITENAME":"Ryegate","SITELOC":"Ryegate","SITESTATE":"MT","FREQ":"162.450","CALLSIGN":"KAD95","LAT":"46.283333","LON":"-109.162778","PWR":"300","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WXL25":{"ST":"MT","STATE":"Montana","COUNTY":"Sanders","SAME":"030089","SITENAME":"Missoula","SITELOC":"Point Six Mtn.","SITESTATE":"MT","FREQ":"162.400","CALLSIGN":"WXL25","LAT":"47.04","LON":"-113.983611","PWR":"100","STATUS":"NORMAL","WFO":"Missoula|MT","REMARKS":""},"KGG94":{"ST":"MT","STATE":"Montana","COUNTY":"Roosevelt","SAME":"030085","SITENAME":"Poplar","SITELOC":"Poplar","SITESTATE":"MT","FREQ":"162.425","CALLSIGN":"KGG94","LAT":"48.290556","LON":"-105.251944","PWR":"300","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"ALL"},"WNG686":{"ST":"WY","STATE":"Wyoming","COUNTY":"Teton","SAME":"056039","SITENAME":"Elk Plaza","SITELOC":"Yellowstone Nat'l. Park North","SITESTATE":"WY","FREQ":"162.425","CALLSIGN":"WNG686","LAT":"44.9864","LON":"-110.7156","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG667":{"ST":"WY","STATE":"Wyoming","COUNTY":"Teton","SAME":"056039","SITENAME":"Grant Village","SITELOC":"Yellowstone AGR","SITESTATE":"WY","FREQ":"162.450","CALLSIGN":"WNG667","LAT":"44.3811","LON":"-110.5453","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG682":{"ST":"MT","STATE":"Montana","COUNTY":"Sweet Grass","SAME":"030097","SITENAME":"Livingston","SITELOC":"Livingston","SITESTATE":"MT","FREQ":"162.525","CALLSIGN":"WNG682","LAT":"45.6739","LON":"-110.5675","PWR":"100","STATUS":"NORMAL","WFO":"Billings|MT","REMARKS":""},"WWG85":{"ST":"MT","STATE":"Montana","COUNTY":"Phillips","SAME":"030071","SITENAME":"Malta","SITELOC":"Malta","SITESTATE":"MT","FREQ":"162.475","CALLSIGN":"WWG85","LAT":"48.3494","LON":"-107.834722","PWR":"75","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":""},"WXL84":{"ST":"ND","STATE":"North Dakota","COUNTY":"Williams","SAME":"038105","SITENAME":"Williston","SITELOC":"Williston","SITESTATE":"ND","FREQ":"162.550","CALLSIGN":"WXL84","LAT":"48.141667","LON":"-103.892778","PWR":"1000","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":"ALL"},"WWF50":{"ST":"MT","STATE":"Montana","COUNTY":"Sheridan","SAME":"030091","SITENAME":"Plentywood","SITELOC":"Plentywood","SITESTATE":"MT","FREQ":"162.475","CALLSIGN":"WWF50","LAT":"48.693889","LON":"-104.595556","PWR":"50","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":""},"WZ2528":{"ST":"MT","STATE":"Montana","COUNTY":"Wibaux","SAME":"030109","SITENAME":"Wibaux","SITELOC":"Wibaux","SITESTATE":"MT","FREQ":"162.500","CALLSIGN":"WZ2528","LAT":"46.9919","LON":"-104.2683","PWR":"300","STATUS":"NORMAL","WFO":"Glasgow|MT","REMARKS":"ALL"},"WXL58":{"ST":"NC","STATE":"North Carolina","COUNTY":"Warren","SAME":"037185","SITENAME":"Chapel Hill","SITELOC":"Durham","SITESTATE":"NC","FREQ":"162.550","CALLSIGN":"WXL58","LAT":"35.866944","LON":"-79.1675","PWR":"1000","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":""},"WXL42":{"ST":"VA","STATE":"Virginia","COUNTY":"Pittsylvania","SAME":"051143","SITENAME":"Winston-Salem","SITELOC":"Sauratown Mtn. ","SITESTATE":"NC","FREQ":"162.400","CALLSIGN":"WXL42","LAT":"36.37748","LON":"-80.3639","PWR":"1000","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":"SW"},"WXL70":{"ST":"SC","STATE":"South Carolina","COUNTY":"York","SAME":"045091","SITENAME":"Charlotte","SITELOC":"Spencer Mtn.","SITESTATE":"NC","FREQ":"162.475","CALLSIGN":"WXL70","LAT":"35.297222","LON":"-81.114722","PWR":"1000","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"WNG538":{"ST":"NC","STATE":"North Carolina","COUNTY":"Yancey","SAME":"037199","SITENAME":"Linville","SITELOC":"Grandmother Mtn.","SITESTATE":"NC","FREQ":"162.450","CALLSIGN":"WNG538","LAT":"36.063889","LON":"-81.842222","PWR":"300","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"KJY85":{"ST":"NC","STATE":"North Carolina","COUNTY":"Rowan","SAME":"037159","SITENAME":"Mooresville","SITELOC":"South Iredell County","SITESTATE":"NC","FREQ":"162.525","CALLSIGN":"KJY85","LAT":"35.608056","LON":"-80.828611","PWR":"1000","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"WNG588":{"ST":"VA","STATE":"Virginia","COUNTY":"Washington","SAME":"051191","SITENAME":"Mount Jefferson","SITELOC":"Ashe County","SITESTATE":"NC","FREQ":"162.500","CALLSIGN":"WNG588","LAT":"36.410833","LON":"-81.495833","PWR":"300","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":""},"WZ2500":{"ST":"VA","STATE":"Virginia","COUNTY":"Wythe","SAME":"051197","SITENAME":"Sand Mtn","SITELOC":"Wythe County","SITESTATE":"VA","FREQ":"162.450","CALLSIGN":"WZ2500","LAT":"36.9078","LON":"-81.0681","PWR":"300","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":""},"WWF60":{"ST":"NC","STATE":"North Carolina","COUNTY":"Union","SAME":"037179","SITENAME":"Buck Mountain","SITELOC":"Badin","SITESTATE":"NC","FREQ":"162.500","CALLSIGN":"WWF60","LAT":"35.406389","LON":"-79.998889","PWR":"1000","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":""},"WXK90":{"ST":"SC","STATE":"South Carolina","COUNTY":"Marlboro","SAME":"045069","SITENAME":"Cheraw","SITELOC":"Chesterfield","SITESTATE":"SC","FREQ":"162.450","CALLSIGN":"WXK90","LAT":"34.646111","LON":"-79.945278","PWR":"300","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"WNG597":{"ST":"SC","STATE":"South Carolina","COUNTY":"Marlboro","SAME":"045069","SITENAME":"Ellerbe","SITELOC":"Richmond  County","SITESTATE":"NC","FREQ":"162.400","CALLSIGN":"WNG597","LAT":"35.120278","LON":"-79.710833","PWR":"300","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":""},"WXK47":{"ST":"VA","STATE":"Virginia","COUNTY":"Wise","SAME":"051195","SITENAME":"Bristol","SITELOC":"Holston Mtn.","SITESTATE":"TN","FREQ":"162.550","CALLSIGN":"WXK47","LAT":"36.4428","LON":"-82.1203","PWR":"500","STATUS":"NORMAL","WFO":"Morristown|TN","REMARKS":""},"WXL56":{"ST":"NC","STATE":"North Carolina","COUNTY":"Yancey","SAME":"037199","SITENAME":"Asheville","SITELOC":"Asheville","SITESTATE":"NC","FREQ":"162.400","CALLSIGN":"WXL56","LAT":"35.425556","LON":"-82.756944","PWR":"300","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":"S"},"KEC84":{"ST":"NC","STATE":"North Carolina","COUNTY":"Pitt","SAME":"037147","SITENAME":"New Bern","SITELOC":"Glenburnie Garden","SITESTATE":"NC","FREQ":"162.400","CALLSIGN":"KEC84","LAT":"35.133611","LON":"-77.0517","PWR":"1000","STATUS":"NORMAL","WFO":"Newport/Morehead City|NC","REMARKS":""},"WNG537":{"ST":"NC","STATE":"North Carolina","COUNTY":"Washington","SAME":"037187","SITENAME":"Windsor","SITELOC":"Windsor","SITESTATE":"NC","FREQ":"162.525","CALLSIGN":"WNG537","LAT":"36.0636","LON":"-76.9736","PWR":"300","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"KIG77":{"ST":"NC","STATE":"North Carolina","COUNTY":"Washington","SAME":"037187","SITENAME":"Cape Hatteras","SITELOC":"Middletown","SITESTATE":"NC","FREQ":"162.475","CALLSIGN":"KIG77","LAT":"35.2458","LON":"-75.5339","PWR":"1000","STATUS":"NORMAL","WFO":"Newport/Morehead City|NC","REMARKS":""},"WWG33":{"ST":"VA","STATE":"Virginia","COUNTY":"Sussex","SAME":"051183","SITENAME":"Margarettsville","SITELOC":"Margarettsville","SITESTATE":"NC","FREQ":"162.450","CALLSIGN":"WWG33","LAT":"36.513686","LON":"-77.332105","PWR":"300","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"KHB37":{"ST":"VA","STATE":"Virginia","COUNTY":"York","SAME":"051199","SITENAME":"Norfolk","SITELOC":"Driver","SITESTATE":"VA","FREQ":"162.550","CALLSIGN":"KHB37","LAT":"36.815556","LON":"-76.466667","PWR":"1000","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"WXL59":{"ST":"NC","STATE":"North Carolina","COUNTY":"Wilson","SAME":"037195","SITENAME":"Rocky Mount","SITELOC":"Tarboro","SITESTATE":"NC","FREQ":"162.475","CALLSIGN":"WXL59","LAT":"35.9031","LON":"-77.7822","PWR":"1000","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":""},"WXL50":{"ST":"SC","STATE":"South Carolina","COUNTY":"Marlboro","SAME":"045069","SITENAME":"Saint Pauls","SITELOC":"Saint Pauls","SITESTATE":"NC","FREQ":"162.475","CALLSIGN":"WXL50","LAT":"34.796944","LON":"-79.045","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|NC","REMARKS":""},"KXI95":{"ST":"NC","STATE":"North Carolina","COUNTY":"Wayne","SAME":"037191","SITENAME":"Warsaw","SITELOC":"Duplin County","SITESTATE":"NC","FREQ":"162.425","CALLSIGN":"KXI95","LAT":"34.9281","LON":"-78.0558","PWR":"300","STATUS":"NORMAL","WFO":"Newport/Morehead City|NC","REMARKS":""},"KHB31":{"ST":"NC","STATE":"North Carolina","COUNTY":"Pender","SAME":"037141","SITENAME":"Winnabow","SITELOC":"Winnabow","SITESTATE":"NC","FREQ":"162.550","CALLSIGN":"KHB31","LAT":"34.131389","LON":"-78.187778","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|NC","REMARKS":""},"KEC95":{"ST":"SC","STATE":"South Carolina","COUNTY":"Williamsburg","SAME":"045089","SITENAME":"Aynor","SITELOC":"Conway/Myrtle Beach","SITESTATE":"SC","FREQ":"162.400","CALLSIGN":"KEC95","LAT":"33.951389","LON":"-79.108611","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|NC","REMARKS":"E"},"WWH26":{"ST":"NC","STATE":"North Carolina","COUNTY":"Pasquotank","SAME":"037139","SITENAME":"Mamie","SITELOC":"Mamie","SITESTATE":"NC","FREQ":"162.425","CALLSIGN":"WWH26","LAT":"36.1358","LON":"-75.8242","PWR":"300","STATUS":"NORMAL","WFO":"Newport/Morehead City|NC","REMARKS":""},"WXL60":{"ST":"VA","STATE":"Virginia","COUNTY":"Wythe","SAME":"051197","SITENAME":"Roanoke","SITELOC":"Poor Mtn.","SITESTATE":"VA","FREQ":"162.475","CALLSIGN":"WXL60","LAT":"37.1989","LON":"-80.1506","PWR":"1000","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":""},"KJY86":{"ST":"VA","STATE":"Virginia","COUNTY":"Pittsylvania","SAME":"051143","SITENAME":"South Boston","SITELOC":"South Boston","SITESTATE":"VA","FREQ":"162.525","CALLSIGN":"KJY86","LAT":"36.733056","LON":"-78.933889","PWR":"1000","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":"E & CENTRAL "},"WWG82":{"ST":"NC","STATE":"North Carolina","COUNTY":"Swain","SAME":"037173","SITENAME":"Robbinsville","SITELOC":"Joanna  Bald Mtn.","SITESTATE":"NC","FREQ":"162.525","CALLSIGN":"WWG82","LAT":"35.257853","LON":"-83.795475","PWR":"300","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"KHC27":{"ST":"SC","STATE":"South Carolina","COUNTY":"York","SAME":"045091","SITENAME":"Rock Hill","SITELOC":"York","SITESTATE":"SC","FREQ":"162.425","CALLSIGN":"KHC27","LAT":"34.839722","LON":"-81.018333","PWR":"1000","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"WNG706":{"ST":"NC","STATE":"North Carolina","COUNTY":"Wilson","SAME":"037195","SITENAME":"Garner","SITELOC":"Garner","SITESTATE":"NC","FREQ":"162.450","CALLSIGN":"WNG706","LAT":"35.673889","LON":"-78.528056","PWR":"300","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":""},"WNG586":{"ST":"VA","STATE":"Virginia","COUNTY":"Mecklenburg","SAME":"051117","SITENAME":"Henderson","SITELOC":"Henderson","SITESTATE":"NC","FREQ":"162.500","CALLSIGN":"WNG586","LAT":"36.310278","LON":"-78.501111","PWR":"300","STATUS":"NORMAL","WFO":"Raleigh|NC","REMARKS":""},"WXJ21":{"ST":"SC","STATE":"South Carolina","COUNTY":"Union","SAME":"045087","SITENAME":"Greenville","SITELOC":"Paris Mtn.","SITESTATE":"SC","FREQ":"162.550","CALLSIGN":"WXJ21","LAT":"34.940556","LON":"-82.410556","PWR":"1000","STATUS":"NORMAL","WFO":"Greenville-Spartanburg|SC","REMARKS":""},"WNG658":{"ST":"SD","STATE":"South Dakota","COUNTY":"Perkins","SAME":"046105","SITENAME":"Scranton","SITELOC":"Bowman County","SITESTATE":"ND","FREQ":"162.525","CALLSIGN":"WNG658","LAT":"46.1825","LON":"-103.048889","PWR":"1000","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"WNG656":{"ST":"ND","STATE":"North Dakota","COUNTY":"Stutsman","SAME":"038093","SITENAME":"Fort Ransom","SITELOC":"Fort Ransom","SITESTATE":"ND","FREQ":"162.525","CALLSIGN":"WNG656","LAT":"46.523611","LON":"-97.956306","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXL81":{"ST":"ND","STATE":"North Dakota","COUNTY":"Stutsman","SAME":"038093","SITENAME":"Jamestown","SITELOC":"Cable Serv. Tower/Ypsilanti","SITESTATE":"ND","FREQ":"162.550","CALLSIGN":"WXL81","LAT":"46.776667","LON":"-98.522222","PWR":"1000","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"KWN46":{"ST":"ND","STATE":"North Dakota","COUNTY":"Wells","SAME":"038103","SITENAME":"Sheyenne","SITELOC":"Sheyenne","SITESTATE":"ND","FREQ":"162.525","CALLSIGN":"KWN46","LAT":"47.7756","LON":"-99.146417","PWR":"1000","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WWG25":{"ST":"ND","STATE":"North Dakota","COUNTY":"Towner","SAME":"038095","SITENAME":"Webster","SITELOC":"Devils Lake","SITESTATE":"ND","FREQ":"162.425","CALLSIGN":"WWG25","LAT":"48.194139","LON":"-98.903917","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXL80":{"ST":"ND","STATE":"North Dakota","COUNTY":"Stark","SAME":"038089","SITENAME":"Dickinson","SITELOC":"Daglum","SITESTATE":"ND","FREQ":"162.400","CALLSIGN":"WXL80","LAT":"46.725","LON":"-102.916111","PWR":"1000","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"WXL83":{"ST":"ND","STATE":"North Dakota","COUNTY":"Ward","SAME":"038101","SITENAME":"Minot","SITELOC":"South Prarie","SITESTATE":"ND","FREQ":"162.400","CALLSIGN":"WXL83","LAT":"48.050833","LON":"-101.39","PWR":"1000","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"KWN42":{"ST":"ND","STATE":"North Dakota","COUNTY":"Towner","SAME":"038095","SITENAME":"Rolla","SITELOC":"Rolla","SITESTATE":"ND","FREQ":"162.475","CALLSIGN":"KWN42","LAT":"48.8475","LON":"-99.656389","PWR":"300","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"KWN45":{"ST":"ND","STATE":"North Dakota","COUNTY":"Towner","SAME":"038095","SITENAME":"Willow City","SITELOC":"Bottineau","SITESTATE":"ND","FREQ":"162.450","CALLSIGN":"KWN45","LAT":"48.604167","LON":"-100.303056","PWR":"300","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"WXL78":{"ST":"ND","STATE":"North Dakota","COUNTY":"Wells","SAME":"038103","SITENAME":"Bismarck","SITELOC":"St. Anthony","SITESTATE":"ND","FREQ":"162.475","CALLSIGN":"WXL78","LAT":"46.588056","LON":"-100.8125","PWR":"1000","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"WNG581":{"ST":"ND","STATE":"North Dakota","COUNTY":"Stutsman","SAME":"038093","SITENAME":"Steele","SITELOC":"Steele","SITESTATE":"ND","FREQ":"162.400","CALLSIGN":"WNG581","LAT":"46.665278","LON":"-99.758333","PWR":"300","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"KWN43":{"ST":"ND","STATE":"North Dakota","COUNTY":"Cavalier","SAME":"038019","SITENAME":"Langdon","SITELOC":"Langdon","SITESTATE":"ND","FREQ":"162.500","CALLSIGN":"KWN43","LAT":"48.754972","LON":"-98.361139","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXM25":{"ST":"SD","STATE":"South Dakota","COUNTY":"Spink","SAME":"046115","SITENAME":"Aberdeen","SITELOC":"Bath","SITESTATE":"SD","FREQ":"162.475","CALLSIGN":"WXM25","LAT":"45.4658","LON":"-98.3367","PWR":"1000","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":""},"WXN88":{"ST":"ND","STATE":"North Dakota","COUNTY":"Mountrail","SAME":"038061","SITENAME":"New Town","SITELOC":"Belden (AG)","SITESTATE":"ND","FREQ":"162.525","CALLSIGN":"WXN88","LAT":"48.071667","LON":"-102.44","PWR":"300","STATUS":"NORMAL","WFO":"Bismarck|ND","REMARKS":""},"WXM40":{"ST":"WY","STATE":"Wyoming","COUNTY":"Campbell","SAME":"856005","SITENAME":"Lowry","SITELOC":"Selby","SITESTATE":"SD","FREQ":"162.500","CALLSIGN":"WXM40","LAT":"45.397222","LON":"-99.941389","PWR":"1000","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":"SOUTH"},"KWN44":{"ST":"ND","STATE":"North Dakota","COUNTY":"Pembina","SAME":"038067","SITENAME":"Cavalier","SITELOC":"Hansel","SITESTATE":"ND","FREQ":"162.450","CALLSIGN":"KWN44","LAT":"48.7339","LON":"-97.750889","PWR":"300","STATUS":"NORMAL","WFO":"Grand Forks|ND","REMARKS":""},"WXL74":{"ST":"NE","STATE":"Nebraska","COUNTY":"York","SAME":"031185","SITENAME":"Grand Island","SITELOC":"Giltner","SITESTATE":"NE","FREQ":"162.400","CALLSIGN":"WXL74","LAT":"40.772222","LON":"-98.0895","PWR":"1000","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"WXL77":{"ST":"NE","STATE":"Nebraska","COUNTY":"Wayne","SAME":"031179","SITENAME":"Norfolk","SITELOC":"Carroll","SITESTATE":"NE","FREQ":"162.550","CALLSIGN":"WXL77","LAT":"42.2375","LON":"-97.2778","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"WXL68":{"ST":"NE","STATE":"Nebraska","COUNTY":"Perkins","SAME":"031135","SITENAME":"North Platte","SITELOC":"Sutherland","SITESTATE":"NE","FREQ":"162.550","CALLSIGN":"WXL68","LAT":"41.021111","LON":"-101.1525","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":""},"WXL67":{"ST":"NE","STATE":"Nebraska","COUNTY":"Sioux","SAME":"031165","SITENAME":"Scottsbluff","SITELOC":"Angora","SITESTATE":"NE","FREQ":"162.475","CALLSIGN":"WXL67","LAT":"41.84","LON":"-103.055","PWR":"1000","STATUS":"NORMAL","WFO":"Cheyenne|WY","REMARKS":"S 1/2"},"WXL73":{"ST":"NE","STATE":"Nebraska","COUNTY":"Wheeler","SAME":"031183","SITENAME":"Bassett","SITELOC":"Bassett","SITESTATE":"NE","FREQ":"162.475","CALLSIGN":"WXL73","LAT":"42.338056","LON":"-99.488056","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":""},"WNG645":{"ST":"NE","STATE":"Nebraska","COUNTY":"Wheeler","SAME":"031183","SITENAME":"Albion","SITELOC":"Albion","SITESTATE":"NE","FREQ":"162.500","CALLSIGN":"WNG645","LAT":"41.622528","LON":"-98.119472","PWR":"300","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"KXI20":{"ST":"NE","STATE":"Nebraska","COUNTY":"Sioux","SAME":"031165","SITENAME":"Chadron","SITELOC":"Chadron St. Park","SITESTATE":"NE","FREQ":"162.525","CALLSIGN":"KXI20","LAT":"42.635","LON":"-103.103333","PWR":"1000","STATUS":"NORMAL","WFO":"Cheyenne|WY","REMARKS":""},"KXI25":{"ST":"SD","STATE":"South Dakota","COUNTY":"Gregory","SAME":"046053","SITENAME":"Pickstown","SITELOC":"Lake Andes","SITESTATE":"SD","FREQ":"162.425","CALLSIGN":"KXI25","LAT":"43.065","LON":"-98.4892","PWR":"300","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WXL75":{"ST":"NE","STATE":"Nebraska","COUNTY":"Phelps","SAME":"031137","SITENAME":"Holdrege","SITELOC":"Atlanta","SITESTATE":"NE","FREQ":"162.475","CALLSIGN":"WXL75","LAT":"40.384833","LON":"-99.458833","PWR":"1000","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"WNG549":{"ST":"NE","STATE":"Nebraska","COUNTY":"Saunders","SAME":"031155","SITENAME":"Columbus","SITELOC":"Platte County","SITESTATE":"NE","FREQ":"162.450","CALLSIGN":"WNG549","LAT":"41.4525","LON":"-97.253028","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"WXM20":{"ST":"NE","STATE":"Nebraska","COUNTY":"Seward","SAME":"031159","SITENAME":"Lincoln","SITELOC":"Lincoln","SITESTATE":"NE","FREQ":"162.475","CALLSIGN":"WXM20","LAT":"40.821444","LON":"-96.662139","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"KXI21":{"ST":"SD","STATE":"South Dakota","COUNTY":"Yankton","SAME":"046135","SITENAME":"Yankton","SITELOC":"Gavins Point Dam","SITESTATE":"NE","FREQ":"162.500","CALLSIGN":"KXI21","LAT":"42.842056","LON":"-97.484611","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WXL76":{"ST":"SD","STATE":"South Dakota","COUNTY":"Bennett","SAME":"046007","SITENAME":"Merriman","SITELOC":"Merriman","SITESTATE":"NE","FREQ":"162.400","CALLSIGN":"WXL76","LAT":"42.676944","LON":"-101.709722","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":""},"KPS502":{"ST":"NE","STATE":"Nebraska","COUNTY":"Thomas","SAME":"031171","SITENAME":"Mullen","SITELOC":"Mullen","SITESTATE":"NE","FREQ":"162.425","CALLSIGN":"KPS502","LAT":"41.986389","LON":"-101.039722","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":""},"WXN82":{"ST":"SD","STATE":"South Dakota","COUNTY":"Tripp","SAME":"046123","SITENAME":"Valentine","SITELOC":"Valentine","SITESTATE":"NE","FREQ":"162.450","CALLSIGN":"WXN82","LAT":"42.888611","LON":"-100.553333","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":"S"},"WXN61":{"ST":"NE","STATE":"Nebraska","COUNTY":"Kimball","SAME":"031105","SITENAME":"Sidney","SITELOC":"Sidney","SITESTATE":"NE","FREQ":"162.500","CALLSIGN":"WXN61","LAT":"41.184167","LON":"-103.193611","PWR":"1000","STATUS":"NORMAL","WFO":"Cheyenne|WY","REMARKS":""},"WXN72":{"ST":"NE","STATE":"Nebraska","COUNTY":"Sherman","SAME":"031163","SITENAME":"Merna","SITELOC":"Broken Bow","SITESTATE":"NE","FREQ":"162.500","CALLSIGN":"WXN72","LAT":"41.387222","LON":"-99.820833","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":""},"KWN62":{"ST":"NE","STATE":"Nebraska","COUNTY":"Wheeler","SAME":"031183","SITENAME":"Ord","SITELOC":"Ord","SITESTATE":"NE","FREQ":"162.525","CALLSIGN":"KWN62","LAT":"41.7144","LON":"-98.868778","PWR":"1000","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"WXK64":{"ST":"SD","STATE":"South Dakota","COUNTY":"Fall River","SAME":"046047","SITENAME":"Hot Springs","SITELOC":"Battle Mountain","SITESTATE":"SD","FREQ":"162.425","CALLSIGN":"WXK64","LAT":"43.455278","LON":"-103.445556","PWR":"300","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":""},"KGG99":{"ST":"NE","STATE":"Nebraska","COUNTY":"Phelps","SAME":"031137","SITENAME":"Lexington","SITELOC":"Lexington","SITESTATE":"NE","FREQ":"162.425","CALLSIGN":"KGG99","LAT":"40.695028","LON":"-99.817389","PWR":"300","STATUS":"NORMAL","WFO":"Hastings|NE","REMARKS":""},"KHA55":{"ST":"NE","STATE":"Nebraska","COUNTY":"Keith","SAME":"031101","SITENAME":"Oshkosh","SITELOC":"Oshkosh (Ag.)","SITESTATE":"NE","FREQ":"162.525","CALLSIGN":"KHA55","LAT":"41.340278","LON":"-102.399167","PWR":"1000","STATUS":"NORMAL","WFO":"North Platte|NE","REMARKS":"W"},"WNG524":{"ST":"NE","STATE":"Nebraska","COUNTY":"Red Willow","SAME":"031145","SITENAME":"Trenton","SITELOC":"Hitchcock County","SITESTATE":"NE","FREQ":"162.500","CALLSIGN":"WNG524","LAT":"40.241389","LON":"-101.044833","PWR":"300","STATUS":"NORMAL","WFO":"Goodland|KS","REMARKS":""},"KZZ69":{"ST":"NE","STATE":"Nebraska","COUNTY":"Saline","SAME":"031151","SITENAME":"Beatrice","SITELOC":"Ellis","SITESTATE":"NE","FREQ":"162.450","CALLSIGN":"KZZ69","LAT":"40.218583","LON":"-96.915694","PWR":"1000","STATUS":"NORMAL","WFO":"Omaha/Valley|NE","REMARKS":""},"WXJ40":{"ST":"NH","STATE":"New Hampshire","COUNTY":"Sullivan","SAME":"033019","SITENAME":"Concord","SITELOC":"Plausawa Hill","SITESTATE":"NH","FREQ":"162.400","CALLSIGN":"WXJ40","LAT":"43.219444","LON":"-71.440278","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":"EXTREME E"},"WNG546":{"ST":"VT","STATE":"Vermont","COUNTY":"Windsor","SAME":"050027","SITENAME":"Hanover","SITELOC":"Moose Mtn.","SITESTATE":"NH","FREQ":"162.525","CALLSIGN":"WNG546","LAT":"43.7092","LON":"-72.1542","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WNG545":{"ST":"VT","STATE":"Vermont","COUNTY":"Windsor","SAME":"050027","SITENAME":"Holderness","SITELOC":"Mt. Prospect","SITESTATE":"NH","FREQ":"162.550","CALLSIGN":"WNG545","LAT":"43.7628","LON":"-71.6494","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WNG544":{"ST":"VT","STATE":"Vermont","COUNTY":"Essex","SAME":"050009","SITENAME":"Clarksville","SITELOC":"Ben Young Hill","SITESTATE":"NH","FREQ":"162.400","CALLSIGN":"WNG544","LAT":"45.0219","LON":"-71.416938","PWR":"300","STATUS":"NORMAL","WFO":"Gray/Portland|ME","REMARKS":""},"WWG50":{"ST":"VT","STATE":"Vermont","COUNTY":"Washington","SAME":"050023","SITENAME":"St. Johnsbury","SITELOC":"Burke Mtn.","SITESTATE":"VT","FREQ":"162.425","CALLSIGN":"WWG50","LAT":"44.571111","LON":"-71.894167","PWR":"300","STATUS":"NORMAL","WFO":"Burlington|VT","REMARKS":""},"KHB38":{"ST":"NJ","STATE":"New Jersey","COUNTY":"Ocean","SAME":"034029","SITENAME":"Atlantic City","SITELOC":"Atlantic City","SITESTATE":"NJ","FREQ":"162.400","CALLSIGN":"KHB38","LAT":"39.37895","LON":"-74.447744","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":"CENTRAL/S"},"KZZ31":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Wayne","SAME":"042127","SITENAME":"Hardyston","SITELOC":"Rudeville","SITESTATE":"NJ","FREQ":"162.500","CALLSIGN":"KZZ31","LAT":"41.143611","LON":"-74.538056","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":""},"WXM60":{"ST":"NJ","STATE":"New Jersey","COUNTY":"Union","SAME":"034039","SITENAME":"Southard","SITELOC":"Howell Township/Lakewood","SITESTATE":"NJ","FREQ":"162.450","CALLSIGN":"WXM60","LAT":"40.139866","LON":"-74.224193","PWR":"300","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":""},"WXL39":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Schuylkill","SAME":"042107","SITENAME":"Allentown","SITELOC":"Allentown","SITESTATE":"PA","FREQ":"162.400","CALLSIGN":"WXL39","LAT":"40.565","LON":"-75.4406","PWR":"1000","STATUS":"NORMAL","WFO":"Philadelphia/Mt Holly|NJ","REMARKS":"Central/E"},"WXJ34":{"ST":"NM","STATE":"New Mexico","COUNTY":"Valencia","SAME":"035061","SITENAME":"Albuquerque","SITELOC":"Albuquerque","SITESTATE":"NM","FREQ":"162.400","CALLSIGN":"WXJ34","LAT":"35.065556","LON":"-106.787778","PWR":"100","STATUS":"NORMAL","WFO":"Albuquerque|NM","REMARKS":""},"WWG36":{"ST":"NM","STATE":"New Mexico","COUNTY":"Chaves","SAME":"035005","SITENAME":"Roswell","SITELOC":"Roswell","SITESTATE":"NM","FREQ":"162.450","CALLSIGN":"WWG36","LAT":"33.363056","LON":"-104.636389","PWR":"100","STATUS":"OUT OF SERVICE","WFO":"Albuquerque|NM","REMARKS":""},"WXJ38":{"ST":"NM","STATE":"New Mexico","COUNTY":"Torrance","SAME":"035057","SITENAME":"Ruidoso","SITELOC":"Sierra Blanca","SITESTATE":"NM","FREQ":"162.550","CALLSIGN":"WXJ38","LAT":"33.403889","LON":"-105.782222","PWR":"300","STATUS":"NORMAL","WFO":"Albuquerque|NM","REMARKS":""},"WXL90":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Cimarron","SAME":"040025","SITENAME":"Des Moines","SITELOC":"Sierra Grande","SITESTATE":"NM","FREQ":"162.550","CALLSIGN":"WXL90","LAT":"36.705556","LON":"-103.876667","PWR":"100","STATUS":"NORMAL","WFO":"Albuquerque|NM","REMARKS":"WEST"},"WXJ35":{"ST":"NM","STATE":"New Mexico","COUNTY":"Roosevelt","SAME":"035041","SITENAME":"Portales","SITELOC":"Portales","SITESTATE":"NM","FREQ":"162.475","CALLSIGN":"WXJ35","LAT":"34.252222","LON":"-103.239444","PWR":"300","STATUS":"NORMAL","WFO":"Albuquerque|NM","REMARKS":""},"WNG657":{"ST":"TX","STATE":"Texas","COUNTY":"Randall","SAME":"048381","SITENAME":"Summerfield","SITELOC":"Hereford","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"WNG657","LAT":"34.746944","LON":"-102.494167","PWR":"1000","STATUS":"NORMAL","WFO":"Lubbock|TX","REMARKS":""},"WXK25":{"ST":"TX","STATE":"Texas","COUNTY":"Hudspeth","SAME":"048229","SITENAME":"El Paso","SITELOC":"Ranger Peak","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK25","LAT":"31.805278","LON":"-106.483611","PWR":"300","STATUS":"NORMAL","WFO":"El Paso|TX","REMARKS":""},"WNG652":{"ST":"TX","STATE":"Texas","COUNTY":"Hudspeth","SAME":"048229","SITENAME":"El Paso Spanish","SITELOC":"El Paso Spanish","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WNG652","LAT":"31.765556","LON":"-106.4775","PWR":"300","STATUS":"NORMAL","WFO":"El Paso|TX","REMARKS":""},"WXL91":{"ST":"NM","STATE":"New Mexico","COUNTY":"Sierra","SAME":"035051","SITENAME":"Las Cruces","SITELOC":"Tortugas Mtn.","SITESTATE":"NM","FREQ":"162.400","CALLSIGN":"WXL91","LAT":"32.292556","LON":"-106.697528","PWR":"100","STATUS":"NORMAL","WFO":"El Paso|TX","REMARKS":""},"WXN24":{"ST":"NM","STATE":"New Mexico","COUNTY":"Eddy","SAME":"035015","SITENAME":"Artesia","SITELOC":"Artesia","SITESTATE":"NM","FREQ":"162.425","CALLSIGN":"WXN24","LAT":"32.800611","LON":"-104.198806","PWR":"100","STATUS":"OUT OF SERVICE","WFO":"Midland/Odessa|TX","REMARKS":""},"WWF37":{"ST":"NM","STATE":"New Mexico","COUNTY":"Lea","SAME":"035025","SITENAME":"Carlsbad","SITELOC":"Carlsbad","SITESTATE":"NM","FREQ":"162.475","CALLSIGN":"WWF37","LAT":"32.437806","LON":"-104.277278","PWR":"100","STATUS":"OUT OF SERVICE","WFO":"Midland/Odessa|TX","REMARKS":""},"WXJ36":{"ST":"NM","STATE":"New Mexico","COUNTY":"Lea","SAME":"035025","SITENAME":"Hobbs","SITELOC":"Maljamar","SITESTATE":"NM","FREQ":"162.400","CALLSIGN":"WXJ36","LAT":"32.704306","LON":"-103.566667","PWR":"100","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":""},"WZ2516":{"ST":"NM","STATE":"New Mexico","COUNTY":"Sierra","SAME":"035051","SITENAME":"Silver City","SITELOC":"Jack's Peak","SITESTATE":"NM","FREQ":"162.425","CALLSIGN":"WZ2516","LAT":"32.581944","LON":"-108.425306","PWR":"100","STATUS":"NORMAL","WFO":"El Paso|TX","REMARKS":""},"WNG562":{"ST":"TX","STATE":"Texas","COUNTY":"Yoakum","SAME":"048501","SITENAME":"Seminole","SITELOC":"Gaines County","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"WNG562","LAT":"32.707222","LON":"-102.624861","PWR":"1000","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":""},"WXJ33":{"ST":"NM","STATE":"New Mexico","COUNTY":"Torrance","SAME":"035057","SITENAME":"Santa Fe","SITELOC":"Tesuque Peak","SITESTATE":"NM","FREQ":"162.550","CALLSIGN":"WXJ33","LAT":"35.785556","LON":"-105.781944","PWR":"300","STATUS":"NORMAL","WFO":"Albuquerque|NM","REMARKS":""},"WXL36":{"ST":"NV","STATE":"Nevada","COUNTY":"Clark","SAME":"632003","SITENAME":"Las Vegas","SITELOC":"Boulder City","SITESTATE":"NV","FREQ":"162.550","CALLSIGN":"WXL36","LAT":"35.9969","LON":"-114.862778","PWR":"125","STATUS":"NORMAL","WFO":"Las Vegas|NV","REMARKS":"EAST"},"WXL28":{"ST":"NV","STATE":"Nevada","COUNTY":"Eureka","SAME":"032011","SITENAME":"Elko","SITELOC":"West Twin Peak","SITESTATE":"NV","FREQ":"162.550","CALLSIGN":"WXL28","LAT":"40.915278","LON":"-115.819167","PWR":"100","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":""},"WNG700":{"ST":"NV","STATE":"Nevada","COUNTY":"Elko","SAME":"032007","SITENAME":"Jackpot","SITELOC":"Jackpot","SITESTATE":"NV","FREQ":"162.500","CALLSIGN":"WNG700","LAT":"41.783611","LON":"-114.840278","PWR":"100","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":"NORTHEAST"},"WNG731":{"ST":"NV","STATE":"Nevada","COUNTY":"Elko","SAME":"032007","SITENAME":"Owyhee","SITELOC":"Owyhee","SITESTATE":"NV","FREQ":"162.450","CALLSIGN":"WNG731","LAT":"41.950833","LON":"-116.098333","PWR":"100","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":"NORTHWEST"},"KXI30":{"ST":"UT","STATE":"Utah","COUNTY":"Tooele","SAME":"049045","SITENAME":"Wendover","SITELOC":"Wendover Peak","SITESTATE":"UT","FREQ":"162.475","CALLSIGN":"KXI30","LAT":"40.754444","LON":"-114.019444","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"W AND CENTRAL"},"WZ2519":{"ST":"NV","STATE":"Nevada","COUNTY":"Nye","SAME":"032023","SITENAME":"Tonopah","SITELOC":"Brock Mtn","SITESTATE":"NV","FREQ":"162.400","CALLSIGN":"WZ2519","LAT":"38.051944","LON":"-117.225556","PWR":"150","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":""},"WWF81":{"ST":"NV","STATE":"Nevada","COUNTY":"White Pine","SAME":"032033","SITENAME":"Eureka","SITELOC":"Prospect Peak","SITESTATE":"NV","FREQ":"162.550","CALLSIGN":"WWF81","LAT":"39.449722","LON":"-115.9989","PWR":"100","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":"EAST"},"WXL29":{"ST":"NV","STATE":"Nevada","COUNTY":"Pershing","SAME":"032027","SITENAME":"Winnemucca","SITELOC":"Winnemucca Mtn.","SITESTATE":"NV","FREQ":"162.400","CALLSIGN":"WXL29","LAT":"41.011111","LON":"-117.7675","PWR":"300","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":""},"WZ2521":{"ST":"NV","STATE":"Nevada","COUNTY":"Lander","SAME":"032015","SITENAME":"Battle Mtn.","SITELOC":"Battle Mtn.","SITESTATE":"NV","FREQ":"162.425","CALLSIGN":"WZ2521","LAT":"40.4036","LON":"-116.8681","PWR":"150","STATUS":"OUT OF SERVICE","WFO":"Elko|NV","REMARKS":"ALL"},"WXL69":{"ST":"NV","STATE":"Nevada","COUNTY":"White Pine","SAME":"032033","SITENAME":"Ely","SITELOC":"Cave Mtn.","SITESTATE":"NV","FREQ":"162.400","CALLSIGN":"WXL69","LAT":"39.163611","LON":"-114.614167","PWR":"100","STATUS":"NORMAL","WFO":"Elko|NV","REMARKS":"SOUTHERN 2/3RDS"},"KEB98":{"ST":"NY","STATE":"New York","COUNTY":"Wyoming","SAME":"036121","SITENAME":"Buffalo","SITELOC":"North Boston","SITESTATE":"NY","FREQ":"162.550","CALLSIGN":"KEB98","LAT":"42.636944","LON":"-78.768056","PWR":"600","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":""},"WXN29":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Potter","SAME":"042105","SITENAME":"Call Hill","SITELOC":"Call Hill","SITESTATE":"NY","FREQ":"162.425","CALLSIGN":"WXN29","LAT":"42.211111","LON":"-77.689444","PWR":"300","STATUS":"OUT OF SERVICE","WFO":"Binghamton|NY","REMARKS":""},"WXL38":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Wayne","SAME":"042127","SITENAME":"Binghamton","SITELOC":"Binghamton","SITESTATE":"NY","FREQ":"162.475","CALLSIGN":"WXL38","LAT":"42.0611","LON":"-75.9456","PWR":"1000","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":"N"},"WXM31":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Tioga","SAME":"042117","SITENAME":"Elmira","SITELOC":"Hawley Hill","SITESTATE":"NY","FREQ":"162.400","CALLSIGN":"WXM31","LAT":"42.106111","LON":"-76.871111","PWR":"1000","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":"NE"},"WNG705":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Wayne","SAME":"042127","SITENAME":"Honesdale","SITELOC":"Wayne CO","SITESTATE":"PA","FREQ":"162.450","CALLSIGN":"WNG705","LAT":"41.572222","LON":"-75.191111","PWR":"300","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"WXN59":{"ST":"NY","STATE":"New York","COUNTY":"Yates","SAME":"036123","SITENAME":"Ithaca","SITELOC":"Ithaca","SITESTATE":"NY","FREQ":"162.500","CALLSIGN":"WXN59","LAT":"42.418611","LON":"-76.493889","PWR":"1000","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"KHC49":{"ST":"NY","STATE":"New York","COUNTY":"Otsego","SAME":"036077","SITENAME":"Norwich","SITELOC":"Barnes Hill","SITESTATE":"NY","FREQ":"162.525","CALLSIGN":"KHC49","LAT":"42.511389","LON":"-75.468056","PWR":"300","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"WWH34":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Wayne","SAME":"042127","SITENAME":"Walton","SITELOC":"Walton","SITESTATE":"NY","FREQ":"162.425","CALLSIGN":"WWH34","LAT":"42.1112","LON":"-75.1014","PWR":"300","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":"ALL"},"WWG32":{"ST":"NY","STATE":"New York","COUNTY":"Chautauqua","SAME":"036013","SITENAME":"Cattaraugus","SITELOC":"Great Valley","SITESTATE":"NY","FREQ":"162.425","CALLSIGN":"WWG32","LAT":"42.256667","LON":"-78.695","PWR":"100","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":""},"KHA53":{"ST":"NY","STATE":"New York","COUNTY":"Yates","SAME":"036123","SITENAME":"Rochester","SITELOC":"Fairport","SITESTATE":"NY","FREQ":"162.400","CALLSIGN":"KHA53","LAT":"43.036111","LON":"-77.423333","PWR":"500","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":"N 1/2"},"WXL31":{"ST":"NY","STATE":"New York","COUNTY":"Wayne","SAME":"036117","SITENAME":"Syracuse","SITELOC":"Makyes Rd.","SITESTATE":"NY","FREQ":"162.550","CALLSIGN":"WXL31","LAT":"42.966667","LON":"-76.200278","PWR":"1000","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"KEC58":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Warren","SAME":"042123","SITENAME":"Erie","SITELOC":"Erie","SITESTATE":"PA","FREQ":"162.400","CALLSIGN":"KEC58","LAT":"42.063972","LON":"-80.005444","PWR":"750","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":"NW"},"WNG541":{"ST":"NY","STATE":"New York","COUNTY":"Chautauqua","SAME":"036013","SITENAME":"Frewsburg","SITELOC":"Mayville","SITESTATE":"NY","FREQ":"162.525","CALLSIGN":"WNG541","LAT":"42.0467","LON":"-79.0903","PWR":"175","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":""},"WXN55":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Tioga","SAME":"042117","SITENAME":"Mt. Washington","SITELOC":"North Conway","SITESTATE":"NY","FREQ":"162.450","CALLSIGN":"WXN55","LAT":"42.355556","LON":"-77.266111","PWR":"300","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"WWH35":{"ST":"NY","STATE":"New York","COUNTY":"Schoharie","SAME":"036095","SITENAME":"Cooperstown","SITELOC":"Cornish Hill Rd.","SITESTATE":"NY","FREQ":"162.450","CALLSIGN":"WWH35","LAT":"42.678889","LON":"-74.899722","PWR":"100","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"WWF43":{"ST":"NY","STATE":"New York","COUNTY":"Ulster","SAME":"036111","SITENAME":"Stamford","SITELOC":"Stamford","SITESTATE":"NY","FREQ":"162.400","CALLSIGN":"WWF43","LAT":"42.398611","LON":"-74.589722","PWR":"300","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":"N"},"KIG60":{"ST":"VT","STATE":"Vermont","COUNTY":"Washington","SAME":"050023","SITENAME":"Burlington","SITELOC":"Mt. Mansfield","SITESTATE":"VT","FREQ":"162.400","CALLSIGN":"KIG60","LAT":"44.526667","LON":"-72.815833","PWR":"500","STATUS":"NORMAL","WFO":"Burlington|VT","REMARKS":""},"WXL43":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Wyoming","SAME":"042131","SITENAME":"Wilkes-Barre","SITELOC":"Penobscot Knob","SITESTATE":"PA","FREQ":"162.550","CALLSIGN":"WXL43","LAT":"41.182778","LON":"-75.873889","PWR":"750","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"KSC43":{"ST":"VT","STATE":"Vermont","COUNTY":"Rutland","SAME":"050021","SITENAME":"Gore Mtn.","SITELOC":"Gore Mtn.","SITESTATE":"NY","FREQ":"162.450","CALLSIGN":"KSC43","LAT":"43.672778","LON":"-74.048889","PWR":"300","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"KBS508":{"ST":"NY","STATE":"New York","COUNTY":"St. Lawrence","SAME":"036089","SITENAME":"White Hill","SITELOC":"Parishville","SITESTATE":"NY","FREQ":"162.525","CALLSIGN":"KBS508","LAT":"44.598333","LON":"-74.776944","PWR":"300","STATUS":"NORMAL","WFO":"Burlington|VT","REMARKS":""},"WXM45":{"ST":"NY","STATE":"New York","COUNTY":"Schoharie","SAME":"036095","SITENAME":"Middleville","SITELOC":"Herkimer County","SITESTATE":"NY","FREQ":"162.425","CALLSIGN":"WXM45","LAT":"43.1025","LON":"-74.938607","PWR":"300","STATUS":"NORMAL","WFO":"Albany|NY","REMARKS":""},"WXN68":{"ST":"NY","STATE":"New York","COUNTY":"St. Lawrence","SAME":"036089","SITENAME":"Watertown","SITELOC":"Miser Hill","SITESTATE":"NY","FREQ":"162.475","CALLSIGN":"WXN68","LAT":"43.961225","LON":"-75.8078","PWR":"100","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":""},"WNG539":{"ST":"NY","STATE":"New York","COUNTY":"Monroe","SAME":"036055","SITENAME":"Spencerport","SITELOC":"Spencerport","SITESTATE":"NY","FREQ":"162.525","CALLSIGN":"WNG539","LAT":"43.1431","LON":"-77.8497","PWR":"300","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":""},"WZ2536":{"ST":"NY","STATE":"New York","COUNTY":"Wayne","SAME":"036117","SITENAME":"Lyons","SITELOC":"Lyons","SITESTATE":"NY","FREQ":"162.475","CALLSIGN":"WZ2536","LAT":"43.0658","LON":"-77.0361","PWR":"250","STATUS":"NORMAL","WFO":"Buffalo|NY","REMARKS":"ALL"},"WXJ93":{"ST":"OH","STATE":"Ohio","COUNTY":"Wyandot","SAME":"039175","SITENAME":"Lima","SITELOC":"Cridersville","SITESTATE":"OH","FREQ":"162.400","CALLSIGN":"WXJ93","LAT":"40.634167","LON":"-84.208056","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"KDO94":{"ST":"OH","STATE":"Ohio","COUNTY":"Wayne","SAME":"039169","SITENAME":"Akron","SITELOC":"Akron","SITESTATE":"OH","FREQ":"162.400","CALLSIGN":"KDO94","LAT":"41.0644","LON":"-81.5833","PWR":"1000","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"WNG698":{"ST":"OH","STATE":"Ohio","COUNTY":"Medina","SAME":"039103","SITENAME":"Grafton","SITELOC":"Lorain County","SITESTATE":"OH","FREQ":"162.500","CALLSIGN":"WNG698","LAT":"41.271472","LON":"-82.022611","PWR":"300","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"WWG57":{"ST":"OH","STATE":"Ohio","COUNTY":"Wyandot","SAME":"039175","SITENAME":"Mansfield","SITELOC":"Butler","SITESTATE":"OH","FREQ":"162.450","CALLSIGN":"WWG57","LAT":"40.582861","LON":"-82.473611","PWR":"300","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"KHB97":{"ST":"OH","STATE":"Ohio","COUNTY":"Wyandot","SAME":"039175","SITENAME":"Sandusky","SITELOC":"Bellevue","SITESTATE":"OH","FREQ":"162.400","CALLSIGN":"KHB97","LAT":"41.238611","LON":"-82.837694","PWR":"1000","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":"NORTHEAST"},"KHB59":{"ST":"OH","STATE":"Ohio","COUNTY":"Summit","SAME":"039153","SITENAME":"Cleveland","SITELOC":"Chesterland","SITESTATE":"OH","FREQ":"162.550","CALLSIGN":"KHB59","LAT":"41.522778","LON":"-81.328611","PWR":"750","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"KZZ32":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Venango","SAME":"042121","SITENAME":"Meadville","SITELOC":"Meadville","SITESTATE":"PA","FREQ":"162.475","CALLSIGN":"KZZ32","LAT":"41.654389","LON":"-80.125944","PWR":"300","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"KZZ46":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wood","SAME":"054107","SITENAME":"Athens","SITELOC":"Elliottville","SITESTATE":"OH","FREQ":"162.425","CALLSIGN":"KZZ46","LAT":"39.30825","LON":"-82.118083","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"WXM70":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wood","SAME":"054107","SITENAME":"Garfield","SITELOC":"Milwood","SITESTATE":"WV","FREQ":"162.500","CALLSIGN":"WXM70","LAT":"38.97575","LON":"-81.532722","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"WWF35":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wetzel","SAME":"054103","SITENAME":"Bridgeport","SITELOC":"Bridgeport","SITESTATE":"OH","FREQ":"162.525","CALLSIGN":"WWF35","LAT":"40.061333","LON":"-80.757944","PWR":"1000","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"WXJ47":{"ST":"WV","STATE":"West Virginia","COUNTY":"Tyler","SAME":"054095","SITENAME":"High Hill","SITELOC":"High Hill","SITESTATE":"OH","FREQ":"162.475","CALLSIGN":"WXJ47","LAT":"39.836667","LON":"-81.770556","PWR":"1000","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"WNG735":{"ST":"OH","STATE":"Ohio","COUNTY":"Wayne","SAME":"039169","SITENAME":"New Philadelphia","SITELOC":"Tuscarawas County","SITESTATE":"OH","FREQ":"162.425","CALLSIGN":"WNG735","LAT":"40.435333","LON":"-81.507306","PWR":"300","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"WWG56":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Mercer","SAME":"042085","SITENAME":"Youngstown","SITELOC":"Youngstown","SITESTATE":"OH","FREQ":"162.500","CALLSIGN":"WWG56","LAT":"41.058889","LON":"-80.646111","PWR":"300","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"KIG86":{"ST":"OH","STATE":"Ohio","COUNTY":"Union","SAME":"039159","SITENAME":"Columbus","SITELOC":"Columbus","SITESTATE":"OH","FREQ":"162.550","CALLSIGN":"KIG86","LAT":"39.9631","LON":"-82.9994","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":"SE 1/2"},"KIH35":{"ST":"WV","STATE":"West Virginia","COUNTY":"Ohio","SAME":"054069","SITENAME":"Pittsburgh","SITELOC":"Pittsburgh","SITESTATE":"PA","FREQ":"162.550","CALLSIGN":"KIH35","LAT":"40.446556","LON":"-79.963806","PWR":"1000","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"KZZ47":{"ST":"OH","STATE":"Ohio","COUNTY":"Wyandot","SAME":"039175","SITENAME":"Carey","SITELOC":"Carey","SITESTATE":"OH","FREQ":"162.525","CALLSIGN":"KZZ47","LAT":"40.933222","LON":"-83.379944","PWR":"300","STATUS":"NORMAL","WFO":"Cleveland|OH","REMARKS":""},"KJY68":{"ST":"OH","STATE":"Ohio","COUNTY":"Vinton","SAME":"039163","SITENAME":"Chillicothe","SITELOC":"Ross County","SITESTATE":"OH","FREQ":"162.500","CALLSIGN":"KJY68","LAT":"39.329444","LON":"-82.802222","PWR":"300","STATUS":"NORMAL","WFO":"Wilmington|OH","REMARKS":""},"WNG734":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wood","SAME":"054107","SITENAME":"Marietta","SITELOC":"Washington County","SITESTATE":"OH","FREQ":"162.400","CALLSIGN":"WNG734","LAT":"39.435194","LON":"-81.453528","PWR":"300","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"WXL48":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Major","SAME":"040093","SITENAME":"Enid","SITELOC":"Drummond","SITESTATE":"OK","FREQ":"162.475","CALLSIGN":"WXL48","LAT":"36.287667","LON":"-98.03675","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"KJY77":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Pushmataha","SAME":"040127","SITENAME":"Antlers","SITELOC":"Antlers","SITESTATE":"OK","FREQ":"162.400","CALLSIGN":"KJY77","LAT":"34.224944","LON":"-95.625167","PWR":"300","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":"SOUTH AND WEST"},"KWN49":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Pontotoc","SAME":"040123","SITENAME":"Atoka","SITELOC":"Atoka","SITESTATE":"OK","FREQ":"162.500","CALLSIGN":"KWN49","LAT":"34.376639","LON":"-96.109278","PWR":"300","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WXL49":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Pushmataha","SAME":"040127","SITENAME":"McAlester","SITELOC":"McAlester","SITESTATE":"OK","FREQ":"162.475","CALLSIGN":"WXL49","LAT":"34.976528","LON":"-95.717028","PWR":"1000","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"KJY96":{"ST":"TX","STATE":"Texas","COUNTY":"Sherman","SAME":"048421","SITENAME":"Guymon","SITELOC":"Hooker","SITESTATE":"OK","FREQ":"162.500","CALLSIGN":"KJY96","LAT":"36.764889","LON":"-101.209361","PWR":"1000","STATUS":"NORMAL","WFO":"Amarillo|TX","REMARKS":""},"KJY88":{"ST":"TX","STATE":"Texas","COUNTY":"Roberts","SAME":"048393","SITENAME":"Perryton","SITELOC":"Perryton","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"KJY88","LAT":"36.418194","LON":"-100.802028","PWR":"1000","STATUS":"NORMAL","WFO":"Amarillo|TX","REMARKS":""},"WWG46":{"ST":"TX","STATE":"Texas","COUNTY":"Lipscomb","SAME":"048295","SITENAME":"Woodward","SITELOC":"Woodward","SITESTATE":"OK","FREQ":"162.500","CALLSIGN":"WWG46","LAT":"36.389139","LON":"-99.343639","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WXK87":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Washita","SAME":"040149","SITENAME":"Clinton","SITELOC":"Arapaho","SITESTATE":"OK","FREQ":"162.525","CALLSIGN":"WXK87","LAT":"35.582833","LON":"-98.989389","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WNG713":{"ST":"TX","STATE":"Texas","COUNTY":"Wheeler","SAME":"048483","SITENAME":"Miami","SITELOC":"Roberts County Area","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"WNG713","LAT":"35.626389","LON":"-100.550278","PWR":"1000","STATUS":"NORMAL","WFO":"Amarillo|TX","REMARKS":""},"WXK20":{"ST":"TX","STATE":"Texas","COUNTY":"Titus","SAME":"048449","SITENAME":"Paris","SITELOC":"Paris","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK20","LAT":"33.6164","LON":"-95.547111","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WXK22":{"ST":"TX","STATE":"Texas","COUNTY":"Grayson","SAME":"048181","SITENAME":"Sherman","SITELOC":"Sherman/Denison","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK22","LAT":"33.702833","LON":"-96.56825","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"KJY94":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Stephens","SAME":"040137","SITENAME":"Chickasha","SITELOC":"Chickasha","SITESTATE":"OK","FREQ":"162.450","CALLSIGN":"KJY94","LAT":"35.04675","LON":"-97.775722","PWR":"300","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WXK86":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Tillman","SAME":"040141","SITENAME":"Lawton","SITELOC":"Lawton","SITESTATE":"OK","FREQ":"162.550","CALLSIGN":"WXK86","LAT":"34.591902","LON":"-98.548877","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WXK85":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Pottawatomie","SAME":"040125","SITENAME":"Oklahoma City","SITELOC":"Oklahoma City","SITESTATE":"OK","FREQ":"162.400","CALLSIGN":"WXK85","LAT":"35.5681","LON":"-97.489111","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"KXI57":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Stephens","SAME":"040137","SITENAME":"Ardmore","SITELOC":"Davis","SITESTATE":"OK","FREQ":"162.525","CALLSIGN":"KXI57","LAT":"34.41625","LON":"-97.15","PWR":"300","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"KHA99":{"ST":"TX","STATE":"Texas","COUNTY":"Wise","SAME":"048497","SITENAME":"Muenster","SITELOC":"Muenster","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"KHA99","LAT":"33.650278","LON":"-97.339722","PWR":"300","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WNG632":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Wagoner","SAME":"040145","SITENAME":"Oktaha","SITELOC":"Oktaha","SITESTATE":"OK","FREQ":"162.525","CALLSIGN":"WNG632","LAT":"35.603556","LON":"-95.499306","PWR":"300","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"KIH27":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Washington","SAME":"040147","SITENAME":"Tulsa","SITELOC":"Coweta","SITESTATE":"OK","FREQ":"162.550","CALLSIGN":"KIH27","LAT":"36.021083","LON":"-95.656278","PWR":"500","STATUS":"NORMAL","WFO":"Tulsa|OK","REMARKS":""},"KJY95":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Seminole","SAME":"040133","SITENAME":"Wewoka","SITELOC":"Wewoka","SITESTATE":"OK","FREQ":"162.550","CALLSIGN":"KJY95","LAT":"35.095306","LON":"-96.545917","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WXK31":{"ST":"TX","STATE":"Texas","COUNTY":"Wilbarger","SAME":"048487","SITENAME":"Wichita Falls","SITELOC":"Wichita Falls","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK31","LAT":"33.881972","LON":"-98.601611","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WNG654":{"ST":"OK","STATE":"Oklahoma","COUNTY":"Payne","SAME":"040119","SITENAME":"Stillwater","SITELOC":"Stillwater","SITESTATE":"OK","FREQ":"162.500","CALLSIGN":"WNG654","LAT":"36.118083","LON":"-97.002","PWR":"1000","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"WWG97":{"ST":"TX","STATE":"Texas","COUNTY":"Wilbarger","SAME":"048487","SITENAME":"Altus","SITELOC":"Altus","SITESTATE":"OK","FREQ":"162.425","CALLSIGN":"WWG97","LAT":"34.511028","LON":"-99.333139","PWR":"300","STATUS":"NORMAL","WFO":"Norman|OK","REMARKS":""},"KJY97":{"ST":"TX","STATE":"Texas","COUNTY":"Motley","SAME":"048345","SITENAME":"Childress","SITELOC":"Childress","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"KJY97","LAT":"34.4389","LON":"-100.218722","PWR":"1000","STATUS":"NORMAL","WFO":"Lubbock|TX","REMARKS":""},"KEC42":{"ST":"OR","STATE":"Oregon","COUNTY":"Linn","SAME":"041043","SITENAME":"Eugene","SITELOC":"Blanton Heights","SITESTATE":"OR","FREQ":"162.400","CALLSIGN":"KEC42","LAT":"44.002472","LON":"-123.116278","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"WXL96":{"ST":"OR","STATE":"Oregon","COUNTY":"Yamhill","SAME":"041071","SITENAME":"Salem","SITELOC":"Prospect Hill","SITESTATE":"OR","FREQ":"162.475","CALLSIGN":"WXL96","LAT":"44.846889","LON":"-123.110917","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"KIG98":{"ST":"WA","STATE":"Washington","COUNTY":"Skamania","SAME":"053059","SITENAME":"Portland","SITELOC":"Goat Mtn.","SITESTATE":"OR","FREQ":"162.550","CALLSIGN":"KIG98","LAT":"45.131167","LON":"-122.291472","PWR":"330","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"KEC91":{"ST":"WA","STATE":"Washington","COUNTY":"Wahkiakum","SAME":"053069","SITENAME":"Astoria","SITELOC":"Naselle Ridge","SITESTATE":"WA","FREQ":"162.400","CALLSIGN":"KEC91","LAT":"46.4214","LON":"-123.796056","PWR":"300","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"WWF94":{"ST":"OR","STATE":"Oregon","COUNTY":"Tillamook","SAME":"041057","SITENAME":"Neahkahnie","SITELOC":"Neahkahnie Mtn.","SITESTATE":"OR","FREQ":"162.425","CALLSIGN":"WWF94","LAT":"45.743889","LON":"-123.940778","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":"North"},"WNG604":{"ST":"WA","STATE":"Washington","COUNTY":"Cowlitz","SAME":"053015","SITENAME":"Davis Peak","SITELOC":"Longview","SITESTATE":"WA","FREQ":"162.525","CALLSIGN":"WNG604","LAT":"45.9933","LON":"-122.5964","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"KIH32":{"ST":"OR","STATE":"Oregon","COUNTY":"Coos","SAME":"041011","SITENAME":"Coos Bay","SITELOC":"Noah Butte","SITESTATE":"OR","FREQ":"162.400","CALLSIGN":"KIH32","LAT":"43.390556","LON":"-124.13","PWR":"330","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":""},"WWF80":{"ST":"OR","STATE":"Oregon","COUNTY":"Jefferson","SAME":"041031","SITENAME":"Bend/Redmond","SITELOC":"Powell Butte","SITESTATE":"OR","FREQ":"162.500","CALLSIGN":"WWF80","LAT":"44.197528","LON":"-120.977861","PWR":"300","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WNG596":{"ST":"OR","STATE":"Oregon","COUNTY":"Curry","SAME":"041015","SITENAME":"Cape Blanco","SITELOC":"Port Orford","SITESTATE":"OR","FREQ":"162.425","CALLSIGN":"WNG596","LAT":"42.7447","LON":"-124.5033","PWR":"300","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":""},"WZ2509":{"ST":"OR","STATE":"Oregon","COUNTY":"Douglas","SAME":"041019","SITENAME":"Reedsport","SITELOC":"Winchester Hill","SITESTATE":"OR","FREQ":"162.525","CALLSIGN":"WZ2509","LAT":"43.656944","LON":"-124.187222","PWR":"100","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":""},"WXL98":{"ST":"OR","STATE":"Oregon","COUNTY":"Douglas","SAME":"041019","SITENAME":"Roseburg","SITELOC":"Dodson Mtn.","SITESTATE":"OR","FREQ":"162.550","CALLSIGN":"WXL98","LAT":"43.119167","LON":"-123.242778","PWR":"100","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":""},"WNG559":{"ST":"OR","STATE":"Oregon","COUNTY":"Wheeler","SAME":"041069","SITENAME":"Fossil","SITELOC":"Fossil","SITESTATE":"OR","FREQ":"162.550","CALLSIGN":"WNG559","LAT":"44.960111","LON":"-119.951722","PWR":"300","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WNG560":{"ST":"OR","STATE":"Oregon","COUNTY":"Grant","SAME":"041023","SITENAME":"John Day","SITELOC":"Fall Mtn.","SITESTATE":"OR","FREQ":"162.500","CALLSIGN":"WNG560","LAT":"44.293889","LON":"-119.042222","PWR":"100","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"KHB30":{"ST":"OR","STATE":"Oregon","COUNTY":"Harney","SAME":"041025","SITENAME":"Burns Butte","SITELOC":"Harney","SITESTATE":"OR","FREQ":"162.475","CALLSIGN":"KHB30","LAT":"43.572639","LON":"-119.131528","PWR":"300","STATUS":"NORMAL","WFO":"Boise|ID","REMARKS":"N"},"WXM34":{"ST":"WA","STATE":"Washington","COUNTY":"Skamania","SAME":"053059","SITENAME":"The Dalles","SITELOC":"Columbia Gorge","SITESTATE":"OR","FREQ":"162.400","CALLSIGN":"WXM34","LAT":"45.712083","LON":"-121.113889","PWR":"300","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":"South"},"WXL85":{"ST":"OR","STATE":"Oregon","COUNTY":"Josephine","SAME":"041033","SITENAME":"Medford","SITELOC":"Nugget Butte","SITESTATE":"OR","FREQ":"162.400","CALLSIGN":"WXL85","LAT":"42.42794","LON":"-123.002217","PWR":"500","STATUS":"NORMAL","WFO":"Medford|OR","REMARKS":"EASTERN"},"WNG674":{"ST":"OR","STATE":"Oregon","COUNTY":"Lincoln","SAME":"041041","SITENAME":"Florence","SITELOC":"Herman Peak","SITESTATE":"OR","FREQ":"162.500","CALLSIGN":"WNG674","LAT":"44.124278","LON":"-124.013056","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":"South"},"KIH33":{"ST":"OR","STATE":"Oregon","COUNTY":"Lincoln","SAME":"041041","SITENAME":"Newport","SITELOC":"Otter Rock","SITESTATE":"OR","FREQ":"162.550","CALLSIGN":"KIH33","LAT":"44.756111","LON":"-124.049722","PWR":"500","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"WNG697":{"ST":"OR","STATE":"Oregon","COUNTY":"Tillamook","SAME":"041057","SITENAME":"Mt Hebo","SITELOC":"Tillamook Hospital","SITESTATE":"OR","FREQ":"162.525","CALLSIGN":"WNG697","LAT":"45.207889","LON":"-123.760111","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"WWH28":{"ST":"OR","STATE":"Oregon","COUNTY":"Morrow","SAME":"041049","SITENAME":"Heppner","SITELOC":"Robinson Hill","SITESTATE":"OR","FREQ":"162.425","CALLSIGN":"WWH28","LAT":"45.350333","LON":"-119.509722","PWR":"100","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WWH27":{"ST":"OR","STATE":"Oregon","COUNTY":"Umatilla","SAME":"041059","SITENAME":"Plymouth","SITELOC":"Sillusi Butte","SITESTATE":"WA","FREQ":"162.425","CALLSIGN":"WWH27","LAT":"45.980333","LON":"-119.295861","PWR":"100","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WWF95":{"ST":"OR","STATE":"Oregon","COUNTY":"Tillamook","SAME":"041057","SITENAME":"Tillamook","SITELOC":"Cape Mears","SITESTATE":"OR","FREQ":"162.475","CALLSIGN":"WWF95","LAT":"45.466139","LON":"-123.920917","PWR":"100","STATUS":"NORMAL","WFO":"Portland|OR","REMARKS":""},"WZ2522":{"ST":"OR","STATE":"Oregon","COUNTY":"Umatilla","SAME":"041059","SITENAME":"Carney Butte","SITELOC":"Carney Butte","SITESTATE":"OR","FREQ":"162.475","CALLSIGN":"WZ2522","LAT":"45.281389","LON":"-118.948611","PWR":"100","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WXL95":{"ST":"WA","STATE":"Washington","COUNTY":"Walla Walla","SAME":"053071","SITENAME":"Spout Springs","SITELOC":"Spout Springs","SITESTATE":"OR","FREQ":"162.400","CALLSIGN":"WXL95","LAT":"45.747009","LON":"-118.03772","PWR":"330","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WXL40":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"York","SAME":"042133","SITENAME":"Harrisburg","SITELOC":"Blue Mtn.","SITESTATE":"PA","FREQ":"162.550","CALLSIGN":"WXL40","LAT":"40.345833","LON":"-76.868333","PWR":"1000","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WWG53":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Venango","SAME":"042121","SITENAME":"Parker","SITELOC":"Parker","SITESTATE":"PA","FREQ":"162.425","CALLSIGN":"WWG53","LAT":"41.139861","LON":"-79.754028","PWR":"1000","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"KZZ42":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Jefferson","SAME":"042065","SITENAME":"Reynoldsville","SITELOC":"Reynoldsville","SITESTATE":"PA","FREQ":"162.500","CALLSIGN":"KZZ42","LAT":"41.0719","LON":"-78.9392","PWR":"300","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"WNG589":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Huntingdon","SAME":"042061","SITENAME":"Altoona","SITELOC":"Frankstown","SITESTATE":"PA","FREQ":"162.425","CALLSIGN":"WNG589","LAT":"40.488333","LON":"-78.353611","PWR":"300","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":"WESTERN"},"WWG52":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Mifflin","SAME":"042087","SITENAME":"Huntingdon","SITELOC":"Three Springs","SITESTATE":"PA","FREQ":"162.525","CALLSIGN":"WWG52","LAT":"40.293056","LON":"-77.966667","PWR":"1000","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WXM33":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Westmoreland","SAME":"042129","SITENAME":"Johnstown","SITELOC":"Laurel Hill","SITESTATE":"PA","FREQ":"162.400","CALLSIGN":"WXM33","LAT":"40.371389","LON":"-78.982778","PWR":"250","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":"EASTERN"},"WXM95":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Bradford","SAME":"042015","SITENAME":"Towanda","SITELOC":"Troy","SITESTATE":"PA","FREQ":"162.525","CALLSIGN":"WXM95","LAT":"41.810556","LON":"-76.716944","PWR":"500","STATUS":"NORMAL","WFO":"Binghamton|NY","REMARKS":""},"WXL52":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Jefferson","SAME":"042065","SITENAME":"Clearfield","SITELOC":"Clearfield","SITESTATE":"PA","FREQ":"162.550","CALLSIGN":"WXL52","LAT":"41.1225","LON":"-78.4411","PWR":"500","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WXM59":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Mifflin","SAME":"042087","SITENAME":"State College","SITELOC":"Little Flat Mtn.","SITESTATE":"PA","FREQ":"162.475","CALLSIGN":"WXM59","LAT":"40.751944","LON":"-77.755556","PWR":"100","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WXL55":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Union","SAME":"042119","SITENAME":"Williamsport","SITELOC":"Montoursvil","SITESTATE":"PA","FREQ":"162.400","CALLSIGN":"WXL55","LAT":"41.189167","LON":"-76.981389","PWR":"1000","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WWG51":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Warren","SAME":"042123","SITENAME":"Warren","SITELOC":"Youngsville","SITESTATE":"PA","FREQ":"162.450","CALLSIGN":"WWG51","LAT":"41.741667","LON":"-79.258333","PWR":"1000","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"KWN35":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wetzel","SAME":"054103","SITENAME":"Morgantown","SITELOC":"Morgantown","SITESTATE":"WV","FREQ":"162.475","CALLSIGN":"KWN35","LAT":"39.659778","LON":"-79.948","PWR":"300","STATUS":"NORMAL","WFO":"Pittsburgh|PA","REMARKS":""},"WNG591":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Potter","SAME":"042105","SITENAME":"Coudersport","SITELOC":"Coudersport","SITESTATE":"PA","FREQ":"162.500","CALLSIGN":"WNG591","LAT":"41.753056","LON":"-78.000833","PWR":"600","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WXM94":{"ST":"PA","STATE":"Pennsylvania","COUNTY":"Tioga","SAME":"042117","SITENAME":"Wellsboro","SITELOC":"Wellsboro","SITESTATE":"PA","FREQ":"162.475","CALLSIGN":"WXM94","LAT":"41.737102","LON":"-77.363668","PWR":"1000","STATUS":"NORMAL","WFO":"State College|PA","REMARKS":""},"WXJ68":{"ST":"PR","STATE":"Puerto Rico","COUNTY":"Yauco","SAME":"072153","SITENAME":"Maricao","SITELOC":"Monte Del Estado","SITESTATE":"PR","FREQ":"162.550","CALLSIGN":"WXJ68","LAT":"18.1481","LON":"-66.9831","PWR":"1000","STATUS":"NORMAL","WFO":"San Juan|PR","REMARKS":"NOT EAST"},"WXJ69":{"ST":"PR","STATE":"Puerto Rico","COUNTY":"Yabucoa","SAME":"072151","SITENAME":"San Juan","SITELOC":"Aguas Buenas","SITESTATE":"PR","FREQ":"162.400","CALLSIGN":"WXJ69","LAT":"18.265","LON":"-66.085","PWR":"1000","STATUS":"NORMAL","WFO":"San Juan|PR","REMARKS":"ALL"},"WXJ20":{"ST":"SC","STATE":"South Carolina","COUNTY":"Sumter","SAME":"045085","SITENAME":"Columbia","SITELOC":"West Columbia","SITESTATE":"SC","FREQ":"162.400","CALLSIGN":"WXJ20","LAT":"34.118611","LON":"-80.936667","PWR":"1000","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"KHA35":{"ST":"SC","STATE":"South Carolina","COUNTY":"Sumter","SAME":"045085","SITENAME":"Orangeburg","SITELOC":"Orangeburg","SITESTATE":"SC","FREQ":"162.525","CALLSIGN":"KHA35","LAT":"33.543056","LON":"-80.824167","PWR":"300","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"KHB29":{"ST":"SC","STATE":"South Carolina","COUNTY":"Williamsburg","SAME":"045089","SITENAME":"Charleston","SITELOC":"Awendaw","SITESTATE":"SC","FREQ":"162.550","CALLSIGN":"KHB29","LAT":"32.9244","LON":"-79.699444","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|SC","REMARKS":"S"},"WXM93":{"ST":"SC","STATE":"South Carolina","COUNTY":"Williamsburg","SAME":"045089","SITENAME":"Cross","SITELOC":"Cross","SITESTATE":"SC","FREQ":"162.475","CALLSIGN":"WXM93","LAT":"33.3686","LON":"-80.116434","PWR":"100","STATUS":"NORMAL","WFO":"Charleston|SC","REMARKS":"NW"},"WXJ22":{"ST":"SC","STATE":"South Carolina","COUNTY":"Williamsburg","SAME":"045089","SITENAME":"Florence","SITELOC":"Pockett Rd.","SITESTATE":"SC","FREQ":"162.550","CALLSIGN":"WXJ22","LAT":"34.279167","LON":"-79.743333","PWR":"1000","STATUS":"NORMAL","WFO":"Wilmington|NC","REMARKS":""},"WWG77":{"ST":"SC","STATE":"South Carolina","COUNTY":"Sumter","SAME":"045085","SITENAME":"Sumter","SITELOC":"Sumter","SITESTATE":"SC","FREQ":"162.425","CALLSIGN":"WWG77","LAT":"33.881111","LON":"-80.270556","PWR":"300","STATUS":"NORMAL","WFO":"Columbia|SC","REMARKS":""},"WNG628":{"ST":"SC","STATE":"South Carolina","COUNTY":"Williamsburg","SAME":"045089","SITENAME":"Georgetown","SITELOC":"Georgetown","SITESTATE":"SC","FREQ":"162.500","CALLSIGN":"WNG628","LAT":"33.444722","LON":"-79.300833","PWR":"300","STATUS":"NORMAL","WFO":"Wilmington|NC","REMARKS":""},"WWH36":{"ST":"SD","STATE":"South Dakota","COUNTY":"Sanborn","SAME":"046111","SITENAME":"Mitchell","SITELOC":"Mitchell","SITESTATE":"SD","FREQ":"162.450","CALLSIGN":"WWH36","LAT":"43.697917","LON":"-98.044222","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"WXM27":{"ST":"SD","STATE":"South Dakota","COUNTY":"Spink","SAME":"046115","SITENAME":"Wessington","SITELOC":"Wessington","SITESTATE":"SD","FREQ":"162.550","CALLSIGN":"WXM27","LAT":"44.3997","LON":"-98.8011","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":"S 1/2"},"KZZ59":{"ST":"SD","STATE":"South Dakota","COUNTY":"Oglala Lakota","SAME":"046102","SITENAME":"Porcupine","SITELOC":"Porcupine Butte","SITESTATE":"SD","FREQ":"162.500","CALLSIGN":"KZZ59","LAT":"43.178889","LON":"-102.324444","PWR":"1000","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":"ALL"},"KXI71":{"ST":"SD","STATE":"South Dakota","COUNTY":"Miner","SAME":"046097","SITENAME":"Arlington","SITELOC":"Arlington","SITESTATE":"SD","FREQ":"162.525","CALLSIGN":"KXI71","LAT":"44.355278","LON":"-97.123889","PWR":"1000","STATUS":"NORMAL","WFO":"Sioux Falls|SD","REMARKS":""},"KZZ60":{"ST":"SD","STATE":"South Dakota","COUNTY":"Tripp","SAME":"046123","SITENAME":"Reliance","SITELOC":"Medicine Butte","SITESTATE":"SD","FREQ":"162.525","CALLSIGN":"KZZ60","LAT":"43.965833","LON":"-99.603333","PWR":"1000","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":""},"WXM26":{"ST":"SD","STATE":"South Dakota","COUNTY":"Sully","SAME":"046119","SITENAME":"Pierre","SITELOC":"Presho Tower","SITESTATE":"SD","FREQ":"162.400","CALLSIGN":"WXM26","LAT":"44.423333","LON":"-100.354167","PWR":"700","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":""},"WNG551":{"ST":"SD","STATE":"South Dakota","COUNTY":"Ziebach","SAME":"046137","SITENAME":"Firesteel","SITELOC":"Standing Rock","SITESTATE":"SD","FREQ":"162.425","CALLSIGN":"WNG551","LAT":"45.421111","LON":"-101.285833","PWR":"1000","STATUS":"NORMAL","WFO":"Aberdeen|SD","REMARKS":""},"WNG661":{"ST":"WY","STATE":"Wyoming","COUNTY":"Weston","SAME":"056045","SITENAME":"Newcastle","SITELOC":"Newcastle","SITESTATE":"WY","FREQ":"162.475","CALLSIGN":"WNG661","LAT":"43.8325","LON":"-104.218889","PWR":"300","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":"W"},"WXM63":{"ST":"SD","STATE":"South Dakota","COUNTY":"Pennington","SAME":"046103","SITENAME":"Rapid City","SITELOC":"Cabot Hill","SITESTATE":"SD","FREQ":"162.550","CALLSIGN":"WXM63","LAT":"44.1144","LON":"-103.2433","PWR":"1000","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":"ALL"},"KXI59":{"ST":"SD","STATE":"South Dakota","COUNTY":"Pennington","SAME":"646103","SITENAME":"Philip","SITELOC":"Philip","SITESTATE":"SD","FREQ":"162.450","CALLSIGN":"KXI59","LAT":"43.981111","LON":"-101.642778","PWR":"1000","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":"EAST"},"WNG558":{"ST":"SD","STATE":"South Dakota","COUNTY":"Todd","SAME":"046121","SITENAME":"White River","SITELOC":"White River","SITESTATE":"SD","FREQ":"162.550","CALLSIGN":"WNG558","LAT":"43.576389","LON":"-100.743333","PWR":"1000","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":""},"WNG557":{"ST":"SD","STATE":"South Dakota","COUNTY":"Ziebach","SAME":"046137","SITENAME":"Faith","SITELOC":"Faith","SITESTATE":"SD","FREQ":"162.475","CALLSIGN":"WNG557","LAT":"45.053889","LON":"-102.263056","PWR":"1000","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":""},"WXK46":{"ST":"TN","STATE":"Tennessee","COUNTY":"Union","SAME":"047173","SITENAME":"Knoxville","SITELOC":"Sharps Ridge","SITESTATE":"TN","FREQ":"162.475","CALLSIGN":"WXK46","LAT":"35.999278","LON":"-83.949639","PWR":"1000","STATUS":"OUT OF SERVICE","WFO":"Morristown|TN","REMARKS":""},"WNG732":{"ST":"TN","STATE":"Tennessee","COUNTY":"Union","SAME":"047173","SITENAME":"La Follette","SITELOC":"Cross Mountain/Briceville","SITESTATE":"TN","FREQ":"162.450","CALLSIGN":"WNG732","LAT":"36.1983","LON":"-84.231111","PWR":"300","STATUS":"NORMAL","WFO":"Morristown|TN","REMARKS":""},"WXK63":{"ST":"TN","STATE":"Tennessee","COUNTY":"Wilson","SAME":"047189","SITENAME":"Shelbyville","SITELOC":"Beech Grove","SITESTATE":"TN","FREQ":"162.475","CALLSIGN":"WXK63","LAT":"35.7025","LON":"-86.195833","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"KWN52":{"ST":"TN","STATE":"Tennessee","COUNTY":"Wayne","SAME":"047181","SITENAME":"Lobelville","SITELOC":"Lobelville","SITESTATE":"TN","FREQ":"162.525","CALLSIGN":"KWN52","LAT":"35.7658","LON":"-87.8317","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WXK62":{"ST":"TN","STATE":"Tennessee","COUNTY":"Stewart","SAME":"047161","SITENAME":"Waverly","SITELOC":"McEwen","SITESTATE":"TN","FREQ":"162.400","CALLSIGN":"WXK62","LAT":"36.110556","LON":"-87.667222","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WNG629":{"ST":"TN","STATE":"Tennessee","COUNTY":"White","SAME":"047185","SITENAME":"Spencer","SITELOC":"Hollow Rock","SITESTATE":"TN","FREQ":"162.450","CALLSIGN":"WNG629","LAT":"35.748917","LON":"-85.46725","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WXN74":{"ST":"TN","STATE":"Tennessee","COUNTY":"Wilson","SAME":"047189","SITENAME":"Hickman","SITELOC":"Hickman","SITESTATE":"TN","FREQ":"162.500","CALLSIGN":"WXN74","LAT":"36.1447","LON":"-85.9111","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WXK60":{"ST":"TN","STATE":"Tennessee","COUNTY":"Weakley","SAME":"047183","SITENAME":"Jackson","SITELOC":"Norton Hill","SITESTATE":"TN","FREQ":"162.550","CALLSIGN":"WXK60","LAT":"35.529694","LON":"-88.777083","PWR":"1000","STATUS":"NORMAL","WFO":"Memphis|TN","REMARKS":""},"KIG79":{"ST":"TN","STATE":"Tennessee","COUNTY":"Wilson","SAME":"047189","SITENAME":"Nashville","SITELOC":"Nashville","SITESTATE":"TN","FREQ":"162.550","CALLSIGN":"KIG79","LAT":"36.164083","LON":"-86.78475","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WXK61":{"ST":"TN","STATE":"Tennessee","COUNTY":"White","SAME":"047185","SITENAME":"Cookeville","SITELOC":"Anderson","SITESTATE":"TN","FREQ":"162.400","CALLSIGN":"WXK61","LAT":"36.171333","LON":"-85.231278","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"WWF84":{"ST":"TN","STATE":"Tennessee","COUNTY":"Williamson","SAME":"047187","SITENAME":"Lawrenceburg","SITELOC":"Flanigan Hill","SITESTATE":"TN","FREQ":"162.425","CALLSIGN":"WWF84","LAT":"35.459186","LON":"-87.12856","PWR":"1000","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"KWN53":{"ST":"TN","STATE":"Tennessee","COUNTY":"Maury","SAME":"047119","SITENAME":"Centerville","SITELOC":"Hickman County","SITESTATE":"TN","FREQ":"162.450","CALLSIGN":"KWN53","LAT":"35.736639","LON":"-87.373806","PWR":"300","STATUS":"NORMAL","WFO":"Nashville|TN","REMARKS":""},"KXI87":{"ST":"TX","STATE":"Texas","COUNTY":"Van Zandt","SAME":"048467","SITENAME":"Corsicana","SITELOC":"Corsicana","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"KXI87","LAT":"32.076444","LON":"-96.490889","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"KWN34":{"ST":"TX","STATE":"Texas","COUNTY":"Navarro","SAME":"048349","SITENAME":"Palestine","SITELOC":"Palestine","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"KWN34","LAT":"31.717806","LON":"-95.649667","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WXK36":{"ST":"TX","STATE":"Texas","COUNTY":"Wood","SAME":"048499","SITENAME":"Tyler","SITELOC":"Lindale","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK36","LAT":"32.4856","LON":"-95.4831","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"WXK32":{"ST":"TX","STATE":"Texas","COUNTY":"Winkler","SAME":"048495","SITENAME":"Midland/Odessa","SITELOC":"Odessa","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"WXK32","LAT":"31.845222","LON":"-102.470056","PWR":"1000","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":""},"WXK23":{"ST":"TX","STATE":"Texas","COUNTY":"Tyler","SAME":"048457","SITENAME":"Lufkin","SITELOC":"Lufkin","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK23","LAT":"31.296111","LON":"-94.714167","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"KHB41":{"ST":"TX","STATE":"Texas","COUNTY":"San Patricio","SAME":"048409","SITENAME":"Corpus Christi","SITELOC":"Corpus Christi","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"KHB41","LAT":"27.7958","LON":"-97.397222","PWR":"1000","STATUS":"NORMAL","WFO":"Corpus Christi|TX","REMARKS":""},"WXL26":{"ST":"TX","STATE":"Texas","COUNTY":"Jackson","SAME":"048239","SITENAME":"Port O'Connor","SITELOC":"Port O'Connor","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXL26","LAT":"28.438472","LON":"-96.448778","PWR":"100","STATUS":"NORMAL","WFO":"Corpus Christi|TX","REMARKS":""},"WNG722":{"ST":"TX","STATE":"Texas","COUNTY":"Young","SAME":"048503","SITENAME":"Throckmorton","SITELOC":"Throckmorton","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"WNG722","LAT":"33.158611","LON":"-99.175","PWR":"1000","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"WXK38":{"ST":"TX","STATE":"Texas","COUNTY":"Randall","SAME":"048381","SITENAME":"Amarillo","SITELOC":"Amarillo","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK38","LAT":"35.374889","LON":"-101.882611","PWR":"1000","STATUS":"NORMAL","WFO":"Amarillo|TX","REMARKS":""},"WXK67":{"ST":"TX","STATE":"Texas","COUNTY":"Wilson","SAME":"048493","SITENAME":"San Antonio","SITELOC":"San Antonio","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK67","LAT":"29.685389","LON":"-98.449611","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WXK30":{"ST":"TX","STATE":"Texas","COUNTY":"Washington","SAME":"048477","SITENAME":"Bryan","SITELOC":"College Station","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK30","LAT":"30.6431","LON":"-96.3314","PWR":"1000","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"WWG55":{"ST":"TX","STATE":"Texas","COUNTY":"Washington","SAME":"048477","SITENAME":"La Grange","SITELOC":"Rutersville","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"WWG55","LAT":"29.951306","LON":"-96.774389","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"KJY78":{"ST":"TX","STATE":"Texas","COUNTY":"Wharton","SAME":"048481","SITENAME":"New Taiton","SITELOC":"El Campo","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"KJY78","LAT":"29.313889","LON":"-96.334444","PWR":"1000","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"WWF90":{"ST":"TX","STATE":"Texas","COUNTY":"Kerr","SAME":"048265","SITENAME":"Kerrville","SITELOC":"Ingram","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"WWF90","LAT":"30.009861","LON":"-99.262778","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WXK27":{"ST":"TX","STATE":"Texas","COUNTY":"Williamson","SAME":"048491","SITENAME":"Austin","SITELOC":"Austin","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"WXK27","LAT":"30.3219","LON":"-97.8033","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WNG696":{"ST":"TX","STATE":"Texas","COUNTY":"McMullen","SAME":"048311","SITENAME":"Three Rivers","SITELOC":"George West (AG)","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"WNG696","LAT":"28.335","LON":"-98.171389","PWR":"1000","STATUS":"NORMAL","WFO":"Corpus Christi|TX","REMARKS":""},"WNG649":{"ST":"TX","STATE":"Texas","COUNTY":"Williamson","SAME":"048491","SITENAME":"Milano","SITELOC":"Milano","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WNG649","LAT":"30.725833","LON":"-96.808611","PWR":"300","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WXK35":{"ST":"TX","STATE":"Texas","COUNTY":"Robertson","SAME":"048395","SITENAME":"Waco","SITELOC":"Moody","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK35","LAT":"31.314833","LON":"-97.326972","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WWF91":{"ST":"TX","STATE":"Texas","COUNTY":"Mason","SAME":"048319","SITENAME":"Llano","SITELOC":"Fowler Hill","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"WWF91","LAT":"30.599111","LON":"-98.624389","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WXK37":{"ST":"TX","STATE":"Texas","COUNTY":"Scurry","SAME":"048415","SITENAME":"Big Spring","SITELOC":"Big Spring","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK37","LAT":"32.254194","LON":"-101.445917","PWR":"1000","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":""},"KEC56":{"ST":"TX","STATE":"Texas","COUNTY":"Tarrant","SAME":"048439","SITENAME":"Dallas","SITELOC":"Dallas","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"KEC56","LAT":"32.901278","LON":"-96.6872","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"KEC55":{"ST":"TX","STATE":"Texas","COUNTY":"Wise","SAME":"048497","SITENAME":"Fort Worth","SITELOC":"Crowley","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"KEC55","LAT":"32.536694","LON":"-97.413","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"KWN33":{"ST":"TX","STATE":"Texas","COUNTY":"Somervell","SAME":"048425","SITENAME":"Stephenville","SITELOC":"Dublin","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"KWN33","LAT":"32.1283","LON":"-98.303333","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WWG40":{"ST":"TX","STATE":"Texas","COUNTY":"Wharton","SAME":"048481","SITENAME":"Bay City","SITELOC":"Bay City","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"WWG40","LAT":"28.980278","LON":"-95.999722","PWR":"1000","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"KHB40":{"ST":"TX","STATE":"Texas","COUNTY":"Harris","SAME":"048201","SITENAME":"Galveston","SITELOC":"Galveston","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"KHB40","LAT":"29.33","LON":"-95.035556","PWR":"1000","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"KGG68":{"ST":"TX","STATE":"Texas","COUNTY":"Waller","SAME":"048473","SITENAME":"Tomball","SITELOC":"Tomball","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"KGG68","LAT":"30.0964","LON":"-95.6564","PWR":"1000","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"KJY69":{"ST":"TX","STATE":"Texas","COUNTY":"Presidio","SAME":"048377","SITENAME":"Alpine","SITELOC":"Alpine","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"KJY69","LAT":"30.319167","LON":"-103.617778","PWR":"1000","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":""},"WNG561":{"ST":"TX","STATE":"Texas","COUNTY":"Swisher","SAME":"048437","SITENAME":"Plainview","SITELOC":"Hale County","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"WNG561","LAT":"34.220556","LON":"-101.715833","PWR":"1000","STATUS":"NORMAL","WFO":"Lubbock|TX","REMARKS":""},"WNG609":{"ST":"TX","STATE":"Texas","COUNTY":"Kleberg","SAME":"048273","SITENAME":"Riviera","SITELOC":"Kingsville","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WNG609","LAT":"27.292222","LON":"-97.8075","PWR":"500","STATUS":"NORMAL","WFO":"Corpus Christi|TX","REMARKS":""},"WNG636":{"ST":"TX","STATE":"Texas","COUNTY":"Stephens","SAME":"048429","SITENAME":"Cisco","SITELOC":"Cisco","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"WNG636","LAT":"32.351444","LON":"-99.018333","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WXN89":{"ST":"TX","STATE":"Texas","COUNTY":"Runnels","SAME":"048399","SITENAME":"Coleman","SITELOC":"Novice","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXN89","LAT":"32.033611","LON":"-99.420556","PWR":"300","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"WWG94":{"ST":"TX","STATE":"Texas","COUNTY":"San Saba","SAME":"048411","SITENAME":"Richland Springs","SITELOC":"Richland Springs","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WWG94","LAT":"31.2525","LON":"-99.002778","PWR":"1000","STATUS":"OUT OF SERVICE","WFO":"San Angelo|TX","REMARKS":""},"KXI56":{"ST":"TX","STATE":"Texas","COUNTY":"Lavaca","SAME":"048285","SITENAME":"Gonzales","SITELOC":"Gonzales","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"KXI56","LAT":"29.546667","LON":"-97.406667","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WNG641":{"ST":"TX","STATE":"Texas","COUNTY":"Hays","SAME":"048209","SITENAME":"Seguin","SITELOC":"Kingsbury","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WNG641","LAT":"29.65475","LON":"-97.82425","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WXK34":{"ST":"TX","STATE":"Texas","COUNTY":"Victoria","SAME":"048469","SITENAME":"Victoria","SITELOC":"Victoria","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"WXK34","LAT":"28.8356","LON":"-97.116667","PWR":"1000","STATUS":"NORMAL","WFO":"Corpus Christi|TX","REMARKS":""},"WXK29":{"ST":"TX","STATE":"Texas","COUNTY":"Taylor","SAME":"048441","SITENAME":"Abilene","SITELOC":"Clyde","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"WXK29","LAT":"32.275556","LON":"-99.590278","PWR":"1000","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"WWG34":{"ST":"TX","STATE":"Texas","COUNTY":"Willacy","SAME":"048489","SITENAME":"Brownsville","SITELOC":"Brownsville","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WWG34","LAT":"25.910278","LON":"-97.5305","PWR":"300","STATUS":"NORMAL","WFO":"Brownsville/Rio Grande Valley|TX","REMARKS":""},"KHB33":{"ST":"TX","STATE":"Texas","COUNTY":"Willacy","SAME":"048489","SITENAME":"Pharr","SITELOC":"Pharr","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"KHB33","LAT":"26.211222","LON":"-98.18875","PWR":"1000","STATUS":"NORMAL","WFO":"Brownsville/Rio Grande Valley|TX","REMARKS":""},"WZ2541":{"ST":"TX","STATE":"Texas","COUNTY":"Willacy","SAME":"048489","SITENAME":"Pharr Spanish","SITELOC":"Pharr","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WZ2541","LAT":"26.1861","LON":"-98.1886","PWR":"300","STATUS":"NORMAL","WFO":"Brownsville/Rio Grande Valley|TX","REMARKS":"ALL"},"WZ2542":{"ST":"TX","STATE":"Texas","COUNTY":"Willacy","SAME":"048489","SITENAME":"Santa Maria Spanish","SITELOC":"Santa Maria","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"WZ2542","LAT":"26.0814","LON":"-97.8283","PWR":"300","STATUS":"NORMAL","WFO":"Brownsville/Rio Grande Valley|TX","REMARKS":""},"KWN32":{"ST":"TX","STATE":"Texas","COUNTY":"Wood","SAME":"048499","SITENAME":"Gilmer","SITELOC":"Longview","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"KWN32","LAT":"32.727278","LON":"-94.917639","PWR":"1000","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"KXI88":{"ST":"TX","STATE":"Texas","COUNTY":"Moore","SAME":"048341","SITENAME":"Borger","SITELOC":"Borger","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"KXI88","LAT":"35.642694","LON":"-101.395667","PWR":"100","STATUS":"OUT OF SERVICE","WFO":"Amarillo|TX","REMARKS":""},"WNG653":{"ST":"TX","STATE":"Texas","COUNTY":"Cass","SAME":"048067","SITENAME":"Marietta","SITELOC":"Mt. Pleasant","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WNG653","LAT":"33.196944","LON":"-94.474722","PWR":"300","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"WXK28":{"ST":"TX","STATE":"Texas","COUNTY":"Tyler","SAME":"048457","SITENAME":"Beaumont","SITELOC":"Beaumont","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WXK28","LAT":"30.079167","LON":"-94.1328","PWR":"1000","STATUS":"NORMAL","WFO":"Lake Charles|LA","REMARKS":"SOUTHERN 1/3"},"WXK79":{"ST":"TX","STATE":"Texas","COUNTY":"Terry","SAME":"048445","SITENAME":"Lubbock","SITELOC":"New Deal","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"WXK79","LAT":"33.7372","LON":"-101.7492","PWR":"1000","STATUS":"NORMAL","WFO":"Lubbock|TX","REMARKS":""},"WXK33":{"ST":"TX","STATE":"Texas","COUNTY":"Tom Green","SAME":"048451","SITENAME":"San Angelo","SITELOC":"San Angelo","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK33","LAT":"31.623278","LON":"-100.437722","PWR":"1000","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"KWN31":{"ST":"TX","STATE":"Texas","COUNTY":"Wood","SAME":"048499","SITENAME":"Cumby","SITELOC":"Greenville","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"KWN31","LAT":"33.1403","LON":"-95.80875","PWR":"1000","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"WZ2507":{"ST":"TX","STATE":"Texas","COUNTY":"Stonewall","SAME":"048433","SITENAME":"Dickens","SITELOC":"Dickens County","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"WZ2507","LAT":"33.654139","LON":"-100.846194","PWR":"300","STATUS":"NORMAL","WFO":"Lubbock|TX","REMARKS":""},"WXL44":{"ST":"TX","STATE":"Texas","COUNTY":"Sutton","SAME":"048435","SITENAME":"Ozona","SITELOC":"Ozona","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"WXL44","LAT":"30.739861","LON":"-101.270528","PWR":"300","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"WZ2503":{"ST":"TX","STATE":"Texas","COUNTY":"Reeves","SAME":"048389","SITENAME":"Guadalupe Mt Nat'l. Park","SITELOC":"Guadalupe Peak","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WZ2503","LAT":"31.89","LON":"-104.811194","PWR":"1000","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":"NW"},"WNG692":{"ST":"TX","STATE":"Texas","COUNTY":"Zavala","SAME":"048507","SITENAME":"Carrizo Springs","SITELOC":"Carrizo Springs","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WNG692","LAT":"28.5331","LON":"-99.881389","PWR":"500","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WNG651":{"ST":"TX","STATE":"Texas","COUNTY":"Young","SAME":"048503","SITENAME":"Mineral Wells","SITELOC":"Palo Pinto","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WNG651","LAT":"32.855","LON":"-98.087222","PWR":"300","STATUS":"NORMAL","WFO":"Fort Worth-Dallas|TX","REMARKS":""},"KWN37":{"ST":"TX","STATE":"Texas","COUNTY":"Taylor","SAME":"048441","SITENAME":"Sweetwater","SITELOC":"Sweetwater","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"KWN37","LAT":"32.346361","LON":"-100.352","PWR":"300","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"WZ2572":{"ST":"TX","STATE":"Texas","COUNTY":"Fort Bend","SAME":"048157","SITENAME":"Richmond","SITELOC":"Fort Bend County","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WZ2572","LAT":"29.5817","LON":"-95.7606","PWR":"300","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"WNG600":{"ST":"TX","STATE":"Texas","COUNTY":"Uvalde","SAME":"048463","SITENAME":"D'Hanis","SITELOC":"D'Hanis","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WNG600","LAT":"29.320833","LON":"-99.331944","PWR":"300","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WNG523":{"ST":"TX","STATE":"Texas","COUNTY":"La Salle","SAME":"048283","SITENAME":"Dilley","SITELOC":"Dilley","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"WNG523","LAT":"28.675472","LON":"-99.188972","PWR":"300","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"KXI55":{"ST":"TX","STATE":"Texas","COUNTY":"Walker","SAME":"048471","SITENAME":"Onalaska","SITELOC":"Onalaska","SITESTATE":"TX","FREQ":"162.500","CALLSIGN":"KXI55","LAT":"30.849722","LON":"-95.1097","PWR":"1000","STATUS":"NORMAL","WFO":"Houston/Galveston|TX","REMARKS":""},"WNG695":{"ST":"TX","STATE":"Texas","COUNTY":"Winkler","SAME":"048495","SITENAME":"Pecos","SITELOC":"Pecos","SITESTATE":"TX","FREQ":"162.450","CALLSIGN":"WNG695","LAT":"31.200611","LON":"-103.353444","PWR":"1000","STATUS":"NORMAL","WFO":"Midland/Odessa|TX","REMARKS":"SOUTHWEST SECTION "},"WWG93":{"ST":"TX","STATE":"Texas","COUNTY":"Sutton","SAME":"048435","SITENAME":"Junction","SITELOC":"Junction","SITESTATE":"TX","FREQ":"162.475","CALLSIGN":"WWG93","LAT":"30.478056","LON":"-99.752778","PWR":"1000","STATUS":"NORMAL","WFO":"San Angelo|TX","REMARKS":""},"WXJ98":{"ST":"TX","STATE":"Texas","COUNTY":"Val Verde","SAME":"048465","SITENAME":"Del Rio","SITELOC":"Amistad Village","SITESTATE":"TX","FREQ":"162.400","CALLSIGN":"WXJ98","LAT":"29.4681","LON":"-101.01145","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WNG650":{"ST":"TX","STATE":"Texas","COUNTY":"Shelby","SAME":"048419","SITENAME":"Center","SITELOC":"Timpson","SITESTATE":"TX","FREQ":"162.525","CALLSIGN":"WNG650","LAT":"31.726389","LON":"-94.257778","PWR":"300","STATUS":"NORMAL","WFO":"Shreveport|LA","REMARKS":""},"WNG601":{"ST":"TX","STATE":"Texas","COUNTY":"Zapata","SAME":"048505","SITENAME":"Rio Grande City","SITELOC":"Rio Grande City","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"WNG601","LAT":"26.405","LON":"-98.776111","PWR":"1000","STATUS":"NORMAL","WFO":"Brownsville/Rio Grande Valley|TX","REMARKS":""},"KWN51":{"ST":"TX","STATE":"Texas","COUNTY":"Uvalde","SAME":"048463","SITENAME":"Uvalde","SITELOC":"Uvalde","SITESTATE":"TX","FREQ":"162.425","CALLSIGN":"KWN51","LAT":"29.247028","LON":"-99.796111","PWR":"1000","STATUS":"NORMAL","WFO":"Austin/San Antonio|TX","REMARKS":""},"WXK26":{"ST":"TX","STATE":"Texas","COUNTY":"Zapata","SAME":"048505","SITENAME":"Laredo","SITELOC":"Laredo","SITESTATE":"TX","FREQ":"162.550","CALLSIGN":"WXK26","LAT":"27.5203","LON":"-99.5222","PWR":"1000","STATUS":"NORMAL","WFO":"Corpus Christi|TX","REMARKS":""},"WXM24":{"ST":"UT","STATE":"Utah","COUNTY":"Millard","SAME":"049027","SITENAME":"Milford/Cedar City","SITELOC":"Frisco Peak","SITESTATE":"UT","FREQ":"162.400","CALLSIGN":"WXM24","LAT":"38.5197","LON":"-113.2867","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":""},"KEC78":{"ST":"UT","STATE":"Utah","COUNTY":"Weber","SAME":"049057","SITENAME":"Salt Lake City","SITELOC":"Bacchus","SITESTATE":"UT","FREQ":"162.550","CALLSIGN":"KEC78","LAT":"40.6272","LON":"-112.0572","PWR":"330","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"W AND CENTRAL"},"WWF46":{"ST":"UT","STATE":"Utah","COUNTY":"Weber","SAME":"049057","SITENAME":"Tooele (South Mountain)","SITELOC":"South Mountain","SITESTATE":"UT","FREQ":"162.450","CALLSIGN":"WWF46","LAT":"40.4597","LON":"-112.41","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"W AND CENTRAL"},"WNG669":{"ST":"UT","STATE":"Utah","COUNTY":"Wayne","SAME":"049055","SITENAME":"Castle Dale","SITELOC":"Horn Mountain","SITESTATE":"UT","FREQ":"162.500","CALLSIGN":"WNG669","LAT":"39.21","LON":"-111.1425","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"E AND CENTRAL"},"KXI34":{"ST":"WY","STATE":"Wyoming","COUNTY":"Sweetwater","SAME":"056037","SITENAME":"Rock Springs","SITELOC":"Rock Springs","SITESTATE":"WY","FREQ":"162.550","CALLSIGN":"KXI34","LAT":"41.430556","LON":"-109.120278","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":"CENTRAL/W"},"WWF47":{"ST":"UT","STATE":"Utah","COUNTY":"Tooele","SAME":"049045","SITENAME":"Tooele (Vernon Hills)","SITELOC":"Vernon Hills","SITESTATE":"UT","FREQ":"162.525","CALLSIGN":"WWF47","LAT":"40.1272","LON":"-112.380833","PWR":"120","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"E 1/3"},"KJY79":{"ST":"UT","STATE":"Utah","COUNTY":"Wasatch","SAME":"049051","SITENAME":"Tabiona","SITELOC":"Mount Tabby","SITESTATE":"UT","FREQ":"162.550","CALLSIGN":"KJY79","LAT":"40.355278","LON":"-110.7994","PWR":"300","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"EAST / CENTRAL"},"WXM23":{"ST":"UT","STATE":"Utah","COUNTY":"Uintah","SAME":"049047","SITENAME":"Vernal","SITELOC":"Asphalt Ridge","SITESTATE":"UT","FREQ":"162.400","CALLSIGN":"WXM23","LAT":"40.41391","LON":"-109.593289","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":""},"WNG556":{"ST":"UT","STATE":"Utah","COUNTY":"San Juan","SAME":"049037","SITENAME":"Moab","SITELOC":"Bald Mesa","SITESTATE":"UT","FREQ":"162.475","CALLSIGN":"WNG556","LAT":"38.528889","LON":"-109.323611","PWR":"300","STATUS":"NORMAL","WFO":"Grand Junction|CO","REMARKS":"Northern 1/2"},"KJY61":{"ST":"UT","STATE":"Utah","COUNTY":"Garfield","SAME":"049017","SITENAME":"Escalante","SITELOC":"Barney Top Mountain","SITESTATE":"UT","FREQ":"162.425","CALLSIGN":"KJY61","LAT":"37.756389","LON":"-111.874722","PWR":"75","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":""},"WNG594":{"ST":"UT","STATE":"Utah","COUNTY":"Sevier","SAME":"049041","SITENAME":"Manti","SITELOC":"Sevier Valley","SITESTATE":"UT","FREQ":"162.425","CALLSIGN":"WNG594","LAT":"39.321944","LON":"-111.770833","PWR":"300","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"CENTRAL 1/3"},"KJY60":{"ST":"UT","STATE":"Utah","COUNTY":"Summit","SAME":"049043","SITENAME":"Coalville/ Park City","SITELOC":"Lewis Peak","SITESTATE":"UT","FREQ":"162.475","CALLSIGN":"KJY60","LAT":"40.854444","LON":"-111.481111","PWR":"100","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":"W 1/3"},"KXI85":{"ST":"WY","STATE":"Wyoming","COUNTY":"Uinta","SAME":"056041","SITENAME":"Evanston","SITELOC":"Medicine Butte","SITESTATE":"WY","FREQ":"162.450","CALLSIGN":"KXI85","LAT":"41.3525","LON":"-110.9072","PWR":"300","STATUS":"NORMAL","WFO":"Salt Lake City|UT","REMARKS":""},"KZZ28":{"ST":"VA","STATE":"Virginia","COUNTY":"Spotsylvania","SAME":"051177","SITENAME":"Covesville","SITELOC":"Mt. Oliver","SITESTATE":"VA","FREQ":"162.450","CALLSIGN":"KZZ28","LAT":"37.876528","LON":"-78.690972","PWR":"1000","STATUS":"NORMAL","WFO":"Baltimore/Washington|VA","REMARKS":""},"WXM72":{"ST":"WV","STATE":"West Virginia","COUNTY":"Summers","SAME":"054089","SITENAME":"Hinton","SITELOC":"Keeney Mtn.","SITESTATE":"WV","FREQ":"162.425","CALLSIGN":"WXM72","LAT":"37.772778","LON":"-80.706944","PWR":"1000","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":""},"WXK65":{"ST":"VA","STATE":"Virginia","COUNTY":"Sussex","SAME":"051183","SITENAME":"Richmond","SITELOC":"Sandston","SITESTATE":"VA","FREQ":"162.475","CALLSIGN":"WXK65","LAT":"37.503056","LON":"-77.541667","PWR":"1000","STATUS":"NORMAL","WFO":"Wakefield|VA","REMARKS":""},"WXL92":{"ST":"VA","STATE":"Virginia","COUNTY":"Rockbridge","SAME":"051163","SITENAME":"Lynchburg","SITELOC":"Madison Heights","SITESTATE":"VA","FREQ":"162.550","CALLSIGN":"WXL92","LAT":"37.436389","LON":"-79.1244","PWR":"1000","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":""},"WXM75":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wyoming","SAME":"054109","SITENAME":"Gilbert","SITELOC":"Horsepen Mtn.","SITESTATE":"WV","FREQ":"162.475","CALLSIGN":"WXM75","LAT":"37.641389","LON":"-81.993889","PWR":"750","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":"W"},"WXM71":{"ST":"WV","STATE":"West Virginia","COUNTY":"Summers","SAME":"054089","SITENAME":"Beckley","SITELOC":"Flat Top","SITESTATE":"WV","FREQ":"162.550","CALLSIGN":"WXM71","LAT":"37.590556","LON":"-81.115","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"WZ2543":{"ST":"VA","STATE":"Virginia","COUNTY":"Tazewell","SAME":"051185","SITENAME":"Richlands","SITELOC":"Steeleburg","SITESTATE":"VA","FREQ":"162.425","CALLSIGN":"WZ2543","LAT":"37.0683","LON":"-81.7706","PWR":"300","STATUS":"NORMAL","WFO":"Blacksburg|VA","REMARKS":""},"WZ2561":{"ST":"VI","STATE":"Virgin Islands","COUNTY":"St. Thomas","SAME":"078030","SITENAME":"St. Thomas","SITELOC":"Charlotte Amalie","SITESTATE":"VI","FREQ":"162.450","CALLSIGN":"WZ2561","LAT":"18.3283","LON":"-64.8592","PWR":"300","STATUS":"NORMAL","WFO":"San Juan|PR","REMARKS":""},"WNG671":{"ST":"VT","STATE":"Vermont","COUNTY":"Rutland","SAME":"050021","SITENAME":"Castleton","SITELOC":"Rutland","SITESTATE":"VT","FREQ":"162.500","CALLSIGN":"WNG671","LAT":"43.658889","LON":"-73.106944","PWR":"300","STATUS":"NORMAL","WFO":"Burlington|VT","REMARKS":""},"WWF56":{"ST":"WA","STATE":"Washington","COUNTY":"Yakima","SAME":"053077","SITENAME":"Richland","SITELOC":"Richland","SITESTATE":"WA","FREQ":"162.450","CALLSIGN":"WWF56","LAT":"46.397387","LON":"-119.599561","PWR":"300","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WWF49":{"ST":"WA","STATE":"Washington","COUNTY":"Okanogan","SAME":"053047","SITENAME":"Okanogan","SITELOC":"Tunk Mtn.","SITESTATE":"WA","FREQ":"162.525","CALLSIGN":"WWF49","LAT":"48.545556","LON":"-119.235556","PWR":"50","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":""},"WXM48":{"ST":"WA","STATE":"Washington","COUNTY":"Kittitas","SAME":"053037","SITENAME":"Wenatchee","SITELOC":"Birch Mtn","SITESTATE":"WA","FREQ":"162.475","CALLSIGN":"WXM48","LAT":"47.549849","LON":"-120.371015","PWR":"100","STATUS":"NORMAL","WFO":"Spokane|WA","REMARKS":""},"KXI27":{"ST":"WA","STATE":"Washington","COUNTY":"Jefferson","SAME":"053031","SITENAME":"Forks","SITELOC":"Clearwater","SITESTATE":"WA","FREQ":"162.425","CALLSIGN":"KXI27","LAT":"47.749167","LON":"-124.177778","PWR":"330","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":"WEST AND WEST C"},"KIH36":{"ST":"WA","STATE":"Washington","COUNTY":"Jefferson","SAME":"053031","SITENAME":"Neah Bay","SITELOC":"Bohokus Peak","SITESTATE":"WA","FREQ":"162.550","CALLSIGN":"KIH36","LAT":"48.370694","LON":"-124.673028","PWR":"300","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":"EXTREME NORTH W"},"WWG24":{"ST":"WA","STATE":"Washington","COUNTY":"Snohomish","SAME":"053061","SITENAME":"Puget Sound Marine","SITELOC":"Port Townsend","SITESTATE":"WA","FREQ":"162.425","CALLSIGN":"WWG24","LAT":"48.016028","LON":"-122.927194","PWR":"90","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":"WEST"},"KZZ73":{"ST":"WA","STATE":"Washington","COUNTY":"Whitman","SAME":"053075","SITENAME":"Dayton","SITELOC":"Patit","SITESTATE":"WA","FREQ":"162.525","CALLSIGN":"KZZ73","LAT":"46.353556","LON":"-117.717167","PWR":"300","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WXM62":{"ST":"WA","STATE":"Washington","COUNTY":"Thurston","SAME":"053067","SITENAME":"Capitol Peak","SITELOC":"Olympia","SITESTATE":"WA","FREQ":"162.475","CALLSIGN":"WXM62","LAT":"46.975222","LON":"-123.139167","PWR":"300","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":""},"KHB60":{"ST":"WA","STATE":"Washington","COUNTY":"Snohomish","SAME":"053061","SITENAME":"Seattle","SITELOC":"Cougar Mtn.","SITESTATE":"WA","FREQ":"162.550","CALLSIGN":"KHB60","LAT":"47.5436","LON":"-122.108694","PWR":"100","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":"W AND SW"},"WXN21":{"ST":"WA","STATE":"Washington","COUNTY":"Kittitas","SAME":"053037","SITENAME":"Cle Elum","SITELOC":"Sky Meadows","SITESTATE":"WA","FREQ":"162.400","CALLSIGN":"WXN21","LAT":"47.137333","LON":"-120.869667","PWR":"75","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":"North"},"KIG75":{"ST":"WA","STATE":"Washington","COUNTY":"Yakima","SAME":"053077","SITENAME":"Yakima","SITELOC":"Ahtanum Ridge","SITESTATE":"WA","FREQ":"162.550","CALLSIGN":"KIG75","LAT":"46.6405","LON":"-120.39725","PWR":"300","STATUS":"NORMAL","WFO":"Pendleton|OR","REMARKS":""},"WZ2502":{"ST":"WA","STATE":"Washington","COUNTY":"Lewis","SAME":"053041","SITENAME":"Randle","SITELOC":"Bennett Road","SITESTATE":"WA","FREQ":"162.425","CALLSIGN":"WZ2502","LAT":"46.535278","LON":"-121.768861","PWR":"100","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":""},"KAD93":{"ST":"WA","STATE":"Washington","COUNTY":"Whatcom","SAME":"053073","SITENAME":"H Street - Blaine Area","SITELOC":"H Street - Blaine Area","SITESTATE":"WA","FREQ":"162.525","CALLSIGN":"KAD93","LAT":"48.996278","LON":"-122.649167","PWR":"100","STATUS":"NORMAL","WFO":"Seattle/Tacoma|WA","REMARKS":"EXTREME NORTH "},"KHA47":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vernon","SAME":"055123","SITENAME":"Baraboo","SITELOC":"Baraboo","SITESTATE":"WI","FREQ":"162.450","CALLSIGN":"KHA47","LAT":"43.427778","LON":"-89.653889","PWR":"300","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"WWF40":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Wood","SAME":"055141","SITENAME":"Coloma","SITELOC":"Coloma","SITESTATE":"WI","FREQ":"162.400","CALLSIGN":"WWF40","LAT":"44.020278","LON":"-89.558056","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"KE2XKP":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Wood","SAME":"055141","SITENAME":"Tomah","SITELOC":"Tomah","SITESTATE":"WI","FREQ":"162.525","CALLSIGN":"KE2XKP","LAT":"43.8956","LON":"-90.585","PWR":"300","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":"SW"},"WXM91":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vilas","SAME":"055125","SITENAME":"Park Falls","SITELOC":"Park Falls","SITESTATE":"WI","FREQ":"162.500","CALLSIGN":"WXM91","LAT":"45.945278","LON":"-90.274444","PWR":"1000","STATUS":"NORMAL","WFO":"Duluth|MN","REMARKS":"W 1/3"},"WNG577":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Washburn","SAME":"055129","SITENAME":"Ladysmith","SITELOC":"Rusk County","SITESTATE":"WI","FREQ":"162.550","CALLSIGN":"WNG577","LAT":"45.555833","LON":"-90.965028","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"WXJ88":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Trempealeau","SAME":"055121","SITENAME":"Menomonie","SITELOC":"Wheeler","SITESTATE":"WI","FREQ":"162.400","CALLSIGN":"WXJ88","LAT":"45.046944","LON":"-91.863333","PWR":"1000","STATUS":"NORMAL","WFO":"Twin Cities/Chanhassen|MN","REMARKS":""},"KIG65":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Winnebago","SAME":"055139","SITENAME":"Green Bay","SITELOC":"De Pere","SITESTATE":"WI","FREQ":"162.550","CALLSIGN":"KIG65","LAT":"44.409722","LON":"-88.001389","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WWG87":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Winnebago","SAME":"055139","SITENAME":"Fond Du Lac","SITELOC":"Fond Du Lac","SITESTATE":"WI","FREQ":"162.500","CALLSIGN":"WWG87","LAT":"43.815833","LON":"-88.320278","PWR":"1000","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"KZZ77":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Wood","SAME":"055141","SITENAME":"Withee","SITELOC":"Withee","SITESTATE":"WI","FREQ":"162.425","CALLSIGN":"KZZ77","LAT":"44.914167","LON":"-90.657222","PWR":"1000","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WNG564":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Wood","SAME":"055141","SITENAME":"Black River Falls","SITELOC":"Jackson County","SITESTATE":"WI","FREQ":"162.500","CALLSIGN":"WNG564","LAT":"44.375","LON":"-90.8419","PWR":"300","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WXJ89":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Wood","SAME":"055141","SITENAME":"Wausau","SITELOC":"Marathon","SITESTATE":"WI","FREQ":"162.475","CALLSIGN":"WXJ89","LAT":"44.9206","LON":"-89.6919","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WXJ87":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Sauk","SAME":"055111","SITENAME":"Madison","SITELOC":"Middleton Junction","SITESTATE":"WI","FREQ":"162.550","CALLSIGN":"WXJ87","LAT":"43.055833","LON":"-89.535","PWR":"1000","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"KEC60":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Waukesha","SAME":"055133","SITENAME":"Milwaukee","SITELOC":"Delafield","SITESTATE":"WI","FREQ":"162.400","CALLSIGN":"KEC60","LAT":"43.028272","LON":"-88.392525","PWR":"1000","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"WWG88":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vilas","SAME":"055125","SITENAME":"Crandon","SITELOC":"Crandon","SITESTATE":"WI","FREQ":"162.450","CALLSIGN":"WWG88","LAT":"45.572222","LON":"-88.883889","PWR":"750","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WWG91":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Washington","SAME":"055131","SITENAME":"Sheboygan","SITELOC":"Sheboygan","SITESTATE":"WI","FREQ":"162.525","CALLSIGN":"WWG91","LAT":"43.765556","LON":"-87.766389","PWR":"300","STATUS":"NORMAL","WFO":"Milwaukee/Sullivan|WI","REMARKS":""},"WNG565":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vilas","SAME":"055125","SITENAME":"Rhinelander","SITELOC":"Oneida County","SITESTATE":"WI","FREQ":"162.400","CALLSIGN":"WNG565","LAT":"45.726111","LON":"-89.415","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"KC2XBZ":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Waupaca","SAME":"055135","SITENAME":"Gresham","SITELOC":"Gresham","SITESTATE":"WI","FREQ":"162.500","CALLSIGN":"KC2XBZ","LAT":"44.8167","LON":"-88.8181","PWR":"300","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WNG552":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Winnebago","SAME":"055139","SITENAME":"New London","SITELOC":"Manawa/Ogdensburg","SITESTATE":"WI","FREQ":"162.525","CALLSIGN":"WNG552","LAT":"44.4175","LON":"-88.9175","PWR":"1000","STATUS":"NORMAL","WFO":"Green Bay|WI","REMARKS":""},"WWG89":{"ST":"WI","STATE":"Wisconsin","COUNTY":"Vernon","SAME":"055123","SITENAME":"Richland Center","SITELOC":"Ash Ridge","SITESTATE":"WI","FREQ":"162.475","CALLSIGN":"WWG89","LAT":"43.498889","LON":"-90.541111","PWR":"200","STATUS":"NORMAL","WFO":"La Crosse|WI","REMARKS":""},"WXJ85":{"ST":"WV","STATE":"West Virginia","COUNTY":"Wetzel","SAME":"054103","SITENAME":"Clarksburg","SITELOC":"Clarksburg","SITESTATE":"WV","FREQ":"162.550","CALLSIGN":"WXJ85","LAT":"39.273333","LON":"-80.344722","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":"CENTRAL/E"},"WXJ84":{"ST":"WV","STATE":"West Virginia","COUNTY":"Roane","SAME":"054087","SITENAME":"Charleston","SITELOC":"Awendaw-Charleston","SITESTATE":"WV","FREQ":"162.400","CALLSIGN":"WXJ84","LAT":"38.356833","LON":"-81.605333","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"WXM74":{"ST":"WV","STATE":"West Virginia","COUNTY":"Webster","SAME":"054101","SITENAME":"Sutton","SITELOC":"Flatwood Mountain","SITESTATE":"WV","FREQ":"162.450","CALLSIGN":"WXM74","LAT":"38.7114","LON":"-80.681944","PWR":"1000","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"KXI74":{"ST":"WV","STATE":"West Virginia","COUNTY":"Webster","SAME":"054101","SITENAME":"Monterville","SITELOC":"Point Mountain","SITESTATE":"WV","FREQ":"162.525","CALLSIGN":"KXI74","LAT":"38.5658","LON":"-80.151944","PWR":"250","STATUS":"NORMAL","WFO":"Charleston|WV","REMARKS":""},"WXM37":{"ST":"WY","STATE":"Wyoming","COUNTY":"Platte","SAME":"056031","SITENAME":"Cheyenne","SITELOC":"Pole Mtn.","SITESTATE":"WY","FREQ":"162.550","CALLSIGN":"WXM37","LAT":"41.288056","LON":"-105.445","PWR":"1000","STATUS":"NORMAL","WFO":"Cheyenne|WY","REMARKS":"S 1/2"},"WNG568":{"ST":"WY","STATE":"Wyoming","COUNTY":"Washakie","SAME":"056043","SITENAME":"Worland","SITELOC":"Greybull","SITESTATE":"WY","FREQ":"162.525","CALLSIGN":"WNG568","LAT":"44.195556","LON":"-107.511944","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG660":{"ST":"WY","STATE":"Wyoming","COUNTY":"Weston","SAME":"056045","SITENAME":"Gillette","SITELOC":"Campbell County","SITESTATE":"WY","FREQ":"162.500","CALLSIGN":"WNG660","LAT":"44.243056","LON":"-105.538611","PWR":"1000","STATUS":"NORMAL","WFO":"Rapid City|SD","REMARKS":""},"KXI37":{"ST":"WY","STATE":"Wyoming","COUNTY":"Sweetwater","SAME":"056037","SITENAME":"Rawlins","SITELOC":"Elk Mtn.","SITESTATE":"WY","FREQ":"162.425","CALLSIGN":"KXI37","LAT":"41.6794","LON":"-107.2364","PWR":"300","STATUS":"NORMAL","WFO":"Cheyenne|WY","REMARKS":"East 1/3"},"WXM47":{"ST":"WY","STATE":"Wyoming","COUNTY":"Natrona","SAME":"056025","SITENAME":"Casper","SITELOC":"Casper Mtn.","SITESTATE":"WY","FREQ":"162.400","CALLSIGN":"WXM47","LAT":"42.734167","LON":"-106.333333","PWR":"1000","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG571":{"ST":"WY","STATE":"Wyoming","COUNTY":"Platte","SAME":"056031","SITENAME":"Glendo","SITELOC":"Glendo Reservoir","SITESTATE":"WY","FREQ":"162.450","CALLSIGN":"WNG571","LAT":"42.346111","LON":"-105.035278","PWR":"1000","STATUS":"NORMAL","WFO":"Cheyenne|WY","REMARKS":""},"WNG723":{"ST":"WY","STATE":"Wyoming","COUNTY":"Fremont","SAME":"056013","SITENAME":"Dubois","SITELOC":"Dubois","SITESTATE":"WY","FREQ":"162.450","CALLSIGN":"WNG723","LAT":"43.499722","LON":"-109.6881","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WXM61":{"ST":"WY","STATE":"Wyoming","COUNTY":"Fremont","SAME":"056013","SITENAME":"Lander","SITELOC":"Lander","SITESTATE":"WY","FREQ":"162.475","CALLSIGN":"WXM61","LAT":"42.815539","LON":"-108.734083","PWR":"1000","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":"E 2/3"},"WNG573":{"ST":"WY","STATE":"Wyoming","COUNTY":"Hot Springs","SAME":"056017","SITENAME":"Thermopolis","SITELOC":"Shoshoni","SITESTATE":"WY","FREQ":"162.500","CALLSIGN":"WNG573","LAT":"43.437222","LON":"-107.997222","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG662":{"ST":"WY","STATE":"Wyoming","COUNTY":"Johnson","SAME":"056019","SITENAME":"Kaycee","SITELOC":"Johnson County","SITESTATE":"WY","FREQ":"162.550","CALLSIGN":"WNG662","LAT":"43.719909","LON":"-106.651011","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG569":{"ST":"WY","STATE":"Wyoming","COUNTY":"Lincoln","SAME":"056023","SITENAME":"Afton","SITELOC":"Star Valley","SITESTATE":"WY","FREQ":"162.475","CALLSIGN":"WNG569","LAT":"42.8508","LON":"-110.9808","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"KJY75":{"ST":"WY","STATE":"Wyoming","COUNTY":"Lincoln","SAME":"056023","SITENAME":"Kemmerer","SITELOC":"Kemmerer","SITESTATE":"WY","FREQ":"162.525","CALLSIGN":"KJY75","LAT":"41.838611","LON":"-110.504722","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"WNG679":{"ST":"WY","STATE":"Wyoming","COUNTY":"Sublette","SAME":"056035","SITENAME":"Pinedale","SITELOC":"Pinedale","SITESTATE":"WY","FREQ":"162.500","CALLSIGN":"WNG679","LAT":"42.844444","LON":"-109.924167","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":""},"KWN39":{"ST":"WY","STATE":"Wyoming","COUNTY":"Teton","SAME":"056039","SITENAME":"Jackson","SITELOC":"Snow King Mountain Resort","SITESTATE":"WY","FREQ":"162.525","CALLSIGN":"KWN39","LAT":"43.46306","LON":"-110.7633","PWR":"300","STATUS":"NORMAL","WFO":"Riverton|WY","REMARKS":"ALL"}}

module.exports = nwr_stations;
},{}],83:[function(require,module,exports){
// https://saratoga-weather.org/NWR-radios-data.php

const radio_streams = {
    "KEC49": {
        "call": "KEC49",
        "alt": "N",
        "loc": "Monterey, CA",
        "freq": "162.550 MHz",
        "who": "Saratoga-Weather.org<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/saratoga-weather.org",
        "lat": "37.155000",
        "long": "-121.897222",
        "watts": "330",
        "xmloc": "Mt. Umunhum,CA",
        "wfo": "Monterey",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KEC49",
        "radiourl": "https:\/\/wxradio.org\/CA-Monterey-KEC49",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC49.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "California",
        "stateabbr": "CA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Alameda": "Alameda,&nbsp;CA(SAME&nbsp;006001)",
            "Contra Costa": "Contra&nbsp;Costa,&nbsp;CA(SAME&nbsp;006013&nbsp;for&nbsp;VALLEYS)",
            "Monterey": "Monterey,&nbsp;CA(SAME&nbsp;006053)",
            "Napa": "Napa,&nbsp;CA(SAME&nbsp;006055&nbsp;for&nbsp;SOUTH)",
            "San Benito": "San&nbsp;Benito,&nbsp;CA(SAME&nbsp;006069&nbsp;for&nbsp;NORTH)",
            "San Francisco": "San&nbsp;Francisco,&nbsp;CA(SAME&nbsp;006075)",
            "San Mateo": "San&nbsp;Mateo,&nbsp;CA(SAME&nbsp;006081)",
            "Santa Clara": "Santa&nbsp;Clara,&nbsp;CA(SAME&nbsp;006085)",
            "Santa Cruz": "Santa&nbsp;Cruz,&nbsp;CA(SAME&nbsp;006087)"
        }
    },
    "KEC50": {
        "call": "KEC50",
        "alt": "N",
        "loc": "West Palm Beach, FL",
        "freq": "162.475 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/mfl\/",
        "lat": "26.749722",
        "long": "-80.067500",
        "watts": "1000",
        "xmloc": "Mangonia Park,FL",
        "wfo": "Miami",
        "wxown": "KEC50",
        "radiourl": "https:\/\/www.weather.gov\/media\/mfl\/nwr\/MIAZFPWPB.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC50.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Broward": "Broward,&nbsp;FL(SAME&nbsp;012011)",
            "Martin": "Martin,&nbsp;FL(SAME&nbsp;012085)",
            "Palm Beach": "Palm&nbsp;Beach,&nbsp;FL(SAME&nbsp;012099)",
            "St. Lucie": "St.&nbsp;Lucie,&nbsp;FL(SAME&nbsp;012111)"
        }
    },
    "KEC55": {
        "call": "KEC55",
        "alt": "Y",
        "loc": "Fort Worth, TX",
        "freq": "162.550 MHz",
        "who": "Matthew S.<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "32.536694",
        "long": "-97.413000",
        "watts": "1000",
        "xmloc": "Crowley,TX",
        "wfo": "Fort Worth",
        "wxown": "KEC55",
        "radiourl": "https:\/\/wxradio.org\/TX-FortWorth-KEC55-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC55.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "",
        "samecode": {
            "Bosque": "Bosque,&nbsp;TX(SAME&nbsp;048035)",
            "Collin": "Collin,&nbsp;TX(SAME&nbsp;048085)",
            "Dallas": "Dallas,&nbsp;TX(SAME&nbsp;048113)",
            "Denton": "Denton,&nbsp;TX(SAME&nbsp;048121)",
            "Ellis": "Ellis,&nbsp;TX(SAME&nbsp;048139)",
            "Erath": "Erath,&nbsp;TX(SAME&nbsp;048143)",
            "Hill": "Hill,&nbsp;TX(SAME&nbsp;048217)",
            "Hood": "Hood,&nbsp;TX(SAME&nbsp;048221)",
            "Johnson": "Johnson,&nbsp;TX(SAME&nbsp;048251)",
            "Parker": "Parker,&nbsp;TX(SAME&nbsp;048367)",
            "Somervell": "Somervell,&nbsp;TX(SAME&nbsp;048425)",
            "Tarrant": "Tarrant,&nbsp;TX(SAME&nbsp;048439)",
            "Wise": "Wise,&nbsp;TX(SAME&nbsp;048497)"
        }
    },
    "KEC56": {
        "call": "KEC56",
        "alt": "N",
        "loc": "Dallas, TX",
        "freq": "162.400 MHz",
        "who": " PlanoWeather.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.planoweather.com",
        "lat": "32.901278",
        "long": "-96.687200",
        "watts": "1000",
        "xmloc": "Dallas,TX",
        "wfo": "Fort Worth",
        "wxown": "KEC56",
        "radiourl": "https:\/\/wxradio.org\/TX-Dallas-KEC56",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC56.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "",
        "samecode": {
            "Bosque": "Bosque,&nbsp;TX(SAME&nbsp;048035)",
            "Collin": "Collin,&nbsp;TX(SAME&nbsp;048085)",
            "Dallas": "Dallas,&nbsp;TX(SAME&nbsp;048113)",
            "Denton": "Denton,&nbsp;TX(SAME&nbsp;048121)",
            "Ellis": "Ellis,&nbsp;TX(SAME&nbsp;048139)",
            "Hill": "Hill,&nbsp;TX(SAME&nbsp;048217)",
            "Hood": "Hood,&nbsp;TX(SAME&nbsp;048221)",
            "Hunt": "Hunt,&nbsp;TX(SAME&nbsp;048231)",
            "Kaufman": "Kaufman,&nbsp;TX(SAME&nbsp;048257)",
            "Parker": "Parker,&nbsp;TX(SAME&nbsp;048367)",
            "Rockwall": "Rockwall,&nbsp;TX(SAME&nbsp;048397)",
            "Tarrant": "Tarrant,&nbsp;TX(SAME&nbsp;048439)"
        }
    },
    "KEC65": {
        "call": "KEC65",
        "alt": "N",
        "loc": "Minneapolis\/St. Paul, MN",
        "freq": "162.550 MHz",
        "who": "Blaine MN Weather<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "PWS",
        "wxurl": "https:\/\/weather.urberg.net\/",
        "lat": "44.968944",
        "long": "-93.207833",
        "watts": "1000",
        "xmloc": "Minneapolis,MN",
        "wfo": "Chanhassen",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KEC65",
        "radiourl": "https:\/\/www.urberg.net\/tim273\/edina",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC65.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Anoka": "Anoka,&nbsp;MN(SAME&nbsp;027003)",
            "Carver": "Carver,&nbsp;MN(SAME&nbsp;027019)",
            "Chisago": "Chisago,&nbsp;MN(SAME&nbsp;027025&nbsp;for&nbsp;S)",
            "Dakota": "Dakota,&nbsp;MN(SAME&nbsp;027037)",
            "Hennepin": "Hennepin,&nbsp;MN(SAME&nbsp;027053)",
            "Ramsey": "Ramsey,&nbsp;MN(SAME&nbsp;027123)",
            "Rice": "Rice,&nbsp;MN(SAME&nbsp;027131)",
            "Scott": "Scott,&nbsp;MN(SAME&nbsp;027139)",
            "Washington": "Washington,&nbsp;MN(SAME&nbsp;027163)",
            "Wright": "Wright,&nbsp;MN(SAME&nbsp;027171)",
            "Pierce": "Pierce,&nbsp;WI(SAME&nbsp;055093)",
            "Polk": "Polk,&nbsp;WI(SAME&nbsp;055095&nbsp;for&nbsp;SW)",
            "St. Croix": "St.&nbsp;Croix,&nbsp;WI(SAME&nbsp;055109)"
        }
    },
    "KEC73": {
        "call": "KEC73",
        "alt": "N",
        "loc": "Bourne\/Hyannis, MA",
        "freq": "162.550 MHz",
        "who": "Harwich MA Live Weather<span style=\"padding-left:10px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/harwichweather.com\/",
        "lat": "41.708611",
        "long": "-70.565556",
        "watts": "1000",
        "xmloc": "Camp Edwards,MA",
        "wfo": "Taunton",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KEC73",
        "radiourl": "https:\/\/wxradio.org\/MA-Bourne\/Hyannis-KEC73",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC73.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Massachusetts",
        "stateabbr": "MA",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Barnstable": "Barnstable,&nbsp;MA(SAME&nbsp;025001)",
            "Bristol": "Bristol,&nbsp;MA(SAME&nbsp;025005&nbsp;for&nbsp;Central\/S)",
            "Dukes": "Dukes,&nbsp;MA(SAME&nbsp;025007)",
            "Nantucket": "Nantucket,&nbsp;MA(SAME&nbsp;025019)",
            "Plymouth": "Plymouth,&nbsp;MA(SAME&nbsp;025023&nbsp;for&nbsp;Central\/S)"
        }
    },
    "KEC74": {
        "call": "KEC74",
        "alt": "N",
        "loc": "Indianapolis, IN",
        "freq": "162.550 MHz",
        "who": "Fox Hollow Weather Station<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.frontlineweather.com\/",
        "lat": "39.767500",
        "long": "-86.002500",
        "watts": "1000",
        "xmloc": "Indianapolis,IN",
        "wfo": "Indianapolis",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KEC74",
        "radiourl": "https:\/\/wxradio.org\/IN-Indianapolis-KEC74",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC74.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Indiana",
        "stateabbr": "IN",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Boone": "Boone,&nbsp;IN(SAME&nbsp;018011)",
            "Decatur": "Decatur,&nbsp;IN(SAME&nbsp;018031)",
            "Delaware": "Delaware,&nbsp;IN(SAME&nbsp;018035)",
            "Hamilton": "Hamilton,&nbsp;IN(SAME&nbsp;018057)",
            "Hancock": "Hancock,&nbsp;IN(SAME&nbsp;018059)",
            "Hendricks": "Hendricks,&nbsp;IN(SAME&nbsp;018063)",
            "Henry": "Henry,&nbsp;IN(SAME&nbsp;018065)",
            "Johnson": "Johnson,&nbsp;IN(SAME&nbsp;018081)",
            "Madison": "Madison,&nbsp;IN(SAME&nbsp;018095)",
            "Marion": "Marion,&nbsp;IN(SAME&nbsp;018097)",
            "Morgan": "Morgan,&nbsp;IN(SAME&nbsp;018109)",
            "Rush": "Rush,&nbsp;IN(SAME&nbsp;018139)",
            "Shelby": "Shelby,&nbsp;IN(SAME&nbsp;018145)",
            "Tipton": "Tipton,&nbsp;IN(SAME&nbsp;018159)"
        }
    },
    "KEC80": {
        "call": "KEC80",
        "alt": "N",
        "loc": "Atlanta, GA",
        "freq": "162.550 MHz",
        "who": "\"Rukuriri\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "33.805250",
        "long": "-84.144333",
        "watts": "1000",
        "xmloc": "Stone Mtn.,GA",
        "wfo": "Peachtree City",
        "wxown": "KEC80",
        "radiourl": "https:\/\/wxradio.org\/GA-Atlanta-KEC80",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KEC80.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Georgia",
        "stateabbr": "GA",
        "goldstar": "",
        "samecode": {
            "Cherokee": "Cherokee,&nbsp;GA(SAME&nbsp;013057)",
            "Clayton": "Clayton,&nbsp;GA(SAME&nbsp;013063)",
            "Cobb": "Cobb,&nbsp;GA(SAME&nbsp;013067)",
            "DeKalb": "DeKalb,&nbsp;GA(SAME&nbsp;013089)",
            "Douglas": "Douglas,&nbsp;GA(SAME&nbsp;013097)",
            "Fayette": "Fayette,&nbsp;GA(SAME&nbsp;013113)",
            "Forsyth": "Forsyth,&nbsp;GA(SAME&nbsp;013117)",
            "Fulton": "Fulton,&nbsp;GA(SAME&nbsp;013121)",
            "Gwinnett": "Gwinnett,&nbsp;GA(SAME&nbsp;013135)",
            "Henry": "Henry,&nbsp;GA(SAME&nbsp;013151)",
            "Newton": "Newton,&nbsp;GA(SAME&nbsp;013217)",
            "Rockdale": "Rockdale,&nbsp;GA(SAME&nbsp;013247)",
            "Walton": "Walton,&nbsp;GA(SAME&nbsp;013297&nbsp;for&nbsp;ALL)"
        }
    },
    "KEC84": {
        "call": "KEC84",
        "loc": "New Bern, NC",
        "freq": "162.400 MHz",
        "radiourl": "https://radio.weatherusa.net/NWR/KEC84.mp3",
    },
    "KGG68": {
        "call": "KGG68",
        "alt": "N",
        "loc": "Tomball, TX",
        "freq": "162.400 MHz",
        "who": "duPreez<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "30.096400",
        "long": "-95.656400",
        "watts": "1000",
        "xmloc": "Tomball,TX",
        "wfo": "Dickinson",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KGG68",
        "radiourl": "https:\/\/wxradio.org\/TX-Tomball-KGG68",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KGG68.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Brazoria": "Brazoria,&nbsp;TX(SAME&nbsp;048039)",
            "Chambers": "Chambers,&nbsp;TX(SAME&nbsp;048071)",
            "Fort Bend": "Fort&nbsp;Bend,&nbsp;TX(SAME&nbsp;048157)",
            "Galveston": "Galveston,&nbsp;TX(SAME&nbsp;048167)",
            "Harris": "Harris,&nbsp;TX(SAME&nbsp;048201)",
            "Liberty": "Liberty,&nbsp;TX(SAME&nbsp;048291)",
            "Montgomery": "Montgomery,&nbsp;TX(SAME&nbsp;048339)",
            "Waller": "Waller,&nbsp;TX(SAME&nbsp;048473)"
        }
    },
    "KGG95": {
        "call": "KGG95",
        "alt": "N",
        "loc": "Winona, WI",
        "freq": "162.425 MHz",
        "who": "\"The Cold Front\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/thecoldfront.com\/weather\/wxradio.htm",
        "lat": "44.073900",
        "long": "-91.577500",
        "watts": "300",
        "xmloc": "Fountain City,WI",
        "wfo": "La Crosse",
        "wxown": "KGG95",
        "radiourl": "https:\/\/wxradio.org\/MN-Winona-KGG95",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KGG95.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "",
        "samecode": {
            "Winona": "Winona,&nbsp;MN(SAME&nbsp;027169)",
            "Buffalo": "Buffalo,&nbsp;WI(SAME&nbsp;055011)",
            "La Crosse": "La&nbsp;Crosse,&nbsp;WI(SAME&nbsp;055063)",
            "Trempealeau": "Trempealeau,&nbsp;WI(SAME&nbsp;055121)"
        }
    },
    "KHA53": {
        "call": "KHA53",
        "alt": "N",
        "loc": "Rochester, NY",
        "freq": "162.400 MHz",
        "who": "KHA-53 Rochester<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/kha53.blogspot.com\/",
        "lat": "43.036111",
        "long": "-77.423333",
        "watts": "500",
        "xmloc": "Baker Hill,NY",
        "wfo": "Buffalo",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KHA53",
        "radiourl": "https:\/\/wxradio.org\/NY-Rochester-KHA53",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHA53.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Cayuga": "Cayuga,&nbsp;NY(SAME&nbsp;036011)",
            "Genesee": "Genesee,&nbsp;NY(SAME&nbsp;036037&nbsp;for&nbsp;E1\/2)",
            "Livingston": "Livingston,&nbsp;NY(SAME&nbsp;036051)",
            "Monroe": "Monroe,&nbsp;NY(SAME&nbsp;036055)",
            "Ontario": "Ontario,&nbsp;NY(SAME&nbsp;036069)",
            "Orleans": "Orleans,&nbsp;NY(SAME&nbsp;036073)",
            "Seneca": "Seneca,&nbsp;NY(SAME&nbsp;036099)",
            "Wayne": "Wayne,&nbsp;NY(SAME&nbsp;036117&nbsp;for&nbsp;W1\/2)",
            "Wyoming": "Wyoming,&nbsp;NY(SAME&nbsp;036121&nbsp;for&nbsp;E1\/2)",
            "Yates": "Yates,&nbsp;NY(SAME&nbsp;036123&nbsp;for&nbsp;N1\/2)"
        }
    },
    "KHB32": {
        "call": "KHB32",
        "alt": "N",
        "loc": "Tampa Bay, FL",
        "freq": "162.550 MHz",
        "who": "Lake Fantasia Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/greylords.us\/",
        "lat": "27.840556",
        "long": "-82.263056",
        "watts": "1000",
        "xmloc": "Ruskin,FL",
        "wfo": "Ruskin",
        "wxown": "KHB32",
        "radiourl": "https:\/\/wxradio.org\/FL-TampaBay-KHB32",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB32.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Hardee": "Hardee,&nbsp;FL(SAME&nbsp;012049)",
            "Hillsborough": "Hillsborough,&nbsp;FL(SAME&nbsp;012057)",
            "Manatee": "Manatee,&nbsp;FL(SAME&nbsp;012081)",
            "Pasco": "Pasco,&nbsp;FL(SAME&nbsp;012101)",
            "Pinellas": "Pinellas,&nbsp;FL(SAME&nbsp;012103)",
            "Polk": "Polk,&nbsp;FL(SAME&nbsp;012105)"
        }
    },
    "KHB34": {
        "call": "KHB34",
        "alt": "N",
        "loc": "Miami, FL",
        "freq": "162.550 MHz",
        "who": "Courtesy of 'Ms. Lion'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "25.967861",
        "long": "-80.209333",
        "watts": "1000",
        "xmloc": "Miami\/Andover,FL",
        "wfo": "Miami",
        "wxown": "KHB34",
        "radiourl": "https:\/\/wxradio.org\/FL-Miami-KHB34",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB34.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Broward": "Broward,&nbsp;FL(SAME&nbsp;012011)",
            "Miami-Dade": "Miami-Dade,&nbsp;FL(SAME&nbsp;012086)"
        }
    },
    "KHB34-A": {
        "call": "KHB34-A",
        "alt": "N",
        "loc": "Miami, FL",
        "freq": "162.550 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/mfl\/",
        "lat": "25.967861",
        "long": "-80.209333",
        "watts": "1000",
        "xmloc": "Miami\/Andover,FL",
        "wfo": "Miami",
        "wxown": "KHB34",
        "radiourl": "https:\/\/www.weather.gov\/media\/mfl\/nwr\/MIAZFPMIA.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB34.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Broward": "Broward,&nbsp;FL(SAME&nbsp;012011)",
            "Miami-Dade": "Miami-Dade,&nbsp;FL(SAME&nbsp;012086)"
        }
    },
    "KHB36": {
        "call": "KHB36",
        "alt": "N",
        "loc": "Manassas, VA",
        "freq": "162.550 MHz",
        "who": "Clifton VA Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/cliftonvaweather.com",
        "lat": "38.628722",
        "long": "-77.438833",
        "watts": "1000",
        "xmloc": "Independent Hill,VA",
        "wfo": "Sterling",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KHB36",
        "radiourl": "https:\/\/wxradio.org\/VA-Manassas-KHB36",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB36.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Virginia",
        "stateabbr": "VA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "District of Columbia": "District&nbsp;of&nbsp;Columbia,&nbsp;DC(SAME&nbsp;011001)",
            "Calvert": "Calvert,&nbsp;MD(SAME&nbsp;024009)",
            "Charles": "Charles,&nbsp;MD(SAME&nbsp;024017)",
            "Frederick": "Frederick,&nbsp;MD(SAME&nbsp;024021)",
            "Montgomery": "Montgomery,&nbsp;MD(SAME&nbsp;024031)",
            "Prince George's": "Prince&nbsp;George's,&nbsp;MD(SAME&nbsp;024033)",
            "St. Mary's": "St.&nbsp;Mary's,&nbsp;MD(SAME&nbsp;024037&nbsp;for&nbsp;NW)",
            "Arlington": "Arlington,&nbsp;VA(SAME&nbsp;051013)",
            "City of Alexandria": "City&nbsp;of&nbsp;Alexandria,&nbsp;VA(SAME&nbsp;051510)",
            "City of Fairfax": "City&nbsp;of&nbsp;Fairfax,&nbsp;VA(SAME&nbsp;051600)",
            "City of Falls Church": "City&nbsp;of&nbsp;Falls&nbsp;Church,&nbsp;VA(SAME&nbsp;051610)",
            "City of Fredericksburg": "City&nbsp;of&nbsp;Fredericksburg,&nbsp;VA(SAME&nbsp;051630)",
            "City of Manassas Park": "City&nbsp;of&nbsp;Manassas&nbsp;Park,&nbsp;VA(SAME&nbsp;051685)",
            "City of Manassas": "City&nbsp;of&nbsp;Manassas,&nbsp;VA(SAME&nbsp;051683)",
            "Clarke": "Clarke,&nbsp;VA(SAME&nbsp;051043&nbsp;for&nbsp;SE)",
            "Culpeper": "Culpeper,&nbsp;VA(SAME&nbsp;051047)",
            "Fairfax": "Fairfax,&nbsp;VA(SAME&nbsp;051059)",
            "Fauquier": "Fauquier,&nbsp;VA(SAME&nbsp;051061)",
            "King George": "King&nbsp;George,&nbsp;VA(SAME&nbsp;051099)",
            "Loudoun": "Loudoun,&nbsp;VA(SAME&nbsp;051107)",
            "Madison": "Madison,&nbsp;VA(SAME&nbsp;051113)",
            "Orange": "Orange,&nbsp;VA(SAME&nbsp;051137&nbsp;for&nbsp;CENTRAL\/E)",
            "Page": "Page,&nbsp;VA(SAME&nbsp;051139)",
            "Prince William": "Prince&nbsp;William,&nbsp;VA(SAME&nbsp;051153)",
            "Rappahannock": "Rappahannock,&nbsp;VA(SAME&nbsp;051157)",
            "Spotsylvania": "Spotsylvania,&nbsp;VA(SAME&nbsp;051177)",
            "Stafford": "Stafford,&nbsp;VA(SAME&nbsp;051179)",
            "Warren": "Warren,&nbsp;VA(SAME&nbsp;051187&nbsp;for&nbsp;E)"
        }
    },
    "KHB36-A": {
        "call": "KHB36-A",
        "alt": "Y",
        "loc": "Manassas, VA",
        "freq": "162.550 MHz",
        "who": "mikev.com<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span> ",
        "type": "PWS",
        "wxurl": "https:\/\/mikev.com\/home\/noaa-weather-radio-feed-khb36\/",
        "lat": "38.628722",
        "long": "-77.438833",
        "watts": "1000",
        "xmloc": "Independent Hill,VA",
        "wfo": "Sterling",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KHB36",
        "radiourl": "https:\/\/stream.mikev.com\/khb36.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB36.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Virginia",
        "stateabbr": "VA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "District of Columbia": "District&nbsp;of&nbsp;Columbia,&nbsp;DC(SAME&nbsp;011001)",
            "Calvert": "Calvert,&nbsp;MD(SAME&nbsp;024009)",
            "Charles": "Charles,&nbsp;MD(SAME&nbsp;024017)",
            "Frederick": "Frederick,&nbsp;MD(SAME&nbsp;024021)",
            "Montgomery": "Montgomery,&nbsp;MD(SAME&nbsp;024031)",
            "Prince George's": "Prince&nbsp;George's,&nbsp;MD(SAME&nbsp;024033)",
            "St. Mary's": "St.&nbsp;Mary's,&nbsp;MD(SAME&nbsp;024037&nbsp;for&nbsp;NW)",
            "Arlington": "Arlington,&nbsp;VA(SAME&nbsp;051013)",
            "City of Alexandria": "City&nbsp;of&nbsp;Alexandria,&nbsp;VA(SAME&nbsp;051510)",
            "City of Fairfax": "City&nbsp;of&nbsp;Fairfax,&nbsp;VA(SAME&nbsp;051600)",
            "City of Falls Church": "City&nbsp;of&nbsp;Falls&nbsp;Church,&nbsp;VA(SAME&nbsp;051610)",
            "City of Fredericksburg": "City&nbsp;of&nbsp;Fredericksburg,&nbsp;VA(SAME&nbsp;051630)",
            "City of Manassas Park": "City&nbsp;of&nbsp;Manassas&nbsp;Park,&nbsp;VA(SAME&nbsp;051685)",
            "City of Manassas": "City&nbsp;of&nbsp;Manassas,&nbsp;VA(SAME&nbsp;051683)",
            "Clarke": "Clarke,&nbsp;VA(SAME&nbsp;051043&nbsp;for&nbsp;SE)",
            "Culpeper": "Culpeper,&nbsp;VA(SAME&nbsp;051047)",
            "Fairfax": "Fairfax,&nbsp;VA(SAME&nbsp;051059)",
            "Fauquier": "Fauquier,&nbsp;VA(SAME&nbsp;051061)",
            "King George": "King&nbsp;George,&nbsp;VA(SAME&nbsp;051099)",
            "Loudoun": "Loudoun,&nbsp;VA(SAME&nbsp;051107)",
            "Madison": "Madison,&nbsp;VA(SAME&nbsp;051113)",
            "Orange": "Orange,&nbsp;VA(SAME&nbsp;051137&nbsp;for&nbsp;CENTRAL\/E)",
            "Page": "Page,&nbsp;VA(SAME&nbsp;051139)",
            "Prince William": "Prince&nbsp;William,&nbsp;VA(SAME&nbsp;051153)",
            "Rappahannock": "Rappahannock,&nbsp;VA(SAME&nbsp;051157)",
            "Spotsylvania": "Spotsylvania,&nbsp;VA(SAME&nbsp;051177)",
            "Stafford": "Stafford,&nbsp;VA(SAME&nbsp;051179)",
            "Warren": "Warren,&nbsp;VA(SAME&nbsp;051187&nbsp;for&nbsp;E)"
        }
    },
    "KHB37": {
        "call": "KHB37",
        "alt": "N",
        "loc": "Norfolk, VA",
        "freq": "162.550 MHz",
        "who": "<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>Casey Media LLC (RDS)",
        "type": "WRO",
        "wxurl": "https:\/\/caseymediallc.com\/rdsinfo",
        "lat": "36.815556",
        "long": "-76.466667",
        "watts": "1000",
        "xmloc": "Driver,VA",
        "wfo": "Wakefield",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KHB37",
        "radiourl": "https:\/\/wxradio.org\/VA-Norfolk-KHB37",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB37.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Virginia",
        "stateabbr": "VA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Bertie": "Bertie,&nbsp;NC(SAME&nbsp;037015&nbsp;for&nbsp;NE)",
            "Camden": "Camden,&nbsp;NC(SAME&nbsp;037029)",
            "Chowan": "Chowan,&nbsp;NC(SAME&nbsp;037041)",
            "Currituck": "Currituck,&nbsp;NC(SAME&nbsp;037053)",
            "Gates": "Gates,&nbsp;NC(SAME&nbsp;037073)",
            "Hertford": "Hertford,&nbsp;NC(SAME&nbsp;037091)",
            "Northampton": "Northampton,&nbsp;VA(SAME&nbsp;051131)",
            "Pasquotank": "Pasquotank,&nbsp;NC(SAME&nbsp;037139)",
            "Perquimans": "Perquimans,&nbsp;NC(SAME&nbsp;037143)",
            "Accomack": "Accomack,&nbsp;VA(SAME&nbsp;051001)",
            "City of Chesapeake": "City&nbsp;of&nbsp;Chesapeake,&nbsp;VA(SAME&nbsp;051550)",
            "City of Franklin": "City&nbsp;of&nbsp;Franklin,&nbsp;VA(SAME&nbsp;051620)",
            "City of Hampton": "City&nbsp;of&nbsp;Hampton,&nbsp;VA(SAME&nbsp;051650)",
            "City of Newport News": "City&nbsp;of&nbsp;Newport&nbsp;News,&nbsp;VA(SAME&nbsp;051700)",
            "City of Norfolk": "City&nbsp;of&nbsp;Norfolk,&nbsp;VA(SAME&nbsp;051710)",
            "City of Poquoson": "City&nbsp;of&nbsp;Poquoson,&nbsp;VA(SAME&nbsp;051735)",
            "City of Portsmouth": "City&nbsp;of&nbsp;Portsmouth,&nbsp;VA(SAME&nbsp;051740)",
            "City of Suffolk": "City&nbsp;of&nbsp;Suffolk,&nbsp;VA(SAME&nbsp;051800)",
            "City of Virginia Beach": "City&nbsp;of&nbsp;Virginia&nbsp;Beach,&nbsp;VA(SAME&nbsp;051810)",
            "City of Williamsburg": "City&nbsp;of&nbsp;Williamsburg,&nbsp;VA(SAME&nbsp;051830)",
            "Gloucester": "Gloucester,&nbsp;VA(SAME&nbsp;051073&nbsp;for&nbsp;ExceptNW)",
            "Isle of Wight": "Isle&nbsp;of&nbsp;Wight,&nbsp;VA(SAME&nbsp;051093)",
            "James City": "James&nbsp;City,&nbsp;VA(SAME&nbsp;051095)",
            "Mathews": "Mathews,&nbsp;VA(SAME&nbsp;051115)",
            "Southampton": "Southampton,&nbsp;VA(SAME&nbsp;051175)",
            "Surry": "Surry,&nbsp;VA(SAME&nbsp;051181)",
            "Sussex": "Sussex,&nbsp;VA(SAME&nbsp;051183&nbsp;for&nbsp;SE1\/2)",
            "York": "York,&nbsp;VA(SAME&nbsp;051199)"
        }
    },
    "KHB40": {
        "call": "KHB40",
        "alt": "N",
        "loc": "Galveston, TX",
        "freq": "162.550 MHz",
        "who": "Stephen D<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "29.330000",
        "long": "-95.035556",
        "watts": "1000",
        "xmloc": "Galveston,TX",
        "wfo": "Dickinson",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KHB40",
        "radiourl": "https:\/\/wxradio.org\/TX-Galveston-KHB40",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB40.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Brazoria": "Brazoria,&nbsp;TX(SAME&nbsp;048039)",
            "Chambers": "Chambers,&nbsp;TX(SAME&nbsp;048071)",
            "Fort Bend": "Fort&nbsp;Bend,&nbsp;TX(SAME&nbsp;048157&nbsp;for&nbsp;ALL)",
            "Galveston": "Galveston,&nbsp;TX(SAME&nbsp;048167)",
            "Harris": "Harris,&nbsp;TX(SAME&nbsp;048201)"
        }
    },
    "KHB46": {
        "call": "KHB46",
        "alt": "N",
        "loc": "Baton Rouge, LA",
        "freq": "162.400 MHz",
        "who": "CMR Weather - Watson<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/cmrweather.com\/",
        "lat": "30.443333",
        "long": "-91.181667",
        "watts": "1000",
        "xmloc": "Baker,LA",
        "wfo": "Slidell",
        "wxown": "KHB46",
        "radiourl": "https:\/\/wxradio.org\/LA-BatonRouge-KHB46",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KHB46.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Louisiana",
        "stateabbr": "LA",
        "goldstar": "",
        "samecode": {
            "Ascension": "Ascension,&nbsp;LA(SAME&nbsp;022005)",
            "East Baton Rouge": "East&nbsp;Baton&nbsp;Rouge,&nbsp;LA(SAME&nbsp;022033)",
            "East Feliciana": "East&nbsp;Feliciana,&nbsp;LA(SAME&nbsp;022037)",
            "Iberville": "Iberville,&nbsp;LA(SAME&nbsp;022047)",
            "Livingston": "Livingston,&nbsp;LA(SAME&nbsp;022063)",
            "Pointe Coupee": "Pointe&nbsp;Coupee,&nbsp;LA(SAME&nbsp;022077)",
            "St. Helena": "St.&nbsp;Helena,&nbsp;LA(SAME&nbsp;022091)",
            "Tangipahoa": "Tangipahoa,&nbsp;LA(SAME&nbsp;022105)",
            "West Baton Rouge": "West&nbsp;Baton&nbsp;Rouge,&nbsp;LA(SAME&nbsp;022121)",
            "West Feliciana": "West&nbsp;Feliciana,&nbsp;LA(SAME&nbsp;022125)",
            "Wilkinson": "Wilkinson,&nbsp;MS(SAME&nbsp;028157)"
        }
    },
    "KIG65": {
        "call": "KIG65",
        "alt": "N",
        "loc": "Green Bay, WI",
        "freq": "162.550 MHz",
        "who": "De Pere Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/depereweather.com\/",
        "lat": "44.409722",
        "long": "-88.001389",
        "watts": "1000",
        "xmloc": "De Pere,WI",
        "wfo": "Green Bay",
        "wxown": "KIG65",
        "radiourl": "https:\/\/wxradio.org\/WI-GreenBay-KIG65",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIG65.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "",
        "samecode": {
            "Brown": "Brown,&nbsp;WI(SAME&nbsp;055009)",
            "Calumet": "Calumet,&nbsp;WI(SAME&nbsp;055015)",
            "Door": "Door,&nbsp;WI(SAME&nbsp;055029)",
            "Kewaunee": "Kewaunee,&nbsp;WI(SAME&nbsp;055061)",
            "Manitowoc": "Manitowoc,&nbsp;WI(SAME&nbsp;055071)",
            "Marinette": "Marinette,&nbsp;WI(SAME&nbsp;055075&nbsp;for&nbsp;S1\/2)",
            "Menominee": "Menominee,&nbsp;WI(SAME&nbsp;055078&nbsp;for&nbsp;E1\/2)",
            "Oconto": "Oconto,&nbsp;WI(SAME&nbsp;055083&nbsp;for&nbsp;SE1\/2)",
            "Outagamie": "Outagamie,&nbsp;WI(SAME&nbsp;055087)",
            "Shawano": "Shawano,&nbsp;WI(SAME&nbsp;055115&nbsp;for&nbsp;E1\/2)",
            "Winnebago": "Winnebago,&nbsp;WI(SAME&nbsp;055139)"
        }
    },
    "KIG76": {
        "call": "KIG76",
        "alt": "N",
        "loc": "Evansville, IN",
        "freq": "162.550 MHz",
        "who": "Radio2Way Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span> ",
        "type": "WRO",
        "wxurl": "https:\/\/www.radio2way.net",
        "lat": "38.180000",
        "long": "-87.486944",
        "watts": "1000",
        "xmloc": "Fort Branch,IN",
        "wfo": "Paducah",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KIG76",
        "radiourl": "https:\/\/wxradio.org\/IN-Evansville-KIG76",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIG76.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Indiana",
        "stateabbr": "IN",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Edwards": "Edwards,&nbsp;IL(SAME&nbsp;017047)",
            "Wabash": "Wabash,&nbsp;IL(SAME&nbsp;017185)",
            "White": "White,&nbsp;IL(SAME&nbsp;017193)",
            "Dubois": "Dubois,&nbsp;IN(SAME&nbsp;018037)",
            "Gibson": "Gibson,&nbsp;IN(SAME&nbsp;018051)",
            "Perry": "Perry,&nbsp;IN(SAME&nbsp;018123)",
            "Pike": "Pike,&nbsp;IN(SAME&nbsp;018125)",
            "Posey": "Posey,&nbsp;IN(SAME&nbsp;018129)",
            "Spencer": "Spencer,&nbsp;IN(SAME&nbsp;018147)",
            "Vanderburgh": "Vanderburgh,&nbsp;IN(SAME&nbsp;018163)",
            "Warrick": "Warrick,&nbsp;IN(SAME&nbsp;018173)",
            "Henderson": "Henderson,&nbsp;KY(SAME&nbsp;021101)",
            "Union": "Union,&nbsp;KY(SAME&nbsp;021225)"
        }
    },
    "KIG86": {
        "call": "KIG86",
        "alt": "N",
        "loc": "Columbus, OH",
        "freq": "162.550 MHz",
        "who": "Fairfield County Weather <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/fairfieldcountyweather.com",
        "lat": "39.963100",
        "long": "-82.999400",
        "watts": "1000",
        "xmloc": "Columbus,OH",
        "wfo": "Wilmington",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KIG86",
        "radiourl": "https:\/\/wxradio.org\/OH-Columbus-KIG86",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIG86.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Ohio",
        "stateabbr": "OH",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Champaign": "Champaign,&nbsp;OH(SAME&nbsp;039021&nbsp;for&nbsp;E)",
            "Clark": "Clark,&nbsp;OH(SAME&nbsp;039023&nbsp;for&nbsp;E)",
            "Delaware": "Delaware,&nbsp;OH(SAME&nbsp;039041)",
            "Fairfield": "Fairfield,&nbsp;OH(SAME&nbsp;039045)",
            "Fayette": "Fayette,&nbsp;OH(SAME&nbsp;039047)",
            "Franklin": "Franklin,&nbsp;OH(SAME&nbsp;039049)",
            "Greene": "Greene,&nbsp;OH(SAME&nbsp;039057)",
            "Hocking": "Hocking,&nbsp;OH(SAME&nbsp;039073)",
            "Knox": "Knox,&nbsp;OH(SAME&nbsp;039083&nbsp;for&nbsp;SW1\/2)",
            "Licking": "Licking,&nbsp;OH(SAME&nbsp;039089)",
            "Madison": "Madison,&nbsp;OH(SAME&nbsp;039097)",
            "Marion": "Marion,&nbsp;OH(SAME&nbsp;039101)",
            "Morrow": "Morrow,&nbsp;OH(SAME&nbsp;039117&nbsp;for&nbsp;CENTRAL\/S)",
            "Muskingum": "Muskingum,&nbsp;OH(SAME&nbsp;039119&nbsp;for&nbsp;W)",
            "Perry": "Perry,&nbsp;OH(SAME&nbsp;039127)",
            "Pickaway": "Pickaway,&nbsp;OH(SAME&nbsp;039129)",
            "Union": "Union,&nbsp;OH(SAME&nbsp;039159&nbsp;for&nbsp;SE1\/2)"
        }
    },
    "KIH24": {
        "call": "KIH24",
        "alt": "N",
        "loc": "Tallahassee, FL",
        "freq": "162.400 MHz",
        "who": "Alan L.<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "30.566667",
        "long": "-84.043889",
        "watts": "1000",
        "xmloc": "Tallahassee,FL",
        "wfo": "Tallahassee",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KIH24",
        "radiourl": "https:\/\/wxradio.org\/FL-Tallahassee-KIH24",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH24.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Franklin": "Franklin,&nbsp;FL(SAME&nbsp;012037)",
            "Gadsden": "Gadsden,&nbsp;FL(SAME&nbsp;012039)",
            "Jefferson": "Jefferson,&nbsp;FL(SAME&nbsp;012065)",
            "Leon": "Leon,&nbsp;FL(SAME&nbsp;012073)",
            "Liberty": "Liberty,&nbsp;FL(SAME&nbsp;012077)",
            "Madison": "Madison,&nbsp;FL(SAME&nbsp;012079)",
            "Taylor": "Taylor,&nbsp;FL(SAME&nbsp;012123)",
            "Wakulla": "Wakulla,&nbsp;FL(SAME&nbsp;012129)",
            "Brooks": "Brooks,&nbsp;GA(SAME&nbsp;013027)",
            "Decatur": "Decatur,&nbsp;GA(SAME&nbsp;013087)",
            "Grady": "Grady,&nbsp;GA(SAME&nbsp;013131)",
            "Thomas": "Thomas,&nbsp;GA(SAME&nbsp;013275)"
        }
    },
    "KIH24-A": {
        "call": "KIH24-A",
        "alt": "Y",
        "loc": "Tallahassee, FL",
        "freq": "162.400 MHz",
        "who": "Anonymous<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "30.566667",
        "long": "-84.043889",
        "watts": "1000",
        "xmloc": "Tallahassee,FL",
        "wfo": "Tallahassee",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KIH24",
        "radiourl": "https:\/\/wxradio.org\/FL-Tallahassee-KIH24-alt",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH24.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Franklin": "Franklin,&nbsp;FL(SAME&nbsp;012037)",
            "Gadsden": "Gadsden,&nbsp;FL(SAME&nbsp;012039)",
            "Jefferson": "Jefferson,&nbsp;FL(SAME&nbsp;012065)",
            "Leon": "Leon,&nbsp;FL(SAME&nbsp;012073)",
            "Liberty": "Liberty,&nbsp;FL(SAME&nbsp;012077)",
            "Madison": "Madison,&nbsp;FL(SAME&nbsp;012079)",
            "Taylor": "Taylor,&nbsp;FL(SAME&nbsp;012123)",
            "Wakulla": "Wakulla,&nbsp;FL(SAME&nbsp;012129)",
            "Brooks": "Brooks,&nbsp;GA(SAME&nbsp;013027)",
            "Decatur": "Decatur,&nbsp;GA(SAME&nbsp;013087)",
            "Grady": "Grady,&nbsp;GA(SAME&nbsp;013131)",
            "Thomas": "Thomas,&nbsp;GA(SAME&nbsp;013275)"
        }
    },
    "KIH28": {
        "call": "KIH28",
        "alt": "N",
        "loc": "Philadelphia, PA",
        "freq": "162.475 MHz",
        "who": "\"Christian G\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "39.951700",
        "long": "-75.160833",
        "watts": "1000",
        "xmloc": "Philadelphia,PA",
        "wfo": "Mount Holly",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KIH28",
        "radiourl": "https:\/\/wxradio.org\/PA-Philadelphia-KIH28",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH28.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Pennsylvania",
        "stateabbr": "PA",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "New Castle": "New&nbsp;Castle,&nbsp;DE(SAME&nbsp;010003&nbsp;for&nbsp;NORTH)",
            "Cecil": "Cecil,&nbsp;MD(SAME&nbsp;024015&nbsp;for&nbsp;NE)",
            "Burlington": "Burlington,&nbsp;NJ(SAME&nbsp;034005&nbsp;for&nbsp;W)",
            "Camden": "Camden,&nbsp;NJ(SAME&nbsp;034007)",
            "Cumberland": "Cumberland,&nbsp;NJ(SAME&nbsp;034011&nbsp;for&nbsp;N)",
            "Gloucester": "Gloucester,&nbsp;NJ(SAME&nbsp;034015)",
            "Hunterdon": "Hunterdon,&nbsp;NJ(SAME&nbsp;034019)",
            "Mercer": "Mercer,&nbsp;NJ(SAME&nbsp;034021&nbsp;for&nbsp;S\/CENTRAL)",
            "Monmouth": "Monmouth,&nbsp;NJ(SAME&nbsp;034025)",
            "Salem": "Salem,&nbsp;NJ(SAME&nbsp;034033)",
            "Bucks": "Bucks,&nbsp;PA(SAME&nbsp;042017&nbsp;for&nbsp;S\/CENTRAL)",
            "Chester": "Chester,&nbsp;PA(SAME&nbsp;042029&nbsp;for&nbsp;EXCEPTW)",
            "Delaware": "Delaware,&nbsp;PA(SAME&nbsp;042045)",
            "Montgomery": "Montgomery,&nbsp;PA(SAME&nbsp;042091&nbsp;for&nbsp;NOTNW&nbsp;TIP)",
            "Philadelphia": "Philadelphia,&nbsp;PA(SAME&nbsp;042101)"
        }
    },
    "KIH31": {
        "call": "KIH31",
        "alt": "N",
        "loc": "San Luis Obispo, CA",
        "freq": "162.550 MHz",
        "who": "\"Max L\" <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "35.360694",
        "long": "-120.656972",
        "watts": "330",
        "xmloc": "Cuesta Peak,CA",
        "wfo": "Oxnard",
        "wxown": "KIH31",
        "radiourl": "https:\/\/wxradio.org\/CA-SLO-KIH31",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH31.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "California",
        "stateabbr": "CA",
        "goldstar": "",
        "samecode": {
            "San Luis Obispo": "San&nbsp;Luis&nbsp;Obispo,&nbsp;CA(SAME&nbsp;006079)"
        }
    },
    "KIH35": {
        "call": "KIH35",
        "alt": "N",
        "loc": "Pittsburgh, PA",
        "freq": "162.550 MHz",
        "who": "\"Antonio C.\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.446556",
        "long": "-79.963806",
        "watts": "1000",
        "xmloc": "Pittsburgh,PA",
        "wfo": "Coraopolis",
        "wxown": "KIH35",
        "radiourl": "https:\/\/wxradio.org\/PA-Pittsburgh-KIH35",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH35.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Pennsylvania",
        "stateabbr": "PA",
        "goldstar": "",
        "samecode": {
            "Columbiana": "Columbiana,&nbsp;OH(SAME&nbsp;039029&nbsp;for&nbsp;E)",
            "Allegheny": "Allegheny,&nbsp;PA(SAME&nbsp;042003)",
            "Armstrong": "Armstrong,&nbsp;PA(SAME&nbsp;042005&nbsp;for&nbsp;ExceptNE)",
            "Beaver": "Beaver,&nbsp;PA(SAME&nbsp;042007)",
            "Butler": "Butler,&nbsp;PA(SAME&nbsp;042019&nbsp;for&nbsp;ExceptN)",
            "Fayette": "Fayette,&nbsp;PA(SAME&nbsp;042051&nbsp;for&nbsp;NW1\/2)",
            "Greene": "Greene,&nbsp;PA(SAME&nbsp;042059&nbsp;for&nbsp;NE1\/2)",
            "Indiana": "Indiana,&nbsp;PA(SAME&nbsp;042063&nbsp;for&nbsp;SW)",
            "Lawrence": "Lawrence,&nbsp;PA(SAME&nbsp;042073&nbsp;for&nbsp;SE)",
            "Washington": "Washington,&nbsp;PA(SAME&nbsp;042125)",
            "Westmoreland": "Westmoreland,&nbsp;PA(SAME&nbsp;042129&nbsp;for&nbsp;ExceptE)",
            "Brooke": "Brooke,&nbsp;WV(SAME&nbsp;054009)",
            "Hancock": "Hancock,&nbsp;WV(SAME&nbsp;054029)",
            "Marshall": "Marshall,&nbsp;WV(SAME&nbsp;054051)",
            "Ohio": "Ohio,&nbsp;WV(SAME&nbsp;054069)"
        }
    },
    "KIH42": {
        "call": "KIH42",
        "alt": "N",
        "loc": "Covington, KY",
        "freq": "162.550 MHz",
        "who": "\"Zachary W\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "39.030556",
        "long": "-84.506389",
        "watts": "1000",
        "xmloc": "Covington,KY",
        "wfo": "Wilmington",
        "wxown": "KIH42",
        "radiourl": "https:\/\/wxradio.org\/KY-Covington-KIH42",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH42.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Kentucky",
        "stateabbr": "KY",
        "goldstar": "",
        "samecode": {
            "Dearborn": "Dearborn,&nbsp;IN(SAME&nbsp;018029)",
            "Fayette": "Fayette,&nbsp;IN(SAME&nbsp;018041)",
            "Franklin": "Franklin,&nbsp;IN(SAME&nbsp;018047)",
            "Ohio": "Ohio,&nbsp;IN(SAME&nbsp;018115)",
            "Ripley": "Ripley,&nbsp;IN(SAME&nbsp;018137)",
            "Switzerland": "Switzerland,&nbsp;IN(SAME&nbsp;018155)",
            "Union": "Union,&nbsp;IN(SAME&nbsp;018161)",
            "Boone": "Boone,&nbsp;KY(SAME&nbsp;021015)",
            "Bracken": "Bracken,&nbsp;KY(SAME&nbsp;021023)",
            "Campbell": "Campbell,&nbsp;KY(SAME&nbsp;021037)",
            "Carroll": "Carroll,&nbsp;KY(SAME&nbsp;021041)",
            "Gallatin": "Gallatin,&nbsp;KY(SAME&nbsp;021077)",
            "Grant": "Grant,&nbsp;KY(SAME&nbsp;021081)",
            "Kenton": "Kenton,&nbsp;KY(SAME&nbsp;021117)",
            "Mason": "Mason,&nbsp;KY(SAME&nbsp;021161)",
            "Owen": "Owen,&nbsp;KY(SAME&nbsp;021187)",
            "Pendleton": "Pendleton,&nbsp;KY(SAME&nbsp;021191)",
            "Robertson": "Robertson,&nbsp;KY(SAME&nbsp;021201)",
            "Brown": "Brown,&nbsp;OH(SAME&nbsp;039015)",
            "Butler": "Butler,&nbsp;OH(SAME&nbsp;039017)",
            "Clermont": "Clermont,&nbsp;OH(SAME&nbsp;039025)",
            "Clinton": "Clinton,&nbsp;OH(SAME&nbsp;039027&nbsp;for&nbsp;W1\/2)",
            "Hamilton": "Hamilton,&nbsp;OH(SAME&nbsp;039061)",
            "Highland": "Highland,&nbsp;OH(SAME&nbsp;039071&nbsp;for&nbsp;W1\/3)",
            "Warren": "Warren,&nbsp;OH(SAME&nbsp;039165)"
        }
    },
    "KIH61": {
        "call": "KIH61",
        "alt": "N",
        "loc": "Omaha, NE",
        "freq": "162.400 MHz",
        "who": "ChappelleWeather.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/chappelleweather.com",
        "lat": "41.257722",
        "long": "-96.009333",
        "watts": "1000",
        "xmloc": "Omaha,NE",
        "wfo": "Valley",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KIH61",
        "radiourl": "https:\/\/wxradio.org\/NE-Omaha-KIH61",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH61.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Nebraska",
        "stateabbr": "NE",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Harrison": "Harrison,&nbsp;IA(SAME&nbsp;019085)",
            "Mills": "Mills,&nbsp;IA(SAME&nbsp;019129)",
            "Pottawattamie": "Pottawattamie,&nbsp;IA(SAME&nbsp;019155)",
            "Burt": "Burt,&nbsp;NE(SAME&nbsp;031021)",
            "Cass": "Cass,&nbsp;NE(SAME&nbsp;031025)",
            "Dodge": "Dodge,&nbsp;NE(SAME&nbsp;031053)",
            "Douglas": "Douglas,&nbsp;NE(SAME&nbsp;031055)",
            "Otoe": "Otoe,&nbsp;NE(SAME&nbsp;031131)",
            "Sarpy": "Sarpy,&nbsp;NE(SAME&nbsp;031153)",
            "Saunders": "Saunders,&nbsp;NE(SAME&nbsp;031155)",
            "Washington": "Washington,&nbsp;NE(SAME&nbsp;031177)"
        }
    },
    "KIH61-A": {
        "call": "KIH61-A",
        "alt": "Y",
        "loc": "Omaha, NE",
        "freq": "162.400 MHz",
        "who": "ChappelleWeather.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/chappelleweather.com",
        "lat": "41.257722",
        "long": "-96.009333",
        "watts": "1000",
        "xmloc": "Omaha,NE",
        "wfo": "Valley",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KIH61",
        "radiourl": "https:\/\/wxradio.org\/NE-Omaha-KIH61-A",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH61.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Nebraska",
        "stateabbr": "NE",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Harrison": "Harrison,&nbsp;IA(SAME&nbsp;019085)",
            "Mills": "Mills,&nbsp;IA(SAME&nbsp;019129)",
            "Pottawattamie": "Pottawattamie,&nbsp;IA(SAME&nbsp;019155)",
            "Burt": "Burt,&nbsp;NE(SAME&nbsp;031021)",
            "Cass": "Cass,&nbsp;NE(SAME&nbsp;031025)",
            "Dodge": "Dodge,&nbsp;NE(SAME&nbsp;031053)",
            "Douglas": "Douglas,&nbsp;NE(SAME&nbsp;031055)",
            "Otoe": "Otoe,&nbsp;NE(SAME&nbsp;031131)",
            "Sarpy": "Sarpy,&nbsp;NE(SAME&nbsp;031153)",
            "Saunders": "Saunders,&nbsp;NE(SAME&nbsp;031155)",
            "Washington": "Washington,&nbsp;NE(SAME&nbsp;031177)"
        }
    },
    "KIH62": {
        "call": "KIH62",
        "alt": "N",
        "loc": "Fresno, CA",
        "freq": "162.400 MHz",
        "who": "\"RadioactiveGirl00\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.youtube.com\/channel\/UC2QiLM2MqH9Fawt7XfsZXHA",
        "lat": "36.745833",
        "long": "-119.281389",
        "watts": "300",
        "xmloc": "Bear Mtn.,CA",
        "wfo": "Hanford",
        "wxown": "KIH62",
        "radiourl": "https:\/\/wxradio.org\/CA-Fresno-KIH62",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KIH62.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "California",
        "stateabbr": "CA",
        "goldstar": "",
        "samecode": {
            "Fresno": "Fresno,&nbsp;CA(SAME&nbsp;006019&nbsp;for&nbsp;W)",
            "Kern": "Kern,&nbsp;CA(SAME&nbsp;006029&nbsp;for&nbsp;NW)",
            "Kings": "Kings,&nbsp;CA(SAME&nbsp;006031)",
            "Madera": "Madera,&nbsp;CA(SAME&nbsp;006039&nbsp;for&nbsp;W)",
            "Mariposa": "Mariposa,&nbsp;CA(SAME&nbsp;006043&nbsp;for&nbsp;SW)",
            "Merced": "Merced,&nbsp;CA(SAME&nbsp;006047)",
            "Tulare": "Tulare,&nbsp;CA(SAME&nbsp;006107&nbsp;for&nbsp;W)"
        }
    },
    "KPS509": {
        "call": "KPS509",
        "alt": "N",
        "loc": "Salmon, ID",
        "freq": "162.500 MHz",
        "who": "Boise State Public Radio<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/boisestatepublicradio.org\/term\/environment",
        "lat": "45.145278",
        "long": "-114.008333",
        "watts": "100",
        "xmloc": "Mt Baldy,ID",
        "wfo": "Missoula",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KPS509",
        "radiourl": "https:\/\/icy3.boisestatepublicradio.org:9018\/KPS509_Salmon",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KPS509.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Idaho",
        "stateabbr": "ID",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Lemhi": "Lemhi,&nbsp;ID(SAME&nbsp;016059)"
        }
    },
    "KWN34": {
        "call": "KWN34",
        "alt": "N",
        "loc": "Palestine, TX",
        "freq": "162.450 MHz",
        "who": "Doc Deason<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.facebook.com\/docdeasonweather",
        "lat": "31.717806",
        "long": "-95.649667",
        "watts": "1000",
        "xmloc": "Palestine,TX",
        "wfo": "Fort Worth",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KWN34",
        "radiourl": "https:\/\/wxradio.org\/TX-Palestine-KWN34",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KWN34.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Anderson": "Anderson,&nbsp;TX(SAME&nbsp;048001)",
            "Cherokee": "Cherokee,&nbsp;TX(SAME&nbsp;048073)",
            "Freestone": "Freestone,&nbsp;TX(SAME&nbsp;048161)",
            "Henderson": "Henderson,&nbsp;TX(SAME&nbsp;048213)",
            "Houston": "Houston,&nbsp;TX(SAME&nbsp;048225)",
            "Leon": "Leon,&nbsp;TX(SAME&nbsp;048289)",
            "Navarro": "Navarro,&nbsp;TX(SAME&nbsp;048349)"
        }
    },
    "KXI41": {
        "call": "KXI41",
        "alt": "N",
        "loc": "Crystal Lake, IL",
        "freq": "162.500 MHz",
        "who": "Benjicat 33<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.youtube.com\/channel\/UCoyUbZt31StnDenGDBNJqaw",
        "lat": "42.259444",
        "long": "-88.362500",
        "watts": "300",
        "xmloc": "Crystal Lake,IL",
        "wfo": "Romeoville",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KXI41",
        "radiourl": "https:\/\/wxradio.org\/IL-CrystalLake-KXI41",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KXI41.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Boone": "Boone,&nbsp;IL(SAME&nbsp;017007)",
            "Cook": "Cook,&nbsp;IL(SAME&nbsp;017031)",
            "Kane": "Kane,&nbsp;IL(SAME&nbsp;017089)",
            "Lake": "Lake,&nbsp;IL(SAME&nbsp;017097)",
            "McHenry": "McHenry,&nbsp;IL(SAME&nbsp;017111)",
            "Kenosha": "Kenosha,&nbsp;WI(SAME&nbsp;055059)",
            "Walworth": "Walworth,&nbsp;WI(SAME&nbsp;055127)"
        }
    },
    "KXI86": {
        "call": "KXI86",
        "alt": "N",
        "loc": "Crescent City, IL",
        "freq": "162.500 MHz",
        "who": "Anonymous<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.717800",
        "long": "-87.860000",
        "watts": "300",
        "xmloc": "Crescent City,IL",
        "wfo": "Romeoville",
        "wxown": "KXI86",
        "radiourl": "https:\/\/wxradio.org\/IL-CrescentCity-KXI86",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KXI86.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "",
        "samecode": {
            "Ford": "Ford,&nbsp;IL(SAME&nbsp;017053)",
            "Iroquois": "Iroquois,&nbsp;IL(SAME&nbsp;017075)",
            "Kankakee": "Kankakee,&nbsp;IL(SAME&nbsp;017091)",
            "Vermilion": "Vermilion,&nbsp;IL(SAME&nbsp;017183)",
            "Benton": "Benton,&nbsp;IN(SAME&nbsp;018007)",
            "Newton": "Newton,&nbsp;IN(SAME&nbsp;018111)"
        }
    },
    "KXI97": {
        "call": "KXI97",
        "alt": "N",
        "loc": "Mena, AR",
        "freq": "162.400 MHz",
        "who": "KAWX<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "COM",
        "wxurl": "https:\/\/kawx.org\/forecast",
        "lat": "34.454500",
        "long": "-94.143333",
        "watts": "300",
        "xmloc": "Eagle Mtn.\/Bald Knob,AR",
        "wfo": "North Little Rock",
        "wxown": "KXI97",
        "radiourl": "https:\/\/ice41.securenetsystems.net\/NOAA",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KXI97.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Arkansas",
        "stateabbr": "AR",
        "goldstar": "",
        "samecode": {
            "Hempstead": "Hempstead,&nbsp;AR(SAME&nbsp;005057)",
            "Howard": "Howard,&nbsp;AR(SAME&nbsp;005061)",
            "Little River": "Little&nbsp;River,&nbsp;AR(SAME&nbsp;005081)",
            "Montgomery": "Montgomery,&nbsp;AR(SAME&nbsp;005097)",
            "Pike": "Pike,&nbsp;AR(SAME&nbsp;005109)",
            "Polk": "Polk,&nbsp;AR(SAME&nbsp;005113)",
            "Scott": "Scott,&nbsp;AR(SAME&nbsp;005127)",
            "Sevier": "Sevier,&nbsp;AR(SAME&nbsp;005133)",
            "McCurtain": "McCurtain,&nbsp;OK(SAME&nbsp;040089)"
        }
    },
    "KZZ29": {
        "call": "KZZ29",
        "alt": "N",
        "loc": "Coleraine, MN",
        "freq": "162.400 MHz",
        "who": "Bemidji Minnesota WX<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/bemidjiwx.org\/",
        "lat": "47.291389",
        "long": "-93.481944",
        "watts": "1000",
        "xmloc": "Grand Rapids,MN",
        "wfo": "Duluth",
        "wxown": "KZZ29",
        "radiourl": "https:\/\/wxradio.org\/MN-Coleraine-KZZ29",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ29.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "",
        "samecode": {
            "Aitkin": "Aitkin,&nbsp;MN(SAME&nbsp;227001&nbsp;for&nbsp;NORTH1\/2)",
            "Cass": "Cass,&nbsp;MN(SAME&nbsp;227021&nbsp;for&nbsp;NORTH)",
            "Itasca": "Itasca,&nbsp;MN(SAME&nbsp;827061&nbsp;for&nbsp;SOUTH)",
            "St. Louis": "St.&nbsp;Louis,&nbsp;MN(SAME&nbsp;427137&nbsp;for&nbsp;WESTCENTRAL)"
        }
    },
    "KZZ33": {
        "call": "KZZ33",
        "alt": "N",
        "loc": "Mount Pleasant, MI",
        "freq": "162.525 MHz",
        "who": "HerseyWeather.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/herseyweather.com",
        "lat": "43.575833",
        "long": "-84.774722",
        "watts": "1000",
        "xmloc": "Mount Pleasant,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KZZ33",
        "radiourl": "https:\/\/wxradio.org\/MI-MountPleasant-KZZ33",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ33.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Clare": "Clare,&nbsp;MI(SAME&nbsp;026035)",
            "Gratiot": "Gratiot,&nbsp;MI(SAME&nbsp;026057)",
            "Isabella": "Isabella,&nbsp;MI(SAME&nbsp;026073)",
            "Mecosta": "Mecosta,&nbsp;MI(SAME&nbsp;026107)",
            "Midland": "Midland,&nbsp;MI(SAME&nbsp;026111)",
            "Montcalm": "Montcalm,&nbsp;MI(SAME&nbsp;026117)",
            "Osceola": "Osceola,&nbsp;MI(SAME&nbsp;026133)"
        }
    },
    "KZZ33-A": {
        "call": "KZZ33-A",
        "alt": "Y",
        "loc": "Mount Pleasant, MI",
        "freq": "162.525 MHz",
        "who": "HerseyWeather.com<span style=\"padding-left:12px;color:#008a80\">*3P*<\/span>",
        "type": "PWS",
        "wxurl": "http:\/\/herseyweather.com",
        "lat": "43.575833",
        "long": "-84.774722",
        "watts": "1000",
        "xmloc": "Mount Pleasant,MI",
        "wfo": "Grand Rapids",
        "wxown": "KZZ33",
        "radiourl": "https:\/\/noaaradio.herseyweather.com\/MI-MountPleasant-KZZ33-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ33.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "",
        "samecode": {
            "Clare": "Clare,&nbsp;MI(SAME&nbsp;026035)",
            "Gratiot": "Gratiot,&nbsp;MI(SAME&nbsp;026057)",
            "Isabella": "Isabella,&nbsp;MI(SAME&nbsp;026073)",
            "Mecosta": "Mecosta,&nbsp;MI(SAME&nbsp;026107)",
            "Midland": "Midland,&nbsp;MI(SAME&nbsp;026111)",
            "Montcalm": "Montcalm,&nbsp;MI(SAME&nbsp;026117)",
            "Osceola": "Osceola,&nbsp;MI(SAME&nbsp;026133)"
        }
    },
    "KZZ48": {
        "call": "KZZ48",
        "alt": "N",
        "loc": "Owenton, KY",
        "freq": "162.450 MHz",
        "who": "Frankfort Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/frankfortweather.us\/",
        "lat": "38.525556",
        "long": "-84.811111",
        "watts": "300",
        "xmloc": "Owenton,KY",
        "wfo": "Wilmington",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KZZ48",
        "radiourl": "https:\/\/wxradio.org\/KY-Owenton-KZZ48",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ48.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Kentucky",
        "stateabbr": "KY",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Switzerland": "Switzerland,&nbsp;IN(SAME&nbsp;018155)",
            "Carroll": "Carroll,&nbsp;KY(SAME&nbsp;021041)",
            "Franklin": "Franklin,&nbsp;KY(SAME&nbsp;021073)",
            "Gallatin": "Gallatin,&nbsp;KY(SAME&nbsp;021077)",
            "Grant": "Grant,&nbsp;KY(SAME&nbsp;021081)",
            "Harrison": "Harrison,&nbsp;KY(SAME&nbsp;021097)",
            "Henry": "Henry,&nbsp;KY(SAME&nbsp;021103)",
            "Owen": "Owen,&nbsp;KY(SAME&nbsp;021187)",
            "Pendleton": "Pendleton,&nbsp;KY(SAME&nbsp;021191)",
            "Scott": "Scott,&nbsp;KY(SAME&nbsp;021209)",
            "Shelby": "Shelby,&nbsp;KY(SAME&nbsp;021211)"
        }
    },
    "KZZ57": {
        "call": "KZZ57",
        "alt": "N",
        "loc": "Rockford, IL",
        "freq": "162.475 MHz",
        "who": "Benjicat 33<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.youtube.com\/channel\/UCoyUbZt31StnDenGDBNJqaw",
        "lat": "42.367200",
        "long": "-89.086900",
        "watts": "1000",
        "xmloc": "Latham Park,IL",
        "wfo": "Romeoville",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KZZ57",
        "radiourl": "https:\/\/wxradio.org\/IL-Rockford-KZZ57",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ57.gif",
        "logo": "./ajax-images/NWR150MARQ.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Boone": "Boone,&nbsp;IL(SAME&nbsp;017007)",
            "DeKalb": "DeKalb,&nbsp;IL(SAME&nbsp;017037)",
            "Lee": "Lee,&nbsp;IL(SAME&nbsp;017103)",
            "Ogle": "Ogle,&nbsp;IL(SAME&nbsp;017141)",
            "Stephenson": "Stephenson,&nbsp;IL(SAME&nbsp;017177)",
            "Winnebago": "Winnebago,&nbsp;IL(SAME&nbsp;017201)",
            "Green": "Green,&nbsp;WI(SAME&nbsp;055045)",
            "Rock": "Rock,&nbsp;WI(SAME&nbsp;055105)"
        }
    },
    "KZZ58": {
        "call": "KZZ58",
        "alt": "N",
        "loc": "Kankakee, IL",
        "freq": "162.525 MHz",
        "who": "Olivet Nazarene University and Shine.FM<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/shine.fm",
        "lat": "41.077500",
        "long": "-87.756111",
        "watts": "300",
        "xmloc": "Aroma Park,IL",
        "wfo": "Romeoville",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KZZ58",
        "radiourl": "https:\/\/wxradio.org\/IL-Kankakee-KZZ58",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ58.gif",
        "logo": "./ajax-images/NWR150MARQ.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Iroquois": "Iroquois,&nbsp;IL(SAME&nbsp;017075)",
            "Kankakee": "Kankakee,&nbsp;IL(SAME&nbsp;017091)",
            "Will": "Will,&nbsp;IL(SAME&nbsp;017197)",
            "Lake": "Lake,&nbsp;IN(SAME&nbsp;018089)",
            "Newton": "Newton,&nbsp;IN(SAME&nbsp;018111)"
        }
    },
    "KZZ65": {
        "call": "KZZ65",
        "alt": "N",
        "loc": "Bloomington, IL",
        "freq": "162.525 MHz",
        "who": "'BloomingtonWX'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.476111",
        "long": "-89.033889",
        "watts": "300",
        "xmloc": "Bloomington Heights,IL",
        "wfo": "Lincoln",
        "wxown": "KZZ65",
        "radiourl": "https:\/\/wxradio.org\/IL-Bloomington-KZZ65",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ65.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "",
        "samecode": {
            "De Witt": "De&nbsp;Witt,&nbsp;IL(SAME&nbsp;017039&nbsp;for&nbsp;ALL)",
            "McLean": "McLean,&nbsp;IL(SAME&nbsp;017113)",
            "Tazewell": "Tazewell,&nbsp;IL(SAME&nbsp;017179)",
            "Woodford": "Woodford,&nbsp;IL(SAME&nbsp;017203)"
        }
    },
    "KZZ66": {
        "call": "KZZ66",
        "alt": "N",
        "loc": "Galesburg, IL",
        "freq": "162.400 MHz",
        "who": "\"Tim Y.\"  KT9Y<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span> ",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.988056",
        "long": "-90.317778",
        "watts": "300",
        "xmloc": "Galesburg,IL",
        "wfo": "Lincoln",
        "wxown": "KZZ66",
        "radiourl": "https:\/\/wxradio.org\/IL-Galesburg-KZZ66",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ66.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "",
        "samecode": {
            "Henry": "Henry,&nbsp;IL(SAME&nbsp;017073&nbsp;for&nbsp;SOUTHHALF)",
            "Knox": "Knox,&nbsp;IL(SAME&nbsp;017095)",
            "Mercer": "Mercer,&nbsp;IL(SAME&nbsp;017131&nbsp;for&nbsp;EASTHALF)",
            "Warren": "Warren,&nbsp;IL(SAME&nbsp;017187)"
        }
    },
    "KZZ77": {
        "call": "KZZ77",
        "alt": "N",
        "loc": "Withee, WI",
        "freq": "162.425 MHz",
        "who": "Anonymous <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "44.914167",
        "long": "-90.657222",
        "watts": "1000",
        "xmloc": "Withee,WI",
        "wfo": "La Crosse",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>KZZ77",
        "radiourl": "https:\/\/wxradio.org\/WI-Withee-KZZ77",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ77.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Chippewa": "Chippewa,&nbsp;WI(SAME&nbsp;055017)",
            "Clark": "Clark,&nbsp;WI(SAME&nbsp;055019)",
            "Eau Claire": "Eau&nbsp;Claire,&nbsp;WI(SAME&nbsp;055035)",
            "Marathon": "Marathon,&nbsp;WI(SAME&nbsp;055073)",
            "Rusk": "Rusk,&nbsp;WI(SAME&nbsp;055107)",
            "Taylor": "Taylor,&nbsp;WI(SAME&nbsp;055119)",
            "Wood": "Wood,&nbsp;WI(SAME&nbsp;055141)"
        }
    },
    "KZZ78": {
        "call": "KZZ78",
        "alt": "N",
        "loc": "Ashland, WI",
        "freq": "162.525 MHz",
        "who": "Anonymous <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "46.608056",
        "long": "-90.836944",
        "watts": "1000",
        "xmloc": "Ashland,WI",
        "wfo": "Duluth",
        "wxown": "KZZ78",
        "radiourl": "https:\/\/wxradio.org\/WI-Ashland-KZZ78",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ78.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "",
        "samecode": {
            "Gogebic": "Gogebic,&nbsp;MI(SAME&nbsp;026053)",
            "Ashland": "Ashland,&nbsp;WI(SAME&nbsp;055003)",
            "Bayfield": "Bayfield,&nbsp;WI(SAME&nbsp;055007)",
            "Iron": "Iron,&nbsp;WI(SAME&nbsp;055051)"
        }
    },
    "KZZ80": {
        "call": "KZZ80",
        "alt": "N",
        "loc": "Milford, IA",
        "freq": "162.550 MHz",
        "who": "Dickinson County Emergency Management<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.dcem.us\/",
        "lat": "43.343083",
        "long": "-95.207889",
        "watts": "300",
        "xmloc": "Milford,IA",
        "wfo": "Sioux Falls",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>KZZ80",
        "radiourl": "https:\/\/wxradio.org\/IA-Milford-KZZ80",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/KZZ80.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Iowa",
        "stateabbr": "IA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Clay": "Clay,&nbsp;IA(SAME&nbsp;019041)",
            "Dickinson": "Dickinson,&nbsp;IA(SAME&nbsp;019059)",
            "Emmet": "Emmet,&nbsp;IA(SAME&nbsp;019063&nbsp;for&nbsp;WEST)",
            "Palo Alto": "Palo&nbsp;Alto,&nbsp;IA(SAME&nbsp;019147&nbsp;for&nbsp;NW&nbsp;and&nbsp;CENTRAL)",
            "Jackson": "Jackson,&nbsp;MN(SAME&nbsp;027063)"
        }
    },
    "NWRORG": {
        "call": "NWRORG",
        "alt": "N",
        "loc": "NWRORG, na",
        "freq": "0 MHz",
        "who": "<span style=\"color:#aaaaaa\"><i>\u201cHurricane\u201d<\/i><\/span> Thanks Ray Stevens<span style=\"color:#555;padding-left:12px\">NWRorg 90%reference<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/noaaweatherradio.org\/howto.html",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "NORMAL",
        "xmloc": "na",
        "wfo": "",
        "wxown": "NWRORG",
        "radiourl": "https:\/\/noaaweatherradio.org\/Hurricane.mp3",
        "mapurl": "",
        "logo": "./ajax-images/testweb.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "NWRORG-A": {
        "call": "NWRORG-A",
        "alt": "N",
        "loc": "NWRORG, na",
        "freq": "0 MHz",
        "who": "Thanks Gary Bowman<span style=\"color:#555;padding-left:12px\">NWRorg 90%reference<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.garybowmansongs.com\/",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "NORMAL",
        "xmloc": "na",
        "wfo": "",
        "wxown": "NWRORG",
        "radiourl": "https:\/\/noaaweatherradio.org\/BowmanMedia\/Talkin'WeatherBlues.mp3",
        "mapurl": "",
        "logo": "./ajax-images/testweb.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "NWRORG-B": {
        "call": "NWRORG-B",
        "alt": "N",
        "loc": "NWRORG, na",
        "freq": "0 MHz",
        "who": "  <span style=\"padding-left:12px;color:#ea80aa\">Important NWROrg Safety Statement<\/span> ",
        "type": "WRO",
        "wxurl": "",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "NORMAL",
        "xmloc": "na",
        "wfo": "",
        "wxown": "NWRORG",
        "radiourl": "https:\/\/noaaweatherradio.org\/content\/audio\/DisclaimWWAv90.mp3",
        "mapurl": "",
        "logo": "./ajax-images/testweb.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "NWRORG-C": {
        "call": "NWRORG-C",
        "alt": "N",
        "loc": "NWRORG, na",
        "freq": "0 MHz",
        "who": "Weather Ready Nation NWRorg",
        "type": "WRO",
        "wxurl": "https:\/\/www.weather.gov\/safety\/",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "NORMAL",
        "xmloc": "na",
        "wfo": "",
        "wxown": "NWRORG",
        "radiourl": "https:\/\/noaaweatherradio.org\/WRNmedia\/OrBeAStatistic90.mp3",
        "mapurl": "",
        "logo": "./ajax-images/testweb.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "NWRORG-D": {
        "call": "NWRORG-D",
        "alt": "N",
        "loc": "NWRORG, na",
        "freq": "0 MHz",
        "who": " \"Save A Life\" <span style=\"font-size:.8em\">From GeauxPJ Life Safety (KPL20)<\/span> ",
        "type": "WRO",
        "wxurl": "https:\/\/www.youtube.com\/channel\/UCSpHeq1yjwznaE7IRF4dFVg",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "NORMAL",
        "xmloc": "na",
        "wfo": "",
        "wxown": "NWRORG",
        "radiourl": "https:\/\/noaaweatherradio.org\/WRNmedia\/SevereWeatherSafety3.mp3",
        "mapurl": "",
        "logo": "./ajax-images/testweb.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "NWRORG-E": {
        "call": "NWRORG-E",
        "alt": "N",
        "loc": "NWRORG, na",
        "freq": "0 MHz",
        "who": "Ear Candy for Weather Watchers <span style=\"font-size:10px;color:#aa9040\">  <\/span>   <span style=\"padding-left:12px;color:#caff00\"> *NWROrg *<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "NORMAL",
        "xmloc": "na",
        "wfo": "",
        "wxown": "NWRORG",
        "radiourl": "https:\/\/wxradio.org\/Zodiac-WeatherTracks-Mix-NWROrg",
        "mapurl": "",
        "logo": "./ajax-images/testweb.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "VBE718": {
        "call": "VBE718",
        "alt": "N",
        "loc": "Moose Creek, Canada, Ontario",
        "freq": "162.450 MHz",
        "who": "Morewood Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.morewoodweather.ca\/Aurora\/index.php",
        "lat": "45.306944",
        "long": "-74.941111",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "VBE718",
        "radiourl": "https:\/\/wxradio.org\/ON-MooseCreek-VBE718",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, Ontario",
        "stateabbr": "ON",
        "goldstar": "",
        "samecode": []
    },
    "VFV785": {
        "call": "VFV785",
        "alt": "N",
        "loc": "Chilliwack, Canada, British Columbia",
        "freq": "162.400 MHz",
        "who": "\"Emma H\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "49.109722",
        "long": "-121.847778",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>VFV785",
        "radiourl": "https:\/\/wxradio.org\/BC-Chilliwack-VFV785",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, British Columbia",
        "stateabbr": "BC",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": []
    },
    "VFV785-A": {
        "call": "VFV785-A",
        "alt": "Y",
        "loc": "Chilliwack, Canada, British Columbia",
        "freq": "162.400 MHz",
        "who": "\"Emma H\"<span style=\"padding-left:12px;color:#008a80\">*3P*<\/span>",
        "type": "COM",
        "wxurl": "",
        "lat": "49.109722",
        "long": "-121.847778",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>VFV785",
        "radiourl": "https:\/\/goldenoaks.metacity.ga:8000\/vfv785",
        "mapurl": "",
        "logo": "./ajax-images/ECradio150.png",
        "state": "Canada, British Columbia",
        "stateabbr": "BC",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": []
    },
    "WNG536": {
        "call": "WNG536",
        "alt": "N",
        "loc": "DeKalb, IL",
        "freq": "162.550 MHz",
        "who": "Benjicat 33<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.youtube.com\/channel\/UCoyUbZt31StnDenGDBNJqaw",
        "lat": "41.938333",
        "long": "-88.777222",
        "watts": "300",
        "xmloc": "DeKalb,IL",
        "wfo": "Romeoville",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WNG536",
        "radiourl": "https:\/\/wxradio.org\/IL-DeKalb-WNG536",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG536.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Boone": "Boone,&nbsp;IL(SAME&nbsp;017007)",
            "DeKalb": "DeKalb,&nbsp;IL(SAME&nbsp;017037)",
            "Kane": "Kane,&nbsp;IL(SAME&nbsp;017089)",
            "Lee": "Lee,&nbsp;IL(SAME&nbsp;017103&nbsp;for&nbsp;East)",
            "Ogle": "Ogle,&nbsp;IL(SAME&nbsp;017141&nbsp;for&nbsp;East)",
            "Winnebago": "Winnebago,&nbsp;IL(SAME&nbsp;017201)"
        }
    },
    "WNG553": {
        "call": "WNG553",
        "alt": "N",
        "loc": "Wausaukee, WI",
        "freq": "162.400 MHz",
        "who": "Athelstane Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/weather.athelstanewi.com",
        "lat": "45.427500",
        "long": "-87.977500",
        "watts": "1000",
        "xmloc": "Wausaukee,WI",
        "wfo": "Green Bay",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WNG553",
        "radiourl": "https:\/\/wxradio.org\/WI-Wausaukee-WNG553",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG553.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Menominee": "Menominee,&nbsp;MI(SAME&nbsp;026109)",
            "Door": "Door,&nbsp;WI(SAME&nbsp;055029)",
            "Marinette": "Marinette,&nbsp;WI(SAME&nbsp;055075)",
            "Oconto": "Oconto,&nbsp;WI(SAME&nbsp;055083)"
        }
    },
    "WNG572": {
        "call": "WNG572",
        "alt": "N",
        "loc": "Petoskey, MI",
        "freq": "162.475 MHz",
        "who": "Lake Huron Weather &#9400;<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span> ",
        "type": "WRO",
        "wxurl": "https:\/\/lakehuronweather.org\/",
        "lat": "45.326389",
        "long": "-84.885000",
        "watts": "300",
        "xmloc": "Goodhart,MI",
        "wfo": "Gaylord",
        "wxown": "WNG572",
        "radiourl": "https:\/\/wxradio.org\/MI-Petoskey-WNG572",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG572.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "",
        "samecode": {
            "Cheboygan": "Cheboygan,&nbsp;MI(SAME&nbsp;026031)",
            "Emmet": "Emmet,&nbsp;MI(SAME&nbsp;026047)"
        }
    },
    "WNG610": {
        "call": "WNG610",
        "alt": "N",
        "loc": "Waubun, MN",
        "freq": "162.450 MHz",
        "who": "Bemidji Minnesota WX<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/bemidjiwx.org\/",
        "lat": "47.180306",
        "long": "-95.778167",
        "watts": "300",
        "xmloc": "Waubun,MN",
        "wfo": "Grand Forks",
        "wxown": "WNG610",
        "radiourl": "https:\/\/wxradio.org\/MN-Waubun-WNG610",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG610.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "",
        "samecode": {
            "Becker": "Becker,&nbsp;MN(SAME&nbsp;027005)",
            "Hubbard": "Hubbard,&nbsp;MN(SAME&nbsp;027057)",
            "Mahnomen": "Mahnomen,&nbsp;MN(SAME&nbsp;027087)",
            "Norman": "Norman,&nbsp;MN(SAME&nbsp;027107)"
        }
    },
    "WNG642": {
        "call": "WNG642",
        "alt": "N",
        "loc": "Arab, AL",
        "freq": "162.525 MHz",
        "who": "\"Shawn B\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "34.344400",
        "long": "-86.438900",
        "watts": "300",
        "xmloc": "Marshall County,AL",
        "wfo": "Huntsville",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WNG642",
        "radiourl": "https:\/\/wxradio.org\/AL-ARAB-WNG642",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG642.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Alabama",
        "stateabbr": "AL",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Cullman": "Cullman,&nbsp;AL(SAME&nbsp;001043)",
            "DeKalb": "DeKalb,&nbsp;AL(SAME&nbsp;001049)",
            "Jackson": "Jackson,&nbsp;AL(SAME&nbsp;001071)",
            "Madison": "Madison,&nbsp;AL(SAME&nbsp;001089)",
            "Marshall": "Marshall,&nbsp;AL(SAME&nbsp;001095)"
        }
    },
    "WNG654": {
        "call": "WNG654",
        "alt": "N",
        "loc": "Stillwater, OK",
        "freq": "162.500 MHz",
        "who": "Stillwater Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/stillwaterweather.com\/",
        "lat": "36.118083",
        "long": "-97.002000",
        "watts": "1000",
        "xmloc": "Stillwater,OK",
        "wfo": "Norman",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WNG654",
        "radiourl": "https:\/\/wxradio.org\/OK-Stillwater-WNG654",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG654.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Oklahoma",
        "stateabbr": "OK",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Creek": "Creek,&nbsp;OK(SAME&nbsp;040037)",
            "Lincoln": "Lincoln,&nbsp;OK(SAME&nbsp;040081)",
            "Logan": "Logan,&nbsp;OK(SAME&nbsp;040083)",
            "Pawnee": "Pawnee,&nbsp;OK(SAME&nbsp;040117)",
            "Payne": "Payne,&nbsp;OK(SAME&nbsp;040119)"
        }
    },
    "WNG655": {
        "call": "WNG655",
        "alt": "N",
        "loc": "Contra Costa County, CA",
        "freq": "162.425 MHz",
        "who": "\"Colin S\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "37.881400",
        "long": "-121.915556",
        "watts": "100",
        "xmloc": "Mt. Diablo,CA",
        "wfo": "Monterey",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WNG655",
        "radiourl": "https:\/\/wxradio.org\/CA-ContraCostaCounty-WNG655",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG655.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "California",
        "stateabbr": "CA",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Alameda": "Alameda,&nbsp;CA(SAME&nbsp;006001)",
            "Contra Costa": "Contra&nbsp;Costa,&nbsp;CA(SAME&nbsp;006013)"
        }
    },
    "WNG659": {
        "call": "WNG659",
        "alt": "N",
        "loc": "El Paso Mtns., CA",
        "freq": "162.425 MHz",
        "who": "\"SkyWaveDXBird\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "35.477500",
        "long": "-117.700278",
        "watts": "300",
        "xmloc": "Ridgecrest,CA",
        "wfo": "Hanford",
        "wxown": "WNG659",
        "radiourl": "https:\/\/wxradio.org\/CA-ElPasoMountains-WNG659",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG659.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "California",
        "stateabbr": "CA",
        "goldstar": "",
        "samecode": {
            "Inyo": "Inyo,&nbsp;CA(SAME&nbsp;006027&nbsp;for&nbsp;S)",
            "Kern": "Kern,&nbsp;CA(SAME&nbsp;006029&nbsp;for&nbsp;E)",
            "Los Angeles": "Los&nbsp;Angeles,&nbsp;CA(SAME&nbsp;006037&nbsp;for&nbsp;N)",
            "San Bernardino": "San&nbsp;Bernardino,&nbsp;CA(SAME&nbsp;006071&nbsp;for&nbsp;W)"
        }
    },
    "WNG663": {
        "call": "WNG663",
        "alt": "N",
        "loc": "Princeton, FL",
        "freq": "162.425 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/mfl\/",
        "lat": "25.537583",
        "long": "-80.403639",
        "watts": "300",
        "xmloc": "Homestead,FL",
        "wfo": "Miami",
        "wxown": "WNG663",
        "radiourl": "https:\/\/www.weather.gov\/media\/mfl\/nwr\/MIAZFPHST.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG663.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Miami-Dade": "Miami-Dade,&nbsp;FL(SAME&nbsp;012086)",
            "Monroe": "Monroe,&nbsp;FL(SAME&nbsp;012087)"
        }
    },
    "WNG672": {
        "call": "WNG672",
        "alt": "N",
        "loc": "Wolf Lake, MI",
        "freq": "162.425 MHz",
        "who": "HerseyWeather.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/herseyweather.com",
        "lat": "43.980556",
        "long": "-85.843333",
        "watts": "1000",
        "xmloc": "Baldwin,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WNG672",
        "radiourl": "https:\/\/wxradio.org\/MI-WolfLake-WNG672",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG672.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Lake": "Lake,&nbsp;MI(SAME&nbsp;026085)",
            "Manistee": "Manistee,&nbsp;MI(SAME&nbsp;026101)",
            "Mason": "Mason,&nbsp;MI(SAME&nbsp;026105)",
            "Mecosta": "Mecosta,&nbsp;MI(SAME&nbsp;026107)",
            "Newaygo": "Newaygo,&nbsp;MI(SAME&nbsp;026123)",
            "Oceana": "Oceana,&nbsp;MI(SAME&nbsp;026127)",
            "Osceola": "Osceola,&nbsp;MI(SAME&nbsp;026133)",
            "Wexford": "Wexford,&nbsp;MI(SAME&nbsp;026165)"
        }
    },
    "WNG672-A": {
        "call": "WNG672-A",
        "alt": "Y",
        "loc": "Wolf Lake, MI",
        "freq": "162.425 MHz",
        "who": "HerseyWeather.com<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "PWS",
        "wxurl": "http:\/\/herseyweather.com",
        "lat": "43.980556",
        "long": "-85.843333",
        "watts": "1000",
        "xmloc": "Baldwin,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WNG672",
        "radiourl": "https:\/\/noaaradio.herseyweather.com\/MI-WolfLake-WNG672-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG672.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Lake": "Lake,&nbsp;MI(SAME&nbsp;026085)",
            "Manistee": "Manistee,&nbsp;MI(SAME&nbsp;026101)",
            "Mason": "Mason,&nbsp;MI(SAME&nbsp;026105)",
            "Mecosta": "Mecosta,&nbsp;MI(SAME&nbsp;026107)",
            "Newaygo": "Newaygo,&nbsp;MI(SAME&nbsp;026123)",
            "Oceana": "Oceana,&nbsp;MI(SAME&nbsp;026127)",
            "Osceola": "Osceola,&nbsp;MI(SAME&nbsp;026133)",
            "Wexford": "Wexford,&nbsp;MI(SAME&nbsp;026165)"
        }
    },
    "WNG676": {
        "call": "WNG676",
        "alt": "N",
        "loc": "Clearwater, MN",
        "freq": "162.500 MHz",
        "who": "Midwest Broadcast Engineering <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.mbei.com\/broadcasting\/noaa\/",
        "lat": "45.348472",
        "long": "-93.908778",
        "watts": "1000",
        "xmloc": "Enfield,MN",
        "wfo": "Chanhassen",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WNG676",
        "radiourl": "https:\/\/wxradio.org\/MN-Clearwater-WNG676",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG676.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Anoka": "Anoka,&nbsp;MN(SAME&nbsp;027003)",
            "Benton": "Benton,&nbsp;MN(SAME&nbsp;027009)",
            "Carver": "Carver,&nbsp;MN(SAME&nbsp;027019)",
            "Hennepin": "Hennepin,&nbsp;MN(SAME&nbsp;027053)",
            "Isanti": "Isanti,&nbsp;MN(SAME&nbsp;027059)",
            "McLeod": "McLeod,&nbsp;MN(SAME&nbsp;027085)",
            "Meeker": "Meeker,&nbsp;MN(SAME&nbsp;027093)",
            "Mille Lacs": "Mille&nbsp;Lacs,&nbsp;MN(SAME&nbsp;027095)",
            "Sherburne": "Sherburne,&nbsp;MN(SAME&nbsp;027141)",
            "Stearns": "Stearns,&nbsp;MN(SAME&nbsp;027145)",
            "Wright": "Wright,&nbsp;MN(SAME&nbsp;027171)"
        }
    },
    "WNG732": {
        "call": "WNG732",
        "alt": "N",
        "loc": "La Follette, TN",
        "freq": "162.450 MHz",
        "who": "NOAA Direct Audio &mdash;   <span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span> MRX",
        "type": "COM",
        "wxurl": "https:\/\/www.weather.gov\/mrx\/",
        "lat": "36.198300",
        "long": "-84.231111",
        "watts": "300",
        "xmloc": "Cross Mountain\/Briceville,TN",
        "wfo": "Morristown",
        "wxown": "WNG732",
        "radiourl": "https:\/\/www.weather.gov\/media\/mrx\/radio\/MEMZFPLFT.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNG732.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Tennessee",
        "stateabbr": "TN",
        "goldstar": "",
        "samecode": {
            "Anderson": "Anderson,&nbsp;TN(SAME&nbsp;047001)",
            "Campbell": "Campbell,&nbsp;TN(SAME&nbsp;047013)",
            "Claiborne": "Claiborne,&nbsp;TN(SAME&nbsp;047025)",
            "Morgan": "Morgan,&nbsp;TN(SAME&nbsp;047129)",
            "Roane": "Roane,&nbsp;TN(SAME&nbsp;047145)",
            "Scott": "Scott,&nbsp;TN(SAME&nbsp;047151)",
            "Union": "Union,&nbsp;TN(SAME&nbsp;047173)"
        }
    },
    "WNWS": {
        "call": "WNWS",
        "alt": "N",
        "loc": ", na",
        "freq": "0 MHz",
        "who": " NATIONAL HURRICANE CENTER (active JUNE 1 - NOV 30)",
        "type": "WRO",
        "wxurl": "https:\/\/www.nhc.noaa.gov\/",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "",
        "xmloc": "",
        "wfo": "",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WNWS",
        "radiourl": "https:\/\/noaaweatherradio.org\/content\/NHCoffseason.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNWS.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": []
    },
    "WNWS-A": {
        "call": "WNWS-A",
        "alt": "N",
        "loc": ", na",
        "freq": "0 MHz",
        "who": "162.400 \"The Cold Front\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/thecoldfront.com\/weather\/wxradio.htm",
        "lat": "0.000000",
        "long": "0.000000",
        "watts": "",
        "xmloc": "",
        "wfo": "",
        "wxown": "WNWS",
        "radiourl": "https:\/\/wxradio.org\/MN-Winona-KGG95",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WNWS.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": " ",
        "stateabbr": "na",
        "goldstar": "",
        "samecode": []
    },
    "WSM60": {
        "call": "WSM60",
        "alt": "N",
        "loc": "Dresden, ME",
        "freq": "162.475 MHz",
        "who": "Courtesy of 'Randall D'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "44.122778",
        "long": "-69.680556",
        "watts": "300",
        "xmloc": "Blinn Hill,ME",
        "wfo": "Gray",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WSM60",
        "radiourl": "https:\/\/wxradio.org\/ME-Dresden-WSM60",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WSM60.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Maine",
        "stateabbr": "ME",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Androscoggin": "Androscoggin,&nbsp;ME(SAME&nbsp;023001&nbsp;for&nbsp;East)",
            "Kennebec": "Kennebec,&nbsp;ME(SAME&nbsp;023011)",
            "Sagadahoc": "Sagadahoc,&nbsp;ME(SAME&nbsp;023023)",
            "Waldo": "Waldo,&nbsp;ME(SAME&nbsp;023027&nbsp;for&nbsp;FarSW)"
        }
    },
    "WWF34": {
        "call": "WWF34",
        "alt": "N",
        "loc": "Plainwell, MI",
        "freq": "162.475 MHz",
        "who": "Courtesy of 'Donny'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/wxstream.org\/",
        "lat": "42.421944",
        "long": "-85.528889",
        "watts": "300",
        "xmloc": "Plainwell,MI",
        "wfo": "Grand Rapids",
        "wxown": "WWF34",
        "radiourl": "https:\/\/wxradio.org\/MI-Plainwell-WWF34",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWF34.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "",
        "samecode": {
            "Allegan": "Allegan,&nbsp;MI(SAME&nbsp;026005)",
            "Barry": "Barry,&nbsp;MI(SAME&nbsp;026015)",
            "Berrien": "Berrien,&nbsp;MI(SAME&nbsp;026021)",
            "Branch": "Branch,&nbsp;MI(SAME&nbsp;026023)",
            "Calhoun": "Calhoun,&nbsp;MI(SAME&nbsp;026025)",
            "Cass": "Cass,&nbsp;MI(SAME&nbsp;026027)",
            "Kalamazoo": "Kalamazoo,&nbsp;MI(SAME&nbsp;026077)",
            "St. Joseph": "St.&nbsp;Joseph,&nbsp;MI(SAME&nbsp;026149)",
            "Van Buren": "Van&nbsp;Buren,&nbsp;MI(SAME&nbsp;026159)"
        }
    },
    "WWF36": {
        "call": "WWF36",
        "alt": "N",
        "loc": "Hesperia, MI",
        "freq": "162.475 MHz",
        "who": "HerseyWeather.com <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/herseyweather.com",
        "lat": "43.549722",
        "long": "-86.042778",
        "watts": "800",
        "xmloc": "Hesperia,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WWF36",
        "radiourl": "https:\/\/wxradio.org\/MI-Hesperia-WWF36",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWF36.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Muskegon": "Muskegon,&nbsp;MI(SAME&nbsp;026121)",
            "Newaygo": "Newaygo,&nbsp;MI(SAME&nbsp;026123)",
            "Oceana": "Oceana,&nbsp;MI(SAME&nbsp;026127)"
        }
    },
    "WWF36-A": {
        "call": "WWF36-A",
        "alt": "Y",
        "loc": "Hesperia, MI",
        "freq": "162.475 MHz",
        "who": "HerseyWeather.com<span style=\"padding-left:12px;color:#008a80\">*3P*<\/span>",
        "type": "PWS",
        "wxurl": "http:\/\/herseyweather.com",
        "lat": "43.549722",
        "long": "-86.042778",
        "watts": "800",
        "xmloc": "Hesperia,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WWF36",
        "radiourl": "https:\/\/noaaradio.herseyweather.com\/MI-Hesperia-WWF36-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWF36.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Muskegon": "Muskegon,&nbsp;MI(SAME&nbsp;026121)",
            "Newaygo": "Newaygo,&nbsp;MI(SAME&nbsp;026123)",
            "Oceana": "Oceana,&nbsp;MI(SAME&nbsp;026127)"
        }
    },
    "WWF56": {
        "call": "WWF56",
        "alt": "N",
        "loc": "Richland, WA",
        "freq": "162.450 MHz",
        "who": "\"Hayden M\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "46.391361",
        "long": "-119.588306",
        "watts": "300",
        "xmloc": "Richland,WA",
        "wfo": "Pendleton",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WWF56",
        "radiourl": "https:\/\/wxradio.org\/WA-Richland-WWF56",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWF56.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Washington",
        "stateabbr": "WA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Adams": "Adams,&nbsp;WA(SAME&nbsp;053001)",
            "Benton": "Benton,&nbsp;WA(SAME&nbsp;053005)",
            "Franklin": "Franklin,&nbsp;WA(SAME&nbsp;053021)",
            "Grant": "Grant,&nbsp;WA(SAME&nbsp;053025)",
            "Klickitat": "Klickitat,&nbsp;WA(SAME&nbsp;053039)",
            "Walla Walla": "Walla&nbsp;Walla,&nbsp;WA(SAME&nbsp;053071)",
            "Yakima": "Yakima,&nbsp;WA(SAME&nbsp;053077)"
        }
    },
    "WWF64": {
        "call": "WWF64",
        "alt": "N",
        "loc": "Monterey Marine, CA",
        "freq": "162.450 MHz",
        "who": "Saratoga-Weather.org<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/saratoga-weather.org",
        "lat": "37.155000",
        "long": "-121.897222",
        "watts": "100",
        "xmloc": "Mt. Umunhum,CA",
        "wfo": "Monterey",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WWF64",
        "radiourl": "https:\/\/wxradio.org\/CA-MontereyMarine-WWF64",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWF64.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "California",
        "stateabbr": "CA",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Alameda": "Alameda,&nbsp;CA(SAME&nbsp;006001)",
            "Contra Costa": "Contra&nbsp;Costa,&nbsp;CA(SAME&nbsp;006013&nbsp;for&nbsp;VALLEYS)",
            "Monterey": "Monterey,&nbsp;CA(SAME&nbsp;006053)",
            "Napa": "Napa,&nbsp;CA(SAME&nbsp;006055&nbsp;for&nbsp;SOUTH)",
            "San Benito": "San&nbsp;Benito,&nbsp;CA(SAME&nbsp;006069&nbsp;for&nbsp;NORTH)",
            "San Francisco": "San&nbsp;Francisco,&nbsp;CA(SAME&nbsp;006075)",
            "San Mateo": "San&nbsp;Mateo,&nbsp;CA(SAME&nbsp;006081)",
            "Santa Clara": "Santa&nbsp;Clara,&nbsp;CA(SAME&nbsp;006085)",
            "Santa Cruz": "Santa&nbsp;Cruz,&nbsp;CA(SAME&nbsp;006087)"
        }
    },
    "WWF70": {
        "call": "WWF70",
        "alt": "N",
        "loc": "Gaylord, MI",
        "freq": "162.500 MHz",
        "who": "Courtesy of \u2018Vince L\u2019<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "44.907500",
        "long": "-84.718889",
        "watts": "300",
        "xmloc": "Waters,MI",
        "wfo": "Gaylord",
        "wxown": "WWF70",
        "radiourl": "https:\/\/wxradio.org\/MI-Gaylord-WWF70",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWF70.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "",
        "samecode": {
            "Crawford": "Crawford,&nbsp;MI(SAME&nbsp;026039)",
            "Otsego": "Otsego,&nbsp;MI(SAME&nbsp;026137)"
        }
    },
    "WWG20": {
        "call": "WWG20",
        "alt": "N",
        "loc": "Fernley, NV",
        "freq": "162.450 MHz",
        "who": "Roller Network<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "COM",
        "wxurl": "https:\/\/www.rollernet.us\/wxradio",
        "lat": "39.754167",
        "long": "-119.462222",
        "watts": "150",
        "xmloc": "Virginia Peak,NV",
        "wfo": "Reno",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WWG20",
        "radiourl": "https:\/\/rollernet.us:8443\/WWG20",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG20.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Nevada",
        "stateabbr": "NV",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Lassen": "Lassen,&nbsp;CA(SAME&nbsp;006035)",
            "Plumas": "Plumas,&nbsp;CA(SAME&nbsp;006063)",
            "Sierra": "Sierra,&nbsp;CA(SAME&nbsp;006091)",
            "Churchill": "Churchill,&nbsp;NV(SAME&nbsp;032001)",
            "Lyon": "Lyon,&nbsp;NV(SAME&nbsp;032019)",
            "Pershing": "Pershing,&nbsp;NV(SAME&nbsp;032027)",
            "Washoe": "Washoe,&nbsp;NV(SAME&nbsp;032031)"
        }
    },
    "WWG24": {
        "call": "WWG24",
        "alt": "N",
        "loc": "Puget Sound Marine, WA",
        "freq": "162.425 MHz",
        "who": "\"Riley Mc\" TVTubeScanner.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.tvtubescanner.com\/",
        "lat": "48.016028",
        "long": "-122.927194",
        "watts": "90",
        "xmloc": "Miller Peak,WA",
        "wfo": "Seattle",
        "wxown": "WWG24",
        "radiourl": "https:\/\/wxradio.org\/WA-PugetSoundMarine-WWG24",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG24.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Washington",
        "stateabbr": "WA",
        "goldstar": "",
        "samecode": {
            "Clallam": "Clallam,&nbsp;WA(SAME&nbsp;053009&nbsp;for&nbsp;NORTHEAST)",
            "Island": "Island,&nbsp;WA(SAME&nbsp;053029)",
            "Jefferson": "Jefferson,&nbsp;WA(SAME&nbsp;053031&nbsp;for&nbsp;EXTREMENORTH&nbsp;W)",
            "Kitsap": "Kitsap,&nbsp;WA(SAME&nbsp;053035)",
            "San Juan": "San&nbsp;Juan,&nbsp;WA(SAME&nbsp;053055)",
            "Skagit": "Skagit,&nbsp;WA(SAME&nbsp;053057&nbsp;for&nbsp;WEST)",
            "Snohomish": "Snohomish,&nbsp;WA(SAME&nbsp;053061&nbsp;for&nbsp;WEST)"
        }
    },
    "WWG36": {
        "call": "WWG36",
        "alt": "N",
        "loc": "Roswell, NM",
        "freq": "162.450 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/abq\/",
        "lat": "33.363056",
        "long": "-104.636389",
        "watts": "100",
        "xmloc": "Roswell,NM",
        "wfo": "Albuquerque",
        "wxown": "WWG36",
        "radiourl": "https:\/\/www.weather.gov\/media\/abq\/phone\/ABQZFPROW.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG36.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "New Mexico",
        "stateabbr": "NM",
        "goldstar": "",
        "samecode": {
            "Chaves": "Chaves,&nbsp;NM(SAME&nbsp;035005)"
        }
    },
    "WWG57": {
        "call": "WWG57",
        "alt": "N",
        "loc": "Mansfield, OH",
        "freq": "162.450 MHz",
        "who": "\"Bryan W\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.582861",
        "long": "-82.473611",
        "watts": "300",
        "xmloc": "Butler,OH",
        "wfo": "Cleveland",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WWG57",
        "radiourl": "https:\/\/wxradio.org\/OH-Mansfield-WWG57",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG57.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Ohio",
        "stateabbr": "OH",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Ashland": "Ashland,&nbsp;OH(SAME&nbsp;039005)",
            "Crawford": "Crawford,&nbsp;OH(SAME&nbsp;039033)",
            "Holmes": "Holmes,&nbsp;OH(SAME&nbsp;039075)",
            "Knox": "Knox,&nbsp;OH(SAME&nbsp;039083)",
            "Licking": "Licking,&nbsp;OH(SAME&nbsp;039089)",
            "Marion": "Marion,&nbsp;OH(SAME&nbsp;039101)",
            "Morrow": "Morrow,&nbsp;OH(SAME&nbsp;039117)",
            "Richland": "Richland,&nbsp;OH(SAME&nbsp;039139)",
            "Wayne": "Wayne,&nbsp;OH(SAME&nbsp;039169)",
            "Wyandot": "Wyandot,&nbsp;OH(SAME&nbsp;039175)"
        }
    },
    "WWG75": {
        "call": "WWG75",
        "alt": "N",
        "loc": "Maui, HI",
        "freq": "162.400 MHz",
        "who": "AH6GR - Aloha State<span style=\"padding-left:20px;color:#008a80\">*3P-SSL*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.ah6gr.net\/",
        "lat": "20.707200",
        "long": "-156.258600",
        "watts": "1000",
        "xmloc": "Mt. Haleakala,HI",
        "wfo": "Honolulu",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WWG75",
        "radiourl": "https:\/\/wxradio.org\/HI-Maui-WWG75",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG75.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Hawaii",
        "stateabbr": "HI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Hawaii": "Hawaii,&nbsp;HI(SAME&nbsp;015001)",
            "Honolulu": "Honolulu,&nbsp;HI(SAME&nbsp;015003)",
            "Maui": "Maui,&nbsp;HI(SAME&nbsp;015009)"
        }
    },
    "WWG92": {
        "call": "WWG92",
        "alt": "N",
        "loc": "Naples, FL",
        "freq": "162.525 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/mfl\/",
        "lat": "26.183111",
        "long": "-81.574722",
        "watts": "1000",
        "xmloc": "Naples,FL",
        "wfo": "Miami",
        "wxown": "WWG92",
        "radiourl": "https:\/\/www.weather.gov\/media\/mfl\/nwr\/MIAZFPAPF.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG92.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Collier": "Collier,&nbsp;FL(SAME&nbsp;012021)",
            "Glades": "Glades,&nbsp;FL(SAME&nbsp;012043)",
            "Hendry": "Hendry,&nbsp;FL(SAME&nbsp;012051)",
            "Lee": "Lee,&nbsp;FL(SAME&nbsp;012071)",
            "Monroe": "Monroe,&nbsp;FL(SAME&nbsp;012087&nbsp;for&nbsp;North)"
        }
    },
    "WWG98": {
        "call": "WWG98",
        "alt": "N",
        "loc": "Park Rapids, MN",
        "freq": "162.475 MHz",
        "who": "Bemidji Minnesota WX<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/bemidjiwx.org\/",
        "lat": "46.984722",
        "long": "-95.106167",
        "watts": "1000",
        "xmloc": "Park Rapids,MN",
        "wfo": "Grand Forks",
        "wxown": "WWG98",
        "radiourl": "https:\/\/wxradio.org\/MN-ParkRapids-WWG98",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWG98.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "",
        "samecode": {
            "Becker": "Becker,&nbsp;MN(SAME&nbsp;027005)",
            "Hubbard": "Hubbard,&nbsp;MN(SAME&nbsp;027057)",
            "Wadena": "Wadena,&nbsp;MN(SAME&nbsp;027159)"
        }
    },
    "WWH23": {
        "call": "WWH23",
        "alt": "N",
        "loc": "Buchanan, GA",
        "freq": "162.425 MHz",
        "who": "\"SPCKennesaw\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "33.784000",
        "long": "-85.161444",
        "watts": "1000",
        "xmloc": "Buchanan,GA",
        "wfo": "Peachtree City",
        "wxown": "WWH23",
        "radiourl": "https:\/\/wxradio.org\/GA-Buchanan-WWH23",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WWH23.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Georgia",
        "stateabbr": "GA",
        "goldstar": "",
        "samecode": {
            "Bartow": "Bartow,&nbsp;GA(SAME&nbsp;013015)",
            "Carroll": "Carroll,&nbsp;GA(SAME&nbsp;013045)",
            "Cobb": "Cobb,&nbsp;GA(SAME&nbsp;013067)",
            "Douglas": "Douglas,&nbsp;GA(SAME&nbsp;013097)",
            "Floyd": "Floyd,&nbsp;GA(SAME&nbsp;013115)",
            "Haralson": "Haralson,&nbsp;GA(SAME&nbsp;013143)",
            "Paulding": "Paulding,&nbsp;GA(SAME&nbsp;013223)",
            "Polk": "Polk,&nbsp;GA(SAME&nbsp;013233)"
        }
    },
    "WXJ21": {
        "call": "WXJ21",
        "alt": "N",
        "loc": "Greenville, SC",
        "freq": "162.550 MHz",
        "who": "\"Kody L\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "34.940556",
        "long": "-82.410556",
        "watts": "1000",
        "xmloc": "Paris Mtn.,SC",
        "wfo": "Greer",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXJ21",
        "radiourl": "https:\/\/wxradio.org\/SC-Greenville-WXJ21",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ21.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "South Carolina",
        "stateabbr": "SC",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Polk": "Polk,&nbsp;NC(SAME&nbsp;037149)",
            "Rutherford": "Rutherford,&nbsp;NC(SAME&nbsp;037161)",
            "Abbeville": "Abbeville,&nbsp;SC(SAME&nbsp;045001)",
            "Anderson": "Anderson,&nbsp;SC(SAME&nbsp;045007)",
            "Cherokee": "Cherokee,&nbsp;SC(SAME&nbsp;045021)",
            "Greenville": "Greenville,&nbsp;SC(SAME&nbsp;045045)",
            "Greenwood": "Greenwood,&nbsp;SC(SAME&nbsp;045047)",
            "Laurens": "Laurens,&nbsp;SC(SAME&nbsp;045059)",
            "Newberry": "Newberry,&nbsp;SC(SAME&nbsp;045071)",
            "Oconee": "Oconee,&nbsp;SC(SAME&nbsp;045073)",
            "Pickens": "Pickens,&nbsp;SC(SAME&nbsp;045077)",
            "Spartanburg": "Spartanburg,&nbsp;SC(SAME&nbsp;045083)",
            "Union": "Union,&nbsp;SC(SAME&nbsp;045087)"
        }
    },
    "WXJ34": {
        "call": "WXJ34",
        "alt": "N",
        "loc": "Albuquerque, NM",
        "freq": "162.400 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/abq\/",
        "lat": "35.065556",
        "long": "-106.787778",
        "watts": "100",
        "xmloc": "Albuquerque,NM",
        "wfo": "Albuquerque",
        "wxown": "WXJ34",
        "radiourl": "https:\/\/www.weather.gov\/media\/abq\/phone\/ABQZFPABQ.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ34.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "New Mexico",
        "stateabbr": "NM",
        "goldstar": "",
        "samecode": {
            "Bernalillo": "Bernalillo,&nbsp;NM(SAME&nbsp;035001)",
            "Sandoval": "Sandoval,&nbsp;NM(SAME&nbsp;035043)",
            "Valencia": "Valencia,&nbsp;NM(SAME&nbsp;035061)"
        }
    },
    "WXJ41": {
        "call": "WXJ41",
        "alt": "N",
        "loc": "Hartford, CT",
        "freq": "162.475 MHz",
        "who": "\"FN32 DXer\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/sites.google.com\/view\/wxj41stream",
        "lat": "41.958611",
        "long": "-72.413611",
        "watts": "300",
        "xmloc": "Soapstone Mtn.,CT",
        "wfo": "Taunton",
        "wxown": "WXJ41",
        "radiourl": "https:\/\/wxradio.org\/CT-Hartford-WXJ41",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ41.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Connecticut",
        "stateabbr": "CT",
        "goldstar": "",
        "samecode": {
            "Hartford": "Hartford,&nbsp;CT(SAME&nbsp;009003)",
            "Litchfield": "Litchfield,&nbsp;CT(SAME&nbsp;009005&nbsp;for&nbsp;EAST)",
            "Middlesex": "Middlesex,&nbsp;CT(SAME&nbsp;009007&nbsp;for&nbsp;SW)",
            "New Haven": "New&nbsp;Haven,&nbsp;CT(SAME&nbsp;009009&nbsp;for&nbsp;NORTHEAST)",
            "New London": "New&nbsp;London,&nbsp;CT(SAME&nbsp;009011&nbsp;for&nbsp;NORTH)",
            "Tolland": "Tolland,&nbsp;CT(SAME&nbsp;009013)",
            "Windham": "Windham,&nbsp;CT(SAME&nbsp;009015)",
            "Franklin": "Franklin,&nbsp;MA(SAME&nbsp;025011&nbsp;for&nbsp;S)",
            "Hampden": "Hampden,&nbsp;MA(SAME&nbsp;025013)",
            "Hampshire": "Hampshire,&nbsp;MA(SAME&nbsp;025015)",
            "Worcester": "Worcester,&nbsp;MA(SAME&nbsp;025027&nbsp;for&nbsp;SW)"
        }
    },
    "WXJ52": {
        "call": "WXJ52",
        "alt": "N",
        "loc": "Fayetteville, AR",
        "freq": "162.475 MHz",
        "who": "\"Ozarks\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "35.814333",
        "long": "-94.028194",
        "watts": "1000",
        "xmloc": "Winslow,AR",
        "wfo": "Tulsa",
        "wxown": "WXJ52",
        "radiourl": "https:\/\/wxradio.org\/AR-Fayetteville-WXJ52",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ52.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Arkansas",
        "stateabbr": "AR",
        "goldstar": "",
        "samecode": {
            "Benton": "Benton,&nbsp;AR(SAME&nbsp;005007)",
            "Carroll": "Carroll,&nbsp;AR(SAME&nbsp;005015)",
            "Crawford": "Crawford,&nbsp;AR(SAME&nbsp;005033)",
            "Franklin": "Franklin,&nbsp;AR(SAME&nbsp;005047)",
            "Madison": "Madison,&nbsp;AR(SAME&nbsp;005087)",
            "Washington": "Washington,&nbsp;AR(SAME&nbsp;005143)",
            "Adair": "Adair,&nbsp;OK(SAME&nbsp;040001)",
            "Delaware": "Delaware,&nbsp;OK(SAME&nbsp;040041)"
        }
    },
    "WXJ57": {
        "call": "WXJ57",
        "alt": "N",
        "loc": "South Bend, IN",
        "freq": "162.400 MHz",
        "who": "My Mishawaka Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.mymishawakaweather.com\/",
        "lat": "41.616111",
        "long": "-86.192222",
        "watts": "1000",
        "xmloc": "Mishawaka,IN",
        "wfo": "North Webster",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXJ57",
        "radiourl": "https:\/\/wxradio.org\/IN-SouthBend-WXJ57",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ57.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Indiana",
        "stateabbr": "IN",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Elkhart": "Elkhart,&nbsp;IN(SAME&nbsp;018039)",
            "Kosciusko": "Kosciusko,&nbsp;IN(SAME&nbsp;018085)",
            "La Porte": "La&nbsp;Porte,&nbsp;IN(SAME&nbsp;018091)",
            "Marshall": "Marshall,&nbsp;IN(SAME&nbsp;018099)",
            "St. Joseph": "St.&nbsp;Joseph,&nbsp;MI(SAME&nbsp;026149)",
            "Starke": "Starke,&nbsp;IN(SAME&nbsp;018149)",
            "Berrien": "Berrien,&nbsp;MI(SAME&nbsp;026021)",
            "Cass": "Cass,&nbsp;MI(SAME&nbsp;026027)"
        }
    },
    "WXJ57-A": {
        "call": "WXJ57-A",
        "alt": "Y",
        "loc": "South Bend, IN",
        "freq": "162.400 MHz",
        "who": "My Mishawaka Weather<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "PWS",
        "wxurl": "https:\/\/www.mymishawakaweather.com\/",
        "lat": "41.616111",
        "long": "-86.192222",
        "watts": "1000",
        "xmloc": "Mishawaka,IN",
        "wfo": "North Webster",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXJ57",
        "radiourl": "https:\/\/www.mymishawakaweather.com:8443\/stream",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ57.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Indiana",
        "stateabbr": "IN",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Elkhart": "Elkhart,&nbsp;IN(SAME&nbsp;018039)",
            "Kosciusko": "Kosciusko,&nbsp;IN(SAME&nbsp;018085)",
            "La Porte": "La&nbsp;Porte,&nbsp;IN(SAME&nbsp;018091)",
            "Marshall": "Marshall,&nbsp;IN(SAME&nbsp;018099)",
            "St. Joseph": "St.&nbsp;Joseph,&nbsp;MI(SAME&nbsp;026149)",
            "Starke": "Starke,&nbsp;IN(SAME&nbsp;018149)",
            "Berrien": "Berrien,&nbsp;MI(SAME&nbsp;026021)",
            "Cass": "Cass,&nbsp;MI(SAME&nbsp;026027)"
        }
    },
    "WXJ71": {
        "call": "WXJ71",
        "alt": "N",
        "loc": "Peoria, IL",
        "freq": "162.475 MHz",
        "who": "\"Tim Y.\"  KT9Y<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.628889",
        "long": "-89.570000",
        "watts": "1000",
        "xmloc": "East Peoria,IL",
        "wfo": "Lincoln",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXJ71",
        "radiourl": "https:\/\/wxradio.org\/IL-Peoria-WXJ71",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ71.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Fulton": "Fulton,&nbsp;IL(SAME&nbsp;017057)",
            "Knox": "Knox,&nbsp;IL(SAME&nbsp;017095)",
            "Marshall": "Marshall,&nbsp;IL(SAME&nbsp;017123)",
            "Mason": "Mason,&nbsp;IL(SAME&nbsp;017125)",
            "McLean": "McLean,&nbsp;IL(SAME&nbsp;017113)",
            "Peoria": "Peoria,&nbsp;IL(SAME&nbsp;017143)",
            "Stark": "Stark,&nbsp;IL(SAME&nbsp;017175)",
            "Tazewell": "Tazewell,&nbsp;IL(SAME&nbsp;017179)",
            "Woodford": "Woodford,&nbsp;IL(SAME&nbsp;017203)"
        }
    },
    "WXJ76": {
        "call": "WXJ76",
        "alt": "N",
        "loc": "Champaign, IL",
        "freq": "162.550 MHz",
        "who": "K9SWX<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.k9swx.com\/",
        "lat": "40.086111",
        "long": "-88.248611",
        "watts": "1000",
        "xmloc": "Champaign,IL",
        "wfo": "Lincoln",
        "wxown": "WXJ76",
        "radiourl": "https:\/\/wxradio.org\/IL-Champaign-WXJ76",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ76.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "",
        "samecode": {
            "Champaign": "Champaign,&nbsp;IL(SAME&nbsp;017019)",
            "Coles": "Coles,&nbsp;IL(SAME&nbsp;017029)",
            "De Witt": "De&nbsp;Witt,&nbsp;IL(SAME&nbsp;017039)",
            "Douglas": "Douglas,&nbsp;IL(SAME&nbsp;017041)",
            "Edgar": "Edgar,&nbsp;IL(SAME&nbsp;017045)",
            "Ford": "Ford,&nbsp;IL(SAME&nbsp;017053)",
            "Moultrie": "Moultrie,&nbsp;IL(SAME&nbsp;017139)",
            "Piatt": "Piatt,&nbsp;IL(SAME&nbsp;017147)",
            "Vermilion": "Vermilion,&nbsp;IL(SAME&nbsp;017183)"
        }
    },
    "WXJ86": {
        "call": "WXJ86",
        "alt": "N",
        "loc": "LaCrescent, MN",
        "freq": "162.550 MHz",
        "who": "De Soto Valley Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.desotowiwx.com\/",
        "lat": "43.804722",
        "long": "-91.368333",
        "watts": "1000",
        "xmloc": "LaCrescent,MN",
        "wfo": "La Crosse",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXJ86",
        "radiourl": "https:\/\/wxradio.org\/MN-LaCrescent-WXJ86",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ86.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Allamakee": "Allamakee,&nbsp;IA(SAME&nbsp;019005)",
            "Houston": "Houston,&nbsp;MN(SAME&nbsp;027055)",
            "Winona": "Winona,&nbsp;MN(SAME&nbsp;027169)",
            "Buffalo": "Buffalo,&nbsp;WI(SAME&nbsp;055011)",
            "Crawford": "Crawford,&nbsp;WI(SAME&nbsp;055023)",
            "Jackson": "Jackson,&nbsp;WI(SAME&nbsp;055053)",
            "La Crosse": "La&nbsp;Crosse,&nbsp;WI(SAME&nbsp;055063)",
            "Monroe": "Monroe,&nbsp;WI(SAME&nbsp;055081)",
            "Trempealeau": "Trempealeau,&nbsp;WI(SAME&nbsp;055121)",
            "Vernon": "Vernon,&nbsp;WI(SAME&nbsp;055123)"
        }
    },
    "WXJ88": {
        "call": "WXJ88",
        "alt": "N",
        "loc": "Menomonie, WI",
        "freq": "162.400 MHz",
        "who": "\"WIspotter\" Jason S.<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "45.046944",
        "long": "-91.863333",
        "watts": "1000",
        "xmloc": "Wheeler,WI",
        "wfo": "Chanhassen",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXJ88",
        "radiourl": "https:\/\/wxradio.org\/WI-Menomonie-WXJ88",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ88.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Barron": "Barron,&nbsp;WI(SAME&nbsp;055005)",
            "Buffalo": "Buffalo,&nbsp;WI(SAME&nbsp;055011)",
            "Chippewa": "Chippewa,&nbsp;WI(SAME&nbsp;055017)",
            "Dunn": "Dunn,&nbsp;WI(SAME&nbsp;055033)",
            "Eau Claire": "Eau&nbsp;Claire,&nbsp;WI(SAME&nbsp;055035)",
            "Pepin": "Pepin,&nbsp;WI(SAME&nbsp;055091)",
            "Pierce": "Pierce,&nbsp;WI(SAME&nbsp;055093)",
            "Polk": "Polk,&nbsp;WI(SAME&nbsp;055095)",
            "Rusk": "Rusk,&nbsp;WI(SAME&nbsp;055107)",
            "St. Croix": "St.&nbsp;Croix,&nbsp;WI(SAME&nbsp;055109)",
            "Trempealeau": "Trempealeau,&nbsp;WI(SAME&nbsp;055121)"
        }
    },
    "WXJ88-A": {
        "call": "WXJ88-A",
        "alt": "Y",
        "loc": "Menomonie, WI",
        "freq": "162.400 MHz",
        "who": "\"WIspotter\" Jason S.<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "45.046944",
        "long": "-91.863333",
        "watts": "1000",
        "xmloc": "Wheeler,WI",
        "wfo": "Chanhassen",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXJ88",
        "radiourl": "https:\/\/wxradio.org\/WI-Menomonie-WXJ88-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ88.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Wisconsin",
        "stateabbr": "WI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Barron": "Barron,&nbsp;WI(SAME&nbsp;055005)",
            "Buffalo": "Buffalo,&nbsp;WI(SAME&nbsp;055011)",
            "Chippewa": "Chippewa,&nbsp;WI(SAME&nbsp;055017)",
            "Dunn": "Dunn,&nbsp;WI(SAME&nbsp;055033)",
            "Eau Claire": "Eau&nbsp;Claire,&nbsp;WI(SAME&nbsp;055035)",
            "Pepin": "Pepin,&nbsp;WI(SAME&nbsp;055091)",
            "Pierce": "Pierce,&nbsp;WI(SAME&nbsp;055093)",
            "Polk": "Polk,&nbsp;WI(SAME&nbsp;055095)",
            "Rusk": "Rusk,&nbsp;WI(SAME&nbsp;055107)",
            "St. Croix": "St.&nbsp;Croix,&nbsp;WI(SAME&nbsp;055109)",
            "Trempealeau": "Trempealeau,&nbsp;WI(SAME&nbsp;055121)"
        }
    },
    "WXJ96": {
        "call": "WXJ96",
        "alt": "N",
        "loc": "Monroe, LA",
        "freq": "162.550 MHz",
        "who": "Bayou State Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.bayoustateweather.com",
        "lat": "32.527694",
        "long": "-92.102222",
        "watts": "1000",
        "xmloc": "Monroe,LA",
        "wfo": "Shreveport",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXJ96",
        "radiourl": "https:\/\/wxradio.org\/LA-Monroe-WXJ96",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXJ96.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Louisiana",
        "stateabbr": "LA",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Caldwell": "Caldwell,&nbsp;LA(SAME&nbsp;022021)",
            "Franklin": "Franklin,&nbsp;LA(SAME&nbsp;022041)",
            "Jackson": "Jackson,&nbsp;LA(SAME&nbsp;022049)",
            "Lincoln": "Lincoln,&nbsp;LA(SAME&nbsp;022061)",
            "Morehouse": "Morehouse,&nbsp;LA(SAME&nbsp;022067)",
            "Ouachita": "Ouachita,&nbsp;LA(SAME&nbsp;022073)",
            "Richland": "Richland,&nbsp;LA(SAME&nbsp;022083)",
            "Union": "Union,&nbsp;LA(SAME&nbsp;022111)",
            "West Carroll": "West&nbsp;Carroll,&nbsp;LA(SAME&nbsp;022123)",
            "Winn": "Winn,&nbsp;LA(SAME&nbsp;022127)"
        }
    },
    "WXK24": {
        "call": "WXK24",
        "alt": "N",
        "loc": "Odell, IL",
        "freq": "162.450 MHz",
        "who": "\"kitlx\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.992500",
        "long": "-88.598056",
        "watts": "1000",
        "xmloc": "Odell,IL",
        "wfo": "Romeoville",
        "wxown": "WXK24",
        "radiourl": "https:\/\/wxradio.org\/IL-Odell-WXK24",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK24.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Illinois",
        "stateabbr": "IL",
        "goldstar": "",
        "samecode": {
            "Ford": "Ford,&nbsp;IL(SAME&nbsp;017053)",
            "Grundy": "Grundy,&nbsp;IL(SAME&nbsp;017063)",
            "Iroquois": "Iroquois,&nbsp;IL(SAME&nbsp;017075)",
            "Kankakee": "Kankakee,&nbsp;IL(SAME&nbsp;017091)",
            "La Salle": "La&nbsp;Salle,&nbsp;IL(SAME&nbsp;017099)",
            "Livingston": "Livingston,&nbsp;IL(SAME&nbsp;017105)",
            "Marshall": "Marshall,&nbsp;IL(SAME&nbsp;017123)",
            "McLean": "McLean,&nbsp;IL(SAME&nbsp;017113)",
            "Will": "Will,&nbsp;IL(SAME&nbsp;017197)",
            "Woodford": "Woodford,&nbsp;IL(SAME&nbsp;017203)"
        }
    },
    "WXK27": {
        "call": "WXK27",
        "alt": "N",
        "loc": "Austin, TX",
        "freq": "162.400 MHz",
        "who": "Jax duPreez<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "30.321900",
        "long": "-97.803300",
        "watts": "1000",
        "xmloc": "Austin,TX",
        "wfo": "New Braunfels",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK27",
        "radiourl": "https:\/\/wxradio.org\/TX-Austin-WXK27",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK27.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Bastrop": "Bastrop,&nbsp;TX(SAME&nbsp;048021)",
            "Blanco": "Blanco,&nbsp;TX(SAME&nbsp;048031)",
            "Burnet": "Burnet,&nbsp;TX(SAME&nbsp;048053)",
            "Caldwell": "Caldwell,&nbsp;TX(SAME&nbsp;048055)",
            "Hays": "Hays,&nbsp;TX(SAME&nbsp;048209)",
            "Lee": "Lee,&nbsp;TX(SAME&nbsp;048287)",
            "Travis": "Travis,&nbsp;TX(SAME&nbsp;048453)",
            "Williamson": "Williamson,&nbsp;TX(SAME&nbsp;048491)"
        }
    },
    "WXK27-A": {
        "call": "WXK27-A",
        "alt": "Y",
        "loc": "Austin, TX",
        "freq": "162.400 MHz",
        "who": "'h2ospa'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "30.321900",
        "long": "-97.803300",
        "watts": "1000",
        "xmloc": "Austin,TX",
        "wfo": "New Braunfels",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK27",
        "radiourl": "https:\/\/wxradio.org\/TX-Austin-WXK27-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK27.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Bastrop": "Bastrop,&nbsp;TX(SAME&nbsp;048021)",
            "Blanco": "Blanco,&nbsp;TX(SAME&nbsp;048031)",
            "Burnet": "Burnet,&nbsp;TX(SAME&nbsp;048053)",
            "Caldwell": "Caldwell,&nbsp;TX(SAME&nbsp;048055)",
            "Hays": "Hays,&nbsp;TX(SAME&nbsp;048209)",
            "Lee": "Lee,&nbsp;TX(SAME&nbsp;048287)",
            "Travis": "Travis,&nbsp;TX(SAME&nbsp;048453)",
            "Williamson": "Williamson,&nbsp;TX(SAME&nbsp;048491)"
        }
    },
    "WXK36": {
        "call": "WXK36",
        "alt": "N",
        "loc": "Tyler, TX",
        "freq": "162.475 MHz",
        "who": "Tyler Texas Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.tylertexasweather.com\/",
        "lat": "32.485600",
        "long": "-95.483100",
        "watts": "1000",
        "xmloc": "Lindale,TX",
        "wfo": "Shreveport",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK36",
        "radiourl": "https:\/\/wxradio.org\/TX-Tyler-WXK36",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK36.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Anderson": "Anderson,&nbsp;TX(SAME&nbsp;048001)",
            "Cherokee": "Cherokee,&nbsp;TX(SAME&nbsp;048073)",
            "Gregg": "Gregg,&nbsp;TX(SAME&nbsp;048183)",
            "Henderson": "Henderson,&nbsp;TX(SAME&nbsp;048213)",
            "Rusk": "Rusk,&nbsp;TX(SAME&nbsp;048401)",
            "Smith": "Smith,&nbsp;TX(SAME&nbsp;048423)",
            "Upshur": "Upshur,&nbsp;TX(SAME&nbsp;048459)",
            "Van Zandt": "Van&nbsp;Zandt,&nbsp;TX(SAME&nbsp;048467)",
            "Wood": "Wood,&nbsp;TX(SAME&nbsp;048499)"
        }
    },
    "WXK36-A": {
        "call": "WXK36-A",
        "alt": "Y",
        "loc": "Tyler, TX",
        "freq": "162.475 MHz",
        "who": "Tyler Texas Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.tylertexasweather.com\/",
        "lat": "32.485600",
        "long": "-95.483100",
        "watts": "1000",
        "xmloc": "Lindale,TX",
        "wfo": "Shreveport",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK36",
        "radiourl": "https:\/\/wxradio.org\/TX-Tyler-WXK36-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK36.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Anderson": "Anderson,&nbsp;TX(SAME&nbsp;048001)",
            "Cherokee": "Cherokee,&nbsp;TX(SAME&nbsp;048073)",
            "Gregg": "Gregg,&nbsp;TX(SAME&nbsp;048183)",
            "Henderson": "Henderson,&nbsp;TX(SAME&nbsp;048213)",
            "Rusk": "Rusk,&nbsp;TX(SAME&nbsp;048401)",
            "Smith": "Smith,&nbsp;TX(SAME&nbsp;048423)",
            "Upshur": "Upshur,&nbsp;TX(SAME&nbsp;048459)",
            "Van Zandt": "Van&nbsp;Zandt,&nbsp;TX(SAME&nbsp;048467)",
            "Wood": "Wood,&nbsp;TX(SAME&nbsp;048499)"
        }
    },
    "WXK36-B": {
        "call": "WXK36-B",
        "alt": "Y",
        "loc": "Tyler, TX",
        "freq": "162.475 MHz",
        "who": "Doc Deason<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.facebook.com\/docdeasonweather",
        "lat": "32.485600",
        "long": "-95.483100",
        "watts": "1000",
        "xmloc": "Lindale,TX",
        "wfo": "Shreveport",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK36",
        "radiourl": "https:\/\/wxradio.org\/TX-Tyler-WXK36-alt2",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK36.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Anderson": "Anderson,&nbsp;TX(SAME&nbsp;048001)",
            "Cherokee": "Cherokee,&nbsp;TX(SAME&nbsp;048073)",
            "Gregg": "Gregg,&nbsp;TX(SAME&nbsp;048183)",
            "Henderson": "Henderson,&nbsp;TX(SAME&nbsp;048213)",
            "Rusk": "Rusk,&nbsp;TX(SAME&nbsp;048401)",
            "Smith": "Smith,&nbsp;TX(SAME&nbsp;048423)",
            "Upshur": "Upshur,&nbsp;TX(SAME&nbsp;048459)",
            "Van Zandt": "Van&nbsp;Zandt,&nbsp;TX(SAME&nbsp;048467)",
            "Wood": "Wood,&nbsp;TX(SAME&nbsp;048499)"
        }
    },
    "WXK37": {
        "call": "WXK37",
        "alt": "N",
        "loc": "Big Spring, TX",
        "freq": "162.475 MHz",
        "who": "Surge Energy<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "32.254194",
        "long": "-101.445917",
        "watts": "1000",
        "xmloc": "Big Spring,TX",
        "wfo": "Midland",
        "wxown": "WXK37",
        "radiourl": "https:\/\/wxradio.org\/TX-BigSpring-WXK37",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK37.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "",
        "samecode": {
            "Borden": "Borden,&nbsp;TX(SAME&nbsp;048033)",
            "Dawson": "Dawson,&nbsp;TX(SAME&nbsp;048115)",
            "Glasscock": "Glasscock,&nbsp;TX(SAME&nbsp;048173)",
            "Howard": "Howard,&nbsp;TX(SAME&nbsp;048227)",
            "Martin": "Martin,&nbsp;TX(SAME&nbsp;048317)",
            "Midland": "Midland,&nbsp;TX(SAME&nbsp;048329)",
            "Mitchell": "Mitchell,&nbsp;TX(SAME&nbsp;048335)",
            "Scurry": "Scurry,&nbsp;TX(SAME&nbsp;048415)"
        }
    },
    "WXK46": {
        "call": "WXK46",
        "alt": "N",
        "loc": "Knoxville, TN",
        "freq": "162.475 MHz",
        "who": "NOAA Direct Audio &mdash;   <span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span> MRX",
        "type": "COM",
        "wxurl": "https:\/\/www.weather.gov\/mrx\/",
        "lat": "35.999278",
        "long": "-83.949639",
        "watts": "1000",
        "xmloc": "Sharps Ridge,TN",
        "wfo": "Morristown",
        "wxown": "WXK46",
        "radiourl": "https:\/\/www.weather.gov\/media\/mrx\/radio\/MEMZFPTYS.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK46.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Tennessee",
        "stateabbr": "TN",
        "goldstar": "",
        "samecode": {
            "Anderson": "Anderson,&nbsp;TN(SAME&nbsp;047001)",
            "Blount": "Blount,&nbsp;TN(SAME&nbsp;047009)",
            "Campbell": "Campbell,&nbsp;TN(SAME&nbsp;047013)",
            "Claiborne": "Claiborne,&nbsp;TN(SAME&nbsp;047025)",
            "Cocke": "Cocke,&nbsp;TN(SAME&nbsp;047029)",
            "Grainger": "Grainger,&nbsp;TN(SAME&nbsp;047057)",
            "Hamblen": "Hamblen,&nbsp;TN(SAME&nbsp;047063)",
            "Jefferson": "Jefferson,&nbsp;TN(SAME&nbsp;047089)",
            "Knox": "Knox,&nbsp;TN(SAME&nbsp;047093)",
            "Loudon": "Loudon,&nbsp;TN(SAME&nbsp;047105)",
            "Monroe": "Monroe,&nbsp;TN(SAME&nbsp;047123)",
            "Morgan": "Morgan,&nbsp;TN(SAME&nbsp;047129)",
            "Roane": "Roane,&nbsp;TN(SAME&nbsp;047145)",
            "Scott": "Scott,&nbsp;TN(SAME&nbsp;047151)",
            "Sevier": "Sevier,&nbsp;TN(SAME&nbsp;047155)",
            "Union": "Union,&nbsp;TN(SAME&nbsp;047173)"
        }
    },
    "WXK48": {
        "call": "WXK48",
        "alt": "N",
        "loc": "Chattanooga, TN",
        "freq": "162.550 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span> MRX",
        "type": "COM",
        "wxurl": "https:\/\/www.weather.gov\/mrx\/",
        "lat": "35.207222",
        "long": "-85.286500",
        "watts": "1000",
        "xmloc": "Signal Mtn.,TN",
        "wfo": "Morristown",
        "wxown": "WXK48",
        "radiourl": "https:\/\/www.weather.gov\/media\/mrx\/radio\/MEMZFPCHA.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK48.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Tennessee",
        "stateabbr": "TN",
        "goldstar": "",
        "samecode": {
            "Catoosa": "Catoosa,&nbsp;GA(SAME&nbsp;013047)",
            "Chattooga": "Chattooga,&nbsp;GA(SAME&nbsp;013055)",
            "Dade": "Dade,&nbsp;GA(SAME&nbsp;013083)",
            "Gordon": "Gordon,&nbsp;GA(SAME&nbsp;013129)",
            "Murray": "Murray,&nbsp;GA(SAME&nbsp;013213)",
            "Walker": "Walker,&nbsp;GA(SAME&nbsp;013295)",
            "Whitfield": "Whitfield,&nbsp;GA(SAME&nbsp;013313)",
            "Bledsoe": "Bledsoe,&nbsp;TN(SAME&nbsp;047007)",
            "Bradley": "Bradley,&nbsp;TN(SAME&nbsp;047011)",
            "Hamilton": "Hamilton,&nbsp;TN(SAME&nbsp;047065)",
            "Marion": "Marion,&nbsp;TN(SAME&nbsp;047115)",
            "McMinn": "McMinn,&nbsp;TN(SAME&nbsp;047107)",
            "Meigs": "Meigs,&nbsp;TN(SAME&nbsp;047121)",
            "Monroe": "Monroe,&nbsp;TN(SAME&nbsp;047123)",
            "Polk": "Polk,&nbsp;TN(SAME&nbsp;047139)",
            "Rhea": "Rhea,&nbsp;TN(SAME&nbsp;047143)",
            "Sequatchie": "Sequatchie,&nbsp;TN(SAME&nbsp;047153)"
        }
    },
    "WXK58": {
        "call": "WXK58",
        "alt": "N",
        "loc": "Reno, NV",
        "freq": "162.550 MHz",
        "who": "Roller Network<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "COM",
        "wxurl": "https:\/\/www.rollernet.us\/wxradio",
        "lat": "39.313100",
        "long": "-119.883600",
        "watts": "300",
        "xmloc": "Slide Mtn.,NV",
        "wfo": "Reno",
        "wxown": "WXK58",
        "radiourl": "https:\/\/rollernet.us:8443\/WXK58",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK58.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Nevada",
        "stateabbr": "NV",
        "goldstar": "",
        "samecode": {
            "Alpine": "Alpine,&nbsp;CA(SAME&nbsp;006003)",
            "El Dorado": "El&nbsp;Dorado,&nbsp;CA(SAME&nbsp;006017)",
            "Nevada": "Nevada,&nbsp;CA(SAME&nbsp;006057)",
            "Placer": "Placer,&nbsp;CA(SAME&nbsp;006061)",
            "City of Carson City": "City&nbsp;of&nbsp;Carson&nbsp;City,&nbsp;NV(SAME&nbsp;032510)",
            "Douglas": "Douglas,&nbsp;NV(SAME&nbsp;032005)",
            "Lyon": "Lyon,&nbsp;NV(SAME&nbsp;032019)",
            "Storey": "Storey,&nbsp;NV(SAME&nbsp;032029)",
            "Washoe": "Washoe,&nbsp;NV(SAME&nbsp;032031)"
        }
    },
    "WXK67": {
        "call": "WXK67",
        "alt": "N",
        "loc": "San Antonio, TX",
        "freq": "162.550 MHz",
        "who": "GeauxPJ Life Safety<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.youtube.com\/channel\/UCSpHeq1yjwznaE7IRF4dFVg",
        "lat": "29.685389",
        "long": "-98.449611",
        "watts": "1000",
        "xmloc": "San Antonio,TX",
        "wfo": "New Braunfels",
        "wxown": "WXK67",
        "radiourl": "https:\/\/wxradio.org\/TX-SanAntonio-WXK67",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK67.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Texas",
        "stateabbr": "TX",
        "goldstar": "",
        "samecode": {
            "Atascosa": "Atascosa,&nbsp;TX(SAME&nbsp;048013)",
            "Bandera": "Bandera,&nbsp;TX(SAME&nbsp;048019)",
            "Bexar": "Bexar,&nbsp;TX(SAME&nbsp;048029)",
            "Comal": "Comal,&nbsp;TX(SAME&nbsp;048091)",
            "Guadalupe": "Guadalupe,&nbsp;TX(SAME&nbsp;048187)",
            "Kendall": "Kendall,&nbsp;TX(SAME&nbsp;048259)",
            "Medina": "Medina,&nbsp;TX(SAME&nbsp;048325)",
            "Wilson": "Wilson,&nbsp;TX(SAME&nbsp;048493)"
        }
    },
    "WXK68": {
        "call": "WXK68",
        "alt": "N",
        "loc": "Boise, ID",
        "freq": "162.550 MHz",
        "who": "\u2018Kevin M\u2019<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "COM",
        "wxurl": "",
        "lat": "43.754611",
        "long": "-116.095000",
        "watts": "300",
        "xmloc": "Doe Point,ID",
        "wfo": "Boise",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK68",
        "radiourl": "https:\/\/wxradio.org\/ID-Boise-WXK68",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK68.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Idaho",
        "stateabbr": "ID",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Ada": "Ada,&nbsp;ID(SAME&nbsp;016001)",
            "Boise": "Boise,&nbsp;ID(SAME&nbsp;016015&nbsp;for&nbsp;SW)",
            "Canyon": "Canyon,&nbsp;ID(SAME&nbsp;016027)",
            "Elmore": "Elmore,&nbsp;ID(SAME&nbsp;016039&nbsp;for&nbsp;SW)",
            "Gem": "Gem,&nbsp;ID(SAME&nbsp;016045&nbsp;for&nbsp;S)",
            "Owyhee": "Owyhee,&nbsp;ID(SAME&nbsp;016073&nbsp;for&nbsp;N)"
        }
    },
    "WXK81": {
        "call": "WXK81",
        "alt": "N",
        "loc": "Onondaga, MI",
        "freq": "162.400 MHz",
        "who": "Courtesy of 'Donny'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/wxstream.org\/",
        "lat": "42.442500",
        "long": "-84.580833",
        "watts": "1000",
        "xmloc": "Rossman Rd.,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXK81",
        "radiourl": "https:\/\/wxradio.org\/MI-Onondaga-WXK81",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK81.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Branch": "Branch,&nbsp;MI(SAME&nbsp;026023)",
            "Calhoun": "Calhoun,&nbsp;MI(SAME&nbsp;026025)",
            "Clinton": "Clinton,&nbsp;MI(SAME&nbsp;026037)",
            "Eaton": "Eaton,&nbsp;MI(SAME&nbsp;026045)",
            "Hillsdale": "Hillsdale,&nbsp;MI(SAME&nbsp;026059)",
            "Ingham": "Ingham,&nbsp;MI(SAME&nbsp;026065)",
            "Jackson": "Jackson,&nbsp;MI(SAME&nbsp;026075)",
            "Livingston": "Livingston,&nbsp;MI(SAME&nbsp;026093)",
            "Shiawassee": "Shiawassee,&nbsp;MI(SAME&nbsp;026155)"
        }
    },
    "WXK81-A": {
        "call": "WXK81-A",
        "alt": "Y",
        "loc": "Onondaga, MI",
        "freq": "162.400 MHz",
        "who": "Courtesy of 'Donny'<span style=\"padding-left:12px;color:#008a80\">*3P*<\/span>",
        "type": "COM",
        "wxurl": "",
        "lat": "42.442500",
        "long": "-84.580833",
        "watts": "1000",
        "xmloc": "Rossman Rd.,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXK81",
        "radiourl": "https:\/\/wxstream.org:8443\/NWR\/WXK81",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK81.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Branch": "Branch,&nbsp;MI(SAME&nbsp;026023)",
            "Calhoun": "Calhoun,&nbsp;MI(SAME&nbsp;026025)",
            "Clinton": "Clinton,&nbsp;MI(SAME&nbsp;026037)",
            "Eaton": "Eaton,&nbsp;MI(SAME&nbsp;026045)",
            "Hillsdale": "Hillsdale,&nbsp;MI(SAME&nbsp;026059)",
            "Ingham": "Ingham,&nbsp;MI(SAME&nbsp;026065)",
            "Jackson": "Jackson,&nbsp;MI(SAME&nbsp;026075)",
            "Livingston": "Livingston,&nbsp;MI(SAME&nbsp;026093)",
            "Shiawassee": "Shiawassee,&nbsp;MI(SAME&nbsp;026155)"
        }
    },
    "WXK83": {
        "call": "WXK83",
        "alt": "N",
        "loc": "Fort Myers, FL",
        "freq": "162.475 MHz",
        "who": "Capeweather.com<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/capeweather.com\/",
        "lat": "26.630000",
        "long": "-81.810278",
        "watts": "1000",
        "xmloc": "Fort Myers,FL",
        "wfo": "Ruskin",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK83",
        "radiourl": "https:\/\/wxradio.org\/FL-FortMyers-WXK83",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK83.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Charlotte": "Charlotte,&nbsp;FL(SAME&nbsp;012015)",
            "Collier": "Collier,&nbsp;FL(SAME&nbsp;012021)",
            "DeSoto": "DeSoto,&nbsp;FL(SAME&nbsp;012027)",
            "Glades": "Glades,&nbsp;FL(SAME&nbsp;012043)",
            "Hendry": "Hendry,&nbsp;FL(SAME&nbsp;012051)",
            "Lee": "Lee,&nbsp;FL(SAME&nbsp;012071)"
        }
    },
    "WXK86": {
        "call": "WXK86",
        "alt": "N",
        "loc": "Lawton, OK",
        "freq": "162.550 MHz",
        "who": "Nathan<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "34.592222",
        "long": "-98.491111",
        "watts": "1000",
        "xmloc": "Lawton,OK",
        "wfo": "Norman",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXK86",
        "radiourl": "https:\/\/wxradio.org\/OK-Lawton-WXK86",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK86.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Oklahoma",
        "stateabbr": "OK",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Caddo": "Caddo,&nbsp;OK(SAME&nbsp;040015)",
            "Comanche": "Comanche,&nbsp;OK(SAME&nbsp;040031)",
            "Cotton": "Cotton,&nbsp;OK(SAME&nbsp;040033)",
            "Grady": "Grady,&nbsp;OK(SAME&nbsp;040051)",
            "Kiowa": "Kiowa,&nbsp;OK(SAME&nbsp;040075)",
            "Stephens": "Stephens,&nbsp;OK(SAME&nbsp;040137)",
            "Tillman": "Tillman,&nbsp;OK(SAME&nbsp;040141)"
        }
    },
    "WXK91": {
        "call": "WXK91",
        "alt": "Y",
        "loc": "Topeka, KS",
        "freq": "162.475 MHz",
        "who": "WXstation South Central Topeka<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/wxstation.net",
        "lat": "39.006028",
        "long": "-96.049389",
        "watts": "1000",
        "xmloc": "Maple Hill,KS",
        "wfo": "Topeka",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXK91",
        "radiourl": "https:\/\/wxradio.org\/KS-Topeka-WXK91-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXK91.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Kansas",
        "stateabbr": "KS",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Atchison": "Atchison,&nbsp;KS(SAME&nbsp;020005)",
            "Douglas": "Douglas,&nbsp;KS(SAME&nbsp;020045)",
            "Geary": "Geary,&nbsp;KS(SAME&nbsp;020061)",
            "Jackson": "Jackson,&nbsp;KS(SAME&nbsp;020085)",
            "Jefferson": "Jefferson,&nbsp;KS(SAME&nbsp;020087)",
            "Morris": "Morris,&nbsp;KS(SAME&nbsp;020127)",
            "Osage": "Osage,&nbsp;KS(SAME&nbsp;020139)",
            "Pottawatomie": "Pottawatomie,&nbsp;KS(SAME&nbsp;020149)",
            "Riley": "Riley,&nbsp;KS(SAME&nbsp;020161)",
            "Shawnee": "Shawnee,&nbsp;KS(SAME&nbsp;020177)",
            "Wabaunsee": "Wabaunsee,&nbsp;KS(SAME&nbsp;020197)"
        }
    },
    "WXL25": {
        "call": "WXL25",
        "alt": "N",
        "loc": "Missoula, MT",
        "freq": "162.400 MHz",
        "who": "CRTV Internet Radio<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/gwes-eas.network\/",
        "lat": "47.040000",
        "long": "-113.983611",
        "watts": "100",
        "xmloc": "Point Six Mtn.,MT",
        "wfo": "Missoula",
        "wxown": "WXL25",
        "radiourl": "https:\/\/wxradio.org\/MT-Missoula-WXL25",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL25.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Montana",
        "stateabbr": "MT",
        "goldstar": "",
        "samecode": {
            "Granite": "Granite,&nbsp;MT(SAME&nbsp;030039&nbsp;for&nbsp;NORTHWEST)",
            "Lake": "Lake,&nbsp;MT(SAME&nbsp;030047)",
            "Mineral": "Mineral,&nbsp;MT(SAME&nbsp;030061&nbsp;for&nbsp;EAST)",
            "Missoula": "Missoula,&nbsp;MT(SAME&nbsp;030063)",
            "Ravalli": "Ravalli,&nbsp;MT(SAME&nbsp;030081)",
            "Sanders": "Sanders,&nbsp;MT(SAME&nbsp;030089)"
        }
    },
    "WXL28": {
        "call": "WXL28",
        "alt": "N",
        "loc": "Elko, NV",
        "freq": "162.550 MHz",
        "who": "Michael S<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "40.915278",
        "long": "-115.819167",
        "watts": "100",
        "xmloc": "West Twin Peak,NV",
        "wfo": "Elko",
        "wxown": "WXL28",
        "radiourl": "https:\/\/wxradio.org\/NV-Elko-WXL28",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL28.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Nevada",
        "stateabbr": "NV",
        "goldstar": "",
        "samecode": {
            "Elko": "Elko,&nbsp;NV(SAME&nbsp;032007)",
            "Eureka": "Eureka,&nbsp;NV(SAME&nbsp;032011)"
        }
    },
    "WXL31": {
        "call": "WXL31",
        "alt": "N",
        "loc": "Syracuse, NY",
        "freq": "162.550 MHz",
        "who": "Fairmount Hills Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/weather.cerchia.com",
        "lat": "42.966667",
        "long": "-76.200278",
        "watts": "1000",
        "xmloc": "Makyes Rd.,NY",
        "wfo": "Binghamton",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXL31",
        "radiourl": "https:\/\/wxradio.org\/NY-Syracuse-WXL31",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL31.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Cayuga": "Cayuga,&nbsp;NY(SAME&nbsp;036011)",
            "Cortland": "Cortland,&nbsp;NY(SAME&nbsp;036023)",
            "Jefferson": "Jefferson,&nbsp;NY(SAME&nbsp;036045&nbsp;for&nbsp;S)",
            "Lewis": "Lewis,&nbsp;NY(SAME&nbsp;036049&nbsp;for&nbsp;S)",
            "Madison": "Madison,&nbsp;NY(SAME&nbsp;036053)",
            "Oneida": "Oneida,&nbsp;NY(SAME&nbsp;036065&nbsp;for&nbsp;W)",
            "Onondaga": "Onondaga,&nbsp;NY(SAME&nbsp;036067)",
            "Ontario": "Ontario,&nbsp;NY(SAME&nbsp;036069&nbsp;for&nbsp;E)",
            "Oswego": "Oswego,&nbsp;NY(SAME&nbsp;036075)",
            "Seneca": "Seneca,&nbsp;NY(SAME&nbsp;036099)",
            "Wayne": "Wayne,&nbsp;NY(SAME&nbsp;036117)"
        }
    },
    "WXL31-A": {
        "call": "WXL31-A",
        "alt": "Y",
        "loc": "Syracuse, NY",
        "freq": "162.550 MHz",
        "who": "\"John P\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "42.966667",
        "long": "-76.200278",
        "watts": "1000",
        "xmloc": "Makyes Rd.,NY",
        "wfo": "Binghamton",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXL31",
        "radiourl": "https:\/\/wxradio.org\/NY-Syracuse-WXL31-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL31.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Cayuga": "Cayuga,&nbsp;NY(SAME&nbsp;036011)",
            "Cortland": "Cortland,&nbsp;NY(SAME&nbsp;036023)",
            "Jefferson": "Jefferson,&nbsp;NY(SAME&nbsp;036045&nbsp;for&nbsp;S)",
            "Lewis": "Lewis,&nbsp;NY(SAME&nbsp;036049&nbsp;for&nbsp;S)",
            "Madison": "Madison,&nbsp;NY(SAME&nbsp;036053)",
            "Oneida": "Oneida,&nbsp;NY(SAME&nbsp;036065&nbsp;for&nbsp;W)",
            "Onondaga": "Onondaga,&nbsp;NY(SAME&nbsp;036067)",
            "Ontario": "Ontario,&nbsp;NY(SAME&nbsp;036069&nbsp;for&nbsp;E)",
            "Oswego": "Oswego,&nbsp;NY(SAME&nbsp;036075)",
            "Seneca": "Seneca,&nbsp;NY(SAME&nbsp;036099)",
            "Wayne": "Wayne,&nbsp;NY(SAME&nbsp;036117)"
        }
    },
    "WXL34": {
        "call": "WXL34",
        "alt": "N",
        "loc": "Albany, NY",
        "freq": "162.550 MHz",
        "who": "Colonie Weather Online<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/www.colonieweatheronline.com\/",
        "lat": "42.636944",
        "long": "-74.001667",
        "watts": "1000",
        "xmloc": "New Scotland,NY",
        "wfo": "Albany",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXL34",
        "radiourl": "https:\/\/wxradio.org\/NY-Albany-WXL34",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL34.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Berkshire": "Berkshire,&nbsp;MA(SAME&nbsp;025003&nbsp;for&nbsp;W)",
            "Albany": "Albany,&nbsp;NY(SAME&nbsp;036001)",
            "Columbia": "Columbia,&nbsp;NY(SAME&nbsp;036021)",
            "Fulton": "Fulton,&nbsp;NY(SAME&nbsp;036035)",
            "Greene": "Greene,&nbsp;NY(SAME&nbsp;036039)",
            "Montgomery": "Montgomery,&nbsp;NY(SAME&nbsp;036057)",
            "Rensselaer": "Rensselaer,&nbsp;NY(SAME&nbsp;036083)",
            "Saratoga": "Saratoga,&nbsp;NY(SAME&nbsp;036091)",
            "Schenectady": "Schenectady,&nbsp;NY(SAME&nbsp;036093)",
            "Schoharie": "Schoharie,&nbsp;NY(SAME&nbsp;036095)"
        }
    },
    "WXL40": {
        "call": "WXL40",
        "alt": "N",
        "loc": "Harrisburg, PA",
        "freq": "162.550 MHz",
        "who": "Cumberland Valley Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/cvweather.org",
        "lat": "40.345833",
        "long": "-76.868333",
        "watts": "1000",
        "xmloc": "Blue Mtn.,PA",
        "wfo": "State College",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXL40",
        "radiourl": "https:\/\/wxradio.org\/PA-Harrisburg-WXL40",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL40.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Pennsylvania",
        "stateabbr": "PA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Adams": "Adams,&nbsp;PA(SAME&nbsp;042001)",
            "Berks": "Berks,&nbsp;PA(SAME&nbsp;042011&nbsp;for&nbsp;WESTERN)",
            "Cumberland": "Cumberland,&nbsp;PA(SAME&nbsp;042041)",
            "Dauphin": "Dauphin,&nbsp;PA(SAME&nbsp;042043)",
            "Juniata": "Juniata,&nbsp;PA(SAME&nbsp;042067)",
            "Lancaster": "Lancaster,&nbsp;PA(SAME&nbsp;042071)",
            "Lebanon": "Lebanon,&nbsp;PA(SAME&nbsp;042075)",
            "Perry": "Perry,&nbsp;PA(SAME&nbsp;042099)",
            "Schuylkill": "Schuylkill,&nbsp;PA(SAME&nbsp;042107&nbsp;for&nbsp;WESTERN)",
            "York": "York,&nbsp;PA(SAME&nbsp;042133)"
        }
    },
    "WXL43": {
        "call": "WXL43",
        "alt": "N",
        "loc": "Wilkes-Barre, PA",
        "freq": "162.550 MHz",
        "who": "\"MikeyMs\" Thornhurst PA Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.mikeymsweather.com",
        "lat": "41.182778",
        "long": "-75.873889",
        "watts": "750",
        "xmloc": "Penobscot Knob,PA",
        "wfo": "Binghamton",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXL43",
        "radiourl": "https:\/\/wxradio.org\/PA-WilkesBarre-WXL43",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL43.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Pennsylvania",
        "stateabbr": "PA",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Delaware": "Delaware,&nbsp;NY(SAME&nbsp;036025&nbsp;for&nbsp;EXTREMESW)",
            "Orange": "Orange,&nbsp;NY(SAME&nbsp;036071&nbsp;for&nbsp;EXTREMEW)",
            "Sullivan": "Sullivan,&nbsp;PA(SAME&nbsp;042113&nbsp;for&nbsp;E)",
            "Bradford": "Bradford,&nbsp;PA(SAME&nbsp;042015&nbsp;for&nbsp;SE)",
            "Carbon": "Carbon,&nbsp;PA(SAME&nbsp;042025)",
            "Columbia": "Columbia,&nbsp;PA(SAME&nbsp;042037&nbsp;for&nbsp;E)",
            "Lackawanna": "Lackawanna,&nbsp;PA(SAME&nbsp;042069)",
            "Luzerne": "Luzerne,&nbsp;PA(SAME&nbsp;042079)",
            "Monroe": "Monroe,&nbsp;PA(SAME&nbsp;042089)",
            "Pike": "Pike,&nbsp;PA(SAME&nbsp;042103)",
            "Schuylkill": "Schuylkill,&nbsp;PA(SAME&nbsp;042107&nbsp;for&nbsp;N)",
            "Susquehanna": "Susquehanna,&nbsp;PA(SAME&nbsp;042115&nbsp;for&nbsp;S)",
            "Wayne": "Wayne,&nbsp;PA(SAME&nbsp;042127)",
            "Wyoming": "Wyoming,&nbsp;PA(SAME&nbsp;042131)"
        }
    },
    "WXL46": {
        "call": "WXL46",
        "alt": "N",
        "loc": "Springfield, MO",
        "freq": "162.400 MHz",
        "who": "WXBUD <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.wxbud.com\/",
        "lat": "37.169700",
        "long": "-92.941700",
        "watts": "1000",
        "xmloc": "Fordland,MO",
        "wfo": "Springfield",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WXL46",
        "radiourl": "https:\/\/wxradio.org\/MO-Springfield-WXL46",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL46.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Missouri",
        "stateabbr": "MO",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Barry": "Barry,&nbsp;MO(SAME&nbsp;029009&nbsp;for&nbsp;ALL)",
            "Christian": "Christian,&nbsp;MO(SAME&nbsp;029043&nbsp;for&nbsp;ALL)",
            "Dade": "Dade,&nbsp;MO(SAME&nbsp;029057&nbsp;for&nbsp;ALL)",
            "Dallas": "Dallas,&nbsp;MO(SAME&nbsp;029059&nbsp;for&nbsp;ALL)",
            "Douglas": "Douglas,&nbsp;MO(SAME&nbsp;029067&nbsp;for&nbsp;ALL)",
            "Greene": "Greene,&nbsp;MO(SAME&nbsp;029077&nbsp;for&nbsp;ALL)",
            "Laclede": "Laclede,&nbsp;MO(SAME&nbsp;029105)",
            "Lawrence": "Lawrence,&nbsp;MO(SAME&nbsp;029109&nbsp;for&nbsp;ALL)",
            "Polk": "Polk,&nbsp;MO(SAME&nbsp;029167&nbsp;for&nbsp;ALL)",
            "Stone": "Stone,&nbsp;MO(SAME&nbsp;029209&nbsp;for&nbsp;ALL)",
            "Taney": "Taney,&nbsp;MO(SAME&nbsp;029213&nbsp;for&nbsp;ALL)",
            "Webster": "Webster,&nbsp;MO(SAME&nbsp;029225&nbsp;for&nbsp;ALL)",
            "Wright": "Wright,&nbsp;MO(SAME&nbsp;029229&nbsp;for&nbsp;ALL)"
        }
    },
    "WXL62": {
        "call": "WXL62",
        "alt": "N",
        "loc": "Sioux City, IA",
        "freq": "162.475 MHz",
        "who": "\"IowanEASFan\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span> ",
        "type": "WRO",
        "wxurl": "",
        "lat": "42.482139",
        "long": "-96.258306",
        "watts": "1000",
        "xmloc": "Lawton,IA",
        "wfo": "Sioux Falls",
        "wxown": "WXL62",
        "radiourl": "https:\/\/wxradio.org\/IA-Sioux_City-WXL62",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL62.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Iowa",
        "stateabbr": "IA",
        "goldstar": "",
        "samecode": {
            "Cherokee": "Cherokee,&nbsp;IA(SAME&nbsp;019035)",
            "Ida": "Ida,&nbsp;IA(SAME&nbsp;019093)",
            "Monona": "Monona,&nbsp;IA(SAME&nbsp;019133)",
            "O'Brien": "O'Brien,&nbsp;IA(SAME&nbsp;019141)",
            "Plymouth": "Plymouth,&nbsp;IA(SAME&nbsp;019149)",
            "Sioux": "Sioux,&nbsp;IA(SAME&nbsp;019167)",
            "Woodbury": "Woodbury,&nbsp;IA(SAME&nbsp;019193)",
            "Dakota": "Dakota,&nbsp;NE(SAME&nbsp;031043)",
            "Dixon": "Dixon,&nbsp;NE(SAME&nbsp;031051)",
            "Thurston": "Thurston,&nbsp;NE(SAME&nbsp;031173)",
            "Union": "Union,&nbsp;SD(SAME&nbsp;046127)"
        }
    },
    "WXL78": {
        "call": "WXL78",
        "alt": "N",
        "loc": "Bismarck, ND",
        "freq": "162.475 MHz",
        "who": "Bismarck Weather Net<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/www.bismarckweather.net",
        "lat": "46.588056",
        "long": "-100.812500",
        "watts": "1000",
        "xmloc": "St. Anthony,ND",
        "wfo": "Bismarck",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXL78",
        "radiourl": "https:\/\/wxradio.org\/ND-Bismarck-WXL78",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL78.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "North Dakota",
        "stateabbr": "ND",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Burleigh": "Burleigh,&nbsp;ND(SAME&nbsp;038015)",
            "Emmons": "Emmons,&nbsp;ND(SAME&nbsp;038029)",
            "Grant": "Grant,&nbsp;ND(SAME&nbsp;038037)",
            "Kidder": "Kidder,&nbsp;ND(SAME&nbsp;038043)",
            "Mercer": "Mercer,&nbsp;ND(SAME&nbsp;038057)",
            "Morton": "Morton,&nbsp;ND(SAME&nbsp;038059)",
            "Oliver": "Oliver,&nbsp;ND(SAME&nbsp;038065)",
            "Sheridan": "Sheridan,&nbsp;ND(SAME&nbsp;038083)",
            "Sioux": "Sioux,&nbsp;ND(SAME&nbsp;038085)",
            "Wells": "Wells,&nbsp;ND(SAME&nbsp;038103)"
        }
    },
    "WXL78-A": {
        "call": "WXL78-A",
        "alt": "Y",
        "loc": "Bismarck, ND",
        "freq": "162.475 MHz",
        "who": "   Bismarck Weather Net<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "PWS",
        "wxurl": "https:\/\/bismarckweather.net",
        "lat": "46.588056",
        "long": "-100.812500",
        "watts": "1000",
        "xmloc": "St. Anthony,ND",
        "wfo": "Bismarck",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXL78",
        "radiourl": "https:\/\/broadcast.bismarckweather.net\/stream\/ND-Bismarck-WXL78",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL78.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "North Dakota",
        "stateabbr": "ND",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Burleigh": "Burleigh,&nbsp;ND(SAME&nbsp;038015)",
            "Emmons": "Emmons,&nbsp;ND(SAME&nbsp;038029)",
            "Grant": "Grant,&nbsp;ND(SAME&nbsp;038037)",
            "Kidder": "Kidder,&nbsp;ND(SAME&nbsp;038043)",
            "Mercer": "Mercer,&nbsp;ND(SAME&nbsp;038057)",
            "Morton": "Morton,&nbsp;ND(SAME&nbsp;038059)",
            "Oliver": "Oliver,&nbsp;ND(SAME&nbsp;038065)",
            "Sheridan": "Sheridan,&nbsp;ND(SAME&nbsp;038083)",
            "Sioux": "Sioux,&nbsp;ND(SAME&nbsp;038085)",
            "Wells": "Wells,&nbsp;ND(SAME&nbsp;038103)"
        }
    },
    "WXL90": {
        "call": "WXL90",
        "alt": "N",
        "loc": "Des Moines, NM",
        "freq": "162.550 MHz",
        "who": "NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/abq\/",
        "lat": "36.705556",
        "long": "-103.876667",
        "watts": "100",
        "xmloc": "Sierra Grande,NM",
        "wfo": "Albuquerque",
        "wxown": "WXL90",
        "radiourl": "https:\/\/www.weather.gov\/media\/abq\/phone\/ABQZFPDSM.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXL90.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "New Mexico",
        "stateabbr": "NM",
        "goldstar": "",
        "samecode": {
            "Colfax": "Colfax,&nbsp;NM(SAME&nbsp;035007)",
            "Harding": "Harding,&nbsp;NM(SAME&nbsp;035021)",
            "Mora": "Mora,&nbsp;NM(SAME&nbsp;035033)",
            "Union": "Union,&nbsp;NM(SAME&nbsp;035059)",
            "Cimarron": "Cimarron,&nbsp;OK(SAME&nbsp;040025&nbsp;for&nbsp;WEST)"
        }
    },
    "WXM20": {
        "call": "WXM20",
        "alt": "N",
        "loc": "Lincoln, NE",
        "freq": "162.475 MHz",
        "who": "Southeast Lincoln Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/gwwilkins.org",
        "lat": "40.821444",
        "long": "-96.662139",
        "watts": "1000",
        "xmloc": "Lincoln,NE",
        "wfo": "Valley",
        "wxown": "WXM20",
        "radiourl": "https:\/\/wxradio.org\/NE-Lincoln-WXM20-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM20.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Nebraska",
        "stateabbr": "NE",
        "goldstar": "",
        "samecode": {
            "Butler": "Butler,&nbsp;NE(SAME&nbsp;031023)",
            "Cass": "Cass,&nbsp;NE(SAME&nbsp;031025)",
            "Gage": "Gage,&nbsp;NE(SAME&nbsp;031067)",
            "Johnson": "Johnson,&nbsp;NE(SAME&nbsp;031097)",
            "Lancaster": "Lancaster,&nbsp;NE(SAME&nbsp;031109)",
            "Otoe": "Otoe,&nbsp;NE(SAME&nbsp;031131)",
            "Saline": "Saline,&nbsp;NE(SAME&nbsp;031151)",
            "Sarpy": "Sarpy,&nbsp;NE(SAME&nbsp;031153)",
            "Saunders": "Saunders,&nbsp;NE(SAME&nbsp;031155)",
            "Seward": "Seward,&nbsp;NE(SAME&nbsp;031159)"
        }
    },
    "WXM20-A": {
        "call": "WXM20-A",
        "alt": "Y",
        "loc": "Lincoln, NE",
        "freq": "162.475 MHz",
        "who": "Southeast Lincoln Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/gwwilkins.org",
        "lat": "40.821444",
        "long": "-96.662139",
        "watts": "1000",
        "xmloc": "Lincoln,NE",
        "wfo": "Valley",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXM20",
        "radiourl": "https:\/\/wxradio.org\/NE-Lincoln-WXM20-alt2",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM20.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Nebraska",
        "stateabbr": "NE",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Butler": "Butler,&nbsp;NE(SAME&nbsp;031023)",
            "Cass": "Cass,&nbsp;NE(SAME&nbsp;031025)",
            "Gage": "Gage,&nbsp;NE(SAME&nbsp;031067)",
            "Johnson": "Johnson,&nbsp;NE(SAME&nbsp;031097)",
            "Lancaster": "Lancaster,&nbsp;NE(SAME&nbsp;031109)",
            "Otoe": "Otoe,&nbsp;NE(SAME&nbsp;031131)",
            "Saline": "Saline,&nbsp;NE(SAME&nbsp;031151)",
            "Sarpy": "Sarpy,&nbsp;NE(SAME&nbsp;031153)",
            "Saunders": "Saunders,&nbsp;NE(SAME&nbsp;031155)",
            "Seward": "Seward,&nbsp;NE(SAME&nbsp;031159)"
        }
    },
    "WXM42": {
        "call": "WXM42",
        "alt": "N",
        "loc": "Hagerstown, MD",
        "freq": "162.475 MHz",
        "who": "Clifton VA Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/cliftonvaweather.com",
        "lat": "39.651111",
        "long": "-77.970833",
        "watts": "1000",
        "xmloc": "Clear Spring,MD",
        "wfo": "Sterling",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXM42",
        "radiourl": "https:\/\/wxradio.org\/MD-Hagerstown-WXM42",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM42.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Maryland",
        "stateabbr": "MD",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Allegany": "Allegany,&nbsp;MD(SAME&nbsp;024001)",
            "Carroll": "Carroll,&nbsp;MD(SAME&nbsp;024013&nbsp;for&nbsp;NW)",
            "Frederick": "Frederick,&nbsp;VA(SAME&nbsp;051069)",
            "Washington": "Washington,&nbsp;MD(SAME&nbsp;024043)",
            "Adams": "Adams,&nbsp;PA(SAME&nbsp;042001&nbsp;for&nbsp;W1\/2)",
            "Bedford": "Bedford,&nbsp;PA(SAME&nbsp;042009&nbsp;for&nbsp;SE1\/2)",
            "Franklin": "Franklin,&nbsp;PA(SAME&nbsp;042055&nbsp;for&nbsp;NOTN)",
            "Fulton": "Fulton,&nbsp;PA(SAME&nbsp;042057)",
            "City of Winchester": "City&nbsp;of&nbsp;Winchester,&nbsp;VA(SAME&nbsp;051840)",
            "Clarke": "Clarke,&nbsp;VA(SAME&nbsp;051043)",
            "Fauquier": "Fauquier,&nbsp;VA(SAME&nbsp;051061)",
            "Loudoun": "Loudoun,&nbsp;VA(SAME&nbsp;051107&nbsp;for&nbsp;NW1\/2)",
            "Page": "Page,&nbsp;VA(SAME&nbsp;051139)",
            "Shenandoah": "Shenandoah,&nbsp;VA(SAME&nbsp;051171&nbsp;for&nbsp;NE1\/2)",
            "Warren": "Warren,&nbsp;VA(SAME&nbsp;051187&nbsp;for&nbsp;CENTRAL\/N)",
            "Berkeley": "Berkeley,&nbsp;WV(SAME&nbsp;054003)",
            "Hampshire": "Hampshire,&nbsp;WV(SAME&nbsp;054027)",
            "Hardy": "Hardy,&nbsp;WV(SAME&nbsp;054031&nbsp;for&nbsp;NE)",
            "Jefferson": "Jefferson,&nbsp;WV(SAME&nbsp;054037)",
            "Mineral": "Mineral,&nbsp;WV(SAME&nbsp;054057&nbsp;for&nbsp;CENTRAL\/E)",
            "Morgan": "Morgan,&nbsp;WV(SAME&nbsp;054065)"
        }
    },
    "WXM42-A": {
        "call": "WXM42-A",
        "alt": "Y",
        "loc": "Hagerstown, MD",
        "freq": "162.475 MHz",
        "who": "Clifton Virginia Weather<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>",
        "type": "COM",
        "wxurl": "https:\/\/cliftonvaweather.com",
        "lat": "39.651111",
        "long": "-77.970833",
        "watts": "1000",
        "xmloc": "Clear Spring,MD",
        "wfo": "Sterling",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXM42",
        "radiourl": "https:\/\/noaa-manassas-radio.from-va.com\/Hagerstown.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM42.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Maryland",
        "stateabbr": "MD",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Allegany": "Allegany,&nbsp;MD(SAME&nbsp;024001)",
            "Carroll": "Carroll,&nbsp;MD(SAME&nbsp;024013&nbsp;for&nbsp;NW)",
            "Frederick": "Frederick,&nbsp;VA(SAME&nbsp;051069)",
            "Washington": "Washington,&nbsp;MD(SAME&nbsp;024043)",
            "Adams": "Adams,&nbsp;PA(SAME&nbsp;042001&nbsp;for&nbsp;W1\/2)",
            "Bedford": "Bedford,&nbsp;PA(SAME&nbsp;042009&nbsp;for&nbsp;SE1\/2)",
            "Franklin": "Franklin,&nbsp;PA(SAME&nbsp;042055&nbsp;for&nbsp;NOTN)",
            "Fulton": "Fulton,&nbsp;PA(SAME&nbsp;042057)",
            "City of Winchester": "City&nbsp;of&nbsp;Winchester,&nbsp;VA(SAME&nbsp;051840)",
            "Clarke": "Clarke,&nbsp;VA(SAME&nbsp;051043)",
            "Fauquier": "Fauquier,&nbsp;VA(SAME&nbsp;051061)",
            "Loudoun": "Loudoun,&nbsp;VA(SAME&nbsp;051107&nbsp;for&nbsp;NW1\/2)",
            "Page": "Page,&nbsp;VA(SAME&nbsp;051139)",
            "Shenandoah": "Shenandoah,&nbsp;VA(SAME&nbsp;051171&nbsp;for&nbsp;NE1\/2)",
            "Warren": "Warren,&nbsp;VA(SAME&nbsp;051187&nbsp;for&nbsp;CENTRAL\/N)",
            "Berkeley": "Berkeley,&nbsp;WV(SAME&nbsp;054003)",
            "Hampshire": "Hampshire,&nbsp;WV(SAME&nbsp;054027)",
            "Hardy": "Hardy,&nbsp;WV(SAME&nbsp;054031&nbsp;for&nbsp;NE)",
            "Jefferson": "Jefferson,&nbsp;WV(SAME&nbsp;054037)",
            "Mineral": "Mineral,&nbsp;WV(SAME&nbsp;054057&nbsp;for&nbsp;CENTRAL\/E)",
            "Morgan": "Morgan,&nbsp;WV(SAME&nbsp;054065)"
        }
    },
    "WXM45": {
        "call": "WXM45",
        "alt": "N",
        "loc": "Middleville, NY",
        "freq": "162.425 MHz",
        "who": "Indian Trail Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/indiantrailweather.com\/",
        "lat": "43.102500",
        "long": "-74.940833",
        "watts": "300",
        "xmloc": "Herkimer County,NY",
        "wfo": "Albany",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXM45",
        "radiourl": "https:\/\/wxradio.org\/NY-Middleville-WXM45",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM45.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Fulton": "Fulton,&nbsp;NY(SAME&nbsp;036035)",
            "Hamilton": "Hamilton,&nbsp;NY(SAME&nbsp;036041)",
            "Herkimer": "Herkimer,&nbsp;NY(SAME&nbsp;036043)",
            "Lewis": "Lewis,&nbsp;NY(SAME&nbsp;036049)",
            "Madison": "Madison,&nbsp;NY(SAME&nbsp;036053)",
            "Montgomery": "Montgomery,&nbsp;NY(SAME&nbsp;036057)",
            "Oneida": "Oneida,&nbsp;NY(SAME&nbsp;036065)",
            "Otsego": "Otsego,&nbsp;NY(SAME&nbsp;036077)",
            "Schoharie": "Schoharie,&nbsp;NY(SAME&nbsp;036095)"
        }
    },
    "WXM45-A": {
        "call": "WXM45-A",
        "alt": "Y",
        "loc": "Middleville, NY",
        "freq": "162.425 MHz",
        "who": "Indian Trail Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/indiantrailweather.com\/",
        "lat": "43.102500",
        "long": "-74.940833",
        "watts": "300",
        "xmloc": "Herkimer County,NY",
        "wfo": "Albany",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WXM45",
        "radiourl": "https:\/\/wxradio.org\/NY-Middleville-WXM45-alt1",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM45.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Fulton": "Fulton,&nbsp;NY(SAME&nbsp;036035)",
            "Hamilton": "Hamilton,&nbsp;NY(SAME&nbsp;036041)",
            "Herkimer": "Herkimer,&nbsp;NY(SAME&nbsp;036043)",
            "Lewis": "Lewis,&nbsp;NY(SAME&nbsp;036049)",
            "Madison": "Madison,&nbsp;NY(SAME&nbsp;036053)",
            "Montgomery": "Montgomery,&nbsp;NY(SAME&nbsp;036057)",
            "Oneida": "Oneida,&nbsp;NY(SAME&nbsp;036065)",
            "Otsego": "Otsego,&nbsp;NY(SAME&nbsp;036077)",
            "Schoharie": "Schoharie,&nbsp;NY(SAME&nbsp;036095)"
        }
    },
    "WXM58": {
        "call": "WXM58",
        "alt": "N",
        "loc": "Belle Glade, FL",
        "freq": "162.400 MHz",
        "who": "  NOAA Direct Audio &mdash;<span style=\"padding-left:12px;color:#90aa00\">Forecast<\/span>",
        "type": "COM",
        "wxurl": "http:\/\/www.weather.gov\/mfl\/",
        "lat": "26.661111",
        "long": "-80.636611",
        "watts": "300",
        "xmloc": "Belle Glade,FL",
        "wfo": "Miami",
        "wxown": "WXM58",
        "radiourl": "https:\/\/www.weather.gov\/media\/mfl\/nwr\/MIAZFPBLG.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM58.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Glades": "Glades,&nbsp;FL(SAME&nbsp;012043)",
            "Hendry": "Hendry,&nbsp;FL(SAME&nbsp;012051)",
            "Okeechobee": "Okeechobee,&nbsp;FL(SAME&nbsp;012093)",
            "Palm Beach": "Palm&nbsp;Beach,&nbsp;FL(SAME&nbsp;012099)"
        }
    },
    "WXM80": {
        "call": "WXM80",
        "alt": "Y",
        "loc": "Riverhead, NY",
        "freq": "162.475 MHz",
        "who": "Crab Meadow Weather<span style=\"padding-left:12px;color:#008a80\">*SH*<\/span>May have limited access",
        "type": "COM",
        "wxurl": "http:\/\/www.crabmeadow-weather.org",
        "lat": "40.882500",
        "long": "-72.715278",
        "watts": "1000",
        "xmloc": "Riverhead,NY",
        "wfo": "Upton",
        "wxown": "WXM80",
        "radiourl": "https:\/\/wxradio.crabmeadow-weather.org:8489\/broadwave.mp3",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM80.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "New York",
        "stateabbr": "NY",
        "goldstar": "",
        "samecode": {
            "Fairfield": "Fairfield,&nbsp;CT(SAME&nbsp;009001&nbsp;for&nbsp;Southern)",
            "Middlesex": "Middlesex,&nbsp;CT(SAME&nbsp;009007&nbsp;for&nbsp;Southern)",
            "New Haven": "New&nbsp;Haven,&nbsp;CT(SAME&nbsp;009009&nbsp;for&nbsp;Southern)",
            "New London": "New&nbsp;London,&nbsp;CT(SAME&nbsp;009011&nbsp;for&nbsp;Southern)",
            "Nassau": "Nassau,&nbsp;NY(SAME&nbsp;036059&nbsp;for&nbsp;Central\/E)",
            "Suffolk": "Suffolk,&nbsp;NY(SAME&nbsp;036103&nbsp;for&nbsp;Southern)"
        }
    },
    "WXM99": {
        "call": "WXM99",
        "alt": "N",
        "loc": "Bemidji, MN",
        "freq": "162.425 MHz",
        "who": "anonymous<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "47.555833",
        "long": "-94.801361",
        "watts": "1000",
        "xmloc": "Bemidji,MN",
        "wfo": "Grand Forks",
        "wxown": "WXM99",
        "radiourl": "https:\/\/wxradio.org\/MN-Bemidji-WXM99",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WXM99.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Minnesota",
        "stateabbr": "MN",
        "goldstar": "",
        "samecode": {
            "Beltrami": "Beltrami,&nbsp;MN(SAME&nbsp;027007)",
            "Cass": "Cass,&nbsp;MN(SAME&nbsp;227021&nbsp;for&nbsp;NORTH)",
            "Clearwater": "Clearwater,&nbsp;MN(SAME&nbsp;027029)",
            "Hubbard": "Hubbard,&nbsp;MN(SAME&nbsp;027057&nbsp;for&nbsp;NORTH1\/2)",
            "Itasca": "Itasca,&nbsp;MN(SAME&nbsp;127061&nbsp;for&nbsp;NORTHWEST)"
        }
    },
    "WZ2523": {
        "call": "WZ2523",
        "alt": "N",
        "loc": "Frankfort, KY",
        "freq": "162.500 MHz",
        "who": "Frankfort Weather<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/frankfortweather.us\/",
        "lat": "38.207222",
        "long": "-84.836111",
        "watts": "300",
        "xmloc": "Frankfort,KY",
        "wfo": "Louisville",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>WZ2523",
        "radiourl": "https:\/\/wxradio.org\/KY-Frankfort-WZ2523",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WZ2523.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Kentucky",
        "stateabbr": "KY",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": {
            "Franklin": "Franklin,&nbsp;KY(SAME&nbsp;021073)"
        }
    },
    "WZ2531": {
        "call": "WZ2531",
        "alt": "N",
        "loc": "Hialeah Spanish, FL",
        "freq": "162.500 MHz",
        "who": "Courtesy of 'Ms. Lion'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "25.839700",
        "long": "-80.292500",
        "watts": "300",
        "xmloc": "Hialeah,FL",
        "wfo": "Miami",
        "wxown": "WZ2531",
        "radiourl": "https:\/\/wxradio.org\/FL-HialeahSpanish-WZ2531",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WZ2531.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Florida",
        "stateabbr": "FL",
        "goldstar": "",
        "samecode": {
            "Broward": "Broward,&nbsp;FL(SAME&nbsp;012011&nbsp;for&nbsp;ALL)",
            "Miami-Dade": "Miami-Dade,&nbsp;FL(SAME&nbsp;012086&nbsp;for&nbsp;ALL)"
        }
    },
    "WZ2560": {
        "call": "WZ2560",
        "alt": "N",
        "loc": "Cannonsburg, MI",
        "freq": "162.550 MHz",
        "who": "Courtesy of 'Donny'<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "https:\/\/wxstream.org\/",
        "lat": "43.053300",
        "long": "-85.466800",
        "watts": "5",
        "xmloc": "Cannonsburg,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WZ2560",
        "radiourl": "https:\/\/wxradio.org\/MI-Cannonsburg-WZ2560",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WZ2560.gif",
        "logo": "./ajax-images/NWRNWRo150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Allegan": "Allegan,&nbsp;MI(SAME&nbsp;026005)",
            "Barry": "Barry,&nbsp;MI(SAME&nbsp;026015)",
            "Ionia": "Ionia,&nbsp;MI(SAME&nbsp;026067)",
            "Kent": "Kent,&nbsp;MI(SAME&nbsp;026081)",
            "Montcalm": "Montcalm,&nbsp;MI(SAME&nbsp;026117)",
            "Ottawa": "Ottawa,&nbsp;MI(SAME&nbsp;026139)"
        }
    },
    "WZ2560-A": {
        "call": "WZ2560-A",
        "alt": "Y",
        "loc": "Cannonsburg, MI",
        "freq": "162.550 MHz",
        "who": "Courtesy of 'Donny'<span style=\"padding-left:12px;color:#008a80\">*3P*<\/span>",
        "type": "COM",
        "wxurl": "",
        "lat": "43.053300",
        "long": "-85.466800",
        "watts": "5",
        "xmloc": "Cannonsburg,MI",
        "wfo": "Grand Rapids",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>WZ2560",
        "radiourl": "https:\/\/wxstream.org:8443\/NWR\/WZ2560",
        "mapurl": "https:\/\/www.nws.noaa.gov\/nwr\/Maps\/GIF\/WZ2560.gif",
        "logo": "./ajax-images/NWR150.png",
        "state": "Michigan",
        "stateabbr": "MI",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": {
            "Allegan": "Allegan,&nbsp;MI(SAME&nbsp;026005)",
            "Barry": "Barry,&nbsp;MI(SAME&nbsp;026015)",
            "Ionia": "Ionia,&nbsp;MI(SAME&nbsp;026067)",
            "Kent": "Kent,&nbsp;MI(SAME&nbsp;026081)",
            "Montcalm": "Montcalm,&nbsp;MI(SAME&nbsp;026117)",
            "Ottawa": "Ottawa,&nbsp;MI(SAME&nbsp;026139)"
        }
    },
    "XLF322": {
        "call": "XLF322",
        "alt": "N",
        "loc": "Saskatoon, Canada, Saskatchewan",
        "freq": "162.550 MHz",
        "who": "SSPWXR<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "52.142778",
        "long": "-106.430833",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "XLF322",
        "radiourl": "https:\/\/wxradio.org\/SK-Saskatoon-XLF322",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, Saskatchewan",
        "stateabbr": "SK",
        "goldstar": "",
        "samecode": []
    },
    "XLF339": {
        "call": "XLF339",
        "alt": "N",
        "loc": "Calgary, Canada, Alberta",
        "freq": "162.400 MHz",
        "who": "\"jaypeg\" <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "51.059444",
        "long": "-114.170278",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "XLF339",
        "radiourl": "https:\/\/wxradio.org\/AB-Calgary-XLF339",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, Alberta",
        "stateabbr": "AB",
        "goldstar": "",
        "samecode": []
    },
    "XLM300": {
        "call": "XLM300",
        "alt": "N",
        "loc": "Montreal, Canada, Quebec",
        "freq": "162.550 MHz",
        "who": "Pointe-Claire Canada<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "http:\/\/nicolashebert.ca\/weather\/wd\/wxindex.php",
        "lat": "45.505278",
        "long": "-73.591389",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "XLM300",
        "radiourl": "https:\/\/wxradio.org\/QC-Montreal-XLM300",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, Quebec",
        "stateabbr": "QC",
        "goldstar": "",
        "samecode": []
    },
    "XLM572": {
        "call": "XLM572",
        "alt": "N",
        "loc": "Edmonton, Canada, Alberta",
        "freq": "162.400 MHz",
        "who": "\"VA6KD\" <span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "53.578611",
        "long": "-113.450556",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>XLM572",
        "radiourl": "https:\/\/wxradio.org\/AB-Edmonton-XLM572",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, Alberta",
        "stateabbr": "AB",
        "goldstar": "<small title=\"Great Quality\" style=\"color:yellow;display:inline;font-size:150%\">&starf;<\/small>",
        "samecode": []
    },
    "XMJ316": {
        "call": "XMJ316",
        "alt": "N",
        "loc": "Collingwood, Canada, Ontario",
        "freq": "162.475 MHz",
        "who": "\"qp2trz\"<span style=\"padding-left:12px;color:#009a00\">*WRO*<\/span>",
        "type": "WRO",
        "wxurl": "",
        "lat": "44.479167",
        "long": "-80.330278",
        "watts": "n\/a",
        "xmloc": "n\/a",
        "wfo": "n\/a",
        "wxown": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>XMJ316",
        "radiourl": "https:\/\/wxradio.org\/ON-Collingwood-XMJ316",
        "mapurl": "",
        "logo": "./ajax-images/ECradioNWRo150.png",
        "state": "Canada, Ontario",
        "stateabbr": "ON",
        "goldstar": "<small title=\"Good Quality\" style=\"color:#ffdf00;display:inline;font-size:150%\">&star;<\/small>",
        "samecode": []
    }
}


module.exports = radio_streams;
},{}],84:[function(require,module,exports){
const plotToMap = require('./plot_to_map');
const armFunctions = require('../core/menu/atticRadarMenu');
var map = require('../core/map/map');

function weatherRadioToolsOption(index) {
    armFunctions.toggleswitchFunctions($('#armrWeatherRadioBtnSwitchElem'), function() {
        if (map.getLayer('radioStationLayer')) {
            // layer does exist - toggle the visibility to on
            map.setLayoutProperty('radioStationLayer', 'visibility', 'visible');
        } else {
            // layer doesn't exist - load it onto the map for the first time
            plotToMap();
        }
    }, function() {
        // layer does exist - toggle the visibility to off
        map.setLayoutProperty('radioStationLayer', 'visibility', 'none');
    })
    // createToolsOption({
    //     'divId': 'weatherstationItemDiv',
    //     'iconId': 'weatherstationItemClass',

    //     'index': index,

    //     'divClass': 'mapFooterMenuItem',
    //     'iconClass': 'icon-grey',

    //     'contents': 'Weather Radio Tool',
    //     'icon': 'fa fa-radio',
    //     'css': ''
    // }, function(divElem, iconElem) {
    //     if (!$(iconElem).hasClass('icon-blue')) {
    //         $(iconElem).addClass('icon-blue');
    //         $(iconElem).removeClass('icon-grey');

    //         if (map.getLayer('radioStationLayer')) {
    //             // layer does exist - toggle the visibility to on
    //             map.setLayoutProperty('radioStationLayer', 'visibility', 'visible');
    //         } else {
    //             // layer doesn't exist - load it onto the map for the first time
    //             plotToMap();
    //         }
    //     } else if ($(iconElem).hasClass('icon-blue')) {
    //         $(iconElem).removeClass('icon-blue');
    //         $(iconElem).addClass('icon-grey');

    //         // layer does exist - toggle the visibility to off
    //         map.setLayoutProperty('radioStationLayer', 'visibility', 'none');
    //     }
    // })
}

module.exports = {
    weatherRadioToolsOption
}
},{"../core/map/map":13,"../core/menu/atticRadarMenu":17,"./plot_to_map":85}],85:[function(require,module,exports){
const nwrStations = require('./data/nwr_stations');
const radioStreams = require('./data/radio_streams');
const turf = require('@turf/turf');
const setLayerOrder = require('../core/map/setLayerOrder');
const ut = require('../core/utils');
var map = require('../core/map/map');

const radioBtnGreen = 'rgb(57, 161, 53)';
const radioBtnRed = 'rgb(200, 44, 44)';

function plotToMap() {
    console.log(nwrStations);

    function checkIfHasLivestream(callsign) {
        if (radioStreams[callsign] != undefined) {
            return radioStreams[callsign].radiourl; //`${callsign}: ${radioStreams[callsign].radiourl}`;
        } else {
            return false;
        }
    }

    var coords = [];
    for (var i in nwrStations) {
        try {
            nwrStations[i].hasUrl = checkIfHasLivestream(nwrStations[i].CALLSIGN);
            var point = turf.point([parseFloat(nwrStations[i].LON), parseFloat(nwrStations[i].LAT)], nwrStations[i]);
            coords.push(point);
        } catch (e) { /*console.warn(e)*/ }
    }

    var radioStationGeojson = turf.featureCollection(coords);

    function addToMap() {
        map.addSource('radioStationSource', {
            type: 'geojson',
            data: radioStationGeojson
        });
        map.addLayer({
            'id': 'radioStationLayer',
            'type': 'circle',
            'source': 'radioStationSource',
            'paint': {
                'circle-radius': [
                    'case',
                    ['==', ['get', 'hasUrl'], false],
                    2,
                    ['==', ['get', 'STATUS'], 'NORMAL'],
                    4,
                    4
                ],
                'circle-color': [
                    'case',
                    ['==', ['get', 'hasUrl'], false],
                    '#82cfd9', // lighter blue
                    '#16a61a', // lighter green
                    // ['==', ['get', 'STATUS'], 'NORMAL'],
                    // '#16a61a', // lighter green
                    // // ['==', ['get', 'STATUS'], 'OUT OF SERVICE'],
                    // // '#de1818', // lighter red
                    // 'black'
                ],
                'circle-stroke-width': [
                    'case',
                    ['==', ['get', 'hasUrl'], false],
                    2,
                    ['==', ['get', 'STATUS'], 'NORMAL'],
                    4,
                    4
                ],
                'circle-stroke-color': [
                    'case',
                    ['==', ['get', 'hasUrl'], false],
                    '#64a7b0', // darker blue
                    '#107514', // darker green
                    // ['==', ['get', 'STATUS'], 'NORMAL'],
                    // '#107514', // darker green
                    // // ['==', ['get', 'STATUS'], 'OUT OF SERVICE'],
                    // // '#991111', // darker red
                    // 'black'
                ],
            }
        });
        setLayerOrder();

        var sound = document.createElement('audio');
        sound.id = 'radioAudio';
        document.body.appendChild(sound);

        function displayErrorModal(content) {
            ut.displayAtticDialog({
                'title': 'Error',
                'body': content,
                'color': '#ba3043',
                'textColor': 'white',
            })
        }

        $('#radioAudio').on('error', function (e) {
            // audio playback failed - show a message saying why
            switch (e.target.error.code) {
                case e.target.error.MEDIA_ERR_ABORTED:
                    displayErrorModal('You aborted the video playback.');
                    break;
                case e.target.error.MEDIA_ERR_NETWORK:
                    displayErrorModal('A network error caused the audio download to fail.');
                    break;
                case e.target.error.MEDIA_ERR_DECODE:
                    displayErrorModal('The audio playback was aborted due to a corruption problem or because the video used features your browser did not support.');
                    break;
                case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:
                    displayErrorModal('The video audio not be loaded, either because the server or network failed or because the format is not supported.');
                    break;
                default:
                    displayErrorModal('An unknown error occurred.');
                    break;
            }
        });

        map.on('click', 'radioStationLayer', (e) => {
            // console.log(`${e.features[0].properties.LAT}, ${e.features[0].properties.LON}`);
            const properties = e.features[0].properties;
            const callsign = properties.CALLSIGN;
            const radioStreamURL = checkIfHasLivestream(callsign);
            console.log(properties);

            var initColor;
            var iconType;
            if (window.currentStreamURL == radioStreamURL) {
                initColor = radioBtnRed;
                iconType = 'pause';
            } else {
                initColor = radioBtnGreen;
                iconType = 'play';
            }
            //var radioPlayBtn = `<button id="radioPlayBtn" url="${radioStreamURL}">Play</button>`;
            var radioPlayBtn = `<div id="radioPlayBtn" class="radioPausePlayBtn" style="color: ${initColor};" url="${radioStreamURL}"><i id="radioPlayBtnIcon" class="fa-solid fa-${iconType}"></i></div>`;
            if (radioStreamURL == false) { radioPlayBtn = '' }

            const popupContents = `
<div><b>${properties.CALLSIGN}</b></div>
<div>${properties.FREQ} MHz</div>
<div>${properties.SITENAME}, ${properties.SITESTATE}</div>
${radioPlayBtn}`

            const popup = new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000' })
                .setLngLat([properties.LON, properties.LAT])
                .setHTML(popupContents)
                .addTo(map);

            $('#radioPlayBtn').click((e) => {
                const radioPlayBtnIcon = document.getElementById('radioPlayBtnIcon');
                const radioPlayBtn = document.getElementById('radioPlayBtn');

                const btnColor = radioPlayBtn.style.color;
                const streamURL = radioPlayBtn.getAttribute('url');
                var radioAudioElem = document.getElementById('radioAudio');

                if (btnColor == radioBtnGreen) {
                    $('#radioPlayBtnIcon').removeClass('fa-play').addClass('fa-spinner fa-spin');

                    if (streamURL != 'false') {
                        window.currentStreamURL = streamURL;
                        radioAudioElem.src = streamURL;
                        radioAudioElem.play();
                    }

                    /* audio started loading */
                    // $('#radioAudio').on('loadstart', (e) => {})

                    /* audio will now start playing */
                    // $('#radioAudio').on('loadeddata', (e) => {})
                    $('#radioAudio').on('loadeddata', (e) => {
                        radioPlayBtn.style.color = radioBtnRed;
                        $('#radioPlayBtnIcon').removeClass('fa-spinner fa-spin').addClass('fa-pause');
                    })
                } else {
                    radioPlayBtn.style.color = radioBtnGreen
                    $('#radioPlayBtnIcon').removeClass('fa-pause').addClass('fa-play');

                    radioAudioElem.pause();
                }
            })
        })

        map.on('mouseenter', 'radioStationLayer', () => {
            map.getCanvas().style.cursor = 'pointer';
        });

        map.on('mouseleave', 'radioStationLayer', () => {
            map.getCanvas().style.cursor = '';
        });

        // map.on('click', (e) => {
        //     const popup = new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000' })
        //         .setLngLat(e.lngLat) // [-98.5606744, 36.8281576]
        //         .setHTML('This is a test.')
        //         .addTo(map);
        // })
    }

    if (map.loaded()) { addToMap() }
    else { map.on('load', function() { addToMap() }) }
}

module.exports = plotToMap;
},{"../core/map/map":13,"../core/map/setLayerOrder":15,"../core/utils":30,"./data/nwr_stations":82,"./data/radio_streams":83,"@turf/turf":105}],86:[function(require,module,exports){
const ut = require('../core/utils');
const urls = require('./urls');
const plot_data = require('./plot_data');

function fetch_spc_data() {
    fetch(ut.phpProxy + urls.convective.categorical.day1)
    .then(response => response.json())
    .then(json => {
        plot_data(json);
    })
}

module.exports = fetch_spc_data;
},{"../core/utils":30,"./plot_data":87,"./urls":88}],87:[function(require,module,exports){
const map = require('../core/map/map');
const set_layer_order = require('../core/map/setLayerOrder');

function _click_listener(e) {
    for (var i = 0; i < e.features.length; i++) {
        const properties = e.features[i].properties;

        const popup_html = 
`<div><b>${properties.LABEL2}</b></div>`

        new mapboxgl.Popup({ className: 'alertPopup', maxWidth: '1000' })
        .setLngLat(e.lngLat)
        .setHTML(popup_html)
        .addTo(map);
    }
}

function plot_data(geojson) {
    map.addSource('spc_source', {
        'type': 'geojson',
        data: geojson
    });

    // fill
    map.addLayer({
        'id': 'spc_fill',
        'type': 'fill',
        'source': 'spc_source',
        'paint': {
            'fill-color': ['get', 'fill'],
            'fill-opacity': 0.5
        }
    });
    // outline
    map.addLayer({
        'id': 'spc_border',
        'type': 'line',
        'source': 'spc_source',
        'paint': {
            'line-color': ['get', 'stroke'],
            'line-width': 3
        }
    });

    set_layer_order();

    map.off('click', 'spc_fill', _click_listener);
    map.on('click', 'spc_fill', _click_listener);
}

module.exports = plot_data;
},{"../core/map/map":13,"../core/map/setLayerOrder":15}],88:[function(require,module,exports){
// https://www.spc.noaa.gov/gis/
const urls = {
    convective: {
        categorical: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_cat.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_cat.nolyr.geojson',
            'day3': 'https://www.spc.noaa.gov/products/outlook/day3otlk_cat.nolyr.geojson',
        },

        probabalistic: {
            'day3': 'https://www.spc.noaa.gov/products/outlook/day3otlk_prob.nolyr.geojson',
            'day4': 'https://www.spc.noaa.gov/products/exper/day4-8/day4prob.nolyr.geojson',
            'day5': 'https://www.spc.noaa.gov/products/exper/day4-8/day5prob.nolyr.geojson',
            'day6': 'https://www.spc.noaa.gov/products/exper/day4-8/day6prob.nolyr.geojson',
            'day7': 'https://www.spc.noaa.gov/products/exper/day4-8/day7prob.nolyr.geojson',
            'day8': 'https://www.spc.noaa.gov/products/exper/day4-8/day8prob.nolyr.geojson',
        },
        significant_probabalistic: {
            'day3': 'https://www.spc.noaa.gov/products/outlook/day3otlk_sigprob.nolyr.geojson',
        },

        tornado: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_torn.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_torn.nolyr.geojson',
        },
        significant_tornado: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_sigtorn.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_sigtorn.nolyr.geojson',
        },

        wind: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_wind.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_wind.nolyr.geojson',
        },
        significant_wind: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_sigwind.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_sigwind.nolyr.geojson',
        },

        hail: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_hail.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_hail.nolyr.geojson',
        },
        significant_hail: {
            'day1': 'https://www.spc.noaa.gov/products/outlook/day1otlk_sighail.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/outlook/day2otlk_sighail.nolyr.geojson',
        }
    },
    fire: {
        dryt: {
            'day1': 'https://www.spc.noaa.gov/products/fire_wx/day1fw_dryt.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/fire_wx/day2fw_dryt.nolyr.geojson'
        },
        windrh: {
            'day1': 'https://www.spc.noaa.gov/products/fire_wx/day1fw_windrh.nolyr.geojson',
            'day2': 'https://www.spc.noaa.gov/products/fire_wx/day2fw_windrh.nolyr.geojson'
        },

        dryt_categorical: {
            'day3': 'https://www.spc.noaa.gov/products/exper/fire_wx/day3fw_drytcat.nolyr.geojson',
            'day4': 'https://www.spc.noaa.gov/products/exper/fire_wx/day4fw_drytcat.nolyr.geojson',
            'day5': 'https://www.spc.noaa.gov/products/exper/fire_wx/day5fw_drytcat.nolyr.geojson',
            'day6': 'https://www.spc.noaa.gov/products/exper/fire_wx/day6fw_drytcat.nolyr.geojson',
            'day7': 'https://www.spc.noaa.gov/products/exper/fire_wx/day7fw_drytcat.nolyr.geojson',
            'day8': 'https://www.spc.noaa.gov/products/exper/fire_wx/day8fw_drytcat.nolyr.geojson',
        },
        dryt_probabalistic: {
            'day3': 'https://www.spc.noaa.gov/products/exper/fire_wx/day3fw_drytprob.nolyr.geojson',
            'day4': 'https://www.spc.noaa.gov/products/exper/fire_wx/day4fw_drytprob.nolyr.geojson',
            'day5': 'https://www.spc.noaa.gov/products/exper/fire_wx/day5fw_drytprob.nolyr.geojson',
            'day6': 'https://www.spc.noaa.gov/products/exper/fire_wx/day6fw_drytprob.nolyr.geojson',
            'day7': 'https://www.spc.noaa.gov/products/exper/fire_wx/day7fw_drytprob.nolyr.geojson',
            'day8': 'https://www.spc.noaa.gov/products/exper/fire_wx/day8fw_drytprob.nolyr.geojson',
        },

        windrh_categorical: {
            'day3': 'https://www.spc.noaa.gov/products/exper/fire_wx/day3fw_windrhcat.nolyr.geojson',
            'day4': 'https://www.spc.noaa.gov/products/exper/fire_wx/day4fw_windrhcat.nolyr.geojson',
            'day5': 'https://www.spc.noaa.gov/products/exper/fire_wx/day5fw_windrhcat.nolyr.geojson',
            'day6': 'https://www.spc.noaa.gov/products/exper/fire_wx/day6fw_windrhcat.nolyr.geojson',
            'day7': 'https://www.spc.noaa.gov/products/exper/fire_wx/day7fw_windrhcat.nolyr.geojson',
            'day8': 'https://www.spc.noaa.gov/products/exper/fire_wx/day8fw_windrhcat.nolyr.geojson',
        },
        windrh_probabalistic: {
            'day3': 'https://www.spc.noaa.gov/products/exper/fire_wx/day3fw_windrhprob.nolyr.geojson',
            'day4': 'https://www.spc.noaa.gov/products/exper/fire_wx/day4fw_windrhprob.nolyr.geojson',
            'day5': 'https://www.spc.noaa.gov/products/exper/fire_wx/day5fw_windrhprob.nolyr.geojson',
            'day6': 'https://www.spc.noaa.gov/products/exper/fire_wx/day6fw_windrhprob.nolyr.geojson',
            'day7': 'https://www.spc.noaa.gov/products/exper/fire_wx/day7fw_windrhprob.nolyr.geojson',
            'day8': 'https://www.spc.noaa.gov/products/exper/fire_wx/day8fw_windrhprob.nolyr.geojson',
        },
    }
}

module.exports = urls;
},{}],89:[function(require,module,exports){
/**
 * https://www.wpc.ncep.noaa.gov/html/read_coded_bull.shtml
 */

const frontal_types = ['WARM', 'COLD', 'STNRY', 'OCFNT', 'TROF'];
const frontal_strength_types = ['WK', 'MDT', 'STG'];

class SurfaceFronts {
    constructor(raw_text) {
        this._extra = {};
        // this.raw_text = raw_text;
        this.lines = this._remove_empty_strings_from_array(raw_text.split('\n'));

        this.parse_header();
        this.parse_highs_lows();
        this.parse_fronts();
    }

    parse_fronts() {
        this.fronts = [];
        this.fronts.warm = [];
        this.fronts.cold = [];
        this.fronts.stationary = [];
        this.fronts.occluded = [];
        this.fronts.trough = [];

        var last_front_type;
        const fronts_lines = this.lines.slice(this._extra.fronts_pointer, this.lines.length);
        for (var i = 0; i < fronts_lines.length; i++) {
            const parts = this._remove_empty_strings_from_array(fronts_lines[i].split(' '));

            if (frontal_types.includes(parts[0])) {
                const current_front = {};
                const key_to_push_to = this._parse_front_type(parts[0]);
                last_front_type = key_to_push_to;
                const frontal_strength = this._parse_frontal_strength(parts[1]);
                current_front.strength = frontal_strength;

                var slice_index = 2;
                if (frontal_strength == null) slice_index = 1;
                const front_coordinates = this._parse_fronts_raw_data_row(parts.slice(slice_index, parts.length));
                current_front.coordinates = front_coordinates;

                this.fronts[key_to_push_to].push(current_front);
            } else {
                const front_coordinates = this._parse_fronts_raw_data_row(parts);

                const base = this.fronts[last_front_type];
                if (!(isNaN(front_coordinates[0][0]) || isNaN(front_coordinates[0][1]))) {
                    // console.log(last_front_type, front_coordinates)
                    this.fronts[last_front_type][base.length - 1].coordinates.push(...front_coordinates);
                }
            }
        }
    }

    parse_highs_lows() {
        this.highs = {};
        this.lows = {};

        var highs_lows_lines = [];
        for (var i = 6; i < this.lines.length; i++) {
            if (frontal_types.some(substr => this.lines[i].startsWith(substr))) {
                this._extra.fronts_pointer = i;
                break;
            } else {
                highs_lows_lines.push(this.lines[i]);
            }
        }
        highs_lows_lines = highs_lows_lines.join(' ').split('LOWS');

        const highs_text_raw = highs_lows_lines[0];
        // this.highs.highs_text_raw = highs_text_raw;
        const lows_text_raw = `LOWS${highs_lows_lines[1]}`;
        // this.lows.lows_text_raw = lows_text_raw;

        const highs_formatted = this._parse_highs_lows_raw_data(highs_text_raw);
        this.highs.highs_formatted = highs_formatted;
        const lows_formatted = this._parse_highs_lows_raw_data(lows_text_raw);
        this.lows.lows_formatted = lows_formatted;
    }

    parse_header() {
        this.header = {};
        const header_lines = this.lines.slice(0, 6);

        this.header.message_type = header_lines[1];
        this.header.message_description = header_lines[2];
        this.header.message_author = header_lines[3];
        this.header.date_string = header_lines[4];
        this.header.valid_time = header_lines[5];
    }

    _parse_highs_lows_raw_data(data) {
        data = data.replace('HIGHS', '');
        data = data.replace('LOWS', '');

        const pressures = [];
        const coordinates = [];

        const parts = this._remove_empty_strings_from_array(data.split(' '));
        // this is a simple check to see if the first item is a pressure value,
        // e.g. above 800 mb but below 1200 mb. If not, there is an error where
        // coordinates were provided first - in that case, simply remove the
        // leading "straggler".
        if (!(parseInt(parts[0]) > 800 && parseInt(parts[0]) < 1200)) {
            parts.shift();
        }

        for (var i = 0; i < parts.length; i++) {
            if (i % 2 == 0) {
                const pressure = parseInt(parts[i]);
                pressures.push(pressure);
                // console.log(pressure);
            } else {
                const [longitude, latitude] = this._parse_coordinates(parts[i]);
                coordinates.push([longitude, latitude]);
                // console.log(parts[i])
                // console.log(longitude, latitude)
            }
        }

        const highs_lows_formatted = [];
        for (var i = 0; i < pressures.length; i++) {
            highs_lows_formatted.push({
                pressure: pressures[i],
                coordinates: coordinates[i]
            })
        }

        return highs_lows_formatted;
    }

    _parse_fronts_raw_data_row(rows) {
        const parsed_coordinates = [];
        for (var i = 0; i < rows.length; i++) {
            const [longitude, latitude] = this._parse_coordinates(rows[i]);
            parsed_coordinates.push([longitude, latitude]);
        }
        return parsed_coordinates;
    }

    /**
     * https://github.com/Unidata/MetPy/blob/main/src/metpy/io/text.py#L20
     */
    _parse_coordinates(coordinates_string) {
        // Based on the number of digits, find the correct place to split between lat and lon
        // Hires bulletins provide 7 digits for coordinates; regular bulletins provide 4 or 5 digits
        var split_pos = Math.floor(coordinates_string.length / 2);
        var lat = coordinates_string.slice(0, split_pos);
        var lon = coordinates_string.slice(split_pos);

        // Insert decimal point at the correct place and convert to float
        lat = parseFloat(lat.slice(0, 2) + '.' + lat.slice(2));
        lon = -parseFloat(lon.slice(0, 3) + '.' + lon.slice(3));

        return [lon, lat];
    }

    _parse_front_type(abbv) {
        if (abbv == 'WARM') return 'warm';
        if (abbv == 'COLD') return 'cold';
        if (abbv == 'STNRY') return 'stationary';
        if (abbv == 'OCFNT') return 'occluded';
        if (abbv == 'TROF') return 'trough';
        else return 'unknown';
    }

    _parse_frontal_strength(abbv) {
        if (abbv == 'WK') return 'weak';
        if (abbv == 'MDT') return 'moderate';
        if (abbv == 'STG') return 'strong';
        else return null;
    }

    _remove_empty_strings_from_array(array) {
        return array.filter(line => { return line.trim() != '' });
    }
}

module.exports = SurfaceFronts;
},{}],90:[function(require,module,exports){
const SurfaceFronts = require('./SurfaceFronts');
const plot_data = require('./plot_data');
const ut = require('../core/utils');

function _remove_empty_strings_from_array(array) {
    return array.filter(line => { return line.trim() != '' });
}

function fetch_data() {
    const hires_file_url = `https://tgftp.nws.noaa.gov/data/raw/as/asus02.kwbc.cod.sus.txt`;
    const lowres_file_url = `https://tgftp.nws.noaa.gov/data/raw/as/asus01.kwbc.cod.sus.txt`;

    fetch(ut.phpProxy + hires_file_url)
    .then(response => response.text())
    .then(data => {
        var formatted_lines = _remove_empty_strings_from_array(data.replaceAll('\r', '').split('\n'));
        formatted_lines = formatted_lines.join('\n');

        const fronts = new SurfaceFronts(formatted_lines);
        console.log(fronts);
        plot_data(fronts);
    })
}

module.exports = fetch_data;
},{"../core/utils":30,"./SurfaceFronts":89,"./plot_data":92}],91:[function(require,module,exports){
const fetch_data = require('./fetch_data');
const map = require('../core/map/map');

const div_elem = '#surfaceFrontsMenuItemDiv';
const icon_elem = '#surfaceFrontsMenuItemIcon';

const surface_fronts_layers = [
    'fronts_layer',
    'pressure_points_layer',
    'front_symbols_layer',
];
window.atticData.surface_fronts_layers = surface_fronts_layers;

$(icon_elem).on('click', function () {
    if (!$(icon_elem).hasClass('icon-blue')) {
        $(icon_elem).addClass('icon-blue');
        $(icon_elem).removeClass('icon-grey');

        if (map.getLayer(surface_fronts_layers[0])) {
            for (var i = 0; i < surface_fronts_layers.length; i++) {
                // surface fronts layers already exist, simply toggle visibility here
                map.setLayoutProperty(surface_fronts_layers[i], 'visibility', 'visible');
            }
        } else {
            // surface fronts layers do not exist, load them into the map style
            fetch_data();
        }
    } else if ($(icon_elem).hasClass('icon-blue')) {
        $(icon_elem).removeClass('icon-blue');
        $(icon_elem).addClass('icon-grey');

        for (var i = 0; i < surface_fronts_layers.length; i++) {
            // hide the surface fronts layers
            map.setLayoutProperty(surface_fronts_layers[i], 'visibility', 'none');
        }
    }
})
},{"../core/map/map":13,"./fetch_data":90}],92:[function(require,module,exports){
const map = require('../core/map/map');
const turf = require('@turf/turf');
const set_layer_order = require('../core/map/setLayerOrder');
const icons = require('../core/map/icons/icons');

/**
 * https://www.wpc.ncep.noaa.gov/html/fntcodes2.shtml
 */
const blue = 'rgb(0, 100, 245)'; // 'rgb(0, 0, 245)';
const red = 'rgb(234, 51, 35)';
const purple = 'rgb(95, 54, 196)';
const orange = 'rgb(194, 115, 47)';
const green = 'rgb(0, 255, 0)';

function wait_for_map_load(func) {
    func();
    // setTimeout(function() {
    //     if (map.loaded()) {
    //         func();
    //     } else {
    //         map.on('load', function() {
    //             func();
    //         })
    //     }
    // }, 0)
}

function _copy(object) {
    return JSON.parse(JSON.stringify(object));
}

/**
 * From ChatGPT
 */
// const calculate_midpoint = (point1, point2) => [(point1[0] + point2[0]) / 2, (point1[1] + point2[1]) / 2];
const calculate_midpoint = (point1, point2) => turf.midpoint(turf.point(point1), turf.point(point2)).geometry.coordinates;
const add_midpoints = array =>
    array.flatMap((point, index) => (index < array.length - 1 ? [point, calculate_midpoint(point, array[index + 1])] : [point]));

function _return_fronts_linestrings(key, SurfaceFronts) {
    const properties = {
        width: 4,
        dasharray: [],
    };
    if (key == 'warm') {
        properties.color = red;
    } else if (key == 'cold') {
        properties.color = blue;
    } else if (key == 'occluded') {
        properties.color = purple;
    } else if (key == 'trough') {
        properties.color = orange;
        properties.width = 2.5;
        properties.dasharray = [2, 3];
    }

    const lines = [];
    for (var i = 0; i < SurfaceFronts.fronts[key].length; i++) {
        const base = SurfaceFronts.fronts[key][i];
        properties.strength = base.strength;
        base.coordinates = add_midpoints(base.coordinates);

        if (key == 'stationary') {
            var last_color = red;
            for (var n = 0; n < base.coordinates.length - 2; n += 2) {
                if (last_color == red) last_color = blue;
                else if (last_color == blue) last_color = red;
                properties.color = last_color;

                const sub_array = base.coordinates.slice(n, n + 3);
                const linestring = turf.lineString(sub_array, _copy(properties));
                lines.push(linestring);
            }
        } else {
            const linestring = turf.lineString(base.coordinates, properties);
            lines.push(linestring);
        }
    }
    return lines;
}

function _add_fronts_layer(feature_collection) {
    map.addLayer({
        'id': `fronts_layer`,
        'type': 'line',
        'source': {
            type: 'geojson',
            data: feature_collection
        },
        'layout': {
            'line-join': 'round',
            'line-cap': 'round'
        },
        'paint': {
            'line-color': ['get', 'color'],
            'line-width': ['get', 'width'],
            'line-dasharray': ['get', 'dasharray'],
        }
    });
}

function _return_pressure_points(key, SurfaceFronts) {
    const properties = {};
    if (key == 'high') {
        properties.color = blue;
        properties.letter = 'H';
    } else if (key == 'low') {
        properties.color = red;
        properties.letter = 'L';
    }

    const points = [];
    for (var i = 0; i < SurfaceFronts[`${key}s`][`${key}s_formatted`].length; i++) {
        const base = SurfaceFronts[`${key}s`][`${key}s_formatted`][i];
        properties.pressure = base.pressure;
        const point = turf.point(base.coordinates, properties);
        points.push(point);
    }
    return points;
}

function _add_pressure_point_layer(feature_collection) {
    map.addLayer({
        'id': `pressure_points_layer`,
        'type': 'symbol',
        'source': {
            type: 'geojson',
            data: feature_collection
        },
        'layout': {
            'text-field': ['get', 'letter'],
            'text-size': 50,
            'text-font': ['Open Sans Bold']
        },
        'paint': {
            'text-color': ['get', 'color']
        }
    });
}

function _return_symbols_points(key, SurfaceFronts) {
    var properties = {};

    const semicircle_offset = [0, 10];
    const semicircle_size = 0.2;
    const semicircle_modifier = -90;

    const triangle_offset = [0, 0];
    const triangle_size = 0.14;
    const triangle_modifier = -90;

    if (key == 'warm') {
        properties.modifier = semicircle_modifier;
        properties.image = 'semicircle_red';
        properties.size = semicircle_size;
        properties.offset = semicircle_offset;
    } else if (key == 'cold') {
        properties.modifier = triangle_modifier;
        properties.image = 'triangle_blue';
        properties.size = triangle_size;
        properties.offset = triangle_offset;
    }

    const points = [];
    const base = SurfaceFronts.fronts[key];
    for (var n = 0; n < base.length; n++) {
        var last_symbol = 'semicircle';
        for (var i = 0; i < base[n].coordinates.length; i++) {
            const current_point = base[n].coordinates[i];
            const next_point = base[n].coordinates[i + 1];
            if (i % 2 != 0) { // we're on a midpoint
                const midpoint = turf.point(current_point);
                const bearing = turf.bearing(turf.point(current_point), turf.point(next_point));

                // occluded and stationary fronts have alternating symbols
                if (key == 'occluded' || key == 'stationary') {
                    if (last_symbol == 'semicircle') {
                        last_symbol = 'triangle';

                        if (key == 'occluded') properties.image = `${last_symbol}_purple`;
                        else if (key == 'stationary') properties.image = `${last_symbol}_blue`;

                        properties.modifier = triangle_modifier;
                        properties.size = triangle_size;
                        properties.offset = triangle_offset;
                    } else if (last_symbol == 'triangle') {
                        last_symbol = 'semicircle';

                        if (key == 'occluded') properties.image = `${last_symbol}_purple`;
                        else if (key == 'stationary') properties.image = `${last_symbol}_red`;

                        properties.modifier = semicircle_modifier;
                        properties.size = semicircle_size;
                        properties.offset = semicircle_offset;
                    }
                }

                properties.bearing = bearing;
                midpoint.properties = _copy(properties);
                points.push(midpoint);
            }
        }
    }
    return points;
}

function _add_front_symbols_layer(feature_collection) {
    map.addLayer({
        'id': `front_symbols_layer`,
        'type': 'symbol',
        'source': {
            type: 'geojson',
            data: feature_collection
        },
        'layout': {
            'icon-image': ['get', 'image'],
            'icon-size': ['get', 'size'],
            'icon-offset': ['get', 'offset'],
            'icon-anchor': 'bottom',
            'icon-rotate': ['+', ['get', 'modifier'], ['get', 'bearing']]
        }
    });
}

function plot_data(SurfaceFronts) {
    const warm_front_linestrings = _return_fronts_linestrings('warm', SurfaceFronts);
    const cold_front_linestrings = _return_fronts_linestrings('cold', SurfaceFronts);
    const occluded_front_linestrings = _return_fronts_linestrings('occluded', SurfaceFronts);
    const trough_front_linestrings = _return_fronts_linestrings('trough', SurfaceFronts);
    const stationary_front_linestrings = _return_fronts_linestrings('stationary', SurfaceFronts);
    const all_fronts_linestrings = turf.featureCollection([
        ...warm_front_linestrings,
        ...cold_front_linestrings,
        ...occluded_front_linestrings,
        ...trough_front_linestrings,
        ...stationary_front_linestrings
    ]);

    const warm_front_symbols_points = _return_symbols_points('warm', SurfaceFronts);
    const cold_front_symbols_points = _return_symbols_points('cold', SurfaceFronts);
    const occluded_front_symbols_points = _return_symbols_points('occluded', SurfaceFronts);
    const stationary_front_symbols_points = _return_symbols_points('stationary', SurfaceFronts);
    const all_front_symbols_points = turf.featureCollection([
        ...warm_front_symbols_points,
        ...cold_front_symbols_points,
        ...occluded_front_symbols_points,
        ...stationary_front_symbols_points
    ]);

    const highs_points = _return_pressure_points('high', SurfaceFronts);
    const lows_points = _return_pressure_points('low', SurfaceFronts);
    const all_pressure_points_linestrings = turf.featureCollection([
        ...highs_points,
        ...lows_points,
    ]);

    wait_for_map_load(() => {
        icons.add_icon_svg([
            [icons.icons.blue_triangle, 'triangle_blue'],
            [icons.icons.purple_triangle, 'triangle_purple'],
            [icons.icons.red_semicircle, 'semicircle_red'],
            [icons.icons.purple_semicircle, 'semicircle_purple'],
        ], () => {
            _add_fronts_layer(all_fronts_linestrings);
            _add_pressure_point_layer(all_pressure_points_linestrings);
            _add_front_symbols_layer(all_front_symbols_points);

            set_layer_order();
        })
    })
}

module.exports = plot_data;
},{"../core/map/icons/icons":12,"../core/map/map":13,"../core/map/setLayerOrder":15,"@turf/turf":105}],93:[function(require,module,exports){
const plotData = require('./plot_data');
const ut = require('../core/utils');

function fetchData() {
    // class valueWithUnits {
    //     constructor (value, units) {
    //         this.value = value;
    //         this.units = units;
    //     }
    // }
    class WeatherFlow_OBS_ST {
        constructor (data) {
            const base = data.obs[0];
            this.epoch = base[0]; // seconds
            this.windLull = base[1]; // m/s
            this.windAverage = base[2]; // m/s
            this.windGust = base[3]; // m/s
            this.windDirection = base[4]; // degrees
            this.windSampleInterval = base[5]; // seconds
            this.stationPressure = base[6]; // mb
            this.airTemp = base[7]; // C
            this.relativeHumidity = base[8]; // %
            this.illuminance = base[9]; // lux
            this.UV = base[10]; // index
            this.solarRadiation = base[11]; // W/m^2
            this.rainAccumulated = base[12]; // mm

            var pt = base[13];
            if (pt == 0) { pt = 'none' }
            else if (pt == 1) { pt = 'rain' }
            else if (pt == 2) { pt = 'hail' }
            this.precipitationType = pt;

            this.lightningStrikeAvgDistance = base[14]; // km
            this.lightningStrikeCount = base[15];
            this.battery = base[16]; // volts
            this.reportInterval = base[17]; // minutes
            this.localDailyRainAccumulation = base[18]; // mm
            this.rainAccumulatedFinal = base[19]; // mm
            this.localDailyRainAccumulationFinal = base[20]; // mm

            var pat = base[21];
            if (pat == 0) { pat = 'none' }
            else if (pat == 1) { pat = 'rainCheckWithUserDisplayOn' }
            else if (pat == 2) { pat = 'rainCheckWithUserDisplayOff' }
            this.precipitationAnalysisType = pat;
        }
    }

    // const token = 'private';

    // const listStationsUrl = `https://swd.weatherflow.com/swd/rest/stations?token=${token}`;
    // $.getJSON(listStationsUrl, function(listStationsData) {
    //     const stationID = listStationsData.stations[0].station_id;
    //     const latestObservationsUrl = `https://swd.weatherflow.com/swd/rest/observations/station/${stationID}?token=${token}`;

    //     $.getJSON(latestObservationsUrl, function(loData) { plotData(loData, loData.obs[0]) })
    // })

    $.getJSON('https://attic-server.herokuapp.com/weather-station/index.php', function(data) {
        // if ($(iconElem).hasClass('icon-blue')) {
        //     $(iconElem).removeClass('icon-blue');
        //     $(iconElem).addClass('icon-grey');
        // }
        ut.loadingSpinner(false);
        plotData(data, data.observations);
    })

    // function processData(data) {
    //     if (data.type == 'obs_st') {
    //         const parsedData = new WeatherFlow_OBS_ST(data);
    //         console.log(parsedData.airTemp);
    //     } else { console.log(data) }
    // }

    // const wsUrl = `wss://ws.weatherflow.com/swd/data?token=${token}`;
    // const ws = new WebSocket(wsUrl);

    // ws.onmessage = (e) => { processData(JSON.parse(e.data)) }
    // ws.onerror = (e) => { console.error(e) }
    // ws.onopen = (e) => {
    //     ws.send(JSON.stringify({
    //         'type': 'listen_start',
    //         'device_id': 00000,
    //         'id': 'random-id-12345'
    //     }))
    // }
}

module.exports = fetchData;
},{"../core/utils":30,"./plot_data":95}],94:[function(require,module,exports){
const fetchData = require('./fetch_data');
const ut = require('../core/utils');
const armFunctions = require('../core/menu/atticRadarMenu');

function weatherstationToolsOption(index) {
    $('#armrAtticStationBtn').click(function() {
        ut.loadingSpinner(true);
        fetchData();
        armFunctions.hideARMwindow();
    })
    // createToolsOption({
    //     'divId': 'weatherstationItemDiv',
    //     'iconId': 'weatherstationItemClass',

    //     'index': index,

    //     'divClass': 'mapFooterMenuItem',
    //     'iconClass': 'icon-grey',

    //     'contents': 'Weather Station Tool',
    //     'icon': 'fa fa-tower-broadcast',
    //     'css': ''
    // }, function(divElem, iconElem) {
    //     if (!$(iconElem).hasClass('icon-blue')) {
    //         $(iconElem).addClass('icon-blue');
    //         $(iconElem).removeClass('icon-grey');
    //     }
    //     ut.loadingSpinner(true);
    //     fetchData(iconElem);
    //     // if (!$(iconElem).hasClass('icon-blue')) {
    //     //     $(iconElem).addClass('icon-blue');
    //     //     $(iconElem).removeClass('icon-grey');

    //     //     fetchData();
    //     // } else if ($(iconElem).hasClass('icon-blue')) {
    //     //     $(iconElem).removeClass('icon-blue');
    //     //     $(iconElem).addClass('icon-grey');

    //     //     distanceMeasure.disableDistanceMeasure();
    //     // }
    // })
}

module.exports = {
    weatherstationToolsOption
}
},{"../core/menu/atticRadarMenu":17,"../core/utils":30,"./fetch_data":93}],95:[function(require,module,exports){
const ut = require('../core/utils');
const getTempColor = require('../core/misc/temp_colors');
const chroma = require('chroma-js');
const display_attic_dialog = require('../core/menu/attic_dialog');
var map = require('../core/map/map');
window.map = map;

function getFormattedDateDiff(dateDiff) {
    var formattedDateDiff;
    if (dateDiff.s) { formattedDateDiff = `${dateDiff.s}s`; }
    if (dateDiff.m) { formattedDateDiff = `${dateDiff.m}m ${dateDiff.s}s`; }
    if (dateDiff.h) { formattedDateDiff = `${dateDiff.h}h ${dateDiff.m}m`; }
    if (dateDiff.d) { formattedDateDiff = `${dateDiff.d}d ${dateDiff.h}h`; }

    var cssClass;
    // less than 0 hours 1 minutes
    if (dateDiff.h == 0 && dateDiff.m < 1) { cssClass = 'new-file'; }
    // greater than or equal to 0 hours 1 minutes
    if (dateDiff.h == 0 && dateDiff.m >= 1) { cssClass = 'recent-file'; }
    // greater than 1 hour or 1 day OR greater than or equal to 0 hours 2 minutes
    if (dateDiff.h > 0 || dateDiff.d > 0 || (dateDiff.h == 0 && dateDiff.m >= 2)) { cssClass = 'old-file'; }

    return [formattedDateDiff, cssClass];
}

function plotData(data, base) {
    console.log(data);

    const toFixedWithoutZeros = (num, precision) => `${1 * num.toFixed(precision)}`;

    //const base = data.obs[0];
    var validTimeDateObj = new Date(base.timestamp * 1000);
    var validTime = ut.printFancyTime(validTimeDateObj);
    var dateDiff = ut.getDateDiff(new Date(), validTimeDateObj);
    dateDiff = getFormattedDateDiff(dateDiff); // ['23s', 'new-file']

    var temp = toFixedWithoutZeros(ut.CtoF(base.air_temperature), 1);
    var dewPoint = toFixedWithoutZeros(ut.CtoF(base.dew_point), 1);
    var pressure = toFixedWithoutZeros(ut.MBtoINHG(base.barometric_pressure), 3);
    var windSpeed = base.wind_avg;
    var windGusts = base.wind_gust;
    var windDirection = base.wind_direction;
    var tempColor = getTempColor(temp);

    const dialogContent = 
`<div style="text-align: center; font-size: 30px; color: ${tempColor[1]}; background-color: ${tempColor[0]}"><b>${temp}</b> °F</div>
<i><b>VALID: </b><b class="${dateDiff[1]}">${dateDiff[0]} ago</b> (${validTime})</i>
<b>Dew Point: </b>${dewPoint} °F
<b>Barometer: </b>${pressure} inHG

<b>Wind:</b>
${windSpeed} mph
${windGusts} mph gusts
${windDirection}° (${ut.degToCompass(windDirection)})
<img src="./icons/compass.png" class="centerImg" style="max-width: 50%; max-height: 50%; transform: rotate(${windDirection}deg)">`

    var dialogColor = chroma(tempColor[0]).alpha(0.8).css();
    var dialogTextColor = chroma(dialogColor).luminance() > 0.4 ? 'black' : 'white';
    display_attic_dialog({
        'title': `AtticStation (<u style="cursor: pointer" class="icon-selected" onclick="$('#atcDlgClose').click(); window.map.flyTo({ center: [-77.0369, 38.9072], zoom: 8, speed: 2, essential: true })">DC Metro Area</u>)`,
        'body': dialogContent, //JSON.stringify(data, null, 4),
        'color': 'rgb(19, 19, 19)',
        'textColor': 'white'
    });
}

module.exports = plotData;
},{"../core/map/map":13,"../core/menu/attic_dialog":18,"../core/misc/temp_colors":29,"../core/utils":30,"chroma-js":110}],96:[function(require,module,exports){
/** Burrows-Wheeler transform, computed with the Induced Sorting Suffix Array
 *  construction mechanism (sais).  Code is a port of:
 *    https://sites.google.com/site/yuta256/sais
 *  which is:
 *    Copyright (c) 2008-2010 Yuta Mori All Rights Reserved.
 *  and licensed under an MIT/X11 license.  I generally looked at both
 *  the C and the Java implementations to guide my work.
 *
 * This JavaScript port is:
 *    Copyright (c) 2013 C. Scott Ananian
 * and licensed under GPLv2; see the README at the top level of this package.
 */
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./freeze', './Util'], function(freeze, Util) {

const freeze = require('./freeze');
// const BWT = require('./BWT');
const Util = require('./Util');

    var ASSERT = console.assert.bind(console);

    // we're dispensing with the "arbitrary alphabet" stuff of the source
    // and just using Uint8Arrays.

    /** Find the start or end of each bucket. */
    var getCounts = function(T, C, n, k) {
        var i;
        for (i = 0; i < k; i++) { C[i] = 0; }
        for (i = 0; i < n; i++) { C[T[i]]++; }
    };
    var getBuckets = function(C, B, k, end) {
        var i, sum = 0;
        if (end) {
            for (i = 0; i < k; i++) { sum += C[i]; B[i] = sum; }
        } else {
            for (i = 0; i < k; i++) { sum += C[i]; B[i] = sum - C[i]; }
        }
    };

    /** Sort all type LMS suffixes */
    var LMSsort = function(T, SA, C, B, n, k) {
        var b, i, j;
        var c0, c1;
        /* compute SAl */
        if (C === B) { getCounts(T, C, n, k); }
        getBuckets(C, B, k, false); /* find starts of buckets */
        j = n - 1;
        b = B[c1 = T[j]];
        j--;
        SA[b++] = (T[j] < c1) ? ~j : j;
        for (i = 0; i < n; i++) {
            if ((j = SA[i]) > 0) {
                ASSERT(T[j] >= T[j+1]);
                if ((c0 = T[j]) !== c1) { B[c1] = b; b = B[c1 = c0]; }
                ASSERT(i < b);
                j--;
                SA[b++] = (T[j] < c1) ? ~j : j;
                SA[i] = 0;
            } else if (j < 0) {
                SA[i] = ~j;
            }
        }
        /* compute SAs */
        if (C === B) { getCounts(T, C, n, k); }
        getBuckets(C, B, k, 1); /* find ends of buckets */
        for (i = n-1, b = B[c1 = 0]; i >= 0; i--) {
            if ((j = SA[i]) > 0) {
                ASSERT(T[j] <= T[j+1]);
                if ((c0 = T[j]) !== c1) { B[c1] = b; b = B[c1 = c0]; }
                ASSERT(b <= i);
                j--;
                SA[--b] = (T[j] > c1) ? ~(j+1) : j;
                SA[i] = 0;
            }
        }
    };

    var LMSpostproc = function(T, SA, n, m) {
        var i, j, p, q, plen, qlen, name;
        var c0, c1;
        var diff;

        /* compact all the sorted substrings into the first m items of SA
         * 2*m must not be larger than n (provable) */
        ASSERT(n > 0);
        for (i = 0; (p = SA[i]) < 0; i++) { SA[i] = ~p; ASSERT((i+1) < n); }
        if (i < m) {
            for (j = i, i++; ; i++) {
                ASSERT(i < n);
                if ((p = SA[i]) < 0) {
                    SA[j++] = ~p; SA[i] = 0;
                    if (j === m) { break; }
                }
            }
        }

        /* store the length of all substrings */
        c0 = T[i = j = n - 1];
        do { c1 = c0; } while ( ((--i) >= 0 ) && ((c0=T[i]) >= c1) );
        for (; i >= 0; ) {
            do { c1 = c0; } while ( ((--i) >= 0 ) && ((c0=T[i]) <= c1) );
            if (i >= 0) {
                SA[m + ((i + 1) >>> 1)] = j - i; j = i + 1;
                do { c1 = c0; } while ( ((--i) >= 0 ) && ((c0=T[i]) >= c1) );
            }
        }

        /* find the lexicographic names of all substrings */
        for (i = 0, name = 0, q = n, qlen = 0; i < m; i++) {
            p = SA[i]; plen = SA[m + (p >>> 1)]; diff = true;
            if ((plen === qlen) && ((q + plen) < n)) {
                for (j = 0; (j < plen) && (T[p + j] === T[q + j]); ) { j++; }
                if (j === plen) { diff = false; }
            }
            if (diff) { name++; q = p; qlen = plen; }
            SA[m + (p >>> 1)] = name;
        }

        return name;
    };

    /* compute SA and BWT */
    var induceSA = function(T, SA, C, B, n, k) {
        var b, i, j;
        var c0, c1;
        /* compute SAl */
        if (C === B) { getCounts(T, C, n, k); }
        getBuckets(C, B, k, false); /* find starts of buckets */
        j = n - 1;
        b = B[c1 = T[j]];
        SA[b++] = ((j > 0) && (T[j-1] < c1)) ? ~j : j;
        for (i = 0; i < n; i++) {
            j = SA[i]; SA[i] = ~j;
            if (j > 0) {
                j--;
                ASSERT( T[j] >= T[j + 1] );
                if ((c0 = T[j]) !== c1) { B[c1]  = b; b = B[c1=c0]; }
                ASSERT( i < b );
                SA[b++] = ((j > 0) && (T[j-1] < c1)) ? ~j : j;
            }
        }
        /* compute SAs */
        if (C === B) { getCounts(T, C, n, k); }
        getBuckets(C, B, k, true); /* find ends of buckets */
        for (i = n-1, b = B[c1 = 0]; i >= 0; i--) {
            if ((j = SA[i]) > 0) {
                j--;
                ASSERT( T[j] <= T[j + 1] );
                if ((c0 = T[j]) !== c1) { B[c1] = b; b = B[c1 = c0]; }
                ASSERT( b <= i );
                SA[--b] = ((j === 0) || (T[j - 1] > c1)) ? ~j : j;
            } else {
                SA[i] = ~j;
            }
        }
    };

    var computeBWT = function(T, SA, C, B, n, k) {
        var b, i, j, pidx = -1;
        var c0, c1;
        /* compute SAl */
        if (C === B) { getCounts(T, C, n, k); }
        getBuckets(C, B, k, false); /* find starts of buckets */
        j = n - 1;
        b = B[c1 = T[j]];
        SA[b++] = ((j > 0) && (T[j - 1] < c1)) ? ~j : j;
        for (i = 0; i < n; i++) {
            if ((j=SA[i]) > 0) {
                j--;
                ASSERT( T[j] >= T[j+1] );
                SA[i] = ~(c0 = T[j]);
                if (c0 !== c1) { B[c1] = b; b = B[c1 = c0]; }
                ASSERT( i < b );
                SA[b++] = ((j > 0) && (T[j - 1] < c1)) ? ~j : j;
            } else if (j !== 0) {
                SA[i] = ~j;
            }
        }
        /* compute SAs */
        if (C === B) { getCounts(T, C, n, k); }
        getBuckets(C, B, k, true); /* find ends of buckets */
        for (i = n-1, b = B[c1 = 0]; i >= 0; i--) {
            if ((j = SA[i]) > 0) {
                j--;
                ASSERT( T[j] <= T[j+1] );
                SA[i] = c0 = T[j];
                if (c0 !== c1) { B[c1] = b; b = B[c1 = c0]; }
                ASSERT( b <= i );
                SA[--b] = ((j > 0) && (T[j-1] > c1)) ? (~T[j-1]) : j;
            } else if (j !== 0) {
                SA[i] = ~j;
            } else {
                pidx = i;
            }
        }
        return pidx;
    };

    /* find the suffix array SA of T[0..n-1] in {0..k-1}^n
       use a working space (excluding T and SA) of at most 2n+O(1) for a
       constant alphabet */
    var SA_IS = function(T, SA, fs, n, k, isbwt) {
        var C, B, RA;
        var i, j, b, c, m, p, q, name, pidx = 0, newfs;
        var c0, c1;
        var flags = 0;

        // allocate temporary storage [CSA]
        if (k <= 256) {
            C = Util.makeS32Buffer(k);
            if (k <= fs) { B = SA.subarray(n + fs - k); flags = 1; }
            else { B = Util.makeS32Buffer(k); flags = 3; }
        } else if (k <= fs) {
            C = SA.subarray(n + fs - k);
            if (k <= (fs - k)) { B = SA.subarray(n + fs - k * 2); flags = 0; }
            else if (k <= 1024) { B = Util.makeS32Buffer(k); flags = 2; }
            else { B = C; flags = 8; }
        } else {
            C = B = Util.makeS32Buffer(k);
            flags = 4 | 8;
        }

        /* stage 1: reduce the problem by at least 1/2
           sort all the LMS-substrings */
        getCounts(T, C, n, k);
        getBuckets(C, B, k, true); /* find ends of buckets */
        for (i = 0; i < n; i++) { SA[i] = 0; }
        b = -1; i = n - 1; j = n; m = 0; c0 = T[n - 1];
        do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));
        for (; i >= 0 ;) {
            do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) <= c1));
            if ( i >= 0 ) {
                if ( b >= 0 ) { SA[b] = j; }
                b = --B[c1];
                j = i;
                ++m;
                do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));
            }
        }

        if (m > 1) {
            LMSsort(T, SA, C, B, n, k);
            name = LMSpostproc(T, SA, n, m);
        } else if (m === 1) {
            SA[b] = j + 1;
            name = 1;
        } else {
            name = 0;
        }

        /* stage 2: solve the reduced problem
           recurse if names are not yet unique */
        if(name < m) {
            if((flags & 4) !== 0) { C = null; B = null; }
            if((flags & 2) !== 0) { B = null; }
            newfs = (n + fs) - (m * 2);
            if((flags & (1 | 4 | 8)) === 0) {
                if((k + name) <= newfs) { newfs -= k; }
                else { flags |= 8; }
            }
            ASSERT( (n >>> 1) <= (newfs + m) );
            for (i = m + (n >>> 1) - 1, j = m * 2 + newfs - 1; m <= i; i--) {
                if(SA[i] !== 0) { SA[j--] = SA[i] - 1; }
            }
            RA = SA.subarray(m + newfs);
            SA_IS(RA, SA, newfs, m, name, false);
            RA = null;

            i = n - 1; j = m * 2 - 1; c0 = T[n - 1];
            do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));
            for (; i >= 0 ;) {
                do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) <= c1));
                if ( i >= 0 ) {
                    SA[j--] = i + 1;
                    do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));
                }
            }

            for (i = 0; i < m; i++) { SA[i] = SA[m + SA[i]]; }
            if((flags & 4) !== 0) { C = B = Util.makeS32Buffer(k); }
            if((flags & 2) !== 0) { B = Util.makeS32Buffer(k); }
        }

        /* stage 3: induce the result for the original problem */
        if((flags & 8) !== 0) { getCounts(T, C, n, k); }
        /* put all left-most S characters into their buckets */
        if (m > 1) {
            getBuckets(C, B, k, true); /* find ends of buckets */
            i = m - 1; j = n; p = SA[m - 1]; c1 = T[p];
            do {
                q = B[c0 = c1];
                while (q < j) { SA[--j] = 0; }
                do {
                    SA[--j] = p;
                    if(--i < 0) { break; }
                    p = SA[i];
                } while((c1 = T[p]) === c0);
            } while (i >= 0 );
            while ( j > 0 ) { SA[--j] = 0; }
        }
        if (!isbwt) { induceSA(T, SA, C, B, n, k); }
        else { pidx = computeBWT(T, SA, C, B, n, k); }
        C = null; B = null;
        return pidx;
    };

    var BWT = Object.create(null);
    /** SA should be a Int32Array (signed!); T can be any typed array.
     *  alphabetSize is optional if T is an Uint8Array or Uint16Array. */
    BWT.suffixsort = function(T, SA, n, alphabetSize) {
        ASSERT( T && SA && T.length >= n && SA.length >= n );
        if (n <= 1) {
            if (n === 1) { SA[0] = 0; }
            return 0;
        }
        if (!alphabetSize) {
            if (T.BYTES_PER_ELEMENT === 1) { alphabetSize = 256; }
            else if (T.BYTES_PER_ELEMENT === 2) { alphabetSize = 65536; }
            else throw new Error('Need to specify alphabetSize');
        }
        ASSERT( alphabetSize > 0 );
        if (T.BYTES_PER_ELEMENT) {
            ASSERT( alphabetSize <= (1 << (T.BYTES_PER_ELEMENT*8) ) );
        }
        return SA_IS(T, SA, 0, n, alphabetSize, false);
    };
    /** Burrows-Wheeler Transform.
        A should be Int32Array (signed!); T can be any typed array.
        U is the same type as T (it is used for output).
        alphabetSize is optional if T is an Uint8Array or Uint16Array.
        ASSUMES STRING IS TERMINATED WITH AN EOF CHARACTER.
    */
    BWT.bwtransform = function(T, U, A, n, alphabetSize) {
        var i, pidx;
        ASSERT( T && U && A );
        ASSERT( T.length >= n && U.length >= n && A.length >= n );
        if (n <= 1) {
            if (n === 1) { U[0] = T[0]; }
            return n;
        }
        if (!alphabetSize) {
            if (T.BYTES_PER_ELEMENT === 1) { alphabetSize = 256; }
            else if (T.BYTES_PER_ELEMENT === 2) { alphabetSize = 65536; }
            else throw new Error('Need to specify alphabetSize');
        }
        ASSERT( alphabetSize > 0 );
        if (T.BYTES_PER_ELEMENT) {
            ASSERT( alphabetSize <= (1 << (T.BYTES_PER_ELEMENT*8) ) );
        }
        pidx = SA_IS(T, A, 0, n, alphabetSize, true);
        U[0] = T[n - 1];
        for (i = 0; i < pidx ; i++) { U[i + 1] = A[i]; }
        for (i += 1; i < n; i++) { U[i] = A[i]; }
        return pidx + 1;
    };
    /** Reverses transform above. (ASSUMED STRING IS TERMINATED WITH EOF.) */
    BWT.unbwtransform = function(T, U, LF, n, pidx) {
        var C = Util.makeU32Buffer(256);
        var i, t;
        for (i=0; i<256; i++) { C[i] = 0; }
        for (i=0; i<n; i++) { LF[i] = C[T[i]]++; }
        for (i=0, t=0; i<256; i++) { t += C[i]; C[i] = t - C[i]; }
        for (i=n-1, t=0; i>=0; i--) {
            t = LF[t] + C[U[i]=T[t]];
            t += (t<pidx) ? 1 : 0;
        }
        C = null;
    };

    /** Burrows-Wheeler Transform.
        A should be Int32Array (signed!); T can be any typed array.
        U is the same type as T (it is used for output).
        alphabetSize is optional if T is an Uint8Array or Uint16Array.
        ASSUMES STRING IS CYCLIC.
        (XXX: this is twice as inefficient as I'd like! [CSA])
    */
    BWT.bwtransform2 = function(T, U, n, alphabetSize) {
        var i, j, pidx = 0;
        ASSERT( T && U );
        ASSERT( T.length >= n && U.length >= n );
        if (n <= 1) {
            if (n === 1) { U[0] = T[0]; }
            return 0;
        }
        if (!alphabetSize) {
            if (T.BYTES_PER_ELEMENT === 1) { alphabetSize = 256; }
            else if (T.BYTES_PER_ELEMENT === 2) { alphabetSize = 65536; }
            else throw new Error('Need to specify alphabetSize');
        }
        ASSERT( alphabetSize > 0 );
        if (T.BYTES_PER_ELEMENT) {
            ASSERT( alphabetSize <= (1 << (T.BYTES_PER_ELEMENT*8) ) );
        }
        // double length of T
        var TT;
        if (T.length >= n*2) {
            TT = T; // do it in place if possible
        } else if (alphabetSize <= 256) {
            TT = Util.makeU8Buffer(n*2);
        } else if (alphabetSize <= 65536) {
            TT = Util.makeU16Buffer(n*2);
        } else {
            TT = Util.makeU32Buffer(n*2);
        }
        if (TT!==T) {
            for (i=0; i<n; i++) { TT[i] = T[i]; }
        }
        for (i=0; i<n; i++) { TT[n+i] = TT[i]; }
        // sort doubled string
        var A = Util.makeS32Buffer(n*2);
        SA_IS(TT, A, 0, n*2, alphabetSize, false);
        for (i=0, j=0; i<2*n; i++) {
            var s = A[i];
            if (s < n) {
                if (s === 0) { pidx = j; }
                if (--s < 0) { s = n-1; }
                U[j++] = T[s];
            }
        }
        ASSERT(j===n);
        return pidx;
    };

    // return freeze(BWT);
    module.exports = freeze(BWT);
// });

},{"./Util":102,"./freeze":103}],97:[function(require,module,exports){
/** Big-Endian Bit Stream, implemented on top of a (normal byte) stream. */
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
const Stream = require('./Stream');

// define(['./Stream'],function(Stream) {

    var BitStream = function(stream) {
        (function() {
            var bufferByte = 0x100; // private var for readers
            this.readBit = function() {
                if ((bufferByte & 0xFF) === 0) {
                    var ch = stream.readByte();
                    if (ch === Stream.EOF) {
                        this._eof = true;
                        return ch; /* !!! */
                    }
                    bufferByte = (ch << 1) | 1;
                }
                var bit = (bufferByte & 0x100) ? 1 : 0;
                bufferByte <<= 1;
                return bit;
            };
            // seekable iff the provided stream is
            this.seekBit = function(pos) {
                var n_byte = pos >>> 3;
                var n_bit = pos - (n_byte*8);
                this.seek(n_byte);
                this._eof = false;
                this.readBits(n_bit);
            };
            this.tellBit = function() {
                var pos = stream.tell() * 8;
                var b = bufferByte;
                while ((b & 0xFF) !== 0) {
                    pos--;
                    b <<= 1;
                }
                return pos;
            };
            // implement byte stream interface as well.
            this.readByte = function() {
                if ((bufferByte & 0xFF) === 0) {
                    return stream.readByte();
                }
                return this.readBits(8);
            };
            this.seek = function(pos) {
                stream.seek(pos);
                bufferByte = 0x100;
            };
        }).call(this);
        (function() {
            var bufferByte = 1; // private var for writers
            this.writeBit = function(b) {
                bufferByte <<= 1;
                if (b) { bufferByte |= 1; }
                if (bufferByte & 0x100) {
                    stream.writeByte(bufferByte & 0xFF);
                    bufferByte = 1;
                }
            };
            // implement byte stream interface as well
            this.writeByte = function(_byte) {
                if (bufferByte===1) {
                    stream.writeByte(_byte);
                } else {
                    stream.writeBits(8, _byte);
                }
            };
            this.flush = function() {
                while (bufferByte !== 1) {
                    this.writeBit(0);
                }
                if (stream.flush) { stream.flush(); }
            };
        }).call(this);
    };
    // inherit read/write methods from Stream.
    BitStream.EOF = Stream.EOF;
    BitStream.prototype = Object.create(Stream.prototype);
    // bit chunk read/write
    BitStream.prototype.readBits = function(n) {
        var i, r = 0, b;
        if (n > 31) {
            r = this.readBits(n-16)*0x10000; // fp multiply, not shift
            return r + this.readBits(16);
        }
        for (i = 0; i < n; i++) {
            r <<= 1; // this could make a negative value if n>31
            // bits read past EOF are all zeros!
            if (this.readBit() > 0) { r++; }
        }
        return r;
    };
    BitStream.prototype.writeBits = function(n, value) {
        if (n > 32) {
            var low = (value & 0xFFFF);
            var high = (value - low) / (0x10000); // fp division, not shift
            this.writeBits(n-16, high);
            this.writeBits(16, low);
            return;
        }
        var i;
        for (i = n-1; i >= 0; i--) {
            this.writeBit( (value >>> i) & 1 );
        }
    };

    // return BitStream;
    module.exports = BitStream;
// });

},{"./Stream":101}],98:[function(require,module,exports){
/*
An implementation of Bzip2 de/compression, including the ability to
seek within bzip2 data.

Copyright (C) 2013 C. Scott Ananian
Copyright (C) 2012 Eli Skeggs
Copyright (C) 2011 Kevin Kwok

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, see
http://www.gnu.org/licenses/lgpl-2.1.html

Adapted from node-bzip, copyright 2012 Eli Skeggs.
Adapted from bzip2.js, copyright 2011 Kevin Kwok (antimatter15@gmail.com).

Based on micro-bunzip by Rob Landley (rob@landley.net).

Based on bzip2 decompression code by Julian R Seward (jseward@acm.org),
which also acknowledges contributions by Mike Burrows, David Wheeler,
Peter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,
Robert Sedgewick, and Jon L. Bentley.

BWT implementation based on work by Yuta Mori; see BWT.js for details.

bzip2 compression code inspired by https://code.google.com/p/jbzip2
*/
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./freeze','./BitStream','./BWT','./CRC32','./HuffmanAllocator','./Stream','./Util'], function(freeze, BitStream, BWT, CRC32, HuffmanAllocator, Stream, Util) {

const freeze = require('./freeze');
const BitStream = require('./BitStream');
const BWT = require('./BWT');
const CRC32 = require('./CRC32');
const HuffmanAllocator = require('./HuffmanAllocator');
const Stream = require('./Stream');
const Util = require('./Util');

var MAX_HUFCODE_BITS = 20;
var MAX_SYMBOLS = 258;
var SYMBOL_RUNA = 0;
var SYMBOL_RUNB = 1;
var MIN_GROUPS = 2;
var MAX_GROUPS = 6;
var GROUP_SIZE = 50;

var WHOLEPI = 0x314159265359; // 48-bit integer
var SQRTPI =  0x177245385090; // 48-bit integer

var EOF = Stream.EOF;

var mtf = function(array, index) {
  var src = array[index], i;
  for (i = index; i > 0; i--) {
    array[i] = array[i-1];
  }
  array[0] = src;
  return src;
};

var Err = {
  OK: 0,
  LAST_BLOCK: -1,
  NOT_BZIP_DATA: -2,
  UNEXPECTED_INPUT_EOF: -3,
  UNEXPECTED_OUTPUT_EOF: -4,
  DATA_ERROR: -5,
  OUT_OF_MEMORY: -6,
  OBSOLETE_INPUT: -7,
  END_OF_BLOCK: -8
};
var ErrorMessages = {};
ErrorMessages[Err.LAST_BLOCK] =            "Bad file checksum";
ErrorMessages[Err.NOT_BZIP_DATA] =         "Not bzip data";
ErrorMessages[Err.UNEXPECTED_INPUT_EOF] =  "Unexpected input EOF";
ErrorMessages[Err.UNEXPECTED_OUTPUT_EOF] = "Unexpected output EOF";
ErrorMessages[Err.DATA_ERROR] =            "Data error";
ErrorMessages[Err.OUT_OF_MEMORY] =         "Out of memory";
ErrorMessages[Err.OBSOLETE_INPUT] = "Obsolete (pre 0.9.5) bzip format not supported.";

var _throw = function(status, optDetail) {
  var msg = ErrorMessages[status] || 'unknown error';
  if (optDetail) { msg += ': '+optDetail; }
  var e = new TypeError(msg);
  e.errorCode = status;
  throw e;
};

var Bunzip = function(inputStream, outputStream) {
  this.writePos = this.writeCurrent = this.writeCount = 0;

  this._start_bunzip(inputStream, outputStream);
};
Bunzip.prototype._init_block = function() {
  var moreBlocks = this._get_next_block();
  if ( !moreBlocks ) {
    this.writeCount = -1;
    return false; /* no more blocks */
  }
  this.blockCRC = new CRC32();
  return true;
};
/* XXX micro-bunzip uses (inputStream, inputBuffer, len) as arguments */
Bunzip.prototype._start_bunzip = function(inputStream, outputStream) {
  /* Ensure that file starts with "BZh['1'-'9']." */
  var buf = Util.makeU8Buffer(4);
  if (inputStream.read(buf, 0, 4) !== 4 ||
      String.fromCharCode(buf[0], buf[1], buf[2]) !== 'BZh')
    _throw(Err.NOT_BZIP_DATA, 'bad magic');

  var level = buf[3] - 0x30;
  if (level < 1 || level > 9)
    _throw(Err.NOT_BZIP_DATA, 'level out of range');

  this.reader = new BitStream(inputStream);

  /* Fourth byte (ascii '1'-'9'), indicates block size in units of 100k of
     uncompressed data.  Allocate intermediate buffer for block. */
  this.dbufSize = 100000 * level;
  this.nextoutput = 0;
  this.outputStream = outputStream;
  this.streamCRC = 0;
};
Bunzip.prototype._get_next_block = function() {
  var i, j, k;
  var reader = this.reader;
  // this is get_next_block() function from micro-bunzip:
  /* Read in header signature and CRC, then validate signature.
     (last block signature means CRC is for whole file, return now) */
  var h = reader.readBits(48);
  if (h === SQRTPI) { // last block
    return false; /* no more blocks */
  }
  if (h !== WHOLEPI)
    _throw(Err.NOT_BZIP_DATA);
  this.targetBlockCRC = reader.readBits(32);
  this.streamCRC = (this.targetBlockCRC ^
                    ((this.streamCRC << 1) | (this.streamCRC>>>31))) >>> 0;
  /* We can add support for blockRandomised if anybody complains.  There was
     some code for this in busybox 1.0.0-pre3, but nobody ever noticed that
     it didn't actually work. */
  if (reader.readBits(1))
    _throw(Err.OBSOLETE_INPUT);
  var origPointer = reader.readBits(24);
  if (origPointer > this.dbufSize)
    _throw(Err.DATA_ERROR, 'initial position out of bounds');
  /* mapping table: if some byte values are never used (encoding things
     like ASCII text), the compression code removes the gaps to have fewer
     symbols to deal with, and writes a sparse bitfield indicating which
     values were present.  We make a translation table to convert the symbols
     back to the corresponding bytes. */
  var t = reader.readBits(16);
  var symToByte = Util.makeU8Buffer(256), symTotal = 0;
  for (i = 0; i < 16; i++) {
    if (t & (1 << (0xF - i))) {
      var o = i * 16;
      k = reader.readBits(16);
      for (j = 0; j < 16; j++)
        if (k & (1 << (0xF - j)))
          symToByte[symTotal++] = o + j;
    }
  }

  /* How many different Huffman coding groups does this block use? */
  var groupCount = reader.readBits(3);
  if (groupCount < MIN_GROUPS || groupCount > MAX_GROUPS)
    _throw(Err.DATA_ERROR);
  /* nSelectors: Every GROUP_SIZE many symbols we select a new Huffman coding
     group.  Read in the group selector list, which is stored as MTF encoded
     bit runs.  (MTF=Move To Front, as each value is used it's moved to the
     start of the list.) */
  var nSelectors = reader.readBits(15);
  if (nSelectors === 0)
    _throw(Err.DATA_ERROR);

  var mtfSymbol = Util.makeU8Buffer(256);
  for (i = 0; i < groupCount; i++)
    mtfSymbol[i] = i;

  var selectors = Util.makeU8Buffer(nSelectors); // was 32768...

  for (i = 0; i < nSelectors; i++) {
    /* Get next value */
    for (j = 0; reader.readBits(1); j++)
      if (j >= groupCount) _throw(Err.DATA_ERROR);
    /* Decode MTF to get the next selector */
    selectors[i] = mtf(mtfSymbol, j);
  }

  /* Read the Huffman coding tables for each group, which code for symTotal
     literal symbols, plus two run symbols (RUNA, RUNB) */
  var symCount = symTotal + 2;
  var groups = [], hufGroup;
  for (j = 0; j < groupCount; j++) {
    var length = Util.makeU8Buffer(symCount), temp = Util.makeU16Buffer(MAX_HUFCODE_BITS + 1);
    /* Read Huffman code lengths for each symbol.  They're stored in
       a way similar to MTF; record a starting value for the first symbol,
       and an offset from the previous value for every symbol after that. */
    t = reader.readBits(5); // lengths
    for (i = 0; i < symCount; i++) {
      for (;;) {
        if (t < 1 || t > MAX_HUFCODE_BITS) _throw(Err.DATA_ERROR);
        /* If first bit is 0, stop.  Else second bit indicates whether
           to increment or decrement the value. */
        if(!reader.readBits(1))
          break;
        if(!reader.readBits(1))
          t++;
        else
          t--;
      }
      length[i] = t;
    }

    /* Find largest and smallest lengths in this group */
    var minLen,  maxLen;
    minLen = maxLen = length[0];
    for (i = 1; i < symCount; i++) {
      if (length[i] > maxLen)
        maxLen = length[i];
      else if (length[i] < minLen)
        minLen = length[i];
    }

    /* Calculate permute[], base[], and limit[] tables from length[].
     *
     * permute[] is the lookup table for converting Huffman coded symbols
     * into decoded symbols.  base[] is the amount to subtract from the
     * value of a Huffman symbol of a given length when using permute[].
     *
     * limit[] indicates the largest numerical value a symbol with a given
     * number of bits can have.  This is how the Huffman codes can vary in
     * length: each code with a value>limit[length] needs another bit.
     */
    hufGroup = {};
    groups.push(hufGroup);
    hufGroup.permute = Util.makeU16Buffer(MAX_SYMBOLS);
    hufGroup.limit = Util.makeU32Buffer(MAX_HUFCODE_BITS + 2);
    hufGroup.base = Util.makeU32Buffer(MAX_HUFCODE_BITS + 1);
    hufGroup.minLen = minLen;
    hufGroup.maxLen = maxLen;
    /* Calculate permute[].  Concurrently, initialize temp[] and limit[]. */
    var pp = 0;
    for (i = minLen; i <= maxLen; i++) {
      temp[i] = hufGroup.limit[i] = 0;
      for (t = 0; t < symCount; t++)
        if (length[t] === i)
          hufGroup.permute[pp++] = t;
    }
    /* Count symbols coded for at each bit length */
    for (i = 0; i < symCount; i++)
      temp[length[i]]++;
    /* Calculate limit[] (the largest symbol-coding value at each bit
     * length, which is (previous limit<<1)+symbols at this level), and
     * base[] (number of symbols to ignore at each bit length, which is
     * limit minus the cumulative count of symbols coded for already). */
    pp = t = 0;
    for (i = minLen; i < maxLen; i++) {
      pp += temp[i];
      /* We read the largest possible symbol size and then unget bits
         after determining how many we need, and those extra bits could
         be set to anything.  (They're noise from future symbols.)  At
         each level we're really only interested in the first few bits,
         so here we set all the trailing to-be-ignored bits to 1 so they
         don't affect the value>limit[length] comparison. */
      hufGroup.limit[i] = pp - 1;
      pp <<= 1;
      t += temp[i];
      hufGroup.base[i + 1] = pp - t;
    }
    hufGroup.limit[maxLen + 1] = Number.MAX_VALUE; /* Sentinel value for reading next sym. */
    hufGroup.limit[maxLen] = pp + temp[maxLen] - 1;
    hufGroup.base[minLen] = 0;
  }
  /* We've finished reading and digesting the block header.  Now read this
     block's Huffman coded symbols from the file and undo the Huffman coding
     and run length encoding, saving the result into dbuf[dbufCount++]=uc */

  /* Initialize symbol occurrence counters and symbol Move To Front table */
  var byteCount = Util.makeU32Buffer(256);
  for (i = 0; i < 256; i++)
    mtfSymbol[i] = i;
  /* Loop through compressed symbols. */
  var runPos = 0, dbufCount = 0, selector = 0, uc;
  var dbuf = this.dbuf = Util.makeU32Buffer(this.dbufSize);
  symCount = 0;
  for (;;) {
    /* Determine which Huffman coding group to use. */
    if (!(symCount--)) {
      symCount = GROUP_SIZE - 1;
      if (selector >= nSelectors) { _throw(Err.DATA_ERROR); }
      hufGroup = groups[selectors[selector++]];
    }
    /* Read next Huffman-coded symbol. */
    i = hufGroup.minLen;
    j = reader.readBits(i);
    for (;;i++) {
      if (i > hufGroup.maxLen) { _throw(Err.DATA_ERROR); }
      if (j <= hufGroup.limit[i])
        break;
      j = (j << 1) | reader.readBits(1);
    }
    /* Huffman decode value to get nextSym (with bounds checking) */
    j -= hufGroup.base[i];
    if (j < 0 || j >= MAX_SYMBOLS) { _throw(Err.DATA_ERROR); }
    var nextSym = hufGroup.permute[j];
    /* We have now decoded the symbol, which indicates either a new literal
       byte, or a repeated run of the most recent literal byte.  First,
       check if nextSym indicates a repeated run, and if so loop collecting
       how many times to repeat the last literal. */
    if (nextSym === SYMBOL_RUNA || nextSym === SYMBOL_RUNB) {
      /* If this is the start of a new run, zero out counter */
      if (!runPos){
        runPos = 1;
        t = 0;
      }
      /* Neat trick that saves 1 symbol: instead of or-ing 0 or 1 at
         each bit position, add 1 or 2 instead.  For example,
         1011 is 1<<0 + 1<<1 + 2<<2.  1010 is 2<<0 + 2<<1 + 1<<2.
         You can make any bit pattern that way using 1 less symbol than
         the basic or 0/1 method (except all bits 0, which would use no
         symbols, but a run of length 0 doesn't mean anything in this
         context).  Thus space is saved. */
      if (nextSym === SYMBOL_RUNA)
        t += runPos;
      else
        t += 2 * runPos;
      runPos <<= 1;
      continue;
    }
    /* When we hit the first non-run symbol after a run, we now know
       how many times to repeat the last literal, so append that many
       copies to our buffer of decoded symbols (dbuf) now.  (The last
       literal used is the one at the head of the mtfSymbol array.) */
    if (runPos){
      runPos = 0;
      if (dbufCount + t > this.dbufSize) { _throw(Err.DATA_ERROR); }
      uc = symToByte[mtfSymbol[0]];
      byteCount[uc] += t;
      while (t--)
        dbuf[dbufCount++] = uc;
    }
    /* Is this the terminating symbol? */
    if (nextSym > symTotal)
      break;
    /* At this point, nextSym indicates a new literal character.  Subtract
       one to get the position in the MTF array at which this literal is
       currently to be found.  (Note that the result can't be -1 or 0,
       because 0 and 1 are RUNA and RUNB.  But another instance of the
       first symbol in the MTF array, position 0, would have been handled
       as part of a run above.  Therefore 1 unused MTF position minus
       2 non-literal nextSym values equals -1.) */
    if (dbufCount >= this.dbufSize) { _throw(Err.DATA_ERROR); }
    i = nextSym - 1;
    uc = mtf(mtfSymbol, i);
    uc = symToByte[uc];
    /* We have our literal byte.  Save it into dbuf. */
    byteCount[uc]++;
    dbuf[dbufCount++] = uc;
  }
  /* At this point, we've read all the Huffman-coded symbols (and repeated
     runs) for this block from the input stream, and decoded them into the
     intermediate buffer.  There are dbufCount many decoded bytes in dbuf[].
     Now undo the Burrows-Wheeler transform on dbuf.
     See http://dogma.net/markn/articles/bwt/bwt.htm
  */
  if (origPointer < 0 || origPointer >= dbufCount) { _throw(Err.DATA_ERROR); }
  /* Turn byteCount into cumulative occurrence counts of 0 to n-1. */
  j = 0;
  for (i = 0; i < 256; i++) {
    k = j + byteCount[i];
    byteCount[i] = j;
    j = k;
  }
  /* Figure out what order dbuf would be in if we sorted it. */
  for (i = 0; i < dbufCount; i++) {
    uc = dbuf[i] & 0xff;
    dbuf[byteCount[uc]] |= (i << 8);
    byteCount[uc]++;
  }
  /* Decode first byte by hand to initialize "previous" byte.  Note that it
     doesn't get output, and if the first three characters are identical
     it doesn't qualify as a run (hence writeRunCountdown=5). */
  var pos = 0, current = 0, run = 0;
  if (dbufCount) {
    pos = dbuf[origPointer];
    current = (pos & 0xff);
    pos >>= 8;
    run = -1;
  }
  this.writePos = pos;
  this.writeCurrent = current;
  this.writeCount = dbufCount;
  this.writeRun = run;

  return true; /* more blocks to come */
};
/* Undo burrows-wheeler transform on intermediate buffer to produce output.
   If start_bunzip was initialized with out_fd=-1, then up to len bytes of
   data are written to outbuf.  Return value is number of bytes written or
   error (all errors are negative numbers).  If out_fd!=-1, outbuf and len
   are ignored, data is written to out_fd and return is RETVAL_OK or error.
*/
Bunzip.prototype._read_bunzip = function(outputBuffer, len) {
    var copies, previous, outbyte;
    /* james@jamestaylor.org: writeCount goes to -1 when the buffer is fully
       decoded, which results in this returning RETVAL_LAST_BLOCK, also
       equal to -1... Confusing, I'm returning 0 here to indicate no
       bytes written into the buffer */
  if (this.writeCount < 0) { return 0; }

  var gotcount = 0;
  var dbuf = this.dbuf, pos = this.writePos, current = this.writeCurrent;
  var dbufCount = this.writeCount, outputsize = this.outputsize;
  var run = this.writeRun;

  while (dbufCount) {
    dbufCount--;
    previous = current;
    pos = dbuf[pos];
    current = pos & 0xff;
    pos >>= 8;
    if (run++ === 3){
      copies = current;
      outbyte = previous;
      current = -1;
    } else {
      copies = 1;
      outbyte = current;
    }
    this.blockCRC.updateCRCRun(outbyte, copies);
    while (copies--) {
      this.outputStream.writeByte(outbyte);
      this.nextoutput++;
    }
    if (current != previous)
      run = 0;
  }
  this.writeCount = dbufCount;
  // check CRC
  if (this.blockCRC.getCRC() !== this.targetBlockCRC) {
    _throw(Err.DATA_ERROR, "Bad block CRC "+
           "(got "+this.blockCRC.getCRC().toString(16)+
           " expected "+this.targetBlockCRC.toString(16)+")");
  }
  return this.nextoutput;
};

/* Static helper functions */
Bunzip.Err = Err;
// 'input' can be a stream or a buffer
// 'output' can be a stream or a buffer or a number (buffer size)
Bunzip.decode = function(input, output, multistream) {
  // make a stream from a buffer, if necessary
  var inputStream = Util.coerceInputStream(input);
  var o = Util.coerceOutputStream(output, output);
  var outputStream = o.stream;

  var bz = new Bunzip(inputStream, outputStream);
  while (true) {
    if ('eof' in inputStream && inputStream.eof()) break;
    if (bz._init_block()) {
      bz._read_bunzip();
    } else {
      var targetStreamCRC = bz.reader.readBits(32);
      if (targetStreamCRC !== bz.streamCRC) {
        _throw(Err.DATA_ERROR, "Bad stream CRC "+
               "(got "+bz.streamCRC.toString(16)+
               " expected "+targetStreamCRC.toString(16)+")");
      }
      if (multistream &&
          'eof' in inputStream &&
          !inputStream.eof()) {
        // note that start_bunzip will also resync the bit reader to next byte
        bz._start_bunzip(inputStream, outputStream);
      } else break;
    }
  }
  return o.retval;
};
Bunzip.decodeBlock = function(input, pos, output) {
  // make a stream from a buffer, if necessary
  var inputStream = Util.coerceInputStream(input);
  var o = Util.coerceOutputStream(output, output);
  var outputStream = o.stream;
  var bz = new Bunzip(inputStream, outputStream);
  bz.reader.seekBit(pos);
  /* Fill the decode buffer for the block */
  var moreBlocks = bz._get_next_block();
  if (moreBlocks) {
    /* Init the CRC for writing */
    bz.blockCRC = new CRC32();

    /* Zero this so the current byte from before the seek is not written */
    bz.writeCopies = 0;

    /* Decompress the block and write to stdout */
    bz._read_bunzip();
    // XXX keep writing?
  }
  return o.retval;
};
/* Reads bzip2 file from stream or buffer `input`, and invoke
 * `callback(position, size)` once for each bzip2 block,
 * where position gives the starting position (in *bits*)
 * and size gives uncompressed size of the block (in *bytes*). */
Bunzip.table = function(input, callback, multistream) {
  // make a stream from a buffer, if necessary
  var inputStream = new Stream();
  inputStream.delegate = Util.coerceInputStream(input);
  inputStream.pos = 0;
  inputStream.readByte = function() {
    this.pos++;
    return this.delegate.readByte();
  };
  inputStream.tell = function() { return this.pos; };
  if (inputStream.delegate.eof) {
    inputStream.eof = inputStream.delegate.eof.bind(inputStream.delegate);
  }
  var outputStream = new Stream();
  outputStream.pos = 0;
  outputStream.writeByte = function() { this.pos++; };

  var bz = new Bunzip(inputStream, outputStream);
  var blockSize = bz.dbufSize;
  while (true) {
    if ('eof' in inputStream && inputStream.eof()) break;

    var position = bz.reader.tellBit();

    if (bz._init_block()) {
      var start = outputStream.pos;
      bz._read_bunzip();
      callback(position, outputStream.pos - start);
    } else {
      var crc = bz.reader.readBits(32); // (but we ignore the crc)
      if (multistream &&
          'eof' in inputStream &&
          !inputStream.eof()) {
        // note that start_bunzip will also resync the bit reader to next byte
        bz._start_bunzip(inputStream, outputStream);
        console.assert(bz.dbufSize === blockSize,
                       "shouldn't change block size within multistream file");
      } else break;
    }
  }
};

// create a Huffman tree from the table of frequencies
var StaticHuffman = function(freq, alphabetSize) {
  // As in BZip2HuffmanStageEncoder.java (from jbzip2):
  // The Huffman allocator needs its input symbol frequencies to be
  // sorted, but we need to return code lengths in the same order as
  // the corresponding frequencies are passed in.
  // The symbol frequency and index are merged into a single array of
  // integers - frequency in the high 23 bits, index in the low 9
  // bits.
  //     2^23 = 8,388,608 which is higher than the maximum possible
  //            frequency for one symbol in a block
  //     2^9 = 512 which is higher than the maximum possible
  //            alphabet size (== 258)
  // Sorting this array simultaneously sorts the frequencies and
  // leaves a lookup that can be used to cheaply invert the sort
  var i, mergedFreq = [];
  for (i=0; i<alphabetSize; i++) {
    mergedFreq[i] = (freq[i] << 9) | i;
  }
  mergedFreq.sort(function(a,b) { return a-b; });
  var sortedFreq = mergedFreq.map(function(v) { return v>>>9; });
  // allocate code lengths in place. (result in sortedFreq array)
  HuffmanAllocator.allocateHuffmanCodeLengths(sortedFreq, MAX_HUFCODE_BITS);
  // reverse the sort to put codes & code lengths in order of input symbols
  this.codeLengths = Util.makeU8Buffer(alphabetSize);
  for (i=0; i<alphabetSize; i++) {
    var sym = mergedFreq[i] & 0x1FF;
    this.codeLengths[sym] = sortedFreq[i];
  }
};
// compute canonical Huffman codes, given code lengths
StaticHuffman.prototype.computeCanonical = function() {
  var alphabetSize = this.codeLengths.length;
  // merge arrays; sort first by length then by symbol.
  var i, merged = [];
  for (i=0; i<alphabetSize; i++) {
    merged[i] = (this.codeLengths[i] << 9) | i;
  }
  merged.sort(function(a,b) { return a-b; });
  // use sorted lengths to assign codes
  this.code = Util.makeU32Buffer(alphabetSize);
  var code = 0, prevLen = 0;
  for (i=0; i<alphabetSize; i++) {
    var curLen = merged[i] >>> 9;
    var sym = merged[i] & 0x1FF;
    console.assert(prevLen <= curLen);
    code <<= (curLen - prevLen);
    this.code[sym] = code++;
    prevLen = curLen;
  }
};
// compute the cost of encoding the given range of symbols w/ this Huffman code
StaticHuffman.prototype.cost = function(array, offset, length) {
  var i, cost = 0;
  for (i=0; i<length; i++) {
    cost += this.codeLengths[array[offset+i]];
  }
  return cost;
};
// emit the bit lengths used by this Huffman code
StaticHuffman.prototype.emit = function(outStream) {
  // write the starting length
  var i, currentLength = this.codeLengths[0];
  outStream.writeBits(5, currentLength);
  for (i=0; i<this.codeLengths.length; i++) {
    var codeLength = this.codeLengths[i];
    var value, delta;
    console.assert(codeLength > 0 && codeLength <= MAX_HUFCODE_BITS);
    if (currentLength < codeLength) {
      value = 2; delta = codeLength - currentLength;
    } else {
      value = 3; delta = currentLength - codeLength;
    }
    while (delta-- > 0) {
      outStream.writeBits(2, value);
    }
    outStream.writeBit(0);
    currentLength = codeLength;
  }
};
// encode the given symbol with this Huffman code
StaticHuffman.prototype.encode = function(outStream, symbol) {
  outStream.writeBits(this.codeLengths[symbol], this.code[symbol]);
};

// read a block for bzip2 compression.
var readBlock = function(inStream, block, length, crc) {
  var pos = 0;
  var lastChar = -1;
  var runLength = 0;
  while (pos < length) {
    if (runLength===4) {
      block[pos++] = 0;
      if (pos >= length) { break; }
    }
    var ch = inStream.readByte();
    if (ch === EOF) {
      break;
    }
    crc.updateCRC(ch);
    if (ch !== lastChar) {
      lastChar = ch;
      runLength = 1;
    } else {
      runLength++;
      if (runLength > 4) {
        if (runLength < 256) {
          block[pos-1]++;
          continue;
        } else {
          runLength = 1;
        }
      }
    }
    block[pos++] = ch;
  }
  return pos;
};

// divide the input into groups at most GROUP_SIZE symbols long.
// assign each group to the Huffman table which compresses it best.
var assignSelectors = function(selectors, groups, input) {
  var i, j, k;
  for (i=0, k=0; i<input.length; i+=GROUP_SIZE) {
    var groupSize = Math.min(GROUP_SIZE, input.length - i);
    var best = 0, bestCost = groups[0].cost(input, i, groupSize);
    for (j=1; j<groups.length; j++) {
      var groupCost = groups[j].cost(input, i, groupSize);
      if (groupCost < bestCost) {
        best = j; bestCost = groupCost;
      }
    }
    selectors[k++] = best;
  }
};
var optimizeHuffmanGroups = function(groups, targetGroups, input,
                                     selectors, alphabetSize) {
  // until we've got "targetGroups" Huffman codes, pick the Huffman code which
  // matches the largest # of groups and split it by picking the groups
  // which require more than the median number of bits to encode.
  // then recompute frequencies and reassign Huffman codes.
  var i, j, k, groupCounts = [];
  while (groups.length < targetGroups) {
    assignSelectors(selectors, groups, input);
    // which code gets used the most?
    for (i=0; i<groups.length; i++) { groupCounts[i] = 0; }
    for (i=0; i<selectors.length; i++) {
      groupCounts[selectors[i]]++;
    }
    var which = groupCounts.indexOf(Math.max.apply(Math, groupCounts));
    // ok, let's look at the size of those blocks
    var splits = [];
    for (i=0, j=0; i<selectors.length; i++) {
      if (selectors[i] !== which) { continue; }
      var start = i*GROUP_SIZE;
      var end = Math.min(start + GROUP_SIZE, input.length);
      splits.push({index: i, cost:groups[which].cost(input, start, end-start)});
    }
    // find the median.  there are O(n) algorithms to do this, but we'll
    // be lazy and use a full O(n ln n) sort.
    splits.sort(function(s1, s2) { return s1.cost - s2.cost; });
    // assign the groups in the top half to the "new" selector
    for (i=(splits.length>>>1); i<splits.length; i++) {
      selectors[splits[i].index] = groups.length;
    }
    groups.push(null);
    // recompute frequencies
    var freq = [], f;
    for (i=0; i<groups.length; i++) {
      f = freq[i] = [];
      for (j=0; j<alphabetSize; j++) { f[j] = 0; }
    }
    for (i=0, j=0; i<input.length; ) {
      f = freq[selectors[j++]];
      for (k=0; k<GROUP_SIZE && i<input.length; k++) {
        f[input[i++]]++;
      }
    }
    // reconstruct Huffman codes
    for (i=0; i<groups.length; i++) {
      groups[i] = new StaticHuffman(freq[i], alphabetSize);
    }
  }
};

var compressBlock = function(block, length, outStream) {
  var c, i, j, k;
  // do BWT transform
  var U = Util.makeU8Buffer(length);
  var pidx = BWT.bwtransform2(block, U, length, 256);
  outStream.writeBit(0); // not randomized
  outStream.writeBits(24, pidx);
  // track values used; write bitmap
  var used = [], compact = [];
  for (i=0; i<length; i++) {
    c = block[i];
    used[c] = true;
    compact[c>>>4] = true;
  }
  for (i=0; i<16; i++) {
    outStream.writeBit(!!compact[i]);
  }
  for (i=0; i<16; i++) {
    if (compact[i]) {
      for (j=0; j<16; j++) {
        outStream.writeBit(!!used[(i<<4)|j]);
      }
    }
  }
  var alphabetSize = 0;
  for (i=0; i<256; i++) {
    if (used[i]) {
      alphabetSize++;
    }
  }
  // now MTF and RLE/2 encoding, while tracking symbol statistics.
  // output can be one longer than length, because we include the
  // end-of-block character at the end. Similarly, we need a U16
  // array because the end-of-block character can be 256.
  var A = Util.makeU16Buffer(length+1);
  var endOfBlock = alphabetSize + 1;
  var freq = [];
  for (i=0; i<=endOfBlock; i++) { freq[i] = 0; }
  var M = Util.makeU8Buffer(alphabetSize);
  for (i=0, j=0; i<256; i++) {
    if (used[i]) { M[j++] = i; }
  }
  used = null; compact = null;
  var pos = 0, runLength = 0;
  var emit = function(c) {
    A[pos++] = c;
    freq[c]++;
  };
  var emitLastRun = function() {
    while (runLength !== 0) {
      if (runLength & 1) {
        emit(0); // RUNA
        runLength -= 1;
      } else {
        emit(1); // RUNB
        runLength -= 2;
      }
      runLength >>>= 1;
    }
  };
  for (i=0; i<U.length; i++) {
    c = U[i];
    // look for C in M
    for (j=0; j<alphabetSize; j++) {
      if (M[j]===c) { break; }
    }
    console.assert(j!==alphabetSize);
    // shift MTF array
    mtf(M, j);
    // emit j
    if (j===0) {
      runLength++;
    } else {
      emitLastRun();
      emit(j+1);
      runLength = 0;
    }
  }
  emitLastRun();
  emit(endOfBlock); // end of block symbol
  A = A.subarray(0, pos);
  // now A[0...pos) has the encoded output, and freq[0-alphabetSize] has the
  // frequencies.  Use these to construct Huffman tables.
  // the canonical bzip2 encoder does some complicated optimization
  // to attempt to select the best tables.  We're going to simplify things:
  // (unless the block is very short) we're always going to create MAX_GROUPS
  // tables; 1 based on global frequencies, and the rest based on dividing the
  // block into MAX_GROUPS-1 pieces.
  var groups = [];
  var targetGroups; // how many Huffman groups should we create?
  // look at length of MTF-encoded block to pick a good number of groups
  if (pos >= 2400) { targetGroups = 6; }
  else if (pos >= 1200) { targetGroups = 5; }
  else if (pos >= 600) { targetGroups = 4; }
  else if (pos >= 200) { targetGroups = 3; }
  else { targetGroups = 2; }
  // start with two Huffman groups: one with the global frequencies, and
  // a second with a flat frequency distribution (which is also the smallest
  // possible Huffman table to encode, which is handy to prevent excessive
  // bloat if the input file size is very small)
  groups.push(new StaticHuffman(freq, endOfBlock+1));
  for (i=0; i<=endOfBlock; i++) { freq[i] = 1; }
  groups.push(new StaticHuffman(freq, endOfBlock+1));
  freq = null;
  // Now optimize the Huffman groups!  this is a black art.
  // we probably don't want to waste too much time on it, though.
  var selectors = Util.makeU8Buffer(Math.ceil(pos / GROUP_SIZE));
  optimizeHuffmanGroups(groups, targetGroups, A, selectors, endOfBlock+1);
  assignSelectors(selectors, groups, A);

  // okay, let's start writing out our Huffman tables
  console.assert(groups.length >= MIN_GROUPS && groups.length <= MAX_GROUPS);
  outStream.writeBits(3, groups.length);
  // and write out the best selector for each group
  outStream.writeBits(15, selectors.length);
  for (i=0; i<groups.length; i++) { M[i] = i; } // initialize MTF table.
  for (i=0; i<selectors.length; i++) {
    var s = selectors[i];
    // find selector in MTF list
    for (j=0; j<groups.length; j++) { if (M[j]===s) { break; } }
    console.assert(j<groups.length);
    mtf(M, j);
    // emit 'j' as a unary number
    for (;j>0; j--) {
      outStream.writeBit(1);
    }
    outStream.writeBit(0);
  }
  // okay, now emit the Huffman tables in order.
  for (i=0; i<groups.length; i++) {
    groups[i].emit(outStream);
    groups[i].computeCanonical(); // get ready for next step while we're at it
  }
  // okay, now (finally!) emit the actual data!
  for (i=0, k=0; i<pos; ) {
    var huff = groups[selectors[k++]];
    for (j=0; j<GROUP_SIZE && i<pos; j++) {
      huff.encode(outStream, A[i++]);
    }
  }
  // done.
};

var Bzip2 = Object.create(null);
Bzip2.compressFile = function(inStream, outStream, props) {
  inStream = Util.coerceInputStream(inStream);
  var o = Util.coerceOutputStream(outStream, outStream);
  outStream = new BitStream(o.stream);

  var blockSizeMultiplier = 9;
  if (typeof(props)==='number') {
    blockSizeMultiplier = props;
  }
  if (blockSizeMultiplier < 1 || blockSizeMultiplier > 9) {
    throw new Error('Invalid block size multiplier');
  }

  var blockSize = blockSizeMultiplier * 100000;
  // the C implementation always writes at least length-19 characters,
  // but it reads ahead enough that if the last character written was part
  // of a run, it writes out the full run.
  // That's really annoying to implement.
  // So instead just subtract 19 from the blockSize; in most cases (unless
  // there's a run at the end of the block) this will yield block divisions
  // matching the C implementation.
  blockSize -= 19;

  // write file magic
  outStream.writeByte('B'.charCodeAt(0));
  outStream.writeByte('Z'.charCodeAt(0));
  outStream.writeByte('h'.charCodeAt(0)); // Huffman-coded bzip
  outStream.writeByte('0'.charCodeAt(0) + blockSizeMultiplier);

  // allocate a buffer for the block
  var block = Util.makeU8Buffer(blockSize);
  var streamCRC = 0;
  var length;

  do {
    var crc = new CRC32();
    length = readBlock(inStream, block, blockSize, crc);
    if (length > 0) {
      streamCRC = (((streamCRC << 1) | (streamCRC>>>31)) ^ crc.getCRC()) >>> 0;
      outStream.writeBits(48, WHOLEPI);
      outStream.writeBits(32, crc.getCRC());
      compressBlock(block, length, outStream);
    }
  } while (length === blockSize);

  // finish up
  outStream.writeBits(48, SQRTPI);
  outStream.writeBits(32, streamCRC);
  outStream.flush(); // get the last bits flushed out
  return o.retval;
};

Bzip2.decompressFile = Bunzip.decode;
Bzip2.decompressBlock = Bunzip.decodeBlock;
Bzip2.table = Bunzip.table;

// return Bzip2;
module.exports = Bzip2;
// });

},{"./BWT":96,"./BitStream":97,"./CRC32":99,"./HuffmanAllocator":100,"./Stream":101,"./Util":102,"./freeze":103}],99:[function(require,module,exports){
/* CRC32, used in Bzip2 implementation.
 * This is a port of CRC32.java from the jbzip2 implementation at
 *   https://code.google.com/p/jbzip2
 * which is:
 *   Copyright (c) 2011 Matthew Francis
 *
 *   Permission is hereby granted, free of charge, to any person
 *   obtaining a copy of this software and associated documentation
 *   files (the "Software"), to deal in the Software without
 *   restriction, including without limitation the rights to use,
 *   copy, modify, merge, publish, distribute, sublicense, and/or sell
 *   copies of the Software, and to permit persons to whom the
 *   Software is furnished to do so, subject to the following
 *   conditions:
 *
 *   The above copyright notice and this permission notice shall be
 *   included in all copies or substantial portions of the Software.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *   OTHER DEALINGS IN THE SOFTWARE.
 * This JavaScript implementation is:
 *   Copyright (c) 2013 C. Scott Ananian
 * with the same licensing terms as Matthew Francis' original implementation.
 */
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./Util'], function(Util) {
const Util = require('./Util');

  /**
   * A static CRC lookup table
   */
    var crc32Lookup = Util.arraycopy(Util.makeU32Buffer(256), [
    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,
    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,
    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,
    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,
    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,
    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,
    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,
    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,
    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,
    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,
    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,
    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,
    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,
    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,
    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,
    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,
    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,
    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,
    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,
    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,
    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,
    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,
    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,
    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,
    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,
    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,
    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,
    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,
    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,
    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,
    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,
    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4
  ]);

  var CRC32 = function() {
    /**
     * The current CRC
     */
    var crc = 0xffffffff;

    /**
     * @return The current CRC
     */
    this.getCRC = function() {
      return (~crc) >>> 0; // return an unsigned value
    };

    /**
     * Update the CRC with a single byte
     * @param value The value to update the CRC with
     */
    this.updateCRC = function(value) {
      crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];
    };

    /**
     * Update the CRC with a sequence of identical bytes
     * @param value The value to update the CRC with
     * @param count The number of bytes
     */
    this.updateCRCRun = function(value, count) {
      while (count-- > 0) {
        crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];
      }
    };
  };
  // return CRC32;
  module.exports = CRC32;
// });

},{"./Util":102}],100:[function(require,module,exports){
/**
 * An in-place, length restricted Canonical Huffman code length allocator
 *
 * Based on the algorithm proposed by R. L. Milidiú, A. A. Pessoa and
 * E. S. Laber in "In-place Length-Restricted Prefix Coding" (see:
 * http://www-di.inf.puc-rio.br/~laber/public/spire98.ps) and
 * incorporating additional ideas from the implementation of "shcodec"
 * by Simakov Alexander (see: http://webcenter.ru/~xander/)
 *
 * This JavaScript implementation ported from HuffmanAllocator.java from
 *   https://code.google.com/p/jbzip2
 * which is:
 *
 *   Copyright (c) 2011 Matthew Francis
 *
 *   Permission is hereby granted, free of charge, to any person
 *   obtaining a copy of this software and associated documentation
 *   files (the "Software"), to deal in the Software without
 *   restriction, including without limitation the rights to use,
 *   copy, modify, merge, publish, distribute, sublicense, and/or sell
 *   copies of the Software, and to permit persons to whom the
 *   Software is furnished to do so, subject to the following
 *   conditions:
 *
 *   The above copyright notice and this permission notice shall be
 *   included in all copies or substantial portions of the Software.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *   OTHER DEALINGS IN THE SOFTWARE.
 *
 * This JavaScript implementation is:
 *   Copyright (c) 2013 C. Scott Ananian
 * with the same licensing terms as Matthew Francis' original implementation.
 */
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./freeze','./Util'], function(freeze, Util) {

const freeze = require('./freeze');
const Util = require('./Util');

  /**
   * FIRST() function
   * @param array The code length array
   * @param i The input position
   * @param nodesToMove The number of internal nodes to be relocated
   * @return The smallest {@code k} such that {@code nodesToMove <= k <= i} and
   *         {@code i <= (array[k] % array.length)}
   */
  var first = function(array, i, nodesToMove) {
    var length = array.length;
    var limit = i;
    var k = array.length - 2;

    while ((i >= nodesToMove) && ((array[i] % length) > limit)) {
      k = i;
      i -= (limit - i + 1);
    }
    i = Math.max (nodesToMove - 1, i);

    while (k > (i + 1)) {
      var temp = (i + k) >> 1;
      if ((array[temp] % length) > limit) {
        k = temp;
      } else {
        i = temp;
      }
    }

    return k;
  };

  /**
   * Fills the code array with extended parent pointers
   * @param array The code length array
   */
  var setExtendedParentPointers = function(array) {
    var length = array.length;

    array[0] += array[1];

    var headNode, tailNode, topNode, temp;
    for (headNode = 0, tailNode = 1, topNode = 2;
         tailNode < (length - 1);
         tailNode++) {
      if ((topNode >= length) || (array[headNode] < array[topNode])) {
        temp = array[headNode];
        array[headNode++] = tailNode;
      } else {
        temp = array[topNode++];
      }

      if ((topNode >= length) ||
          ((headNode < tailNode) && (array[headNode] < array[topNode]))) {
        temp += array[headNode];
        array[headNode++] = tailNode + length;
      } else {
        temp += array[topNode++];
      }

      array[tailNode] = temp;
    }
  };

  /**
   * Finds the number of nodes to relocate in order to achieve a given code
   * length limit
   * @param array The code length array
   * @param maximumLength The maximum bit length for the generated codes
   * @return The number of nodes to relocate
   */
  var findNodesToRelocate = function(array, maximumLength) {
    var currentNode = array.length - 2;
    var currentDepth;
    for (currentDepth = 1;
         (currentDepth < (maximumLength - 1)) && (currentNode > 1);
         currentDepth++) {
      currentNode =  first (array, currentNode - 1, 0);
    }

    return currentNode;
  };


  /**
   * A final allocation pass with no code length limit
   * @param array The code length array
   */
  var allocateNodeLengths = function(array) {
    var firstNode = array.length - 2;
    var nextNode = array.length - 1;
    var currentDepth, availableNodes, lastNode, i;

    for (currentDepth = 1, availableNodes = 2;
         availableNodes > 0;
         currentDepth++) {
      lastNode = firstNode;
      firstNode = first (array, lastNode - 1, 0);

      for (i = availableNodes - (lastNode - firstNode); i > 0; i--) {
        array[nextNode--] = currentDepth;
      }

      availableNodes = (lastNode - firstNode) << 1;
    }
  };

  /**
   * A final allocation pass that relocates nodes in order to achieve a
   * maximum code length limit
   * @param array The code length array
   * @param nodesToMove The number of internal nodes to be relocated
   * @param insertDepth The depth at which to insert relocated nodes
   */
  var allocateNodeLengthsWithRelocation = function(array, nodesToMove,
                                                   insertDepth) {
    var firstNode = array.length - 2;
    var nextNode = array.length - 1;
    var currentDepth = (insertDepth == 1) ? 2 : 1;
    var nodesLeftToMove = (insertDepth == 1) ? nodesToMove - 2 : nodesToMove;
    var availableNodes, lastNode, offset, i;

    for (availableNodes = currentDepth << 1;
         availableNodes > 0;
         currentDepth++) {
      lastNode = firstNode;
      firstNode = (firstNode <= nodesToMove) ? firstNode : first (array, lastNode - 1, nodesToMove);

      offset = 0;
      if (currentDepth >= insertDepth) {
        offset = Math.min (nodesLeftToMove, 1 << (currentDepth - insertDepth));
      } else if (currentDepth == (insertDepth - 1)) {
        offset = 1;
        if ((array[firstNode]) == lastNode) {
          firstNode++;
        }
      }

      for (i = availableNodes - (lastNode - firstNode + offset); i > 0; i--) {
        array[nextNode--] = currentDepth;
      }

      nodesLeftToMove -= offset;
      availableNodes = (lastNode - firstNode + offset) << 1;
    }
  };

  /**
   * Allocates Canonical Huffman code lengths in place based on a sorted
   * frequency array
   * @param array On input, a sorted array of symbol frequencies; On output,
   *              an array of Canonical Huffman code lengths
   * @param maximumLength The maximum code length. Must be at least
   *                      {@code ceil(log2(array.length))}
   */
  // public
  var allocateHuffmanCodeLengths = function(array, maximumLength) {
    switch (array.length) {
    case 2:
      array[1] = 1;
    case 1:
      array[0] = 1;
      return;
    }

    /* Pass 1 : Set extended parent pointers */
    setExtendedParentPointers (array);

    /* Pass 2 : Find number of nodes to relocate in order to achieve
     *          maximum code length */
    var nodesToRelocate = findNodesToRelocate (array, maximumLength);

    /* Pass 3 : Generate code lengths */
    if ((array[0] % array.length) >= nodesToRelocate) {
      allocateNodeLengths (array);
    } else {
      var insertDepth = maximumLength - (Util.fls(nodesToRelocate - 1));
      allocateNodeLengthsWithRelocation (array, nodesToRelocate, insertDepth);
    }
  };

  module.exports = freeze({
    allocateHuffmanCodeLengths: allocateHuffmanCodeLengths
  });
// });

},{"./Util":102,"./freeze":103}],101:[function(require,module,exports){
/** Abstract Stream interface, for byte-oriented i/o. */
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./freeze'],function(freeze) {
const freeze = require('./freeze');
    var EOF = -1;

    var Stream = function() {
        /* ABSTRACT */
    };
    // you must define one of read / readByte for a readable stream
    Stream.prototype.readByte = function() {
        var buf = [ 0 ];
        var len = this.read(buf, 0, 1);
        if (len===0) { this._eof = true; return EOF; }
        return buf[0];
    };
    Stream.prototype.read = function(buf, bufOffset, length) {
        var ch, bytesRead = 0;
        while (bytesRead < length) {
            ch = this.readByte();
            if (ch === EOF) { this._eof = true; break; }
            buf[bufOffset+(bytesRead++)] = ch;
        }
        return bytesRead;
    };
    // reasonable default implementation of 'eof'
    Stream.prototype.eof = function() { return !!this._eof; };
    // not all readable streams are seekable
    Stream.prototype.seek = function(pos) {
        throw new Error('Stream is not seekable.');
    };
    Stream.prototype.tell = function() {
        throw new Error('Stream is not seekable.');
    };
    // you must define one of write / writeByte for a writable stream
    Stream.prototype.writeByte = function(_byte) {
        var buf = [ _byte ];
        this.write(buf, 0, 1);
    };
    Stream.prototype.write = function(buf, bufOffset, length) {
        var i;
        for (i=0; i<length; i++) {
            this.writeByte(buf[bufOffset + i]);
        }
        return length;
    };
    // flush will happily do nothing if you don't override it.
    Stream.prototype.flush = function() { };

    // export EOF as a constant.
    Stream.EOF = EOF;

    module.exports = freeze(Stream);
// });

},{"./freeze":103}],102:[function(require,module,exports){
(function (process,Buffer){(function (){
/* Some basic utilities, used in a number of places. */
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./freeze','./Stream'],function(freeze, Stream) {
const freeze = require('./freeze');
const Stream = require('./Stream');

    var Util = Object.create(null);

    var EOF = Stream.EOF;

    /* Take a buffer, array, or stream, and return an input stream. */
    Util.coerceInputStream = function(input, forceRead) {
        if (!('readByte' in input)) {
            var buffer = input;
            input = new Stream();
            input.size = buffer.length;
            input.pos = 0;
            input.readByte = function() {
                if (this.pos >= this.size) { return EOF; }
                return buffer[this.pos++];
            };
            input.read = function(buf, bufOffset, length) {
                var bytesRead = 0;
                while (bytesRead < length && this.pos < buffer.length) {
                    buf[bufOffset++] = buffer[this.pos++];
                    bytesRead++;
                }
                return bytesRead;
            };
            input.seek = function(pos) { this.pos = pos; };
            input.tell = function() { return this.pos; };
            input.eof = function() { return this.pos >= buffer.length; };
        } else if (forceRead && !('read' in input)) {
            // wrap input if it doesn't implement read
            var s = input;
            input = new Stream();
            input.readByte = function() {
                var ch = s.readByte();
                if (ch === EOF) { this._eof = true; }
                return ch;
            };
            if ('size' in s) { input.size = s.size; }
            if ('seek' in s) {
                input.seek = function(pos) {
                    s.seek(pos); // may throw if s doesn't implement seek
                    this._eof = false;
                };
            }
            if ('tell' in s) {
                input.tell = s.tell.bind(s);
            }
        }
        return input;
    };

    var BufferStream = function(buffer, resizeOk) {
        this.buffer = buffer;
        this.resizeOk = resizeOk;
        this.pos = 0;
    };
    BufferStream.prototype = Object.create(Stream.prototype);
    BufferStream.prototype.writeByte = function(_byte) {
        if (this.resizeOk && this.pos >= this.buffer.length) {
            var newBuffer = Util.makeU8Buffer(this.buffer.length * 2);
            newBuffer.set(this.buffer);
            this.buffer = newBuffer;
        }
        this.buffer[this.pos++] = _byte;
    };
    BufferStream.prototype.getBuffer = function() {
        // trim buffer if needed
        if (this.pos !== this.buffer.length) {
            if (!this.resizeOk)
                throw new TypeError('outputsize does not match decoded input');
            var newBuffer = Util.makeU8Buffer(this.pos);
            newBuffer.set(this.buffer.subarray(0, this.pos));
            this.buffer = newBuffer;
        }
        return this.buffer;
    };

    /* Take a stream (or not) and an (optional) size, and return an
     * output stream.  Return an object with a 'retval' field equal to
     * the output stream (if that was given) or else a pointer at the
     * internal Uint8Array/buffer/array; and a 'stream' field equal to
     * an output stream to use.
     */
    Util.coerceOutputStream = function(output, size) {
        var r = { stream: output, retval: output };
        if (output) {
            if (typeof(output)==='object' && 'writeByte' in output) {
                return r; /* leave output alone */
            } else if (typeof(size) === 'number') {
                console.assert(size >= 0);
                r.stream = new BufferStream(Util.makeU8Buffer(size), false);
            } else { // output is a buffer
                r.stream = new BufferStream(output, false);
            }
        } else {
            r.stream = new BufferStream(Util.makeU8Buffer(16384), true);
        }
        Object.defineProperty(r, 'retval', {
            get: r.stream.getBuffer.bind(r.stream)
        });
        return r;
    };

    Util.compressFileHelper = function(magic, guts, suppressFinalByte) {
        return function(inStream, outStream, props) {
            inStream = Util.coerceInputStream(inStream);
            var o = Util.coerceOutputStream(outStream, outStream);
            outStream = o.stream;

            // write the magic number to identify this file type
            // (it better be ASCII, we're not doing utf-8 conversion)
            var i;
            for (i=0; i<magic.length; i++) {
                outStream.writeByte(magic.charCodeAt(i));
            }

            // if we know the size, write it
            var fileSize;
            if ('size' in inStream && inStream.size >= 0) {
                fileSize = inStream.size;
            } else {
                fileSize = -1; // size unknown
            }
            if (suppressFinalByte) {
                var tmpOutput = Util.coerceOutputStream([]);
                Util.writeUnsignedNumber(tmpOutput.stream, fileSize + 1);
                tmpOutput = tmpOutput.retval;
                for (i=0; i<tmpOutput.length-1; i++) {
                    outStream.writeByte(tmpOutput[i]);
                }
                suppressFinalByte = tmpOutput[tmpOutput.length-1];
            } else {
                Util.writeUnsignedNumber(outStream, fileSize + 1);
            }

            // call the guts to do the real compression
            guts(inStream, outStream, fileSize, props, suppressFinalByte);

            return o.retval;
        };
    };
    Util.decompressFileHelper = function(magic, guts) {
        return function(inStream, outStream) {
            inStream = Util.coerceInputStream(inStream);

            // read the magic number to confirm this file type
            // (it better be ASCII, we're not doing utf-8 conversion)
            var i;
            for (i=0; i<magic.length; i++) {
                if (magic.charCodeAt(i) !== inStream.readByte()) {
                    throw new Error("Bad magic");
                }
            }

            // read the file size & create an appropriate output stream/buffer
            var fileSize = Util.readUnsignedNumber(inStream) - 1;
            var o = Util.coerceOutputStream(outStream, fileSize);
            outStream = o.stream;

            // call the guts to do the real decompression
            guts(inStream, outStream, fileSize);

            return o.retval;
        };
    };
    // a helper for simple self-test of model encode
    Util.compressWithModel = function(inStream, fileSize, model) {
        var inSize = 0;
        while (inSize !== fileSize) {
            var ch = inStream.readByte();
            if (ch === EOF) {
                model.encode(256); // end of stream;
                break;
            }
            model.encode(ch);
            inSize++;
        }
    };
    // a helper for simple self-test of model decode
    Util.decompressWithModel = function(outStream, fileSize, model) {
        var outSize = 0;
        while (outSize !== fileSize) {
            var ch = model.decode();
            if (ch === 256) {
                break; // end of stream;
            }
            outStream.writeByte(ch);
            outSize++;
        }
    };

    /** Write a number using a self-delimiting big-endian encoding. */
    Util.writeUnsignedNumber = function(output, n) {
        console.assert(n >= 0);
        var bytes = [], i;
        do {
            bytes.push(n & 0x7F);
            // use division instead of shift to allow encoding numbers up to
            // 2^53
            n = Math.floor( n / 128 );
        } while (n !== 0);
        bytes[0] |= 0x80; // mark end of encoding.
        for (i=bytes.length-1; i>=0; i--) {
            output.writeByte(bytes[i]); // write in big-endian order
        }
        return output;
    };

    /** Read a number using a self-delimiting big-endian encoding. */
    Util.readUnsignedNumber = function(input) {
        var n = 0, c;
        while (true) {
            c = input.readByte();
            if (c&0x80) { n += (c&0x7F); break; }
            // using + and * instead of << allows decoding numbers up to 2^53
            n = (n + c) * 128;
        }
        return n;
    };

    // Compatibility thunks for Buffer/TypedArray constructors.

    var zerofill = function(a) {
        for (var i = 0, len = a.length; i < len; i++) {
            a[i] = 0;
        }
        return a;
    };

    var fallbackarray = function(size) {
        return zerofill(new Array(size));
    };

    // Node 0.11.6 - 0.11.10ish don't properly zero fill typed arrays.
    // See https://github.com/joyent/node/issues/6664
    // Try to detect and workaround the bug.
    var ensureZeroed = function id(a) { return a; };
    if ((typeof(process) !== 'undefined') &&
        Array.prototype.some.call(new Uint32Array(128), function(x) {
            return x !== 0;
        })) {
        //console.warn('Working around broken TypedArray');
        ensureZeroed = zerofill;
    }

    /** Portable 8-bit unsigned buffer. */
    Util.makeU8Buffer = (typeof(Uint8Array) !== 'undefined') ? function(size) {
        // Uint8Array ought to be  automatically zero-filled
        return ensureZeroed(new Uint8Array(size));
    } : (typeof(Buffer) !== 'undefined') ? function(size) {
        var b = new Buffer(size);
        b.fill(0);
        return b;
    } : fallbackarray;

    /** Portable 16-bit unsigned buffer. */
    Util.makeU16Buffer = (typeof(Uint16Array) !== 'undefined') ? function(size) {
        // Uint16Array ought to be  automatically zero-filled
        return ensureZeroed(new Uint16Array(size));
    } : fallbackarray;

    /** Portable 32-bit unsigned buffer. */
    Util.makeU32Buffer = (typeof(Uint32Array) !== 'undefined') ? function(size) {
        // Uint32Array ought to be  automatically zero-filled
        return ensureZeroed(new Uint32Array(size));
    } : fallbackarray;

    /** Portable 32-bit signed buffer. */
    Util.makeS32Buffer = (typeof(Int32Array) !== 'undefined') ? function(size) {
        // Int32Array ought to be  automatically zero-filled
        return ensureZeroed(new Int32Array(size));
    } : fallbackarray;

    Util.arraycopy = function(dst, src) {
        console.assert(dst.length >= src.length);
        for (var i = 0, len = src.length; i < len ; i++) {
            dst[i] = src[i];
        }
        return dst;
    };

    /** Highest bit set in a byte. */
    var bytemsb = [
        0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 /* 256 */
    ];
    console.assert(bytemsb.length===0x100);
    /** Find last set (most significant bit).
     *  @return the last bit set in the argument.
     *          <code>fls(0)==0</code> and <code>fls(1)==1</code>. */
    var fls = Util.fls = function(v) {
        console.assert(v>=0);
        if (v > 0xFFFFFFFF) { // use floating-point mojo
            return 32 + fls(Math.floor(v / 0x100000000));
        }
        if ( (v & 0xFFFF0000) !== 0) {
            if ( (v & 0xFF000000) !== 0) {
                return 24 + bytemsb[(v>>>24) & 0xFF];
            } else {
                return 16 + bytemsb[v>>>16];
            }
        } else if ( (v & 0x0000FF00) !== 0) {
            return 8 + bytemsb[v>>>8];
        } else {
            return bytemsb[v];
        }
    };
    /** Returns ceil(log2(n)) */
    Util.log2c = function(v) {
        return (v===0)?-1:fls(v-1);
    };

    module.exports = freeze(Util); // ensure constants are recognized as such.
// });

}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"./Stream":101,"./freeze":103,"_process":203,"buffer":172}],103:[function(require,module,exports){
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define([],function(){
  // 'use strict';

  // Object.freeze(), or a thunk if that method is not present in this
  // JavaScript environment.

  if (Object.freeze) {
    // return Object.freeze;
    module.exports = Object.freeze;
  } else {
    // return function(o) { return o; };
    module.exports = function(o) { return o; };
  }

// });

},{}],104:[function(require,module,exports){
// if (typeof define !== 'function') { var define = require('amdefine')(module); }
// define(['./lib/freeze','./lib/BitStream','./lib/Stream','./lib/BWT','./lib/Context1Model','./lib/DefSumModel','./lib/FenwickModel','./lib/MTFModel','./lib/NoModel','./lib/Huffman','./lib/RangeCoder','./lib/BWTC','./lib/Bzip2','./lib/Dmc','./lib/Lzjb','./lib/LzjbR','./lib/Lzp3','./lib/PPM','./lib/Simple'], function(freeze,BitStream,Stream,BWT,Context1Model,DefSumModel,FenwickModel,MTFModel,NoModel,Huffman,RangeCoder,BWTC,Bzip2,Dmc,Lzjb,LzjbR,Lzp3,PPM,Simple) {
//     'use strict';
//     return freeze({
//         version: "0.0.1",
//         // APIs
//         BitStream: BitStream,
//         Stream: Stream,
//         // transforms
//         BWT: BWT,
//         // models and coder
//         Context1Model: Context1Model,
//         DefSumModel: DefSumModel,
//         FenwickModel: FenwickModel,
//         MTFModel: MTFModel,
//         NoModel: NoModel,
//         Huffman: Huffman,
//         RangeCoder: RangeCoder,
//         // compression methods
//         BWTC: BWTC,
//         Bzip2: Bzip2,
//         Dmc: Dmc,
//         Lzjb: Lzjb,
//         LzjbR: LzjbR,
//         Lzp3: Lzp3,
//         PPM: PPM,
//         Simple: Simple
//     });
// });

var freeze = require('./lib/freeze');
var Bzip2 = require('./lib/Bzip2');

module.exports = freeze({
    version: "0.0.1",
    Bzip2: Bzip2
});
},{"./lib/Bzip2":98,"./lib/freeze":103}],105:[function(require,module,exports){
(function (process){(function (){
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).turf={})}(this,(function(t){"use strict";var e=6371008.8,n={centimeters:637100880,centimetres:637100880,degrees:57.22891354143274,feet:20902260.511392,inches:39.37*e,kilometers:6371.0088,kilometres:6371.0088,meters:e,metres:e,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:e/1852,radians:1,yards:6967335.223679999},r={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e,yards:1.0936133},i={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function o(t,e,n){void 0===n&&(n={});var r={type:"Feature"};return(0===n.id||n.id)&&(r.id=n.id),n.bbox&&(r.bbox=n.bbox),r.properties=e||{},r.geometry=t,r}function s(t,e,n){switch(t){case"Point":return a(e).geometry;case"LineString":return h(e).geometry;case"Polygon":return l(e).geometry;case"MultiPoint":return d(e).geometry;case"MultiLineString":return g(e).geometry;case"MultiPolygon":return y(e).geometry;default:throw new Error(t+" is invalid")}}function a(t,e,n){if(void 0===n&&(n={}),!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!C(t[0])||!C(t[1]))throw new Error("coordinates must contain numbers");return o({type:"Point",coordinates:t},e,n)}function u(t,e,n){return void 0===n&&(n={}),f(t.map((function(t){return a(t,e)})),n)}function l(t,e,n){void 0===n&&(n={});for(var r=0,i=t;r<i.length;r++){var s=i[r];if(s.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<s[s.length-1].length;a++)if(s[s.length-1][a]!==s[0][a])throw new Error("First and last Position are not equivalent.")}return o({type:"Polygon",coordinates:t},e,n)}function c(t,e,n){return void 0===n&&(n={}),f(t.map((function(t){return l(t,e)})),n)}function h(t,e,n){if(void 0===n&&(n={}),t.length<2)throw new Error("coordinates must be an array of two or more positions");return o({type:"LineString",coordinates:t},e,n)}function p(t,e,n){return void 0===n&&(n={}),f(t.map((function(t){return h(t,e)})),n)}function f(t,e){void 0===e&&(e={});var n={type:"FeatureCollection"};return e.id&&(n.id=e.id),e.bbox&&(n.bbox=e.bbox),n.features=t,n}function g(t,e,n){return void 0===n&&(n={}),o({type:"MultiLineString",coordinates:t},e,n)}function d(t,e,n){return void 0===n&&(n={}),o({type:"MultiPoint",coordinates:t},e,n)}function y(t,e,n){return void 0===n&&(n={}),o({type:"MultiPolygon",coordinates:t},e,n)}function v(t,e,n){return void 0===n&&(n={}),o({type:"GeometryCollection",geometries:t},e,n)}function _(t,e){if(void 0===e&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var n=Math.pow(10,e||0);return Math.round(t*n)/n}function m(t,e){void 0===e&&(e="kilometers");var r=n[e];if(!r)throw new Error(e+" units is invalid");return t*r}function x(t,e){void 0===e&&(e="kilometers");var r=n[e];if(!r)throw new Error(e+" units is invalid");return t/r}function E(t,e){return w(x(t,e))}function b(t){var e=t%360;return e<0&&(e+=360),e}function w(t){return 180*(t%(2*Math.PI))/Math.PI}function I(t){return t%360*Math.PI/180}function N(t,e,n){if(void 0===e&&(e="kilometers"),void 0===n&&(n="kilometers"),!(t>=0))throw new Error("length must be a positive number");return m(x(t,e),n)}function S(t,e,n){if(void 0===e&&(e="meters"),void 0===n&&(n="kilometers"),!(t>=0))throw new Error("area must be a positive number");var r=i[e];if(!r)throw new Error("invalid original units");var o=i[n];if(!o)throw new Error("invalid final units");return t/r*o}function C(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function P(t){return!!t&&t.constructor===Object}function M(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!C(t))throw new Error("bbox must only contain numbers")}))}function L(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}var O=Object.freeze({__proto__:null,earthRadius:e,factors:n,unitsFactors:r,areaFactors:i,feature:o,geometry:s,point:a,points:u,polygon:l,polygons:c,lineString:h,lineStrings:p,featureCollection:f,multiLineString:g,multiPoint:d,multiPolygon:y,geometryCollection:v,round:_,radiansToLength:m,lengthToRadians:x,lengthToDegrees:E,bearingToAzimuth:b,radiansToDegrees:w,degreesToRadians:I,convertLength:N,convertArea:S,isNumber:C,isObject:P,validateBBox:M,validateId:L});function R(t,e,n){if(null!==t)for(var r,i,o,s,a,u,l,c,h=0,p=0,f=t.type,g="FeatureCollection"===f,d="Feature"===f,y=g?t.features.length:1,v=0;v<y;v++){a=(c=!!(l=g?t.features[v].geometry:d?t.geometry:t)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var _=0;_<a;_++){var m=0,x=0;if(null!==(s=c?l.geometries[_]:l)){u=s.coordinates;var E=s.type;switch(h=!n||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===e(u,p,v,m,x))return!1;p++,m++;break;case"LineString":case"MultiPoint":for(r=0;r<u.length;r++){if(!1===e(u[r],p,v,m,x))return!1;p++,"MultiPoint"===E&&m++}"LineString"===E&&m++;break;case"Polygon":case"MultiLineString":for(r=0;r<u.length;r++){for(i=0;i<u[r].length-h;i++){if(!1===e(u[r][i],p,v,m,x))return!1;p++}"MultiLineString"===E&&m++,"Polygon"===E&&x++}"Polygon"===E&&m++;break;case"MultiPolygon":for(r=0;r<u.length;r++){for(x=0,i=0;i<u[r].length;i++){for(o=0;o<u[r][i].length-h;o++){if(!1===e(u[r][i][o],p,v,m,x))return!1;p++}x++}m++}break;case"GeometryCollection":for(r=0;r<s.geometries.length;r++)if(!1===R(s.geometries[r],e,n))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function T(t,e,n,r){var i=n;return R(t,(function(t,r,o,s,a){i=0===r&&void 0===n?t:e(i,t,r,o,s,a)}),r),i}function A(t,e){var n;switch(t.type){case"FeatureCollection":for(n=0;n<t.features.length&&!1!==e(t.features[n].properties,n);n++);break;case"Feature":e(t.properties,0)}}function D(t,e,n){var r=n;return A(t,(function(t,i){r=0===i&&void 0===n?t:e(r,t,i)})),r}function F(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var n=0;n<t.features.length&&!1!==e(t.features[n],n);n++);}function k(t,e,n){var r=n;return F(t,(function(t,i){r=0===i&&void 0===n?t:e(r,t,i)})),r}function G(t){var e=[];return R(t,(function(t){e.push(t)})),e}function q(t,e){var n,r,i,o,s,a,u,l,c,h,p=0,f="FeatureCollection"===t.type,g="Feature"===t.type,d=f?t.features.length:1;for(n=0;n<d;n++){for(a=f?t.features[n].geometry:g?t.geometry:t,l=f?t.features[n].properties:g?t.properties:{},c=f?t.features[n].bbox:g?t.bbox:void 0,h=f?t.features[n].id:g?t.id:void 0,s=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,i=0;i<s;i++)if(null!==(o=u?a.geometries[i]:a))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(o,p,l,c,h))return!1;break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)if(!1===e(o.geometries[r],p,l,c,h))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,p,l,c,h))return!1;p++}}function B(t,e,n){var r=n;return q(t,(function(t,i,o,s,a){r=0===i&&void 0===n?t:e(r,t,i,o,s,a)})),r}function z(t,e){q(t,(function(t,n,r,i,s){var a,u=null===t?null:t.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==e(o(t,r,{bbox:i,id:s}),n,0)&&void 0}switch(u){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var l=0;l<t.coordinates.length;l++){var c=t.coordinates[l];if(!1===e(o({type:a,coordinates:c},r),n,l))return!1}}))}function j(t,e,n){var r=n;return z(t,(function(t,i,o){r=0===i&&0===o&&void 0===n?t:e(r,t,i,o)})),r}function U(t,e){z(t,(function(t,n,r){var i=0;if(t.geometry){var o=t.geometry.type;if("Point"!==o&&"MultiPoint"!==o){var s,a=0,u=0,l=0;return!1!==R(t,(function(o,c,p,f,g){if(void 0===s||n>a||f>u||g>l)return s=o,a=n,u=f,l=g,void(i=0);var d=h([s,o],t.properties);if(!1===e(d,n,r,g,i))return!1;i++,s=o}))&&void 0}}}))}function V(t,e,n){var r=n,i=!1;return U(t,(function(t,o,s,a,u){r=!1===i&&void 0===n?t:e(r,t,o,s,a,u),i=!0})),r}function X(t,e){if(!t)throw new Error("geojson is required");z(t,(function(t,n,r){if(null!==t.geometry){var i=t.geometry.type,o=t.geometry.coordinates;switch(i){case"LineString":if(!1===e(t,n,r,0,0))return!1;break;case"Polygon":for(var s=0;s<o.length;s++)if(!1===e(h(o[s],t.properties),n,r,s))return!1}}}))}function Y(t,e,n){var r=n;return X(t,(function(t,i,o,s){r=0===i&&void 0===n?t:e(r,t,i,o,s)})),r}function H(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n,r=e.featureIndex||0,i=e.multiFeatureIndex||0,o=e.geometryIndex||0,s=e.segmentIndex||0,a=e.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),a=a||t.features[r].properties,n=t.features[r].geometry;break;case"Feature":a=a||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var u=n.coordinates;switch(n.type){case"Point":case"MultiPoint":return null;case"LineString":return s<0&&(s=u.length+s-1),h([u[s],u[s+1]],a,e);case"Polygon":return o<0&&(o=u.length+o),s<0&&(s=u[o].length+s-1),h([u[o][s],u[o][s+1]],a,e);case"MultiLineString":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s-1),h([u[i][s],u[i][s+1]],a,e);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),s<0&&(s=u[i][o].length-s-1),h([u[i][o][s],u[i][o][s+1]],a,e)}throw new Error("geojson is invalid")}function W(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n,r=e.featureIndex||0,i=e.multiFeatureIndex||0,o=e.geometryIndex||0,s=e.coordIndex||0,u=e.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),u=u||t.features[r].properties,n=t.features[r].geometry;break;case"Feature":u=u||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var l=n.coordinates;switch(n.type){case"Point":return a(l,u,e);case"MultiPoint":return i<0&&(i=l.length+i),a(l[i],u,e);case"LineString":return s<0&&(s=l.length+s),a(l[s],u,e);case"Polygon":return o<0&&(o=l.length+o),s<0&&(s=l[o].length+s),a(l[o][s],u,e);case"MultiLineString":return i<0&&(i=l.length+i),s<0&&(s=l[i].length+s),a(l[i][s],u,e);case"MultiPolygon":return i<0&&(i=l.length+i),o<0&&(o=l[i].length+o),s<0&&(s=l[i][o].length-s),a(l[i][o][s],u,e)}throw new Error("geojson is invalid")}var J=Object.freeze({__proto__:null,coordAll:G,coordEach:R,coordReduce:T,featureEach:F,featureReduce:k,findPoint:W,findSegment:H,flattenEach:z,flattenReduce:j,geomEach:q,geomReduce:B,lineEach:X,lineReduce:Y,propEach:A,propReduce:D,segmentEach:U,segmentReduce:V});function Z(t){var e=[1/0,1/0,-1/0,-1/0];return R(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}function K(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return t.geometry.coordinates;if("Point"===t.type)return t.coordinates}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return t;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function Q(t){if(Array.isArray(t))return t;if("Feature"===t.type){if(null!==t.geometry)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function $(t){if(t.length>1&&C(t[0])&&C(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return $(t[0]);throw new Error("coordinates must only contain numbers")}function tt(t,e,n){if(!e||!n)throw new Error("type and name required");if(!t||t.type!==e)throw new Error("Invalid input to "+n+": must be a "+e+", given "+t.type)}function et(t,e,n){if(!t)throw new Error("No feature passed");if(!n)throw new Error(".featureOf() requires a name");if(!t||"Feature"!==t.type||!t.geometry)throw new Error("Invalid input to "+n+", Feature with geometry required");if(!t.geometry||t.geometry.type!==e)throw new Error("Invalid input to "+n+": must be a "+e+", given "+t.geometry.type)}function nt(t,e,n){if(!t)throw new Error("No featureCollection passed");if(!n)throw new Error(".collectionOf() requires a name");if(!t||"FeatureCollection"!==t.type)throw new Error("Invalid input to "+n+", FeatureCollection required");for(var r=0,i=t.features;r<i.length;r++){var o=i[r];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+n+", Feature with geometry required");if(!o.geometry||o.geometry.type!==e)throw new Error("Invalid input to "+n+": must be a "+e+", given "+o.geometry.type)}}function rt(t){return"Feature"===t.type?t.geometry:t}function it(t,e){return"FeatureCollection"===t.type?"FeatureCollection":"GeometryCollection"===t.type?"GeometryCollection":"Feature"===t.type&&null!==t.geometry?t.geometry.type:t.type}Z.default=Z;var ot=Object.freeze({__proto__:null,getCoord:K,getCoords:Q,containsNumber:$,geojsonType:tt,featureOf:et,collectionOf:nt,getGeom:rt,getType:it}),st=Object.getOwnPropertySymbols,at=Object.prototype.hasOwnProperty,ut=Object.prototype.propertyIsEnumerable;
/*
    object-assign
    (c) Sindre Sorhus
    @license MIT
    */function lt(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}var ct=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,r,i=lt(t),o=1;o<arguments.length;o++){for(var s in n=Object(arguments[o]))at.call(n,s)&&(i[s]=n[s]);if(st){r=st(n);for(var a=0;a<r.length;a++)ut.call(n,r[a])&&(i[r[a]]=n[r[a]])}}return i},ht={successCallback:null,verbose:!1},pt={};
/**
     * @license GNU Affero General Public License.
     * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>
     * v. 1.2.0
     * https://github.com/RaumZeit/MarchingSquares.js
     *
     * MarchingSquaresJS is free software: you can redistribute it and/or modify
     * it under the terms of the GNU Affero General Public License as published by
     * the Free Software Foundation, either version 3 of the License, or
     * (at your option) any later version.
     *
     * MarchingSquaresJS is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU Affero General Public License for more details.
     *
     * As additional permission under GNU Affero General Public License version 3
     * section 7, third-party projects (personal or commercial) may distribute,
     * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the
     * requirement that said third-party project for that reason alone becomes
     * subject to any requirement of the GNU Affero General Public License version 3.
     * Any modifications to MarchingSquaresJS, however, must be shared with the public
     * and made available.
     *
     * In summary this:
     * - allows you to use MarchingSquaresJS at no cost
     * - allows you to use MarchingSquaresJS for both personal and commercial purposes
     * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any
     *   license as long as this license notice is included
     * - enables you to keep the source code of your program that uses MarchingSquaresJS
     *   undisclosed
     * - forces you to share any modifications you have made to MarchingSquaresJS,
     *   e.g. bug-fixes
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.
     */function ft(t,e,n){n=n||{};for(var r=Object.keys(ht),i=0;i<r.length;i++){var o=r[i],s=n[o];s=null!=s?s:ht[o],pt[o]=s}pt.verbose&&console.log("MarchingSquaresJS-isoContours: computing isocontour for "+e);var a=function(t){var e=[],n=0,r=1e-7;return t.cells.forEach((function(i,o){i.forEach((function(i,s){if(void 0!==i&&(5!==(f=i).cval&&10!==f.cval)&&!dt(i)){var a=function(t,e,n){var r,i,o=t.length,s=[],a=[0,0,1,1,0,0,0,0,-1,0,1,1,-1,0,-1,0],u=[0,-1,0,0,1,1,1,1,0,-1,0,0,0,-1,0,0],l=["none","left","bottom","left","right","none","bottom","left","top","top","none","top","right","right","bottom","none"],c=["none","bottom","right","right","top","top","top","top","left","bottom","right","right","left","bottom","left","none"],h=t[e][n],p=h.cval,f=l[p],g=vt(h,f);s.push([n+g[0],e+g[1]]),f=c[p],g=vt(h,f),s.push([n+g[0],e+g[1]]),yt(h);var d=n+a[p],y=e+u[p],v=p;for(;d>=0&&y>=0&&y<o&&(d!=n||y!=e)&&void 0!==(h=t[y][d]);){if(0===(p=h.cval)||15===p)return{path:s,info:"mergeable"};f=c[p],r=a[p],i=u[p],5!==p&&10!==p||(5===p?h.flipped?-1===u[v]?(f="left",r=-1,i=0):(f="right",r=1,i=0):-1===a[v]&&(f="bottom",r=0,i=-1):10===p&&(h.flipped?-1===a[v]?(f="top",r=0,i=1):(f="bottom",r=0,i=-1):1===u[v]&&(f="left",r=-1,i=0))),g=vt(h,f),s.push([d+g[0],y+g[1]]),yt(h),d+=r,y+=i,v=p}return{path:s,info:"closed"}}(t.cells,o,s),u=!1;if("mergeable"===a.info)for(var l=a.path[a.path.length-1][0],c=a.path[a.path.length-1][1],h=n-1;h>=0;h--)if(Math.abs(e[h][0][0]-l)<=r&&Math.abs(e[h][0][1]-c)<=r){for(var p=a.path.length-2;p>=0;--p)e[h].unshift(a.path[p]);u=!0;break}u||(e[n++]=a.path)}var f}))})),e}(function(t,e){for(var n=t.length-1,r=t[0].length-1,i={rows:n,cols:r,cells:[]},o=0;o<n;++o){i.cells[o]=[];for(var s=0;s<r;++s){var a=0,u=t[o+1][s],l=t[o+1][s+1],c=t[o][s+1],h=t[o][s];if(!(isNaN(u)||isNaN(l)||isNaN(c)||isNaN(h))){a|=u>=e?8:0,a|=l>=e?4:0,a|=c>=e?2:0;var p,f,g,d,y=!1;if(5===(a|=h>=e?1:0)||10===a){var v=(u+l+c+h)/4;5===a&&v<e?(a=10,y=!0):10===a&&v<e&&(a=5,y=!0)}if(0!==a&&15!==a)p=f=g=d=.5,1===a?(g=1-gt(e,u,h),f=1-gt(e,c,h)):2===a?(f=gt(e,h,c),d=1-gt(e,l,c)):3===a?(g=1-gt(e,u,h),d=1-gt(e,l,c)):4===a?(p=gt(e,u,l),d=gt(e,c,l)):5===a?(p=gt(e,u,l),d=gt(e,c,l),f=1-gt(e,c,h),g=1-gt(e,u,h)):6===a?(f=gt(e,h,c),p=gt(e,u,l)):7===a?(g=1-gt(e,u,h),p=gt(e,u,l)):8===a?(g=gt(e,h,u),p=1-gt(e,l,u)):9===a?(f=1-gt(e,c,h),p=1-gt(e,l,u)):10===a?(p=1-gt(e,l,u),d=1-gt(e,l,c),f=gt(e,h,c),g=gt(e,h,u)):11===a?(p=1-gt(e,l,u),d=1-gt(e,l,c)):12===a?(g=gt(e,h,u),d=gt(e,c,l)):13===a?(f=1-gt(e,c,h),d=gt(e,c,l)):14===a?(g=gt(e,h,u),f=gt(e,h,c)):console.log("MarchingSquaresJS-isoContours: Illegal cval detected: "+a),i.cells[o][s]={cval:a,flipped:y,top:p,right:d,bottom:f,left:g}}}}return i}(t,e));return"function"==typeof pt.successCallback&&pt.successCallback(a),a}function gt(t,e,n){return(t-e)/(n-e)}function dt(t){return 0===t.cval||15===t.cval}function yt(t){dt(t)||5===t.cval||10===t.cval||(t.cval=15)}function vt(t,e){return"top"===e?[t.top,1]:"bottom"===e?[t.bottom,0]:"right"===e?[1,t.right]:"left"===e?[0,t.left]:void 0}function _t(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.zProperty||"elevation",r=e.flip,i=e.flags;nt(t,"Point","input must contain Points");for(var o=function(t,e){var n={};return F(t,(function(t){var e=Q(t)[1];n[e]||(n[e]=[]),n[e].push(t)})),Object.keys(n).map((function(t){return n[t].sort((function(t,e){return Q(t)[0]-Q(e)[0]}))})).sort((function(t,n){return e?Q(t[0])[1]-Q(n[0])[1]:Q(n[0])[1]-Q(t[0])[1]}))}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],l=[],c=0;c<u.length;c++){var h=u[c];h.properties[n]?l.push(h.properties[n]):l.push(0),!0===i&&(h.properties.matrixPosition=[a,c])}s.push(l)}return s}var mt=Et,xt=Et;function Et(t,e,n,r,i){bt(t,e,n||0,r||t.length-1,i||It)}function bt(t,e,n,r,i){for(;r>n;){if(r-n>600){var o=r-n+1,s=e-n+1,a=Math.log(o),u=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*u*(o-u)/o)*(s-o/2<0?-1:1);bt(t,e,Math.max(n,Math.floor(e-s*u/o+l)),Math.min(r,Math.floor(e+(o-s)*u/o+l)),i)}var c=t[e],h=n,p=r;for(wt(t,n,e),i(t[r],c)>0&&wt(t,n,r);h<p;){for(wt(t,h,p),h++,p--;i(t[h],c)<0;)h++;for(;i(t[p],c)>0;)p--}0===i(t[n],c)?wt(t,n,p):wt(t,++p,r),p<=e&&(n=p+1),e<=p&&(r=p-1)}}function wt(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function It(t,e){return t<e?-1:t>e?1:0}mt.default=xt;var Nt=Ct,St=Ct;function Ct(t,e){if(!(this instanceof Ct))return new Ct(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function Pt(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}function Mt(t,e){Lt(t,0,t.children.length,e,t)}function Lt(t,e,n,r,i){i||(i=Gt(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],Ot(i,t.leaf?r(o):o);return i}function Ot(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function Rt(t,e){return t.minX-e.minX}function Tt(t,e){return t.minY-e.minY}function At(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function Dt(t){return t.maxX-t.minX+(t.maxY-t.minY)}function Ft(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function kt(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function Gt(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function qt(t,e,n,r,i){for(var o,s=[e,n];s.length;)(n=s.pop())-(e=s.pop())<=r||(o=e+Math.ceil((n-e)/r/2)*r,mt(t,o,e,n,i),s.push(e,o,o,n))}function Bt(t){var e={exports:{}};return t(e,e.exports),e.exports}Ct.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],r=this.toBBox;if(!kt(t,e))return n;for(var i,o,s,a,u=[];e;){for(i=0,o=e.children.length;i<o;i++)s=e.children[i],kt(t,a=e.leaf?r(s):s)&&(e.leaf?n.push(s):Ft(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!kt(t,e))return!1;for(var r,i,o,s,a=[];e;){for(r=0,i=e.children.length;r<i;r++)if(o=e.children[r],kt(t,s=e.leaf?n(o):o)){if(e.leaf||Ft(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var i=this.data;this.data=r,r=i}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=Gt([]),this},remove:function(t,e){if(!t)return this;for(var n,r,i,o,s=this.data,a=this.toBBox(t),u=[],l=[];s||u.length;){if(s||(s=u.pop(),r=u[u.length-1],n=l.pop(),o=!0),s.leaf&&-1!==(i=Pt(t,s.children,e)))return s.children.splice(i,1),u.push(s),this._condense(u),this;o||s.leaf||!Ft(s,a)?r?(n++,s=r.children[n],o=!1):s=null:(u.push(s),l.push(n),n=0,r=s,s=s.children[0])}return this},toBBox:function(t){return t},compareMinX:Rt,compareMinY:Tt,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return Mt(i=Gt(t.slice(e,n+1)),this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=Gt([])).leaf=!1,i.height=r;var a,u,l,c,h=Math.ceil(o/s),p=h*Math.ceil(Math.sqrt(s));for(qt(t,e,n,p,this.compareMinX),a=e;a<=n;a+=p)for(qt(t,a,l=Math.min(a+p-1,n),h,this.compareMinY),u=a;u<=l;u+=h)c=Math.min(u+h-1,l),i.children.push(this._build(t,u,c,r-1));return Mt(i,this.toBBox),i},_chooseSubtree:function(t,e,n,r){for(var i,o,s,a,u,l,c,h,p,f;r.push(e),!e.leaf&&r.length-1!==n;){for(c=h=1/0,i=0,o=e.children.length;i<o;i++)u=At(s=e.children[i]),p=t,f=s,(l=(Math.max(f.maxX,p.maxX)-Math.min(f.minX,p.minX))*(Math.max(f.maxY,p.maxY)-Math.min(f.minY,p.minY))-u)<h?(h=l,c=u<c?u:c,a=s):l===h&&u<c&&(c=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var r=this.toBBox,i=n?t:r(t),o=[],s=this._chooseSubtree(i,this.data,e,o);for(s.children.push(t),Ot(s,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=Gt(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,Mt(n,this.toBBox),Mt(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)},_splitRoot:function(t,e){this.data=Gt([t,e]),this.data.height=t.height+1,this.data.leaf=!1,Mt(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var r,i,o,s,a,u,l,c,h,p,f,g,d,y;for(u=l=1/0,r=e;r<=n-e;r++)i=Lt(t,0,r,this.toBBox),o=Lt(t,r,n,this.toBBox),h=i,p=o,f=void 0,g=void 0,d=void 0,y=void 0,f=Math.max(h.minX,p.minX),g=Math.max(h.minY,p.minY),d=Math.min(h.maxX,p.maxX),y=Math.min(h.maxY,p.maxY),s=Math.max(0,d-f)*Math.max(0,y-g),a=At(i)+At(o),s<u?(u=s,c=r,l=a<l?a:l):s===u&&a<l&&(l=a,c=r);return c},_chooseSplitAxis:function(t,e,n){var r=t.leaf?this.compareMinX:Rt,i=t.leaf?this.compareMinY:Tt;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)},_allDistMargin:function(t,e,n,r){t.children.sort(r);var i,o,s=this.toBBox,a=Lt(t,0,e,s),u=Lt(t,n-e,n,s),l=Dt(a)+Dt(u);for(i=e;i<n-e;i++)o=t.children[i],Ot(a,t.leaf?s(o):o),l+=Dt(a);for(i=n-e-1;i>=e;i--)o=t.children[i],Ot(u,t.leaf?s(o):o),l+=Dt(u);return l},_adjustParentBBoxes:function(t,e,n){for(var r=n;r>=0;r--)Ot(e[r],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():Mt(t[n],this.toBBox)},_initFormat:function(t){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(t[0])),this.compareMinY=new Function("a","b",e.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}},Nt.default=St;var zt=function(t,e,n){var r=t*e,i=jt*t,o=i-(i-t),s=t-o,a=jt*e,u=a-(a-e),l=e-u,c=s*l-(r-o*u-s*u-o*l);if(n)return n[0]=c,n[1]=r,n;return[c,r]},jt=+(Math.pow(2,27)+1);var Ut=function(t,e){var n=0|t.length,r=0|e.length;if(1===n&&1===r)return function(t,e){var n=t+e,r=n-t,i=t-(n-r)+(e-r);if(i)return[i,n];return[n]}(t[0],e[0]);var i,o,s=new Array(n+r),a=0,u=0,l=0,c=Math.abs,h=t[u],p=c(h),f=e[l],g=c(f);p<g?(o=h,(u+=1)<n&&(h=t[u],p=c(h))):(o=f,(l+=1)<r&&(f=e[l],g=c(f)));u<n&&p<g||l>=r?(i=h,(u+=1)<n&&(h=t[u],p=c(h))):(i=f,(l+=1)<r&&(f=e[l],g=c(f)));var d,y,v=i+o,_=v-i,m=o-_,x=m,E=v;for(;u<n&&l<r;)p<g?(i=h,(u+=1)<n&&(h=t[u],p=c(h))):(i=f,(l+=1)<r&&(f=e[l],g=c(f))),(m=(o=x)-(_=(v=i+o)-i))&&(s[a++]=m),x=E-((d=E+v)-(y=d-E))+(v-y),E=d;for(;u<n;)(m=(o=x)-(_=(v=(i=h)+o)-i))&&(s[a++]=m),x=E-((d=E+v)-(y=d-E))+(v-y),E=d,(u+=1)<n&&(h=t[u]);for(;l<r;)(m=(o=x)-(_=(v=(i=f)+o)-i))&&(s[a++]=m),x=E-((d=E+v)-(y=d-E))+(v-y),E=d,(l+=1)<r&&(f=e[l]);x&&(s[a++]=x);E&&(s[a++]=E);a||(s[a++]=0);return s.length=a,s};var Vt=function(t,e,n){var r=t+e,i=r-t,o=e-i,s=t-(r-i);if(n)return n[0]=s+o,n[1]=r,n;return[s+o,r]};var Xt=function(t,e){var n=t.length;if(1===n){var r=zt(t[0],e);return r[0]?r:[r[1]]}var i=new Array(2*n),o=[.1,.1],s=[.1,.1],a=0;zt(t[0],e,o),o[0]&&(i[a++]=o[0]);for(var u=1;u<n;++u){zt(t[u],e,s);var l=o[1];Vt(l,s[0],o),o[0]&&(i[a++]=o[0]);var c=s[1],h=o[1],p=c+h,f=h-(p-c);o[1]=p,f&&(i[a++]=f)}o[1]&&(i[a++]=o[1]);0===a&&(i[a++]=0);return i.length=a,i};var Yt=function(t,e){var n=0|t.length,r=0|e.length;if(1===n&&1===r)return function(t,e){var n=t+e,r=n-t,i=t-(n-r)+(e-r);if(i)return[i,n];return[n]}(t[0],-e[0]);var i,o,s=new Array(n+r),a=0,u=0,l=0,c=Math.abs,h=t[u],p=c(h),f=-e[l],g=c(f);p<g?(o=h,(u+=1)<n&&(h=t[u],p=c(h))):(o=f,(l+=1)<r&&(f=-e[l],g=c(f)));u<n&&p<g||l>=r?(i=h,(u+=1)<n&&(h=t[u],p=c(h))):(i=f,(l+=1)<r&&(f=-e[l],g=c(f)));var d,y,v=i+o,_=v-i,m=o-_,x=m,E=v;for(;u<n&&l<r;)p<g?(i=h,(u+=1)<n&&(h=t[u],p=c(h))):(i=f,(l+=1)<r&&(f=-e[l],g=c(f))),(m=(o=x)-(_=(v=i+o)-i))&&(s[a++]=m),x=E-((d=E+v)-(y=d-E))+(v-y),E=d;for(;u<n;)(m=(o=x)-(_=(v=(i=h)+o)-i))&&(s[a++]=m),x=E-((d=E+v)-(y=d-E))+(v-y),E=d,(u+=1)<n&&(h=t[u]);for(;l<r;)(m=(o=x)-(_=(v=(i=f)+o)-i))&&(s[a++]=m),x=E-((d=E+v)-(y=d-E))+(v-y),E=d,(l+=1)<r&&(f=-e[l]);x&&(s[a++]=x);E&&(s[a++]=E);a||(s[a++]=0);return s.length=a,s};var Ht=Bt((function(t){function e(t,e){for(var n=new Array(t.length-1),r=1;r<t.length;++r)for(var i=n[r-1]=new Array(t.length-1),o=0,s=0;o<t.length;++o)o!==e&&(i[s++]=t[r][o]);return n}function n(t){if(1===t.length)return t[0];if(2===t.length)return["sum(",t[0],",",t[1],")"].join("");var e=t.length>>1;return["sum(",n(t.slice(0,e)),",",n(t.slice(e)),")"].join("")}function r(t){if(2===t.length)return[["sum(prod(",t[0][0],",",t[1][1],"),prod(-",t[0][1],",",t[1][0],"))"].join("")];for(var i=[],o=0;o<t.length;++o)i.push(["scale(",n(r(e(t,o))),",",(s=o,1&s?"-":""),t[0][o],")"].join(""));return i;var s}function i(t){for(var i=[],o=[],s=function(t){for(var e=new Array(t),n=0;n<t;++n){e[n]=new Array(t);for(var r=0;r<t;++r)e[n][r]=["m",r,"[",t-n-1,"]"].join("")}return e}(t),a=[],u=0;u<t;++u)0==(1&u)?i.push.apply(i,r(e(s,u))):o.push.apply(o,r(e(s,u))),a.push("m"+u);var l=n(i),c=n(o),h="orientation"+t+"Exact",p=["function ",h,"(",a.join(),"){var p=",l,",n=",c,",d=sub(p,n);return d[d.length-1];};return ",h].join("");return new Function("sum","prod","scale","sub",p)(Ut,zt,Xt,Yt)}var o=i(3),s=i(4),a=[function(){return 0},function(){return 0},function(t,e){return e[0]-t[0]},function(t,e,n){var r,i=(t[1]-n[1])*(e[0]-n[0]),s=(t[0]-n[0])*(e[1]-n[1]),a=i-s;if(i>0){if(s<=0)return a;r=i+s}else{if(!(i<0))return a;if(s>=0)return a;r=-(i+s)}var u=33306690738754716e-32*r;return a>=u||a<=-u?a:o(t,e,n)},function(t,e,n,r){var i=t[0]-r[0],o=e[0]-r[0],a=n[0]-r[0],u=t[1]-r[1],l=e[1]-r[1],c=n[1]-r[1],h=t[2]-r[2],p=e[2]-r[2],f=n[2]-r[2],g=o*c,d=a*l,y=a*u,v=i*c,_=i*l,m=o*u,x=h*(g-d)+p*(y-v)+f*(_-m),E=7771561172376103e-31*((Math.abs(g)+Math.abs(d))*Math.abs(h)+(Math.abs(y)+Math.abs(v))*Math.abs(p)+(Math.abs(_)+Math.abs(m))*Math.abs(f));return x>E||-x>E?x:s(t,e,n,r)}];function u(t){var e=a[t.length];return e||(e=a[t.length]=i(t.length)),e.apply(void 0,t)}!function(){for(;a.length<=5;)a.push(i(a.length));for(var e=[],n=["slow"],r=0;r<=5;++r)e.push("a"+r),n.push("o"+r);var o=["function getOrientation(",e.join(),"){switch(arguments.length){case 0:case 1:return 0;"];for(r=2;r<=5;++r)o.push("case ",r,":return o",r,"(",e.slice(0,r).join(),");");o.push("}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation"),n.push(o.join(""));var s=Function.apply(void 0,n);for(t.exports=s.apply(void 0,[u].concat(a)),r=0;r<=5;++r)t.exports[r]=a[r]}()})),Wt=function(t){var e=t.length;if(e<3){for(var n=new Array(e),r=0;r<e;++r)n[r]=r;return 2===e&&t[0][0]===t[1][0]&&t[0][1]===t[1][1]?[0]:n}var i=new Array(e);for(r=0;r<e;++r)i[r]=r;i.sort((function(e,n){var r=t[e][0]-t[n][0];return r||t[e][1]-t[n][1]}));var o=[i[0],i[1]],s=[i[0],i[1]];for(r=2;r<e;++r){for(var a=i[r],u=t[a],l=o.length;l>1&&Jt(t[o[l-2]],t[o[l-1]],u)<=0;)l-=1,o.pop();for(o.push(a),l=s.length;l>1&&Jt(t[s[l-2]],t[s[l-1]],u)>=0;)l-=1,s.pop();s.push(a)}n=new Array(s.length+o.length-2);for(var c=0,h=(r=0,o.length);r<h;++r)n[c++]=o[r];for(var p=s.length-2;p>0;--p)n[c++]=s[p];return n},Jt=Ht[3];var Zt=Qt,Kt=Qt;function Qt(t,e){if(!(this instanceof Qt))return new Qt(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||$t,this.length>0)for(var n=(this.length>>1)-1;n>=0;n--)this._down(n)}function $t(t,e){return t<e?-1:t>e?1:0}Qt.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,n=this.compare,r=e[t];t>0;){var i=t-1>>1,o=e[i];if(n(r,o)>=0)break;e[t]=o,t=i}e[t]=r},_down:function(t){for(var e=this.data,n=this.compare,r=this.length>>1,i=e[t];t<r;){var o=1+(t<<1),s=o+1,a=e[o];if(s<this.length&&n(e[s],a)<0&&(o=s,a=e[s]),n(a,i)>=0)break;e[t]=a,t=o}e[t]=i}},Zt.default=Kt;var te=function(t,e){for(var n=t[0],r=t[1],i=!1,o=0,s=e.length-1;o<e.length;s=o++){var a=e[o][0],u=e[o][1],l=e[s][0],c=e[s][1];u>r!=c>r&&n<(l-a)*(r-u)/(c-u)+a&&(i=!i)}return i},ee=Ht[3],ne=ie,re=ie;function ie(t,e,n){e=Math.max(0,void 0===e?2:e),n=n||0;for(var r,i=function(t){for(var e=t[0],n=t[0],r=t[0],i=t[0],o=0;o<t.length;o++){var s=t[o];s[0]<e[0]&&(e=s),s[0]>r[0]&&(r=s),s[1]<n[1]&&(n=s),s[1]>i[1]&&(i=s)}var a=[e,n,r,i],u=a.slice();for(o=0;o<t.length;o++)te(t[o],a)||u.push(t[o]);var l=Wt(u),c=[];for(o=0;o<l.length;o++)c.push(u[l[o]]);return c}(t),o=Nt(16,["[0]","[1]","[0]","[1]"]).load(t),s=[],a=0;a<i.length;a++){var u=i[a];o.remove(u),r=he(u,r),s.push(r)}var l=Nt(16);for(a=0;a<s.length;a++)l.insert(ce(s[a]));for(var c=e*e,h=n*n;s.length;){var p=s.shift(),f=p.p,g=p.next.p,d=pe(f,g);if(!(d<h)){var y=d/c;(u=oe(o,p.prev.p,f,g,p.next.next.p,y,l))&&Math.min(pe(u,f),pe(u,g))<=y&&(s.push(p),s.push(he(u,p)),o.remove(u),l.remove(p),l.insert(ce(p)),l.insert(ce(p.next)))}}p=r;var v=[];do{v.push(p.p),p=p.next}while(p!==r);return v.push(p.p),v}function oe(t,e,n,r,i,o,s){for(var a=new Zt(null,se),u=t.data;u;){for(var l=0;l<u.children.length;l++){var c=u.children[l],h=u.leaf?fe(c,n,r):ae(n,r,c);h>o||a.push({node:c,dist:h})}for(;a.length&&!a.peek().node.children;){var p=a.pop(),f=p.node,g=fe(f,e,n),d=fe(f,r,i);if(p.dist<g&&p.dist<d&&le(n,f,s)&&le(r,f,s))return f}(u=a.pop())&&(u=u.node)}return null}function se(t,e){return t.dist-e.dist}function ae(t,e,n){if(ue(t,n)||ue(e,n))return 0;var r=ge(t[0],t[1],e[0],e[1],n.minX,n.minY,n.maxX,n.minY);if(0===r)return 0;var i=ge(t[0],t[1],e[0],e[1],n.minX,n.minY,n.minX,n.maxY);if(0===i)return 0;var o=ge(t[0],t[1],e[0],e[1],n.maxX,n.minY,n.maxX,n.maxY);if(0===o)return 0;var s=ge(t[0],t[1],e[0],e[1],n.minX,n.maxY,n.maxX,n.maxY);return 0===s?0:Math.min(r,i,o,s)}function ue(t,e){return t[0]>=e.minX&&t[0]<=e.maxX&&t[1]>=e.minY&&t[1]<=e.maxY}function le(t,e,n){for(var r,i,o,s,a=Math.min(t[0],e[0]),u=Math.min(t[1],e[1]),l=Math.max(t[0],e[0]),c=Math.max(t[1],e[1]),h=n.search({minX:a,minY:u,maxX:l,maxY:c}),p=0;p<h.length;p++)if(r=h[p].p,i=h[p].next.p,o=t,r!==(s=e)&&i!==o&&ee(r,i,o)>0!=ee(r,i,s)>0&&ee(o,s,r)>0!=ee(o,s,i)>0)return!1;return!0}function ce(t){var e=t.p,n=t.next.p;return t.minX=Math.min(e[0],n[0]),t.minY=Math.min(e[1],n[1]),t.maxX=Math.max(e[0],n[0]),t.maxY=Math.max(e[1],n[1]),t}function he(t,e){var n={p:t,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return e?(n.next=e.next,n.prev=e,e.next.prev=n,e.next=n):(n.prev=n,n.next=n),n}function pe(t,e){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function fe(t,e,n){var r=e[0],i=e[1],o=n[0]-r,s=n[1]-i;if(0!==o||0!==s){var a=((t[0]-r)*o+(t[1]-i)*s)/(o*o+s*s);a>1?(r=n[0],i=n[1]):a>0&&(r+=o*a,i+=s*a)}return(o=t[0]-r)*o+(s=t[1]-i)*s}function ge(t,e,n,r,i,o,s,a){var u,l,c,h,p=n-t,f=r-e,g=s-i,d=a-o,y=t-i,v=e-o,_=p*p+f*f,m=p*g+f*d,x=g*g+d*d,E=p*y+f*v,b=g*y+d*v,w=_*x-m*m,I=w,N=w;0===w?(l=0,I=1,h=b,N=x):(h=_*b-m*E,(l=m*b-x*E)<0?(l=0,h=b,N=x):l>I&&(l=I,h=b+m,N=x)),h<0?(h=0,-E<0?l=0:-E>_?l=I:(l=-E,I=_)):h>N&&(h=N,-E+m<0?l=0:-E+m>_?l=I:(l=-E+m,I=_));var S=(1-(c=0===h?0:h/N))*i+c*s-((1-(u=0===l?0:l/I))*t+u*n),C=(1-c)*o+c*a-((1-u)*e+u*r);return S*S+C*C}function de(t,e){void 0===e&&(e={}),e.concavity=e.concavity||1/0;var n=[];if(R(t,(function(t){n.push([t[0],t[1]])})),!n.length)return null;var r=ne(n,e.concavity);return r.length>3?l([r]):null}function ye(t,e,n){if(void 0===n&&(n={}),!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");var r=K(t),i=rt(e),o=i.type,s=e.bbox,a=i.coordinates;if(s&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(r,s))return!1;"Polygon"===o&&(a=[a]);for(var u=!1,l=0;l<a.length&&!u;l++)if(ve(r,a[l][0],n.ignoreBoundary)){for(var c=!1,h=1;h<a[l].length&&!c;)ve(r,a[l][h],!n.ignoreBoundary)&&(c=!0),h++;c||(u=!0)}return u}function ve(t,e,n){var r=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var i=0,o=e.length-1;i<e.length;o=i++){var s=e[i][0],a=e[i][1],u=e[o][0],l=e[o][1];if(t[1]*(s-u)+a*(u-t[0])+l*(t[0]-s)==0&&(s-t[0])*(u-t[0])<=0&&(a-t[1])*(l-t[1])<=0)return!n;a>t[1]!=l>t[1]&&t[0]<(u-s)*(t[1]-a)/(l-a)+s&&(r=!r)}return r}function _e(t,e){var n=[];return F(t,(function(t){var r=!1;if("Point"===t.geometry.type)q(e,(function(e){ye(t,e)&&(r=!0)})),r&&n.push(t);else{if("MultiPoint"!==t.geometry.type)throw new Error("Input geometry must be a Point or MultiPoint");var i=[];q(e,(function(e){R(t,(function(t){ye(t,e)&&(r=!0,i.push(t))}))})),r&&n.push(d(i))}})),f(n)}function me(t,e,n){void 0===n&&(n={});var r=K(t),i=K(e),o=I(i[1]-r[1]),s=I(i[0]-r[0]),a=I(r[1]),u=I(i[1]),l=Math.pow(Math.sin(o/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(a)*Math.cos(u);return m(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),n.units)}function xe(t,e){var n=!1;return f(function(t){if(t.length<3)return[];t.sort(be);var e,n,r,i,o,s,a=t.length-1,u=t[a].x,l=t[0].x,c=t[a].y,h=c,p=1e-12;for(;a--;)t[a].y<c&&(c=t[a].y),t[a].y>h&&(h=t[a].y);var f,g=l-u,d=h-c,y=g>d?g:d,v=.5*(l+u),_=.5*(h+c),m=[new Ee({__sentinel:!0,x:v-20*y,y:_-y},{__sentinel:!0,x:v,y:_+20*y},{__sentinel:!0,x:v+20*y,y:_-y})],x=[],E=[];a=t.length;for(;a--;){for(E.length=0,f=m.length;f--;)(g=t[a].x-m[f].x)>0&&g*g>m[f].r?(x.push(m[f]),m.splice(f,1)):g*g+(d=t[a].y-m[f].y)*d>m[f].r||(E.push(m[f].a,m[f].b,m[f].b,m[f].c,m[f].c,m[f].a),m.splice(f,1));for(we(E),f=E.length;f;)n=E[--f],e=E[--f],r=t[a],i=n.x-e.x,o=n.y-e.y,s=2*(i*(r.y-n.y)-o*(r.x-n.x)),Math.abs(s)>p&&m.push(new Ee(e,n,r))}Array.prototype.push.apply(x,m),a=x.length;for(;a--;)(x[a].a.__sentinel||x[a].b.__sentinel||x[a].c.__sentinel)&&x.splice(a,1);return x}(t.features.map((function(t){var r={x:t.geometry.coordinates[0],y:t.geometry.coordinates[1]};return e?r.z=t.properties[e]:3===t.geometry.coordinates.length&&(n=!0,r.z=t.geometry.coordinates[2]),r}))).map((function(t){var e=[t.a.x,t.a.y],r=[t.b.x,t.b.y],i=[t.c.x,t.c.y],o={};return n?(e.push(t.a.z),r.push(t.b.z),i.push(t.c.z)):o={a:t.a.z,b:t.b.z,c:t.c.z},l([[e,r,i,e]],o)})))}ne.default=re;var Ee=function(t,e,n){this.a=t,this.b=e,this.c=n;var r,i,o=e.x-t.x,s=e.y-t.y,a=n.x-t.x,u=n.y-t.y,l=o*(t.x+e.x)+s*(t.y+e.y),c=a*(t.x+n.x)+u*(t.y+n.y),h=2*(o*(n.y-e.y)-s*(n.x-e.x));this.x=(u*l-s*c)/h,this.y=(o*c-a*l)/h,r=this.x-t.x,i=this.y-t.y,this.r=r*r+i*i};function be(t,e){return e.x-t.x}function we(t){var e,n,r,i,o,s=t.length;t:for(;s;)for(n=t[--s],e=t[--s],r=s;r;)if(o=t[--r],e===(i=t[--r])&&n===o||e===o&&n===i){t.splice(s,2),t.splice(r,2),s-=2;continue t}}function Ie(t){if(!t)throw new Error("geojson is required");switch(t.type){case"Feature":return Ne(t);case"FeatureCollection":return function(t){var e={type:"FeatureCollection"};return Object.keys(t).forEach((function(n){switch(n){case"type":case"features":return;default:e[n]=t[n]}})),e.features=t.features.map((function(t){return Ne(t)})),e}(t);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return Ce(t);default:throw new Error("unknown GeoJSON type")}}function Ne(t){var e={type:"Feature"};return Object.keys(t).forEach((function(n){switch(n){case"type":case"properties":case"geometry":return;default:e[n]=t[n]}})),e.properties=Se(t.properties),e.geometry=Ce(t.geometry),e}function Se(t){var e={};return t?(Object.keys(t).forEach((function(n){var r=t[n];"object"==typeof r?null===r?e[n]=null:Array.isArray(r)?e[n]=r.map((function(t){return t})):e[n]=Se(r):e[n]=r})),e):e}function Ce(t){var e={type:t.type};return t.bbox&&(e.bbox=t.bbox),"GeometryCollection"===t.type?(e.geometries=t.geometries.map((function(t){return Ce(t)})),e):(e.coordinates=Pe(t.coordinates),e)}function Pe(t){var e=t;return"object"!=typeof e[0]?e.slice():e.map((function(t){return Pe(t)}))}function Me(t,e){if(void 0===e&&(e={}),!P(e=e||{}))throw new Error("options is invalid");var n=e.mutate;if("FeatureCollection"!==it(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==n&&void 0!==n||(t=Ie(t));var r=[],i=Y(t,(function(t,e){var n=function(t,e){var n,r=t.geometry.coordinates,i=e.geometry.coordinates,o=Le(r[0]),s=Le(r[r.length-1]),a=Le(i[0]),u=Le(i[i.length-1]);if(o===u)n=i.concat(r.slice(1));else if(a===s)n=r.concat(i.slice(1));else if(o===a)n=r.slice(1).reverse().concat(i);else{if(s!==u)return null;n=r.concat(i.reverse().slice(1))}return h(n)}(t,e);return n||(r.push(t),e)}));return i&&r.push(i),r.length?1===r.length?r[0]:g(r.map((function(t){return t.coordinates}))):null}function Le(t){return t[0].toString()+","+t[1].toString()}function Oe(t){return t}function Re(t,e){var n=function(t){if(null==t)return Oe;var e,n,r=t.scale[0],i=t.scale[1],o=t.translate[0],s=t.translate[1];return function(t,a){a||(e=n=0);var u=2,l=t.length,c=new Array(l);for(c[0]=(e+=t[0])*r+o,c[1]=(n+=t[1])*i+s;u<l;)c[u]=t[u],++u;return c}}(t.transform),r=t.arcs;function i(t,e){e.length&&e.pop();for(var i=r[t<0?~t:t],o=0,s=i.length;o<s;++o)e.push(n(i[o],o));t<0&&function(t,e){for(var n,r=t.length,i=r-e;i<--r;)n=t[i],t[i++]=t[r],t[r]=n}(e,s)}function o(t){return n(t)}function s(t){for(var e=[],n=0,r=t.length;n<r;++n)i(t[n],e);return e.length<2&&e.push(e[0]),e}function a(t){for(var e=s(t);e.length<4;)e.push(e[0]);return e}function u(t){return t.map(a)}return function t(e){var n,r=e.type;switch(r){case"GeometryCollection":return{type:r,geometries:e.geometries.map(t)};case"Point":n=o(e.coordinates);break;case"MultiPoint":n=e.coordinates.map(o);break;case"LineString":n=s(e.arcs);break;case"MultiLineString":n=e.arcs.map(s);break;case"Polygon":n=u(e.arcs);break;case"MultiPolygon":n=e.arcs.map(u);break;default:return null}return{type:r,coordinates:n}}(e)}function Te(t,e){var n={},r={},i={},o=[],s=-1;function a(t,e){for(var r in t){var i=t[r];delete e[i.start],delete i.start,delete i.end,i.forEach((function(t){n[t<0?~t:t]=1})),o.push(i)}}return e.forEach((function(n,r){var i,o=t.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(i=e[++s],e[s]=n,e[r]=i)})),e.forEach((function(e){var n,o,s=function(e){var n,r=t.arcs[e<0?~e:e],i=r[0];t.transform?(n=[0,0],r.forEach((function(t){n[0]+=t[0],n[1]+=t[1]}))):n=r[r.length-1];return e<0?[n,i]:[i,n]}(e),a=s[0],u=s[1];if(n=i[a])if(delete i[n.end],n.push(e),n.end=u,o=r[u]){delete r[o.start];var l=o===n?n:n.concat(o);r[l.start=n.start]=i[l.end=o.end]=l}else r[n.start]=i[n.end]=n;else if(n=r[u])if(delete r[n.start],n.unshift(e),n.start=a,o=i[a]){delete i[o.end];var c=o===n?n:o.concat(n);r[c.start=o.start]=i[c.end=n.end]=c}else r[n.start]=i[n.end]=n;else r[(n=[e]).start=a]=i[n.end=u]=n})),a(i,r),a(r,i),e.forEach((function(t){n[t<0?~t:t]||o.push([t])})),o}function Ae(t,e){var n={},r=[],i=[];function o(t){t.forEach((function(e){e.forEach((function(e){(n[e=e<0?~e:e]||(n[e]=[])).push(t)}))})),r.push(t)}function s(e){return function(t){for(var e,n=-1,r=t.length,i=t[r-1],o=0;++n<r;)e=i,i=t[n],o+=e[0]*i[1]-e[1]*i[0];return Math.abs(o)}(Re(t,{type:"Polygon",arcs:[e]}).coordinates[0])}return e.forEach((function t(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(t);break;case"Polygon":o(e.arcs);break;case"MultiPolygon":e.arcs.forEach(o)}})),r.forEach((function(t){if(!t._){var e=[],r=[t];for(t._=1,i.push(e);t=r.pop();)e.push(t),t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].forEach((function(t){t._||(t._=1,r.push(t))}))}))}))}})),r.forEach((function(t){delete t._})),{type:"MultiPolygon",arcs:i.map((function(e){var r,i=[];if(e.forEach((function(t){t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].length<2&&i.push(t)}))}))})),(r=(i=Te(t,i)).length)>1)for(var o,a,u=1,l=s(i[0]);u<r;++u)(o=s(i[u]))>l&&(a=i[0],i[0]=i[u],i[u]=a,l=o);return i})).filter((function(t){return t.length>0}))}}var De=Object.prototype.hasOwnProperty;function Fe(t,e,n,r,i,o){3===arguments.length&&(r=o=Array,i=null);for(var s=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),a=new o(t),u=t-1,l=0;l<t;++l)s[l]=i;function c(r,o){for(var l=e(r)&u,c=s[l],h=0;c!=i;){if(n(c,r))return a[l]=o;if(++h>=t)throw new Error("full hashmap");c=s[l=l+1&u]}return s[l]=r,a[l]=o,o}function h(r,o){for(var l=e(r)&u,c=s[l],h=0;c!=i;){if(n(c,r))return a[l];if(++h>=t)throw new Error("full hashmap");c=s[l=l+1&u]}return s[l]=r,a[l]=o,o}function p(r,o){for(var l=e(r)&u,c=s[l],h=0;c!=i;){if(n(c,r))return a[l];if(++h>=t)break;c=s[l=l+1&u]}return o}function f(){for(var t=[],e=0,n=s.length;e<n;++e){var r=s[e];r!=i&&t.push(r)}return t}return{set:c,maybeSet:h,get:p,keys:f}}function ke(t,e){return t[0]===e[0]&&t[1]===e[1]}var Ge=new ArrayBuffer(16),qe=new Float64Array(Ge),Be=new Uint32Array(Ge);function ze(t){qe[0]=t[0],qe[1]=t[1];var e=Be[0]^Be[1];return 2147483647&(e=e<<5^e>>7^Be[2]^Be[3])}function je(t){var e,n,r,i,o=t.coordinates,s=t.lines,a=t.rings,u=function(){for(var t=Fe(1.4*o.length,E,b,Int32Array,-1,Int32Array),e=new Int32Array(o.length),n=0,r=o.length;n<r;++n)e[n]=t.maybeSet(n,n);return e}(),l=new Int32Array(o.length),c=new Int32Array(o.length),h=new Int32Array(o.length),p=new Int8Array(o.length),f=0;for(e=0,n=o.length;e<n;++e)l[e]=c[e]=h[e]=-1;for(e=0,n=s.length;e<n;++e){var g=s[e],d=g[0],y=g[1];for(r=u[d],i=u[++d],++f,p[r]=1;++d<=y;)x(e,r,r=i,i=u[d]);++f,p[i]=1}for(e=0,n=o.length;e<n;++e)l[e]=-1;for(e=0,n=a.length;e<n;++e){var v=a[e],_=v[0]+1,m=v[1];for(x(e,u[m-1],r=u[_-1],i=u[_]);++_<=m;)x(e,r,r=i,i=u[_])}function x(t,e,n,r){if(l[n]!==t){l[n]=t;var i=c[n];if(i>=0){var o=h[n];i===e&&o===r||i===r&&o===e||(++f,p[n]=1)}else c[n]=e,h[n]=r}}function E(t){return ze(o[t])}function b(t,e){return ke(o[t],o[e])}l=c=h=null;var w,I=function(t,e,n,r,i){3===arguments.length&&(r=Array,i=null);for(var o=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),s=t-1,a=0;a<t;++a)o[a]=i;function u(r){for(var a=e(r)&s,u=o[a],l=0;u!=i;){if(n(u,r))return!0;if(++l>=t)throw new Error("full hashset");u=o[a=a+1&s]}return o[a]=r,!0}function l(r){for(var a=e(r)&s,u=o[a],l=0;u!=i;){if(n(u,r))return!0;if(++l>=t)break;u=o[a=a+1&s]}return!1}function c(){for(var t=[],e=0,n=o.length;e<n;++e){var r=o[e];r!=i&&t.push(r)}return t}return{add:u,has:l,values:c}}(1.4*f,ze,ke);for(e=0,n=o.length;e<n;++e)p[w=u[e]]&&I.add(o[w]);return I}function Ue(t,e,n,r){Ve(t,e,n),Ve(t,e,e+r),Ve(t,e+r,n)}function Ve(t,e,n){for(var r,i=e+(n---e>>1);e<i;++e,--n)r=t[e],t[e]=t[n],t[n]=r}function Xe(t){var e,n,r={};for(e in t)r[e]=null==(n=t[e])?{type:null}:("FeatureCollection"===n.type?Ye:"Feature"===n.type?He:We)(n);return r}function Ye(t){var e={type:"GeometryCollection",geometries:t.features.map(He)};return null!=t.bbox&&(e.bbox=t.bbox),e}function He(t){var e,n=We(t.geometry);for(e in null!=t.id&&(n.id=t.id),null!=t.bbox&&(n.bbox=t.bbox),t.properties){n.properties=t.properties;break}return n}function We(t){if(null==t)return{type:null};var e="GeometryCollection"===t.type?{type:"GeometryCollection",geometries:t.geometries.map(We)}:"Point"===t.type||"MultiPoint"===t.type?{type:t.type,coordinates:t.coordinates}:{type:t.type,arcs:t.coordinates};return null!=t.bbox&&(e.bbox=t.bbox),e}function Je(t,e){var n=function(t){var e=1/0,n=1/0,r=-1/0,i=-1/0;function o(t){null!=t&&De.call(s,t.type)&&s[t.type](t)}var s={GeometryCollection:function(t){t.geometries.forEach(o)},Point:function(t){a(t.coordinates)},MultiPoint:function(t){t.coordinates.forEach(a)},LineString:function(t){u(t.arcs)},MultiLineString:function(t){t.arcs.forEach(u)},Polygon:function(t){t.arcs.forEach(u)},MultiPolygon:function(t){t.arcs.forEach(l)}};function a(t){var o=t[0],s=t[1];o<e&&(e=o),o>r&&(r=o),s<n&&(n=s),s>i&&(i=s)}function u(t){t.forEach(a)}function l(t){t.forEach(u)}for(var c in t)o(t[c]);return r>=e&&i>=n?[e,n,r,i]:void 0}(t=Xe(t)),r=e>0&&n&&function(t,e,n){var r=e[0],i=e[1],o=e[2],s=e[3],a=o-r?(n-1)/(o-r):1,u=s-i?(n-1)/(s-i):1;function l(t){return[Math.round((t[0]-r)*a),Math.round((t[1]-i)*u)]}function c(t,e){for(var n,o,s,l,c,h=-1,p=0,f=t.length,g=new Array(f);++h<f;)n=t[h],l=Math.round((n[0]-r)*a),c=Math.round((n[1]-i)*u),l===o&&c===s||(g[p++]=[o=l,s=c]);for(g.length=p;p<e;)p=g.push([g[0][0],g[0][1]]);return g}function h(t){return c(t,2)}function p(t){return c(t,4)}function f(t){return t.map(p)}function g(t){null!=t&&De.call(d,t.type)&&d[t.type](t)}var d={GeometryCollection:function(t){t.geometries.forEach(g)},Point:function(t){t.coordinates=l(t.coordinates)},MultiPoint:function(t){t.coordinates=t.coordinates.map(l)},LineString:function(t){t.arcs=h(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(h)},Polygon:function(t){t.arcs=f(t.arcs)},MultiPolygon:function(t){t.arcs=t.arcs.map(f)}};for(var y in t)g(t[y]);return{scale:[1/a,1/u],translate:[r,i]}}(t,n,e),i=function(t){var e,n,r,i,o=t.coordinates,s=t.lines,a=t.rings,u=s.length+a.length;for(delete t.lines,delete t.rings,r=0,i=s.length;r<i;++r)for(e=s[r];e=e.next;)++u;for(r=0,i=a.length;r<i;++r)for(n=a[r];n=n.next;)++u;var l=Fe(2*u*1.4,ze,ke),c=t.arcs=[];for(r=0,i=s.length;r<i;++r){e=s[r];do{h(e)}while(e=e.next)}for(r=0,i=a.length;r<i;++r)if((n=a[r]).next)do{h(n)}while(n=n.next);else p(n);function h(t){var e,n,r,i,s,a,u,h;if(r=l.get(e=o[t[0]]))for(u=0,h=r.length;u<h;++u)if(f(i=r[u],t))return t[0]=i[0],void(t[1]=i[1]);if(s=l.get(n=o[t[1]]))for(u=0,h=s.length;u<h;++u)if(g(a=s[u],t))return t[1]=a[0],void(t[0]=a[1]);r?r.push(t):l.set(e,[t]),s?s.push(t):l.set(n,[t]),c.push(t)}function p(t){var e,n,r,i,s;if(n=l.get(o[t[0]]))for(i=0,s=n.length;i<s;++i){if(d(r=n[i],t))return t[0]=r[0],void(t[1]=r[1]);if(y(r,t))return t[0]=r[1],void(t[1]=r[0])}if(n=l.get(e=o[t[0]+v(t)]))for(i=0,s=n.length;i<s;++i){if(d(r=n[i],t))return t[0]=r[0],void(t[1]=r[1]);if(y(r,t))return t[0]=r[1],void(t[1]=r[0])}n?n.push(t):l.set(e,[t]),c.push(t)}function f(t,e){var n=t[0],r=e[0],i=t[1];if(n-i!=r-e[1])return!1;for(;n<=i;++n,++r)if(!ke(o[n],o[r]))return!1;return!0}function g(t,e){var n=t[0],r=e[0],i=t[1],s=e[1];if(n-i!=r-s)return!1;for(;n<=i;++n,--s)if(!ke(o[n],o[s]))return!1;return!0}function d(t,e){var n=t[0],r=e[0],i=t[1]-n;if(i!==e[1]-r)return!1;for(var s=v(t),a=v(e),u=0;u<i;++u)if(!ke(o[n+(u+s)%i],o[r+(u+a)%i]))return!1;return!0}function y(t,e){var n=t[0],r=e[0],i=t[1],s=e[1],a=i-n;if(a!==s-r)return!1;for(var u=v(t),l=a-v(e),c=0;c<a;++c)if(!ke(o[n+(c+u)%a],o[s-(c+l)%a]))return!1;return!0}function v(t){for(var e=t[0],n=t[1],r=e,i=r,s=o[r];++r<n;){var a=o[r];(a[0]<s[0]||a[0]===s[0]&&a[1]<s[1])&&(i=r,s=a)}return i-e}return t}(function(t){var e,n,r,i=je(t),o=t.coordinates,s=t.lines,a=t.rings;for(n=0,r=s.length;n<r;++n)for(var u=s[n],l=u[0],c=u[1];++l<c;)i.has(o[l])&&(e={0:l,1:u[1]},u[1]=l,u=u.next=e);for(n=0,r=a.length;n<r;++n)for(var h=a[n],p=h[0],f=p,g=h[1],d=i.has(o[p]);++f<g;)i.has(o[f])&&(d?(e={0:f,1:h[1]},h[1]=f,h=h.next=e):(Ue(o,p,g,g-f),o[g]=o[p],d=!0,f=p));return t}(function(t){var e=-1,n=[],r=[],i=[];function o(t){t&&De.call(s,t.type)&&s[t.type](t)}var s={GeometryCollection:function(t){t.geometries.forEach(o)},LineString:function(t){t.arcs=a(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(a)},Polygon:function(t){t.arcs=t.arcs.map(u)},MultiPolygon:function(t){t.arcs=t.arcs.map(l)}};function a(t){for(var r=0,o=t.length;r<o;++r)i[++e]=t[r];var s={0:e-o+1,1:e};return n.push(s),s}function u(t){for(var n=0,o=t.length;n<o;++n)i[++e]=t[n];var s={0:e-o+1,1:e};return r.push(s),s}function l(t){return t.map(u)}for(var c in t)o(t[c]);return{type:"Topology",coordinates:i,lines:n,rings:r,objects:t}}(t))),o=i.coordinates,s=Fe(1.4*i.arcs.length,Ze,Ke);function a(t){t&&De.call(u,t.type)&&u[t.type](t)}t=i.objects,i.bbox=n,i.arcs=i.arcs.map((function(t,e){return s.set(t,e),o.slice(t[0],t[1]+1)})),delete i.coordinates,o=null;var u={GeometryCollection:function(t){t.geometries.forEach(a)},LineString:function(t){t.arcs=l(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(l)},Polygon:function(t){t.arcs=t.arcs.map(l)},MultiPolygon:function(t){t.arcs=t.arcs.map(c)}};function l(t){var e=[];do{var n=s.get(t);e.push(t[0]<t[1]?n:~n)}while(t=t.next);return e}function c(t){return t.map(l)}for(var h in t)a(t[h]);return r&&(i.transform=r,i.arcs=function(t){for(var e=-1,n=t.length;++e<n;){for(var r,i,o=t[e],s=0,a=1,u=o.length,l=o[0],c=l[0],h=l[1];++s<u;)r=(l=o[s])[0],i=l[1],r===c&&i===h||(o[a++]=[r-c,i-h],c=r,h=i);1===a&&(o[a++]=[0,0]),o.length=a}return t}(i.arcs)),i}function Ze(t){var e,n=t[0],r=t[1];return r<n&&(e=n,n=r,r=e),n+31*r}function Ke(t,e){var n,r=t[0],i=t[1],o=e[0],s=e[1];return i<r&&(n=r,r=i,i=n),s<o&&(n=o,o=s,s=n),r===o&&i===s}function Qe(t,e){if(void 0===e&&(e={}),"FeatureCollection"!==it(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==e.mutate&&void 0!==e.mutate||(t=Ie(t));var n=[];z(t,(function(t){n.push(t.geometry)}));var r=Je({geoms:v(n).geometry});return function(t){return Re(t,Ae.apply(this,arguments))}(r,r.objects.geoms.geometries)}function $e(t,e){if(void 0===e&&(e={}),!P(e=e||{}))throw new Error("options is invalid");var n=e.mutate;if("FeatureCollection"!==it(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==n&&void 0!==n||(t=Ie(t));var r=function(t){var e={};z(t,(function(t){e[t.geometry.type]=!0}));var n=Object.keys(e);if(1===n.length)return n[0];return null}(t);if(!r)throw new Error("geojson must be homogenous");var i=t;switch(r){case"LineString":return Me(i,e);case"Polygon":return Qe(i,e);default:throw new Error(r+" is not supported")}}function tn(t,e){void 0===e&&(e={});var n="object"==typeof e?e.mutate:e;if(!t)throw new Error("geojson is required");var r=it(t),i=[];switch(r){case"LineString":i=en(t);break;case"MultiLineString":case"Polygon":Q(t).forEach((function(t){i.push(en(t))}));break;case"MultiPolygon":Q(t).forEach((function(t){var e=[];t.forEach((function(t){e.push(en(t))})),i.push(e)}));break;case"Point":return t;case"MultiPoint":var s={};Q(t).forEach((function(t){var e=t.join("-");Object.prototype.hasOwnProperty.call(s,e)||(i.push(t),s[e]=!0)}));break;default:throw new Error(r+" geometry not supported")}return t.coordinates?!0===n?(t.coordinates=i,t):{type:r,coordinates:i}:!0===n?(t.geometry.coordinates=i,t):o({type:r,coordinates:i},t.properties,{bbox:t.bbox,id:t.id})}function en(t){var e=Q(t);if(2===e.length&&!nn(e[0],e[1]))return e;var n=[],r=e.length-1,i=n.length;n.push(e[0]);for(var o=1;o<r;o++){var s=n[n.length-1];e[o][0]===s[0]&&e[o][1]===s[1]||(n.push(e[o]),(i=n.length)>2&&rn(n[i-3],n[i-1],n[i-2])&&n.splice(n.length-2,1))}if(n.push(e[e.length-1]),i=n.length,nn(e[0],e[e.length-1])&&i<4)throw new Error("invalid polygon");return rn(n[i-3],n[i-1],n[i-2])&&n.splice(n.length-2,1),n}function nn(t,e){return t[0]===e[0]&&t[1]===e[1]}function rn(t,e,n){var r=n[0],i=n[1],o=t[0],s=t[1],a=e[0],u=e[1],l=a-o,c=u-s;return 0===(r-o)*c-(i-s)*l&&(Math.abs(l)>=Math.abs(c)?l>0?o<=r&&r<=a:a<=r&&r<=o:c>0?s<=i&&i<=u:u<=i&&i<=s)}function on(t,e,n){var r=e.x,i=e.y,o=n.x-r,s=n.y-i;if(0!==o||0!==s){var a=((t.x-r)*o+(t.y-i)*s)/(o*o+s*s);a>1?(r=n.x,i=n.y):a>0&&(r+=o*a,i+=s*a)}return(o=t.x-r)*o+(s=t.y-i)*s}function sn(t,e,n,r,i){for(var o,s=r,a=e+1;a<n;a++){var u=on(t[a],t[e],t[n]);u>s&&(o=a,s=u)}s>r&&(o-e>1&&sn(t,e,o,r,i),i.push(t[o]),n-o>1&&sn(t,o,n,r,i))}function an(t,e){var n=t.length-1,r=[t[0]];return sn(t,0,n,e,r),r.push(t[n]),r}function un(t,e,n){if(t.length<=2)return t;var r=void 0!==e?e*e:1;return t=an(t=n?t:function(t,e){for(var n,r,i,o,s,a=t[0],u=[a],l=1,c=t.length;l<c;l++)n=t[l],i=a,o=void 0,s=void 0,o=(r=n).x-i.x,s=r.y-i.y,o*o+s*s>e&&(u.push(n),a=n);return a!==n&&u.push(n),u}(t,r),r)}function ln(t,e,n){return un(t.map((function(t){return{x:t[0],y:t[1],z:t[2]}})),e,n).map((function(t){return t.z?[t.x,t.y,t.z]:[t.x,t.y]}))}function cn(t,e,n){return t.map((function(t){var r=t.map((function(t){return{x:t[0],y:t[1]}}));if(r.length<4)throw new Error("invalid polygon");for(var i=un(r,e,n).map((function(t){return[t.x,t.y]}));!hn(i);)i=un(r,e-=.01*e,n).map((function(t){return[t.x,t.y]}));return i[i.length-1][0]===i[0][0]&&i[i.length-1][1]===i[0][1]||i.push(i[0]),i}))}function hn(t){return!(t.length<3)&&!(3===t.length&&t[2][0]===t[0][0]&&t[2][1]===t[0][1])}var pn=function(){function t(t){this.points=t.points||[],this.duration=t.duration||1e4,this.sharpness=t.sharpness||.85,this.centers=[],this.controls=[],this.stepLength=t.stepLength||60,this.length=this.points.length,this.delay=0;for(var e=0;e<this.length;e++)this.points[e].z=this.points[e].z||0;for(e=0;e<this.length-1;e++){var n=this.points[e],r=this.points[e+1];this.centers.push({x:(n.x+r.x)/2,y:(n.y+r.y)/2,z:(n.z+r.z)/2})}this.controls.push([this.points[0],this.points[0]]);for(e=0;e<this.centers.length-1;e++){var i=this.points[e+1].x-(this.centers[e].x+this.centers[e+1].x)/2,o=this.points[e+1].y-(this.centers[e].y+this.centers[e+1].y)/2,s=this.points[e+1].z-(this.centers[e].y+this.centers[e+1].z)/2;this.controls.push([{x:(1-this.sharpness)*this.points[e+1].x+this.sharpness*(this.centers[e].x+i),y:(1-this.sharpness)*this.points[e+1].y+this.sharpness*(this.centers[e].y+o),z:(1-this.sharpness)*this.points[e+1].z+this.sharpness*(this.centers[e].z+s)},{x:(1-this.sharpness)*this.points[e+1].x+this.sharpness*(this.centers[e+1].x+i),y:(1-this.sharpness)*this.points[e+1].y+this.sharpness*(this.centers[e+1].y+o),z:(1-this.sharpness)*this.points[e+1].z+this.sharpness*(this.centers[e+1].z+s)}])}return this.controls.push([this.points[this.length-1],this.points[this.length-1]]),this.steps=this.cacheSteps(this.stepLength),this}return t.prototype.cacheSteps=function(t){var e=[],n=this.pos(0);e.push(0);for(var r=0;r<this.duration;r+=10){var i=this.pos(r);Math.sqrt((i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y)+(i.z-n.z)*(i.z-n.z))>t&&(e.push(r),n=i)}return e},t.prototype.vector=function(t){var e=this.pos(t+10),n=this.pos(t-10);return{angle:180*Math.atan2(e.y-n.y,e.x-n.x)/3.14,speed:Math.sqrt((n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y)+(n.z-e.z)*(n.z-e.z))}},t.prototype.pos=function(t){var e=t-this.delay;e<0&&(e=0),e>this.duration&&(e=this.duration-1);var n=e/this.duration;if(n>=1)return this.points[this.length-1];var r=Math.floor((this.points.length-1)*n);return function(t,e,n,r,i){var o=function(t){var e=t*t;return[e*t,3*e*(1-t),3*t*(1-t)*(1-t),(1-t)*(1-t)*(1-t)]}(t);return{x:i.x*o[0]+r.x*o[1]+n.x*o[2]+e.x*o[3],y:i.y*o[0]+r.y*o[1]+n.y*o[2]+e.y*o[3],z:i.z*o[0]+r.z*o[1]+n.z*o[2]+e.z*o[3]}}((this.length-1)*n-r,this.points[r],this.controls[r][1],this.controls[r+1][0],this.points[r+1])},t}();function fn(t,e){void 0===e&&(e={});for(var n=e.resolution||1e4,r=e.sharpness||.85,i=[],o=rt(t).coordinates.map((function(t){return{x:t[0],y:t[1]}})),s=new pn({duration:n,points:o,sharpness:r}),a=function(t){var e=s.pos(t);Math.floor(t/100)%2==0&&i.push([e.x,e.y])},u=0;u<s.duration;u+=10)a(u);return a(s.duration),h(i,e.properties)}function gn(t,e){void 0===e&&(e={});var n=Number(t[0]),r=Number(t[1]),i=Number(t[2]),o=Number(t[3]);if(6===t.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var s=[n,r];return l([[s,[i,r],[i,o],[n,o],s]],e.properties,{bbox:t,id:e.id})}function dn(t){return gn(Z(t))}function yn(t){var e=t[0],n=t[1],r=t[2],i=t[3];if(me(t.slice(0,2),[r,n])>=me(t.slice(0,2),[e,i])){var o=(n+i)/2;return[e,o-(r-e)/2,r,o+(r-e)/2]}var s=(e+r)/2;return[s-(i-n)/2,n,s+(i-n)/2,i]}function vn(t,e,n,r){void 0===r&&(r={});var i=K(t),o=I(i[0]),s=I(i[1]),u=I(n),l=x(e,r.units),c=Math.asin(Math.sin(s)*Math.cos(l)+Math.cos(s)*Math.sin(l)*Math.cos(u));return a([w(o+Math.atan2(Math.sin(u)*Math.sin(l)*Math.cos(s),Math.cos(l)-Math.sin(s)*Math.sin(c))),w(c)],r.properties)}function _n(t,e,n){void 0===n&&(n={});for(var r=n.steps||64,i=n.properties?n.properties:!Array.isArray(t)&&"Feature"===t.type&&t.properties?t.properties:{},o=[],s=0;s<r;s++)o.push(vn(t,e,-360*s/r,n).geometry.coordinates);return o.push(o[0]),l([o],i)}function mn(t,e,n){if(void 0===n&&(n={}),!0===n.final)return function(t,e){var n=mn(e,t);return n=(n+180)%360}(t,e);var r=K(t),i=K(e),o=I(r[0]),s=I(i[0]),a=I(r[1]),u=I(i[1]),l=Math.sin(s-o)*Math.cos(u),c=Math.cos(a)*Math.sin(u)-Math.sin(a)*Math.cos(u)*Math.cos(s-o);return w(Math.atan2(l,c))}function xn(t,e){void 0===e&&(e={});var n=Z(t);return a([(n[0]+n[2])/2,(n[1]+n[3])/2],e.properties,e)}function En(t,e){void 0===e&&(e={});var n=0,r=0,i=0;return R(t,(function(t){n+=t[0],r+=t[1],i++}),!0),a([n/i,r/i],e.properties)}function bn(t){var e=[];return"FeatureCollection"===t.type?F(t,(function(t){R(t,(function(n){e.push(a(n,t.properties))}))})):R(t,(function(n){e.push(a(n,t.properties))})),f(e)}var wn=Nn,In=Nn;function Nn(t,e,n){n=n||2;var r,i,o,s,a,u,l,c=e&&e.length,h=c?e[0]*n:t.length,p=Sn(t,0,h,n,!0),f=[];if(!p)return f;if(c&&(p=function(t,e,n,r){var i,o,s,a=[];for(i=0,o=e.length;i<o;i++)(s=Sn(t,e[i]*r,i<o-1?e[i+1]*r:t.length,r,!1))===s.next&&(s.steiner=!0),a.push(Fn(s));for(a.sort(Tn),i=0;i<a.length;i++)An(a[i],n),n=Cn(n,n.next);return n}(t,e,p,n)),t.length>80*n){r=o=t[0],i=s=t[1];for(var g=n;g<h;g+=n)(a=t[g])<r&&(r=a),(u=t[g+1])<i&&(i=u),a>o&&(o=a),u>s&&(s=u);l=0!==(l=Math.max(o-r,s-i))?1/l:0}return Pn(p,f,n,r,i,l),f}function Sn(t,e,n,r,i){var o,s;if(i===Hn(t,e,n,r)>0)for(o=e;o<n;o+=r)s=Vn(o,t[o],t[o+1],s);else for(o=n-r;o>=e;o-=r)s=Vn(o,t[o],t[o+1],s);return s&&Bn(s,s.next)&&(Xn(s),s=s.next),s}function Cn(t,e){if(!t)return t;e||(e=t);var n,r=t;do{if(n=!1,r.steiner||!Bn(r,r.next)&&0!==qn(r.prev,r,r.next))r=r.next;else{if(Xn(r),(r=e=r.prev)===r.next)break;n=!0}}while(n||r!==e);return e}function Pn(t,e,n,r,i,o,s){if(t){!s&&o&&function(t,e,n,r){var i=t;do{null===i.z&&(i.z=Dn(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){var e,n,r,i,o,s,a,u,l=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,r=n,a=0,e=0;e<l&&(a++,r=r.nextZ);e++);for(u=l;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,u--),o?o.nextZ=i:t=i,i.prevZ=o,o=i;n=r}o.nextZ=null,l*=2}while(s>1)}(i)}(t,r,i,o);for(var a,u,l=t;t.prev!==t.next;)if(a=t.prev,u=t.next,o?Ln(t,r,i,o):Mn(t))e.push(a.i/n),e.push(t.i/n),e.push(u.i/n),Xn(t),t=u.next,l=u.next;else if((t=u)===l){s?1===s?Pn(t=On(t,e,n),e,n,r,i,o,2):2===s&&Rn(t,e,n,r,i,o):Pn(Cn(t),e,n,r,i,o,1);break}}}function Mn(t){var e=t.prev,n=t,r=t.next;if(qn(e,n,r)>=0)return!1;for(var i=t.next.next;i!==t.prev;){if(kn(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&qn(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Ln(t,e,n,r){var i=t.prev,o=t,s=t.next;if(qn(i,o,s)>=0)return!1;for(var a=i.x<o.x?i.x<s.x?i.x:s.x:o.x<s.x?o.x:s.x,u=i.y<o.y?i.y<s.y?i.y:s.y:o.y<s.y?o.y:s.y,l=i.x>o.x?i.x>s.x?i.x:s.x:o.x>s.x?o.x:s.x,c=i.y>o.y?i.y>s.y?i.y:s.y:o.y>s.y?o.y:s.y,h=Dn(a,u,e,n,r),p=Dn(l,c,e,n,r),f=t.prevZ,g=t.nextZ;f&&f.z>=h&&g&&g.z<=p;){if(f!==t.prev&&f!==t.next&&kn(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&qn(f.prev,f,f.next)>=0)return!1;if(f=f.prevZ,g!==t.prev&&g!==t.next&&kn(i.x,i.y,o.x,o.y,s.x,s.y,g.x,g.y)&&qn(g.prev,g,g.next)>=0)return!1;g=g.nextZ}for(;f&&f.z>=h;){if(f!==t.prev&&f!==t.next&&kn(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&qn(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;g&&g.z<=p;){if(g!==t.prev&&g!==t.next&&kn(i.x,i.y,o.x,o.y,s.x,s.y,g.x,g.y)&&qn(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function On(t,e,n){var r=t;do{var i=r.prev,o=r.next.next;!Bn(i,o)&&zn(i,r,r.next,o)&&jn(i,o)&&jn(o,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(o.i/n),Xn(r),Xn(r.next),r=t=o),r=r.next}while(r!==t);return r}function Rn(t,e,n,r,i,o){var s=t;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&Gn(s,a)){var u=Un(s,a);return s=Cn(s,s.next),u=Cn(u,u.next),Pn(s,e,n,r,i,o),void Pn(u,e,n,r,i,o)}a=a.next}s=s.next}while(s!==t)}function Tn(t,e){return t.x-e.x}function An(t,e){if(e=function(t,e){var n,r=e,i=t.x,o=t.y,s=-1/0;do{if(o<=r.y&&o>=r.next.y&&r.next.y!==r.y){var a=r.x+(o-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=i&&a>s){if(s=a,a===i){if(o===r.y)return r;if(o===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==e);if(!n)return null;if(i===s)return n.prev;var u,l=n,c=n.x,h=n.y,p=1/0;r=n.next;for(;r!==l;)i>=r.x&&r.x>=c&&i!==r.x&&kn(o<h?i:s,o,c,h,o<h?s:i,o,r.x,r.y)&&((u=Math.abs(o-r.y)/(i-r.x))<p||u===p&&r.x>n.x)&&jn(r,t)&&(n=r,p=u),r=r.next;return n}(t,e)){var n=Un(e,t);Cn(n,n.next)}}function Dn(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Fn(t){var e=t,n=t;do{e.x<n.x&&(n=e),e=e.next}while(e!==t);return n}function kn(t,e,n,r,i,o,s,a){return(i-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(r-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(i-s)*(r-a)>=0}function Gn(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&zn(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&jn(t,e)&&jn(e,t)&&function(t,e){var n=t,r=!1,i=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)}function qn(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Bn(t,e){return t.x===e.x&&t.y===e.y}function zn(t,e,n,r){return!!(Bn(t,e)&&Bn(n,r)||Bn(t,r)&&Bn(n,e))||qn(t,e,n)>0!=qn(t,e,r)>0&&qn(n,r,t)>0!=qn(n,r,e)>0}function jn(t,e){return qn(t.prev,t,t.next)<0?qn(t,e,t.next)>=0&&qn(t,t.prev,e)>=0:qn(t,e,t.prev)<0||qn(t,t.next,e)<0}function Un(t,e){var n=new Yn(t.i,t.x,t.y),r=new Yn(e.i,e.x,e.y),i=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function Vn(t,e,n,r){var i=new Yn(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Xn(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Yn(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Hn(t,e,n,r){for(var i=0,o=e,s=n-r;o<n;o+=r)i+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return i}function Wn(t){var e=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n}(t),n=wn(e.vertices,e.holes,2),r=[],i=[];n.forEach((function(t,r){var o=n[r];i.push([e.vertices[2*o],e.vertices[2*o+1]])}));for(var o=0;o<i.length;o+=3){var s=i.slice(o,o+3);s.push(i[o]),r.push(l([s]))}return r}function Jn(t,e){if(!t)throw new Error("targetPoint is required");if(!e)throw new Error("points is required");var n,r=1/0,i=0;return F(e,(function(e,n){var o=me(t,e);o<r&&(i=n,r=o)})),(n=Ie(e.features[i])).properties.featureIndex=i,n.properties.distanceToPoint=r,n}function Zn(t){if(!t)throw new Error("geojson is required");var e=[];return z(t,(function(t){!function(t,e){var n=[],r=t.geometry;if(null!==r){switch(r.type){case"Polygon":n=Q(r);break;case"LineString":n=[Q(r)]}n.forEach((function(n){(function(t,e){var n=[];return t.reduce((function(t,r){var i=h([t,r],e);return i.bbox=function(t,e){var n=t[0],r=t[1],i=e[0],o=e[1];return[n<i?n:i,r<o?r:o,n>i?n:i,r>o?r:o]}(t,r),n.push(i),r})),n})(n,t.properties).forEach((function(t){t.id=e.length,e.push(t)}))}))}}(t,e)})),f(e)}Nn.deviation=function(t,e,n,r){var i=e&&e.length,o=i?e[0]*n:t.length,s=Math.abs(Hn(t,0,o,n));if(i)for(var a=0,u=e.length;a<u;a++){var l=e[a]*n,c=a<u-1?e[a+1]*n:t.length;s-=Math.abs(Hn(t,l,c,n))}var h=0;for(a=0;a<r.length;a+=3){var p=r[a]*n,f=r[a+1]*n,g=r[a+2]*n;h+=Math.abs((t[p]-t[g])*(t[f+1]-t[p+1])-(t[p]-t[f])*(t[g+1]-t[p+1]))}return 0===s&&0===h?0:Math.abs((h-s)/s)},Nn.flatten=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n},wn.default=In;var Kn=Bt((function(t,e){function n(t,e,n){void 0===n&&(n={});var r={type:"Feature"};return(0===n.id||n.id)&&(r.id=n.id),n.bbox&&(r.bbox=n.bbox),r.properties=e||{},r.geometry=t,r}function r(t,e,r){if(void 0===r&&(r={}),!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!f(t[0])||!f(t[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:t},e,r)}function i(t,e,r){void 0===r&&(r={});for(var i=0,o=t;i<o.length;i++){var s=o[i];if(s.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<s[s.length-1].length;a++)if(s[s.length-1][a]!==s[0][a])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:t},e,r)}function o(t,e,r){if(void 0===r&&(r={}),t.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:t},e,r)}function s(t,e){void 0===e&&(e={});var n={type:"FeatureCollection"};return e.id&&(n.id=e.id),e.bbox&&(n.bbox=e.bbox),n.features=t,n}function a(t,e,r){return void 0===r&&(r={}),n({type:"MultiLineString",coordinates:t},e,r)}function u(t,e,r){return void 0===r&&(r={}),n({type:"MultiPoint",coordinates:t},e,r)}function l(t,e,r){return void 0===r&&(r={}),n({type:"MultiPolygon",coordinates:t},e,r)}function c(t,n){void 0===n&&(n="kilometers");var r=e.factors[n];if(!r)throw new Error(n+" units is invalid");return t*r}function h(t,n){void 0===n&&(n="kilometers");var r=e.factors[n];if(!r)throw new Error(n+" units is invalid");return t/r}function p(t){return 180*(t%(2*Math.PI))/Math.PI}function f(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.earthRadius=6371008.8,e.factors={centimeters:100*e.earthRadius,centimetres:100*e.earthRadius,degrees:e.earthRadius/111325,feet:3.28084*e.earthRadius,inches:39.37*e.earthRadius,kilometers:e.earthRadius/1e3,kilometres:e.earthRadius/1e3,meters:e.earthRadius,metres:e.earthRadius,miles:e.earthRadius/1609.344,millimeters:1e3*e.earthRadius,millimetres:1e3*e.earthRadius,nauticalmiles:e.earthRadius/1852,radians:1,yards:1.0936*e.earthRadius},e.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e.earthRadius,yards:1.0936133},e.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},e.feature=n,e.geometry=function(t,e,n){switch(t){case"Point":return r(e).geometry;case"LineString":return o(e).geometry;case"Polygon":return i(e).geometry;case"MultiPoint":return u(e).geometry;case"MultiLineString":return a(e).geometry;case"MultiPolygon":return l(e).geometry;default:throw new Error(t+" is invalid")}},e.point=r,e.points=function(t,e,n){return void 0===n&&(n={}),s(t.map((function(t){return r(t,e)})),n)},e.polygon=i,e.polygons=function(t,e,n){return void 0===n&&(n={}),s(t.map((function(t){return i(t,e)})),n)},e.lineString=o,e.lineStrings=function(t,e,n){return void 0===n&&(n={}),s(t.map((function(t){return o(t,e)})),n)},e.featureCollection=s,e.multiLineString=a,e.multiPoint=u,e.multiPolygon=l,e.geometryCollection=function(t,e,r){return void 0===r&&(r={}),n({type:"GeometryCollection",geometries:t},e,r)},e.round=function(t,e){if(void 0===e&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var n=Math.pow(10,e||0);return Math.round(t*n)/n},e.radiansToLength=c,e.lengthToRadians=h,e.lengthToDegrees=function(t,e){return p(h(t,e))},e.bearingToAzimuth=function(t){var e=t%360;return e<0&&(e+=360),e},e.radiansToDegrees=p,e.degreesToRadians=function(t){return t%360*Math.PI/180},e.convertLength=function(t,e,n){if(void 0===e&&(e="kilometers"),void 0===n&&(n="kilometers"),!(t>=0))throw new Error("length must be a positive number");return c(h(t,e),n)},e.convertArea=function(t,n,r){if(void 0===n&&(n="meters"),void 0===r&&(r="kilometers"),!(t>=0))throw new Error("area must be a positive number");var i=e.areaFactors[n];if(!i)throw new Error("invalid original units");var o=e.areaFactors[r];if(!o)throw new Error("invalid final units");return t/i*o},e.isNumber=f,e.isObject=function(t){return!!t&&t.constructor===Object},e.validateBBox=function(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!f(t))throw new Error("bbox must only contain numbers")}))},e.validateId=function(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}}));function Qn(t,e,n){if(null!==t)for(var r,i,o,s,a,u,l,c,h=0,p=0,f=t.type,g="FeatureCollection"===f,d="Feature"===f,y=g?t.features.length:1,v=0;v<y;v++){a=(c=!!(l=g?t.features[v].geometry:d?t.geometry:t)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var _=0;_<a;_++){var m=0,x=0;if(null!==(s=c?l.geometries[_]:l)){u=s.coordinates;var E=s.type;switch(h=!n||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===e(u,p,v,m,x))return!1;p++,m++;break;case"LineString":case"MultiPoint":for(r=0;r<u.length;r++){if(!1===e(u[r],p,v,m,x))return!1;p++,"MultiPoint"===E&&m++}"LineString"===E&&m++;break;case"Polygon":case"MultiLineString":for(r=0;r<u.length;r++){for(i=0;i<u[r].length-h;i++){if(!1===e(u[r][i],p,v,m,x))return!1;p++}"MultiLineString"===E&&m++,"Polygon"===E&&x++}"Polygon"===E&&m++;break;case"MultiPolygon":for(r=0;r<u.length;r++){for(x=0,i=0;i<u[r].length;i++){for(o=0;o<u[r][i].length-h;o++){if(!1===e(u[r][i][o],p,v,m,x))return!1;p++}x++}m++}break;case"GeometryCollection":for(r=0;r<s.geometries.length;r++)if(!1===Qn(s.geometries[r],e,n))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function $n(t,e){var n;switch(t.type){case"FeatureCollection":for(n=0;n<t.features.length&&!1!==e(t.features[n].properties,n);n++);break;case"Feature":e(t.properties,0)}}function tr(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var n=0;n<t.features.length&&!1!==e(t.features[n],n);n++);}function er(t,e){var n,r,i,o,s,a,u,l,c,h,p=0,f="FeatureCollection"===t.type,g="Feature"===t.type,d=f?t.features.length:1;for(n=0;n<d;n++){for(a=f?t.features[n].geometry:g?t.geometry:t,l=f?t.features[n].properties:g?t.properties:{},c=f?t.features[n].bbox:g?t.bbox:void 0,h=f?t.features[n].id:g?t.id:void 0,s=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,i=0;i<s;i++)if(null!==(o=u?a.geometries[i]:a))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(o,p,l,c,h))return!1;break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)if(!1===e(o.geometries[r],p,l,c,h))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,p,l,c,h))return!1;p++}}function nr(t,e){er(t,(function(t,n,r,i,o){var s,a=null===t?null:t.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1!==e(Kn.feature(t,r,{bbox:i,id:o}),n,0)&&void 0}switch(a){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var u=0;u<t.coordinates.length;u++){var l={type:s,coordinates:t.coordinates[u]};if(!1===e(Kn.feature(l,r),n,u))return!1}}))}function rr(t,e){nr(t,(function(t,n,r){var i=0;if(t.geometry){var o=t.geometry.type;if("Point"!==o&&"MultiPoint"!==o){var s,a=0,u=0,l=0;return!1!==Qn(t,(function(o,c,h,p,f){if(void 0===s||n>a||p>u||f>l)return s=o,a=n,u=p,l=f,void(i=0);var g=Kn.lineString([s,o],t.properties);if(!1===e(g,n,r,f,i))return!1;i++,s=o}))&&void 0}}}))}function ir(t,e){if(!t)throw new Error("geojson is required");nr(t,(function(t,n,r){if(null!==t.geometry){var i=t.geometry.type,o=t.geometry.coordinates;switch(i){case"LineString":if(!1===e(t,n,r,0,0))return!1;break;case"Polygon":for(var s=0;s<o.length;s++)if(!1===e(Kn.lineString(o[s],t.properties),n,r,s))return!1}}}))}var or=function(t){var e=[];return Qn(t,(function(t){e.push(t)})),e},sr=Qn,ar=function(t,e,n,r){var i=n;return Qn(t,(function(t,r,o,s,a){i=0===r&&void 0===n?t:e(i,t,r,o,s,a)}),r),i},ur=tr,lr=function(t,e,n){var r=n;return tr(t,(function(t,i){r=0===i&&void 0===n?t:e(r,t,i)})),r},cr=function(t,e){if(e=e||{},!Kn.isObject(e))throw new Error("options is invalid");var n,r=e.featureIndex||0,i=e.multiFeatureIndex||0,o=e.geometryIndex||0,s=e.coordIndex||0,a=e.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),a=a||t.features[r].properties,n=t.features[r].geometry;break;case"Feature":a=a||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var u=n.coordinates;switch(n.type){case"Point":return Kn.point(u,a,e);case"MultiPoint":return i<0&&(i=u.length+i),Kn.point(u[i],a,e);case"LineString":return s<0&&(s=u.length+s),Kn.point(u[s],a,e);case"Polygon":return o<0&&(o=u.length+o),s<0&&(s=u[o].length+s),Kn.point(u[o][s],a,e);case"MultiLineString":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s),Kn.point(u[i][s],a,e);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),s<0&&(s=u[i][o].length-s),Kn.point(u[i][o][s],a,e)}throw new Error("geojson is invalid")},hr=function(t,e){if(e=e||{},!Kn.isObject(e))throw new Error("options is invalid");var n,r=e.featureIndex||0,i=e.multiFeatureIndex||0,o=e.geometryIndex||0,s=e.segmentIndex||0,a=e.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),a=a||t.features[r].properties,n=t.features[r].geometry;break;case"Feature":a=a||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var u=n.coordinates;switch(n.type){case"Point":case"MultiPoint":return null;case"LineString":return s<0&&(s=u.length+s-1),Kn.lineString([u[s],u[s+1]],a,e);case"Polygon":return o<0&&(o=u.length+o),s<0&&(s=u[o].length+s-1),Kn.lineString([u[o][s],u[o][s+1]],a,e);case"MultiLineString":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s-1),Kn.lineString([u[i][s],u[i][s+1]],a,e);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),s<0&&(s=u[i][o].length-s-1),Kn.lineString([u[i][o][s],u[i][o][s+1]],a,e)}throw new Error("geojson is invalid")},pr=nr,fr=function(t,e,n){var r=n;return nr(t,(function(t,i,o){r=0===i&&0===o&&void 0===n?t:e(r,t,i,o)})),r},gr=er,dr=function(t,e,n){var r=n;return er(t,(function(t,i,o,s,a){r=0===i&&void 0===n?t:e(r,t,i,o,s,a)})),r},yr=ir,vr=function(t,e,n){var r=n;return ir(t,(function(t,i,o,s){r=0===i&&void 0===n?t:e(r,t,i,o,s)})),r},_r=$n,mr=function(t,e,n){var r=n;return $n(t,(function(t,i){r=0===i&&void 0===n?t:e(r,t,i)})),r},xr=rr,Er=function(t,e,n){var r=n,i=!1;return rr(t,(function(t,o,s,a,u){r=!1===i&&void 0===n?t:e(r,t,o,s,a,u),i=!0})),r},br=Object.defineProperty({coordAll:or,coordEach:sr,coordReduce:ar,featureEach:ur,featureReduce:lr,findPoint:cr,findSegment:hr,flattenEach:pr,flattenReduce:fr,geomEach:gr,geomReduce:dr,lineEach:yr,lineReduce:vr,propEach:_r,propReduce:mr,segmentEach:xr,segmentReduce:Er},"__esModule",{value:!0});function wr(t){var e=[1/0,1/0,-1/0,-1/0];return br.coordEach(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}wr.default=wr;var Ir=wr,Nr=Object.defineProperty({default:Ir},"__esModule",{value:!0}).default,Sr=br.featureEach,Cr=(br.coordEach,Kn.polygon,Kn.featureCollection);function Pr(t){var e=Nt(t);return e.insert=function(t){if("Feature"!==t.type)throw new Error("invalid feature");return t.bbox=t.bbox?t.bbox:Nr(t),Nt.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach((function(t){if("Feature"!==t.type)throw new Error("invalid features");t.bbox=t.bbox?t.bbox:Nr(t),e.push(t)})):Sr(t,(function(t){if("Feature"!==t.type)throw new Error("invalid features");t.bbox=t.bbox?t.bbox:Nr(t),e.push(t)})),Nt.prototype.load.call(this,e)},e.remove=function(t,e){if("Feature"!==t.type)throw new Error("invalid feature");return t.bbox=t.bbox?t.bbox:Nr(t),Nt.prototype.remove.call(this,t,e)},e.clear=function(){return Nt.prototype.clear.call(this)},e.search=function(t){var e=Nt.prototype.search.call(this,this.toBBox(t));return Cr(e)},e.collides=function(t){return Nt.prototype.collides.call(this,this.toBBox(t))},e.all=function(){var t=Nt.prototype.all.call(this);return Cr(t)},e.toJSON=function(){return Nt.prototype.toJSON.call(this)},e.fromJSON=function(t){return Nt.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;if(t.bbox)e=t.bbox;else if(Array.isArray(t)&&4===t.length)e=t;else if(Array.isArray(t)&&6===t.length)e=[t[0],t[1],t[3],t[4]];else if("Feature"===t.type)e=Nr(t);else{if("FeatureCollection"!==t.type)throw new Error("invalid geojson");e=Nr(t)}return{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}var Mr=Pr,Lr=Pr;function Or(t,e){var n={},r=[];if("LineString"===t.type&&(t=o(t)),"LineString"===e.type&&(e=o(e)),"Feature"===t.type&&"Feature"===e.type&&null!==t.geometry&&null!==e.geometry&&"LineString"===t.geometry.type&&"LineString"===e.geometry.type&&2===t.geometry.coordinates.length&&2===e.geometry.coordinates.length){var i=Rr(t,e);return i&&r.push(i),f(r)}var s=Mr();return s.load(Zn(e)),F(Zn(t),(function(t){F(s.search(t),(function(e){var i=Rr(t,e);if(i){var o=Q(i).join(",");n[o]||(n[o]=!0,r.push(i))}}))})),f(r)}function Rr(t,e){var n=Q(t),r=Q(e);if(2!==n.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==r.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=n[0][0],o=n[0][1],s=n[1][0],u=n[1][1],l=r[0][0],c=r[0][1],h=r[1][0],p=r[1][1],f=(p-c)*(s-i)-(h-l)*(u-o),g=(h-l)*(o-c)-(p-c)*(i-l),d=(s-i)*(o-c)-(u-o)*(i-l);if(0===f)return null;var y=g/f,v=d/f;return y>=0&&y<=1&&v>=0&&v<=1?a([i+y*(s-i),o+y*(u-o)]):null}function Tr(t,e,n){void 0===n&&(n={});var r=a([1/0,1/0],{dist:1/0}),i=0;return z(t,(function(t){for(var o=Q(t),s=0;s<o.length-1;s++){var u=a(o[s]);u.properties.dist=me(e,u,n);var l=a(o[s+1]);l.properties.dist=me(e,l,n);var c=me(u,l,n),p=Math.max(u.properties.dist,l.properties.dist),f=mn(u,l),g=vn(e,p,f+90,n),d=vn(e,p,f-90,n),y=Or(h([g.geometry.coordinates,d.geometry.coordinates]),h([u.geometry.coordinates,l.geometry.coordinates])),v=null;y.features.length>0&&((v=y.features[0]).properties.dist=me(e,v,n),v.properties.location=i+me(u,v,n)),u.properties.dist<r.properties.dist&&((r=u).properties.index=s,r.properties.location=i),l.properties.dist<r.properties.dist&&((r=l).properties.index=s+1,r.properties.location=i+c),v&&v.properties.dist<r.properties.dist&&((r=v).properties.index=s),i+=c}})),r}function Ar(t,n,r){void 0===r&&(r={});var i=K(t),o=K(n);return o[0]+=o[0]-i[0]>180?-360:i[0]-o[0]>180?360:0,N(function(t,n,r){var i=r=void 0===r?e:Number(r),o=t[1]*Math.PI/180,s=n[1]*Math.PI/180,a=s-o,u=Math.abs(n[0]-t[0])*Math.PI/180;u>Math.PI&&(u-=2*Math.PI);var l=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),c=Math.abs(l)>1e-11?a/l:Math.cos(o);return Math.sqrt(a*a+c*c*u*u)*i}(i,o),"meters",r.units)}function Dr(t,e,n){if(void 0===n&&(n={}),n.method||(n.method="geodesic"),n.units||(n.units="kilometers"),!t)throw new Error("pt is required");if(Array.isArray(t)?t=a(t):"Point"===t.type?t=o(t):et(t,"Point","point"),!e)throw new Error("line is required");Array.isArray(e)?e=h(e):"LineString"===e.type?e=o(e):et(e,"LineString","line");var r=1/0,i=t.geometry.coordinates;return U(e,(function(t){var e=t.geometry.coordinates[0],o=t.geometry.coordinates[1],s=function(t,e,n,r){var i=[n[0]-e[0],n[1]-e[1]],o=Fr([t[0]-e[0],t[1]-e[1]],i);if(o<=0)return kr(t,e,{method:r.method,units:"degrees"});var s=Fr(i,i);if(s<=o)return kr(t,n,{method:r.method,units:"degrees"});var a=o/s,u=[e[0]+a*i[0],e[1]+a*i[1]];return kr(t,u,{method:r.method,units:"degrees"})}(i,e,o,n);s<r&&(r=s)})),N(r,"degrees",n.units)}function Fr(t,e){return t[0]*e[0]+t[1]*e[1]}function kr(t,e,n){return"planar"===n.method?Ar(t,e,n):me(t,e,n)}function Gr(t,e,n,r,i,o,s,a){var u,l,c,h,p={x:null,y:null,onLine1:!1,onLine2:!1};return 0===(u=(a-o)*(n-t)-(s-i)*(r-e))?null!==p.x&&null!==p.y&&p:(h=(n-t)*(l=e-o)-(r-e)*(c=t-i),l=((s-i)*l-(a-o)*c)/u,c=h/u,p.x=t+l*(n-t),p.y=e+l*(r-e),l>=0&&l<=1&&(p.onLine1=!0),c>=0&&c<=1&&(p.onLine2=!0),!(!p.onLine1||!p.onLine2)&&[p.x,p.y])}function qr(t){for(var e=function(t){if("FeatureCollection"!==t.type)return"Feature"!==t.type?f([o(t)]):f([t]);return t}(t),n=xn(e),r=!1,i=0;!r&&i<e.features.length;){var s,u=e.features[i].geometry,l=!1;if("Point"===u.type)n.geometry.coordinates[0]===u.coordinates[0]&&n.geometry.coordinates[1]===u.coordinates[1]&&(r=!0);else if("MultiPoint"===u.type){var c=!1;for(s=0;!c&&s<u.coordinates.length;)n.geometry.coordinates[0]===u.coordinates[s][0]&&n.geometry.coordinates[1]===u.coordinates[s][1]&&(r=!0,c=!0),s++}else if("LineString"===u.type)for(s=0;!l&&s<u.coordinates.length-1;)Br(n.geometry.coordinates[0],n.geometry.coordinates[1],u.coordinates[s][0],u.coordinates[s][1],u.coordinates[s+1][0],u.coordinates[s+1][1])&&(l=!0,r=!0),s++;else if("MultiLineString"===u.type)for(var h=0;h<u.coordinates.length;){l=!1,s=0;for(var p=u.coordinates[h];!l&&s<p.length-1;)Br(n.geometry.coordinates[0],n.geometry.coordinates[1],p[s][0],p[s][1],p[s+1][0],p[s+1][1])&&(l=!0,r=!0),s++;h++}else"Polygon"!==u.type&&"MultiPolygon"!==u.type||ye(n,u)&&(r=!0);i++}if(r)return n;var g=f([]);for(i=0;i<e.features.length;i++)g.features=g.features.concat(bn(e.features[i]).features);return a(Jn(n,g).geometry.coordinates)}function Br(t,e,n,r,i,o){return Math.sqrt((i-n)*(i-n)+(o-r)*(o-r))===Math.sqrt((t-n)*(t-n)+(e-r)*(e-r))+Math.sqrt((i-t)*(i-t)+(o-e)*(o-e))}Mr.default=Lr;var zr=6378137;function jr(t){return B(t,(function(t,e){return t+function(t){var e,n=0;switch(t.type){case"Polygon":return Ur(t.coordinates);case"MultiPolygon":for(e=0;e<t.coordinates.length;e++)n+=Ur(t.coordinates[e]);return n;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(e)}),0)}function Ur(t){var e=0;if(t&&t.length>0){e+=Math.abs(Vr(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(Vr(t[n]))}return e}function Vr(t){var e,n,r,i,o,s,a=0,u=t.length;if(u>2){for(s=0;s<u;s++)s===u-2?(r=u-2,i=u-1,o=0):s===u-1?(r=u-1,i=0,o=1):(r=s,i=s+1,o=s+2),e=t[r],n=t[i],a+=(Xr(t[o][0])-Xr(e[0]))*Math.sin(Xr(n[1]));a=a*zr*zr/2}return a}function Xr(t){return t*Math.PI/180}function Yr(t,e){return void 0===e&&(e={}),V(t,(function(t,n){var r=n.geometry.coordinates;return t+me(r[0],r[1],e)}),0)}function Hr(t,e,n,r){if(!P(r=r||{}))throw new Error("options is invalid");var i,o=[];if("Feature"===t.type)i=t.geometry.coordinates;else{if("LineString"!==t.type)throw new Error("input must be a LineString Feature or Geometry");i=t.coordinates}for(var s,a,u,l=i.length,c=0,p=0;p<i.length&&!(e>=c&&p===i.length-1);p++){if(c>e&&0===o.length){if(!(s=e-c))return o.push(i[p]),h(o);a=mn(i[p],i[p-1])-180,u=vn(i[p],s,a,r),o.push(u.geometry.coordinates)}if(c>=n)return(s=n-c)?(a=mn(i[p],i[p-1])-180,u=vn(i[p],s,a,r),o.push(u.geometry.coordinates),h(o)):(o.push(i[p]),h(o));if(c>=e&&o.push(i[p]),p===i.length-1)return h(o);c+=me(i[p],i[p+1],r)}if(c<e&&i.length===l)throw new Error("Start position is beyond line");var f=i[i.length-1];return h([f,f])}function Wr(t,e,n){void 0===n&&(n={});for(var r=K(t),i=Q(e),o=0;o<i.length-1;o++){var s=!1;if(n.ignoreEndVertices&&(0===o&&(s="start"),o===i.length-2&&(s="end"),0===o&&o+1===i.length-1&&(s="both")),Jr(i[o],i[o+1],r,s,void 0===n.epsilon?null:n.epsilon))return!0}return!1}function Jr(t,e,n,r,i){var o=n[0],s=n[1],a=t[0],u=t[1],l=e[0],c=e[1],h=l-a,p=c-u,f=(n[0]-a)*p-(n[1]-u)*h;if(null!==i){if(Math.abs(f)>i)return!1}else if(0!==f)return!1;return r?"start"===r?Math.abs(h)>=Math.abs(p)?h>0?a<o&&o<=l:l<=o&&o<a:p>0?u<s&&s<=c:c<=s&&s<u:"end"===r?Math.abs(h)>=Math.abs(p)?h>0?a<=o&&o<l:l<o&&o<=a:p>0?u<=s&&s<c:c<s&&s<=u:"both"===r&&(Math.abs(h)>=Math.abs(p)?h>0?a<o&&o<l:l<o&&o<a:p>0?u<s&&s<c:c<s&&s<u):Math.abs(h)>=Math.abs(p)?h>0?a<=o&&o<=l:l<=o&&o<=a:p>0?u<=s&&s<=c:c<=s&&s<=u}function Zr(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;switch(i){case"Point":switch(o){case"MultiPoint":return function(t,e){var n,r=!1;for(n=0;n<e.coordinates.length;n++)if(Qr(e.coordinates[n],t.coordinates)){r=!0;break}return r}(n,r);case"LineString":return Wr(n,r,{ignoreEndVertices:!0});case"Polygon":case"MultiPolygon":return ye(n,r,{ignoreBoundary:!0});default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPoint":switch(o){case"MultiPoint":return function(t,e){for(var n=0;n<t.coordinates.length;n++){for(var r=!1,i=0;i<e.coordinates.length;i++)Qr(t.coordinates[n],e.coordinates[i])&&(r=!0);if(!r)return!1}return!0}(n,r);case"LineString":return function(t,e){for(var n=!1,r=0;r<t.coordinates.length;r++){if(!Wr(t.coordinates[r],e))return!1;n||(n=Wr(t.coordinates[r],e,{ignoreEndVertices:!0}))}return n}(n,r);case"Polygon":case"MultiPolygon":return function(t,e){for(var n=!0,r=!1,i=0;i<t.coordinates.length;i++){if(!(r=ye(t.coordinates[1],e))){n=!1;break}r=ye(t.coordinates[1],e,{ignoreBoundary:!0})}return n&&r}(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"LineString":return function(t,e){for(var n=0;n<t.coordinates.length;n++)if(!Wr(t.coordinates[n],e))return!1;return!0}(n,r);case"Polygon":case"MultiPolygon":return function(t,e){var n=Z(e),r=Z(t);if(!Kr(n,r))return!1;for(var i=!1,o=0;o<t.coordinates.length-1;o++){if(!ye(t.coordinates[o],e))return!1;if(i||(i=ye(t.coordinates[o],e,{ignoreBoundary:!0})),!i)i=ye($r(t.coordinates[o],t.coordinates[o+1]),e,{ignoreBoundary:!0})}return i}(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"Polygon":case"MultiPolygon":return function(t,e){var n=Z(t);if(!Kr(Z(e),n))return!1;for(var r=0;r<t.coordinates[0].length;r++)if(!ye(t.coordinates[0][r],e))return!1;return!0}(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+i+" geometry not supported")}}function Kr(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function Qr(t,e){return t[0]===e[0]&&t[1]===e[1]}function $r(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}function ti(t,e,n){void 0===n&&(n={}),n.mask&&!n.units&&(n.units="kilometers");for(var r=[],i=t[0],o=t[1],s=t[2],u=t[3],l=e/me([i,o],[s,o],n)*(s-i),c=e/me([i,o],[i,u],n)*(u-o),h=s-i,p=u-o,g=Math.floor(h/l),d=(p-Math.floor(p/c)*c)/2,y=i+(h-g*l)/2;y<=s;){for(var v=o+d;v<=u;){var _=a([y,v],n.properties);n.mask?Zr(_,n.mask)&&r.push(_):r.push(_),v+=c}y+=l}return f(r)}function ei(t,e){void 0===e&&(e={});var n=e.precision,r=e.coordinates,i=e.mutate;if(n=null==n||isNaN(n)?6:n,r=null==r||isNaN(r)?3:r,!t)throw new Error("<geojson> is required");if("number"!=typeof n)throw new Error("<precision> must be a number");if("number"!=typeof r)throw new Error("<coordinates> must be a number");!1!==i&&void 0!==i||(t=JSON.parse(JSON.stringify(t)));var o=Math.pow(10,n);return R(t,(function(t){!function(t,e,n){t.length>n&&t.splice(n,t.length);for(var r=0;r<t.length;r++)t[r]=Math.round(t[r]*e)/e}(t,o,r)})),t}function ni(t){if(!t)throw new Error("geojson is required");var e=[];return z(t,(function(t){e.push(t)})),f(e)}function ri(t,e,n){if("Polygon"!==t.geometry.type)throw new Error("The input feature must be a Polygon");void 0===n&&(n=1);var r=t.geometry.coordinates,i=[],o={};if(n){for(var s=[],a=0;a<r.length;a++)for(var u=0;u<r[a].length-1;u++)s.push(d(a,u));var l=Nt();l.load(s)}for(var c=0;c<r.length;c++)for(var h=0;h<r[c].length-1;h++){if(n)l.search(d(c,h)).forEach((function(t){var e=t.ring,n=t.edge;g(c,h,e,n)}));else for(var p=0;p<r.length;p++)for(var f=0;f<r[p].length-1;f++)g(c,h,p,f)}return e||(i={type:"Feature",geometry:{type:"MultiPoint",coordinates:i}}),i;function g(t,n,s,a){var u,l,c=r[t][n],h=r[t][n+1],p=r[s][a],f=r[s][a+1],g=function(t,e,n,r){if(ii(t,n)||ii(t,r)||ii(e,n)||ii(r,n))return null;var i=t[0],o=t[1],s=e[0],a=e[1],u=n[0],l=n[1],c=r[0],h=r[1],p=(i-s)*(l-h)-(o-a)*(u-c);return 0===p?null:[((i*a-o*s)*(u-c)-(i-s)*(u*h-l*c))/p,((i*a-o*s)*(l-h)-(o-a)*(u*h-l*c))/p]}(c,h,p,f);if(null!==g&&(u=h[0]!==c[0]?(g[0]-c[0])/(h[0]-c[0]):(g[1]-c[1])/(h[1]-c[1]),l=f[0]!==p[0]?(g[0]-p[0])/(f[0]-p[0]):(g[1]-p[1])/(f[1]-p[1]),!(u>=1||u<=0||l>=1||l<=0))){var d=g,y=!o[d];y&&(o[d]=!0),e?i.push(e(g,t,n,c,h,u,s,a,p,f,l,y)):i.push(g)}}function d(t,e){var n,i,o,s,a=r[t][e],u=r[t][e+1];return a[0]<u[0]?(n=a[0],i=u[0]):(n=u[0],i=a[0]),a[1]<u[1]?(o=a[1],s=u[1]):(o=u[1],s=a[1]),{minX:n,minY:o,maxX:i,maxY:s,ring:t,edge:e}}}function ii(t,e){if(!t||!e)return!1;if(t.length!==e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!ii(t[n],e[n]))return!1}else if(t[n]!==e[n])return!1;return!0}function oi(t){if("Feature"!=t.type)throw new Error("The input must a geojson object of type Feature");if(void 0===t.geometry||null==t.geometry)throw new Error("The input must a geojson object with a non-empty geometry");if("Polygon"!=t.geometry.type)throw new Error("The input must be a geojson Polygon");for(var e=t.geometry.coordinates.length,n=[],r=0;r<e;r++){var i=t.geometry.coordinates[r];ci(i[0],i[i.length-1])||i.push(i[0]),n.push.apply(n,i.slice(0,i.length-1))}if(!function(t){for(var e={},n=1,r=0,i=t.length;r<i;++r){if(Object.prototype.hasOwnProperty.call(e,t[r])){n=0;break}e[t[r]]=1}return n}(n))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var o=n.length,s=ri(t,(function(t,e,n,r,i,o,s,a,u,l,c,h){return[t,e,n,r,i,o,s,a,u,l,c,h]})),a=s.length;if(0==a){var u=[];for(r=0;r<e;r++)u.push(l([t.geometry.coordinates[r]],{parent:-1,winding:li(t.geometry.coordinates[r])}));var c=f(u);return G(),q(),c}var h=[],p=[];for(r=0;r<e;r++){h.push([]);for(var g=0;g<t.geometry.coordinates[r].length-1;g++)h[r].push([new si(t.geometry.coordinates[r][hi(g+1,t.geometry.coordinates[r].length-1)],1,[r,g],[r,hi(g+1,t.geometry.coordinates[r].length-1)],void 0)]),p.push(new ai(t.geometry.coordinates[r][g],[r,hi(g-1,t.geometry.coordinates[r].length-1)],[r,g],void 0,void 0,!1,!0))}for(r=0;r<a;r++)h[s[r][1]][s[r][2]].push(new si(s[r][0],s[r][5],[s[r][1],s[r][2]],[s[r][6],s[r][7]],void 0)),s[r][11]&&p.push(new ai(s[r][0],[s[r][1],s[r][2]],[s[r][6],s[r][7]],void 0,void 0,!0,!0));var d=p.length;for(r=0;r<h.length;r++)for(g=0;g<h[r].length;g++)h[r][g].sort((function(t,e){return t.param<e.param?-1:1}));var y=[];for(r=0;r<d;r++)y.push({minX:p[r].coord[0],minY:p[r].coord[1],maxX:p[r].coord[0],maxY:p[r].coord[1],index:r});var v=Nt();v.load(y);for(r=0;r<h.length;r++)for(g=0;g<h[r].length;g++)for(var _=0;_<h[r][g].length;_++){x=_==h[r][g].length-1?h[r][hi(g+1,t.geometry.coordinates[r].length-1)][0].coord:h[r][g][_+1].coord;var m=v.search({minX:x[0],minY:x[1],maxX:x[0],maxY:x[1]})[0];h[r][g][_].nxtIsectAlongEdgeIn=m.index}for(r=0;r<h.length;r++)for(g=0;g<h[r].length;g++)for(_=0;_<h[r][g].length;_++){var x=h[r][g][_].coord,E=(m=v.search({minX:x[0],minY:x[1],maxX:x[0],maxY:x[1]})[0]).index;E<o?p[E].nxtIsectAlongRingAndEdge2=h[r][g][_].nxtIsectAlongEdgeIn:ci(p[E].ringAndEdge1,h[r][g][_].ringAndEdgeIn)?p[E].nxtIsectAlongRingAndEdge1=h[r][g][_].nxtIsectAlongEdgeIn:p[E].nxtIsectAlongRingAndEdge2=h[r][g][_].nxtIsectAlongEdgeIn}var b=[];for(r=0,g=0;g<e;g++){var w=r;for(_=0;_<t.geometry.coordinates[g].length-1;_++)p[r].coord[0]<p[w].coord[0]&&(w=r),r++;var I=p[w].nxtIsectAlongRingAndEdge2;for(_=0;_<p.length;_++)if(p[_].nxtIsectAlongRingAndEdge1==w||p[_].nxtIsectAlongRingAndEdge2==w){var N=_;break}var S=ui([p[N].coord,p[w].coord,p[I].coord],!0)?1:-1;b.push({isect:w,parent:-1,winding:S})}b.sort((function(t,e){return p[t.isect].coord>p[e.isect].coord?-1:1}));for(u=[];b.length>0;){var C=b.pop(),P=C.isect,M=C.parent,L=C.winding,O=u.length,R=[p[P].coord],T=P;if(p[P].ringAndEdge1Walkable)var A=p[P].ringAndEdge1,D=p[P].nxtIsectAlongRingAndEdge1;else A=p[P].ringAndEdge2,D=p[P].nxtIsectAlongRingAndEdge2;for(;!ci(p[P].coord,p[D].coord);){R.push(p[D].coord);var F=void 0;for(r=0;r<b.length;r++)if(b[r].isect==D){F=r;break}if(null!=F&&b.splice(F,1),ci(A,p[D].ringAndEdge1)){if(A=p[D].ringAndEdge2,p[D].ringAndEdge2Walkable=!1,p[D].ringAndEdge1Walkable){var k={isect:D};ui([p[T].coord,p[D].coord,p[p[D].nxtIsectAlongRingAndEdge2].coord],1==L)?(k.parent=M,k.winding=-L):(k.parent=O,k.winding=L),b.push(k)}T=D,D=p[D].nxtIsectAlongRingAndEdge2}else{if(A=p[D].ringAndEdge1,p[D].ringAndEdge1Walkable=!1,p[D].ringAndEdge2Walkable){k={isect:D};ui([p[T].coord,p[D].coord,p[p[D].nxtIsectAlongRingAndEdge1].coord],1==L)?(k.parent=M,k.winding=-L):(k.parent=O,k.winding=L),b.push(k)}T=D,D=p[D].nxtIsectAlongRingAndEdge1}}R.push(p[D].coord),u.push(l([R],{index:O,parent:M,winding:L,netWinding:void 0}))}c=f(u);function G(){for(var t=[],e=0;e<c.features.length;e++)-1==c.features[e].properties.parent&&t.push(e);if(t.length>1)for(e=0;e<t.length;e++){for(var n=-1,r=0;r<c.features.length;r++)t[e]!=r&&ye(c.features[t[e]].geometry.coordinates[0][0],c.features[r],{ignoreBoundary:!0})&&jr(c.features[r])<Infinity&&(n=r);c.features[t[e]].properties.parent=n}}function q(){for(var t=0;t<c.features.length;t++)if(-1==c.features[t].properties.parent){var e=c.features[t].properties.winding;c.features[t].properties.netWinding=e,B(t,e)}}function B(t,e){for(var n=0;n<c.features.length;n++)if(c.features[n].properties.parent==t){var r=e+c.features[n].properties.winding;c.features[n].properties.netWinding=r,B(n,r)}}return G(),q(),c}var si=function(t,e,n,r,i){this.coord=t,this.param=e,this.ringAndEdgeIn=n,this.ringAndEdgeOut=r,this.nxtIsectAlongEdgeIn=i},ai=function(t,e,n,r,i,o,s){this.coord=t,this.ringAndEdge1=e,this.ringAndEdge2=n,this.nxtIsectAlongRingAndEdge1=r,this.nxtIsectAlongRingAndEdge2=i,this.ringAndEdge1Walkable=o,this.ringAndEdge2Walkable=s};function ui(t,e){if(void 0===e&&(e=!0),3!=t.length)throw new Error("This function requires an array of three points [x,y]");return(t[1][0]-t[0][0])*(t[2][1]-t[0][1])-(t[1][1]-t[0][1])*(t[2][0]-t[0][0])>=0==e}function li(t){for(var e=0,n=0;n<t.length-1;n++)t[n][0]<t[e][0]&&(e=n);if(ui([t[hi(e-1,t.length-1)],t[e],t[hi(e+1,t.length-1)]],!0))var r=1;else r=-1;return r}function ci(t,e){if(!t||!e)return!1;if(t.length!=e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!ci(t[n],e[n]))return!1}else if(t[n]!=e[n])return!1;return!0}function hi(t,e){return(t%e+e)%e}var pi=Math.PI/180,fi=180/Math.PI,gi=function(t,e){this.lon=t,this.lat=e,this.x=pi*t,this.y=pi*e};gi.prototype.view=function(){return String(this.lon).slice(0,4)+","+String(this.lat).slice(0,4)},gi.prototype.antipode=function(){var t=-1*this.lat,e=this.lon<0?180+this.lon:-1*(180-this.lon);return new gi(e,t)};var di=function(){this.coords=[],this.length=0};di.prototype.move_to=function(t){this.length++,this.coords.push(t)};var yi=function(t){this.properties=t||{},this.geometries=[]};yi.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:"LineString",coordinates:null},type:"Feature",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:"LineString",coordinates:this.geometries[0].coords},type:"Feature",properties:this.properties};for(var t=[],e=0;e<this.geometries.length;e++)t.push(this.geometries[e].coords);return{geometry:{type:"MultiLineString",coordinates:t},type:"Feature",properties:this.properties}},yi.prototype.wkt=function(){for(var t="",e="LINESTRING(",n=function(t){e+=t[0]+" "+t[1]+","},r=0;r<this.geometries.length;r++){if(0===this.geometries[r].coords.length)return"LINESTRING(empty)";this.geometries[r].coords.forEach(n),t+=e.substring(0,e.length-1)+")"}return t};var vi=function(t,e,n){if(!t||void 0===t.x||void 0===t.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");if(!e||void 0===e.x||void 0===e.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");this.start=new gi(t.x,t.y),this.end=new gi(e.x,e.y),this.properties=n||{};var r=this.start.x-this.end.x,i=this.start.y-this.end.y,o=Math.pow(Math.sin(i/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(r/2),2);if(this.g=2*Math.asin(Math.sqrt(o)),this.g===Math.PI)throw new Error("it appears "+t.view()+" and "+e.view()+" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite");if(isNaN(this.g))throw new Error("could not calculate great circle between "+t+" and "+e)};function _i(t,e){var n=[],r=Mr();return z(e,(function(e){if(n.forEach((function(t,e){t.id=e})),n.length){var i=r.search(e);if(i.features.length){var o=xi(e,i);n=n.filter((function(t){return t.id!==o.id})),r.remove(o),F(mi(o,e),(function(t){n.push(t),r.insert(t)}))}}else(n=mi(t,e).features).forEach((function(t){t.bbox||(t.bbox=yn(Z(t)))})),r.load(f(n))})),f(n)}function mi(t,e){var n=[],r=Q(t)[0],i=Q(t)[t.geometry.coordinates.length-1];if(Ei(r,K(e))||Ei(i,K(e)))return f([t]);var o=Mr(),s=Zn(t);o.load(s);var a=o.search(e);if(!a.features.length)return f([t]);var u=xi(e,a),l=k(s,(function(t,r,i){var o=Q(r)[1],s=K(e);return i===u.id?(t.push(s),n.push(h(t)),Ei(s,o)?[s]:[s,o]):(t.push(o),t)}),[r]);return l.length>1&&n.push(h(l)),f(n)}function xi(t,e){if(!e.features.length)throw new Error("lines must contain features");if(1===e.features.length)return e.features[0];var n,r=1/0;return F(e,(function(e){var i=Tr(e,t).properties.dist;i<r&&(n=e,r=i)})),n}function Ei(t,e){return t[0]===e[0]&&t[1]===e[1]}function bi(t,e,n,r,i){void 0===i&&(i={});var o=i.steps||64,s=wi(n),a=wi(r),u=Array.isArray(t)||"Feature"!==t.type?{}:t.properties;if(s===a)return h(_n(t,e,i).geometry.coordinates[0],u);for(var l=s,c=s<a?a:a+360,p=l,f=[],g=0;p<c;)f.push(vn(t,e,p,i).geometry.coordinates),p=l+360*++g/o;return p>c&&f.push(vn(t,e,c,i).geometry.coordinates),h(f,u)}function wi(t){var e=t%360;return e<0&&(e+=360),e}function Ii(t,e){void 0===e&&(e={});var n=rt(t);switch(e.properties||"Feature"!==t.type||(e.properties=t.properties),n.type){case"Polygon":return Ni(n,e);case"MultiPolygon":return function(t,e){void 0===e&&(e={});var n=rt(t).coordinates,r=e.properties?e.properties:"Feature"===t.type?t.properties:{},i=[];return n.forEach((function(t){i.push(Si(t,r))})),f(i)}(n,e);default:throw new Error("invalid poly")}}function Ni(t,e){return void 0===e&&(e={}),Si(rt(t).coordinates,e.properties?e.properties:"Feature"===t.type?t.properties:{})}function Si(t,e){return t.length>1?g(t,e):h(t[0],e)}function Ci(t,e){var n,r,i;void 0===e&&(e={});var o=e.properties,s=null===(n=e.autoComplete)||void 0===n||n,a=null===(r=e.orderCoords)||void 0===r||r;switch(null!==(i=e.mutate)&&void 0!==i&&i||(t=Ie(t)),t.type){case"FeatureCollection":var u=[];return t.features.forEach((function(t){u.push(Q(Pi(t,{},s,a)))})),y(u,o);default:return Pi(t,o,s,a)}}function Pi(t,e,n,r){e=e||("Feature"===t.type?t.properties:{});var i=rt(t),o=i.coordinates,s=i.type;if(!o.length)throw new Error("line must contain coordinates");switch(s){case"LineString":return n&&(o=Mi(o)),l([o],e);case"MultiLineString":var a=[],u=0;return o.forEach((function(t){if(n&&(t=Mi(t)),r){var e=function(t){var e=t[0],n=t[1],r=t[2],i=t[3];return Math.abs(e-r)*Math.abs(n-i)}(Z(h(t)));e>u?(a.unshift(t),u=e):a.push(t)}else a.push(t)})),l(a,e);default:throw new Error("geometry type "+s+" is not supported")}}function Mi(t){var e=t[0],n=e[0],r=e[1],i=t[t.length-1],o=i[0],s=i[1];return n===o&&r===s||t.push(e),t}function Li(t,e){var n,r,i,o,s,a,u;for(r=1;r<=8;r*=2){for(n=[],o=!(Ri(i=t[t.length-1],e)&r),s=0;s<t.length;s++)(u=!(Ri(a=t[s],e)&r))!==o&&n.push(Oi(i,a,r,e)),u&&n.push(a),i=a,o=u;if(!(t=n).length)break}return n}function Oi(t,e,n,r){return 8&n?[t[0]+(e[0]-t[0])*(r[3]-t[1])/(e[1]-t[1]),r[3]]:4&n?[t[0]+(e[0]-t[0])*(r[1]-t[1])/(e[1]-t[1]),r[1]]:2&n?[r[2],t[1]+(e[1]-t[1])*(r[2]-t[0])/(e[0]-t[0])]:1&n?[r[0],t[1]+(e[1]-t[1])*(r[0]-t[0])/(e[0]-t[0])]:null}function Ri(t,e){var n=0;return t[0]<e[0]?n|=1:t[0]>e[2]&&(n|=2),t[1]<e[1]?n|=4:t[1]>e[3]&&(n|=8),n}function Ti(t,e){for(var n=[],r=0,i=t;r<i.length;r++){var o=Li(i[r],e);o.length>0&&(o[0][0]===o[o.length-1][0]&&o[0][1]===o[o.length-1][1]||o.push(o[0]),o.length>=4&&n.push(o))}return n}vi.prototype.interpolate=function(t){var e=Math.sin((1-t)*this.g)/Math.sin(this.g),n=Math.sin(t*this.g)/Math.sin(this.g),r=e*Math.cos(this.start.y)*Math.cos(this.start.x)+n*Math.cos(this.end.y)*Math.cos(this.end.x),i=e*Math.cos(this.start.y)*Math.sin(this.start.x)+n*Math.cos(this.end.y)*Math.sin(this.end.x),o=e*Math.sin(this.start.y)+n*Math.sin(this.end.y),s=fi*Math.atan2(o,Math.sqrt(Math.pow(r,2)+Math.pow(i,2)));return[fi*Math.atan2(i,r),s]},vi.prototype.Arc=function(t,e){var n=[];if(!t||t<=2)n.push([this.start.lon,this.start.lat]),n.push([this.end.lon,this.end.lat]);else for(var r=1/(t-1),i=0;i<t;++i){var o=r*i,s=this.interpolate(o);n.push(s)}for(var a=!1,u=0,l=e&&e.offset?e.offset:10,c=180-l,h=-180+l,p=360-l,f=1;f<n.length;++f){var g=n[f-1][0],d=n[f][0],y=Math.abs(d-g);y>p&&(d>c&&g<h||g>c&&d<h)?a=!0:y>u&&(u=y)}var v=[];if(a&&u<l){var _=[];v.push(_);for(var m=0;m<n.length;++m){var x=parseFloat(n[m][0]);if(m>0&&Math.abs(x-n[m-1][0])>p){var E=parseFloat(n[m-1][0]),b=parseFloat(n[m-1][1]),w=parseFloat(n[m][0]),I=parseFloat(n[m][1]);if(E>-180&&E<h&&180===w&&m+1<n.length&&n[m-1][0]>-180&&n[m-1][0]<h){_.push([-180,n[m][1]]),m++,_.push([n[m][0],n[m][1]]);continue}if(E>c&&E<180&&-180===w&&m+1<n.length&&n[m-1][0]>c&&n[m-1][0]<180){_.push([180,n[m][1]]),m++,_.push([n[m][0],n[m][1]]);continue}if(E<h&&w>c){var N=E;E=w,w=N;var S=b;b=I,I=S}if(E>c&&w<h&&(w+=360),E<=180&&w>=180&&E<w){var C=(180-E)/(w-E),P=C*I+(1-C)*b;_.push([n[m-1][0]>c?180:-180,P]),(_=[]).push([n[m-1][0]>c?-180:180,P]),v.push(_)}else _=[],v.push(_);_.push([x,n[m][1]])}else _.push([n[m][0],n[m][1]])}}else{var M=[];v.push(M);for(var L=0;L<n.length;++L)M.push([n[L][0],n[L][1]])}for(var O=new yi(this.properties),R=0;R<v.length;++R){var T=new di;O.geometries.push(T);for(var A=v[R],D=0;D<A.length;++D)T.move_to(A[D])}return O};var Ai=Bt((function(t,e){function n(t){var e=[];for(var n in t)e.push(n);return e}(t.exports="function"==typeof Object.keys?Object.keys:n).shim=n})),Di=Bt((function(t,e){var n="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();function r(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function i(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}(e=t.exports=n?r:i).supported=r,e.unsupported=i})),Fi=Bt((function(t){var e=Array.prototype.slice,n=t.exports=function(t,o,s){return s||(s={}),t===o||(t instanceof Date&&o instanceof Date?t.getTime()===o.getTime():!t||!o||"object"!=typeof t&&"object"!=typeof o?s.strict?t===o:t==o:function(t,o,s){var a,u;if(r(t)||r(o))return!1;if(t.prototype!==o.prototype)return!1;if(Di(t))return!!Di(o)&&(t=e.call(t),o=e.call(o),n(t,o,s));if(i(t)){if(!i(o))return!1;if(t.length!==o.length)return!1;for(a=0;a<t.length;a++)if(t[a]!==o[a])return!1;return!0}try{var l=Ai(t),c=Ai(o)}catch(t){return!1}if(l.length!=c.length)return!1;for(l.sort(),c.sort(),a=l.length-1;a>=0;a--)if(l[a]!=c[a])return!1;for(a=l.length-1;a>=0;a--)if(u=l[a],!n(t[u],o[u],s))return!1;return typeof t==typeof o}(t,o,s))};function r(t){return null==t}function i(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length)&&("function"==typeof t.copy&&"function"==typeof t.slice&&!(t.length>0&&"number"!=typeof t[0]))}}));function ki(t,e,n){if(void 0===n&&(n={}),!P(n=n||{}))throw new Error("options is invalid");var r,i=n.tolerance||0,o=[],s=Mr(),a=Zn(t);return s.load(a),U(e,(function(t){var e=!1;t&&(F(s.search(t),(function(n){if(!1===e){var o=Q(t).sort(),s=Q(n).sort();Fi(o,s)||(0===i?Wr(o[0],n)&&Wr(o[1],n):Tr(n,o[0]).properties.dist<=i&&Tr(n,o[1]).properties.dist<=i)?(e=!0,r=r?Gi(r,t):t):(0===i?Wr(s[0],t)&&Wr(s[1],t):Tr(t,s[0]).properties.dist<=i&&Tr(t,s[1]).properties.dist<=i)&&(r=r?Gi(r,n):n)}})),!1===e&&r&&(o.push(r),r=void 0))})),r&&o.push(r),f(o)}function Gi(t,e){var n=Q(e),r=Q(t),i=r[0],o=r[r.length-1],s=t.geometry.coordinates;return Fi(n[0],i)?s.unshift(n[1]):Fi(n[0],o)?s.push(n[1]):Fi(n[1],i)?s.unshift(n[0]):Fi(n[1],o)&&s.push(n[0]),t}function qi(t){var e=t%360;return e<0&&(e+=360),e}function Bi(t,e,n){var r;return void 0===n&&(n={}),(r=n.final?zi(K(e),K(t)):zi(K(t),K(e)))>180?-(360-r):r}function zi(t,e){var n=I(t[1]),r=I(e[1]),i=I(e[0]-t[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var o=Math.log(Math.tan(r/2+Math.PI/4)/Math.tan(n/2+Math.PI/4));return(w(Math.atan2(i,o))+360)%360}function ji(t,n,r,i){void 0===i&&(i={});var o=n<0,s=N(Math.abs(n),i.units,"meters");o&&(s=-Math.abs(s));var u=K(t),l=function(t,n,r,i){i=void 0===i?e:Number(i);var o=n/i,s=t[0]*Math.PI/180,a=I(t[1]),u=I(r),l=o*Math.cos(u),c=a+l;Math.abs(c)>Math.PI/2&&(c=c>0?Math.PI-c:-Math.PI-c);var h=Math.log(Math.tan(c/2+Math.PI/4)/Math.tan(a/2+Math.PI/4)),p=Math.abs(h)>1e-11?l/h:Math.cos(a),f=o*Math.sin(u)/p;return[(180*(s+f)/Math.PI+540)%360-180,180*c/Math.PI]}(u,s,r);return l[0]+=l[0]-u[0]>180?-360:u[0]-l[0]>180?360:0,a(l,i.properties)}function Ui(t,e,n,r,i,o){for(var s=0;s<t.length;s++){var a=t[s],u=t[s+1];s===t.length-1&&(u=t[0]),r=Xi(a,u,e),n<=0&&r>0?Xi(e,a,i)<0||(i=a):n>0&&r<=0&&(Vi(e,a,o)||(o=a)),n=r}return[i,o]}function Vi(t,e,n){return Xi(t,e,n)>0}function Xi(t,e,n){return(e[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(e[1]-t[1])}function Yi(t){for(var e,n,r=Q(t),i=0,o=1;o<r.length;)e=n||r[0],i+=((n=r[o])[0]-e[0])*(n[1]+e[1]),o++;return i>0}function Hi(t,e){switch("Feature"===t.type?t.geometry.type:t.type){case"GeometryCollection":return q(t,(function(t){Hi(t,e)})),t;case"LineString":return Wi(Q(t),e),t;case"Polygon":return Ji(Q(t),e),t;case"MultiLineString":return Q(t).forEach((function(t){Wi(t,e)})),t;case"MultiPolygon":return Q(t).forEach((function(t){Ji(t,e)})),t;case"Point":case"MultiPoint":return t}}function Wi(t,e){Yi(t)===e&&t.reverse()}function Ji(t,e){Yi(t[0])!==e&&t[0].reverse();for(var n=1;n<t.length;n++)Yi(t[n])===e&&t[n].reverse()}function Zi(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.zProperty||"elevation",r=e.flip,i=e.flags;nt(t,"Point","input must contain Points");for(var o=function(t,e){var n={};return F(t,(function(t){var e=Q(t)[1];n[e]||(n[e]=[]),n[e].push(t)})),Object.keys(n).map((function(t){return n[t].sort((function(t,e){return Q(t)[0]-Q(e)[0]}))})).sort((function(t,n){return e?Q(t[0])[1]-Q(n[0])[1]:Q(n[0])[1]-Q(t[0])[1]}))}
/*!
     * @license GNU Affero General Public License.
     * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>
     * v. 1.2.0
     * https://github.com/RaumZeit/MarchingSquares.js
     *
     * MarchingSquaresJS is free software: you can redistribute it and/or modify
     * it under the terms of the GNU Affero General Public License as published by
     * the Free Software Foundation, either version 3 of the License, or
     * (at your option) any later version.
     *
     * MarchingSquaresJS is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU Affero General Public License for more details.
     *
     * As additional permission under GNU Affero General Public License version 3
     * section 7, third-party projects (personal or commercial) may distribute,
     * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the
     * requirement that said third-party project for that reason alone becomes
     * subject to any requirement of the GNU Affero General Public License version 3.
     * Any modifications to MarchingSquaresJS, however, must be shared with the public
     * and made available.
     *
     * In summary this:
     * - allows you to use MarchingSquaresJS at no cost
     * - allows you to use MarchingSquaresJS for both personal and commercial purposes
     * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any
     *   license as long as this license notice is included
     * - enables you to keep the source code of your program that uses MarchingSquaresJS
     *   undisclosed
     * - forces you to share any modifications you have made to MarchingSquaresJS,
     *   e.g. bug-fixes
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.
     */(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],l=[],c=0;c<u.length;c++){var h=u[c];h.properties[n]?l.push(h.properties[n]):l.push(0),!0===i&&(h.properties.matrixPosition=[a,c])}s.push(l)}return s}var Ki={successCallback:null,verbose:!1,polygons:!1},Qi={};function $i(t,e,n,r){r=r||{};for(var i=Object.keys(Ki),o=0;o<i.length;o++){var s=i[o],a=r[s];a=null!=a?a:Ki[s],Qi[s]=a}Qi.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+e+":"+(e+n)+"]");var u,l=function(t,e,n){for(var r=t.length-1,i=t[0].length-1,o={rows:r,cols:i,cells:[]},s=e+Math.abs(n),a=0;a<r;++a){o.cells[a]=[];for(var u=0;u<i;++u){var l=0,c=t[a+1][u],h=t[a+1][u+1],p=t[a][u+1],f=t[a][u];if(!(isNaN(c)||isNaN(h)||isNaN(p)||isNaN(f))){l|=c<e?0:c>s?128:64,l|=h<e?0:h>s?32:16,l|=p<e?0:p>s?8:4;var g=+(l|=f<e?0:f>s?2:1),d=0;if(17===l||18===l||33===l||34===l||38===l||68===l||72===l||98===l||102===l||132===l||136===l||137===l||152===l||153===l){var y=(c+h+p+f)/4;d=y>s?2:y<e?0:1,34===l?1===d?l=35:0===d&&(l=136):136===l?1===d?(l=35,d=4):0===d&&(l=34):17===l?1===d?(l=155,d=4):0===d&&(l=153):68===l?1===d?(l=103,d=4):0===d&&(l=102):153===l?1===d&&(l=155):102===l?1===d&&(l=103):152===l?d<2&&(l=156,d=1):137===l?d<2&&(l=139,d=1):98===l?d<2&&(l=99,d=1):38===l?d<2&&(l=39,d=1):18===l?d>0?(l=156,d=4):l=152:33===l?d>0?(l=139,d=4):l=137:72===l?d>0?(l=99,d=4):l=98:132===l&&(d>0?(l=39,d=4):l=38)}if(0!=l&&170!=l){var v,_,m,x,E,b,w,I;v=_=m=x=E=b=w=I=.5;var N=[];1===l?(m=1-Vo(e,p,f),I=1-Vo(e,c,f),N.push(Go[l])):169===l?(m=Vo(s,f,p),I=Vo(s,f,c),N.push(Go[l])):4===l?(b=1-Vo(e,h,p),x=Vo(e,f,p),N.push(Fo[l])):166===l?(b=Vo(s,p,h),x=1-Vo(s,p,f),N.push(Fo[l])):16===l?(E=Vo(e,p,h),_=Vo(e,c,h),N.push(Do[l])):154===l?(E=1-Vo(s,h,p),_=1-Vo(s,h,c),N.push(Do[l])):64===l?(w=Vo(e,f,c),v=1-Vo(e,h,c),N.push(Bo[l])):106===l?(w=1-Vo(s,c,f),v=Vo(s,c,h),N.push(Bo[l])):168===l?(x=Vo(s,f,p),m=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),N.push(ko[l]),N.push(Go[l])):2===l?(x=1-Vo(e,p,f),m=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),N.push(ko[l]),N.push(Go[l])):162===l?(E=Vo(s,p,h),b=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),N.push(ko[l]),N.push(Go[l])):8===l?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),N.push(Do[l]),N.push(Fo[l])):138===l?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),v=1-Vo(s,h,c),_=1-Vo(e,h,c),N.push(Do[l]),N.push(Fo[l])):32===l?(E=Vo(s,p,h),b=Vo(e,p,h),v=Vo(e,c,h),_=Vo(s,c,h),N.push(Do[l]),N.push(Fo[l])):42===l?(I=1-Vo(s,c,f),w=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h),N.push(qo[l]),N.push(Bo[l])):128===l&&(I=Vo(e,f,c),w=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c),N.push(qo[l]),N.push(Bo[l])),5===l?(b=1-Vo(e,h,p),I=1-Vo(e,c,f),N.push(Fo[l])):165===l?(b=Vo(s,p,h),I=Vo(s,f,c),N.push(Fo[l])):20===l?(x=Vo(e,f,p),_=Vo(e,c,h),N.push(ko[l])):150===l?(x=1-Vo(s,p,f),_=1-Vo(s,h,c),N.push(ko[l])):80===l?(E=Vo(e,p,h),w=Vo(e,f,c),N.push(Do[l])):90===l?(E=1-Vo(s,h,p),w=1-Vo(s,c,f),N.push(Do[l])):65===l?(m=1-Vo(e,p,f),v=1-Vo(e,h,c),N.push(Go[l])):105===l?(m=Vo(s,f,p),v=Vo(s,c,h),N.push(Go[l])):160===l?(E=Vo(s,p,h),b=Vo(e,p,h),I=Vo(e,f,c),w=Vo(s,f,c),N.push(Do[l]),N.push(Fo[l])):10===l?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),I=1-Vo(s,c,f),w=1-Vo(e,c,f),N.push(Do[l]),N.push(Fo[l])):130===l?(x=1-Vo(e,p,f),m=1-Vo(s,p,f),v=1-Vo(s,h,c),_=1-Vo(e,h,c),N.push(ko[l]),N.push(Go[l])):40===l?(x=Vo(s,f,p),m=Vo(e,f,p),v=Vo(e,c,h),_=Vo(s,c,h),N.push(ko[l]),N.push(Go[l])):101===l?(b=Vo(s,p,h),v=Vo(s,c,h),N.push(Fo[l])):69===l?(b=1-Vo(e,h,p),v=1-Vo(e,h,c),N.push(Fo[l])):149===l?(I=Vo(s,f,c),_=1-Vo(s,h,c),N.push(qo[l])):21===l?(I=1-Vo(e,c,f),_=Vo(e,c,h),N.push(qo[l])):86===l?(x=1-Vo(s,p,f),w=1-Vo(s,c,f),N.push(ko[l])):84===l?(x=Vo(e,f,p),w=Vo(e,f,c),N.push(ko[l])):89===l?(E=1-Vo(s,h,p),m=Vo(s,f,p),N.push(Go[l])):81===l?(E=Vo(e,p,h),m=1-Vo(e,p,f),N.push(Go[l])):96===l?(E=Vo(s,p,h),b=Vo(e,p,h),w=Vo(e,f,c),v=Vo(s,c,h),N.push(Do[l]),N.push(Fo[l])):74===l?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),w=1-Vo(s,c,f),v=1-Vo(e,h,c),N.push(Do[l]),N.push(Fo[l])):24===l?(E=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),_=Vo(e,c,h),N.push(Do[l]),N.push(Go[l])):146===l?(E=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),_=1-Vo(s,h,c),N.push(Do[l]),N.push(Go[l])):6===l?(b=1-Vo(e,h,p),x=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),N.push(Fo[l]),N.push(ko[l])):164===l?(b=Vo(s,p,h),x=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),N.push(Fo[l]),N.push(ko[l])):129===l?(m=1-Vo(e,p,f),I=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c),N.push(Go[l]),N.push(qo[l])):41===l?(m=Vo(s,f,p),I=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h),N.push(Go[l]),N.push(qo[l])):66===l?(x=1-Vo(e,p,f),m=1-Vo(s,p,f),w=1-Vo(s,c,f),v=1-Vo(e,h,c),N.push(ko[l]),N.push(Go[l])):104===l?(x=Vo(s,f,p),m=Vo(e,f,p),w=Vo(e,f,c),v=Vo(s,c,h),N.push(Go[l]),N.push(zo[l])):144===l?(E=Vo(e,p,h),I=Vo(e,f,c),w=Vo(s,f,c),_=1-Vo(s,h,c),N.push(Do[l]),N.push(Bo[l])):26===l?(E=1-Vo(s,h,p),I=1-Vo(s,c,f),w=1-Vo(e,c,f),_=Vo(e,c,h),N.push(Do[l]),N.push(Bo[l])):36===l?(b=Vo(s,p,h),x=Vo(e,f,p),v=Vo(e,c,h),_=Vo(s,c,h),N.push(Fo[l]),N.push(ko[l])):134===l?(b=1-Vo(e,h,p),x=1-Vo(s,p,f),v=1-Vo(s,h,c),_=1-Vo(e,h,c),N.push(Fo[l]),N.push(ko[l])):9===l?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),m=Vo(s,f,p),I=1-Vo(e,c,f),N.push(Do[l]),N.push(Fo[l])):161===l?(E=Vo(s,p,h),b=Vo(e,p,h),m=1-Vo(e,p,f),I=Vo(s,f,c),N.push(Do[l]),N.push(Fo[l])):37===l?(b=Vo(s,p,h),I=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h),N.push(Fo[l]),N.push(qo[l])):133===l?(b=1-Vo(e,h,p),I=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c),N.push(Fo[l]),N.push(qo[l])):148===l?(x=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),_=1-Vo(s,h,c),N.push(ko[l]),N.push(Bo[l])):22===l?(x=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),_=Vo(e,c,h),N.push(ko[l]),N.push(Bo[l])):82===l?(E=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),w=1-Vo(s,c,f),N.push(Do[l]),N.push(Go[l])):88===l?(E=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),w=Vo(e,f,c),N.push(Do[l]),N.push(Go[l])):73===l?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),m=Vo(s,f,p),v=1-Vo(e,h,c),N.push(Do[l]),N.push(Fo[l])):97===l?(E=Vo(s,p,h),b=Vo(e,p,h),m=1-Vo(e,p,f),v=Vo(s,c,h),N.push(Do[l]),N.push(Fo[l])):145===l?(E=Vo(e,p,h),m=1-Vo(e,p,f),I=Vo(s,f,c),_=1-Vo(s,h,c),N.push(Do[l]),N.push(qo[l])):25===l?(E=1-Vo(s,h,p),m=Vo(s,f,p),I=1-Vo(e,c,f),_=Vo(e,c,h),N.push(Do[l]),N.push(qo[l])):70===l?(b=1-Vo(e,h,p),x=1-Vo(s,p,f),w=1-Vo(s,c,f),v=1-Vo(e,h,c),N.push(Fo[l]),N.push(ko[l])):100===l?(b=Vo(s,p,h),x=Vo(e,f,p),w=Vo(e,f,c),v=Vo(s,c,h),N.push(Fo[l]),N.push(ko[l])):34===l?(0===d?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)):(E=Vo(s,p,h),b=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)),N.push(Do[l]),N.push(Fo[l]),N.push(qo[l]),N.push(Bo[l])):35===l?(4===d?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)):(E=Vo(s,p,h),b=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)),N.push(Do[l]),N.push(Fo[l]),N.push(Go[l]),N.push(Bo[l])):136===l?(0===d?(E=Vo(s,p,h),b=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)):(E=1-Vo(e,h,p),b=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)),N.push(Do[l]),N.push(Fo[l]),N.push(qo[l]),N.push(Bo[l])):153===l?(0===d?(E=Vo(e,p,h),m=1-Vo(e,p,f),I=1-Vo(e,c,f),_=Vo(e,c,h)):(E=1-Vo(s,h,p),m=Vo(s,f,p),I=Vo(s,f,c),_=1-Vo(s,h,c)),N.push(Do[l]),N.push(Go[l])):102===l?(0===d?(b=1-Vo(e,h,p),x=Vo(e,f,p),w=Vo(e,f,c),v=1-Vo(e,h,c)):(b=Vo(s,p,h),x=1-Vo(s,p,f),w=1-Vo(s,c,f),v=Vo(s,c,h)),N.push(Fo[l]),N.push(Bo[l])):155===l?(4===d?(E=Vo(e,p,h),m=1-Vo(e,p,f),I=1-Vo(e,c,f),_=Vo(e,c,h)):(E=1-Vo(s,h,p),m=Vo(s,f,p),I=Vo(s,f,c),_=1-Vo(s,h,c)),N.push(Do[l]),N.push(qo[l])):103===l?(4===d?(b=1-Vo(e,h,p),x=Vo(e,f,p),w=Vo(e,f,c),v=1-Vo(e,h,c)):(b=Vo(s,p,h),x=1-Vo(s,p,f),w=1-Vo(s,c,f),v=Vo(s,c,h)),N.push(Fo[l]),N.push(ko[l])):152===l?(0===d?(E=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),_=Vo(e,c,h)):(E=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),_=1-Vo(s,h,c)),N.push(Do[l]),N.push(ko[l]),N.push(Go[l])):156===l?(4===d?(E=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),_=Vo(e,c,h)):(E=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),_=1-Vo(s,h,c)),N.push(Do[l]),N.push(Go[l]),N.push(Bo[l])):137===l?(0===d?(E=Vo(s,p,h),b=Vo(e,p,h),m=1-Vo(e,p,f),I=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)):(E=1-Vo(e,h,p),b=1-Vo(s,h,p),m=Vo(s,f,p),I=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)),N.push(Do[l]),N.push(Fo[l]),N.push(Go[l])):139===l?(4===d?(E=Vo(s,p,h),b=Vo(e,p,h),m=1-Vo(e,p,f),I=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)):(E=1-Vo(e,h,p),b=1-Vo(s,h,p),m=Vo(s,f,p),I=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)),N.push(Do[l]),N.push(Fo[l]),N.push(qo[l])):98===l?(0===d?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),w=Vo(e,f,c),v=1-Vo(e,h,c)):(E=Vo(s,p,h),b=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),w=1-Vo(s,c,f),v=Vo(s,c,h)),N.push(Do[l]),N.push(Fo[l]),N.push(Bo[l])):99===l?(4===d?(E=1-Vo(e,h,p),b=1-Vo(s,h,p),x=Vo(s,f,p),m=Vo(e,f,p),w=Vo(e,f,c),v=1-Vo(e,h,c)):(E=Vo(s,p,h),b=Vo(e,p,h),x=1-Vo(e,p,f),m=1-Vo(s,p,f),w=1-Vo(s,c,f),v=Vo(s,c,h)),N.push(Do[l]),N.push(Fo[l]),N.push(Go[l])):38===l?(0===d?(b=1-Vo(e,h,p),x=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)):(b=Vo(s,p,h),x=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)),N.push(Fo[l]),N.push(qo[l]),N.push(Bo[l])):39===l?(4===d?(b=1-Vo(e,h,p),x=Vo(e,f,p),I=Vo(e,f,c),w=Vo(s,f,c),v=1-Vo(s,h,c),_=1-Vo(e,h,c)):(b=Vo(s,p,h),x=1-Vo(s,p,f),I=1-Vo(s,c,f),w=1-Vo(e,c,f),v=Vo(e,c,h),_=Vo(s,c,h)),N.push(Fo[l]),N.push(ko[l]),N.push(Bo[l])):85===l&&(E=1,b=0,x=1,m=0,I=0,w=1,v=0,_=1),(v<0||v>1||_<0||_>1||E<0||E>1||x<0||x>1||I<0||I>1||w<0||w>1)&&console.log("MarchingSquaresJS-isoBands: "+l+" "+g+" "+c+","+h+","+p+","+f+" "+d+" "+v+" "+_+" "+E+" "+b+" "+x+" "+m+" "+I+" "+w),o.cells[a][u]={cval:l,cval_real:g,flipped:d,topleft:v,topright:_,righttop:E,rightbottom:b,bottomright:x,bottomleft:m,leftbottom:I,lefttop:w,edges:N}}}}}return o}(t,e,n);return Qi.polygons?(Qi.verbose&&console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"),u=function(t){var e=[],n=0;return t.cells.forEach((function(t,r){t.forEach((function(t,i){if(void 0!==t){var o=Uo[t.cval](t);"object"==typeof o&&Xo(o)?"object"==typeof o[0]&&Xo(o[0])?"object"==typeof o[0][0]&&Xo(o[0][0])?o.forEach((function(t){t.forEach((function(t){t[0]+=i,t[1]+=r})),e[n++]=t})):(o.forEach((function(t){t[0]+=i,t[1]+=r})),e[n++]=o):console.log("MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates"):console.log("MarchingSquaresJS-isoBands: bandcell polygon with null coordinates")}}))})),e}(l)):(Qi.verbose&&console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),u=function(t){for(var e=[],n=t.rows,r=t.cols,i=[],o=0;o<n;o++)for(var s=0;s<r;s++)if(void 0!==t.cells[o][s]&&t.cells[o][s].edges.length>0){var a=Ho(t.cells[o][s]),u=null,l=s,c=o;null!==a&&i.push([a.p[0]+l,a.p[1]+c]);do{if(null===(u=Wo(t.cells[c][l],a.x,a.y,a.o)))break;if(i.push([u.p[0]+l,u.p[1]+c]),l+=u.x,a=u,(c+=u.y)<0||c>=n||l<0||l>=r||void 0===t.cells[c][l]){var h=Yo(t,l-=u.x,c-=u.y,u.x,u.y,u.o);if(null===h)break;h.path.forEach((function(t){i.push(t)})),l=h.i,c=h.j,a=h}}while(void 0!==t.cells[c][l]&&t.cells[c][l].edges.length>0);e.push(i),i=[],t.cells[o][s].edges.length>0&&s--}return e}(l)),"function"==typeof Qi.successCallback&&Qi.successCallback(u),u}var to=64,eo=16,no=[],ro=[],io=[],oo=[],so=[],ao=[],uo=[],lo=[],co=[],ho=[],po=[],fo=[],go=[],yo=[],vo=[],_o=[],mo=[],xo=[],Eo=[],bo=[],wo=[],Io=[],No=[],So=[];uo[85]=ho[85]=-1,lo[85]=po[85]=0,co[85]=fo[85]=1,Eo[85]=Io[85]=1,bo[85]=No[85]=0,wo[85]=So[85]=1,no[85]=oo[85]=0,ro[85]=so[85]=-1,io[85]=vo[85]=0,_o[85]=go[85]=0,mo[85]=yo[85]=1,ao[85]=xo[85]=1,Io[1]=Io[169]=0,No[1]=No[169]=-1,So[1]=So[169]=0,go[1]=go[169]=-1,yo[1]=yo[169]=0,vo[1]=vo[169]=0,ho[4]=ho[166]=0,po[4]=po[166]=-1,fo[4]=fo[166]=1,_o[4]=_o[166]=1,mo[4]=mo[166]=0,xo[4]=xo[166]=0,uo[16]=uo[154]=0,lo[16]=lo[154]=1,co[16]=co[154]=1,oo[16]=oo[154]=1,so[16]=so[154]=0,ao[16]=ao[154]=1,Eo[64]=Eo[106]=0,bo[64]=bo[106]=1,wo[64]=wo[106]=0,no[64]=no[106]=-1,ro[64]=ro[106]=0,io[64]=io[106]=1,Eo[2]=Eo[168]=0,bo[2]=bo[168]=-1,wo[2]=wo[168]=1,Io[2]=Io[168]=0,No[2]=No[168]=-1,So[2]=So[168]=0,go[2]=go[168]=-1,yo[2]=yo[168]=0,vo[2]=vo[168]=0,_o[2]=_o[168]=-1,mo[2]=mo[168]=0,xo[2]=xo[168]=1,uo[8]=uo[162]=0,lo[8]=lo[162]=-1,co[8]=co[162]=0,ho[8]=ho[162]=0,po[8]=po[162]=-1,fo[8]=fo[162]=1,go[8]=go[162]=1,yo[8]=yo[162]=0,vo[8]=vo[162]=1,_o[8]=_o[162]=1,mo[8]=mo[162]=0,xo[8]=xo[162]=0,uo[32]=uo[138]=0,lo[32]=lo[138]=1,co[32]=co[138]=1,ho[32]=ho[138]=0,po[32]=po[138]=1,fo[32]=fo[138]=0,no[32]=no[138]=1,ro[32]=ro[138]=0,io[32]=io[138]=0,oo[32]=oo[138]=1,so[32]=so[138]=0,ao[32]=ao[138]=1,Io[128]=Io[42]=0,No[128]=No[42]=1,So[128]=So[42]=1,Eo[128]=Eo[42]=0,bo[128]=bo[42]=1,wo[128]=wo[42]=0,no[128]=no[42]=-1,ro[128]=ro[42]=0,io[128]=io[42]=1,oo[128]=oo[42]=-1,so[128]=so[42]=0,ao[128]=ao[42]=0,ho[5]=ho[165]=-1,po[5]=po[165]=0,fo[5]=fo[165]=0,Io[5]=Io[165]=1,No[5]=No[165]=0,So[5]=So[165]=0,_o[20]=_o[150]=0,mo[20]=mo[150]=1,xo[20]=xo[150]=1,oo[20]=oo[150]=0,so[20]=so[150]=-1,ao[20]=ao[150]=1,uo[80]=uo[90]=-1,lo[80]=lo[90]=0,co[80]=co[90]=1,Eo[80]=Eo[90]=1,bo[80]=bo[90]=0,wo[80]=wo[90]=1,go[65]=go[105]=0,yo[65]=yo[105]=1,vo[65]=vo[105]=0,no[65]=no[105]=0,ro[65]=ro[105]=-1,io[65]=io[105]=0,uo[160]=uo[10]=-1,lo[160]=lo[10]=0,co[160]=co[10]=1,ho[160]=ho[10]=-1,po[160]=po[10]=0,fo[160]=fo[10]=0,Io[160]=Io[10]=1,No[160]=No[10]=0,So[160]=So[10]=0,Eo[160]=Eo[10]=1,bo[160]=bo[10]=0,wo[160]=wo[10]=1,_o[130]=_o[40]=0,mo[130]=mo[40]=1,xo[130]=xo[40]=1,go[130]=go[40]=0,yo[130]=yo[40]=1,vo[130]=vo[40]=0,no[130]=no[40]=0,ro[130]=ro[40]=-1,io[130]=io[40]=0,oo[130]=oo[40]=0,so[130]=so[40]=-1,ao[130]=ao[40]=1,ho[37]=ho[133]=0,po[37]=po[133]=1,fo[37]=fo[133]=1,Io[37]=Io[133]=0,No[37]=No[133]=1,So[37]=So[133]=0,no[37]=no[133]=-1,ro[37]=ro[133]=0,io[37]=io[133]=0,oo[37]=oo[133]=1,so[37]=so[133]=0,ao[37]=ao[133]=0,_o[148]=_o[22]=-1,mo[148]=mo[22]=0,xo[148]=xo[22]=0,Io[148]=Io[22]=0,No[148]=No[22]=-1,So[148]=So[22]=1,Eo[148]=Eo[22]=0,bo[148]=bo[22]=1,wo[148]=wo[22]=1,oo[148]=oo[22]=-1,so[148]=so[22]=0,ao[148]=ao[22]=1,uo[82]=uo[88]=0,lo[82]=lo[88]=-1,co[82]=co[88]=1,_o[82]=_o[88]=1,mo[82]=mo[88]=0,xo[82]=xo[88]=1,go[82]=go[88]=-1,yo[82]=yo[88]=0,vo[82]=vo[88]=1,Eo[82]=Eo[88]=0,bo[82]=bo[88]=-1,wo[82]=wo[88]=0,uo[73]=uo[97]=0,lo[73]=lo[97]=1,co[73]=co[97]=0,ho[73]=ho[97]=0,po[73]=po[97]=-1,fo[73]=fo[97]=0,go[73]=go[97]=1,yo[73]=yo[97]=0,vo[73]=vo[97]=0,no[73]=no[97]=1,ro[73]=ro[97]=0,io[73]=io[97]=1,uo[145]=uo[25]=0,lo[145]=lo[25]=-1,co[145]=co[25]=0,go[145]=go[25]=1,yo[145]=yo[25]=0,vo[145]=vo[25]=1,Io[145]=Io[25]=0,No[145]=No[25]=1,So[145]=So[25]=1,oo[145]=oo[25]=-1,so[145]=so[25]=0,ao[145]=ao[25]=0,ho[70]=ho[100]=0,po[70]=po[100]=1,fo[70]=fo[100]=0,_o[70]=_o[100]=-1,mo[70]=mo[100]=0,xo[70]=xo[100]=1,Eo[70]=Eo[100]=0,bo[70]=bo[100]=-1,wo[70]=wo[100]=1,no[70]=no[100]=1,ro[70]=ro[100]=0,io[70]=io[100]=0,ho[101]=ho[69]=0,po[101]=po[69]=1,fo[101]=fo[69]=0,no[101]=no[69]=1,ro[101]=ro[69]=0,io[101]=io[69]=0,Io[149]=Io[21]=0,No[149]=No[21]=1,So[149]=So[21]=1,oo[149]=oo[21]=-1,so[149]=so[21]=0,ao[149]=ao[21]=0,_o[86]=_o[84]=-1,mo[86]=mo[84]=0,xo[86]=xo[84]=1,Eo[86]=Eo[84]=0,bo[86]=bo[84]=-1,wo[86]=wo[84]=1,uo[89]=uo[81]=0,lo[89]=lo[81]=-1,co[89]=co[81]=0,go[89]=go[81]=1,yo[89]=yo[81]=0,vo[89]=vo[81]=1,uo[96]=uo[74]=0,lo[96]=lo[74]=1,co[96]=co[74]=0,ho[96]=ho[74]=-1,po[96]=po[74]=0,fo[96]=fo[74]=1,Eo[96]=Eo[74]=1,bo[96]=bo[74]=0,wo[96]=wo[74]=0,no[96]=no[74]=1,ro[96]=ro[74]=0,io[96]=io[74]=1,uo[24]=uo[146]=0,lo[24]=lo[146]=-1,co[24]=co[146]=1,_o[24]=_o[146]=1,mo[24]=mo[146]=0,xo[24]=xo[146]=1,go[24]=go[146]=0,yo[24]=yo[146]=1,vo[24]=vo[146]=1,oo[24]=oo[146]=0,so[24]=so[146]=-1,ao[24]=ao[146]=0,ho[6]=ho[164]=-1,po[6]=po[164]=0,fo[6]=fo[164]=1,_o[6]=_o[164]=-1,mo[6]=mo[164]=0,xo[6]=xo[164]=0,Io[6]=Io[164]=0,No[6]=No[164]=-1,So[6]=So[164]=1,Eo[6]=Eo[164]=1,bo[6]=bo[164]=0,wo[6]=wo[164]=0,go[129]=go[41]=0,yo[129]=yo[41]=1,vo[129]=vo[41]=1,Io[129]=Io[41]=0,No[129]=No[41]=1,So[129]=So[41]=0,no[129]=no[41]=-1,ro[129]=ro[41]=0,io[129]=io[41]=0,oo[129]=oo[41]=0,so[129]=so[41]=-1,ao[129]=ao[41]=0,_o[66]=_o[104]=0,mo[66]=mo[104]=1,xo[66]=xo[104]=0,go[66]=go[104]=-1,yo[66]=yo[104]=0,vo[66]=vo[104]=1,Eo[66]=Eo[104]=0,bo[66]=bo[104]=-1,wo[66]=wo[104]=0,no[66]=no[104]=0,ro[66]=ro[104]=-1,io[66]=io[104]=1,uo[144]=uo[26]=-1,lo[144]=lo[26]=0,co[144]=co[26]=0,Io[144]=Io[26]=1,No[144]=No[26]=0,So[144]=So[26]=1,Eo[144]=Eo[26]=0,bo[144]=bo[26]=1,wo[144]=wo[26]=1,oo[144]=oo[26]=-1,so[144]=so[26]=0,ao[144]=ao[26]=1,ho[36]=ho[134]=0,po[36]=po[134]=1,fo[36]=fo[134]=1,_o[36]=_o[134]=0,mo[36]=mo[134]=1,xo[36]=xo[134]=0,no[36]=no[134]=0,ro[36]=ro[134]=-1,io[36]=io[134]=1,oo[36]=oo[134]=1,so[36]=so[134]=0,ao[36]=ao[134]=0,uo[9]=uo[161]=-1,lo[9]=lo[161]=0,co[9]=co[161]=0,ho[9]=ho[161]=0,po[9]=po[161]=-1,fo[9]=fo[161]=0,go[9]=go[161]=1,yo[9]=yo[161]=0,vo[9]=vo[161]=0,Io[9]=Io[161]=1,No[9]=No[161]=0,So[9]=So[161]=1,uo[136]=0,lo[136]=1,co[136]=1,ho[136]=0,po[136]=1,fo[136]=0,_o[136]=-1,mo[136]=0,xo[136]=1,go[136]=-1,yo[136]=0,vo[136]=0,Io[136]=0,No[136]=-1,So[136]=0,Eo[136]=0,bo[136]=-1,wo[136]=1,no[136]=1,ro[136]=0,io[136]=0,oo[136]=1,so[136]=0,ao[136]=1,uo[34]=0,lo[34]=-1,co[34]=0,ho[34]=0,po[34]=-1,fo[34]=1,_o[34]=1,mo[34]=0,xo[34]=0,go[34]=1,yo[34]=0,vo[34]=1,Io[34]=0,No[34]=1,So[34]=1,Eo[34]=0,bo[34]=1,wo[34]=0,no[34]=-1,ro[34]=0,io[34]=1,oo[34]=-1,so[34]=0,ao[34]=0,uo[35]=0,lo[35]=1,co[35]=1,ho[35]=0,po[35]=-1,fo[35]=1,_o[35]=1,mo[35]=0,xo[35]=0,go[35]=-1,yo[35]=0,vo[35]=0,Io[35]=0,No[35]=-1,So[35]=0,Eo[35]=0,bo[35]=1,wo[35]=0,no[35]=-1,ro[35]=0,io[35]=1,oo[35]=1,so[35]=0,ao[35]=1,uo[153]=0,lo[153]=1,co[153]=1,go[153]=-1,yo[153]=0,vo[153]=0,Io[153]=0,No[153]=-1,So[153]=0,oo[153]=1,so[153]=0,ao[153]=1,ho[102]=0,po[102]=-1,fo[102]=1,_o[102]=1,mo[102]=0,xo[102]=0,Eo[102]=0,bo[102]=1,wo[102]=0,no[102]=-1,ro[102]=0,io[102]=1,uo[155]=0,lo[155]=-1,co[155]=0,go[155]=1,yo[155]=0,vo[155]=1,Io[155]=0,No[155]=1,So[155]=1,oo[155]=-1,so[155]=0,ao[155]=0,ho[103]=0,po[103]=1,fo[103]=0,_o[103]=-1,mo[103]=0,xo[103]=1,Eo[103]=0,bo[103]=-1,wo[103]=1,no[103]=1,ro[103]=0,io[103]=0,uo[152]=0,lo[152]=1,co[152]=1,_o[152]=-1,mo[152]=0,xo[152]=1,go[152]=-1,yo[152]=0,vo[152]=0,Io[152]=0,No[152]=-1,So[152]=0,Eo[152]=0,bo[152]=-1,wo[152]=1,oo[152]=1,so[152]=0,ao[152]=1,uo[156]=0,lo[156]=-1,co[156]=1,_o[156]=1,mo[156]=0,xo[156]=1,go[156]=-1,yo[156]=0,vo[156]=0,Io[156]=0,No[156]=-1,So[156]=0,Eo[156]=0,bo[156]=1,wo[156]=1,oo[156]=-1,so[156]=0,ao[156]=1,uo[137]=0,lo[137]=1,co[137]=1,ho[137]=0,po[137]=1,fo[137]=0,go[137]=-1,yo[137]=0,vo[137]=0,Io[137]=0,No[137]=-1,So[137]=0,no[137]=1,ro[137]=0,io[137]=0,oo[137]=1,so[137]=0,ao[137]=1,uo[139]=0,lo[139]=1,co[139]=1,ho[139]=0,po[139]=-1,fo[139]=0,go[139]=1,yo[139]=0,vo[139]=0,Io[139]=0,No[139]=1,So[139]=0,no[139]=-1,ro[139]=0,io[139]=0,oo[139]=1,so[139]=0,ao[139]=1,uo[98]=0,lo[98]=-1,co[98]=0,ho[98]=0,po[98]=-1,fo[98]=1,_o[98]=1,mo[98]=0,xo[98]=0,go[98]=1,yo[98]=0,vo[98]=1,Eo[98]=0,bo[98]=1,wo[98]=0,no[98]=-1,ro[98]=0,io[98]=1,uo[99]=0,lo[99]=1,co[99]=0,ho[99]=0,po[99]=-1,fo[99]=1,_o[99]=1,mo[99]=0,xo[99]=0,go[99]=-1,yo[99]=0,vo[99]=1,Eo[99]=0,bo[99]=-1,wo[99]=0,no[99]=1,ro[99]=0,io[99]=1,ho[38]=0,po[38]=-1,fo[38]=1,_o[38]=1,mo[38]=0,xo[38]=0,Io[38]=0,No[38]=1,So[38]=1,Eo[38]=0,bo[38]=1,wo[38]=0,no[38]=-1,ro[38]=0,io[38]=1,oo[38]=-1,so[38]=0,ao[38]=0,ho[39]=0,po[39]=1,fo[39]=1,_o[39]=-1,mo[39]=0,xo[39]=0,Io[39]=0,No[39]=-1,So[39]=1,Eo[39]=0,bo[39]=1,wo[39]=0,no[39]=-1,ro[39]=0,io[39]=1,oo[39]=1,so[39]=0,ao[39]=0;var Co=function(t){return[[t.bottomleft,0],[0,0],[0,t.leftbottom]]},Po=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0]]},Mo=function(t){return[[t.topright,1],[1,1],[1,t.righttop]]},Lo=function(t){return[[0,t.lefttop],[0,1],[t.topleft,1]]},Oo=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop]]},Ro=function(t){return[[t.bottomright,0],[t.bottomleft,0],[1,t.righttop],[1,t.rightbottom]]},To=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.topleft,1],[t.topright,1]]},Ao=function(t){return[[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},Do=[],Fo=[],ko=[],Go=[],qo=[],Bo=[],zo=[],jo=[];Go[1]=qo[1]=18,Go[169]=qo[169]=18,ko[4]=Fo[4]=12,ko[166]=Fo[166]=12,Do[16]=jo[16]=4,Do[154]=jo[154]=4,Bo[64]=zo[64]=22,Bo[106]=zo[106]=22,ko[2]=Bo[2]=17,Go[2]=qo[2]=18,ko[168]=Bo[168]=17,Go[168]=qo[168]=18,Do[8]=Go[8]=9,Fo[8]=ko[8]=12,Do[162]=Go[162]=9,Fo[162]=ko[162]=12,Do[32]=jo[32]=4,Fo[32]=zo[32]=1,Do[138]=jo[138]=4,Fo[138]=zo[138]=1,qo[128]=jo[128]=21,Bo[128]=zo[128]=22,qo[42]=jo[42]=21,Bo[42]=zo[42]=22,Fo[5]=qo[5]=14,Fo[165]=qo[165]=14,ko[20]=jo[20]=6,ko[150]=jo[150]=6,Do[80]=Bo[80]=11,Do[90]=Bo[90]=11,Go[65]=zo[65]=3,Go[105]=zo[105]=3,Do[160]=Bo[160]=11,Fo[160]=qo[160]=14,Do[10]=Bo[10]=11,Fo[10]=qo[10]=14,ko[130]=jo[130]=6,Go[130]=zo[130]=3,ko[40]=jo[40]=6,Go[40]=zo[40]=3,Fo[101]=zo[101]=1,Fo[69]=zo[69]=1,qo[149]=jo[149]=21,qo[21]=jo[21]=21,ko[86]=Bo[86]=17,ko[84]=Bo[84]=17,Do[89]=Go[89]=9,Do[81]=Go[81]=9,Do[96]=zo[96]=0,Fo[96]=Bo[96]=15,Do[74]=zo[74]=0,Fo[74]=Bo[74]=15,Do[24]=ko[24]=8,Go[24]=jo[24]=7,Do[146]=ko[146]=8,Go[146]=jo[146]=7,Fo[6]=Bo[6]=15,ko[6]=qo[6]=16,Fo[164]=Bo[164]=15,ko[164]=qo[164]=16,Go[129]=jo[129]=7,qo[129]=zo[129]=20,Go[41]=jo[41]=7,qo[41]=zo[41]=20,ko[66]=zo[66]=2,Go[66]=Bo[66]=19,ko[104]=zo[104]=2,Go[104]=Bo[104]=19,Do[144]=qo[144]=10,Bo[144]=jo[144]=23,Do[26]=qo[26]=10,Bo[26]=jo[26]=23,Fo[36]=jo[36]=5,ko[36]=zo[36]=2,Fo[134]=jo[134]=5,ko[134]=zo[134]=2,Do[9]=qo[9]=10,Fo[9]=Go[9]=13,Do[161]=qo[161]=10,Fo[161]=Go[161]=13,Fo[37]=jo[37]=5,qo[37]=zo[37]=20,Fo[133]=jo[133]=5,qo[133]=zo[133]=20,ko[148]=qo[148]=16,Bo[148]=jo[148]=23,ko[22]=qo[22]=16,Bo[22]=jo[22]=23,Do[82]=ko[82]=8,Go[82]=Bo[82]=19,Do[88]=ko[88]=8,Go[88]=Bo[88]=19,Do[73]=zo[73]=0,Fo[73]=Go[73]=13,Do[97]=zo[97]=0,Fo[97]=Go[97]=13,Do[145]=Go[145]=9,qo[145]=jo[145]=21,Do[25]=Go[25]=9,qo[25]=jo[25]=21,Fo[70]=zo[70]=1,ko[70]=Bo[70]=17,Fo[100]=zo[100]=1,ko[100]=Bo[100]=17,Do[34]=Go[34]=9,Fo[34]=ko[34]=12,qo[34]=jo[34]=21,Bo[34]=zo[34]=22,Do[136]=jo[136]=4,Fo[136]=zo[136]=1,ko[136]=Bo[136]=17,Go[136]=qo[136]=18,Do[35]=jo[35]=4,Fo[35]=ko[35]=12,Go[35]=qo[35]=18,Bo[35]=zo[35]=22,Do[153]=jo[153]=4,Go[153]=qo[153]=18,Fo[102]=ko[102]=12,Bo[102]=zo[102]=22,Do[155]=Go[155]=9,qo[155]=jo[155]=23,Fo[103]=zo[103]=1,ko[103]=Bo[103]=17,Do[152]=jo[152]=4,ko[152]=Bo[152]=17,Go[152]=qo[152]=18,Do[156]=ko[156]=8,Go[156]=qo[156]=18,Bo[156]=jo[156]=23,Do[137]=jo[137]=4,Fo[137]=zo[137]=1,Go[137]=qo[137]=18,Do[139]=jo[139]=4,Fo[139]=Go[139]=13,qo[139]=zo[139]=20,Do[98]=Go[98]=9,Fo[98]=ko[98]=12,Bo[98]=zo[98]=22,Do[99]=zo[99]=0,Fo[99]=ko[99]=12,Go[99]=Bo[99]=19,Fo[38]=ko[38]=12,qo[38]=jo[38]=21,Bo[38]=zo[38]=22,Fo[39]=jo[39]=5,ko[39]=qo[39]=16,Bo[39]=zo[39]=22;var Uo=[];function Vo(t,e,n){return(t-e)/(n-e)}function Xo(t){return t.constructor.toString().indexOf("Array")>-1}function Yo(t,e,n,r,i,o){for(var s=t.cells[n][e],a=s.cval_real,u=e+r,l=n+i,c=[],h=!1;!h;){if(void 0===t.cells[l]||void 0===t.cells[l][u])if(l-=i,u-=r,a=(s=t.cells[l][u]).cval_real,-1===i)if(0===o)if(1&a)c.push([u,l]),r=-1,i=0,o=0;else{if(!(4&a)){c.push([u+s.bottomright,l]),r=0,i=1,o=1,h=!0;break}c.push([u+1,l]),r=1,i=0,o=0}else{if(!(1&a)){if(4&a){c.push([u+s.bottomright,l]),r=0,i=1,o=1,h=!0;break}c.push([u+s.bottomleft,l]),r=0,i=1,o=0,h=!0;break}c.push([u,l]),r=-1,i=0,o=0}else if(1===i)if(0===o){if(!(a&eo)){if(a&to){c.push([u+s.topleft,l+1]),r=0,i=-1,o=0,h=!0;break}c.push([u+s.topright,l+1]),r=0,i=-1,o=1,h=!0;break}c.push([u+1,l+1]),r=1,i=0,o=1}else c.push([u+1,l+1]),r=1,i=0,o=1;else if(-1===r)if(0===o){if(!(a&to)){if(1&a){c.push([u,l+s.leftbottom]),r=1,i=0,o=0,h=!0;break}c.push([u,l+s.lefttop]),r=1,i=0,o=1,h=!0;break}c.push([u,l+1]),r=0,i=1,o=0}else{if(!(a&to)){console.log("MarchingSquaresJS-isoBands: wtf");break}c.push([u,l+1]),r=0,i=1,o=0}else{if(1!==r){console.log("MarchingSquaresJS-isoBands: we came from nowhere!");break}if(0===o){if(!(4&a)){c.push([u+1,l+s.rightbottom]),r=-1,i=0,o=0,h=!0;break}c.push([u+1,l]),r=0,i=-1,o=1}else{if(!(4&a)){if(a&eo){c.push([u+1,l+s.righttop]),r=-1,i=0,o=1;break}c.push([u+1,l+s.rightbottom]),r=-1,i=0,o=0,h=!0;break}c.push([u+1,l]),r=0,i=-1,o=1}}else if(a=(s=t.cells[l][u]).cval_real,-1===r)if(0===o)if(void 0!==t.cells[l-1]&&void 0!==t.cells[l-1][u])r=0,i=-1,o=1;else{if(!(1&a)){c.push([u+s.bottomright,l]),r=0,i=1,o=1,h=!0;break}c.push([u,l])}else{if(!(a&to)){console.log("MarchingSquaresJS-isoBands: found entry from top at "+u+","+l);break}console.log("MarchingSquaresJS-isoBands: proceeding in x-direction!")}else if(1===r){if(0===o){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[l+1]&&void 0!==t.cells[l+1][u])r=0,i=1,o=0;else{if(!(a&eo)){c.push([u+s.topleft,l+1]),r=0,i=-1,o=0,h=!0;break}c.push([u+1,l+1]),r=1,i=0,o=1}}else if(-1===i){if(1!==o){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[l][u+1])r=1,i=0,o=1;else{if(!(4&a)){c.push([u+1,l+s.righttop]),r=-1,i=0,o=1,h=!0;break}c.push([u+1,l]),r=0,i=-1,o=1}}else{if(1!==i){console.log("MarchingSquaresJS-isoBands: where did we came from???");break}if(0!==o){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[l][u-1])r=-1,i=0,o=0;else{if(!(a&to)){c.push([u,l+s.leftbottom]),r=1,i=0,o=0,h=!0;break}c.push([u,l+1]),r=0,i=1,o=0}}if(l+=i,(u+=r)===e&&l===n)break}return{path:c,i:u,j:l,x:r,y:i,o:o}}function Ho(t){if(t.edges.length>0){var e=t.edges[t.edges.length-1],n=t.cval_real;switch(e){case 0:return n&eo?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 1:return 4&n?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 2:return 4&n?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 3:return 1&n?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 4:return n&eo?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 5:return 4&n?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 6:return 4&n?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 7:return 1&n?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 8:return 4&n?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.righttop],x:-1,y:0,o:1};case 9:return 1&n?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 10:return 1&n?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.righttop],x:-1,y:0,o:1};case 11:return n&to?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 12:return 4&n?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 13:return 1&n?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 14:return 1&n?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 15:return n&to?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 16:return 4&n?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 17:return n&to?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 18:return 1&n?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 19:return n&to?{p:[t.bottomleft,0],x:0,y:1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 20:return n&to?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 21:return n&eo?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.topright,1],x:0,y:-1,o:1};case 22:return n&to?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 23:return n&eo?{p:[0,t.lefttop],x:1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};default:console.log("MarchingSquaresJS-isoBands: edge index out of range!"),console.log(t)}}return null}function Wo(t,e,n,r){var i,o,s,a,u,l=t.cval;switch(e){case-1:switch(r){case 0:i=Fo[l],s=ho[l],a=po[l],u=fo[l];break;default:i=Do[l],s=uo[l],a=lo[l],u=co[l]}break;case 1:switch(r){case 0:i=qo[l],s=Io[l],a=No[l],u=So[l];break;default:i=Bo[l],s=Eo[l],a=bo[l],u=wo[l]}break;default:switch(n){case-1:switch(r){case 0:i=zo[l],s=no[l],a=ro[l],u=io[l];break;default:i=jo[l],s=oo[l],a=so[l],u=ao[l]}break;case 1:switch(r){case 0:i=Go[l],s=go[l],a=yo[l],u=vo[l];break;default:i=ko[l],s=_o[l],a=mo[l],u=xo[l]}}}if(o=t.edges.indexOf(i),void 0===t.edges[o])return null;switch(function(t,e){delete t.edges[e];for(var n=e+1;n<t.edges.length;n++)t.edges[n-1]=t.edges[n];t.edges.pop()}(t,o),l=t.cval_real,i){case 0:l&eo?(e=t.topleft,n=1):(e=1,n=t.righttop);break;case 1:4&l?(e=1,n=t.rightbottom):(e=t.topleft,n=1);break;case 2:4&l?(e=t.topleft,n=1):(e=t.bottomright,n=0);break;case 3:1&l?(e=t.bottomleft,n=0):(e=t.topleft,n=1);break;case 4:l&eo?(e=t.topright,n=1):(e=1,n=t.righttop);break;case 5:4&l?(e=1,n=t.rightbottom):(e=t.topright,n=1);break;case 6:4&l?(e=t.topright,n=1):(e=t.bottomright,n=0);break;case 7:1&l?(e=t.bottomleft,n=0):(e=t.topright,n=1);break;case 8:4&l?(e=1,n=t.righttop):(e=t.bottomright,n=0);break;case 9:1&l?(e=t.bottomleft,n=0):(e=1,n=t.righttop);break;case 10:1&l?(e=1,n=t.righttop):(e=0,n=t.leftbottom);break;case 11:l&to?(e=0,n=t.lefttop):(e=1,n=t.righttop);break;case 12:4&l?(e=1,n=t.rightbottom):(e=t.bottomright,n=0);break;case 13:1&l?(e=t.bottomleft,n=0):(e=1,n=t.rightbottom);break;case 14:1&l?(e=1,n=t.rightbottom):(e=0,n=t.leftbottom);break;case 15:l&to?(e=0,n=t.lefttop):(e=1,n=t.rightbottom);break;case 16:4&l?(e=0,n=t.leftbottom):(e=t.bottomright,n=0);break;case 17:l&to?(e=0,n=t.lefttop):(e=t.bottomright,n=0);break;case 18:1&l?(e=t.bottomleft,n=0):(e=0,n=t.leftbottom);break;case 19:l&to?(e=0,n=t.lefttop):(e=t.bottomleft,n=0);break;case 20:l&to?(e=0,n=t.leftbottom):(e=t.topleft,n=1);break;case 21:l&eo?(e=t.topright,n=1):(e=0,n=t.leftbottom);break;case 22:l&to?(e=0,n=t.lefttop):(e=t.topleft,n=1);break;case 23:l&eo?(e=t.topright,n=1):(e=0,n=t.lefttop);break;default:return console.log("MarchingSquaresJS-isoBands: edge index out of range!"),console.log(t),null}return void 0!==e&&void 0!==n&&void 0!==s&&void 0!==a&&void 0!==u||(console.log("MarchingSquaresJS-isoBands: undefined value!"),console.log(t),console.log(e+" "+n+" "+s+" "+a+" "+u)),{p:[e,n],x:s,y:a,o:u}}function Jo(t){var e=[],n=[];t.forEach((function(t){var r=jr(l([t]));n.push(r),e.push({ring:t,area:r})})),n.sort((function(t,e){return e-t}));var r=[];return n.forEach((function(t){for(var n=0;n<e.length;n++)if(e[n].area===t){r.push(e[n].ring),e.splice(n,1);break}})),r}function Zo(t){for(var e=t.map((function(t){return{lrCoordinates:t,grouped:!1}})),n=[];!Qo(e);)for(var r=0;r<e.length;r++)if(!e[r].grouped){var i=[];i.push(e[r].lrCoordinates),e[r].grouped=!0;for(var o=l([e[r].lrCoordinates]),s=r+1;s<e.length;s++){if(!e[s].grouped)Ko(l([e[s].lrCoordinates]),o)&&(i.push(e[s].lrCoordinates),e[s].grouped=!0)}n.push(i)}return n}function Ko(t,e){for(var n=bn(t),r=0;r<n.features.length;r++)if(!ye(n.features[r],e))return!1;return!0}function Qo(t){for(var e=0;e<t.length;e++)if(!1===t[e].grouped)return!1;return!0}function $o(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.pivot,i=n.mutate;if(!t)throw new Error("geojson is required");if(null==e||isNaN(e))throw new Error("angle is required");return 0===e||(r||(r=En(t)),!1!==i&&void 0!==i||(t=Ie(t)),R(t,(function(t){var n=Bi(r,t)+e,i=Ar(r,t),o=Q(ji(r,i,n));t[0]=o[0],t[1]=o[1]}))),t}function ts(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.origin,i=n.mutate;if(!t)throw new Error("geojson required");if("number"!=typeof e||0===e)throw new Error("invalid factor");var o=Array.isArray(r)||"object"==typeof r;return!0!==i&&(t=Ie(t)),"FeatureCollection"!==t.type||o?es(t,e,r):(F(t,(function(n,i){t.features[i]=es(n,e,r)})),t)}function es(t,e,n){var r="Point"===it(t);return n=function(t,e){null==e&&(e="centroid");if(Array.isArray(e)||"object"==typeof e)return K(e);var n=t.bbox?t.bbox:Z(t),r=n[0],i=n[1],o=n[2],s=n[3];switch(e){case"sw":case"southwest":case"westsouth":case"bottomleft":return a([r,i]);case"se":case"southeast":case"eastsouth":case"bottomright":return a([o,i]);case"nw":case"northwest":case"westnorth":case"topleft":return a([r,s]);case"ne":case"northeast":case"eastnorth":case"topright":return a([o,s]);case"center":return xn(t);case void 0:case null:case"centroid":return En(t);default:throw new Error("invalid origin")}}(t,n),1===e||r||R(t,(function(t){var r=Ar(n,t),i=Bi(n,t),o=Q(ji(n,r*e,i));t[0]=o[0],t[1]=o[1],3===t.length&&(t[2]*=e)})),t}function ns(t){var e=t[0],n=t[1];return[n[0]-e[0],n[1]-e[1]]}function rs(t,e){return t[0]*e[1]-e[0]*t[1]}function is(t,e){return!function(t,e){return 0===rs(ns(t),ns(e))}(t,e)&&function(t,e){var n,r,i=t[0],o=ns(t),s=e[0],a=ns(e),u=rs(o,a);return function(t,e){return[t[0]+e[0],t[1]+e[1]]}(i,function(t,e){return[t*e[0],t*e[1]]}(rs((r=i,[(n=s)[0]-r[0],n[1]-r[1]]),a)/u,o))}(t,e)}function os(t,e,n){var r=[],i=E(e,n),o=Q(t),s=[];return o.forEach((function(t,e){if(e!==o.length-1){var n=(l=t,c=o[e+1],h=i,p=Math.sqrt((l[0]-c[0])*(l[0]-c[0])+(l[1]-c[1])*(l[1]-c[1])),f=l[0]+h*(c[1]-l[1])/p,g=c[0]+h*(c[1]-l[1])/p,d=l[1]+h*(l[0]-c[0])/p,y=c[1]+h*(l[0]-c[0])/p,[[f,d],[g,y]]);if(r.push(n),e>0){var a=r[e-1],u=is(n,a);!1!==u&&(a[1]=u,n[0]=u),s.push(a[0]),e===o.length-2&&(s.push(n[0]),s.push(n[1]))}2===o.length&&(s.push(n[0]),s.push(n[1]))}var l,c,h,p,f,g,d,y})),h(s,t.properties)}function ss(t,e,n){var r=e[0]-t[0],i=e[1]-t[1],o=n[0]-e[0];return function(t){return(t>0)-(t<0)||+t}(r*(n[1]-e[1])-o*i)}function as(t,e){return e.geometry.coordinates[0].every((function(e){return ye(a(e),t)}))}Uo[1]=Uo[169]=Co,Uo[4]=Uo[166]=Po,Uo[16]=Uo[154]=Mo,Uo[64]=Uo[106]=Lo,Uo[168]=Uo[2]=Oo,Uo[162]=Uo[8]=Ro,Uo[138]=Uo[32]=To,Uo[42]=Uo[128]=Ao,Uo[5]=Uo[165]=function(t){return[[0,0],[0,t.leftbottom],[1,t.rightbottom],[1,0]]},Uo[20]=Uo[150]=function(t){return[[1,0],[t.bottomright,0],[t.topright,1],[1,1]]},Uo[80]=Uo[90]=function(t){return[[1,1],[1,t.righttop],[0,t.lefttop],[0,1]]},Uo[65]=Uo[105]=function(t){return[[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},Uo[160]=Uo[10]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.leftbottom],[0,t.lefttop]]},Uo[130]=Uo[40]=function(t){return[[t.topleft,1],[t.topright,1],[t.bottomright,0],[t.bottomleft,0]]},Uo[85]=function(){return[[0,0],[0,1],[1,1],[1,0]]},Uo[101]=Uo[69]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,1],[t.topleft,1]]},Uo[149]=Uo[21]=function(t){return[[t.topright,1],[1,1],[1,0],[0,0],[0,t.leftbottom]]},Uo[86]=Uo[84]=function(t){return[[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[1,1]]},Uo[89]=Uo[81]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,1]]},Uo[96]=Uo[74]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.lefttop],[0,1],[t.topleft,1]]},Uo[24]=Uo[146]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[t.topright,1]]},Uo[6]=Uo[164]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop]]},Uo[129]=Uo[41]=function(t){return[[t.topright,1],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1]]},Uo[66]=Uo[104]=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Uo[144]=Uo[26]=function(t){return[[1,1],[1,t.righttop],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Uo[36]=Uo[134]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[t.topleft,1],[t.topright,1]]},Uo[9]=Uo[161]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom]]},Uo[37]=Uo[133]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},Uo[148]=Uo[22]=function(t){return[[1,1],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Uo[82]=Uo[88]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1]]},Uo[73]=Uo[97]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},Uo[145]=Uo[25]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},Uo[70]=Uo[100]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Uo[34]=function(t){return[Ao(t),Ro(t)]},Uo[35]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},Uo[136]=function(t){return[To(t),Oo(t)]},Uo[153]=function(t){return[Mo(t),Co(t)]},Uo[102]=function(t){return[Po(t),Lo(t)]},Uo[155]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},Uo[103]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Uo[152]=function(t){return[Mo(t),Oo(t)]},Uo[156]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Uo[137]=function(t){return[To(t),Co(t)]},Uo[139]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},Uo[98]=function(t){return[Ro(t),Lo(t)]},Uo[99]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Uo[38]=function(t){return[Po(t),Ao(t)]},Uo[39]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]};var us=function(){function t(e){this.id=t.buildId(e),this.coordinates=e,this.innerEdges=[],this.outerEdges=[],this.outerEdgesSorted=!1}return t.buildId=function(t){return t.join(",")},t.prototype.removeInnerEdge=function(t){this.innerEdges=this.innerEdges.filter((function(e){return e.from.id!==t.from.id}))},t.prototype.removeOuterEdge=function(t){this.outerEdges=this.outerEdges.filter((function(e){return e.to.id!==t.to.id}))},t.prototype.addOuterEdge=function(t){this.outerEdges.push(t),this.outerEdgesSorted=!1},t.prototype.sortOuterEdges=function(){var t=this;this.outerEdgesSorted||(this.outerEdges.sort((function(e,n){var r=e.to,i=n.to;if(r.coordinates[0]-t.coordinates[0]>=0&&i.coordinates[0]-t.coordinates[0]<0)return 1;if(r.coordinates[0]-t.coordinates[0]<0&&i.coordinates[0]-t.coordinates[0]>=0)return-1;if(r.coordinates[0]-t.coordinates[0]==0&&i.coordinates[0]-t.coordinates[0]==0)return r.coordinates[1]-t.coordinates[1]>=0||i.coordinates[1]-t.coordinates[1]>=0?r.coordinates[1]-i.coordinates[1]:i.coordinates[1]-r.coordinates[1];var o=ss(t.coordinates,r.coordinates,i.coordinates);return o<0?1:o>0?-1:Math.pow(r.coordinates[0]-t.coordinates[0],2)+Math.pow(r.coordinates[1]-t.coordinates[1],2)-(Math.pow(i.coordinates[0]-t.coordinates[0],2)+Math.pow(i.coordinates[1]-t.coordinates[1],2))})),this.outerEdgesSorted=!0)},t.prototype.getOuterEdges=function(){return this.sortOuterEdges(),this.outerEdges},t.prototype.getOuterEdge=function(t){return this.sortOuterEdges(),this.outerEdges[t]},t.prototype.addInnerEdge=function(t){this.innerEdges.push(t)},t}(),ls=function(){function t(t,e){this.from=t,this.to=e,this.next=void 0,this.label=void 0,this.symetric=void 0,this.ring=void 0,this.from.addOuterEdge(this),this.to.addInnerEdge(this)}return t.prototype.getSymetric=function(){return this.symetric||(this.symetric=new t(this.to,this.from),this.symetric.symetric=this),this.symetric},t.prototype.deleteEdge=function(){this.from.removeOuterEdge(this),this.to.removeInnerEdge(this)},t.prototype.isEqual=function(t){return this.from.id===t.from.id&&this.to.id===t.to.id},t.prototype.toString=function(){return"Edge { "+this.from.id+" -> "+this.to.id+" }"},t.prototype.toLineString=function(){return h([this.from.coordinates,this.to.coordinates])},t.prototype.compareTo=function(t){return ss(t.from.coordinates,t.to.coordinates,this.to.coordinates)},t}(),cs=function(){function t(){this.edges=[],this.polygon=void 0,this.envelope=void 0}return t.prototype.push=function(t){this.edges.push(t),this.polygon=this.envelope=void 0},t.prototype.get=function(t){return this.edges[t]},Object.defineProperty(t.prototype,"length",{get:function(){return this.edges.length},enumerable:!0,configurable:!0}),t.prototype.forEach=function(t){this.edges.forEach(t)},t.prototype.map=function(t){return this.edges.map(t)},t.prototype.some=function(t){return this.edges.some(t)},t.prototype.isValid=function(){return!0},t.prototype.isHole=function(){var t=this,e=this.edges.reduce((function(e,n,r){return n.from.coordinates[1]>t.edges[e].from.coordinates[1]&&(e=r),e}),0),n=(0===e?this.length:e)-1,r=(e+1)%this.length,i=ss(this.edges[n].from.coordinates,this.edges[e].from.coordinates,this.edges[r].from.coordinates);return 0===i?this.edges[n].from.coordinates[0]>this.edges[r].from.coordinates[0]:i>0},t.prototype.toMultiPoint=function(){return d(this.edges.map((function(t){return t.from.coordinates})))},t.prototype.toPolygon=function(){if(this.polygon)return this.polygon;var t=this.edges.map((function(t){return t.from.coordinates}));return t.push(this.edges[0].from.coordinates),this.polygon=l([t])},t.prototype.getEnvelope=function(){return this.envelope?this.envelope:this.envelope=dn(this.toPolygon())},t.findEdgeRingContaining=function(t,e){var n,r,i=t.getEnvelope();return e.forEach((function(e){var o,s,u,l,c,h,p=e.getEnvelope();if((r&&(n=r.getEnvelope()),s=i,u=(o=p).geometry.coordinates[0].map((function(t){return t[0]})),l=o.geometry.coordinates[0].map((function(t){return t[1]})),c=s.geometry.coordinates[0].map((function(t){return t[0]})),h=s.geometry.coordinates[0].map((function(t){return t[1]})),Math.max.apply(null,u)!==Math.max.apply(null,c)||Math.max.apply(null,l)!==Math.max.apply(null,h)||Math.min.apply(null,u)!==Math.min.apply(null,c)||Math.min.apply(null,l)!==Math.min.apply(null,h))&&as(p,i)){for(var f=t.map((function(t){return t.from.coordinates})),g=void 0,d=function(t){e.some((function(e){return n=t,r=e.from.coordinates,n[0]===r[0]&&n[1]===r[1];var n,r}))||(g=t)},y=0,v=f;y<v.length;y++){d(v[y])}g&&e.inside(a(g))&&(r&&!as(n,p)||(r=e))}})),r},t.prototype.inside=function(t){return ye(t,this.toPolygon())},t}();var hs=function(){function t(){this.edges=[],this.nodes={}}return t.fromGeoJson=function(e){!function(t){if(!t)throw new Error("No geojson passed");if("FeatureCollection"!==t.type&&"GeometryCollection"!==t.type&&"MultiLineString"!==t.type&&"LineString"!==t.type&&"Feature"!==t.type)throw new Error("Invalid input type '"+t.type+"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature")}(e);var n=new t;return z(e,(function(t){et(t,"LineString","Graph::fromGeoJson"),T(t,(function(t,e){if(t){var r=n.getNode(t),i=n.getNode(e);n.addEdge(r,i)}return e}))})),n},t.prototype.getNode=function(t){var e=us.buildId(t),n=this.nodes[e];return n||(n=this.nodes[e]=new us(t)),n},t.prototype.addEdge=function(t,e){var n=new ls(t,e),r=n.getSymetric();this.edges.push(n),this.edges.push(r)},t.prototype.deleteDangles=function(){var t=this;Object.keys(this.nodes).map((function(e){return t.nodes[e]})).forEach((function(e){return t._removeIfDangle(e)}))},t.prototype._removeIfDangle=function(t){var e=this;if(t.innerEdges.length<=1){var n=t.getOuterEdges().map((function(t){return t.to}));this.removeNode(t),n.forEach((function(t){return e._removeIfDangle(t)}))}},t.prototype.deleteCutEdges=function(){var t=this;this._computeNextCWEdges(),this._findLabeledEdgeRings(),this.edges.forEach((function(e){e.label===e.symetric.label&&(t.removeEdge(e.symetric),t.removeEdge(e))}))},t.prototype._computeNextCWEdges=function(t){var e=this;void 0===t?Object.keys(this.nodes).forEach((function(t){return e._computeNextCWEdges(e.nodes[t])})):t.getOuterEdges().forEach((function(e,n){t.getOuterEdge((0===n?t.getOuterEdges().length:n)-1).symetric.next=e}))},t.prototype._computeNextCCWEdges=function(t,e){for(var n,r,i=t.getOuterEdges(),o=i.length-1;o>=0;--o){var s=i[o],a=s.symetric,u=void 0,l=void 0;s.label===e&&(u=s),a.label===e&&(l=a),u&&l&&(l&&(r=l),u&&(r&&(r.next=u,r=void 0),n||(n=u)))}r&&(r.next=n)},t.prototype._findLabeledEdgeRings=function(){var t=[],e=0;return this.edges.forEach((function(n){if(!(n.label>=0)){t.push(n);var r=n;do{r.label=e,r=r.next}while(!n.isEqual(r));e++}})),t},t.prototype.getEdgeRings=function(){var t=this;this._computeNextCWEdges(),this.edges.forEach((function(t){t.label=void 0})),this._findLabeledEdgeRings().forEach((function(e){t._findIntersectionNodes(e).forEach((function(n){t._computeNextCCWEdges(n,e.label)}))}));var e=[];return this.edges.forEach((function(n){n.ring||e.push(t._findEdgeRing(n))})),e},t.prototype._findIntersectionNodes=function(t){var e=[],n=t,r=function(){var r=0;n.from.getOuterEdges().forEach((function(e){e.label===t.label&&++r})),r>1&&e.push(n.from),n=n.next};do{r()}while(!t.isEqual(n));return e},t.prototype._findEdgeRing=function(t){var e=t,n=new cs;do{n.push(e),e.ring=n,e=e.next}while(!t.isEqual(e));return n},t.prototype.removeNode=function(t){var e=this;t.getOuterEdges().forEach((function(t){return e.removeEdge(t)})),t.innerEdges.forEach((function(t){return e.removeEdge(t)})),delete this.nodes[t.id]},t.prototype.removeEdge=function(t){this.edges=this.edges.filter((function(e){return!e.isEqual(t)})),t.deleteEdge()},t}();function ps(t,e){var n=!0;return z(t,(function(t){z(e,(function(e){if(!1===n)return!1;n=function(t,e){switch(t.type){case"Point":switch(e.type){case"Point":return n=t.coordinates,r=e.coordinates,!(n[0]===r[0]&&n[1]===r[1]);case"LineString":return!fs(e,t);case"Polygon":return!ye(t,e)}break;case"LineString":switch(e.type){case"Point":return!fs(t,e);case"LineString":return!function(t,e){if(Or(t,e).features.length>0)return!0;return!1}(t,e);case"Polygon":return!gs(e,t)}break;case"Polygon":switch(e.type){case"Point":return!ye(e,t);case"LineString":return!gs(t,e);case"Polygon":return!function(t,e){for(var n=0,r=t.coordinates[0];n<r.length;n++){if(ye(r[n],e))return!0}for(var i=0,o=e.coordinates[0];i<o.length;i++){if(ye(o[i],t))return!0}if(Or(Ii(t),Ii(e)).features.length>0)return!0;return!1}(e,t)}}var n,r;return!1}(t.geometry,e.geometry)}))})),n}function fs(t,e){for(var n=0;n<t.coordinates.length-1;n++)if(ds(t.coordinates[n],t.coordinates[n+1],e.coordinates))return!0;return!1}function gs(t,e){for(var n=0,r=e.coordinates;n<r.length;n++){if(ye(r[n],t))return!0}return Or(e,Ii(t)).features.length>0}function ds(t,e,n){var r=n[0]-t[0],i=n[1]-t[1],o=e[0]-t[0],s=e[1]-t[1];return 0==r*s-i*o&&(Math.abs(o)>=Math.abs(s)?o>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:s>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1])}function ys(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function vs(t,e){return t[0]===e[0]&&t[1]===e[1]}function _s(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}function ms(t,e){for(var n=!1,r=!1,i=t.coordinates.length,o=0;o<i&&!n&&!r;){for(var s=0;s<e.coordinates.length-1;s++){var a=!0;0!==s&&s!==e.coordinates.length-2||(a=!1),bs(e.coordinates[s],e.coordinates[s+1],t.coordinates[o],a)?n=!0:r=!0}o++}return n&&r}function xs(t,e){return Or(t,Ni(e)).features.length>0}function Es(t,e){for(var n=!1,r=!1,i=t.coordinates.length,o=0;o<i&&(!n||!r);o++)ye(a(t.coordinates[o]),e)?n=!0:r=!0;return r&&n}function bs(t,e,n,r){var i=n[0]-t[0],o=n[1]-t[1],s=e[0]-t[0],a=e[1]-t[1];return 0==i*a-o*s&&(r?Math.abs(s)>=Math.abs(a)?s>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:a>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1]:Math.abs(s)>=Math.abs(a)?s>0?t[0]<n[0]&&n[0]<e[0]:e[0]<n[0]&&n[0]<t[0]:a>0?t[1]<n[1]&&n[1]<e[1]:e[1]<n[1]&&n[1]<t[1])}var ws=function(t){this.precision=t&&t.precision?t.precision:17,this.direction=!(!t||!t.direction)&&t.direction,this.pseudoNode=!(!t||!t.pseudoNode)&&t.pseudoNode,this.objectComparator=t&&t.objectComparator?t.objectComparator:Ss};function Is(t){return t.coordinates.map((function(e){return{type:t.type.replace("Multi",""),coordinates:e}}))}function Ns(t,e){return t.hasOwnProperty("coordinates")?t.coordinates.length===e.coordinates.length:t.length===e.length}function Ss(t,e){return Fi(t,e,{strict:!0})}ws.prototype.compare=function(t,e){if(t.type!==e.type||!Ns(t,e))return!1;switch(t.type){case"Point":return this.compareCoord(t.coordinates,e.coordinates);case"LineString":return this.compareLine(t.coordinates,e.coordinates,0,!1);case"Polygon":return this.comparePolygon(t,e);case"Feature":return this.compareFeature(t,e);default:if(0===t.type.indexOf("Multi")){var n=this,r=Is(t),i=Is(e);return r.every((function(t){return this.some((function(e){return n.compare(t,e)}))}),i)}}return!1},ws.prototype.compareCoord=function(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n].toFixed(this.precision)!==e[n].toFixed(this.precision))return!1;return!0},ws.prototype.compareLine=function(t,e,n,r){if(!Ns(t,e))return!1;var i=this.pseudoNode?t:this.removePseudo(t),o=this.pseudoNode?e:this.removePseudo(e);if(!r||this.compareCoord(i[0],o[0])||(o=this.fixStartIndex(o,i))){var s=this.compareCoord(i[n],o[n]);return this.direction||s?this.comparePath(i,o):!!this.compareCoord(i[n],o[o.length-(1+n)])&&this.comparePath(i.slice().reverse(),o)}},ws.prototype.fixStartIndex=function(t,e){for(var n,r=-1,i=0;i<t.length;i++)if(this.compareCoord(t[i],e[0])){r=i;break}return r>=0&&(n=[].concat(t.slice(r,t.length),t.slice(1,r+1))),n},ws.prototype.comparePath=function(t,e){var n=this;return t.every((function(t,e){return n.compareCoord(t,this[e])}),e)},ws.prototype.comparePolygon=function(t,e){if(this.compareLine(t.coordinates[0],e.coordinates[0],1,!0)){var n=t.coordinates.slice(1,t.coordinates.length),r=e.coordinates.slice(1,e.coordinates.length),i=this;return n.every((function(t){return this.some((function(e){return i.compareLine(t,e,1,!0)}))}),r)}return!1},ws.prototype.compareFeature=function(t,e){return!(t.id!==e.id||!this.objectComparator(t.properties,e.properties)||!this.compareBBox(t,e))&&this.compare(t.geometry,e.geometry)},ws.prototype.compareBBox=function(t,e){return!!(!t.bbox&&!e.bbox||t.bbox&&e.bbox&&this.compareCoord(t.bbox,e.bbox))},ws.prototype.removePseudo=function(t){return t};var Cs=ws;function Ps(t,e){var n=!1;return z(t,(function(t){z(e,(function(e){if(!0===n)return!0;n=!ps(t.geometry,e.geometry)}))})),n}var Ms=Bt((function(t){function e(t,e,n,r){this.dataset=[],this.epsilon=1,this.minPts=2,this.distance=this._euclideanDistance,this.clusters=[],this.noise=[],this._visited=[],this._assigned=[],this._datasetLength=0,this._init(t,e,n,r)}e.prototype.run=function(t,e,n,r){this._init(t,e,n,r);for(var i=0;i<this._datasetLength;i++)if(1!==this._visited[i]){this._visited[i]=1;var o=this._regionQuery(i);if(o.length<this.minPts)this.noise.push(i);else{var s=this.clusters.length;this.clusters.push([]),this._addToCluster(i,s),this._expandCluster(s,o)}}return this.clusters},e.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this.noise=[],this._datasetLength=t.length,this._visited=new Array(this._datasetLength),this._assigned=new Array(this._datasetLength)}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},e.prototype._expandCluster=function(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(1!==this._visited[r]){this._visited[r]=1;var i=this._regionQuery(r);i.length>=this.minPts&&(e=this._mergeArrays(e,i))}1!==this._assigned[r]&&this._addToCluster(r,t)}},e.prototype._addToCluster=function(t,e){this.clusters[e].push(t),this._assigned[t]=1},e.prototype._regionQuery=function(t){for(var e=[],n=0;n<this._datasetLength;n++){this.distance(this.dataset[t],this.dataset[n])<this.epsilon&&e.push(n)}return e},e.prototype._mergeArrays=function(t,e){for(var n=e.length,r=0;r<n;r++){var i=e[r];t.indexOf(i)<0&&t.push(i)}return t},e.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=e)})),Ls=Bt((function(t){function e(t,e,n){this.k=3,this.dataset=[],this.assignments=[],this.centroids=[],this.init(t,e,n)}e.prototype.init=function(t,e,n){this.assignments=[],this.centroids=[],void 0!==t&&(this.dataset=t),void 0!==e&&(this.k=e),void 0!==n&&(this.distance=n)},e.prototype.run=function(t,e){this.init(t,e);for(var n=this.dataset.length,r=0;r<this.k;r++)this.centroids[r]=this.randomCentroid();for(var i=!0;i;){i=this.assign();for(var o=0;o<this.k;o++){for(var s=new Array(c),a=0,u=0;u<c;u++)s[u]=0;for(var l=0;l<n;l++){var c=this.dataset[l].length;if(o===this.assignments[l]){for(u=0;u<c;u++)s[u]+=this.dataset[l][u];a++}}if(a>0){for(u=0;u<c;u++)s[u]/=a;this.centroids[o]=s}else this.centroids[o]=this.randomCentroid(),i=!0}}return this.getClusters()},e.prototype.randomCentroid=function(){var t,e,n=this.dataset.length-1;do{e=Math.round(Math.random()*n),t=this.dataset[e]}while(this.centroids.indexOf(t)>=0);return t},e.prototype.assign=function(){for(var t,e=!1,n=this.dataset.length,r=0;r<n;r++)(t=this.argmin(this.dataset[r],this.centroids,this.distance))!=this.assignments[r]&&(this.assignments[r]=t,e=!0);return e},e.prototype.getClusters=function(){for(var t,e=new Array(this.k),n=0;n<this.assignments.length;n++)void 0===e[t=this.assignments[n]]&&(e[t]=[]),e[t].push(n);return e},e.prototype.argmin=function(t,e,n){for(var r,i=Number.MAX_VALUE,o=0,s=e.length,a=0;a<s;a++)(r=n(t,e[a]))<i&&(i=r,o=a);return o},e.prototype.distance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;){var i=t[r]-e[r];n+=i*i}return Math.sqrt(n)},t.exports&&(t.exports=e)})),Os=Bt((function(t){function e(t,e,n){this._queue=[],this._priorities=[],this._sorting="desc",this._init(t,e,n)}e.prototype.insert=function(t,e){for(var n=this._queue.length,r=n;r--;){var i=this._priorities[r];"desc"===this._sorting?e>i&&(n=r):e<i&&(n=r)}this._insertAt(t,e,n)},e.prototype.remove=function(t){for(var e=this._queue.length;e--;){if(t===this._queue[e]){this._queue.splice(e,1),this._priorities.splice(e,1);break}}},e.prototype.forEach=function(t){this._queue.forEach(t)},e.prototype.getElements=function(){return this._queue},e.prototype.getElementPriority=function(t){return this._priorities[t]},e.prototype.getPriorities=function(){return this._priorities},e.prototype.getElementsWithPriorities=function(){for(var t=[],e=0,n=this._queue.length;e<n;e++)t.push([this._queue[e],this._priorities[e]]);return t},e.prototype._init=function(t,e,n){if(t&&e){if(this._queue=[],this._priorities=[],t.length!==e.length)throw new Error("Arrays must have the same length");for(var r=0;r<t.length;r++)this.insert(t[r],e[r])}n&&(this._sorting=n)},e.prototype._insertAt=function(t,e,n){this._queue.length===n?(this._queue.push(t),this._priorities.push(e)):(this._queue.splice(n,0,t),this._priorities.splice(n,0,e))},t.exports&&(t.exports=e)})),Rs=Bt((function(t){if(t.exports)var e=Os;function n(t,e,n,r){this.epsilon=1,this.minPts=1,this.distance=this._euclideanDistance,this._reachability=[],this._processed=[],this._coreDistance=0,this._orderedList=[],this._init(t,e,n,r)}n.prototype.run=function(t,n,r,i){this._init(t,n,r,i);for(var o=0,s=this.dataset.length;o<s;o++)if(1!==this._processed[o]){this._processed[o]=1,this.clusters.push([o]);var a=this.clusters.length-1;this._orderedList.push(o);var u=new e(null,null,"asc"),l=this._regionQuery(o);void 0!==this._distanceToCore(o)&&(this._updateQueue(o,l,u),this._expandCluster(a,u))}return this.clusters},n.prototype.getReachabilityPlot=function(){for(var t=[],e=0,n=this._orderedList.length;e<n;e++){var r=this._orderedList[e],i=this._reachability[r];t.push([r,i])}return t},n.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this._reachability=new Array(this.dataset.length),this._processed=new Array(this.dataset.length),this._coreDistance=0,this._orderedList=[]}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},n.prototype._updateQueue=function(t,e,n){var r=this;this._coreDistance=this._distanceToCore(t),e.forEach((function(e){if(void 0===r._processed[e]){var i=r.distance(r.dataset[t],r.dataset[e]),o=Math.max(r._coreDistance,i);void 0===r._reachability[e]?(r._reachability[e]=o,n.insert(e,o)):o<r._reachability[e]&&(r._reachability[e]=o,n.remove(e),n.insert(e,o))}}))},n.prototype._expandCluster=function(t,e){for(var n=e.getElements(),r=0,i=n.length;r<i;r++){var o=n[r];if(void 0===this._processed[o]){var s=this._regionQuery(o);this._processed[o]=1,this.clusters[t].push(o),this._orderedList.push(o),void 0!==this._distanceToCore(o)&&(this._updateQueue(o,s,e),this._expandCluster(t,e))}}},n.prototype._distanceToCore=function(t){for(var e=this.epsilon,n=0;n<e;n++){if(this._regionQuery(t,n).length>=this.minPts)return n}},n.prototype._regionQuery=function(t,e){e=e||this.epsilon;for(var n=[],r=0,i=this.dataset.length;r<i;r++)this.distance(this.dataset[t],this.dataset[r])<e&&n.push(r);return n},n.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=n)})),Ts=Bt((function(t){t.exports&&(t.exports={DBSCAN:Ms,KMEANS:Ls,OPTICS:Rs,PriorityQueue:Os})}));var As=function(t,e,n){for(var r=t.length,i=0,o=0;o<r;o++){var s=(t[o]||0)-(e[o]||0);i+=s*s}return n?Math.sqrt(i):i},Ds=As,Fs=function(t,e,n){var r=Math.abs(t-e);return n?r:r*r},ks=As,Gs=function(t,e){for(var n={},r=[],i=e<<2,o=t.length,s=t[0].length>0;r.length<e&&i-- >0;){var a=t[Math.floor(Math.random()*o)],u=s?a.join("_"):""+a;n[u]||(n[u]=!0,r.push(a))}if(r.length<e)throw new Error("Error initializating clusters");return r},qs=function(t,e){var n=t[0].length?Ds:Fs,r=[],i=t.length,o=t[0].length>0,s=t[Math.floor(Math.random()*i)];o&&s.join("_");for(r.push(s);r.length<e;){for(var a=[],u=r.length,l=0,c=[],h=0;h<i;h++){for(var p=1/0,f=0;f<u;f++){var g=n(t[h],r[f]);g<=p&&(p=g)}a[h]=p}for(var d=0;d<i;d++)l+=a[d];for(var y=0;y<i;y++)c[y]={i:y,v:t[y],pr:a[y]/l,cs:0};c.sort((function(t,e){return t.pr-e.pr})),c[0].cs=c[0].pr;for(var v=1;v<i;v++)c[v].cs=c[v-1].cs+c[v].pr;for(var _=Math.random(),m=0;m<i-1&&c[m++].cs<_;);r.push(c[m-1].v)}return r};function Bs(t,e,n){n=n||[];for(var r=0;r<t;r++)n[r]=e;return n}var zs=function(t,e,n,r){var i=[],o=[],s=[],a=[],u=!1,l=r||1e4,c=t.length,h=t[0].length,p=h>0,f=[];if(n)i="kmrand"==n?Gs(t,e):"kmpp"==n?qs(t,e):n;else for(var g={};i.length<e;){var d=Math.floor(Math.random()*c);g[d]||(g[d]=!0,i.push(t[d]))}do{Bs(e,0,f);for(var y=0;y<c;y++){for(var v=1/0,_=0,m=0;m<e;m++){(a=p?ks(t[y],i[m]):Math.abs(t[y]-i[m]))<=v&&(v=a,_=m)}s[y]=_,f[_]++}for(var x=[],E=(o=[],0);E<e;E++)x[E]=p?Bs(h,0,x[E]):0,o[E]=i[E];if(p){for(var b=0;b<e;b++)i[b]=[];for(var w=0;w<c;w++)for(var I=x[s[w]],N=t[w],S=0;S<h;S++)I[S]+=N[S];u=!0;for(var C=0;C<e;C++){for(var P=i[C],M=x[C],L=o[C],O=f[C],R=0;R<h;R++)P[R]=M[R]/O||0;if(u)for(var T=0;T<h;T++)if(L[T]!=P[T]){u=!1;break}}}else{for(var A=0;A<c;A++){x[s[A]]+=t[A]}for(var D=0;D<e;D++)i[D]=x[D]/f[D]||0;u=!0;for(var F=0;F<e;F++)if(o[F]!=i[F]){u=!1;break}}u=u||--l<=0}while(!u);return{it:1e4-l,k:e,idxs:s,centroids:i}};function js(t,e){return b(Bi(t[0],t[1]))===b(Bi(e[0],e[1]))}function Us(t,e){if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error("Invalid GeoJSON object for "+e)}function Vs(t){for(var e=t,n=[];e.parent;)n.unshift(e),e=e.parent;return n}var Xs={search:function(t,e,n,r){t.cleanDirty();var i=(r=r||{}).heuristic||Xs.heuristics.manhattan,o=r.closest||!1,s=new Ws((function(t){return t.f})),a=e;for(e.h=i(e,n),s.push(e);s.size()>0;){var u=s.pop();if(u===n)return Vs(u);u.closed=!0;for(var l=t.neighbors(u),c=0,h=l.length;c<h;++c){var p=l[c];if(!p.closed&&!p.isWall()){var f=u.g+p.getCost(u),g=p.visited;(!g||f<p.g)&&(p.visited=!0,p.parent=u,p.h=p.h||i(p,n),p.g=f,p.f=p.g+p.h,t.markDirty(p),o&&(p.h<a.h||p.h===a.h&&p.g<a.g)&&(a=p),g?s.rescoreElement(p):s.push(p))}}}return o?Vs(a):[]},heuristics:{manhattan:function(t,e){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)},diagonal:function(t,e){var n=Math.sqrt(2),r=Math.abs(e.x-t.x),i=Math.abs(e.y-t.y);return 1*(r+i)+(n-2)*Math.min(r,i)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function Ys(t,e){e=e||{},this.nodes=[],this.diagonal=!!e.diagonal,this.grid=[];for(var n=0;n<t.length;n++){this.grid[n]=[];for(var r=0,i=t[n];r<i.length;r++){var o=new Hs(n,r,i[r]);this.grid[n][r]=o,this.nodes.push(o)}}this.init()}function Hs(t,e,n){this.x=t,this.y=e,this.weight=n}function Ws(t){this.content=[],this.scoreFunction=t}function Js(t,e){for(var n=0;n<e.features.length;n++)if(ye(t,e.features[n]))return!0;return!1}function Zs(t){return function(){return t}}function Ks(t){return t[0]}function Qs(t){return t[1]}function $s(){this._=null}function ta(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function ea(t,e){var n=e,r=e.R,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function na(t,e){var n=e,r=e.L,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function ra(t){for(;t.L;)t=t.L;return t}function ia(t,e,n,r){var i=[null,null],o=Pa.push(i)-1;return i.left=t,i.right=e,n&&sa(i,t,e,n),r&&sa(i,e,t,r),Sa[t.index].halfedges.push(o),Sa[e.index].halfedges.push(o),i}function oa(t,e,n){var r=[e,n];return r.left=t,r}function sa(t,e,n,r){t[0]||t[1]?t.left===n?t[1]=r:t[0]=r:(t[0]=r,t.left=e,t.right=n)}function aa(t,e,n,r,i){var o,s=t[0],a=t[1],u=s[0],l=s[1],c=0,h=1,p=a[0]-u,f=a[1]-l;if(o=e-u,p||!(o>0)){if(o/=p,p<0){if(o<c)return;o<h&&(h=o)}else if(p>0){if(o>h)return;o>c&&(c=o)}if(o=r-u,p||!(o<0)){if(o/=p,p<0){if(o>h)return;o>c&&(c=o)}else if(p>0){if(o<c)return;o<h&&(h=o)}if(o=n-l,f||!(o>0)){if(o/=f,f<0){if(o<c)return;o<h&&(h=o)}else if(f>0){if(o>h)return;o>c&&(c=o)}if(o=i-l,f||!(o<0)){if(o/=f,f<0){if(o>h)return;o>c&&(c=o)}else if(f>0){if(o<c)return;o<h&&(h=o)}return!(c>0||h<1)||(c>0&&(t[0]=[u+c*p,l+c*f]),h<1&&(t[1]=[u+h*p,l+h*f]),!0)}}}}}function ua(t,e,n,r,i){var o=t[1];if(o)return!0;var s,a,u=t[0],l=t.left,c=t.right,h=l[0],p=l[1],f=c[0],g=c[1],d=(h+f)/2,y=(p+g)/2;if(g===p){if(d<e||d>=r)return;if(h>f){if(u){if(u[1]>=i)return}else u=[d,n];o=[d,i]}else{if(u){if(u[1]<n)return}else u=[d,i];o=[d,n]}}else if(a=y-(s=(h-f)/(g-p))*d,s<-1||s>1)if(h>f){if(u){if(u[1]>=i)return}else u=[(n-a)/s,n];o=[(i-a)/s,i]}else{if(u){if(u[1]<n)return}else u=[(i-a)/s,i];o=[(n-a)/s,n]}else if(p<g){if(u){if(u[0]>=r)return}else u=[e,s*e+a];o=[r,s*r+a]}else{if(u){if(u[0]<e)return}else u=[r,s*r+a];o=[e,s*e+a]}return t[0]=u,t[1]=o,!0}function la(t,e){var n=t.site,r=e.left,i=e.right;return n===i&&(i=r,r=n),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(n===r?(r=e[1],i=e[0]):(r=e[0],i=e[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function ca(t,e){return e[+(e.left!==t.site)]}function ha(t,e){return e[+(e.left===t.site)]}Ys.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)Xs.cleanNode(this.nodes[t])},Ys.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)Xs.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},Ys.prototype.markDirty=function(t){this.dirtyNodes.push(t)},Ys.prototype.neighbors=function(t){var e=[],n=t.x,r=t.y,i=this.grid;return i[n-1]&&i[n-1][r]&&e.push(i[n-1][r]),i[n+1]&&i[n+1][r]&&e.push(i[n+1][r]),i[n]&&i[n][r-1]&&e.push(i[n][r-1]),i[n]&&i[n][r+1]&&e.push(i[n][r+1]),this.diagonal&&(i[n-1]&&i[n-1][r-1]&&e.push(i[n-1][r-1]),i[n+1]&&i[n+1][r-1]&&e.push(i[n+1][r-1]),i[n-1]&&i[n-1][r+1]&&e.push(i[n-1][r+1]),i[n+1]&&i[n+1][r+1]&&e.push(i[n+1][r+1])),e},Ys.prototype.toString=function(){for(var t,e,n,r,i=[],o=this.grid,s=0,a=o.length;s<a;s++){for(t=[],n=0,r=(e=o[s]).length;n<r;n++)t.push(e[n].weight);i.push(t.join(" "))}return i.join("\n")},Hs.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},Hs.prototype.getCost=function(t){return t&&t.x!==this.x&&t.y!==this.y?1.41421*this.weight:this.weight},Hs.prototype.isWall=function(){return 0===this.weight},Ws.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t},remove:function(t){var e=this.content.indexOf(t),n=this.content.pop();e!==this.content.length-1&&(this.content[e]=n,this.scoreFunction(n)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var e=this.content[t];t>0;){var n=(t+1>>1)-1,r=this.content[n];if(!(this.scoreFunction(e)<this.scoreFunction(r)))break;this.content[n]=e,this.content[t]=r,t=n}},bubbleUp:function(t){for(var e=this.content.length,n=this.content[t],r=this.scoreFunction(n);;){var i,o=t+1<<1,s=o-1,a=null;if(s<e){var u=this.content[s];(i=this.scoreFunction(u))<r&&(a=s)}if(o<e){var l=this.content[o];this.scoreFunction(l)<(null===a?r:i)&&(a=o)}if(null===a)break;this.content[t]=this.content[a],this.content[a]=n,t=a}}},$s.prototype={constructor:$s,insert:function(t,e){var n,r,i;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=ra(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(r=n.U).L?(i=r.R)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.R&&(ea(this,n),n=(t=n).U),n.C=!1,r.C=!0,na(this,r)):(i=r.L)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.L&&(na(this,n),n=(t=n).U),n.C=!1,r.C=!0,ea(this,r)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,r,i=t.U,o=t.L,s=t.R;if(n=o?s?ra(s):o:s,i?i.L===t?i.L=n:i.R=n:this._=n,o&&s?(r=n.C,n.C=t.C,n.L=o,o.U=n,n!==s?(i=n.U,n.U=t.U,t=n.R,i.L=t,n.R=s,s.U=n):(n.U=i,i=n,t=n.R)):(r=t.C,t=n),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((e=i.R).C&&(e.C=!1,i.C=!0,ea(this,i),e=i.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,na(this,e),e=i.R),e.C=i.C,i.C=e.R.C=!1,ea(this,i),t=this._;break}}else if((e=i.L).C&&(e.C=!1,i.C=!0,na(this,i),e=i.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,ea(this,e),e=i.L),e.C=i.C,i.C=e.L.C=!1,na(this,i),t=this._;break}e.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var pa,fa=[];function ga(){ta(this),this.x=this.y=this.arc=this.site=this.cy=null}function da(t){var e=t.P,n=t.N;if(e&&n){var r=e.site,i=t.site,o=n.site;if(r!==o){var s=i[0],a=i[1],u=r[0]-s,l=r[1]-a,c=o[0]-s,h=o[1]-a,p=2*(u*h-l*c);if(!(p>=-La)){var f=u*u+l*l,g=c*c+h*h,d=(h*f-l*g)/p,y=(u*g-c*f)/p,v=fa.pop()||new ga;v.arc=t,v.site=i,v.x=d+s,v.y=(v.cy=y+a)+Math.sqrt(d*d+y*y),t.circle=v;for(var _=null,m=Ca._;m;)if(v.y<m.y||v.y===m.y&&v.x<=m.x){if(!m.L){_=m.P;break}m=m.L}else{if(!m.R){_=m;break}m=m.R}Ca.insert(_,v),_||(pa=v)}}}}function ya(t){var e=t.circle;e&&(e.P||(pa=e.N),Ca.remove(e),fa.push(e),ta(e),t.circle=null)}var va=[];function _a(){ta(this),this.edge=this.site=this.circle=null}function ma(t){var e=va.pop()||new _a;return e.site=t,e}function xa(t){ya(t),Na.remove(t),va.push(t),ta(t)}function Ea(t){var e=t.circle,n=e.x,r=e.cy,i=[n,r],o=t.P,s=t.N,a=[t];xa(t);for(var u=o;u.circle&&Math.abs(n-u.circle.x)<Ma&&Math.abs(r-u.circle.cy)<Ma;)o=u.P,a.unshift(u),xa(u),u=o;a.unshift(u),ya(u);for(var l=s;l.circle&&Math.abs(n-l.circle.x)<Ma&&Math.abs(r-l.circle.cy)<Ma;)s=l.N,a.push(l),xa(l),l=s;a.push(l),ya(l);var c,h=a.length;for(c=1;c<h;++c)l=a[c],u=a[c-1],sa(l.edge,u.site,l.site,i);u=a[0],(l=a[h-1]).edge=ia(u.site,l.site,null,i),da(u),da(l)}function ba(t){for(var e,n,r,i,o=t[0],s=t[1],a=Na._;a;)if((r=wa(a,s)-o)>Ma)a=a.L;else{if(!((i=o-Ia(a,s))>Ma)){r>-Ma?(e=a.P,n=a):i>-Ma?(e=a,n=a.N):e=n=a;break}if(!a.R){e=a;break}a=a.R}!function(t){Sa[t.index]={site:t,halfedges:[]}}(t);var u=ma(t);if(Na.insert(e,u),e||n){if(e===n)return ya(e),n=ma(e.site),Na.insert(u,n),u.edge=n.edge=ia(e.site,u.site),da(e),void da(n);if(n){ya(e),ya(n);var l=e.site,c=l[0],h=l[1],p=t[0]-c,f=t[1]-h,g=n.site,d=g[0]-c,y=g[1]-h,v=2*(p*y-f*d),_=p*p+f*f,m=d*d+y*y,x=[(y*_-f*m)/v+c,(p*m-d*_)/v+h];sa(n.edge,l,g,x),u.edge=ia(l,t,null,x),n.edge=ia(t,g,null,x),da(e),da(n)}else u.edge=ia(e.site,u.site)}}function wa(t,e){var n=t.site,r=n[0],i=n[1],o=i-e;if(!o)return r;var s=t.P;if(!s)return-1/0;var a=(n=s.site)[0],u=n[1],l=u-e;if(!l)return a;var c=a-r,h=1/o-1/l,p=c/l;return h?(-p+Math.sqrt(p*p-2*h*(c*c/(-2*l)-u+l/2+i-o/2)))/h+r:(r+a)/2}function Ia(t,e){var n=t.N;if(n)return wa(n,e);var r=t.site;return r[1]===e?r[0]:1/0}var Na,Sa,Ca,Pa,Ma=1e-6,La=1e-12;function Oa(t,e){return e[1]-t[1]||e[0]-t[0]}function Ra(t,e){var n,r,i,o=t.sort(Oa).pop();for(Pa=[],Sa=new Array(t.length),Na=new $s,Ca=new $s;;)if(i=pa,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===n&&o[1]===r||(ba(o),n=o[0],r=o[1]),o=t.pop();else{if(!i)break;Ea(i.arc)}if(function(){for(var t,e,n,r,i=0,o=Sa.length;i<o;++i)if((t=Sa[i])&&(r=(e=t.halfedges).length)){var s=new Array(r),a=new Array(r);for(n=0;n<r;++n)s[n]=n,a[n]=la(t,Pa[e[n]]);for(s.sort((function(t,e){return a[e]-a[t]})),n=0;n<r;++n)a[n]=e[s[n]];for(n=0;n<r;++n)e[n]=a[n]}}(),e){var s=+e[0][0],a=+e[0][1],u=+e[1][0],l=+e[1][1];!function(t,e,n,r){for(var i,o=Pa.length;o--;)ua(i=Pa[o],t,e,n,r)&&aa(i,t,e,n,r)&&(Math.abs(i[0][0]-i[1][0])>Ma||Math.abs(i[0][1]-i[1][1])>Ma)||delete Pa[o]}(s,a,u,l),function(t,e,n,r){var i,o,s,a,u,l,c,h,p,f,g,d,y=Sa.length,v=!0;for(i=0;i<y;++i)if(o=Sa[i]){for(s=o.site,a=(u=o.halfedges).length;a--;)Pa[u[a]]||u.splice(a,1);for(a=0,l=u.length;a<l;)g=(f=ha(o,Pa[u[a]]))[0],d=f[1],h=(c=ca(o,Pa[u[++a%l]]))[0],p=c[1],(Math.abs(g-h)>Ma||Math.abs(d-p)>Ma)&&(u.splice(a,0,Pa.push(oa(s,f,Math.abs(g-t)<Ma&&r-d>Ma?[t,Math.abs(h-t)<Ma?p:r]:Math.abs(d-r)<Ma&&n-g>Ma?[Math.abs(p-r)<Ma?h:n,r]:Math.abs(g-n)<Ma&&d-e>Ma?[n,Math.abs(h-n)<Ma?p:e]:Math.abs(d-e)<Ma&&g-t>Ma?[Math.abs(p-e)<Ma?h:t,e]:null))-1),++l);l&&(v=!1)}if(v){var _,m,x,E=1/0;for(i=0,v=null;i<y;++i)(o=Sa[i])&&(x=(_=(s=o.site)[0]-t)*_+(m=s[1]-e)*m)<E&&(E=x,v=o);if(v){var b=[t,e],w=[t,r],I=[n,r],N=[n,e];v.halfedges.push(Pa.push(oa(s=v.site,b,w))-1,Pa.push(oa(s,w,I))-1,Pa.push(oa(s,I,N))-1,Pa.push(oa(s,N,b))-1)}}for(i=0;i<y;++i)(o=Sa[i])&&(o.halfedges.length||delete Sa[i])}(s,a,u,l)}this.edges=Pa,this.cells=Sa,Na=Ca=Pa=Sa=null}function Ta(t){return(t=t.slice()).push(t[0]),l([t])}function Aa(t,e,n,r){var i=(r=r||{}).steps||64,o=r.units||"kilometers",s=r.angle||0,a=r.pivot||t,u=r.properties||t.properties||{};if(!t)throw new Error("center is required");if(!e)throw new Error("xSemiAxis is required");if(!n)throw new Error("ySemiAxis is required");if(!P(r))throw new Error("options must be an object");if(!C(i))throw new Error("steps must be a number");if(!C(s))throw new Error("angle must be a number");var c=K(t);if("degrees"===o)var h=I(s);else e=ji(t,e,90,{units:o}),n=ji(t,n,0,{units:o}),e=K(e)[0]-c[0],n=K(n)[1]-c[1];for(var p=[],f=0;f<i;f+=1){var g=-360*f/i,d=e*n/Math.sqrt(Math.pow(n,2)+Math.pow(e,2)*Math.pow(Da(g),2)),y=e*n/Math.sqrt(Math.pow(e,2)+Math.pow(n,2)/Math.pow(Da(g),2));if(g<-90&&g>=-270&&(d=-d),g<-180&&g>=-360&&(y=-y),"degrees"===o){var v=d*Math.cos(h)+y*Math.sin(h),_=y*Math.cos(h)-d*Math.sin(h);d=v,y=_}p.push([d+c[0],y+c[1]])}return p.push(p[0]),"degrees"===o?l([p],u):$o(l([p],u),s,{pivot:a})}function Da(t){var e=t*Math.PI/180;return Math.tan(e)}function Fa(t,e){void 0===e&&(e={});var n=0,r=0,i=0;return q(t,(function(t,o,s){var a=e.weight?null==s?void 0:s[e.weight]:void 0;if(!C(a=null==a?1:a))throw new Error("weight value must be a number for feature index "+o);(a=Number(a))>0&&R(t,(function(t){n+=t[0]*a,r+=t[1]*a,i+=a}))})),a([n/i,r/i],e.properties,e)}function ka(t,e,n,r,i){var o=r.tolerance||.001,s=0,u=0,l=0,c=0;if(F(n,(function(e){var n,r=null===(n=e.properties)||void 0===n?void 0:n.weight,i=null==r?1:r;if(!C(i=Number(i)))throw new Error("weight value must be a number");if(i>0){c+=1;var o=i*me(e,t);0===o&&(o=1);var a=i/o;s+=e.geometry.coordinates[0]*a,u+=e.geometry.coordinates[1]*a,l+=a}})),c<1)throw new Error("no features to measure");var h=s/l,p=u/l;return 1===c||0===i||Math.abs(h-e[0])<o&&Math.abs(p-e[1])<o?a([h,p],{medianCandidates:r.medianCandidates}):(r.medianCandidates.push([h,p]),ka([h,p],t,n,r,i-1))}function Ga(t,e){return{x:t[0]-e[0],y:t[1]-e[1]}}function qa(t,e){var n=0,r=0;R(t,(function(i,o,s,a,u){u>n&&(n=u,r=o,e.push([]));var l=o-r,c=t.coordinates[u][l+1],h=i[0],p=i[1],f=c[0],g=c[1];e[u].push([.75*h+.25*f,.75*p+.25*g]),e[u].push([.25*h+.75*f,.25*p+.75*g])}),!0),e.forEach((function(t){t.push(t[0])}))}function Ba(t,e){var n=0,r=0,i=0;R(t,(function(o,s,a,u,l){u>i&&(i=u,r=s,e.push([[]])),l>n&&(n=l,r=s,e[u].push([]));var c=s-r,h=t.coordinates[u][l][c+1],p=o[0],f=o[1],g=h[0],d=h[1];e[u][l].push([.75*p+.25*g,.75*f+.25*d]),e[u][l].push([.25*p+.75*g,.25*f+.75*d])}),!0),e.forEach((function(t){t.forEach((function(t){t.push(t[0])}))}))}function za(t,e,n){void 0===n&&(n=2);var r=K(t),i=K(e),o=r[0]-i[0],s=r[1]-i[1];return 1===n?Math.abs(o)+Math.abs(s):Math.pow(Math.pow(o,n)+Math.pow(s,n),1/n)}function ja(t,e){var n=(e=e||{}).threshold||1e4,r=e.p||2,i=e.binary||!1,o=e.alpha||-1,s=e.standardization||!1,a=[];F(t,(function(t){a.push(En(t))}));for(var u=[],l=0;l<a.length;l++)u[l]=[];for(l=0;l<a.length;l++)for(var c=l;c<a.length;c++){l===c&&(u[l][c]=0);var h=za(a[l],a[c],r);u[l][c]=h,u[c][l]=h}for(l=0;l<a.length;l++)for(c=0;c<a.length;c++){0!==(h=u[l][c])&&(u[l][c]=i?h<=n?1:0:h<=n?Math.pow(h,o):0)}if(s)for(l=0;l<a.length;l++){var p=u[l].reduce((function(t,e){return t+e}),0);for(c=0;c<a.length;c++)u[l][c]=u[l][c]/p}return u}function Ua(t){for(var e=0,n=0,r=t;n<r.length;n++){e+=r[n]}return e/t.length}function Va(t,e){return void 0===e&&(e={}),Ya(t,"mercator",e)}function Xa(t,e){return void 0===e&&(e={}),Ya(t,"wgs84",e)}function Ya(t,e,n){void 0===n&&(n={});var r=(n=n||{}).mutate;if(!t)throw new Error("geojson is required");return Array.isArray(t)&&C(t[0])?t="mercator"===e?Ha(t):Wa(t):(!0!==r&&(t=Ie(t)),R(t,(function(t){var n="mercator"===e?Ha(t):Wa(t);t[0]=n[0],t[1]=n[1]}))),t}function Ha(t){var e=Math.PI/180,n=6378137,r=20037508.342789244,i=[n*(Math.abs(t[0])<=180?t[0]:t[0]-360*function(t){return t<0?-1:t>0?1:0}(t[0]))*e,n*Math.log(Math.tan(.25*Math.PI+.5*t[1]*e))];return i[0]>r&&(i[0]=r),i[0]<-r&&(i[0]=-r),i[1]>r&&(i[1]=r),i[1]<-r&&(i[1]=-r),i}function Wa(t){var e=180/Math.PI,n=6378137;return[t[0]*e/n,(.5*Math.PI-2*Math.atan(Math.exp(-t[1]/n)))*e]}Ra.prototype={constructor:Ra,polygons:function(){var t=this.edges;return this.cells.map((function(e){var n=e.halfedges.map((function(n){return ca(e,t[n])}));return n.data=e.site.data,n}))},triangles:function(){var t=[],e=this.edges;return this.cells.forEach((function(n,r){if(o=(i=n.halfedges).length)for(var i,o,s,a,u,l,c=n.site,h=-1,p=e[i[o-1]],f=p.left===c?p.right:p.left;++h<o;)s=f,f=(p=e[i[h]]).left===c?p.right:p.left,s&&f&&r<s.index&&r<f.index&&(u=s,l=f,((a=c)[0]-l[0])*(u[1]-a[1])-(a[0]-u[0])*(l[1]-a[1])<0)&&t.push([c.data,s.data,f.data])})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,e,n){for(var r,i,o=this,s=o._found||0,a=o.cells.length;!(i=o.cells[s]);)if(++s>=a)return null;var u=t-i.site[0],l=e-i.site[1],c=u*u+l*l;do{i=o.cells[r=s],s=null,i.halfedges.forEach((function(n){var r=o.edges[n],a=r.left;if(a!==i.site&&a||(a=r.right)){var u=t-a[0],l=e-a[1],h=u*u+l*l;h<c&&(c=h,s=a.index)}}))}while(null!==s);return o._found=r,null==n||c<=n*n?i.site:null}};var Ja=Object.freeze({__proto__:null,toMercator:Va,toWgs84:Xa}),Za=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],s=0,a=o.length;s<a;s++,i++)r[i]=o[s];return r};function Ka(t){return Array.isArray(t)?nu(t):t&&t.bbox?nu(t.bbox):[360*eu(),180*eu()]}function Qa(t,e){void 0===e&&(e={}),null==t&&(t=1);for(var n=[],r=0;r<t;r++)n.push(a(Ka(e.bbox)));return f(n)}function $a(t,e){void 0===e&&(e={}),null==t&&(t=1),C(e.num_vertices)&&void 0!==e.num_vertices||(e.num_vertices=10),C(e.max_radial_length)&&void 0!==e.max_radial_length||(e.max_radial_length=10);for(var n=[],r=function(t){var r,i=[],o=Za(Array(e.num_vertices+1)).map(Math.random);o.forEach((function(t,e,n){n[e]=e>0?t+n[e-1]:t})),o.forEach((function(t){t=2*t*Math.PI/o[o.length-1];var n=Math.random();i.push([n*(e.max_radial_length||10)*Math.sin(t),n*(e.max_radial_length||10)*Math.cos(t)])})),i[i.length-1]=i[0],i=i.map((r=Ka(e.bbox),function(t){return[t[0]+r[0],t[1]+r[1]]})),n.push(l([i]))},i=0;i<t;i++)r();return f(n)}function tu(t,e){if(void 0===e&&(e={}),!P(e=e||{}))throw new Error("options is invalid");var n=e.bbox,r=e.num_vertices,i=e.max_length,o=e.max_rotation;null==t&&(t=1),(!C(r)||void 0===r||r<2)&&(r=10),C(i)&&void 0!==i||(i=1e-4),C(o)&&void 0!==o||(o=Math.PI/8);for(var s=[],a=0;a<t;a++){for(var u=[Ka(n)],l=0;l<r-1;l++){var c=(0===l?2*Math.random()*Math.PI:Math.tan((u[l][1]-u[l-1][1])/(u[l][0]-u[l-1][0])))+(Math.random()-.5)*o*2,p=Math.random()*i;u.push([u[l][0]+p*Math.cos(c),u[l][1]+p*Math.sin(c)])}s.push(h(u))}return f(s)}function eu(){return Math.random()-.5}function nu(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}var ru=Object.freeze({__proto__:null,randomPosition:Ka,randomPoint:Qa,randomPolygon:$a,randomLineString:tu});function iu(t,e){if(!t)throw new Error("geojson is required");if("FeatureCollection"!==t.type)throw new Error("geojson must be a FeatureCollection");if(null==e)throw new Error("filter is required");var n=[];return F(t,(function(t){uu(t.properties,e)&&n.push(t)})),f(n)}function ou(t,e,n){if(!t)throw new Error("geojson is required");if("FeatureCollection"!==t.type)throw new Error("geojson must be a FeatureCollection");if(null==e)throw new Error("property is required");for(var r=au(t,e),i=Object.keys(r),o=0;o<i.length;o++){for(var s=i[o],a=r[s],u=[],l=0;l<a.length;l++)u.push(t.features[a[l]]);n(f(u),s,o)}}function su(t,e,n,r){var i=r;return ou(t,e,(function(t,e,o){i=0===o&&void 0===r?t:n(i,t,e,o)})),i}function au(t,e){var n={};return F(t,(function(t,r){var i=t.properties||{};if(Object.prototype.hasOwnProperty.call(i,String(e))){var o=i[e];Object.prototype.hasOwnProperty.call(n,o)?n[o].push(r):n[o]=[r]}})),n}function uu(t,e){if(void 0===t)return!1;var n=typeof e;if("number"===n||"string"===n)return Object.prototype.hasOwnProperty.call(t,e);if(Array.isArray(e)){for(var r=0;r<e.length;r++)if(!uu(t,e[r]))return!1;return!0}return lu(t,e)}function lu(t,e){for(var n=Object.keys(e),r=0;r<n.length;r++){var i=n[r];if(t[i]!==e[i])return!1}return!0}function cu(t,e){if(!e)return{};if(!e.length)return{};for(var n={},r=0;r<e.length;r++){var i=e[r];Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n}var hu=Object.freeze({__proto__:null,getCluster:iu,clusterEach:ou,clusterReduce:su,createBins:au,applyFilter:uu,propertiesContainsFilter:lu,filterProperties:cu}),pu=function(t,e){this.next=null,this.key=t,this.data=e,this.left=null,this.right=null};
/**
     * splaytree v3.1.0
     * Fast Splay tree for Node and browser
     *
     * @author Alexander Milevski <info@w8r.name>
     * @license MIT
     * @preserve
     */function fu(t,e){return t>e?1:t<e?-1:0}function gu(t,e,n){for(var r=new pu(null,null),i=r,o=r;;){var s=n(t,e.key);if(s<0){if(null===e.left)break;if(n(t,e.left.key)<0){var a=e.left;if(e.left=a.right,a.right=e,null===(e=a).left)break}o.left=e,o=e,e=e.left}else{if(!(s>0))break;if(null===e.right)break;if(n(t,e.right.key)>0){a=e.right;if(e.right=a.left,a.left=e,null===(e=a).right)break}i.right=e,i=e,e=e.right}}return i.right=e.left,o.left=e.right,e.left=r.right,e.right=r.left,e}function du(t,e,n,r){var i=new pu(t,e);if(null===n)return i.left=i.right=null,i;var o=r(t,(n=gu(t,n,r)).key);return o<0?(i.left=n.left,i.right=n,n.left=null):o>=0&&(i.right=n.right,i.left=n,n.right=null),i}function yu(t,e,n){var r=null,i=null;if(e){var o=n((e=gu(t,e,n)).key,t);0===o?(r=e.left,i=e.right):o<0?(i=e.right,e.right=null,r=e):(r=e.left,e.left=null,i=e)}return{left:r,right:i}}function vu(t,e,n,r,i){if(t){r(e+(n?"└── ":"├── ")+i(t)+"\n");var o=e+(n?"    ":"│   ");t.left&&vu(t.left,o,!1,r,i),t.right&&vu(t.right,o,!0,r,i)}}var _u=function(){function t(t){void 0===t&&(t=fu),this._root=null,this._size=0,this._comparator=t}return t.prototype.insert=function(t,e){return this._size++,this._root=du(t,e,this._root,this._comparator)},t.prototype.add=function(t,e){var n=new pu(t,e);null===this._root&&(n.left=n.right=null,this._size++,this._root=n);var r=this._comparator,i=gu(t,this._root,r),o=r(t,i.key);return 0===o?this._root=i:(o<0?(n.left=i.left,n.right=i,i.left=null):o>0&&(n.right=i.right,n.left=i,i.right=null),this._size++,this._root=n),this._root},t.prototype.remove=function(t){this._root=this._remove(t,this._root,this._comparator)},t.prototype._remove=function(t,e,n){var r;return null===e?null:0===n(t,(e=gu(t,e,n)).key)?(null===e.left?r=e.right:(r=gu(t,e.left,n)).right=e.right,this._size--,r):e},t.prototype.pop=function(){var t=this._root;if(t){for(;t.left;)t=t.left;return this._root=gu(t.key,this._root,this._comparator),this._root=this._remove(t.key,this._root,this._comparator),{key:t.key,data:t.data}}return null},t.prototype.findStatic=function(t){for(var e=this._root,n=this._comparator;e;){var r=n(t,e.key);if(0===r)return e;e=r<0?e.left:e.right}return null},t.prototype.find=function(t){return this._root&&(this._root=gu(t,this._root,this._comparator),0!==this._comparator(t,this._root.key))?null:this._root},t.prototype.contains=function(t){for(var e=this._root,n=this._comparator;e;){var r=n(t,e.key);if(0===r)return!0;e=r<0?e.left:e.right}return!1},t.prototype.forEach=function(t,e){for(var n=this._root,r=[],i=!1;!i;)null!==n?(r.push(n),n=n.left):0!==r.length?(n=r.pop(),t.call(e,n),n=n.right):i=!0;return this},t.prototype.range=function(t,e,n,r){for(var i=[],o=this._comparator,s=this._root;0!==i.length||s;)if(s)i.push(s),s=s.left;else{if(o((s=i.pop()).key,e)>0)break;if(o(s.key,t)>=0&&n.call(r,s))return this;s=s.right}return this},t.prototype.keys=function(){var t=[];return this.forEach((function(e){var n=e.key;return t.push(n)})),t},t.prototype.values=function(){var t=[];return this.forEach((function(e){var n=e.data;return t.push(n)})),t},t.prototype.min=function(){return this._root?this.minNode(this._root).key:null},t.prototype.max=function(){return this._root?this.maxNode(this._root).key:null},t.prototype.minNode=function(t){if(void 0===t&&(t=this._root),t)for(;t.left;)t=t.left;return t},t.prototype.maxNode=function(t){if(void 0===t&&(t=this._root),t)for(;t.right;)t=t.right;return t},t.prototype.at=function(t){for(var e=this._root,n=!1,r=0,i=[];!n;)if(e)i.push(e),e=e.left;else if(i.length>0){if(e=i.pop(),r===t)return e;r++,e=e.right}else n=!0;return null},t.prototype.next=function(t){var e=this._root,n=null;if(t.right){for(n=t.right;n.left;)n=n.left;return n}for(var r=this._comparator;e;){var i=r(t.key,e.key);if(0===i)break;i<0?(n=e,e=e.left):e=e.right}return n},t.prototype.prev=function(t){var e=this._root,n=null;if(null!==t.left){for(n=t.left;n.right;)n=n.right;return n}for(var r=this._comparator;e;){var i=r(t.key,e.key);if(0===i)break;i<0?e=e.left:(n=e,e=e.right)}return n},t.prototype.clear=function(){return this._root=null,this._size=0,this},t.prototype.toList=function(){return function(t){var e=t,n=[],r=!1,i=new pu(null,null),o=i;for(;!r;)e?(n.push(e),e=e.left):n.length>0?e=(e=o=o.next=n.pop()).right:r=!0;return o.next=null,i.next}(this._root)},t.prototype.load=function(t,e,n){void 0===e&&(e=[]),void 0===n&&(n=!1);var r=t.length,i=this._comparator;if(n&&Eu(t,e,0,r-1,i),null===this._root)this._root=mu(t,e,0,r),this._size=r;else{var o=function(t,e,n){var r=new pu(null,null),i=r,o=t,s=e;for(;null!==o&&null!==s;)n(o.key,s.key)<0?(i.next=o,o=o.next):(i.next=s,s=s.next),i=i.next;null!==o?i.next=o:null!==s&&(i.next=s);return r.next}(this.toList(),function(t,e){for(var n=new pu(null,null),r=n,i=0;i<t.length;i++)r=r.next=new pu(t[i],e[i]);return r.next=null,n.next}(t,e),i);r=this._size+r,this._root=xu({head:o},0,r)}return this},t.prototype.isEmpty=function(){return null===this._root},Object.defineProperty(t.prototype,"size",{get:function(){return this._size},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"root",{get:function(){return this._root},enumerable:!0,configurable:!0}),t.prototype.toString=function(t){void 0===t&&(t=function(t){return String(t.key)});var e=[];return vu(this._root,"",!0,(function(t){return e.push(t)}),t),e.join("")},t.prototype.update=function(t,e,n){var r=this._comparator,i=yu(t,this._root,r),o=i.left,s=i.right;r(t,e)<0?s=du(e,n,s,r):o=du(e,n,o,r),this._root=function(t,e,n){return null===e?t:(null===t||((e=gu(t.key,e,n)).left=t),e)}(o,s,r)},t.prototype.split=function(t){return yu(t,this._root,this._comparator)},t}();function mu(t,e,n,r){var i=r-n;if(i>0){var o=n+Math.floor(i/2),s=t[o],a=e[o],u=new pu(s,a);return u.left=mu(t,e,n,o),u.right=mu(t,e,o+1,r),u}return null}function xu(t,e,n){var r=n-e;if(r>0){var i=e+Math.floor(r/2),o=xu(t,e,i),s=t.head;return s.left=o,t.head=t.head.next,s.right=xu(t,i+1,n),s}return null}function Eu(t,e,n,r,i){if(!(n>=r)){for(var o=t[n+r>>1],s=n-1,a=r+1;;){do{s++}while(i(t[s],o)<0);do{a--}while(i(t[a],o)>0);if(s>=a)break;var u=t[s];t[s]=t[a],t[a]=u,u=e[s],e[s]=e[a],e[a]=u}Eu(t,e,n,a,i),Eu(t,e,a+1,r,i)}}function bu(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function wu(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Iu(t,e,n){return e&&wu(t.prototype,e),n&&wu(t,n),t}var Nu=function(t,e){return t.ll.x<=e.x&&e.x<=t.ur.x&&t.ll.y<=e.y&&e.y<=t.ur.y},Su=function(t,e){if(e.ur.x<t.ll.x||t.ur.x<e.ll.x||e.ur.y<t.ll.y||t.ur.y<e.ll.y)return null;var n=t.ll.x<e.ll.x?e.ll.x:t.ll.x,r=t.ur.x<e.ur.x?t.ur.x:e.ur.x;return{ll:{x:n,y:t.ll.y<e.ll.y?e.ll.y:t.ll.y},ur:{x:r,y:t.ur.y<e.ur.y?t.ur.y:e.ur.y}}},Cu=Number.EPSILON;void 0===Cu&&(Cu=Math.pow(2,-52));var Pu=Cu*Cu,Mu=function(t,e){if(-Cu<t&&t<Cu&&-Cu<e&&e<Cu)return 0;var n=t-e;return n*n<Pu*t*e?0:t<e?-1:1},Lu=function(){function t(){bu(this,t),this.reset()}return Iu(t,[{key:"reset",value:function(){this.xRounder=new Ou,this.yRounder=new Ou}},{key:"round",value:function(t,e){return{x:this.xRounder.round(t),y:this.yRounder.round(e)}}}]),t}(),Ou=function(){function t(){bu(this,t),this.tree=new _u,this.round(0)}return Iu(t,[{key:"round",value:function(t){var e=this.tree.add(t),n=this.tree.prev(e);if(null!==n&&0===Mu(e.key,n.key))return this.tree.remove(t),n.key;var r=this.tree.next(e);return null!==r&&0===Mu(e.key,r.key)?(this.tree.remove(t),r.key):t}}]),t}(),Ru=new Lu,Tu=function(t,e){return t.x*e.y-t.y*e.x},Au=function(t,e){return t.x*e.x+t.y*e.y},Du=function(t,e,n){var r={x:e.x-t.x,y:e.y-t.y},i={x:n.x-t.x,y:n.y-t.y},o=Tu(r,i);return Mu(o,0)},Fu=function(t){return Math.sqrt(Au(t,t))},ku=function(t,e,n){var r={x:e.x-t.x,y:e.y-t.y},i={x:n.x-t.x,y:n.y-t.y};return Au(i,r)/Fu(i)/Fu(r)},Gu=function(t,e,n){return 0===e.y?null:{x:t.x+e.x/e.y*(n-t.y),y:n}},qu=function(t,e,n){return 0===e.x?null:{x:n,y:t.y+e.y/e.x*(n-t.x)}},Bu=function(){function t(e,n){bu(this,t),void 0===e.events?e.events=[this]:e.events.push(this),this.point=e,this.isLeft=n}return Iu(t,null,[{key:"compare",value:function(e,n){var r=t.comparePoints(e.point,n.point);return 0!==r?r:(e.point!==n.point&&e.link(n),e.isLeft!==n.isLeft?e.isLeft?1:-1:ju.compare(e.segment,n.segment))}},{key:"comparePoints",value:function(t,e){return t.x<e.x?-1:t.x>e.x?1:t.y<e.y?-1:t.y>e.y?1:0}}]),Iu(t,[{key:"link",value:function(t){if(t.point===this.point)throw new Error("Tried to link already linked events");for(var e=t.point.events,n=0,r=e.length;n<r;n++){var i=e[n];this.point.events.push(i),i.point=this.point}this.checkForConsuming()}},{key:"checkForConsuming",value:function(){for(var t=this.point.events.length,e=0;e<t;e++){var n=this.point.events[e];if(void 0===n.segment.consumedBy)for(var r=e+1;r<t;r++){var i=this.point.events[r];void 0===i.consumedBy&&(n.otherSE.point.events===i.otherSE.point.events&&n.segment.consume(i.segment))}}}},{key:"getAvailableLinkedEvents",value:function(){for(var t=[],e=0,n=this.point.events.length;e<n;e++){var r=this.point.events[e];r!==this&&!r.segment.ringOut&&r.segment.isInResult()&&t.push(r)}return t}},{key:"getLeftmostComparator",value:function(t){var e=this,n=new Map,r=function(r){var i,o,s,a,u,l=r.otherSE;n.set(r,{sine:(i=e.point,o=t.point,s=l.point,a={x:o.x-i.x,y:o.y-i.y},u={x:s.x-i.x,y:s.y-i.y},Tu(u,a)/Fu(u)/Fu(a)),cosine:ku(e.point,t.point,l.point)})};return function(t,e){n.has(t)||r(t),n.has(e)||r(e);var i=n.get(t),o=i.sine,s=i.cosine,a=n.get(e),u=a.sine,l=a.cosine;return o>=0&&u>=0?s<l?1:s>l?-1:0:o<0&&u<0?s<l?-1:s>l?1:0:u<o?-1:u>o?1:0}}}]),t}(),zu=0,ju=function(){function t(e,n,r,i){bu(this,t),this.id=++zu,this.leftSE=e,e.segment=this,e.otherSE=n,this.rightSE=n,n.segment=this,n.otherSE=e,this.rings=r,this.windings=i}return Iu(t,null,[{key:"compare",value:function(t,e){var n=t.leftSE.point.x,r=e.leftSE.point.x,i=t.rightSE.point.x,o=e.rightSE.point.x;if(o<n)return 1;if(i<r)return-1;var s=t.leftSE.point.y,a=e.leftSE.point.y,u=t.rightSE.point.y,l=e.rightSE.point.y;if(n<r){if(a<s&&a<u)return 1;if(a>s&&a>u)return-1;var c=t.comparePoint(e.leftSE.point);if(c<0)return 1;if(c>0)return-1;var h=e.comparePoint(t.rightSE.point);return 0!==h?h:-1}if(n>r){if(s<a&&s<l)return-1;if(s>a&&s>l)return 1;var p=e.comparePoint(t.leftSE.point);if(0!==p)return p;var f=t.comparePoint(e.rightSE.point);return f<0?1:f>0?-1:1}if(s<a)return-1;if(s>a)return 1;if(i<o){var g=e.comparePoint(t.rightSE.point);if(0!==g)return g}if(i>o){var d=t.comparePoint(e.rightSE.point);if(d<0)return 1;if(d>0)return-1}if(i!==o){var y=u-s,v=i-n,_=l-a,m=o-r;if(y>v&&_<m)return 1;if(y<v&&_>m)return-1}return i>o?1:i<o||u<l?-1:u>l?1:t.id<e.id?-1:t.id>e.id?1:0}}]),Iu(t,[{key:"replaceRightSE",value:function(t){this.rightSE=t,this.rightSE.segment=this,this.rightSE.otherSE=this.leftSE,this.leftSE.otherSE=this.rightSE}},{key:"bbox",value:function(){var t=this.leftSE.point.y,e=this.rightSE.point.y;return{ll:{x:this.leftSE.point.x,y:t<e?t:e},ur:{x:this.rightSE.point.x,y:t>e?t:e}}}},{key:"vector",value:function(){return{x:this.rightSE.point.x-this.leftSE.point.x,y:this.rightSE.point.y-this.leftSE.point.y}}},{key:"isAnEndpoint",value:function(t){return t.x===this.leftSE.point.x&&t.y===this.leftSE.point.y||t.x===this.rightSE.point.x&&t.y===this.rightSE.point.y}},{key:"comparePoint",value:function(t){if(this.isAnEndpoint(t))return 0;var e=this.leftSE.point,n=this.rightSE.point,r=this.vector();if(e.x===n.x)return t.x===e.x?0:t.x<e.x?1:-1;var i=(t.y-e.y)/r.y,o=e.x+i*r.x;if(t.x===o)return 0;var s=(t.x-e.x)/r.x,a=e.y+s*r.y;return t.y===a?0:t.y<a?-1:1}},{key:"getIntersection",value:function(t){var e=this.bbox(),n=t.bbox(),r=Su(e,n);if(null===r)return null;var i=this.leftSE.point,o=this.rightSE.point,s=t.leftSE.point,a=t.rightSE.point,u=Nu(e,s)&&0===this.comparePoint(s),l=Nu(n,i)&&0===t.comparePoint(i),c=Nu(e,a)&&0===this.comparePoint(a),h=Nu(n,o)&&0===t.comparePoint(o);if(l&&u)return h&&!c?o:!h&&c?a:null;if(l)return c&&i.x===a.x&&i.y===a.y?null:i;if(u)return h&&o.x===s.x&&o.y===s.y?null:s;if(h&&c)return null;if(h)return o;if(c)return a;var p=function(t,e,n,r){if(0===e.x)return qu(n,r,t.x);if(0===r.x)return qu(t,e,n.x);if(0===e.y)return Gu(n,r,t.y);if(0===r.y)return Gu(t,e,n.y);var i=Tu(e,r);if(0==i)return null;var o={x:n.x-t.x,y:n.y-t.y},s=Tu(o,e)/i,a=Tu(o,r)/i;return{x:(t.x+a*e.x+(n.x+s*r.x))/2,y:(t.y+a*e.y+(n.y+s*r.y))/2}}(i,this.vector(),s,t.vector());return null===p?null:Nu(r,p)?Ru.round(p.x,p.y):null}},{key:"split",value:function(e){var n=[],r=void 0!==e.events,i=new Bu(e,!0),o=new Bu(e,!1),s=this.rightSE;this.replaceRightSE(o),n.push(o),n.push(i);var a=new t(i,s,this.rings.slice(),this.windings.slice());return Bu.comparePoints(a.leftSE.point,a.rightSE.point)>0&&a.swapEvents(),Bu.comparePoints(this.leftSE.point,this.rightSE.point)>0&&this.swapEvents(),r&&(i.checkForConsuming(),o.checkForConsuming()),n}},{key:"swapEvents",value:function(){var t=this.rightSE;this.rightSE=this.leftSE,this.leftSE=t,this.leftSE.isLeft=!0,this.rightSE.isLeft=!1;for(var e=0,n=this.windings.length;e<n;e++)this.windings[e]*=-1}},{key:"consume",value:function(e){for(var n=this,r=e;n.consumedBy;)n=n.consumedBy;for(;r.consumedBy;)r=r.consumedBy;var i=t.compare(n,r);if(0!==i){if(i>0){var o=n;n=r,r=o}if(n.prev===r){var s=n;n=r,r=s}for(var a=0,u=r.rings.length;a<u;a++){var l=r.rings[a],c=r.windings[a],h=n.rings.indexOf(l);-1===h?(n.rings.push(l),n.windings.push(c)):n.windings[h]+=c}r.rings=null,r.windings=null,r.consumedBy=n,r.leftSE.consumedBy=n.leftSE,r.rightSE.consumedBy=n.rightSE}}},{key:"prevInResult",value:function(){return void 0!==this._prevInResult||(this.prev?this.prev.isInResult()?this._prevInResult=this.prev:this._prevInResult=this.prev.prevInResult():this._prevInResult=null),this._prevInResult}},{key:"beforeState",value:function(){if(void 0!==this._beforeState)return this._beforeState;if(this.prev){var t=this.prev.consumedBy||this.prev;this._beforeState=t.afterState()}else this._beforeState={rings:[],windings:[],multiPolys:[]};return this._beforeState}},{key:"afterState",value:function(){if(void 0!==this._afterState)return this._afterState;var t=this.beforeState();this._afterState={rings:t.rings.slice(0),windings:t.windings.slice(0),multiPolys:[]};for(var e=this._afterState.rings,n=this._afterState.windings,r=this._afterState.multiPolys,i=0,o=this.rings.length;i<o;i++){var s=this.rings[i],a=this.windings[i],u=e.indexOf(s);-1===u?(e.push(s),n.push(a)):n[u]+=a}for(var l=[],c=[],h=0,p=e.length;h<p;h++)if(0!==n[h]){var f=e[h],g=f.poly;if(-1===c.indexOf(g))if(f.isExterior)l.push(g);else{-1===c.indexOf(g)&&c.push(g);var d=l.indexOf(f.poly);-1!==d&&l.splice(d,1)}}for(var y=0,v=l.length;y<v;y++){var _=l[y].multiPoly;-1===r.indexOf(_)&&r.push(_)}return this._afterState}},{key:"isInResult",value:function(){if(this.consumedBy)return!1;if(void 0!==this._isInResult)return this._isInResult;var t=this.beforeState().multiPolys,e=this.afterState().multiPolys;switch(Qu.type){case"union":var n=0===t.length,r=0===e.length;this._isInResult=n!==r;break;case"intersection":var i,o;t.length<e.length?(i=t.length,o=e.length):(i=e.length,o=t.length),this._isInResult=o===Qu.numMultiPolys&&i<o;break;case"xor":var s=Math.abs(t.length-e.length);this._isInResult=s%2==1;break;case"difference":var a=function(t){return 1===t.length&&t[0].isSubject};this._isInResult=a(t)!==a(e);break;default:throw new Error("Unrecognized operation type found ".concat(Qu.type))}return this._isInResult}}],[{key:"fromRing",value:function(e,n,r){var i,o,s,a=Bu.comparePoints(e,n);if(a<0)i=e,o=n,s=1;else{if(!(a>0))throw new Error("Tried to create degenerate segment at [".concat(e.x,", ").concat(e.y,"]"));i=n,o=e,s=-1}return new t(new Bu(i,!0),new Bu(o,!1),[r],[s])}}]),t}(),Uu=function(){function t(e,n,r){if(bu(this,t),!Array.isArray(e)||0===e.length)throw new Error("Input geometry is not a valid Polygon or MultiPolygon");if(this.poly=n,this.isExterior=r,this.segments=[],"number"!=typeof e[0][0]||"number"!=typeof e[0][1])throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var i=Ru.round(e[0][0],e[0][1]);this.bbox={ll:{x:i.x,y:i.y},ur:{x:i.x,y:i.y}};for(var o=i,s=1,a=e.length;s<a;s++){if("number"!=typeof e[s][0]||"number"!=typeof e[s][1])throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var u=Ru.round(e[s][0],e[s][1]);u.x===o.x&&u.y===o.y||(this.segments.push(ju.fromRing(o,u,this)),u.x<this.bbox.ll.x&&(this.bbox.ll.x=u.x),u.y<this.bbox.ll.y&&(this.bbox.ll.y=u.y),u.x>this.bbox.ur.x&&(this.bbox.ur.x=u.x),u.y>this.bbox.ur.y&&(this.bbox.ur.y=u.y),o=u)}i.x===o.x&&i.y===o.y||this.segments.push(ju.fromRing(o,i,this))}return Iu(t,[{key:"getSweepEvents",value:function(){for(var t=[],e=0,n=this.segments.length;e<n;e++){var r=this.segments[e];t.push(r.leftSE),t.push(r.rightSE)}return t}}]),t}(),Vu=function(){function t(e,n){if(bu(this,t),!Array.isArray(e))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");this.exteriorRing=new Uu(e[0],this,!0),this.bbox={ll:{x:this.exteriorRing.bbox.ll.x,y:this.exteriorRing.bbox.ll.y},ur:{x:this.exteriorRing.bbox.ur.x,y:this.exteriorRing.bbox.ur.y}},this.interiorRings=[];for(var r=1,i=e.length;r<i;r++){var o=new Uu(e[r],this,!1);o.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=o.bbox.ll.x),o.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=o.bbox.ll.y),o.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=o.bbox.ur.x),o.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=o.bbox.ur.y),this.interiorRings.push(o)}this.multiPoly=n}return Iu(t,[{key:"getSweepEvents",value:function(){for(var t=this.exteriorRing.getSweepEvents(),e=0,n=this.interiorRings.length;e<n;e++)for(var r=this.interiorRings[e].getSweepEvents(),i=0,o=r.length;i<o;i++)t.push(r[i]);return t}}]),t}(),Xu=function(){function t(e,n){if(bu(this,t),!Array.isArray(e))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");try{"number"==typeof e[0][0][0]&&(e=[e])}catch(t){}this.polys=[],this.bbox={ll:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY},ur:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY}};for(var r=0,i=e.length;r<i;r++){var o=new Vu(e[r],this);o.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=o.bbox.ll.x),o.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=o.bbox.ll.y),o.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=o.bbox.ur.x),o.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=o.bbox.ur.y),this.polys.push(o)}this.isSubject=n}return Iu(t,[{key:"getSweepEvents",value:function(){for(var t=[],e=0,n=this.polys.length;e<n;e++)for(var r=this.polys[e].getSweepEvents(),i=0,o=r.length;i<o;i++)t.push(r[i]);return t}}]),t}(),Yu=function(){function t(e){bu(this,t),this.events=e;for(var n=0,r=e.length;n<r;n++)e[n].segment.ringOut=this;this.poly=null}return Iu(t,null,[{key:"factory",value:function(e){for(var n=[],r=0,i=e.length;r<i;r++){var o=e[r];if(o.isInResult()&&!o.ringOut){for(var s=null,a=o.leftSE,u=o.rightSE,l=[a],c=a.point,h=[];s=a,a=u,l.push(a),a.point!==c;)for(;;){var p=a.getAvailableLinkedEvents();if(0===p.length){var f=l[0].point,g=l[l.length-1].point;throw new Error("Unable to complete output ring starting at [".concat(f.x,",")+" ".concat(f.y,"]. Last matching segment found ends at")+" [".concat(g.x,", ").concat(g.y,"]."))}if(1===p.length){u=p[0].otherSE;break}for(var d=null,y=0,v=h.length;y<v;y++)if(h[y].point===a.point){d=y;break}if(null===d){h.push({index:l.length,point:a.point});var _=a.getLeftmostComparator(s);u=p.sort(_)[0].otherSE;break}var m=h.splice(d)[0],x=l.splice(m.index);x.unshift(x[0].otherSE),n.push(new t(x.reverse()))}n.push(new t(l))}}return n}}]),Iu(t,[{key:"getGeom",value:function(){for(var t=this.events[0].point,e=[t],n=1,r=this.events.length-1;n<r;n++){var i=this.events[n].point,o=this.events[n+1].point;0!==Du(i,t,o)&&(e.push(i),t=i)}if(1===e.length)return null;var s=e[0],a=e[1];0===Du(s,t,a)&&e.shift(),e.push(e[0]);for(var u=this.isExteriorRing()?1:-1,l=this.isExteriorRing()?0:e.length-1,c=this.isExteriorRing()?e.length:-1,h=[],p=l;p!=c;p+=u)h.push([e[p].x,e[p].y]);return h}},{key:"isExteriorRing",value:function(){if(void 0===this._isExteriorRing){var t=this.enclosingRing();this._isExteriorRing=!t||!t.isExteriorRing()}return this._isExteriorRing}},{key:"enclosingRing",value:function(){return void 0===this._enclosingRing&&(this._enclosingRing=this._calcEnclosingRing()),this._enclosingRing}},{key:"_calcEnclosingRing",value:function(){for(var t=this.events[0],e=1,n=this.events.length;e<n;e++){var r=this.events[e];Bu.compare(t,r)>0&&(t=r)}for(var i=t.segment.prevInResult(),o=i?i.prevInResult():null;;){if(!i)return null;if(!o)return i.ringOut;if(o.ringOut!==i.ringOut)return o.ringOut.enclosingRing()!==i.ringOut?i.ringOut:i.ringOut.enclosingRing();i=o.prevInResult(),o=i?i.prevInResult():null}}}]),t}(),Hu=function(){function t(e){bu(this,t),this.exteriorRing=e,e.poly=this,this.interiorRings=[]}return Iu(t,[{key:"addInterior",value:function(t){this.interiorRings.push(t),t.poly=this}},{key:"getGeom",value:function(){var t=[this.exteriorRing.getGeom()];if(null===t[0])return null;for(var e=0,n=this.interiorRings.length;e<n;e++){var r=this.interiorRings[e].getGeom();null!==r&&t.push(r)}return t}}]),t}(),Wu=function(){function t(e){bu(this,t),this.rings=e,this.polys=this._composePolys(e)}return Iu(t,[{key:"getGeom",value:function(){for(var t=[],e=0,n=this.polys.length;e<n;e++){var r=this.polys[e].getGeom();null!==r&&t.push(r)}return t}},{key:"_composePolys",value:function(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n];if(!i.poly)if(i.isExteriorRing())e.push(new Hu(i));else{var o=i.enclosingRing();o.poly||e.push(new Hu(o)),o.poly.addInterior(i)}}return e}}]),t}(),Ju=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ju.compare;bu(this,t),this.queue=e,this.tree=new _u(n),this.segments=[]}return Iu(t,[{key:"process",value:function(t){var e=t.segment,n=[];if(t.consumedBy)return t.isLeft?this.queue.remove(t.otherSE):this.tree.remove(e),n;var r=t.isLeft?this.tree.insert(e):this.tree.find(e);if(!r)throw new Error("Unable to find segment #".concat(e.id," ")+"[".concat(e.leftSE.point.x,", ").concat(e.leftSE.point.y,"] -> ")+"[".concat(e.rightSE.point.x,", ").concat(e.rightSE.point.y,"] ")+"in SweepLine tree. Please submit a bug report.");for(var i=r,o=r,s=void 0,a=void 0;void 0===s;)null===(i=this.tree.prev(i))?s=null:void 0===i.key.consumedBy&&(s=i.key);for(;void 0===a;)null===(o=this.tree.next(o))?a=null:void 0===o.key.consumedBy&&(a=o.key);if(t.isLeft){var u=null;if(s){var l=s.getIntersection(e);if(null!==l&&(e.isAnEndpoint(l)||(u=l),!s.isAnEndpoint(l)))for(var c=this._splitSafely(s,l),h=0,p=c.length;h<p;h++)n.push(c[h])}var f=null;if(a){var g=a.getIntersection(e);if(null!==g&&(e.isAnEndpoint(g)||(f=g),!a.isAnEndpoint(g)))for(var d=this._splitSafely(a,g),y=0,v=d.length;y<v;y++)n.push(d[y])}if(null!==u||null!==f){var _=null;if(null===u)_=f;else if(null===f)_=u;else{_=Bu.comparePoints(u,f)<=0?u:f}this.queue.remove(e.rightSE),n.push(e.rightSE);for(var m=e.split(_),x=0,E=m.length;x<E;x++)n.push(m[x])}n.length>0?(this.tree.remove(e),n.push(t)):(this.segments.push(e),e.prev=s)}else{if(s&&a){var b=s.getIntersection(a);if(null!==b){if(!s.isAnEndpoint(b))for(var w=this._splitSafely(s,b),I=0,N=w.length;I<N;I++)n.push(w[I]);if(!a.isAnEndpoint(b))for(var S=this._splitSafely(a,b),C=0,P=S.length;C<P;C++)n.push(S[C])}}this.tree.remove(e)}return n}},{key:"_splitSafely",value:function(t,e){this.tree.remove(t);var n=t.rightSE;this.queue.remove(n);var r=t.split(e);return r.push(n),void 0===t.consumedBy&&this.tree.insert(t),r}}]),t}(),Zu="undefined"!=typeof process&&process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE||1e6,Ku="undefined"!=typeof process&&process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS||1e6,Qu=new(function(){function t(){bu(this,t)}return Iu(t,[{key:"run",value:function(t,e,n){Qu.type=t,Ru.reset();for(var r=[new Xu(e,!0)],i=0,o=n.length;i<o;i++)r.push(new Xu(n[i],!1));if(Qu.numMultiPolys=r.length,"difference"===Qu.type)for(var s=r[0],a=1;a<r.length;)null!==Su(r[a].bbox,s.bbox)?a++:r.splice(a,1);if("intersection"===Qu.type)for(var u=0,l=r.length;u<l;u++)for(var c=r[u],h=u+1,p=r.length;h<p;h++)if(null===Su(c.bbox,r[h].bbox))return[];for(var f=new _u(Bu.compare),g=0,d=r.length;g<d;g++)for(var y=r[g].getSweepEvents(),v=0,_=y.length;v<_;v++)if(f.insert(y[v]),f.size>Zu)throw new Error("Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report.");for(var m=new Ju(f),x=f.size,E=f.pop();E;){var b=E.key;if(f.size===x){var w=b.segment;throw new Error("Unable to pop() ".concat(b.isLeft?"left":"right"," SweepEvent ")+"[".concat(b.point.x,", ").concat(b.point.y,"] from segment #").concat(w.id," ")+"[".concat(w.leftSE.point.x,", ").concat(w.leftSE.point.y,"] -> ")+"[".concat(w.rightSE.point.x,", ").concat(w.rightSE.point.y,"] from queue. ")+"Please file a bug report.")}if(f.size>Zu)throw new Error("Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report.");if(m.segments.length>Ku)throw new Error("Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report.");for(var I=m.process(b),N=0,S=I.length;N<S;N++){var C=I[N];void 0===C.consumedBy&&f.insert(C)}x=f.size,E=f.pop()}Ru.reset();var P=Yu.factory(m.segments);return new Wu(P).getGeom()}}]),t}()),$u={union:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Qu.run("union",t,n)},intersection:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Qu.run("intersection",t,n)},xor:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Qu.run("xor",t,n)},difference:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Qu.run("difference",t,n)}};"fill"in Array.prototype||Object.defineProperty(Array.prototype,"fill",{configurable:!0,value:function(t){if(null==this)throw new TypeError(this+" is not an object");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,r=1 in arguments&&parseInt(Number(arguments[1]),10)||0;r=r<0?Math.max(n+r,0):Math.min(r,n);var i=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(i=i<0?Math.max(n+arguments[2],0):Math.min(i,n);r<i;)e[r]=t,++r;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return"number"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var tl=function(){};tl.prototype.interfaces_=function(){return[]},tl.prototype.getClass=function(){return tl},tl.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var el=function(t){function e(e){t.call(this,e),this.name="IllegalArgumentException",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),nl=function(){},rl={MAX_VALUE:{configurable:!0}};nl.isNaN=function(t){return Number.isNaN(t)},nl.doubleToLongBits=function(t){return t},nl.longBitsToDouble=function(t){return t},nl.isInfinite=function(t){return!Number.isFinite(t)},rl.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(nl,rl);var il=function(){},ol=function(){},sl=function(){};function al(){}var ul=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},ll={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};ul.prototype.setOrdinate=function(t,e){switch(t){case ul.X:this.x=e;break;case ul.Y:this.y=e;break;case ul.Z:this.z=e;break;default:throw new el("Invalid ordinate index: "+t)}},ul.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!tl.equalsWithTolerance(this.x,e.x,n)&&!!tl.equalsWithTolerance(this.y,e.y,n)}},ul.prototype.getOrdinate=function(t){switch(t){case ul.X:return this.x;case ul.Y:return this.y;case ul.Z:return this.z}throw new el("Invalid ordinate index: "+t)},ul.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||nl.isNaN(this.z))&&nl.isNaN(t.z)},ul.prototype.equals=function(t){return t instanceof ul&&this.equals2D(t)},ul.prototype.equalInZ=function(t,e){return tl.equalsWithTolerance(this.z,t.z,e)},ul.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},ul.prototype.clone=function(){},ul.prototype.copy=function(){return new ul(this)},ul.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},ul.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return Math.sqrt(e*e+n*n+r*r)},ul.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},ul.prototype.hashCode=function(){var t=17;return t=37*(t=37*t+ul.hashCode(this.x))+ul.hashCode(this.y)},ul.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},ul.prototype.interfaces_=function(){return[il,ol,al]},ul.prototype.getClass=function(){return ul},ul.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=nl.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},ll.DimensionalComparator.get=function(){return cl},ll.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},ll.NULL_ORDINATE.get=function(){return nl.NaN},ll.X.get=function(){return 0},ll.Y.get=function(){return 1},ll.Z.get=function(){return 2},Object.defineProperties(ul,ll);var cl=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new el("only 2 or 3 dimensions may be specified");this._dimensionsToTest=e}};cl.prototype.compare=function(t,e){var n=t,r=e,i=cl.compare(n.x,r.x);if(0!==i)return i;var o=cl.compare(n.y,r.y);return 0!==o?o:this._dimensionsToTest<=2?0:cl.compare(n.z,r.z)},cl.prototype.interfaces_=function(){return[sl]},cl.prototype.getClass=function(){return cl},cl.compare=function(t,e){return t<e?-1:t>e?1:nl.isNaN(t)?nl.isNaN(e)?0:-1:nl.isNaN(e)?1:0};var hl=function(){};hl.prototype.create=function(){},hl.prototype.interfaces_=function(){return[]},hl.prototype.getClass=function(){return hl};var pl=function(){},fl={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};pl.prototype.interfaces_=function(){return[]},pl.prototype.getClass=function(){return pl},pl.toLocationSymbol=function(t){switch(t){case pl.EXTERIOR:return"e";case pl.BOUNDARY:return"b";case pl.INTERIOR:return"i";case pl.NONE:return"-"}throw new el("Unknown location value: "+t)},fl.INTERIOR.get=function(){return 0},fl.BOUNDARY.get=function(){return 1},fl.EXTERIOR.get=function(){return 2},fl.NONE.get=function(){return-1},Object.defineProperties(pl,fl);var gl=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},dl=function(){},yl={LOG_10:{configurable:!0}};dl.prototype.interfaces_=function(){return[]},dl.prototype.getClass=function(){return dl},dl.log10=function(t){var e=Math.log(t);return nl.isInfinite(e)||nl.isNaN(e)?e:e/dl.LOG_10},dl.min=function(t,e,n,r){var i=t;return e<i&&(i=e),n<i&&(i=n),r<i&&(i=r),i},dl.clamp=function(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var r=arguments[0],i=arguments[1],o=arguments[2];return r<i?i:r>o?o:r}},dl.wrap=function(t,e){return t<0?e- -t%e:t%e},dl.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=t;return e>r&&(r=e),n>r&&(r=n),r}if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=i;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},dl.average=function(t,e){return(t+e)/2},yl.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(dl,yl);var vl=function(t){this.str=t};vl.prototype.append=function(t){this.str+=t},vl.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},vl.prototype.toString=function(t){return this.str};var _l=function(t){this.value=t};_l.prototype.intValue=function(){return this.value},_l.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},_l.isNaN=function(t){return Number.isNaN(t)};var ml=function(){};ml.isWhitespace=function(t){return t<=32&&t>=0||127===t},ml.toUpperCase=function(t){return t.toUpperCase()};var xl=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if("string"==typeof arguments[0]){var r=arguments[0];t.call(this,t.parse(r))}}else if(2===arguments.length){var i=arguments[0],o=arguments[1];this.init(i,o)}},El={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};xl.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},xl.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),r=xl.magnitude(n._hi),i=xl.TEN.pow(r);(n=n.divide(i)).gt(xl.TEN)?(n=n.divide(xl.TEN),r+=1):n.lt(xl.ONE)&&(n=n.multiply(xl.TEN),r-=1);for(var o=r+1,s=new vl,a=xl.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(".");var l=Math.trunc(n._hi);if(l<0)break;var c=!1,h=0;l>9?(c=!0,h="9"):h="0"+l,s.append(h),n=n.subtract(xl.valueOf(l)).multiply(xl.TEN),c&&n.selfAdd(xl.TEN);var p=!0,f=xl.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(p=!1),!p)break}return e[0]=r,s.toString()},xl.prototype.sqr=function(){return this.multiply(this)},xl.prototype.doubleValue=function(){return this._hi+this._lo},xl.prototype.subtract=function(){if(arguments[0]instanceof xl){var t=arguments[0];return this.add(t.negate())}if("number"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},xl.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},xl.prototype.isZero=function(){return 0===this._hi&&0===this._lo},xl.prototype.selfSubtract=function(){if(arguments[0]instanceof xl){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if("number"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},xl.prototype.getSpecialNumberString=function(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null},xl.prototype.min=function(t){return this.le(t)?this:t},xl.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof xl){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if("number"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=null,o=null,s=null,a=null,u=null,l=null,c=null,h=null;return u=this._hi/n,h=(i=(l=xl.SPLIT*u)-(i=l-u))*(s=(h=xl.SPLIT*n)-(s=h-n))-(c=u*n)+i*(a=n-s)+(o=u-i)*s+o*a,h=u+(l=(this._hi-c-h+this._lo-u*r)/n),this._hi=h,this._lo=u-h+l,this}},xl.prototype.dump=function(){return"DD<"+this._hi+", "+this._lo+">"},xl.prototype.divide=function(){if(arguments[0]instanceof xl){var t=arguments[0],e=null,n=null,r=null,i=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=xl.SPLIT*o)-(e=s-o)),u=e*(r=(u=xl.SPLIT*t._hi)-(r=u-t._hi))-(a=o*t._hi)+e*(i=t._hi-r)+n*r+n*i;var l=u=o+(s=(this._hi-a-u+this._lo-o*t._lo)/t._hi),c=o-u+s;return new xl(l,c)}if("number"==typeof arguments[0]){var h=arguments[0];return nl.isNaN(h)?xl.createNaN():xl.copy(this).selfDivide(h,0)}},xl.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},xl.prototype.pow=function(t){if(0===t)return xl.valueOf(1);var e=new xl(this),n=xl.valueOf(1),r=Math.abs(t);if(r>1)for(;r>0;)r%2==1&&n.selfMultiply(e),(r/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},xl.prototype.ceil=function(){if(this.isNaN())return xl.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new xl(t,e)},xl.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},xl.prototype.rint=function(){return this.isNaN()?this:this.add(.5).floor()},xl.prototype.setValue=function(){if(arguments[0]instanceof xl){var t=arguments[0];return this.init(t),this}if("number"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},xl.prototype.max=function(t){return this.ge(t)?this:t},xl.prototype.sqrt=function(){if(this.isZero())return xl.valueOf(0);if(this.isNegative())return xl.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=xl.valueOf(e),r=this.subtract(n.sqr())._hi*(.5*t);return n.add(r)},xl.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof xl){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if("number"==typeof arguments[0]){var e=arguments[0],n=null,r=null,i=null,o=null,s=null,a=null;return o=(i=this._hi+e)-(s=i-this._hi),r=(a=(o=e-s+(this._hi-o))+this._lo)+(i-(n=i+a)),this._hi=n+r,this._lo=r+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],c=null,h=null,p=null,f=null,g=null,d=null,y=null;f=this._hi+u,h=this._lo+l,g=f-(d=f-this._hi),p=h-(y=h-this._lo);var v=(c=f+(d=(g=u-d+(this._hi-g))+h))+(d=(p=l-y+(this._lo-p))+(d+(f-c))),_=d+(c-v);return this._hi=v,this._lo=_,this}},xl.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof xl){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if("number"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=null,o=null,s=null,a=null,u=null,l=null;i=(u=xl.SPLIT*this._hi)-this._hi,l=xl.SPLIT*n,i=u-i,o=this._hi-i,s=l-n;var c=(u=this._hi*n)+(l=i*(s=l-s)-u+i*(a=n-s)+o*s+o*a+(this._hi*r+this._lo*n)),h=l+(i=u-c);return this._hi=c,this._lo=h,this}},xl.prototype.selfSqr=function(){return this.selfMultiply(this)},xl.prototype.floor=function(){if(this.isNaN())return xl.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new xl(t,e)},xl.prototype.negate=function(){return this.isNaN()?this:new xl(-this._hi,-this._lo)},xl.prototype.clone=function(){},xl.prototype.multiply=function(){if(arguments[0]instanceof xl){var t=arguments[0];return t.isNaN()?xl.createNaN():xl.copy(this).selfMultiply(t)}if("number"==typeof arguments[0]){var e=arguments[0];return nl.isNaN(e)?xl.createNaN():xl.copy(this).selfMultiply(e,0)}},xl.prototype.isNaN=function(){return nl.isNaN(this._hi)},xl.prototype.intValue=function(){return Math.trunc(this._hi)},xl.prototype.toString=function(){var t=xl.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},xl.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),r=e[0]+1,i=n;if("."===n.charAt(0))i="0"+n;else if(r<0)i="0."+xl.stringOfChar("0",-r)+n;else if(-1===n.indexOf(".")){var o=r-n.length;i=n+xl.stringOfChar("0",o)+".0"}return this.isNegative()?"-"+i:i},xl.prototype.reciprocal=function(){var t,e,n,r,i=null,o=null,s=null,a=null;t=(n=1/this._hi)-(i=(s=xl.SPLIT*n)-(i=s-n)),o=(a=xl.SPLIT*this._hi)-this._hi;var u=n+(s=(1-(r=n*this._hi)-(a=i*(o=a-o)-r+i*(e=this._hi-o)+t*o+t*e)-n*this._lo)/this._hi);return new xl(u,n-u+s)},xl.prototype.toSciNotation=function(){if(this.isZero())return xl.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),r=xl.SCI_NOT_EXPONENT_CHAR+e[0];if("0"===n.charAt(0))throw new Error("Found leading zero: "+n);var i="";n.length>1&&(i=n.substring(1));var o=n.charAt(0)+"."+i;return this.isNegative()?"-"+o+r:o+r},xl.prototype.abs=function(){return this.isNaN()?xl.NaN:this.isNegative()?this.negate():new xl(this)},xl.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},xl.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},xl.prototype.add=function(){if(arguments[0]instanceof xl){var t=arguments[0];return xl.copy(this).selfAdd(t)}if("number"==typeof arguments[0]){var e=arguments[0];return xl.copy(this).selfAdd(e)}},xl.prototype.init=function(){if(1===arguments.length){if("number"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof xl){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this._hi=n,this._lo=r}},xl.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},xl.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},xl.prototype.trunc=function(){return this.isNaN()?xl.NaN:this.isPositive()?this.floor():this.ceil()},xl.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},xl.prototype.interfaces_=function(){return[al,il,ol]},xl.prototype.getClass=function(){return xl},xl.sqr=function(t){return xl.valueOf(t).selfMultiply(t)},xl.valueOf=function(){if("string"==typeof arguments[0]){var t=arguments[0];return xl.parse(t)}if("number"==typeof arguments[0]){var e=arguments[0];return new xl(e)}},xl.sqrt=function(t){return xl.valueOf(t).sqrt()},xl.parse=function(t){for(var e=0,n=t.length;ml.isWhitespace(t.charAt(e));)e++;var r=!1;if(e<n){var i=t.charAt(e);"-"!==i&&"+"!==i||(e++,"-"===i&&(r=!0))}for(var o=new xl,s=0,a=0,u=0;!(e>=n);){var l=t.charAt(e);if(e++,ml.isDigit(l)){var c=l-"0";o.selfMultiply(xl.TEN),o.selfAdd(c),s++}else{if("."!==l){if("e"===l||"E"===l){var h=t.substring(e);try{u=_l.parseInt(h)}catch(e){throw e instanceof Error?new Error("Invalid exponent "+h+" in string "+t):e}break}throw new Error("Unexpected character '"+l+"' at position "+e+" in string "+t)}a=s}}var p=o,f=s-a-u;if(0===f)p=o;else if(f>0){var g=xl.TEN.pow(f);p=o.divide(g)}else if(f<0){var d=xl.TEN.pow(-f);p=o.multiply(d)}return r?p.negate():p},xl.createNaN=function(){return new xl(nl.NaN,nl.NaN)},xl.copy=function(t){return new xl(t)},xl.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),r=Math.trunc(Math.floor(n));return 10*Math.pow(10,r)<=e&&(r+=1),r},xl.stringOfChar=function(t,e){for(var n=new vl,r=0;r<e;r++)n.append(t);return n.toString()},El.PI.get=function(){return new xl(3.141592653589793,12246467991473532e-32)},El.TWO_PI.get=function(){return new xl(6.283185307179586,24492935982947064e-32)},El.PI_2.get=function(){return new xl(1.5707963267948966,6123233995736766e-32)},El.E.get=function(){return new xl(2.718281828459045,14456468917292502e-32)},El.NaN.get=function(){return new xl(nl.NaN,nl.NaN)},El.EPS.get=function(){return 123259516440783e-46},El.SPLIT.get=function(){return 134217729},El.MAX_PRINT_DIGITS.get=function(){return 32},El.TEN.get=function(){return xl.valueOf(10)},El.ONE.get=function(){return xl.valueOf(1)},El.SCI_NOT_EXPONENT_CHAR.get=function(){return"E"},El.SCI_NOT_ZERO.get=function(){return"0.0E0"},Object.defineProperties(xl,El);var bl=function(){},wl={DP_SAFE_EPSILON:{configurable:!0}};bl.prototype.interfaces_=function(){return[]},bl.prototype.getClass=function(){return bl},bl.orientationIndex=function(t,e,n){var r=bl.orientationIndexFilter(t,e,n);if(r<=1)return r;var i=xl.valueOf(e.x).selfAdd(-t.x),o=xl.valueOf(e.y).selfAdd(-t.y),s=xl.valueOf(n.x).selfAdd(-e.x),a=xl.valueOf(n.y).selfAdd(-e.y);return i.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},bl.signOfDet2x2=function(t,e,n,r){return t.multiply(r).selfSubtract(e.multiply(n)).signum()},bl.intersection=function(t,e,n,r){var i=xl.valueOf(r.y).selfSubtract(n.y).selfMultiply(xl.valueOf(e.x).selfSubtract(t.x)),o=xl.valueOf(r.x).selfSubtract(n.x).selfMultiply(xl.valueOf(e.y).selfSubtract(t.y)),s=i.subtract(o),a=xl.valueOf(r.x).selfSubtract(n.x).selfMultiply(xl.valueOf(t.y).selfSubtract(n.y)),u=xl.valueOf(r.y).selfSubtract(n.y).selfMultiply(xl.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u).selfDivide(s).doubleValue(),c=xl.valueOf(t.x).selfAdd(xl.valueOf(e.x).selfSubtract(t.x).selfMultiply(l)).doubleValue(),h=xl.valueOf(e.x).selfSubtract(t.x).selfMultiply(xl.valueOf(t.y).selfSubtract(n.y)),p=xl.valueOf(e.y).selfSubtract(t.y).selfMultiply(xl.valueOf(t.x).selfSubtract(n.x)),f=h.subtract(p).selfDivide(s).doubleValue(),g=xl.valueOf(n.y).selfAdd(xl.valueOf(r.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new ul(c,g)},bl.orientationIndexFilter=function(t,e,n){var r=null,i=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=i-o;if(i>0){if(o<=0)return bl.signum(s);r=i+o}else{if(!(i<0))return bl.signum(s);if(o>=0)return bl.signum(s);r=-i-o}var a=bl.DP_SAFE_EPSILON*r;return s>=a||-s>=a?bl.signum(s):2},bl.signum=function(t){return t>0?1:t<0?-1:0},wl.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(bl,wl);var Il=function(){},Nl={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};Nl.X.get=function(){return 0},Nl.Y.get=function(){return 1},Nl.Z.get=function(){return 2},Nl.M.get=function(){return 3},Il.prototype.setOrdinate=function(t,e,n){},Il.prototype.size=function(){},Il.prototype.getOrdinate=function(t,e){},Il.prototype.getCoordinate=function(){},Il.prototype.getCoordinateCopy=function(t){},Il.prototype.getDimension=function(){},Il.prototype.getX=function(t){},Il.prototype.clone=function(){},Il.prototype.expandEnvelope=function(t){},Il.prototype.copy=function(){},Il.prototype.getY=function(t){},Il.prototype.toCoordinateArray=function(){},Il.prototype.interfaces_=function(){return[ol]},Il.prototype.getClass=function(){return Il},Object.defineProperties(Il,Nl);var Sl=function(){},Cl=function(t){function e(){t.call(this,"Projective point not representable on the Cartesian plane.")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Sl),Pl=function(){};Pl.arraycopy=function(t,e,n,r,i){for(var o=0,s=e;s<e+i;s++)n[r+o]=t[s],o++},Pl.getProperty=function(t){return{"line.separator":"\n"}[t]};var Ml=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var n=arguments[0],r=arguments[1];this.x=n,this.y=r,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var i=arguments[0],o=arguments[1];this.x=i.y*o.w-o.y*i.w,this.y=o.x*i.w-i.x*o.w,this.w=i.x*o.y-o.x*i.y}else if(arguments[0]instanceof ul&&arguments[1]instanceof ul){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2];this.x=u,this.y=l,this.w=c}else if(4===arguments.length){var h=arguments[0],p=arguments[1],f=arguments[2],g=arguments[3],d=h.y-p.y,y=p.x-h.x,v=h.x*p.y-p.x*h.y,_=f.y-g.y,m=g.x-f.x,x=f.x*g.y-g.x*f.y;this.x=y*x-m*v,this.y=_*v-d*x,this.w=d*m-_*y}};Ml.prototype.getY=function(){var t=this.y/this.w;if(nl.isNaN(t)||nl.isInfinite(t))throw new Cl;return t},Ml.prototype.getX=function(){var t=this.x/this.w;if(nl.isNaN(t)||nl.isInfinite(t))throw new Cl;return t},Ml.prototype.getCoordinate=function(){var t=new ul;return t.x=this.getX(),t.y=this.getY(),t},Ml.prototype.interfaces_=function(){return[]},Ml.prototype.getClass=function(){return Ml},Ml.intersection=function(t,e,n,r){var i=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-r.y,u=r.x-n.x,l=n.x*r.y-r.x*n.y,c=i*u-a*o,h=(o*l-u*s)/c,p=(a*s-i*l)/c;if(nl.isNaN(h)||nl.isInfinite(h)||nl.isNaN(p)||nl.isInfinite(p))throw new Cl;return new ul(h,p)};var Ll=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof ul){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.init(r.x,i.x,r.y,i.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},Ol={serialVersionUID:{configurable:!0}};Ll.prototype.getArea=function(){return this.getWidth()*this.getHeight()},Ll.prototype.equals=function(t){if(!(t instanceof Ll))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},Ll.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new Ll;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,r=this._maxx<t._maxx?this._maxx:t._maxx,i=this._maxy<t._maxy?this._maxy:t._maxy;return new Ll(e,r,n,i)},Ll.prototype.isNull=function(){return this._maxx<this._minx},Ll.prototype.getMaxX=function(){return this._maxx},Ll.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof ul){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof Ll){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&r>=this._miny&&r<=this._maxy)}},Ll.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof Ll){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof ul){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||r>this._maxy||r<this._miny)}},Ll.prototype.getMinY=function(){return this._miny},Ll.prototype.getMinX=function(){return this._minx},Ll.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof ul){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof Ll){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=r,this._maxy=r):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),r<this._miny&&(this._miny=r),r>this._maxy&&(this._maxy=r))}},Ll.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},Ll.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},Ll.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},Ll.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},Ll.prototype.toString=function(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"},Ll.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},Ll.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},Ll.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},Ll.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},Ll.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof Ll){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof ul){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return this.covers(n,r)}},Ll.prototype.centre=function(){return this.isNull()?null:new ul((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},Ll.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof ul){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof Ll){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.init(n.x,r.x,n.y,r.y)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];i<o?(this._minx=i,this._maxx=o):(this._minx=o,this._maxx=i),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},Ll.prototype.getMaxY=function(){return this._maxy},Ll.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},Ll.prototype.hashCode=function(){var t=17;return t=37*(t=37*(t=37*(t=37*t+ul.hashCode(this._minx))+ul.hashCode(this._maxx))+ul.hashCode(this._miny))+ul.hashCode(this._maxy)},Ll.prototype.interfaces_=function(){return[il,al]},Ll.prototype.getClass=function(){return Ll},Ll.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),l=Math.min(r.x,i.x),c=Math.max(r.x,i.x);return!(l>u)&&(!(c<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),l=Math.min(r.y,i.y),c=Math.max(r.y,i.y),!(l>u)&&!(c<a)))}},Ol.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(Ll,Ol);var Rl={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/},Tl=function(t){this.geometryFactory=t||new _h};Tl.prototype.read=function(t){var e,n,r;t=t.replace(/[\n\r]/g," ");var i=Rl.typeStr.exec(t);if(-1!==t.search("EMPTY")&&((i=Rl.emptyTypeStr.exec(t))[2]=void 0),i&&(n=i[1].toLowerCase(),r=i[2],Dl[n]&&(e=Dl[n].apply(this,[r]))),void 0===e)throw new Error("Could not parse WKT "+t);return e},Tl.prototype.write=function(t){return this.extractGeometry(t)},Tl.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!Al[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+" EMPTY":n+"("+Al[e].apply(this,[t])+")"};var Al={coordinate:function(t){return t.x+" "+t.y},point:function(t){return Al.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push("("+Al.point.apply(this,[t._geometries[n]])+")");return e.join(",")},linestring:function(t){for(var e=[],n=0,r=t._points._coordinates.length;n<r;++n)e.push(Al.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(",")},linearring:function(t){for(var e=[],n=0,r=t._points._coordinates.length;n<r;++n)e.push(Al.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(",")},multilinestring:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push("("+Al.linestring.apply(this,[t._geometries[n]])+")");return e.join(",")},polygon:function(t){var e=[];e.push("("+Al.linestring.apply(this,[t._shell])+")");for(var n=0,r=t._holes.length;n<r;++n)e.push("("+Al.linestring.apply(this,[t._holes[n]])+")");return e.join(",")},multipolygon:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push("("+Al.polygon.apply(this,[t._geometries[n]])+")");return e.join(",")},geometrycollection:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(",")}},Dl={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(Rl.spaces);return this.geometryFactory.createPoint(new ul(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){var e;if(void 0===t)return this.geometryFactory.createMultiPoint();for(var n=t.trim().split(","),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Rl.trimParens,"$1"),r.push(Dl.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(r)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(","),r=[],i=0,o=n.length;i<o;++i)e=n[i].trim().split(Rl.spaces),r.push(new ul(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(r)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(","),r=[],i=0,o=n.length;i<o;++i)e=n[i].trim().split(Rl.spaces),r.push(new ul(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(r)},multilinestring:function(t){var e;if(void 0===t)return this.geometryFactory.createMultiLineString();for(var n=t.trim().split(Rl.parenComma),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Rl.trimParens,"$1"),r.push(Dl.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(r)},polygon:function(t){var e,n,r;if(void 0===t)return this.geometryFactory.createPolygon();for(var i,o=t.trim().split(Rl.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(Rl.trimParens,"$1"),n=Dl.linestring.apply(this,[e]),r=this.geometryFactory.createLinearRing(n._points),0===a?i=r:s.push(r);return this.geometryFactory.createPolygon(i,s)},multipolygon:function(t){var e;if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var n=t.trim().split(Rl.doubleParenComma),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Rl.trimParens,"$1"),r.push(Dl.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(r)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\s*([A-Za-z])/g,"|$1")).trim().split("|"),n=[],r=0,i=e.length;r<i;++r)n.push(this.read(e[r]));return this.geometryFactory.createGeometryCollection(n)}},Fl=function(t){this.parser=new Tl(t)};Fl.prototype.write=function(t){return this.parser.write(t)},Fl.toLineString=function(t,e){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+e.x+" "+e.y+" )"};var kl=function(t){function e(e){t.call(this,e),this.name="RuntimeException",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),Gl=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(kl),ql=function(){};ql.prototype.interfaces_=function(){return[]},ql.prototype.getClass=function(){return ql},ql.shouldNeverReachHere=function(){if(0===arguments.length)ql.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new Gl("Should never reach here"+(null!==t?": "+t:""))}},ql.isTrue=function(){var t;if(1===arguments.length)ql.isTrue(arguments[0],null);else if(2===arguments.length&&(t=arguments[1],!arguments[0]))throw null===t?new Gl:new Gl(t)},ql.equals=function(){var t,e,n;if(2===arguments.length)ql.equals(t=arguments[0],e=arguments[1],null);else if(3===arguments.length&&(t=arguments[0],n=arguments[2],!(e=arguments[1]).equals(t)))throw new Gl("Expected "+t+" but encountered "+e+(null!==n?": "+n:""))};var Bl=function(){this._result=null,this._inputLines=Array(2).fill().map((function(){return Array(2)})),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new ul,this._intPt[1]=new ul,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},zl={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};Bl.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},Bl.prototype.getTopologySummary=function(){var t=new vl;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()},Bl.prototype.computeIntersection=function(t,e,n,r){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=r,this._result=this.computeIntersect(t,e,n,r)},Bl.prototype.getIntersectionNum=function(){return this._result},Bl.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((function(){return Array(2)})),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0],e=this.getEdgeDistance(t,0),n=this.getEdgeDistance(t,1);e>n?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},Bl.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},Bl.prototype.setPrecisionModel=function(t){this._precisionModel=t},Bl.prototype.isInteriorIntersection=function(){var t=this;if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var e=arguments[0],n=0;n<this._result;n++)if(!t._intPt[n].equals2D(t._inputLines[e][0])&&!t._intPt[n].equals2D(t._inputLines[e][1]))return!0;return!1}},Bl.prototype.getIntersection=function(t){return this._intPt[t]},Bl.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},Bl.prototype.hasIntersection=function(){return this._result!==Bl.NO_INTERSECTION},Bl.prototype.getEdgeDistance=function(t,e){return Bl.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},Bl.prototype.isCollinear=function(){return this._result===Bl.COLLINEAR_INTERSECTION},Bl.prototype.toString=function(){return Fl.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+Fl.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},Bl.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},Bl.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},Bl.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},Bl.prototype.interfaces_=function(){return[]},Bl.prototype.getClass=function(){return Bl},Bl.computeEdgeDistance=function(t,e,n){var r=Math.abs(n.x-e.x),i=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=r>i?r:i;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=r>i?s:a)||t.equals(e)||(o=Math.max(s,a))}return ql.isTrue(!(0===o&&!t.equals(e)),"Bad distance calculation"),o},Bl.nonRobustComputeEdgeDistance=function(t,e,n){var r=t.x-e.x,i=t.y-e.y,o=Math.sqrt(r*r+i*i);return ql.isTrue(!(0===o&&!t.equals(e)),"Invalid distance calculation"),o},zl.DONT_INTERSECT.get=function(){return 0},zl.DO_INTERSECT.get=function(){return 1},zl.COLLINEAR.get=function(){return 2},zl.NO_INTERSECTION.get=function(){return 0},zl.POINT_INTERSECTION.get=function(){return 1},zl.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(Bl,zl);var jl=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new Ll(this._inputLines[0][0],this._inputLines[0][1]),n=new Ll(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],r=arguments[2];if(this._isProper=!1,Ll.intersects(n,r,e)&&0===Xl.orientationIndex(n,r,e)&&0===Xl.orientationIndex(r,n,e))return this._isProper=!0,(e.equals(n)||e.equals(r))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,r,i){i.x=this.smallestInAbsValue(t.x,e.x,n.x,r.x),i.y=this.smallestInAbsValue(t.y,e.y,n.y,r.y),t.x-=i.x,t.y-=i.y,e.x-=i.x,e.y-=i.y,n.x-=i.x,n.y-=i.y,r.x-=i.x,r.y-=i.y},e.prototype.safeHCoordinateIntersection=function(t,n,r,i){var o=null;try{o=Ml.intersection(t,n,r,i)}catch(s){if(!(s instanceof Cl))throw s;o=e.nearestEndpoint(t,n,r,i)}return o},e.prototype.intersection=function(t,n,r,i){var o=this.intersectionWithNormalization(t,n,r,i);return this.isInSegmentEnvelopes(o)||(o=new ul(e.nearestEndpoint(t,n,r,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,r){var i=t,o=Math.abs(i);return Math.abs(e)<o&&(i=e,o=Math.abs(e)),Math.abs(n)<o&&(i=n,o=Math.abs(n)),Math.abs(r)<o&&(i=r),i},e.prototype.checkDD=function(t,e,n,r,i){var o=bl.intersection(t,e,n,r),s=this.isInSegmentEnvelopes(o);Pl.out.println("DD in env = "+s+"  --------------------- "+o),i.distance(o)>1e-4&&Pl.out.println("Distance = "+i.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,r){var i=new ul(t),o=new ul(e),s=new ul(n),a=new ul(r),u=new ul;this.normalizeToEnvCentre(i,o,s,a,u);var l=this.safeHCoordinateIntersection(i,o,s,a);return l.x+=u.x,l.y+=u.y,l},e.prototype.computeCollinearIntersection=function(e,n,r,i){var o=Ll.intersects(e,n,r),s=Ll.intersects(e,n,i),a=Ll.intersects(r,i,e),u=Ll.intersects(r,i,n);return o&&s?(this._intPt[0]=r,this._intPt[1]=i,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,r,i){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<r.x?n.x:r.x,c=n.y<r.y?n.y:r.y,h=n.x>r.x?n.x:r.x,p=n.y>r.y?n.y:r.y,f=((o>l?o:l)+(a<h?a:h))/2,g=((s>c?s:c)+(u<p?u:p))/2;i.x=f,i.y=g,t.x-=i.x,t.y-=i.y,e.x-=i.x,e.y-=i.y,n.x-=i.x,n.y-=i.y,r.x-=i.x,r.y-=i.y},e.prototype.computeIntersect=function(e,n,r,i){if(this._isProper=!1,!Ll.intersects(e,n,r,i))return t.NO_INTERSECTION;var o=Xl.orientationIndex(e,n,r),s=Xl.orientationIndex(e,n,i);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=Xl.orientationIndex(r,i,e),u=Xl.orientationIndex(r,i,n);return a>0&&u>0||a<0&&u<0?t.NO_INTERSECTION:0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,r,i):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(r)||e.equals2D(i)?this._intPt[0]=e:n.equals2D(r)||n.equals2D(i)?this._intPt[0]=n:0===o?this._intPt[0]=new ul(r):0===s?this._intPt[0]=new ul(i):0===a?this._intPt[0]=new ul(e):0===u&&(this._intPt[0]=new ul(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,r,i)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,r){var i=t,o=Xl.distancePointLine(t,n,r),s=Xl.distancePointLine(e,n,r);return s<o&&(o=s,i=e),(s=Xl.distancePointLine(n,t,e))<o&&(o=s,i=n),(s=Xl.distancePointLine(r,t,e))<o&&(o=s,i=r),i},e}(Bl),Ul=function(){};Ul.prototype.interfaces_=function(){return[]},Ul.prototype.getClass=function(){return Ul},Ul.orientationIndex=function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return Ul.signOfDet2x2(r,i,o,s)},Ul.signOfDet2x2=function(t,e,n,r){var i=null,o=null,s=null;if(i=1,0===t||0===r)return 0===e||0===n?0:e>0?n>0?-i:i:n>0?i:-i;if(0===e||0===n)return r>0?t>0?i:-i:t>0?-i:i;if(e>0?r>0?e<=r||(i=-i,o=t,t=n,n=o,o=e,e=r,r=o):e<=-r?(i=-i,n=-n,r=-r):(o=t,t=-n,n=o,o=e,e=-r,r=o):r>0?-e<=r?(i=-i,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=r,r=o):e>=r?(t=-t,e=-e,n=-n,r=-r):(i=-i,o=-t,t=-n,n=o,o=-e,e=-r,r=o),t>0){if(!(n>0))return i;if(!(t<=n))return i}else{if(n>0)return-i;if(!(t>=n))return-i;i=-i,t=-t,n=-n}for(;;){if((r-=(s=Math.floor(n/t))*e)<0)return-i;if(r>e)return i;if(t>(n-=s*t)+n){if(e<r+r)return i}else{if(e>r+r)return-i;n=t-n,r=e-r,i=-i}if(0===r)return 0===n?0:-i;if(0===n)return i;if((e-=(s=Math.floor(t/n))*r)<0)return i;if(e>r)return-i;if(n>(t-=s*n)+t){if(r<e+e)return-i}else{if(r>e+e)return i;t=n-t,e=r-e,i=-i}if(0===e)return 0===t?0:i;if(0===t)return-i}};var Vl=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};Vl.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,r=e.x;return n>r&&(n=e.x,r=t.x),this._p.x>=n&&this._p.x<=r&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var i=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=Ul.signOfDet2x2(i,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},Vl.prototype.isPointInPolygon=function(){return this.getLocation()!==pl.EXTERIOR},Vl.prototype.getLocation=function(){return this._isPointOnSegment?pl.BOUNDARY:this._crossingCount%2==1?pl.INTERIOR:pl.EXTERIOR},Vl.prototype.isOnSegment=function(){return this._isPointOnSegment},Vl.prototype.interfaces_=function(){return[]},Vl.prototype.getClass=function(){return Vl},Vl.locatePointInRing=function(){if(arguments[0]instanceof ul&&gl(arguments[1],Il)){for(var t=arguments[0],e=arguments[1],n=new Vl(t),r=new ul,i=new ul,o=1;o<e.size();o++)if(e.getCoordinate(o,r),e.getCoordinate(o-1,i),n.countSegment(r,i),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof ul&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new Vl(s),l=1;l<a.length;l++){var c=a[l],h=a[l-1];if(u.countSegment(c,h),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var Xl=function(){},Yl={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};Xl.prototype.interfaces_=function(){return[]},Xl.prototype.getClass=function(){return Xl},Xl.orientationIndex=function(t,e,n){return bl.orientationIndex(t,e,n)},Xl.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,r=1;r<t.length-1;r++){var i=t[r].x-n,o=t[r+1].y,s=t[r-1].y;e+=i*(s-o)}return e/2}if(gl(arguments[0],Il)){var a=arguments[0],u=a.size();if(u<3)return 0;var l=new ul,c=new ul,h=new ul;a.getCoordinate(0,c),a.getCoordinate(1,h);var p=c.x;h.x-=p;for(var f=0,g=1;g<u-1;g++)l.y=c.y,c.x=h.x,c.y=h.y,a.getCoordinate(g+1,h),h.x-=p,f+=c.x*(l.y-h.y);return f/2}},Xl.distanceLineLine=function(t,e,n,r){if(t.equals(e))return Xl.distancePointLine(t,n,r);if(n.equals(r))return Xl.distancePointLine(r,t,e);var i=!1;if(Ll.intersects(t,e,n,r)){var o=(e.x-t.x)*(r.y-n.y)-(e.y-t.y)*(r.x-n.x);if(0===o)i=!0;else{var s=(t.y-n.y)*(r.x-n.x)-(t.x-n.x)*(r.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(i=!0)}}else i=!0;return i?dl.min(Xl.distancePointLine(t,n,r),Xl.distancePointLine(e,n,r),Xl.distancePointLine(n,t,e),Xl.distancePointLine(r,t,e)):0},Xl.isPointInRing=function(t,e){return Xl.locatePointInRing(t,e)!==pl.EXTERIOR},Xl.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,r=new ul;t.getCoordinate(0,r);for(var i=r.x,o=r.y,s=1;s<e;s++){t.getCoordinate(s,r);var a=r.x,u=r.y,l=a-i,c=u-o;n+=Math.sqrt(l*l+c*c),i=a,o=u}return n},Xl.isCCW=function(t){var e=t.length-1;if(e<3)throw new el("Ring has fewer than 4 points, so orientation cannot be determined");for(var n=t[0],r=0,i=1;i<=e;i++){var o=t[i];o.y>n.y&&(n=o,r=i)}var s=r;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==r);var a=r;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==r);var u=t[s],l=t[a];if(u.equals2D(n)||l.equals2D(n)||u.equals2D(l))return!1;var c=Xl.computeOrientation(u,n,l),h=!1;return h=0===c?u.x>l.x:c>0,h},Xl.locatePointInRing=function(t,e){return Vl.locatePointInRing(t,e)},Xl.distancePointLinePerpendicular=function(t,e,n){var r=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),i=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/r;return Math.abs(i)*Math.sqrt(r)},Xl.computeOrientation=function(t,e,n){return Xl.orientationIndex(t,e,n)},Xl.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new el("Line array must contain at least one vertex");for(var n=t.distance(e[0]),r=0;r<e.length-1;r++){var i=Xl.distancePointLine(t,e[r],e[r+1]);i<n&&(n=i)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),l=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(l<=0)return o.distance(s);if(l>=1)return o.distance(a);var c=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(c)*Math.sqrt(u)}},Xl.isOnLine=function(t,e){for(var n=new jl,r=1;r<e.length;r++){var i=e[r-1],o=e[r];if(n.computeIntersection(t,i,o),n.hasIntersection())return!0}return!1},Yl.CLOCKWISE.get=function(){return-1},Yl.RIGHT.get=function(){return Xl.CLOCKWISE},Yl.COUNTERCLOCKWISE.get=function(){return 1},Yl.LEFT.get=function(){return Xl.COUNTERCLOCKWISE},Yl.COLLINEAR.get=function(){return 0},Yl.STRAIGHT.get=function(){return Xl.COLLINEAR},Object.defineProperties(Xl,Yl);var Hl=function(){};Hl.prototype.filter=function(t){},Hl.prototype.interfaces_=function(){return[]},Hl.prototype.getClass=function(){return Hl};var Wl=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},Jl={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};Wl.prototype.isGeometryCollection=function(){return this.getSortIndex()===Wl.SORTINDEX_GEOMETRYCOLLECTION},Wl.prototype.getFactory=function(){return this._factory},Wl.prototype.getGeometryN=function(t){return this},Wl.prototype.getArea=function(){return 0},Wl.prototype.isRectangle=function(){return!1},Wl.prototype.equals=function(){if(arguments[0]instanceof Wl){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof Wl))return!1;var n=e;return this.equalsExact(n)}},Wl.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},Wl.prototype.geometryChanged=function(){this.apply(Wl.geometryChangedFilter)},Wl.prototype.geometryChangedAction=function(){this._envelope=null},Wl.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},Wl.prototype.getLength=function(){return 0},Wl.prototype.getNumGeometries=function(){return 1},Wl.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],r=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,r)}},Wl.prototype.getUserData=function(){return this._userData},Wl.prototype.getSRID=function(){return this._SRID},Wl.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},Wl.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===Wl.SORTINDEX_GEOMETRYCOLLECTION)throw new el("This method does not support GeometryCollection arguments")},Wl.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},Wl.prototype.norm=function(){var t=this.copy();return t.normalize(),t},Wl.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},Wl.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new Ll(this._envelope)},Wl.prototype.setSRID=function(t){this._SRID=t},Wl.prototype.setUserData=function(t){this._userData=t},Wl.prototype.compare=function(t,e){for(var n=t.iterator(),r=e.iterator();n.hasNext()&&r.hasNext();){var i=n.next(),o=r.next(),s=i.compareTo(o);if(0!==s)return s}return n.hasNext()?1:r.hasNext()?-1:0},Wl.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},Wl.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===Wl.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===Wl.SORTINDEX_MULTIPOINT||this.getSortIndex()===Wl.SORTINDEX_MULTILINESTRING||this.getSortIndex()===Wl.SORTINDEX_MULTIPOLYGON},Wl.prototype.interfaces_=function(){return[ol,il,al]},Wl.prototype.getClass=function(){return Wl},Wl.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},Wl.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},Jl.serialVersionUID.get=function(){return 0x799ea46522854c00},Jl.SORTINDEX_POINT.get=function(){return 0},Jl.SORTINDEX_MULTIPOINT.get=function(){return 1},Jl.SORTINDEX_LINESTRING.get=function(){return 2},Jl.SORTINDEX_LINEARRING.get=function(){return 3},Jl.SORTINDEX_MULTILINESTRING.get=function(){return 4},Jl.SORTINDEX_POLYGON.get=function(){return 5},Jl.SORTINDEX_MULTIPOLYGON.get=function(){return 6},Jl.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},Jl.geometryChangedFilter.get=function(){return Zl},Object.defineProperties(Wl,Jl);var Zl=function(){};Zl.interfaces_=function(){return[Hl]},Zl.filter=function(t){t.geometryChangedAction()};var Kl=function(){};Kl.prototype.filter=function(t){},Kl.prototype.interfaces_=function(){return[]},Kl.prototype.getClass=function(){return Kl};var Ql=function(){},$l={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};Ql.prototype.isInBoundary=function(t){},Ql.prototype.interfaces_=function(){return[]},Ql.prototype.getClass=function(){return Ql},$l.Mod2BoundaryNodeRule.get=function(){return tc},$l.EndPointBoundaryNodeRule.get=function(){return ec},$l.MultiValentEndPointBoundaryNodeRule.get=function(){return nc},$l.MonoValentEndPointBoundaryNodeRule.get=function(){return rc},$l.MOD2_BOUNDARY_RULE.get=function(){return new tc},$l.ENDPOINT_BOUNDARY_RULE.get=function(){return new ec},$l.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new nc},$l.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new rc},$l.OGC_SFS_BOUNDARY_RULE.get=function(){return Ql.MOD2_BOUNDARY_RULE},Object.defineProperties(Ql,$l);var tc=function(){};tc.prototype.isInBoundary=function(t){return t%2==1},tc.prototype.interfaces_=function(){return[Ql]},tc.prototype.getClass=function(){return tc};var ec=function(){};ec.prototype.isInBoundary=function(t){return t>0},ec.prototype.interfaces_=function(){return[Ql]},ec.prototype.getClass=function(){return ec};var nc=function(){};nc.prototype.isInBoundary=function(t){return t>1},nc.prototype.interfaces_=function(){return[Ql]},nc.prototype.getClass=function(){return nc};var rc=function(){};rc.prototype.isInBoundary=function(t){return 1===t},rc.prototype.interfaces_=function(){return[Ql]},rc.prototype.getClass=function(){return rc};var ic=function(){};function oc(t){this.message=t||""}ic.prototype.add=function(){},ic.prototype.addAll=function(){},ic.prototype.isEmpty=function(){},ic.prototype.iterator=function(){},ic.prototype.size=function(){},ic.prototype.toArray=function(){},ic.prototype.remove=function(){},oc.prototype=new Error,oc.prototype.name="IndexOutOfBoundsException";var sc=function(){};sc.prototype.hasNext=function(){},sc.prototype.next=function(){},sc.prototype.remove=function(){};var ac=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(ic);function uc(t){this.message=t||""}uc.prototype=new Error,uc.prototype.name="NoSuchElementException";var lc=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof ic&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,ic]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new cc(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new oc;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,r=this.array_.length;n<r;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(ac),cc=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new uc;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(sc),hc=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.ensureCapacity(n.length),this.add(n,r)}}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){var e=this;if(2===arguments.length){for(var n=arguments[0],r=arguments[1],i=!1,o=n.iterator();o.hasNext();)e.add(o.next(),r),i=!0;return i}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){var e=this;if(1===arguments.length){var n=arguments[0];t.prototype.add.call(this,n)}else if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var r=arguments[0],i=arguments[1];return this.add(r,i,!0),!0}if(arguments[0]instanceof ul&&"boolean"==typeof arguments[1]){var o=arguments[0],s=arguments[1];if(!s&&this.size()>=1){var a=this.get(this.size()-1);if(a.equals2D(o))return null}t.prototype.add.call(this,o)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){var u=arguments[0],l=arguments[1];return this.add(u,l),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var c=arguments[0],h=arguments[1],p=arguments[2];if(p)for(var f=0;f<c.length;f++)e.add(c[f],h);else for(var g=c.length-1;g>=0;g--)e.add(c[g],h);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof ul){var d=arguments[0],y=arguments[1],v=arguments[2];if(!v){var _=this.size();if(_>0){if(d>0){var m=this.get(d-1);if(m.equals2D(y))return null}if(d<_){var x=this.get(d);if(x.equals2D(y))return null}}}t.prototype.add.call(this,d,y)}}else if(4===arguments.length){var E=arguments[0],b=arguments[1],w=arguments[2],I=arguments[3],N=1;w>I&&(N=-1);for(var S=w;S!==I;S+=N)e.add(E[S],b);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new ul(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(lc),pc=function(){},fc={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};fc.ForwardComparator.get=function(){return gc},fc.BidirectionalComparator.get=function(){return dc},fc.coordArrayType.get=function(){return new Array(0).fill(null)},pc.prototype.interfaces_=function(){return[]},pc.prototype.getClass=function(){return pc},pc.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},pc.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(pc.indexOf(r,e)<0)return r}return null},pc.scroll=function(t,e){var n=pc.indexOf(e,t);if(n<0)return null;var r=new Array(t.length).fill(null);Pl.arraycopy(t,n,r,0,t.length-n),Pl.arraycopy(t,0,r,t.length-n,n),Pl.arraycopy(r,0,t,0,t.length)},pc.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];if(r===i)return!0;if(null===r||null===i)return!1;if(r.length!==i.length)return!1;for(var s=0;s<r.length;s++)if(0!==o.compare(r[s],i[s]))return!1;return!0}},pc.intersection=function(t,e){for(var n=new hc,r=0;r<t.length;r++)e.intersects(t[r])&&n.add(t[r],!0);return n.toCoordinateArray()},pc.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},pc.removeRepeatedPoints=function(t){return pc.hasRepeatedPoints(t)?new hc(t,!1).toCoordinateArray():t},pc.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),r=0;r<=n;r++){var i=t[r];t[r]=t[e-r],t[e-r]=i}},pc.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var r=new Array(e).fill(null);if(0===e)return r;for(var i=0,o=0;o<t.length;o++)null!==t[o]&&(r[i++]=t[o]);return r},pc.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new ul(t[n]);return e}if(5===arguments.length)for(var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new ul(r[i+u])},pc.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e[t.length-n-1];if(0!==r.compareTo(i))return!1}return!0},pc.envelope=function(t){for(var e=new Ll,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},pc.toCoordinateArray=function(t){return t.toArray(pc.coordArrayType)},pc.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},pc.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},pc.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,r=t[e].compareTo(t[n]);if(0!==r)return r}return 1},pc.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var r=t[n].compareTo(e[n]);if(0!==r)return r;n++}return n<e.length?-1:n<t.length?1:0},pc.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},pc.extract=function(t,e,n){e=dl.clamp(e,0,t.length);var r=(n=dl.clamp(n,-1,t.length))-e+1;n<0&&(r=0),e>=t.length&&(r=0),n<e&&(r=0);var i=new Array(r).fill(null);if(0===r)return i;for(var o=0,s=e;s<=n;s++)i[o++]=t[s];return i},Object.defineProperties(pc,fc);var gc=function(){};gc.prototype.compare=function(t,e){return pc.compare(t,e)},gc.prototype.interfaces_=function(){return[sl]},gc.prototype.getClass=function(){return gc};var dc=function(){};dc.prototype.compare=function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;var i=pc.compare(n,r);return pc.isEqualReversed(n,r)?0:i},dc.prototype.OLDcompare=function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;for(var i=pc.increasingDirection(n),o=pc.increasingDirection(r),s=i>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var l=n[s].compareTo(r[a]);if(0!==l)return l;s+=i,a+=o}return 0},dc.prototype.interfaces_=function(){return[sl]},dc.prototype.getClass=function(){return dc};var yc=function(){};yc.prototype.get=function(){},yc.prototype.put=function(){},yc.prototype.size=function(){},yc.prototype.values=function(){},yc.prototype.entrySet=function(){};var vc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(yc);function _c(t){this.message=t||""}function mc(){}_c.prototype=new Error,_c.prototype.name="OperationNotSupported",mc.prototype=new ic,mc.prototype.contains=function(){};var xc=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof ic&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Ec(this)},e}(mc),Ec=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new uc;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new _c},e}(sc);function bc(t){return null===t?0:t.color}function wc(t){return null===t?null:t.parent}function Ic(t,e){null!==t&&(t.color=e)}function Nc(t){return null===t?null:t.left}function Sc(t){return null===t?null:t.right}function Cc(){this.root_=null,this.size_=0}Cc.prototype=new vc,Cc.prototype.get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},Cc.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:0,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,r,i=this.root_;do{if(n=i,(r=t.compareTo(i.key))<0)i=i.left;else{if(!(r>0)){var o=i.value;return i.value=e,o}i=i.right}}while(null!==i);var s={key:t,left:null,right:null,value:e,parent:n,color:0,getValue:function(){return this.value},getKey:function(){return this.key}};return r<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},Cc.prototype.fixAfterInsertion=function(t){var e=this;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(wc(t)===Nc(wc(wc(t)))){var n=Sc(wc(wc(t)));1===bc(n)?(Ic(wc(t),0),Ic(n,0),Ic(wc(wc(t)),1),t=wc(wc(t))):(t===Sc(wc(t))&&(t=wc(t),e.rotateLeft(t)),Ic(wc(t),0),Ic(wc(wc(t)),1),e.rotateRight(wc(wc(t))))}else{var r=Nc(wc(wc(t)));1===bc(r)?(Ic(wc(t),0),Ic(r,0),Ic(wc(wc(t)),1),t=wc(wc(t))):(t===Nc(wc(t))&&(t=wc(t),e.rotateRight(t)),Ic(wc(t),0),Ic(wc(wc(t)),1),e.rotateLeft(wc(wc(t))))}this.root_.color=0},Cc.prototype.values=function(){var t=new lc,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=Cc.successor(e));)t.add(e.value);return t},Cc.prototype.entrySet=function(){var t=new xc,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=Cc.successor(e));)t.add(e);return t},Cc.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},Cc.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},Cc.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},Cc.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,r=t;null!==n&&r===n.right;)r=n,n=n.parent;return n},Cc.prototype.size=function(){return this.size_};var Pc=function(){};function Mc(){}function Lc(){this.array_=[],arguments[0]instanceof ic&&this.addAll(arguments[0])}Pc.prototype.interfaces_=function(){return[]},Pc.prototype.getClass=function(){return Pc},Mc.prototype=new mc,Lc.prototype=new Mc,Lc.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},Lc.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},Lc.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},Lc.prototype.remove=function(t){throw new _c},Lc.prototype.size=function(){return this.array_.length},Lc.prototype.isEmpty=function(){return 0===this.array_.length},Lc.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},Lc.prototype.iterator=function(){return new Oc(this)};var Oc=function(t){this.treeSet_=t,this.position_=0};Oc.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new uc;return this.treeSet_.array_[this.position_++]},Oc.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Oc.prototype.remove=function(){throw new _c};var Rc=function(){};Rc.sort=function(){var t,e,n,r,i=arguments[0];if(1===arguments.length)r=function(t,e){return t.compareTo(e)},i.sort(r);else if(2===arguments.length)n=arguments[1],r=function(t,e){return n.compare(t,e)},i.sort(r);else if(3===arguments.length){(e=i.slice(arguments[1],arguments[2])).sort();var o=i.slice(0,arguments[1]).concat(e,i.slice(arguments[2],i.length));for(i.splice(0,i.length),t=0;t<o.length;t++)i.push(o[t])}else if(4===arguments.length)for(e=i.slice(arguments[1],arguments[2]),n=arguments[3],r=function(t,e){return n.compare(t,e)},e.sort(r),o=i.slice(0,arguments[1]).concat(e,i.slice(arguments[2],i.length)),i.splice(0,i.length),t=0;t<o.length;t++)i.push(o[t])},Rc.asList=function(t){for(var e=new lc,n=0,r=t.length;n<r;n++)e.add(t[n]);return e};var Tc=function(){},Ac={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Ac.P.get=function(){return 0},Ac.L.get=function(){return 1},Ac.A.get=function(){return 2},Ac.FALSE.get=function(){return-1},Ac.TRUE.get=function(){return-2},Ac.DONTCARE.get=function(){return-3},Ac.SYM_FALSE.get=function(){return"F"},Ac.SYM_TRUE.get=function(){return"T"},Ac.SYM_DONTCARE.get=function(){return"*"},Ac.SYM_P.get=function(){return"0"},Ac.SYM_L.get=function(){return"1"},Ac.SYM_A.get=function(){return"2"},Tc.prototype.interfaces_=function(){return[]},Tc.prototype.getClass=function(){return Tc},Tc.toDimensionSymbol=function(t){switch(t){case Tc.FALSE:return Tc.SYM_FALSE;case Tc.TRUE:return Tc.SYM_TRUE;case Tc.DONTCARE:return Tc.SYM_DONTCARE;case Tc.P:return Tc.SYM_P;case Tc.L:return Tc.SYM_L;case Tc.A:return Tc.SYM_A}throw new el("Unknown dimension value: "+t)},Tc.toDimensionValue=function(t){switch(ml.toUpperCase(t)){case Tc.SYM_FALSE:return Tc.FALSE;case Tc.SYM_TRUE:return Tc.TRUE;case Tc.SYM_DONTCARE:return Tc.DONTCARE;case Tc.SYM_P:return Tc.P;case Tc.SYM_L:return Tc.L;case Tc.SYM_A:return Tc.A}throw new el("Unknown dimension symbol: "+t)},Object.defineProperties(Tc,Ac);var Dc=function(){};Dc.prototype.filter=function(t){},Dc.prototype.interfaces_=function(){return[]},Dc.prototype.getClass=function(){return Dc};var Fc=function(){};Fc.prototype.filter=function(t,e){},Fc.prototype.isDone=function(){},Fc.prototype.isGeometryChanged=function(){},Fc.prototype.interfaces_=function(){return[]},Fc.prototype.getClass=function(){return Fc};var kc=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new el("geometries must not contain null elements")}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new Ll,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var r=this._geometries[n].getCoordinates(),i=0;i<r.length;i++)t[++e]=r[i];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){var e=this;if(2===arguments.length){var n=arguments[0],r=arguments[1];if(!this.isEquivalentClass(n))return!1;var i=n;if(this._geometries.length!==i._geometries.length)return!1;for(var o=0;o<this._geometries.length;o++)if(!e._geometries[o].equalsExact(i._geometries[o],r))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();Rc.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=Tc.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=Tc.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){var t=this;if(1===arguments.length){var e=arguments[0],n=new Lc(Rc.asList(this._geometries)),r=new Lc(Rc.asList(e._geometries));return this.compare(n,r)}if(2===arguments.length){for(var i=arguments[0],o=arguments[1],s=i,a=this.getNumGeometries(),u=s.getNumGeometries(),l=0;l<a&&l<u;){var c=t.getGeometryN(l),h=s.getGeometryN(l),p=c.compareToSameClass(h,o);if(0!==p)return p;l++}return l<a?1:l<u?-1:0}},e.prototype.apply=function(){var t=this;if(gl(arguments[0],Kl))for(var e=arguments[0],n=0;n<this._geometries.length;n++)t._geometries[n].apply(e);else if(gl(arguments[0],Fc)){var r=arguments[0];if(0===this._geometries.length)return null;for(var i=0;i<this._geometries.length&&(t._geometries[i].apply(r),!r.isDone());i++);r.isGeometryChanged()&&this.geometryChanged()}else if(gl(arguments[0],Dc)){var o=arguments[0];o.filter(this);for(var s=0;s<this._geometries.length;s++)t._geometries[s].apply(o)}else if(gl(arguments[0],Hl)){var a=arguments[0];a.filter(this);for(var u=0;u<this._geometries.length;u++)t._geometries[u].apply(a)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),ql.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return"GeometryCollection"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(Wl),Gc=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return Wl.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?Tc.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new qc(this).getBoundary()},e.prototype.getGeometryType=function(){return"MultiLineString"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Pc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(kc),qc=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=Ql.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=r}};qc.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},qc.prototype.getBoundary=function(){return this._geom instanceof Zc?this.boundaryLineString(this._geom):this._geom instanceof Gc?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},qc.prototype.boundaryLineString=function(t){return this._geom.isEmpty()?this.getEmptyMultiPoint():t.isClosed()?this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint():this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},qc.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},qc.prototype.computeBoundaryCoordinates=function(t){var e=this,n=new lc;this._endpointMap=new Cc;for(var r=0;r<t.getNumGeometries();r++){var i=t.getGeometryN(r);0!==i.getNumPoints()&&(e.addEndpoint(i.getCoordinateN(0)),e.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var o=this._endpointMap.entrySet().iterator();o.hasNext();){var s=o.next(),a=s.getValue().count;e._bnRule.isInBoundary(a)&&n.add(s.getKey())}return pc.toCoordinateArray(n)},qc.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new Bc,this._endpointMap.put(t,e)),e.count++},qc.prototype.interfaces_=function(){return[]},qc.prototype.getClass=function(){return qc},qc.getBoundary=function(){if(1===arguments.length){var t=arguments[0],e=new qc(t);return e.getBoundary()}if(2===arguments.length){var n=arguments[0],r=arguments[1],i=new qc(n,r);return i.getBoundary()}};var Bc=function(){this.count=null};function zc(){}function jc(){}Bc.prototype.interfaces_=function(){return[]},Bc.prototype.getClass=function(){return Bc};var Uc=function(){};function Vc(){}function Xc(){}function Yc(){}var Hc=function(){},Wc={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};Hc.prototype.interfaces_=function(){return[]},Hc.prototype.getClass=function(){return Hc},Hc.chars=function(t,e){for(var n=new Array(e).fill(null),r=0;r<e;r++)n[r]=t;return String(n)},Hc.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new Vc,n=new zc(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var r=arguments[0],i=arguments[1],o="",s=new jc(Hc.getStackTrace(r)),a=new Yc(s),u=0;u<i;u++)try{o+=a.readLine()+Hc.NEWLINE}catch(t){if(!(t instanceof Xc))throw t;ql.shouldNeverReachHere()}return o}},Hc.split=function(t,e){for(var n=e.length,r=new lc,i=""+t,o=i.indexOf(e);o>=0;){var s=i.substring(0,o);r.add(s),o=(i=i.substring(o+n)).indexOf(e)}i.length>0&&r.add(i);for(var a=new Array(r.size()).fill(null),u=0;u<a.length;u++)a[u]=r.get(u);return a},Hc.toString=function(){if(1===arguments.length){var t=arguments[0];return Hc.SIMPLE_ORDINATE_FORMAT.format(t)}},Hc.spaces=function(t){return Hc.chars(" ",t)},Wc.NEWLINE.get=function(){return Pl.getProperty("line.separator")},Wc.SIMPLE_ORDINATE_FORMAT.get=function(){return new Uc("0.#")},Object.defineProperties(Hc,Wc);var Jc=function(){};Jc.prototype.interfaces_=function(){return[]},Jc.prototype.getClass=function(){return Jc},Jc.copyCoord=function(t,e,n,r){for(var i=Math.min(t.getDimension(),n.getDimension()),o=0;o<i;o++)n.setOrdinate(r,o,t.getOrdinate(e,o))},Jc.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,Il.X)===t.getOrdinate(e-1,Il.X)&&t.getOrdinate(0,Il.Y)===t.getOrdinate(e-1,Il.Y))},Jc.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var r=Math.min(t.getDimension(),e.getDimension()),i=0;i<n;i++)for(var o=0;o<r;o++){var s=t.getOrdinate(i,o),a=e.getOrdinate(i,o);if(t.getOrdinate(i,o)!==e.getOrdinate(i,o)&&(!nl.isNaN(s)||!nl.isNaN(a)))return!1}return!0},Jc.extend=function(t,e,n){var r=t.create(n,e.getDimension()),i=e.size();if(Jc.copy(e,0,r,0,i),i>0)for(var o=i;o<n;o++)Jc.copy(e,i-1,r,o,1);return r},Jc.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),r=0;r<=n;r++)Jc.swap(t,r,e-r)},Jc.swap=function(t,e,n){if(e===n)return null;for(var r=0;r<t.getDimension();r++){var i=t.getOrdinate(e,r);t.setOrdinate(e,r,t.getOrdinate(n,r)),t.setOrdinate(n,r,i)}},Jc.copy=function(t,e,n,r,i){for(var o=0;o<i;o++)Jc.copyCoord(t,e+o,n,r+o)},Jc.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return"()";var n=t.getDimension(),r=new vl;r.append("(");for(var i=0;i<e;i++){i>0&&r.append(" ");for(var o=0;o<n;o++)o>0&&r.append(","),r.append(Hc.toString(t.getOrdinate(i,o)))}return r.append(")"),r.toString()}},Jc.ensureValidRing=function(t,e){var n=e.size();return 0===n?e:n<=3?Jc.createClosedRing(t,e,4):e.getOrdinate(0,Il.X)===e.getOrdinate(n-1,Il.X)&&e.getOrdinate(0,Il.Y)===e.getOrdinate(n-1,Il.Y)?e:Jc.createClosedRing(t,e,n+1)},Jc.createClosedRing=function(t,e,n){var r=t.create(n,e.getDimension()),i=e.size();Jc.copy(e,0,r,0,i);for(var o=i;o<n;o++)Jc.copy(e,0,r,o,1);return r};var Zc=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new Ll:this._points.expandEnvelope(new Ll)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){var e=this;if(2===arguments.length){var n=arguments[0],r=arguments[1];if(!this.isEquivalentClass(n))return!1;var i=n;if(this._points.size()!==i._points.size())return!1;for(var o=0;o<this._points.size();o++)if(!e.equal(e._points.getCoordinate(o),i._points.getCoordinate(o),r))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=this,e=0;e<Math.trunc(this._points.size()/2);e++){var n=t._points.size()-1-e;if(!t._points.getCoordinate(e).equals(t._points.getCoordinate(n)))return t._points.getCoordinate(e).compareTo(t._points.getCoordinate(n))>0&&Jc.reverse(t._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?Tc.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return Xl.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();return Jc.reverse(t),this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){var t=this;if(1===arguments.length){for(var e=arguments[0],n=e,r=0,i=0;r<this._points.size()&&i<n._points.size();){var o=t._points.getCoordinate(r).compareTo(n._points.getCoordinate(i));if(0!==o)return o;r++,i++}return r<this._points.size()?1:i<n._points.size()?-1:0}if(2===arguments.length){var s=arguments[0],a=arguments[1],u=s;return a.compare(this._points,u._points)}},e.prototype.apply=function(){var t=this;if(gl(arguments[0],Kl))for(var e=arguments[0],n=0;n<this._points.size();n++)e.filter(t._points.getCoordinate(n));else if(gl(arguments[0],Fc)){var r=arguments[0];if(0===this._points.size())return null;for(var i=0;i<this._points.size()&&(r.filter(t._points,i),!r.isDone());i++);r.isGeometryChanged()&&this.geometryChanged()}else if(gl(arguments[0],Dc)){var o=arguments[0];o.filter(this)}else if(gl(arguments[0],Hl)){var s=arguments[0];s.filter(this)}},e.prototype.getBoundary=function(){return new qc(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return"LineString"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new el("Invalid number of points in LineString (found "+t.size()+" - must be 0 or >= 2)");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[Pc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(Wl),Kc=function(){};Kc.prototype.interfaces_=function(){return[]},Kc.prototype.getClass=function(){return Kc};var Qc=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new Ll;var t=new Ll;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return Tc.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error("getX called on empty Point");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getCoordinate().compareTo(e.getCoordinate())}if(2===arguments.length){var n=arguments[0],r=arguments[1],i=n;return r.compare(this._coordinates,i._coordinates)}},e.prototype.apply=function(){if(gl(arguments[0],Kl)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(gl(arguments[0],Fc)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(gl(arguments[0],Dc)){var n=arguments[0];n.filter(this)}else if(gl(arguments[0],Hl)){var r=arguments[0];r.filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return"Point"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error("getY called on empty Point");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),ql.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Kc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(Wl),$c=function(){};$c.prototype.interfaces_=function(){return[]},$c.prototype.getClass=function(){return $c};var th=function(t){function e(e,n,r){if(t.call(this,r),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new el("holes must not contain null elements");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new el("shell is empty but holes are not");this._shell=e,this._holes=n}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),r=0;r<n.length;r++)t[++e]=n[r];for(var i=0;i<this._holes.length;i++)for(var o=this._holes[i].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(Xl.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(Xl.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var r=t.getX(n);if(r!==e.getMinX()&&r!==e.getMaxX())return!1;var i=t.getY(n);if(i!==e.getMinY()&&i!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),l=t.getY(a);if(u!==o===(l!==s))return!1;o=u,s=l}return!0},e.prototype.equalsExact=function(){var e=this;if(2===arguments.length){var n=arguments[0],r=arguments[1];if(!this.isEquivalentClass(n))return!1;var i=n,o=this._shell,s=i._shell;if(!o.equalsExact(s,r))return!1;if(this._holes.length!==i._holes.length)return!1;for(var a=0;a<this._holes.length;a++)if(!e._holes[a].equalsExact(i._holes[a],r))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){var t=this;if(0===arguments.length){this.normalize(this._shell,!0);for(var e=0;e<this._holes.length;e++)t.normalize(t._holes[e],!1);Rc.sort(this._holes)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];if(n.isEmpty())return null;var i=new Array(n.getCoordinates().length-1).fill(null);Pl.arraycopy(n.getCoordinates(),0,i,0,i.length);var o=pc.minCoordinate(n.getCoordinates());pc.scroll(i,o),Pl.arraycopy(i,0,n.getCoordinates(),0,i.length),n.getCoordinates()[i.length]=i[0],Xl.isCCW(n.getCoordinates())===r&&pc.reverse(n.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){var t=this;if(1===arguments.length){var e=arguments[0],n=this._shell,r=e._shell;return n.compareToSameClass(r)}if(2===arguments.length){var i=arguments[0],o=arguments[1],s=i,a=this._shell,u=s._shell,l=a.compareToSameClass(u,o);if(0!==l)return l;for(var c=this.getNumInteriorRing(),h=s.getNumInteriorRing(),p=0;p<c&&p<h;){var f=t.getInteriorRingN(p),g=s.getInteriorRingN(p),d=f.compareToSameClass(g,o);if(0!==d)return d;p++}return p<c?1:p<h?-1:0}},e.prototype.apply=function(t){var e=this;if(gl(t,Kl)){this._shell.apply(t);for(var n=0;n<this._holes.length;n++)e._holes[n].apply(t)}else if(gl(t,Fc)){if(this._shell.apply(t),!t.isDone())for(var r=0;r<this._holes.length&&(e._holes[r].apply(t),!t.isDone());r++);t.isGeometryChanged()&&this.geometryChanged()}else if(gl(t,Dc))t.filter(this);else if(gl(t,Hl)){t.filter(this),this._shell.apply(t);for(var i=0;i<this._holes.length;i++)e._holes[i].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return"Polygon"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),r=0;r<n.length;r++)n[r]=this._holes[r].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[$c]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(Wl),eh=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return Wl.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return Tc.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return"MultiPoint"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Kc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(kc),nh=function(t){function e(e,n){e instanceof ul&&n instanceof _h&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return Wl.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return Tc.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();return Jc.reverse(t),this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new el("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new el("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")},e.prototype.getGeometryType=function(){return"LinearRing"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Zc),rh=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return Wl.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new lc,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),r=0;r<n.getNumGeometries();r++)t.add(n.getGeometryN(r));var i=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(i))},e.prototype.getGeometryType=function(){return"MultiPolygon"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[$c]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(kc),ih=function(t){this._factory=t||null,this._isUserDataCopied=!1},oh={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};ih.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},ih.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},ih.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof kc?this.editGeometryCollection(t,e):t instanceof th?this.editPolygon(t,e):t instanceof Qc||t instanceof Zc?e.edit(t,this._factory):(ql.shouldNeverReachHere("Unsupported Geometry class: "+t.getClass().getName()),null)},ih.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),r=new lc,i=0;i<n.getNumGeometries();i++){var o=this.edit(n.getGeometryN(i),e);null===o||o.isEmpty()||r.add(o)}return n.getClass()===eh?this._factory.createMultiPoint(r.toArray([])):n.getClass()===Gc?this._factory.createMultiLineString(r.toArray([])):n.getClass()===rh?this._factory.createMultiPolygon(r.toArray([])):this._factory.createGeometryCollection(r.toArray([]))},ih.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var r=this.edit(n.getExteriorRing(),e);if(null===r||r.isEmpty())return this._factory.createPolygon();for(var i=new lc,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||i.add(s)}return this._factory.createPolygon(r,i.toArray([]))},ih.prototype.interfaces_=function(){return[]},ih.prototype.getClass=function(){return ih},ih.GeometryEditorOperation=function(){},oh.NoOpGeometryOperation.get=function(){return sh},oh.CoordinateOperation.get=function(){return ah},oh.CoordinateSequenceOperation.get=function(){return uh},Object.defineProperties(ih,oh);var sh=function(){};sh.prototype.edit=function(t,e){return t},sh.prototype.interfaces_=function(){return[ih.GeometryEditorOperation]},sh.prototype.getClass=function(){return sh};var ah=function(){};ah.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof nh?e.createLinearRing(n):t instanceof Zc?e.createLineString(n):t instanceof Qc?n.length>0?e.createPoint(n[0]):e.createPoint():t},ah.prototype.interfaces_=function(){return[ih.GeometryEditorOperation]},ah.prototype.getClass=function(){return ah};var uh=function(){};uh.prototype.edit=function(t,e){return t instanceof nh?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Zc?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Qc?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},uh.prototype.interfaces_=function(){return[ih.GeometryEditorOperation]},uh.prototype.getClass=function(){return uh};var lh=function(){var t=this;if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var e=arguments[0];this._coordinates=new Array(e).fill(null);for(var n=0;n<e;n++)t._coordinates[n]=new ul}else if(gl(arguments[0],Il)){var r=arguments[0];if(null===r)return this._coordinates=new Array(0).fill(null),null;this._dimension=r.getDimension(),this._coordinates=new Array(r.size()).fill(null);for(var i=0;i<this._coordinates.length;i++)t._coordinates[i]=r.getCoordinateCopy(i)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var o=arguments[0],s=arguments[1];this._coordinates=o,this._dimension=s,null===o&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var a=arguments[0],u=arguments[1];this._coordinates=new Array(a).fill(null),this._dimension=u;for(var l=0;l<a;l++)t._coordinates[l]=new ul}},ch={serialVersionUID:{configurable:!0}};lh.prototype.setOrdinate=function(t,e,n){switch(e){case Il.X:this._coordinates[t].x=n;break;case Il.Y:this._coordinates[t].y=n;break;case Il.Z:this._coordinates[t].z=n;break;default:throw new el("invalid ordinateIndex")}},lh.prototype.size=function(){return this._coordinates.length},lh.prototype.getOrdinate=function(t,e){switch(e){case Il.X:return this._coordinates[t].x;case Il.Y:return this._coordinates[t].y;case Il.Z:return this._coordinates[t].z}return nl.NaN},lh.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},lh.prototype.getCoordinateCopy=function(t){return new ul(this._coordinates[t])},lh.prototype.getDimension=function(){return this._dimension},lh.prototype.getX=function(t){return this._coordinates[t].x},lh.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new lh(t,this._dimension)},lh.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},lh.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new lh(t,this._dimension)},lh.prototype.toString=function(){if(this._coordinates.length>0){var t=new vl(17*this._coordinates.length);t.append("("),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(", "),t.append(this._coordinates[e]);return t.append(")"),t.toString()}return"()"},lh.prototype.getY=function(t){return this._coordinates[t].y},lh.prototype.toCoordinateArray=function(){return this._coordinates},lh.prototype.interfaces_=function(){return[Il,al]},lh.prototype.getClass=function(){return lh},ch.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(lh,ch);var hh=function(){},ph={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};hh.prototype.readResolve=function(){return hh.instance()},hh.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new lh(t)}if(gl(arguments[0],Il)){var e=arguments[0];return new lh(e)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return r>3&&(r=3),r<2?new lh(n):new lh(n,r)}},hh.prototype.interfaces_=function(){return[hl,al]},hh.prototype.getClass=function(){return hh},hh.instance=function(){return hh.instanceObject},ph.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},ph.instanceObject.get=function(){return new hh},Object.defineProperties(hh,ph);var fh=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new lc,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new xc;return this.map_.entries().forEach((function(e){return t.add(e)})),t},e.prototype.size=function(){return this.map_.size()},e}(yc),gh=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof yh){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var r=arguments[0];this._modelType=r._modelType,this._scale=r._scale}},dh={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};gh.prototype.equals=function(t){if(!(t instanceof gh))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},gh.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),r=e.getMaximumSignificantDigits();return new _l(n).compareTo(new _l(r))},gh.prototype.getScale=function(){return this._scale},gh.prototype.isFloating=function(){return this._modelType===gh.FLOATING||this._modelType===gh.FLOATING_SINGLE},gh.prototype.getType=function(){return this._modelType},gh.prototype.toString=function(){var t="UNKNOWN";return this._modelType===gh.FLOATING?t="Floating":this._modelType===gh.FLOATING_SINGLE?t="Floating-Single":this._modelType===gh.FIXED&&(t="Fixed (Scale="+this.getScale()+")"),t},gh.prototype.makePrecise=function(){if("number"==typeof arguments[0]){var t=arguments[0];if(nl.isNaN(t))return t;if(this._modelType===gh.FLOATING_SINGLE){return t}return this._modelType===gh.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof ul){var e=arguments[0];if(this._modelType===gh.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},gh.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===gh.FLOATING?t=16:this._modelType===gh.FLOATING_SINGLE?t=6:this._modelType===gh.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},gh.prototype.setScale=function(t){this._scale=Math.abs(t)},gh.prototype.interfaces_=function(){return[al,il]},gh.prototype.getClass=function(){return gh},gh.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},dh.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},dh.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(gh,dh);var yh=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},vh={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};yh.prototype.readResolve=function(){return yh.nameToTypeMap.get(this._name)},yh.prototype.toString=function(){return this._name},yh.prototype.interfaces_=function(){return[al]},yh.prototype.getClass=function(){return yh},vh.serialVersionUID.get=function(){return-552860263173159e4},vh.nameToTypeMap.get=function(){return new fh},Object.defineProperties(yh,vh),gh.Type=yh,gh.FIXED=new yh("FIXED"),gh.FLOATING=new yh("FLOATING"),gh.FLOATING_SINGLE=new yh("FLOATING SINGLE");var _h=function t(){this._precisionModel=new gh,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?gl(arguments[0],hl)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof gh&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},mh={serialVersionUID:{configurable:!0}};_h.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new ul(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new ul(t.getMinX(),t.getMinY()),new ul(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new ul(t.getMinX(),t.getMinY()),new ul(t.getMinX(),t.getMaxY()),new ul(t.getMaxX(),t.getMaxY()),new ul(t.getMaxX(),t.getMinY()),new ul(t.getMinX(),t.getMinY())]),null)},_h.prototype.createLineString=function(t){return t?t instanceof Array?new Zc(this.getCoordinateSequenceFactory().create(t),this):gl(t,Il)?new Zc(t,this):void 0:new Zc(this.getCoordinateSequenceFactory().create([]),this)},_h.prototype.createMultiLineString=function(){if(0===arguments.length)return new Gc(null,this);if(1===arguments.length){var t=arguments[0];return new Gc(t,this)}},_h.prototype.buildGeometry=function(t){for(var e=null,n=!1,r=!1,i=t.iterator();i.hasNext();){var o=i.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(r=!0)}if(null===e)return this.createGeometryCollection();if(n||r)return this.createGeometryCollection(_h.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof th)return this.createMultiPolygon(_h.toPolygonArray(t));if(a instanceof Zc)return this.createMultiLineString(_h.toLineStringArray(t));if(a instanceof Qc)return this.createMultiPoint(_h.toPointArray(t));ql.shouldNeverReachHere("Unhandled class: "+a.getClass().getName())}return a},_h.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_h.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof ul){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(gl(arguments[0],Il)){var e=arguments[0];return new Qc(e,this)}}},_h.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_h.prototype.createPolygon=function(){if(0===arguments.length)return new th(null,null,this);if(1===arguments.length){if(gl(arguments[0],Il)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof nh){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];return new th(r,i,this)}},_h.prototype.getSRID=function(){return this._SRID},_h.prototype.createGeometryCollection=function(){if(0===arguments.length)return new kc(null,this);if(1===arguments.length){var t=arguments[0];return new kc(t,this)}},_h.prototype.createGeometry=function(t){return new ih(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_h.prototype.getPrecisionModel=function(){return this._precisionModel},_h.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(gl(arguments[0],Il)){var e=arguments[0];return new nh(e,this)}}},_h.prototype.createMultiPolygon=function(){if(0===arguments.length)return new rh(null,this);if(1===arguments.length){var t=arguments[0];return new rh(t,this)}},_h.prototype.createMultiPoint=function(){var t=this;if(0===arguments.length)return new eh(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];return new eh(e,this)}if(arguments[0]instanceof Array){var n=arguments[0];return this.createMultiPoint(null!==n?this.getCoordinateSequenceFactory().create(n):null)}if(gl(arguments[0],Il)){var r=arguments[0];if(null===r)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(r.size()).fill(null),o=0;o<r.size();o++){var s=t.getCoordinateSequenceFactory().create(1,r.getDimension());Jc.copy(r,o,s,0,1),i[o]=t.createPoint(s)}return this.createMultiPoint(i)}}},_h.prototype.interfaces_=function(){return[al]},_h.prototype.getClass=function(){return _h},_h.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.getDefaultCoordinateSequenceFactory=function(){return hh.instance()},_h.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},mh.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_h,mh);var xh=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],Eh=function(t){this.geometryFactory=t||new _h};Eh.prototype.read=function(t){var e,n=(e="string"==typeof t?JSON.parse(t):t).type;if(!bh[n])throw new Error("Unknown GeoJSON type: "+e.type);return-1!==xh.indexOf(n)?bh[n].apply(this,[e.coordinates]):"GeometryCollection"===n?bh[n].apply(this,[e.geometries]):bh[n].apply(this,[e])},Eh.prototype.write=function(t){var e=t.getGeometryType();if(!wh[e])throw new Error("Geometry is not supported");return wh[e].apply(this,[t])};var bh={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var r=t.geometry.type;if(!bh[r])throw new Error("Unknown GeoJSON type: "+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=bh.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(new ul(r[0],r[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new ul(t[0],t[1]),new ul(t[2],t[1]),new ul(t[2],t[3]),new ul(t[0],t[3]),new ul(t[0],t[1])])},Point:function(t){var e=new ul(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(bh.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=bh.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(bh.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=bh.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),r=[],i=1;i<t.length;++i){var o=t[i],s=bh.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);r.push(a)}return this.geometryFactory.createPolygon(n,r)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(bh.Polygon.apply(this,[r]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(this.read(r))}return this.geometryFactory.createGeometryCollection(e)}},wh={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:"Point",coordinates:wh.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.Point.apply(this,[r]);e.push(i.coordinates)}return{type:"MultiPoint",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),r=0;r<n.length;++r){var i=n[r];e.push(wh.coordinate.apply(this,[i]))}return{type:"LineString",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.LineString.apply(this,[r]);e.push(i.coordinates)}return{type:"MultiLineString",coordinates:e}},Polygon:function(t){var e=[],n=wh.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var r=0;r<t._holes.length;++r){var i=t._holes[r],o=wh.LineString.apply(this,[i]);e.push(o.coordinates)}return{type:"Polygon",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.Polygon.apply(this,[r]);e.push(i.coordinates)}return{type:"MultiPolygon",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=r.getGeometryType();e.push(wh[i].apply(this,[r]))}return{type:"GeometryCollection",geometries:e}}},Ih=function(t){this.geometryFactory=t||new _h,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new Eh(this.geometryFactory)};Ih.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===gh.FIXED&&this.reducePrecision(e),e},Ih.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Nh=function(){this.parser=new Eh(this.geometryFactory)};Nh.prototype.write=function(t){return this.parser.write(t)};var Sh=function(){},Ch={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};function Ph(t){this.message=t||""}function Mh(){this.array_=[]}Sh.prototype.interfaces_=function(){return[]},Sh.prototype.getClass=function(){return Sh},Sh.opposite=function(t){return t===Sh.LEFT?Sh.RIGHT:t===Sh.RIGHT?Sh.LEFT:t},Ch.ON.get=function(){return 0},Ch.LEFT.get=function(){return 1},Ch.RIGHT.get=function(){return 2},Object.defineProperties(Sh,Ch),Ph.prototype=new Error,Ph.prototype.name="EmptyStackException",Mh.prototype=new ac,Mh.prototype.add=function(t){return this.array_.push(t),!0},Mh.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},Mh.prototype.push=function(t){return this.array_.push(t),t},Mh.prototype.pop=function(t){if(0===this.array_.length)throw new Ph;return this.array_.pop()},Mh.prototype.peek=function(){if(0===this.array_.length)throw new Ph;return this.array_[this.array_.length-1]},Mh.prototype.empty=function(){return 0===this.array_.length},Mh.prototype.isEmpty=function(){return this.empty()},Mh.prototype.search=function(t){return this.array_.indexOf(t)},Mh.prototype.size=function(){return this.array_.length},Mh.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var Lh=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};Lh.prototype.getCoordinate=function(){return this._minCoord},Lh.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},Lh.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();ql.isTrue(this._minIndex>0&&this._minIndex<t.length,"rightmost point expected to be interior vertex of edge");var e=t[this._minIndex-1],n=t[this._minIndex+1],r=Xl.computeOrientation(this._minCoord,n,e),i=!1;(e.y<this._minCoord.y&&n.y<this._minCoord.y&&r===Xl.COUNTERCLOCKWISE||e.y>this._minCoord.y&&n.y>this._minCoord.y&&r===Xl.CLOCKWISE)&&(i=!0),i&&(this._minIndex=this._minIndex-1)},Lh.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var r=Sh.LEFT;return n[e].y<n[e+1].y&&(r=Sh.RIGHT),r},Lh.prototype.getEdge=function(){return this._orientedDe},Lh.prototype.checkForRightmostCoordinate=function(t){for(var e=this,n=t.getEdge().getCoordinates(),r=0;r<n.length-1;r++)(null===e._minCoord||n[r].x>e._minCoord.x)&&(e._minDe=t,e._minIndex=r,e._minCoord=n[r])},Lh.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},Lh.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}ql.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe,this.getRightmostSide(this._minDe,this._minIndex)===Sh.LEFT&&(this._orientedDe=this._minDe.getSym())},Lh.prototype.interfaces_=function(){return[]},Lh.prototype.getClass=function(){return Lh};var Oh=function(t){function e(n,r){t.call(this,e.msgWithCoord(n,r)),this.pt=r?new ul(r):null,this.name="TopologyException"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+" [ "+e+" ]"},e}(kl),Rh=function(){this.array_=[]};Rh.prototype.addLast=function(t){this.array_.push(t)},Rh.prototype.removeFirst=function(){return this.array_.shift()},Rh.prototype.isEmpty=function(){return 0===this.array_.length};var Th=function(){this._finder=null,this._dirEdgeList=new lc,this._nodes=new lc,this._rightMostCoord=null,this._env=null,this._finder=new Lh};Th.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Th.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Th.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var r=n.next();if(r.isVisited()||r.getSym().isVisited()){e=r;break}}if(null===e)throw new Oh("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for(var i=t.getEdges().iterator();i.hasNext();){var o=i.next();o.setVisited(!0),this.copySymDepths(o)}},Th.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Sh.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Th.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Th.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Sh.RIGHT)>=1&&e.getDepth(Sh.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Th.prototype.computeDepths=function(t){var e=new xc,n=new Rh,r=t.getNode();for(n.addLast(r),e.add(r),t.setVisited(!0);!n.isEmpty();){var i=n.removeFirst();e.add(i),this.computeNodeDepth(i);for(var o=i.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Th.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Th.prototype.getEnvelope=function(){if(null===this._env){for(var t=new Ll,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),r=0;r<n.length-1;r++)t.expandToInclude(n[r]);this._env=t}return this._env},Th.prototype.addReachable=function(t){var e=new Mh;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Th.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Sh.LEFT,t.getDepth(Sh.RIGHT)),e.setDepth(Sh.RIGHT,t.getDepth(Sh.LEFT))},Th.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var r=n.next();this._dirEdgeList.add(r);var i=r.getSym().getNode();i.isVisited()||e.push(i)}},Th.prototype.getNodes=function(){return this._nodes},Th.prototype.getDirectedEdges=function(){return this._dirEdgeList},Th.prototype.interfaces_=function(){return[il]},Th.prototype.getClass=function(){return Th};var Ah=function t(){var e=this;if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var n=arguments[0];this.init(n.length)}else if(Number.isInteger(arguments[0])){var r=arguments[0];this.init(1),this.location[Sh.ON]=r}else if(arguments[0]instanceof t){var i=arguments[0];if(this.init(i.location.length),null!==i)for(var o=0;o<this.location.length;o++)e.location[o]=i.location[o]}}else if(3===arguments.length){var s=arguments[0],a=arguments[1],u=arguments[2];this.init(3),this.location[Sh.ON]=s,this.location[Sh.LEFT]=a,this.location[Sh.RIGHT]=u}};Ah.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Ah.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==pl.NONE)return!1;return!0},Ah.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===pl.NONE&&(this.location[e]=t)},Ah.prototype.isLine=function(){return 1===this.location.length},Ah.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Sh.ON]=this.location[Sh.ON],e[Sh.LEFT]=pl.NONE,e[Sh.RIGHT]=pl.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===pl.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Ah.prototype.getLocations=function(){return this.location},Ah.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Sh.LEFT];this.location[Sh.LEFT]=this.location[Sh.RIGHT],this.location[Sh.RIGHT]=t},Ah.prototype.toString=function(){var t=new vl;return this.location.length>1&&t.append(pl.toLocationSymbol(this.location[Sh.LEFT])),t.append(pl.toLocationSymbol(this.location[Sh.ON])),this.location.length>1&&t.append(pl.toLocationSymbol(this.location[Sh.RIGHT])),t.toString()},Ah.prototype.setLocations=function(t,e,n){this.location[Sh.ON]=t,this.location[Sh.LEFT]=e,this.location[Sh.RIGHT]=n},Ah.prototype.get=function(t){return t<this.location.length?this.location[t]:pl.NONE},Ah.prototype.isArea=function(){return this.location.length>1},Ah.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===pl.NONE)return!0;return!1},Ah.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Sh.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Ah.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(pl.NONE)},Ah.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Ah.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Ah.prototype.interfaces_=function(){return[]},Ah.prototype.getClass=function(){return Ah};var Dh=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Ah(e),this.elt[1]=new Ah(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Ah(n.elt[0]),this.elt[1]=new Ah(n.elt[1])}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.elt[0]=new Ah(pl.NONE),this.elt[1]=new Ah(pl.NONE),this.elt[r].setLocation(i)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Ah(o,s,a),this.elt[1]=new Ah(o,s,a)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2],h=arguments[3];this.elt[0]=new Ah(pl.NONE,pl.NONE,pl.NONE),this.elt[1]=new Ah(pl.NONE,pl.NONE,pl.NONE),this.elt[u].setLocations(l,c,h)}};Dh.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Dh.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Dh.prototype.isNull=function(t){return this.elt[t].isNull()},Dh.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Dh.prototype.isLine=function(t){return this.elt[t].isLine()},Dh.prototype.merge=function(t){for(var e=this,n=0;n<2;n++)null===e.elt[n]&&null!==t.elt[n]?e.elt[n]=new Ah(t.elt[n]):e.elt[n].merge(t.elt[n])},Dh.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Dh.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Sh.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Dh.prototype.toString=function(){var t=new vl;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()},Dh.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Dh.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Dh.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Sh.ON,e)}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this.elt[n].setLocation(r,i)}},Dh.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Dh.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Dh.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Ah(this.elt[t].location[0]))},Dh.prototype.interfaces_=function(){return[]},Dh.prototype.getClass=function(){return Dh},Dh.toLineLabel=function(t){for(var e=new Dh(pl.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var Fh=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new lc,this._pts=new lc,this._label=new Dh(pl.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new lc,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};Fh.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=Xl.isCCW(this._ring.getCoordinates())},Fh.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},Fh.prototype.computePoints=function(t){var e=this;this._startDe=t;var n=t,r=!0;do{if(null===n)throw new Oh("Found null DirectedEdge");if(n.getEdgeRing()===e)throw new Oh("Directed Edge visited twice during ring-building at "+n.getCoordinate());e._edges.add(n);var i=n.getLabel();ql.isTrue(i.isArea()),e.mergeLabel(i),e.addPoints(n.getEdge(),n.isForward(),r),r=!1,e.setEdgeRing(n,e),n=e.getNext(n)}while(n!==this._startDe)},Fh.prototype.getLinearRing=function(){return this._ring},Fh.prototype.getCoordinate=function(t){return this._pts.get(t)},Fh.prototype.computeMaxNodeDegree=function(){var t=this;this._maxNodeDegree=0;var e=this._startDe;do{var n=e.getNode().getEdges().getOutgoingDegree(t);n>t._maxNodeDegree&&(t._maxNodeDegree=n),e=t.getNext(e)}while(e!==this._startDe);this._maxNodeDegree*=2},Fh.prototype.addPoints=function(t,e,n){var r=t.getCoordinates();if(e){var i=1;n&&(i=0);for(var o=i;o<r.length;o++)this._pts.add(r[o])}else{var s=r.length-2;n&&(s=r.length-1);for(var a=s;a>=0;a--)this._pts.add(r[a])}},Fh.prototype.isHole=function(){return this._isHole},Fh.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},Fh.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!Xl.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},Fh.prototype.addHole=function(t){this._holes.add(t)},Fh.prototype.isShell=function(){return null===this._shell},Fh.prototype.getLabel=function(){return this._label},Fh.prototype.getEdges=function(){return this._edges},Fh.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},Fh.prototype.getShell=function(){return this._shell},Fh.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=e.getLocation(n,Sh.RIGHT);if(r===pl.NONE)return null;if(this._label.getLocation(n)===pl.NONE)return this._label.setLocation(n,r),null}},Fh.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},Fh.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},Fh.prototype.interfaces_=function(){return[]},Fh.prototype.getClass=function(){return Fh};var kh=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fh),Gh=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new lc,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new kh(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fh),qh=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};qh.prototype.setVisited=function(t){this._isVisited=t},qh.prototype.setInResult=function(t){this._isInResult=t},qh.prototype.isCovered=function(){return this._isCovered},qh.prototype.isCoveredSet=function(){return this._isCoveredSet},qh.prototype.setLabel=function(t){this._label=t},qh.prototype.getLabel=function(){return this._label},qh.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},qh.prototype.updateIM=function(t){ql.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)},qh.prototype.isInResult=function(){return this._isInResult},qh.prototype.isVisited=function(){return this._isVisited},qh.prototype.interfaces_=function(){return[]},qh.prototype.getClass=function(){return qh};var Bh=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Dh(0,pl.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println("node "+this._coord+" lbl: "+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=pl.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var r=t.getLocation(e);n!==pl.BOUNDARY&&(n=r)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Dh(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){var t=this;if(arguments[0]instanceof e){var n=arguments[0];this.mergeLabel(n._label)}else if(arguments[0]instanceof Dh)for(var r=arguments[0],i=0;i<2;i++){var o=t.computeMergedLocation(r,i),s=t._label.getLocation(i);s===pl.NONE&&t._label.setLocation(i,o)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=pl.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case pl.BOUNDARY:n=pl.INTERIOR;break;case pl.INTERIOR:default:n=pl.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(qh),zh=function(){this.nodeMap=new Cc,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};zh.prototype.find=function(t){return this.nodeMap.get(t)},zh.prototype.addNode=function(){if(arguments[0]instanceof ul){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Bh){var n=arguments[0],r=this.nodeMap.get(n.getCoordinate());return null===r?(this.nodeMap.put(n.getCoordinate(),n),n):(r.mergeLabel(n),r)}},zh.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},zh.prototype.iterator=function(){return this.nodeMap.values().iterator()},zh.prototype.values=function(){return this.nodeMap.values()},zh.prototype.getBoundaryNodes=function(t){for(var e=new lc,n=this.iterator();n.hasNext();){var r=n.next();r.getLabel().getLocation(t)===pl.BOUNDARY&&e.add(r)}return e},zh.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},zh.prototype.interfaces_=function(){return[]},zh.prototype.getClass=function(){return zh};var jh=function(){},Uh={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};jh.prototype.interfaces_=function(){return[]},jh.prototype.getClass=function(){return jh},jh.isNorthern=function(t){return t===jh.NE||t===jh.NW},jh.isOpposite=function(t,e){return t!==e&&2===(t-e+4)%4},jh.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},jh.isInHalfPlane=function(t,e){return e===jh.SE?t===jh.SE||t===jh.SW:t===e||t===e+1},jh.quadrant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new el("Cannot compute the quadrant for point ( "+t+", "+e+" )");return t>=0?e>=0?jh.NE:jh.SE:e>=0?jh.NW:jh.SW}if(arguments[0]instanceof ul&&arguments[1]instanceof ul){var n=arguments[0],r=arguments[1];if(r.x===n.x&&r.y===n.y)throw new el("Cannot compute the quadrant for two identical points "+n);return r.x>=n.x?r.y>=n.y?jh.NE:jh.SE:r.y>=n.y?jh.NW:jh.SW}},Uh.NE.get=function(){return 0},Uh.NW.get=function(){return 1},Uh.SW.get=function(){return 2},Uh.SE.get=function(){return 3},Object.defineProperties(jh,Uh);var Vh=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=null;this._edge=e,this.init(n,r),this._label=i}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this._edge=o,this.init(s,a),this._label=u}};Vh.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:Xl.computeOrientation(t._p0,t._p1,this._p1)},Vh.prototype.getDy=function(){return this._dy},Vh.prototype.getCoordinate=function(){return this._p0},Vh.prototype.setNode=function(t){this._node=t},Vh.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),r=n.lastIndexOf("."),i=n.substring(r+1);t.print("  "+i+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label)},Vh.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},Vh.prototype.getDirectedCoordinate=function(){return this._p1},Vh.prototype.getDx=function(){return this._dx},Vh.prototype.getLabel=function(){return this._label},Vh.prototype.getEdge=function(){return this._edge},Vh.prototype.getQuadrant=function(){return this._quadrant},Vh.prototype.getNode=function(){return this._node},Vh.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(".");return"  "+e.substring(n+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label},Vh.prototype.computeLabel=function(t){},Vh.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=jh.quadrant(this._dx,this._dy),ql.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")},Vh.prototype.interfaces_=function(){return[il]},Vh.prototype.getClass=function(){return Vh};var Xh=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var r=e.getNumPoints()-1;this.init(e.getCoordinate(r),e.getCoordinate(r-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Dh(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new Oh("assigned depths do not match",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=this,e=!0,n=0;n<2;n++)t._label.isArea(n)&&t._label.getLocation(n,Sh.LEFT)===pl.INTERIOR&&t._label.getLocation(n,Sh.RIGHT)===pl.INTERIOR||(e=!1);return e},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(" "+this._depth[Sh.LEFT]+"/"+this._depth[Sh.RIGHT]),e.print(" ("+this.getDepthDelta()+")"),this._isInResult&&e.print(" inResult")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,pl.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,pl.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(" "),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var r=1;t===Sh.LEFT&&(r=-1);var i=Sh.opposite(t),o=e+n*r;this.setDepth(t,e),this.setDepth(i,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===pl.EXTERIOR&&e===pl.INTERIOR?1:t===pl.INTERIOR&&e===pl.EXTERIOR?-1:0},e}(Vh),Yh=function(){};Yh.prototype.createNode=function(t){return new Bh(t,null)},Yh.prototype.interfaces_=function(){return[]},Yh.prototype.getClass=function(){return Yh};var Hh=function(){if(this._edges=new lc,this._nodes=null,this._edgeEndList=new lc,0===arguments.length)this._nodes=new zh(new Yh);else if(1===arguments.length){var t=arguments[0];this._nodes=new zh(t)}};Hh.prototype.printEdges=function(t){t.println("Edges:");for(var e=0;e<this._edges.size();e++){t.println("edge "+e+":");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Hh.prototype.find=function(t){return this._nodes.find(t)},Hh.prototype.addNode=function(){if(arguments[0]instanceof Bh){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof ul){var e=arguments[0];return this._nodes.addNode(e)}},Hh.prototype.getNodeIterator=function(){return this._nodes.iterator()},Hh.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Hh.prototype.debugPrintln=function(t){Pl.out.println(t)},Hh.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var r=n.getLabel();return null!==r&&r.getLocation(t)===pl.BOUNDARY},Hh.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Hh.prototype.matchInSameDirection=function(t,e,n,r){return!!t.equals(n)&&(Xl.computeOrientation(t,e,r)===Xl.COLLINEAR&&jh.quadrant(t,e)===jh.quadrant(n,r))},Hh.prototype.getEdgeEnds=function(){return this._edgeEndList},Hh.prototype.debugPrint=function(t){Pl.out.print(t)},Hh.prototype.getEdgeIterator=function(){return this._edges.iterator()},Hh.prototype.findEdgeInSameDirection=function(t,e){for(var n=this,r=0;r<this._edges.size();r++){var i=n._edges.get(r),o=i.getCoordinates();if(n.matchInSameDirection(t,e,o[0],o[1]))return i;if(n.matchInSameDirection(t,e,o[o.length-1],o[o.length-2]))return i}return null},Hh.prototype.insertEdge=function(t){this._edges.add(t)},Hh.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Hh.prototype.addEdges=function(t){for(var e=this,n=t.iterator();n.hasNext();){var r=n.next();e._edges.add(r);var i=new Xh(r,!0),o=new Xh(r,!1);i.setSym(o),o.setSym(i),e.add(i),e.add(o)}},Hh.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Hh.prototype.getNodes=function(){return this._nodes.values()},Hh.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(t.equals(i[0])&&e.equals(i[1]))return r}return null},Hh.prototype.interfaces_=function(){return[]},Hh.prototype.getClass=function(){return Hh},Hh.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var Wh=function(){this._geometryFactory=null,this._shellList=new lc;var t=arguments[0];this._geometryFactory=t};Wh.prototype.sortShellsAndHoles=function(t,e,n){for(var r=t.iterator();r.hasNext();){var i=r.next();i.isHole()?n.add(i):e.add(i)}},Wh.prototype.computePolygons=function(t){for(var e=new lc,n=t.iterator();n.hasNext();){var r=n.next().toPolygon(this._geometryFactory);e.add(r)}return e},Wh.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();if(null===r.getShell()){var i=this.findEdgeRingContaining(r,t);if(null===i)throw new Oh("unable to assign hole to a shell",r.getCoordinate(0));r.setShell(i)}}},Wh.prototype.buildMinimalEdgeRings=function(t,e,n){for(var r=new lc,i=t.iterator();i.hasNext();){var o=i.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else r.add(o)}return r},Wh.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},Wh.prototype.buildMaximalEdgeRings=function(t){for(var e=new lc,n=t.iterator();n.hasNext();){var r=n.next();if(r.isInResult()&&r.getLabel().isArea()&&null===r.getEdgeRing()){var i=new Gh(r,this._geometryFactory);e.add(i),i.setInResult()}}return e},Wh.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();r.isHole()&&r.setShell(t)}},Wh.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},Wh.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),r=n.getEnvelopeInternal(),i=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),c=l.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var h=!1;c.contains(r)&&Xl.isPointInRing(i,l.getCoordinates())&&(h=!0),h&&(null===o||s.contains(c))&&(o=u)}return o},Wh.prototype.findShell=function(t){for(var e=0,n=null,r=t.iterator();r.hasNext();){var i=r.next();i.isHole()||(n=i,e++)}return ql.isTrue(e<=1,"found two shells in MinimalEdgeRing list"),n},Wh.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Hh.linkResultDirectedEdges(n);var r=this.buildMaximalEdgeRings(e),i=new lc,o=this.buildMinimalEdgeRings(r,this._shellList,i);this.sortShellsAndHoles(o,this._shellList,i),this.placeFreeHoles(this._shellList,i)}},Wh.prototype.interfaces_=function(){return[]},Wh.prototype.getClass=function(){return Wh};var Jh=function(){};Jh.prototype.getBounds=function(){},Jh.prototype.interfaces_=function(){return[]},Jh.prototype.getClass=function(){return Jh};var Zh=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};Zh.prototype.getItem=function(){return this._item},Zh.prototype.getBounds=function(){return this._bounds},Zh.prototype.interfaces_=function(){return[Jh,al]},Zh.prototype.getClass=function(){return Zh};var Kh=function(){this._size=null,this._items=null,this._size=0,this._items=new lc,this._items.add(null)};Kh.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},Kh.prototype.size=function(){return this._size},Kh.prototype.reorder=function(t){for(var e=this,n=null,r=this._items.get(t);2*t<=this._size&&((n=2*t)!==e._size&&e._items.get(n+1).compareTo(e._items.get(n))<0&&n++,e._items.get(n).compareTo(r)<0);t=n)e._items.set(t,e._items.get(n));this._items.set(t,r)},Kh.prototype.clear=function(){this._size=0,this._items.clear()},Kh.prototype.isEmpty=function(){return 0===this._size},Kh.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},Kh.prototype.interfaces_=function(){return[]},Kh.prototype.getClass=function(){return Kh};var Qh=function(){};Qh.prototype.visitItem=function(t){},Qh.prototype.interfaces_=function(){return[]},Qh.prototype.getClass=function(){return Qh};var $h=function(){};$h.prototype.insert=function(t,e){},$h.prototype.remove=function(t,e){},$h.prototype.query=function(){},$h.prototype.interfaces_=function(){return[]},$h.prototype.getClass=function(){return $h};var tp=function(){if(this._childBoundables=new lc,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},ep={serialVersionUID:{configurable:!0}};tp.prototype.getLevel=function(){return this._level},tp.prototype.size=function(){return this._childBoundables.size()},tp.prototype.getChildBoundables=function(){return this._childBoundables},tp.prototype.addChildBoundable=function(t){ql.isTrue(null===this._bounds),this._childBoundables.add(t)},tp.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},tp.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},tp.prototype.interfaces_=function(){return[Jh,al]},tp.prototype.getClass=function(){return tp},ep.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(tp,ep);var np=function(){};np.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},np.min=function(t){return np.sort(t),t.get(0)},np.sort=function(t,e){var n=t.toArray();e?Rc.sort(n,e):Rc.sort(n);for(var r=t.iterator(),i=0,o=n.length;i<o;i++)r.next(),r.set(n[i])},np.singletonList=function(t){var e=new lc;return e.add(t),e};var rp=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};rp.prototype.expandToQueue=function(t,e){var n=rp.isComposite(this._boundable1),r=rp.isComposite(this._boundable2);if(n&&r)return rp.area(this._boundable1)>rp.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(r)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new el("neither boundable is composite")},rp.prototype.isLeaves=function(){return!(rp.isComposite(this._boundable1)||rp.isComposite(this._boundable2))},rp.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},rp.prototype.expand=function(t,e,n,r){for(var i=t.getChildBoundables().iterator();i.hasNext();){var o=i.next(),s=new rp(o,e,this._itemDistance);s.getDistance()<r&&n.add(s)}},rp.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},rp.prototype.getDistance=function(){return this._distance},rp.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},rp.prototype.interfaces_=function(){return[il]},rp.prototype.getClass=function(){return rp},rp.area=function(t){return t.getBounds().getArea()},rp.isComposite=function(t){return t instanceof tp};var ip=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new lc,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];ql.isTrue(n>1,"Node capacity must be greater than 1"),this._nodeCapacity=n}},op={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};ip.prototype.getNodeCapacity=function(){return this._nodeCapacity},ip.prototype.lastNode=function(t){return t.get(t.size()-1)},ip.prototype.size=function(){var t=this;if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var e=arguments[0],n=0,r=e.getChildBoundables().iterator();r.hasNext();){var i=r.next();i instanceof tp?n+=t.size(i):i instanceof Zh&&(n+=1)}return n}},ip.prototype.removeItem=function(t,e){for(var n=null,r=t.getChildBoundables().iterator();r.hasNext();){var i=r.next();i instanceof Zh&&i.getItem()===e&&(n=i)}return null!==n&&(t.getChildBoundables().remove(n),!0)},ip.prototype.itemsTree=function(){var t=this;if(0===arguments.length){this.build();var e=this.itemsTree(this._root);return null===e?new lc:e}if(1===arguments.length){for(var n=arguments[0],r=new lc,i=n.getChildBoundables().iterator();i.hasNext();){var o=i.next();if(o instanceof tp){var s=t.itemsTree(o);null!==s&&r.add(s)}else o instanceof Zh?r.add(o.getItem()):ql.shouldNeverReachHere()}return r.size()<=0?null:r}},ip.prototype.insert=function(t,e){ql.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new Zh(t,e))},ip.prototype.boundablesAtLevel=function(){var t=this;if(1===arguments.length){var e=arguments[0],n=new lc;return this.boundablesAtLevel(e,this._root,n),n}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];if(ql.isTrue(r>-2),i.getLevel()===r)return o.add(i),null;for(var s=i.getChildBoundables().iterator();s.hasNext();){var a=s.next();a instanceof tp?t.boundablesAtLevel(r,a,o):(ql.isTrue(a instanceof Zh),-1===r&&o.add(a))}return null}},ip.prototype.query=function(){var t=this;if(1===arguments.length){var e=arguments[0];this.build();var n=new lc;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),e)&&this.query(e,this._root,n),n}if(2===arguments.length){var r=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),r)&&this.query(r,this._root,i)}else if(3===arguments.length)if(gl(arguments[2],Qh)&&arguments[0]instanceof Object&&arguments[1]instanceof tp)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getChildBoundables(),l=0;l<u.size();l++){var c=u.get(l);t.getIntersectsOp().intersects(c.getBounds(),o)&&(c instanceof tp?t.query(o,c,a):c instanceof Zh?a.visitItem(c.getItem()):ql.shouldNeverReachHere())}else if(gl(arguments[2],ac)&&arguments[0]instanceof Object&&arguments[1]instanceof tp)for(var h=arguments[0],p=arguments[1],f=arguments[2],g=p.getChildBoundables(),d=0;d<g.size();d++){var y=g.get(d);t.getIntersectsOp().intersects(y.getBounds(),h)&&(y instanceof tp?t.query(h,y,f):y instanceof Zh?f.add(y.getItem()):ql.shouldNeverReachHere())}},ip.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},ip.prototype.getRoot=function(){return this.build(),this._root},ip.prototype.remove=function(){var t=this;if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),e)&&this.remove(e,this._root,n)}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=this.removeItem(i,o);if(s)return!0;for(var a=null,u=i.getChildBoundables().iterator();u.hasNext();){var l=u.next();if(t.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof tp&&(s=t.remove(r,l,o)))){a=l;break}}return null!==a&&a.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(a),s}},ip.prototype.createHigherLevels=function(t,e){ql.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},ip.prototype.depth=function(){var t=this;if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var e=arguments[0],n=0,r=e.getChildBoundables().iterator();r.hasNext();){var i=r.next();if(i instanceof tp){var o=t.depth(i);o>n&&(n=o)}}return n+1}},ip.prototype.createParentBoundables=function(t,e){var n=this;ql.isTrue(!t.isEmpty());var r=new lc;r.add(this.createNode(e));var i=new lc(t);np.sort(i,this.getComparator());for(var o=i.iterator();o.hasNext();){var s=o.next();n.lastNode(r).getChildBoundables().size()===n.getNodeCapacity()&&r.add(n.createNode(e)),n.lastNode(r).addChildBoundable(s)}return r},ip.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},ip.prototype.interfaces_=function(){return[al]},ip.prototype.getClass=function(){return ip},ip.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},op.IntersectsOp.get=function(){return sp},op.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},op.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(ip,op);var sp=function(){},ap=function(){};ap.prototype.distance=function(t,e){},ap.prototype.interfaces_=function(){return[]},ap.prototype.getClass=function(){return ap};var up=function(t){function e(n){n=n||e.DEFAULT_NODE_CAPACITY,t.call(this,n)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return e.prototype.createParentBoundablesFromVerticalSlices=function(t,e){ql.isTrue(t.length>0);for(var n=new lc,r=0;r<t.length;r++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[r],e));return n},e.prototype.createNode=function(t){return new lp(t)},e.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},e.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},e.prototype.getIntersectsOp=function(){return e.intersectsOp},e.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),r=new Array(e).fill(null),i=t.iterator(),o=0;o<e;o++){r[o]=new lc;for(var s=0;i.hasNext()&&s<n;){var a=i.next();r[o].add(a),s++}}return r},e.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],r=arguments[1];t.prototype.query.call(this,n,r)}else if(3===arguments.length)if(gl(arguments[2],Qh)&&arguments[0]instanceof Object&&arguments[1]instanceof tp){var i=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,i,o,s)}else if(gl(arguments[2],ac)&&arguments[0]instanceof Object&&arguments[1]instanceof tp){var a=arguments[0],u=arguments[1],l=arguments[2];t.prototype.query.call(this,a,u,l)}},e.prototype.getComparator=function(){return e.yComparator},e.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},e.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},e.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},e.prototype.createParentBoundables=function(t,n){ql.isTrue(!t.isEmpty());var r=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new lc(t);np.sort(i,e.xComparator);var o=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(r))));return this.createParentBoundablesFromVerticalSlices(o,n)},e.prototype.nearestNeighbour=function(){if(1===arguments.length){if(gl(arguments[0],ap)){var t=arguments[0],n=new rp(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(n)}if(arguments[0]instanceof rp){var r=arguments[0];return this.nearestNeighbour(r,nl.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof e&&gl(arguments[1],ap)){var i=arguments[0],o=arguments[1],s=new rp(this.getRoot(),i.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof rp&&"number"==typeof arguments[1]){var a=arguments[0],u=arguments[1],l=u,c=null,h=new Kh;for(h.add(a);!h.isEmpty()&&l>0;){var p=h.poll(),f=p.getDistance();if(f>=l)break;p.isLeaves()?(l=f,c=p):p.expandToQueue(h,l)}return[c.getBoundable(0).getItem(),c.getBoundable(1).getItem()]}}else if(3===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],v=new Zh(g,d),_=new rp(this.getRoot(),v,y);return this.nearestNeighbour(_)[0]}},e.prototype.interfaces_=function(){return[$h,al]},e.prototype.getClass=function(){return e},e.centreX=function(t){return e.avg(t.getMinX(),t.getMaxX())},e.avg=function(t,e){return(t+e)/2},e.centreY=function(t){return e.avg(t.getMinY(),t.getMaxY())},n.STRtreeNode.get=function(){return lp},n.serialVersionUID.get=function(){return 0x39920f7d5f261e0},n.xComparator.get=function(){return{interfaces_:function(){return[sl]},compare:function(n,r){return t.compareDoubles(e.centreX(n.getBounds()),e.centreX(r.getBounds()))}}},n.yComparator.get=function(){return{interfaces_:function(){return[sl]},compare:function(n,r){return t.compareDoubles(e.centreY(n.getBounds()),e.centreY(r.getBounds()))}}},n.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},n.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(e,n),e}(ip),lp=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new Ll(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(tp),cp=function(){};cp.prototype.interfaces_=function(){return[]},cp.prototype.getClass=function(){return cp},cp.relativeSign=function(t,e){return t<e?-1:t>e?1:0},cp.compare=function(t,e,n){if(e.equals2D(n))return 0;var r=cp.relativeSign(e.x,n.x),i=cp.relativeSign(e.y,n.y);switch(t){case 0:return cp.compareValue(r,i);case 1:return cp.compareValue(i,r);case 2:return cp.compareValue(i,-r);case 3:return cp.compareValue(-r,i);case 4:return cp.compareValue(-r,-i);case 5:return cp.compareValue(-i,-r);case 6:return cp.compareValue(-i,r);case 7:return cp.compareValue(r,-i)}return ql.shouldNeverReachHere("invalid octant value"),0},cp.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var hp=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._segString=t,this.coord=new ul(e),this.segmentIndex=n,this._segmentOctant=r,this._isInterior=!e.equals2D(t.getCoordinate(n))};hp.prototype.getCoordinate=function(){return this.coord},hp.prototype.print=function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)},hp.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:cp.compare(this._segmentOctant,this.coord,e.coord)},hp.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},hp.prototype.isInterior=function(){return this._isInterior},hp.prototype.interfaces_=function(){return[il]},hp.prototype.getClass=function(){return hp};var pp=function(){this._nodeMap=new Cc,this._edge=null;var t=arguments[0];this._edge=t};pp.prototype.getSplitCoordinates=function(){var t=new hc;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next();this.addEdgeCoordinates(n,r,t),n=r}return t.toCoordinateArray()},pp.prototype.addCollapsedNodes=function(){var t=new lc;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},pp.prototype.print=function(t){t.println("Intersections:");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},pp.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),r=this._edge.getCoordinate(e+2);n.equals2D(r)&&t.add(new _l(e+1))}},pp.prototype.addEdgeCoordinates=function(t,e,n){var r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);n.add(new ul(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));i&&n.add(new ul(e.coord))},pp.prototype.iterator=function(){return this._nodeMap.values().iterator()},pp.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}},pp.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var r=e.segmentIndex-t.segmentIndex;return e.isInterior()||r--,1===r&&(n[0]=t.segmentIndex+1,!0)},pp.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),r=n.next();n.hasNext();){var i=n.next();this.findCollapseIndex(r,i,e)&&t.add(new _l(e[0])),r=i}},pp.prototype.getEdge=function(){return this._edge},pp.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},pp.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new ul(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return i&&(o[s]=new ul(e.coord)),new yp(o,this._edge.getData())},pp.prototype.add=function(t,e){var n=new hp(this._edge,t,e,this._edge.getSegmentOctant(e)),r=this._nodeMap.get(n);return null!==r?(ql.isTrue(r.coord.equals2D(t),"Found equal nodes with different coordinates"),r):(this._nodeMap.put(n,n),n)},pp.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new kl("bad split edge start point at "+n);var r=t.get(t.size()-1).getCoordinates(),i=r[r.length-1];if(!i.equals2D(e[e.length-1]))throw new kl("bad split edge end point at "+i)},pp.prototype.interfaces_=function(){return[]},pp.prototype.getClass=function(){return pp};var fp=function(){};fp.prototype.interfaces_=function(){return[]},fp.prototype.getClass=function(){return fp},fp.octant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new el("Cannot compute the octant for point ( "+t+", "+e+" )");var n=Math.abs(t),r=Math.abs(e);return t>=0?e>=0?n>=r?0:1:n>=r?7:6:e>=0?n>=r?3:2:n>=r?4:5}if(arguments[0]instanceof ul&&arguments[1]instanceof ul){var i=arguments[0],o=arguments[1],s=o.x-i.x,a=o.y-i.y;if(0===s&&0===a)throw new el("Cannot compute the octant for two identical points "+i);return fp.octant(s,a)}};var gp=function(){};gp.prototype.getCoordinates=function(){},gp.prototype.size=function(){},gp.prototype.getCoordinate=function(t){},gp.prototype.isClosed=function(){},gp.prototype.setData=function(t){},gp.prototype.getData=function(){},gp.prototype.interfaces_=function(){return[]},gp.prototype.getClass=function(){return gp};var dp=function(){};dp.prototype.addIntersection=function(t,e){},dp.prototype.interfaces_=function(){return[gp]},dp.prototype.getClass=function(){return dp};var yp=function(){this._nodeList=new pp(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};yp.prototype.getCoordinates=function(){return this._pts},yp.prototype.size=function(){return this._pts.length},yp.prototype.getCoordinate=function(t){return this._pts[t]},yp.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},yp.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},yp.prototype.setData=function(t){this._data=t},yp.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:fp.octant(t,e)},yp.prototype.getData=function(){return this._data},yp.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[3],o=new ul(n.getIntersection(i));this.addIntersection(o,r)}},yp.prototype.toString=function(){return Fl.toLineString(new lh(this._pts))},yp.prototype.getNodeList=function(){return this._nodeList},yp.prototype.addIntersectionNode=function(t,e){var n=e,r=n+1;if(r<this._pts.length){var i=this._pts[r];t.equals2D(i)&&(n=r)}return this._nodeList.add(t,n)},yp.prototype.addIntersections=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)},yp.prototype.interfaces_=function(){return[dp]},yp.prototype.getClass=function(){return yp},yp.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new lc;return yp.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],r=arguments[1],i=n.iterator();i.hasNext();){var o=i.next();o.getNodeList().addSplitEdges(r)}};var vp=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new ul,this.p1=new ul;else if(1===arguments.length){var t=arguments[0];this.p0=new ul(t.p0),this.p1=new ul(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3];this.p0=new ul(e,n),this.p1=new ul(r,i)}},_p={serialVersionUID:{configurable:!0}};vp.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},vp.prototype.orientationIndex=function(){if(arguments[0]instanceof vp){var t=arguments[0],e=Xl.orientationIndex(this.p0,this.p1,t.p0),n=Xl.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0||e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof ul){var r=arguments[0];return Xl.orientationIndex(this.p0,this.p1,r)}},vp.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},vp.prototype.isVertical=function(){return this.p0.x===this.p1.x},vp.prototype.equals=function(t){if(!(t instanceof vp))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},vp.prototype.intersection=function(t){var e=new jl;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},vp.prototype.project=function(){if(arguments[0]instanceof ul){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new ul(t);var e=this.projectionFactor(t),n=new ul;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof vp){var r=arguments[0],i=this.projectionFactor(r.p0),o=this.projectionFactor(r.p1);if(i>=1&&o>=1)return null;if(i<=0&&o<=0)return null;var s=this.project(r.p0);i<0&&(s=this.p0),i>1&&(s=this.p1);var a=this.project(r.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new vp(s,a)}},vp.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},vp.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},vp.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},vp.prototype.distancePerpendicular=function(t){return Xl.distancePointLinePerpendicular(t,this.p0,this.p1)},vp.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},vp.prototype.midPoint=function(){return vp.midPoint(this.p0,this.p1)},vp.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,r=e*e+n*n;return r<=0?nl.NaN:((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/r},vp.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),r=nl.MAX_VALUE,i=null,o=this.closestPoint(t.p0);r=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(i=s.distance(t.p1))<r&&(r=i,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(i=a.distance(this.p0))<r&&(r=i,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(i=u.distance(this.p1))<r&&(r=i,n[0]=this.p1,n[1]=u),n},vp.prototype.closestPoint=function(t){var e=this.projectionFactor(t);return e>0&&e<1?this.project(t):this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},vp.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},vp.prototype.getLength=function(){return this.p0.distance(this.p1)},vp.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},vp.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},vp.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},vp.prototype.lineIntersection=function(t){try{return Ml.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof Cl))throw t}return null},vp.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},vp.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),r=this.p0.y+t*(this.p1.y-this.p0.y),i=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(i*i+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error("Cannot compute offset from zero-length line segment");a=e*i/s,u=e*o/s}return new ul(n-u,r+a)},vp.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},vp.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||nl.isNaN(e))&&(e=1),e},vp.prototype.toString=function(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"},vp.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},vp.prototype.distance=function(){if(arguments[0]instanceof vp){var t=arguments[0];return Xl.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof ul){var e=arguments[0];return Xl.distancePointLine(e,this.p0,this.p1)}},vp.prototype.pointAlong=function(t){var e=new ul;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},vp.prototype.hashCode=function(){var t=nl.doubleToLongBits(this.p0.x);t^=31*nl.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=nl.doubleToLongBits(this.p1.x);return n^=31*nl.doubleToLongBits(this.p1.y),e^(Math.trunc(n)^Math.trunc(n>>32))},vp.prototype.interfaces_=function(){return[il,al]},vp.prototype.getClass=function(){return vp},vp.midPoint=function(t,e){return new ul((t.x+e.x)/2,(t.y+e.y)/2)},_p.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(vp,_p);var mp=function(){this.tempEnv1=new Ll,this.tempEnv2=new Ll,this._overlapSeg1=new vp,this._overlapSeg2=new vp};mp.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(r,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},mp.prototype.interfaces_=function(){return[]},mp.prototype.getClass=function(){return mp};var xp=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=r};xp.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},xp.prototype.computeSelect=function(t,e,n,r){var i=this._pts[e],o=this._pts[n];if(r.tempEnv1.init(i,o),n-e==1)return r.select(this,e),null;if(!t.intersects(r.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,r),s<n&&this.computeSelect(t,s,n,r)},xp.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},xp.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},xp.prototype.setId=function(t){this._id=t},xp.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},xp.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new Ll(t,e)}return this._env},xp.prototype.getEndIndex=function(){return this._end},xp.prototype.getStartIndex=function(){return this._start},xp.prototype.getContext=function(){return this._context},xp.prototype.getId=function(){return this._id},xp.prototype.computeOverlapsInternal=function(t,e,n,r,i,o){var s=this._pts[t],a=this._pts[e],u=n._pts[r],l=n._pts[i];if(e-t==1&&i-r==1)return o.overlap(this,t,n,r),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,l),!o.tempEnv1.intersects(o.tempEnv2))return null;var c=Math.trunc((t+e)/2),h=Math.trunc((r+i)/2);t<c&&(r<h&&this.computeOverlapsInternal(t,c,n,r,h,o),h<i&&this.computeOverlapsInternal(t,c,n,h,i,o)),c<e&&(r<h&&this.computeOverlapsInternal(c,e,n,r,h,o),h<i&&this.computeOverlapsInternal(c,e,n,h,i,o))},xp.prototype.interfaces_=function(){return[]},xp.prototype.getClass=function(){return xp};var Ep=function(){};Ep.prototype.interfaces_=function(){return[]},Ep.prototype.getClass=function(){return Ep},Ep.getChainStartIndices=function(t){var e=0,n=new lc;n.add(new _l(e));do{var r=Ep.findChainEnd(t,e);n.add(new _l(r)),e=r}while(e<t.length-1);return Ep.toIntArray(n)},Ep.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var r=jh.quadrant(t[n],t[n+1]),i=e+1;i<t.length;){if(!t[i-1].equals2D(t[i]))if(jh.quadrant(t[i-1],t[i])!==r)break;i++}return i-1},Ep.getChains=function(){if(1===arguments.length){var t=arguments[0];return Ep.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],r=new lc,i=Ep.getChainStartIndices(e),o=0;o<i.length-1;o++){var s=new xp(e,i[o],i[o+1],n);r.add(s)}return r}},Ep.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var bp=function(){};bp.prototype.computeNodes=function(t){},bp.prototype.getNodedSubstrings=function(){},bp.prototype.interfaces_=function(){return[]},bp.prototype.getClass=function(){return bp};var wp=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};wp.prototype.setSegmentIntersector=function(t){this._segInt=t},wp.prototype.interfaces_=function(){return[bp]},wp.prototype.getClass=function(){return wp};var Ip=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new lc,this._index=new up,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return yp.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=this,n=Ep.getChains(t.getCoordinates(),t).iterator();n.hasNext();){var r=n.next();r.setId(e._idCounter++),e._index.insert(r.getEnvelope(),r),e._monoChains.add(r)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=this,e=new Np(this._segInt),n=this._monoChains.iterator();n.hasNext();)for(var r=n.next(),i=t._index.query(r.getEnvelope()).iterator();i.hasNext();){var o=i.next();if(o.getId()>r.getId()&&(r.computeOverlaps(o,e),t._nOverlaps++),t._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return Np},Object.defineProperties(e,n),e}(wp),Np=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3],o=e.getContext(),s=r.getContext();this._si.processIntersections(o,n,s,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(mp),Sp=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(r)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(i),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Cp={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};Sp.prototype.getEndCapStyle=function(){return this._endCapStyle},Sp.prototype.isSingleSided=function(){return this._isSingleSided},Sp.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=Sp.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=Sp.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==Sp.JOIN_ROUND&&(this._quadrantSegments=Sp.DEFAULT_QUADRANT_SEGMENTS)},Sp.prototype.getJoinStyle=function(){return this._joinStyle},Sp.prototype.setJoinStyle=function(t){this._joinStyle=t},Sp.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},Sp.prototype.getSimplifyFactor=function(){return this._simplifyFactor},Sp.prototype.getQuadrantSegments=function(){return this._quadrantSegments},Sp.prototype.setEndCapStyle=function(t){this._endCapStyle=t},Sp.prototype.getMitreLimit=function(){return this._mitreLimit},Sp.prototype.setMitreLimit=function(t){this._mitreLimit=t},Sp.prototype.setSingleSided=function(t){this._isSingleSided=t},Sp.prototype.interfaces_=function(){return[]},Sp.prototype.getClass=function(){return Sp},Sp.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Cp.CAP_ROUND.get=function(){return 1},Cp.CAP_FLAT.get=function(){return 2},Cp.CAP_SQUARE.get=function(){return 3},Cp.JOIN_ROUND.get=function(){return 1},Cp.JOIN_MITRE.get=function(){return 2},Cp.JOIN_BEVEL.get=function(){return 3},Cp.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Cp.DEFAULT_MITRE_LIMIT.get=function(){return 5},Cp.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(Sp,Cp);var Pp=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=Xl.COUNTERCLOCKWISE,this._inputLine=t||null},Mp={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Pp.prototype.isDeletable=function(t,e,n,r){var i=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(i,o,s)&&(!!this.isShallow(i,o,s,r)&&this.isShallowSampled(i,o,t,n,r))},Pp.prototype.deleteShallowConcavities=function(){for(var t=this,e=1,n=this.findNextNonDeletedIndex(e),r=this.findNextNonDeletedIndex(n),i=!1;r<this._inputLine.length;){var o=!1;t.isDeletable(e,n,r,t._distanceTol)&&(t._isDeleted[n]=Pp.DELETE,o=!0,i=!0),e=o?r:n,n=t.findNextNonDeletedIndex(e),r=t.findNextNonDeletedIndex(n)}return i},Pp.prototype.isShallowConcavity=function(t,e,n,r){return Xl.computeOrientation(t,e,n)===this._angleOrientation&&Xl.distancePointLine(e,t,n)<r},Pp.prototype.isShallowSampled=function(t,e,n,r,i){var o=Math.trunc((r-n)/Pp.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<r;s+=o)if(!this.isShallow(t,e,this._inputLine[s],i))return!1;return!0},Pp.prototype.isConcave=function(t,e,n){var r=Xl.computeOrientation(t,e,n)===this._angleOrientation;return r},Pp.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=Xl.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Pp.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Pp.DELETE;)e++;return e},Pp.prototype.isShallow=function(t,e,n,r){return Xl.distancePointLine(e,t,n)<r},Pp.prototype.collapseLine=function(){for(var t=new hc,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Pp.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Pp.prototype.interfaces_=function(){return[]},Pp.prototype.getClass=function(){return Pp},Pp.simplify=function(t,e){return new Pp(t).simplify(e)},Mp.INIT.get=function(){return 0},Mp.DELETE.get=function(){return 1},Mp.KEEP.get=function(){return 1},Mp.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Pp,Mp);var Lp=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new lc},Op={COORDINATE_ARRAY_TYPE:{configurable:!0}};Lp.prototype.getCoordinates=function(){return this._ptList.toArray(Lp.COORDINATE_ARRAY_TYPE)},Lp.prototype.setPrecisionModel=function(t){this._precisionModel=t},Lp.prototype.addPt=function(t){var e=new ul(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},Lp.prototype.revere=function(){},Lp.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var r=t.length-1;r>=0;r--)this.addPt(t[r])},Lp.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},Lp.prototype.toString=function(){return(new _h).createLineString(this.getCoordinates()).toString()},Lp.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new ul(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},Lp.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},Lp.prototype.interfaces_=function(){return[]},Lp.prototype.getClass=function(){return Lp},Op.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(Lp,Op);var Rp=function(){},Tp={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Rp.prototype.interfaces_=function(){return[]},Rp.prototype.getClass=function(){return Rp},Rp.toDegrees=function(t){return 180*t/Math.PI},Rp.normalize=function(t){for(;t>Math.PI;)t-=Rp.PI_TIMES_2;for(;t<=-Math.PI;)t+=Rp.PI_TIMES_2;return t},Rp.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],r=n.x-e.x,i=n.y-e.y;return Math.atan2(i,r)}},Rp.isAcute=function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)>0},Rp.isObtuse=function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)<0},Rp.interiorAngle=function(t,e,n){var r=Rp.angle(e,t),i=Rp.angle(e,n);return Math.abs(i-r)},Rp.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Rp.PI_TIMES_2;t>=Rp.PI_TIMES_2&&(t=0)}else{for(;t>=Rp.PI_TIMES_2;)t-=Rp.PI_TIMES_2;t<0&&(t=0)}return t},Rp.angleBetween=function(t,e,n){var r=Rp.angle(e,t),i=Rp.angle(e,n);return Rp.diff(r,i)},Rp.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Rp.toRadians=function(t){return t*Math.PI/180},Rp.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Rp.COUNTERCLOCKWISE:n<0?Rp.CLOCKWISE:Rp.NONE},Rp.angleBetweenOriented=function(t,e,n){var r=Rp.angle(e,t),i=Rp.angle(e,n)-r;return i<=-Math.PI?i+Rp.PI_TIMES_2:i>Math.PI?i-Rp.PI_TIMES_2:i},Tp.PI_TIMES_2.get=function(){return 2*Math.PI},Tp.PI_OVER_2.get=function(){return Math.PI/2},Tp.PI_OVER_4.get=function(){return Math.PI/4},Tp.COUNTERCLOCKWISE.get=function(){return Xl.COUNTERCLOCKWISE},Tp.CLOCKWISE.get=function(){return Xl.CLOCKWISE},Tp.NONE.get=function(){return Xl.COLLINEAR},Object.defineProperties(Rp,Tp);var Ap=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new vp,this._seg1=new vp,this._offset0=new vp,this._offset1=new vp,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],r=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new jl,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===Sp.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(r)},Dp={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Ap.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=Xl.computeOrientation(this._s0,this._s1,this._s2),r=n===Xl.CLOCKWISE&&this._side===Sh.LEFT||n===Xl.COUNTERCLOCKWISE&&this._side===Sh.RIGHT;0===n?this.addCollinear(e):r?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Ap.prototype.addLineEndCap=function(t,e){var n=new vp(t,e),r=new vp;this.computeOffsetSegment(n,Sh.LEFT,this._distance,r);var i=new vp;this.computeOffsetSegment(n,Sh.RIGHT,this._distance,i);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case Sp.CAP_ROUND:this._segList.addPt(r.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,Xl.CLOCKWISE,this._distance),this._segList.addPt(i.p1);break;case Sp.CAP_FLAT:this._segList.addPt(r.p1),this._segList.addPt(i.p1);break;case Sp.CAP_SQUARE:var u=new ul;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var l=new ul(r.p1.x+u.x,r.p1.y+u.y),c=new ul(i.p1.x+u.x,i.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(c)}},Ap.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Ap.prototype.addMitreJoin=function(t,e,n,r){var i=!0,o=null;try{o=Ml.intersection(e.p0,e.p1,n.p0,n.p1),(r<=0?1:o.distance(t)/Math.abs(r))>this._bufParams.getMitreLimit()&&(i=!1)}catch(t){if(!(t instanceof Cl))throw t;o=new ul(0,0),i=!1}i?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,r,this._bufParams.getMitreLimit())},Ap.prototype.addFilletCorner=function(t,e,n,r,i){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,l=n.y-t.y,c=Math.atan2(l,u);r===Xl.CLOCKWISE?a<=c&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,c,r,i),this._segList.addPt(n)},Ap.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Ap.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===Sp.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===Sp.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Ap.prototype.createSquare=function(t){this._segList.addPt(new ul(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new ul(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new ul(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new ul(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Ap.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Ap.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Ap.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Ap.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Ap.prototype.addLimitedMitreJoin=function(t,e,n,r){var i=this._seg0.p1,o=Rp.angle(i,this._seg0.p0),s=Rp.angleBetweenOriented(this._seg0.p0,i,this._seg1.p1)/2,a=Rp.normalize(o+s),u=Rp.normalize(a+Math.PI),l=r*n,c=n-l*Math.abs(Math.sin(s)),h=i.x+l*Math.cos(u),p=i.y+l*Math.sin(u),f=new ul(h,p),g=new vp(i,f),d=g.pointAlongOffset(1,c),y=g.pointAlongOffset(1,-c);this._side===Sh.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Ap.prototype.computeOffsetSegment=function(t,e,n,r){var i=e===Sh.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=i*n*o/a,l=i*n*s/a;r.p0.x=t.p0.x-l,r.p0.y=t.p0.y+u,r.p1.x=t.p1.x-l,r.p1.y=t.p1.y+u},Ap.prototype.addFilletArc=function(t,e,n,r,i){var o=r===Xl.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,l=0,c=new ul;l<s;){var h=e+o*l;c.x=t.x+i*Math.cos(h),c.y=t.y+i*Math.sin(h),this._segList.addPt(c),l+=u}},Ap.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Ap.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new ul((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var r=new ul((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Ap.prototype.createCircle=function(t){var e=new ul(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Ap.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Ap.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new Lp,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Ap.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Ap.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2),this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===Sp.JOIN_BEVEL||this._bufParams.getJoinStyle()===Sp.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,Xl.CLOCKWISE,this._distance))},Ap.prototype.closeRing=function(){this._segList.closeRing()},Ap.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Ap.prototype.interfaces_=function(){return[]},Ap.prototype.getClass=function(){return Ap},Dp.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Dp.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Dp.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Dp.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Ap,Dp);var Fp=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Fp.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,r=Math.abs(e),i=this.getSegGen(r);t.length<=1?this.computePointCurve(t[0],i):this.computeOffsetCurve(t,n,i);var o=i.getCoordinates();return n&&pc.reverse(o),o},Fp.prototype.computeSingleSidedBufferCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var i=Pp.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],Sh.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{n.addSegments(t,!1);var a=Pp.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],Sh.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment(),n.closeRing()},Fp.prototype.computeRingBufferCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);e===Sh.RIGHT&&(r=-r);var i=Pp.simplify(t,r),o=i.length-1;n.initSideSegments(i[o-1],i[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(i[s],a)}n.closeRing()},Fp.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),r=Pp.simplify(t,n),i=r.length-1;e.initSideSegments(r[0],r[1],Sh.LEFT);for(var o=2;o<=i;o++)e.addNextSegment(r[o],!0);e.addLastSegment(),e.addLineEndCap(r[i-1],r[i]);var s=Pp.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Sh.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Fp.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case Sp.CAP_ROUND:e.createCircle(t);break;case Sp.CAP_SQUARE:e.createSquare(t)}},Fp.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),r=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],r);else if(this._bufParams.isSingleSided()){var i=e<0;this.computeSingleSidedBufferCurve(t,i,r)}else this.computeLineBufferCurve(t,r);return r.getCoordinates()},Fp.prototype.getBufferParameters=function(){return this._bufParams},Fp.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Fp.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Fp.copyCoordinates(t);var r=this.getSegGen(n);return this.computeRingBufferCurve(t,e,r),r.getCoordinates()},Fp.prototype.computeOffsetCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){var i=Pp.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],Sh.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{var a=Pp.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],Sh.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment()},Fp.prototype.getSegGen=function(t){return new Ap(this._precisionModel,this._bufParams,t)},Fp.prototype.interfaces_=function(){return[]},Fp.prototype.getClass=function(){return Fp},Fp.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new ul(t[n]);return e};var kp=function(){this._subgraphs=null,this._seg=new vp,this._cga=new Xl;var t=arguments[0];this._subgraphs=t},Gp={DepthSegment:{configurable:!0}};kp.prototype.findStabbedSegments=function(){var t=this;if(1===arguments.length){for(var e=arguments[0],n=new lc,r=this._subgraphs.iterator();r.hasNext();){var i=r.next(),o=i.getEnvelope();e.y<o.getMinY()||e.y>o.getMaxY()||t.findStabbedSegments(e,i.getDirectedEdges(),n)}return n}if(3===arguments.length)if(gl(arguments[2],ac)&&arguments[0]instanceof ul&&arguments[1]instanceof Xh)for(var s=arguments[0],a=arguments[1],u=arguments[2],l=a.getEdge().getCoordinates(),c=0;c<l.length-1;c++){t._seg.p0=l[c],t._seg.p1=l[c+1],t._seg.p0.y>t._seg.p1.y&&t._seg.reverse();var h=Math.max(t._seg.p0.x,t._seg.p1.x);if(!(h<s.x)&&!(t._seg.isHorizontal()||s.y<t._seg.p0.y||s.y>t._seg.p1.y||Xl.computeOrientation(t._seg.p0,t._seg.p1,s)===Xl.RIGHT)){var p=a.getDepth(Sh.LEFT);t._seg.p0.equals(l[c])||(p=a.getDepth(Sh.RIGHT));var f=new qp(t._seg,p);u.add(f)}}else if(gl(arguments[2],ac)&&arguments[0]instanceof ul&&gl(arguments[1],ac))for(var g=arguments[0],d=arguments[1],y=arguments[2],v=d.iterator();v.hasNext();){var _=v.next();_.isForward()&&t.findStabbedSegments(g,_,y)}},kp.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);return 0===e.size()?0:np.min(e)._leftDepth},kp.prototype.interfaces_=function(){return[]},kp.prototype.getClass=function(){return kp},Gp.DepthSegment.get=function(){return qp},Object.defineProperties(kp,Gp);var qp=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new vp(t),this._leftDepth=e};qp.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n||0!==(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},qp.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},qp.prototype.toString=function(){return this._upwardSeg.toString()},qp.prototype.interfaces_=function(){return[il]},qp.prototype.getClass=function(){return qp};var Bp=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};Bp.prototype.area=function(){return Bp.area(this.p0,this.p1,this.p2)},Bp.prototype.signedArea=function(){return Bp.signedArea(this.p0,this.p1,this.p2)},Bp.prototype.interpolateZ=function(t){if(null===t)throw new el("Supplied point is null.");return Bp.interpolateZ(t,this.p0,this.p1,this.p2)},Bp.prototype.longestSideLength=function(){return Bp.longestSideLength(this.p0,this.p1,this.p2)},Bp.prototype.isAcute=function(){return Bp.isAcute(this.p0,this.p1,this.p2)},Bp.prototype.circumcentre=function(){return Bp.circumcentre(this.p0,this.p1,this.p2)},Bp.prototype.area3D=function(){return Bp.area3D(this.p0,this.p1,this.p2)},Bp.prototype.centroid=function(){return Bp.centroid(this.p0,this.p1,this.p2)},Bp.prototype.inCentre=function(){return Bp.inCentre(this.p0,this.p1,this.p2)},Bp.prototype.interfaces_=function(){return[]},Bp.prototype.getClass=function(){return Bp},Bp.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},Bp.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},Bp.det=function(t,e,n,r){return t*r-e*n},Bp.interpolateZ=function(t,e,n,r){var i=e.x,o=e.y,s=n.x-i,a=r.x-i,u=n.y-o,l=r.y-o,c=s*l-a*u,h=t.x-i,p=t.y-o,f=(l*h-a*p)/c,g=(-u*h+s*p)/c;return e.z+f*(n.z-e.z)+g*(r.z-e.z)},Bp.longestSideLength=function(t,e,n){var r=t.distance(e),i=e.distance(n),o=n.distance(t),s=r;return i>s&&(s=i),o>s&&(s=o),s},Bp.isAcute=function(t,e,n){return!!Rp.isAcute(t,e,n)&&(!!Rp.isAcute(e,n,t)&&!!Rp.isAcute(n,t,e))},Bp.circumcentre=function(t,e,n){var r=n.x,i=n.y,o=t.x-r,s=t.y-i,a=e.x-r,u=e.y-i,l=2*Bp.det(o,s,a,u),c=Bp.det(s,o*o+s*s,u,a*a+u*u),h=Bp.det(o,o*o+s*s,a,a*a+u*u);return new ul(r-c/l,i+h/l)},Bp.perpendicularBisector=function(t,e){var n=e.x-t.x,r=e.y-t.y,i=new Ml(t.x+n/2,t.y+r/2,1),o=new Ml(t.x-r+n/2,t.y+n+r/2,1);return new Ml(i,o)},Bp.angleBisector=function(t,e,n){var r=e.distance(t),i=r/(r+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new ul(t.x+i*o,t.y+i*s)},Bp.area3D=function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=i*u-o*a,c=o*s-r*u,h=r*a-i*s,p=l*l+c*c+h*h,f=Math.sqrt(p)/2;return f},Bp.centroid=function(t,e,n){var r=(t.x+e.x+n.x)/3,i=(t.y+e.y+n.y)/3;return new ul(r,i)},Bp.inCentre=function(t,e,n){var r=e.distance(n),i=t.distance(n),o=t.distance(e),s=r+i+o,a=(r*t.x+i*e.x+o*n.x)/s,u=(r*t.y+i*e.y+o*n.y)/s;return new ul(a,u)};var zp=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new lc;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};zp.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,pl.EXTERIOR,pl.INTERIOR)},zp.prototype.addPolygon=function(t){var e=this,n=this._distance,r=Sh.LEFT;this._distance<0&&(n=-this._distance,r=Sh.RIGHT);var i=t.getExteriorRing(),o=pc.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&o.length<3)return null;this.addPolygonRing(o,n,r,pl.EXTERIOR,pl.INTERIOR);for(var s=0;s<t.getNumInteriorRing();s++){var a=t.getInteriorRingN(s),u=pc.removeRepeatedPoints(a.getCoordinates());e._distance>0&&e.isErodedCompletely(a,-e._distance)||e.addPolygonRing(u,n,Sh.opposite(r),pl.INTERIOR,pl.EXTERIOR)}},zp.prototype.isTriangleErodedCompletely=function(t,e){var n=new Bp(t[0],t[1],t[2]),r=n.inCentre();return Xl.distancePointLine(r,n.p0,n.p1)<Math.abs(e)},zp.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=pc.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,pl.EXTERIOR,pl.INTERIOR)},zp.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var r=new yp(t,new Dh(0,pl.BOUNDARY,e,n));this._curveList.add(r)},zp.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},zp.prototype.addPolygonRing=function(t,e,n,r,i){if(0===e&&t.length<nh.MINIMUM_VALID_SIZE)return null;var o=r,s=i;t.length>=nh.MINIMUM_VALID_SIZE&&Xl.isCCW(t)&&(o=i,s=r,n=Sh.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},zp.prototype.add=function(t){if(t.isEmpty())return null;t instanceof th?this.addPolygon(t):t instanceof Zc?this.addLineString(t):t instanceof Qc?this.addPoint(t):(t instanceof eh||t instanceof Gc||t instanceof rh||t instanceof kc)&&this.addCollection(t)},zp.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var r=t.getEnvelopeInternal(),i=Math.min(r.getHeight(),r.getWidth());return e<0&&2*Math.abs(e)>i},zp.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},zp.prototype.interfaces_=function(){return[]},zp.prototype.getClass=function(){return zp};var jp=function(){};jp.prototype.locate=function(t){},jp.prototype.interfaces_=function(){return[]},jp.prototype.getClass=function(){return jp};var Up=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};Up.prototype.next=function(){if(this._atStart)return this._atStart=!1,Up.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new uc;var t=this._parent.getGeometryN(this._index++);return t instanceof kc?(this._subcollectionIterator=new Up(t),this._subcollectionIterator.next()):t},Up.prototype.remove=function(){throw new Error(this.getClass().getName())},Up.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},Up.prototype.interfaces_=function(){return[sc]},Up.prototype.getClass=function(){return Up},Up.isAtomic=function(t){return!(t instanceof kc)};var Vp=function(){this._geom=null;var t=arguments[0];this._geom=t};Vp.prototype.locate=function(t){return Vp.locate(t,this._geom)},Vp.prototype.interfaces_=function(){return[jp]},Vp.prototype.getClass=function(){return Vp},Vp.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&Xl.isPointInRing(t,e.getCoordinates())},Vp.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!Vp.isPointInRing(t,n))return!1;for(var r=0;r<e.getNumInteriorRing();r++){var i=e.getInteriorRingN(r);if(Vp.isPointInRing(t,i))return!1}return!0},Vp.containsPoint=function(t,e){if(e instanceof th)return Vp.containsPointInPolygon(t,e);if(e instanceof kc)for(var n=new Up(e);n.hasNext();){var r=n.next();if(r!==e&&Vp.containsPoint(t,r))return!0}return!1},Vp.locate=function(t,e){return e.isEmpty()?pl.EXTERIOR:Vp.containsPoint(t,e)?pl.INTERIOR:pl.EXTERIOR};var Xp=function(){this._edgeMap=new Cc,this._edgeList=null,this._ptInAreaLocation=[pl.NONE,pl.NONE]};Xp.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},Xp.prototype.propagateSideLabels=function(t){for(var e=pl.NONE,n=this.iterator();n.hasNext();){var r=n.next().getLabel();r.isArea(t)&&r.getLocation(t,Sh.LEFT)!==pl.NONE&&(e=r.getLocation(t,Sh.LEFT))}if(e===pl.NONE)return null;for(var i=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Sh.ON)===pl.NONE&&a.setLocation(t,Sh.ON,i),a.isArea(t)){var u=a.getLocation(t,Sh.LEFT),l=a.getLocation(t,Sh.RIGHT);if(l!==pl.NONE){if(l!==i)throw new Oh("side location conflict",s.getCoordinate());u===pl.NONE&&ql.shouldNeverReachHere("found single null side (at "+s.getCoordinate()+")"),i=u}else ql.isTrue(a.getLocation(t,Sh.LEFT)===pl.NONE,"found single null side"),a.setLocation(t,Sh.RIGHT,i),a.setLocation(t,Sh.LEFT,i)}}},Xp.prototype.getCoordinate=function(){var t=this.iterator();return t.hasNext()?t.next().getCoordinate():null},Xp.prototype.print=function(t){Pl.out.println("EdgeEndStar:   "+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Xp.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},Xp.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,r=e.get(n).getLabel().getLocation(t,Sh.LEFT);ql.isTrue(r!==pl.NONE,"Found unlabelled area edge");for(var i=r,o=this.iterator();o.hasNext();){var s=o.next().getLabel();ql.isTrue(s.isArea(t),"Found non-area edge");var a=s.getLocation(t,Sh.LEFT),u=s.getLocation(t,Sh.RIGHT);if(a===u)return!1;if(u!==i)return!1;i=a}return!0},Xp.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},Xp.prototype.iterator=function(){return this.getEdges().iterator()},Xp.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new lc(this._edgeMap.values())),this._edgeList},Xp.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===pl.NONE&&(this._ptInAreaLocation[t]=Vp.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},Xp.prototype.toString=function(){var t=new vl;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append("\n")}return t.toString()},Xp.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},Xp.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var r=n.next().getLabel(),i=0;i<2;i++)r.isLine(i)&&r.getLocation(i)===pl.BOUNDARY&&(e[i]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var l=pl.NONE;if(e[u])l=pl.EXTERIOR;else{var c=s.getCoordinate();l=this.getLocation(u,c,t)}a.setAllLocationsIfNull(u,l)}},Xp.prototype.getDegree=function(){return this._edgeMap.size()},Xp.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},Xp.prototype.interfaces_=function(){return[]},Xp.prototype.getClass=function(){return Xp};var Yp=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){var t=this;this.getResultAreaEdges();for(var e=null,n=null,r=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var o=t._resultAreaEdgeList.get(i),s=o.getSym();if(o.getLabel().isArea())switch(null===e&&o.isInResult()&&(e=o),r){case t._SCANNING_FOR_INCOMING:if(!s.isInResult())continue;n=s,r=t._LINKING_TO_OUTGOING;break;case t._LINKING_TO_OUTGOING:if(!o.isInResult())continue;n.setNext(o),r=t._SCANNING_FOR_INCOMING}}if(r===this._LINKING_TO_OUTGOING){if(null===e)throw new Oh("no outgoing dirEdge found",this.getCoordinate());ql.isTrue(e.isInResult(),"unable to link last incoming dirEdge"),n.setNext(e)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var r=t.get(e-1),i=n.getQuadrant(),o=r.getQuadrant();return jh.isNorthern(i)&&jh.isNorthern(o)?n:jh.isNorthern(i)||jh.isNorthern(o)?0!==n.getDy()?n:0!==r.getDy()?r:(ql.shouldNeverReachHere("found two horizontal edges incident on node"),null):r},e.prototype.print=function(t){Pl.out.println("DirectedEdgeStar: "+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print("out "),n.print(t),t.println(),t.print("in "),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new lc;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var r=this._edgeList.get(n),i=r.getSym();null===e&&(e=i),null!==t&&i.setNext(t),t=r}e.setNext(t)},e.prototype.computeDepths=function(){var t=this;if(1===arguments.length){var e=arguments[0],n=this.findIndex(e),r=e.getDepth(Sh.LEFT),i=e.getDepth(Sh.RIGHT),o=this.computeDepths(n+1,this._edgeList.size(),r),s=this.computeDepths(0,n,o);if(s!==i)throw new Oh("depth mismatch at "+e.getCoordinate())}else if(3===arguments.length){for(var a=arguments[0],u=arguments[1],l=arguments[2],c=l,h=a;h<u;h++){var p=t._edgeList.get(h);p.setEdgeDepths(Sh.RIGHT,c),c=p.getDepth(Sh.LEFT)}return c}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=this,n=null,r=null,i=this._SCANNING_FOR_INCOMING,o=this._resultAreaEdgeList.size()-1;o>=0;o--){var s=e._resultAreaEdgeList.get(o),a=s.getSym();switch(null===n&&s.getEdgeRing()===t&&(n=s),i){case e._SCANNING_FOR_INCOMING:if(a.getEdgeRing()!==t)continue;r=a,i=e._LINKING_TO_OUTGOING;break;case e._LINKING_TO_OUTGOING:if(s.getEdgeRing()!==t)continue;r.setNextMin(s),i=e._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(ql.isTrue(null!==n,"found null for first outgoing dirEdge"),ql.isTrue(n.getEdgeRing()===t,"unable to link last incoming dirEdge"),r.setNextMin(n))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){var n=e.next();n.isInResult()&&t++}return t}if(1===arguments.length){for(var r=arguments[0],i=0,o=this.iterator();o.hasNext();){var s=o.next();s.getEdgeRing()===r&&i++}return i}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=pl.NONE,e=this.iterator();e.hasNext();){var n=e.next(),r=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=pl.INTERIOR;break}if(r.isInResult()){t=pl.EXTERIOR;break}}}if(t===pl.NONE)return null;for(var i=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(i===pl.INTERIOR):(s.isInResult()&&(i=pl.EXTERIOR),a.isInResult()&&(i=pl.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Dh(pl.NONE);for(var n=this.iterator();n.hasNext();)for(var r=n.next().getEdge().getLabel(),i=0;i<2;i++){var o=r.getLocation(i);o!==pl.INTERIOR&&o!==pl.BOUNDARY||this._label.setLocation(i,pl.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xp),Hp=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new Bh(t,new Yp)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Yh),Wp=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};Wp.prototype.compareTo=function(t){var e=t;return Wp.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},Wp.prototype.interfaces_=function(){return[il]},Wp.prototype.getClass=function(){return Wp},Wp.orientation=function(t){return 1===pc.increasingDirection(t)},Wp.compareOriented=function(t,e,n,r){for(var i=e?1:-1,o=r?1:-1,s=e?t.length:-1,a=r?n.length:-1,u=e?0:t.length-1,l=r?0:n.length-1;;){var c=t[u].compareTo(n[l]);if(0!==c)return c;var h=(u+=i)===s,p=(l+=o)===a;if(h&&!p)return-1;if(!h&&p)return 1;if(h&&p)return 0}};var Jp=function(){this._edges=new lc,this._ocaMap=new Cc};Jp.prototype.print=function(t){t.print("MULTILINESTRING ( ");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(","),t.print("(");for(var r=n.getCoordinates(),i=0;i<r.length;i++)i>0&&t.print(","),t.print(r[i].x+" "+r[i].y);t.println(")")}t.print(")  ")},Jp.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Jp.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Jp.prototype.iterator=function(){return this._edges.iterator()},Jp.prototype.getEdges=function(){return this._edges},Jp.prototype.get=function(t){return this._edges.get(t)},Jp.prototype.findEqualEdge=function(t){var e=new Wp(t.getCoordinates());return this._ocaMap.get(e)},Jp.prototype.add=function(t){this._edges.add(t);var e=new Wp(t.getCoordinates());this._ocaMap.put(e,t)},Jp.prototype.interfaces_=function(){return[]},Jp.prototype.getClass=function(){return Jp};var Zp=function(){};Zp.prototype.processIntersections=function(t,e,n,r){},Zp.prototype.isDone=function(){},Zp.prototype.interfaces_=function(){return[]},Zp.prototype.getClass=function(){return Zp};var Kp=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Kp.prototype.isTrivialIntersection=function(t,e,n,r){if(t===n&&1===this._li.getIntersectionNum()){if(Kp.isAdjacentSegments(e,r))return!0;if(t.isClosed()){var i=t.size()-1;if(0===e&&r===i||0===r&&e===i)return!0}}return!1},Kp.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Kp.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Kp.prototype.getLineIntersector=function(){return this._li},Kp.prototype.hasProperIntersection=function(){return this._hasProper},Kp.prototype.processIntersections=function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Kp.prototype.hasIntersection=function(){return this._hasIntersection},Kp.prototype.isDone=function(){return!1},Kp.prototype.hasInteriorIntersection=function(){return this._hasInterior},Kp.prototype.interfaces_=function(){return[Zp]},Kp.prototype.getClass=function(){return Kp},Kp.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Qp=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new ul(t),this.segmentIndex=e,this.dist=n};Qp.prototype.getSegmentIndex=function(){return this.segmentIndex},Qp.prototype.getCoordinate=function(){return this.coord},Qp.prototype.print=function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)},Qp.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Qp.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Qp.prototype.toString=function(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist},Qp.prototype.getDistance=function(){return this.dist},Qp.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Qp.prototype.interfaces_=function(){return[il]},Qp.prototype.getClass=function(){return Qp};var $p=function(){this._nodeMap=new Cc,this.edge=null;var t=arguments[0];this.edge=t};$p.prototype.print=function(t){t.println("Intersections:");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},$p.prototype.iterator=function(){return this._nodeMap.values().iterator()},$p.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}},$p.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},$p.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this.edge.pts[e.segmentIndex],i=e.dist>0||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new ul(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return i&&(o[s]=e.coord),new of(o,new Dh(this.edge._label))},$p.prototype.add=function(t,e,n){var r=new Qp(t,e,n),i=this._nodeMap.get(r);return null!==i?i:(this._nodeMap.put(r,r),r)},$p.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},$p.prototype.interfaces_=function(){return[]},$p.prototype.getClass=function(){return $p};var tf=function(){};tf.prototype.getChainStartIndices=function(t){var e=0,n=new lc;n.add(new _l(e));do{var r=this.findChainEnd(t,e);n.add(new _l(r)),e=r}while(e<t.length-1);return tf.toIntArray(n)},tf.prototype.findChainEnd=function(t,e){for(var n=jh.quadrant(t[e],t[e+1]),r=e+1;r<t.length;){if(jh.quadrant(t[r-1],t[r])!==n)break;r++}return r-1},tf.prototype.interfaces_=function(){return[]},tf.prototype.getClass=function(){return tf},tf.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var ef=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Ll,this.env2=new Ll;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new tf;this.startIndex=e.getChainStartIndices(this.pts)};ef.prototype.getCoordinates=function(){return this.pts},ef.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},ef.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},ef.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],r)}else if(6===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],c=this.pts[i],h=this.pts[o],p=s.pts[a],f=s.pts[u];if(o-i==1&&u-a==1)return l.addIntersections(this.e,i,s.e,a),null;if(this.env1.init(c,h),this.env2.init(p,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((i+o)/2),d=Math.trunc((a+u)/2);i<g&&(a<d&&this.computeIntersectsForChain(i,g,s,a,d,l),d<u&&this.computeIntersectsForChain(i,g,s,d,u,l)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,l),d<u&&this.computeIntersectsForChain(g,o,s,d,u,l))}},ef.prototype.getStartIndexes=function(){return this.startIndex},ef.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var r=0;r<t.startIndex.length-1;r++)this.computeIntersectsForChain(n,t,r,e)},ef.prototype.interfaces_=function(){return[]},ef.prototype.getClass=function(){return ef};var nf=function t(){this._depth=Array(2).fill().map((function(){return Array(3)}));for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},rf={NULL_VALUE:{configurable:!0}};nf.prototype.getDepth=function(t,e){return this._depth[t][e]},nf.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},nf.prototype.isNull=function(){var t=this;if(0===arguments.length){for(var e=0;e<2;e++)for(var n=0;n<3;n++)if(t._depth[e][n]!==nf.NULL_VALUE)return!1;return!0}if(1===arguments.length){var r=arguments[0];return this._depth[r][1]===nf.NULL_VALUE}if(2===arguments.length){var i=arguments[0],o=arguments[1];return this._depth[i][o]===nf.NULL_VALUE}},nf.prototype.normalize=function(){for(var t=this,e=0;e<2;e++)if(!t.isNull(e)){var n=t._depth[e][1];t._depth[e][2]<n&&(n=t._depth[e][2]),n<0&&(n=0);for(var r=1;r<3;r++){var i=0;t._depth[e][r]>n&&(i=1),t._depth[e][r]=i}}},nf.prototype.getDelta=function(t){return this._depth[t][Sh.RIGHT]-this._depth[t][Sh.LEFT]},nf.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?pl.EXTERIOR:pl.INTERIOR},nf.prototype.toString=function(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]},nf.prototype.add=function(){var t=this;if(1===arguments.length)for(var e=arguments[0],n=0;n<2;n++)for(var r=1;r<3;r++){var i=e.getLocation(n,r);i!==pl.EXTERIOR&&i!==pl.INTERIOR||(t.isNull(n,r)?t._depth[n][r]=nf.depthAtLocation(i):t._depth[n][r]+=nf.depthAtLocation(i))}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];a===pl.INTERIOR&&this._depth[o][s]++}},nf.prototype.interfaces_=function(){return[]},nf.prototype.getClass=function(){return nf},nf.depthAtLocation=function(t){return t===pl.EXTERIOR?0:t===pl.INTERIOR?1:nf.NULL_VALUE},rf.NULL_VALUE.get=function(){return-1},Object.defineProperties(nf,rf);var of=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new $p(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new nf,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.pts=r,this._label=i}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);return t[0]=this.pts[0],t[1]=this.pts[1],new e(t,Dh.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var r=!0,i=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(r=!1),this.pts[s].equals2D(n.pts[--o])||(i=!1),!r&&!i)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print("edge "+this._name+": "),t.print("LINESTRING (");for(var e=0;e<this.pts.length;e++)e>0&&t.print(","),t.print(this.pts[e].x+" "+this.pts[e].y);t.print(")  "+this._label+" "+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print("edge "+this._name+": ");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+" ");t.println("")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new ef(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new Ll;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,r){var i=new ul(t.getIntersection(r)),o=e,s=t.getEdgeDistance(n,r),a=o+1;if(a<this.pts.length){var u=this.pts[a];i.equals2D(u)&&(o=a,s=0)}this.eiList.add(i,o,s)},e.prototype.toString=function(){var t=new vl;t.append("edge "+this._name+": "),t.append("LINESTRING (");for(var e=0;e<this.pts.length;e++)e>0&&t.append(","),t.append(this.pts[e].x+" "+this.pts[e].y);return t.append(")  "+this._label+" "+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Sh.ON),e.getLocation(1,Sh.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Sh.LEFT),e.getLocation(1,Sh.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Sh.RIGHT),e.getLocation(1,Sh.RIGHT),2))},e}(qh),sf=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Jp,this._bufParams=t||null};sf.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},sf.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),r=t.getLabel();e.isPointwiseEqual(t)||(r=new Dh(t.getLabel())).flip(),n.merge(r);var i=sf.depthDelta(r),o=e.getDepthDelta()+i;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(sf.depthDelta(t.getLabel()))},sf.prototype.buildSubgraphs=function(t,e){for(var n=new lc,r=t.iterator();r.hasNext();){var i=r.next(),o=i.getRightmostCoordinate(),s=new kp(n).getDepth(o);i.computeDepth(s),i.findResultEdges(),n.add(i),e.add(i.getDirectedEdges(),i.getNodes())}},sf.prototype.createSubgraphs=function(t){for(var e=new lc,n=t.getNodes().iterator();n.hasNext();){var r=n.next();if(!r.isVisited()){var i=new Th;i.create(r),e.add(i)}}return np.sort(e,np.reverseOrder()),e},sf.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},sf.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new Ip,n=new jl;return n.setPrecisionModel(t),e.setSegmentIntersector(new Kp(n)),e},sf.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var r=new Fp(n,this._bufParams),i=new zp(t,e,r).getCurves();if(i.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(i,n),this._graph=new Hh(new Hp),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new Wh(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();return a.size()<=0?this.createEmptyResultGeometry():this._geomFact.buildGeometry(a)},sf.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var r=n.getNodedSubstrings().iterator();r.hasNext();){var i=r.next(),o=i.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=i.getData(),a=new of(i.getCoordinates(),new Dh(s));this.insertUniqueEdge(a)}}},sf.prototype.setNoder=function(t){this._workingNoder=t},sf.prototype.interfaces_=function(){return[]},sf.prototype.getClass=function(){return sf},sf.depthDelta=function(t){var e=t.getLocation(0,Sh.LEFT),n=t.getLocation(0,Sh.RIGHT);return e===pl.INTERIOR&&n===pl.EXTERIOR?1:e===pl.EXTERIOR&&n===pl.INTERIOR?-1:0},sf.convertSegStrings=function(t){for(var e=new _h,n=new lc;t.hasNext();){var r=t.next(),i=e.createLineString(r.getCoordinates());n.add(i)}return e.buildGeometry(n)};var af=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=r,this._offsetX=i,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};af.prototype.rescale=function(){var t=this;if(gl(arguments[0],ic))for(var e=arguments[0],n=e.iterator();n.hasNext();){var r=n.next();t.rescale(r.getCoordinates())}else if(arguments[0]instanceof Array){for(var i=arguments[0],o=0;o<i.length;o++)i[o].x=i[o].x/t._scaleFactor+t._offsetX,i[o].y=i[o].y/t._scaleFactor+t._offsetY;2===i.length&&i[0].equals2D(i[1])&&Pl.out.println(i)}},af.prototype.scale=function(){var t=this;if(gl(arguments[0],ic)){for(var e=arguments[0],n=new lc,r=e.iterator();r.hasNext();){var i=r.next();n.add(new yp(t.scale(i.getCoordinates()),i.getData()))}return n}if(arguments[0]instanceof Array){for(var o=arguments[0],s=new Array(o.length).fill(null),a=0;a<o.length;a++)s[a]=new ul(Math.round((o[a].x-t._offsetX)*t._scaleFactor),Math.round((o[a].y-t._offsetY)*t._scaleFactor),o[a].z);var u=pc.removeRepeatedPoints(s);return u}},af.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},af.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},af.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},af.prototype.interfaces_=function(){return[bp]},af.prototype.getClass=function(){return af};var uf=function(){this._li=new jl,this._segStrings=null;var t=arguments[0];this._segStrings=t},lf={fact:{configurable:!0}};uf.prototype.checkEndPtVertexIntersections=function(){var t=this;if(0===arguments.length)for(var e=this._segStrings.iterator();e.hasNext();){var n=e.next(),r=n.getCoordinates();t.checkEndPtVertexIntersections(r[0],t._segStrings),t.checkEndPtVertexIntersections(r[r.length-1],t._segStrings)}else if(2===arguments.length)for(var i=arguments[0],o=arguments[1],s=o.iterator();s.hasNext();)for(var a=s.next(),u=a.getCoordinates(),l=1;l<u.length-1;l++)if(u[l].equals(i))throw new kl("found endpt/interior pt intersection at index "+l+" :pt "+i)},uf.prototype.checkInteriorIntersections=function(){var t=this;if(0===arguments.length)for(var e=this._segStrings.iterator();e.hasNext();)for(var n=e.next(),r=this._segStrings.iterator();r.hasNext();){var i=r.next();t.checkInteriorIntersections(n,i)}else if(2===arguments.length)for(var o=arguments[0],s=arguments[1],a=o.getCoordinates(),u=s.getCoordinates(),l=0;l<a.length-1;l++)for(var c=0;c<u.length-1;c++)t.checkInteriorIntersections(o,l,s,c);else if(4===arguments.length){var h=arguments[0],p=arguments[1],f=arguments[2],g=arguments[3];if(h===f&&p===g)return null;var d=h.getCoordinates()[p],y=h.getCoordinates()[p+1],v=f.getCoordinates()[g],_=f.getCoordinates()[g+1];if(this._li.computeIntersection(d,y,v,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,d,y)||this.hasInteriorIntersection(this._li,v,_)))throw new kl("found non-noded intersection at "+d+"-"+y+" and "+v+"-"+_)}},uf.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},uf.prototype.checkCollapses=function(){var t=this;if(0===arguments.length)for(var e=this._segStrings.iterator();e.hasNext();){var n=e.next();t.checkCollapses(n)}else if(1===arguments.length)for(var r=arguments[0],i=r.getCoordinates(),o=0;o<i.length-2;o++)t.checkCollapse(i[o],i[o+1],i[o+2])},uf.prototype.hasInteriorIntersection=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++){var i=t.getIntersection(r);if(!i.equals(e)&&!i.equals(n))return!0}return!1},uf.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new kl("found non-noded collapse at "+uf.fact.createLineString([t,e,n]))},uf.prototype.interfaces_=function(){return[]},uf.prototype.getClass=function(){return uf},lf.fact.get=function(){return new _h},Object.defineProperties(uf,lf);var cf=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new el("Scale factor must be non-zero");1!==e&&(this._pt=new ul(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new ul,this._p1Scaled=new ul),this.initCorners(this._pt)},hf={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};cf.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),r=Math.max(t.x,e.x),i=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>r||this._maxy<i||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return ql.isTrue(!(s&&a),"Found bad envelope test"),a},cf.prototype.initCorners=function(t){var e=.5;this._minx=t.x-e,this._maxx=t.x+e,this._miny=t.y-e,this._maxy=t.y+e,this._corner[0]=new ul(this._maxx,this._maxy),this._corner[1]=new ul(this._minx,this._maxy),this._corner[2]=new ul(this._minx,this._miny),this._corner[3]=new ul(this._maxx,this._miny)},cf.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},cf.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},cf.prototype.getCoordinate=function(){return this._originalPt},cf.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},cf.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=cf.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new Ll(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},cf.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},cf.prototype.intersectsToleranceSquare=function(t,e){var n=!1,r=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(r=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!r)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},cf.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),r=t.getCoordinate(e+1);return!!this.intersects(n,r)&&(t.addIntersection(this.getCoordinate(),e),!0)},cf.prototype.interfaces_=function(){return[]},cf.prototype.getClass=function(){return cf},hf.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(cf,hf);var pf=function(){this.tempEnv1=new Ll,this.selectedSegment=new vp};pf.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},pf.prototype.interfaces_=function(){return[]},pf.prototype.getClass=function(){return pf};var ff=function(){this._index=null;var t=arguments[0];this._index=t},gf={HotPixelSnapAction:{configurable:!0}};ff.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=e.getSafeEnvelope(),o=new df(e,n,r);return this._index.query(i,{interfaces_:function(){return[Qh]},visitItem:function(t){t.select(i,o)}}),o.isNodeAdded()}},ff.prototype.interfaces_=function(){return[]},ff.prototype.getClass=function(){return ff},gf.HotPixelSnapAction.get=function(){return df},Object.defineProperties(ff,gf);var df=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],r=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],r=e.getContext();if(null!==this._parentEdge&&r===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(r,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(pf),yf=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new lc};yf.prototype.processIntersections=function(t,e,n,r){if(t===n&&e===r)return null;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];if(this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)}},yf.prototype.isDone=function(){return!1},yf.prototype.getInteriorIntersections=function(){return this._interiorIntersections},yf.prototype.interfaces_=function(){return[Zp]},yf.prototype.getClass=function(){return yf};var vf=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new jl,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};vf.prototype.checkCorrectness=function(t){var e=yp.getNodedSubstrings(t),n=new uf(e);try{n.checkValid()}catch(t){if(!(t instanceof Sl))throw t;t.printStackTrace()}},vf.prototype.getNodedSubstrings=function(){return yp.getNodedSubstrings(this._nodedSegStrings)},vf.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},vf.prototype.findInteriorIntersections=function(t,e){var n=new yf(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},vf.prototype.computeVertexSnaps=function(){var t=this;if(gl(arguments[0],ic))for(var e=arguments[0],n=e.iterator();n.hasNext();){var r=n.next();t.computeVertexSnaps(r)}else if(arguments[0]instanceof yp)for(var i=arguments[0],o=i.getCoordinates(),s=0;s<o.length;s++){var a=new cf(o[s],t._scaleFactor,t._li),u=t._pointSnapper.snap(a,i,s);u&&i.addIntersection(o[s],s)}},vf.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new Ip,this._pointSnapper=new ff(this._noder.getIndex()),this.snapRound(t,this._li)},vf.prototype.computeIntersectionSnaps=function(t){for(var e=this,n=t.iterator();n.hasNext();){var r=n.next(),i=new cf(r,e._scaleFactor,e._li);e._pointSnapper.snap(i)}},vf.prototype.interfaces_=function(){return[bp]},vf.prototype.getClass=function(){return vf};var _f=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new Sp,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},mf={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};_f.prototype.bufferFixedPrecision=function(t){var e=new af(new vf(new gh(1)),t.getScale()),n=new sf(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},_f.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=_f.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof Oh))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],r=_f.precisionScaleFactor(this._argGeom,this._distance,n),i=new gh(r);this.bufferFixedPrecision(i)}},_f.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===gh.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},_f.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},_f.prototype.bufferOriginalPrecision=function(){try{var t=new sf(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof kl))throw t;this._saveException=t}},_f.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},_f.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},_f.prototype.interfaces_=function(){return[]},_f.prototype.getClass=function(){return _f},_f.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new _f(t),r=n.getResultGeometry(e);return r}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof Wl&&"number"==typeof arguments[1]){var i=arguments[0],o=arguments[1],s=arguments[2],a=new _f(i);a.setQuadrantSegments(s);var u=a.getResultGeometry(o);return u}if(arguments[2]instanceof Sp&&arguments[0]instanceof Wl&&"number"==typeof arguments[1]){var l=arguments[0],c=arguments[1],h=arguments[2],p=new _f(l,h),f=p.getResultGeometry(c);return f}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],v=arguments[3],_=new _f(g);_.setQuadrantSegments(y),_.setEndCapStyle(v);var m=_.getResultGeometry(d);return m}},_f.precisionScaleFactor=function(t,e,n){var r=t.getEnvelopeInternal(),i=dl.max(Math.abs(r.getMaxX()),Math.abs(r.getMaxY()),Math.abs(r.getMinX()),Math.abs(r.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(i)/Math.log(10)+1);return Math.pow(10,o)},mf.CAP_ROUND.get=function(){return Sp.CAP_ROUND},mf.CAP_BUTT.get=function(){return Sp.CAP_FLAT},mf.CAP_FLAT.get=function(){return Sp.CAP_FLAT},mf.CAP_SQUARE.get=function(){return Sp.CAP_SQUARE},mf.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(_f,mf);var xf=function(){this._pt=[new ul,new ul],this._distance=nl.NaN,this._isNull=!0};xf.prototype.getCoordinates=function(){return this._pt},xf.prototype.getCoordinate=function(t){return this._pt[t]},xf.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r<this._distance&&this.initialize(e,n,r)}},xf.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=i,this._isNull=!1}},xf.prototype.getDistance=function(){return this._distance},xf.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r>this._distance&&this.initialize(e,n,r)}},xf.prototype.interfaces_=function(){return[]},xf.prototype.getClass=function(){return xf};var Ef=function(){};Ef.prototype.interfaces_=function(){return[]},Ef.prototype.getClass=function(){return Ef},Ef.computeDistance=function(){if(arguments[2]instanceof xf&&arguments[0]instanceof Zc&&arguments[1]instanceof ul)for(var t=arguments[0],e=arguments[1],n=arguments[2],r=t.getCoordinates(),i=new vp,o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof xf&&arguments[0]instanceof th&&arguments[1]instanceof ul){var a=arguments[0],u=arguments[1],l=arguments[2];Ef.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)Ef.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof xf&&arguments[0]instanceof Wl&&arguments[1]instanceof ul){var h=arguments[0],p=arguments[1],f=arguments[2];if(h instanceof Zc)Ef.computeDistance(h,p,f);else if(h instanceof th)Ef.computeDistance(h,p,f);else if(h instanceof kc)for(var g=h,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Ef.computeDistance(y,p,f)}else f.setMinimum(h.getCoordinate(),p)}else if(arguments[2]instanceof xf&&arguments[0]instanceof vp&&arguments[1]instanceof ul){var v=arguments[0],_=arguments[1],m=arguments[2],x=v.closestPoint(_);m.setMinimum(x,_)}};var bf=function(t){this._maxPtDist=new xf,this._inputGeom=t||null},wf={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};bf.prototype.computeMaxMidpointDistance=function(t){var e=new Nf(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},bf.prototype.computeMaxVertexDistance=function(t){var e=new If(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},bf.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},bf.prototype.getDistancePoints=function(){return this._maxPtDist},bf.prototype.interfaces_=function(){return[]},bf.prototype.getClass=function(){return bf},wf.MaxPointDistanceFilter.get=function(){return If},wf.MaxMidpointDistanceFilter.get=function(){return Nf},Object.defineProperties(bf,wf);var If=function(t){this._maxPtDist=new xf,this._minPtDist=new xf,this._geom=t||null};If.prototype.filter=function(t){this._minPtDist.initialize(),Ef.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},If.prototype.getMaxPointDistance=function(){return this._maxPtDist},If.prototype.interfaces_=function(){return[Kl]},If.prototype.getClass=function(){return If};var Nf=function(t){this._maxPtDist=new xf,this._minPtDist=new xf,this._geom=t||null};Nf.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),r=t.getCoordinate(e),i=new ul((n.x+r.x)/2,(n.y+r.y)/2);this._minPtDist.initialize(),Ef.computeDistance(this._geom,i,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Nf.prototype.isDone=function(){return!1},Nf.prototype.isGeometryChanged=function(){return!1},Nf.prototype.getMaxPointDistance=function(){return this._maxPtDist},Nf.prototype.interfaces_=function(){return[Fc]},Nf.prototype.getClass=function(){return Nf};var Sf=function(t){this._comps=t||null};Sf.prototype.filter=function(t){t instanceof th&&this._comps.add(t)},Sf.prototype.interfaces_=function(){return[Dc]},Sf.prototype.getClass=function(){return Sf},Sf.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return Sf.getPolygons(t,new lc)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof th?n.add(e):e instanceof kc&&e.apply(new Sf(n)),n}};var Cf=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};Cf.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof nh){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Zc&&this._lines.add(t)},Cf.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},Cf.prototype.interfaces_=function(){return[Hl]},Cf.prototype.getClass=function(){return Cf},Cf.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(Cf.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(Cf.getLines(e,n))}},Cf.getLines=function(){if(1===arguments.length){var t=arguments[0];return Cf.getLines(t,!1)}if(2===arguments.length){if(gl(arguments[0],ic)&&gl(arguments[1],ic)){for(var e=arguments[0],n=arguments[1],r=e.iterator();r.hasNext();){var i=r.next();Cf.getLines(i,n)}return n}if(arguments[0]instanceof Wl&&"boolean"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new lc;return o.apply(new Cf(a,s)),a}if(arguments[0]instanceof Wl&&gl(arguments[1],ic)){var u=arguments[0],l=arguments[1];return u instanceof Zc?l.add(u):u.apply(new Cf(l)),l}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&gl(arguments[0],ic)&&gl(arguments[1],ic)){for(var c=arguments[0],h=arguments[1],p=arguments[2],f=c.iterator();f.hasNext();){var g=f.next();Cf.getLines(g,h,p)}return h}if("boolean"==typeof arguments[2]&&arguments[0]instanceof Wl&&gl(arguments[1],ic)){var d=arguments[0],y=arguments[1],v=arguments[2];return d.apply(new Cf(y,v)),y}}};var Pf=function(){if(this._boundaryRule=Ql.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new el("Rule must be non-null");this._boundaryRule=t}};Pf.prototype.locateInternal=function(){var t=this;if(arguments[0]instanceof ul&&arguments[1]instanceof th){var e=arguments[0],n=arguments[1];if(n.isEmpty())return pl.EXTERIOR;var r=n.getExteriorRing(),i=this.locateInPolygonRing(e,r);if(i===pl.EXTERIOR)return pl.EXTERIOR;if(i===pl.BOUNDARY)return pl.BOUNDARY;for(var o=0;o<n.getNumInteriorRing();o++){var s=n.getInteriorRingN(o),a=t.locateInPolygonRing(e,s);if(a===pl.INTERIOR)return pl.EXTERIOR;if(a===pl.BOUNDARY)return pl.BOUNDARY}return pl.INTERIOR}if(arguments[0]instanceof ul&&arguments[1]instanceof Zc){var u=arguments[0],l=arguments[1];if(!l.getEnvelopeInternal().intersects(u))return pl.EXTERIOR;var c=l.getCoordinates();return l.isClosed()||!u.equals(c[0])&&!u.equals(c[c.length-1])?Xl.isOnLine(u,c)?pl.INTERIOR:pl.EXTERIOR:pl.BOUNDARY}if(arguments[0]instanceof ul&&arguments[1]instanceof Qc){var h=arguments[0],p=arguments[1],f=p.getCoordinate();return f.equals2D(h)?pl.INTERIOR:pl.EXTERIOR}},Pf.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?Xl.locatePointInRing(t,e.getCoordinates()):pl.EXTERIOR},Pf.prototype.intersects=function(t,e){return this.locate(t,e)!==pl.EXTERIOR},Pf.prototype.updateLocationInfo=function(t){t===pl.INTERIOR&&(this._isIn=!0),t===pl.BOUNDARY&&this._numBoundaries++},Pf.prototype.computeLocation=function(t,e){var n=this;if(e instanceof Qc&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Zc)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof th)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Gc)for(var r=e,i=0;i<r.getNumGeometries();i++){var o=r.getGeometryN(i);n.updateLocationInfo(n.locateInternal(t,o))}else if(e instanceof rh)for(var s=e,a=0;a<s.getNumGeometries();a++){var u=s.getGeometryN(a);n.updateLocationInfo(n.locateInternal(t,u))}else if(e instanceof kc)for(var l=new Up(e);l.hasNext();){var c=l.next();c!==e&&n.computeLocation(t,c)}},Pf.prototype.locate=function(t,e){return e.isEmpty()?pl.EXTERIOR:e instanceof Zc||e instanceof th?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?pl.BOUNDARY:this._numBoundaries>0||this._isIn?pl.INTERIOR:pl.EXTERIOR)},Pf.prototype.interfaces_=function(){return[]},Pf.prototype.getClass=function(){return Pf};var Mf=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._component=r,this._segIndex=i,this._pt=o}},Lf={INSIDE_AREA:{configurable:!0}};Mf.prototype.isInsideArea=function(){return this._segIndex===Mf.INSIDE_AREA},Mf.prototype.getCoordinate=function(){return this._pt},Mf.prototype.getGeometryComponent=function(){return this._component},Mf.prototype.getSegmentIndex=function(){return this._segIndex},Mf.prototype.interfaces_=function(){return[]},Mf.prototype.getClass=function(){return Mf},Lf.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Mf,Lf);var Of=function(t){this._pts=t||null};Of.prototype.filter=function(t){t instanceof Qc&&this._pts.add(t)},Of.prototype.interfaces_=function(){return[Dc]},Of.prototype.getClass=function(){return Of},Of.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Qc?np.singletonList(t):Of.getPoints(t,new lc)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Qc?n.add(e):e instanceof kc&&e.apply(new Of(n)),n}};var Rf=function(){this._locations=null;var t=arguments[0];this._locations=t};Rf.prototype.filter=function(t){(t instanceof Qc||t instanceof Zc||t instanceof th)&&this._locations.add(new Mf(t,0,t.getCoordinate()))},Rf.prototype.interfaces_=function(){return[Dc]},Rf.prototype.getClass=function(){return Rf},Rf.getLocations=function(t){var e=new lc;return t.apply(new Rf(e)),e};var Tf=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Pf,this._minDistanceLocation=null,this._minDistance=nl.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=r,this._terminateDistance=i}};Tf.prototype.computeContainmentDistance=function(){var t=this;if(0===arguments.length){var e=new Array(2).fill(null);if(this.computeContainmentDistance(0,e),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,e)}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=1-n,o=Sf.getPolygons(this._geom[n]);if(o.size()>0){var s=Rf.getLocations(this._geom[i]);if(this.computeContainmentDistance(s,o,r),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[i]=r[0],this._minDistanceLocation[n]=r[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&gl(arguments[0],ac)&&gl(arguments[1],ac)){for(var a=arguments[0],u=arguments[1],l=arguments[2],c=0;c<a.size();c++)for(var h=a.get(c),p=0;p<u.size();p++)if(t.computeContainmentDistance(h,u.get(p),l),t._minDistance<=t._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Mf&&arguments[1]instanceof th){var f=arguments[0],g=arguments[1],d=arguments[2],y=f.getCoordinate();if(pl.EXTERIOR!==this._ptLocator.locate(y,g))return this._minDistance=0,d[0]=f,d[1]=new Mf(g,y),null}},Tf.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var r=this,i=0;i<t.size();i++)for(var o=t.get(i),s=0;s<e.size();s++){var a=e.get(s);if(r.computeMinDistance(o,a,n),r._minDistance<=r._terminateDistance)return null}},Tf.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=Cf.getLines(this._geom[0]),n=Cf.getLines(this._geom[1]),r=Of.getPoints(this._geom[0]),i=Of.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,i,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,r,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(r,i,t),void this.updateMinDistance(t,!1))))},Tf.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Tf.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Tf.prototype.nearestPoints=function(){return this.computeMinDistance(),[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Tf.prototype.computeMinDistance=function(){var t=this;if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Zc&&arguments[1]instanceof Qc){var e=arguments[0],n=arguments[1],r=arguments[2];if(e.getEnvelopeInternal().distance(n.getEnvelopeInternal())>this._minDistance)return null;for(var i=e.getCoordinates(),o=n.getCoordinate(),s=0;s<i.length-1;s++){var a=Xl.distancePointLine(o,i[s],i[s+1]);if(a<t._minDistance){t._minDistance=a;var u=new vp(i[s],i[s+1]),l=u.closestPoint(o);r[0]=new Mf(e,s,l),r[1]=new Mf(n,0,o)}if(t._minDistance<=t._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Zc&&arguments[1]instanceof Zc){var c=arguments[0],h=arguments[1],p=arguments[2];if(c.getEnvelopeInternal().distance(h.getEnvelopeInternal())>this._minDistance)return null;for(var f=c.getCoordinates(),g=h.getCoordinates(),d=0;d<f.length-1;d++)for(var y=0;y<g.length-1;y++){var v=Xl.distanceLineLine(f[d],f[d+1],g[y],g[y+1]);if(v<t._minDistance){t._minDistance=v;var _=new vp(f[d],f[d+1]),m=new vp(g[y],g[y+1]),x=_.closestPoints(m);p[0]=new Mf(c,d,x[0]),p[1]=new Mf(h,y,x[1])}if(t._minDistance<=t._terminateDistance)return null}}},Tf.prototype.computeMinDistancePoints=function(t,e,n){for(var r=this,i=0;i<t.size();i++)for(var o=t.get(i),s=0;s<e.size();s++){var a=e.get(s),u=o.getCoordinate().distance(a.getCoordinate());if(u<r._minDistance&&(r._minDistance=u,n[0]=new Mf(o,0,o.getCoordinate()),n[1]=new Mf(a,0,a.getCoordinate())),r._minDistance<=r._terminateDistance)return null}},Tf.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new el("null geometries are not supported");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Tf.prototype.computeMinDistanceLines=function(t,e,n){for(var r=this,i=0;i<t.size();i++)for(var o=t.get(i),s=0;s<e.size();s++){var a=e.get(s);if(r.computeMinDistance(o,a,n),r._minDistance<=r._terminateDistance)return null}},Tf.prototype.interfaces_=function(){return[]},Tf.prototype.getClass=function(){return Tf},Tf.distance=function(t,e){return new Tf(t,e).distance()},Tf.isWithinDistance=function(t,e,n){return new Tf(t,e,n).distance()<=n},Tf.nearestPoints=function(t,e){return new Tf(t,e).nearestPoints()};var Af=function(){this._pt=[new ul,new ul],this._distance=nl.NaN,this._isNull=!0};Af.prototype.getCoordinates=function(){return this._pt},Af.prototype.getCoordinate=function(t){return this._pt[t]},Af.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r<this._distance&&this.initialize(e,n,r)}},Af.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=i,this._isNull=!1}},Af.prototype.toString=function(){return Fl.toLineString(this._pt[0],this._pt[1])},Af.prototype.getDistance=function(){return this._distance},Af.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r>this._distance&&this.initialize(e,n,r)}},Af.prototype.interfaces_=function(){return[]},Af.prototype.getClass=function(){return Af};var Df=function(){};Df.prototype.interfaces_=function(){return[]},Df.prototype.getClass=function(){return Df},Df.computeDistance=function(){if(arguments[2]instanceof Af&&arguments[0]instanceof Zc&&arguments[1]instanceof ul)for(var t=arguments[0],e=arguments[1],n=arguments[2],r=new vp,i=t.getCoordinates(),o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Af&&arguments[0]instanceof th&&arguments[1]instanceof ul){var a=arguments[0],u=arguments[1],l=arguments[2];Df.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)Df.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof Af&&arguments[0]instanceof Wl&&arguments[1]instanceof ul){var h=arguments[0],p=arguments[1],f=arguments[2];if(h instanceof Zc)Df.computeDistance(h,p,f);else if(h instanceof th)Df.computeDistance(h,p,f);else if(h instanceof kc)for(var g=h,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Df.computeDistance(y,p,f)}else f.setMinimum(h.getCoordinate(),p)}else if(arguments[2]instanceof Af&&arguments[0]instanceof vp&&arguments[1]instanceof ul){var v=arguments[0],_=arguments[1],m=arguments[2],x=v.closestPoint(_);m.setMinimum(x,_)}};var Ff=function(){this._g0=null,this._g1=null,this._ptDist=new Af,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},kf={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Ff.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Ff.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new el("Fraction is not in range (0.0 - 1.0]");this._densifyFrac=t},Ff.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Ff.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Ff.prototype.computeOrientedDistance=function(t,e,n){var r=new Gf(e);if(t.apply(r),n.setMaximum(r.getMaxPointDistance()),this._densifyFrac>0){var i=new qf(e,this._densifyFrac);t.apply(i),n.setMaximum(i.getMaxPointDistance())}},Ff.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Ff.prototype.interfaces_=function(){return[]},Ff.prototype.getClass=function(){return Ff},Ff.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Ff(t,e);return n.distance()}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=new Ff(r,i);return s.setDensifyFraction(o),s.distance()}},kf.MaxPointDistanceFilter.get=function(){return Gf},kf.MaxDensifiedByFractionDistanceFilter.get=function(){return qf},Object.defineProperties(Ff,kf);var Gf=function(){this._maxPtDist=new Af,this._minPtDist=new Af,this._euclideanDist=new Df,this._geom=null;var t=arguments[0];this._geom=t};Gf.prototype.filter=function(t){this._minPtDist.initialize(),Df.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Gf.prototype.getMaxPointDistance=function(){return this._maxPtDist},Gf.prototype.interfaces_=function(){return[Kl]},Gf.prototype.getClass=function(){return Gf};var qf=function(){this._maxPtDist=new Af,this._minPtDist=new Af,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};qf.prototype.filter=function(t,e){var n=this;if(0===e)return null;for(var r=t.getCoordinate(e-1),i=t.getCoordinate(e),o=(i.x-r.x)/this._numSubSegs,s=(i.y-r.y)/this._numSubSegs,a=0;a<this._numSubSegs;a++){var u=r.x+a*o,l=r.y+a*s,c=new ul(u,l);n._minPtDist.initialize(),Df.computeDistance(n._geom,c,n._minPtDist),n._maxPtDist.setMaximum(n._minPtDist)}},qf.prototype.isDone=function(){return!1},qf.prototype.isGeometryChanged=function(){return!1},qf.prototype.getMaxPointDistance=function(){return this._maxPtDist},qf.prototype.interfaces_=function(){return[Fc]},qf.prototype.getClass=function(){return qf};var Bf=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},zf={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Bf.prototype.checkMaximumDistance=function(t,e,n){var r=new Ff(e,t);if(r.setDensifyFraction(.25),this._maxDistanceFound=r.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var i=r.getCoordinates();this._errorLocation=i[1],this._errorIndicator=t.getFactory().createLineString(i),this._errMsg="Distance between buffer curve and input is too large ("+this._maxDistanceFound+" at "+Fl.toLineString(i[0],i[1])+")"}},Bf.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Bf.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Bf.VERBOSE&&Pl.out.println("Min Dist= "+this._minDistanceFound+"  err= "+(1-this._minDistanceFound/this._bufDistance)+"  Max Dist= "+this._maxDistanceFound+"  err= "+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Bf.prototype.checkNegativeValid=function(){if(!(this._input instanceof th||this._input instanceof rh||this._input instanceof kc))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Bf.prototype.getErrorIndicator=function(){return this._errorIndicator},Bf.prototype.checkMinimumDistance=function(t,e,n){var r=new Tf(t,e,n);if(this._minDistanceFound=r.distance(),this._minDistanceFound<n){this._isValid=!1;var i=r.nearestPoints();this._errorLocation=r.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(i),this._errMsg="Distance between buffer curve and input is too small ("+this._minDistanceFound+" at "+Fl.toLineString(i[0],i[1])+" )"}},Bf.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Bf.prototype.getErrorLocation=function(){return this._errorLocation},Bf.prototype.getPolygonLines=function(t){for(var e=new lc,n=new Cf(e),r=Sf.getPolygons(t).iterator();r.hasNext();){r.next().apply(n)}return t.getFactory().buildGeometry(e)},Bf.prototype.getErrorMessage=function(){return this._errMsg},Bf.prototype.interfaces_=function(){return[]},Bf.prototype.getClass=function(){return Bf},zf.VERBOSE.get=function(){return!1},zf.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Bf,zf);var jf=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Uf={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};jf.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},jf.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*jf.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new Ll(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new Ll(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg="Buffer envelope is incorrect",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report("Envelope")},jf.prototype.checkDistance=function(){var t=new Bf(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report("Distance")},jf.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg="Area of positive buffer is smaller than input",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg="Area of negative buffer is larger than input",this._errorIndicator=this._result),this.report("Area")},jf.prototype.checkPolygonal=function(){this._result instanceof th||this._result instanceof rh||(this._isValid=!1),this._errorMsg="Result is not polygonal",this._errorIndicator=this._result,this.report("Polygonal")},jf.prototype.getErrorIndicator=function(){return this._errorIndicator},jf.prototype.getErrorLocation=function(){return this._errorLocation},jf.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2||this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg="Result is non-empty",this._errorIndicator=this._result),void this.report("ExpectedEmpty"))},jf.prototype.report=function(t){if(!jf.VERBOSE)return null;Pl.out.println("Check "+t+": "+(this._isValid?"passed":"FAILED"))},jf.prototype.getErrorMessage=function(){return this._errorMsg},jf.prototype.interfaces_=function(){return[]},jf.prototype.getClass=function(){return jf},jf.isValidMsg=function(t,e,n){var r=new jf(t,e,n);return r.isValid()?null:r.getErrorMessage()},jf.isValid=function(t,e,n){return!!new jf(t,e,n).isValid()},Uf.VERBOSE.get=function(){return!1},Uf.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(jf,Uf);var Vf=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};Vf.prototype.getCoordinates=function(){return this._pts},Vf.prototype.size=function(){return this._pts.length},Vf.prototype.getCoordinate=function(t){return this._pts[t]},Vf.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},Vf.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:fp.octant(this.getCoordinate(t),this.getCoordinate(t+1))},Vf.prototype.setData=function(t){this._data=t},Vf.prototype.getData=function(){return this._data},Vf.prototype.toString=function(){return Fl.toLineString(new lh(this._pts))},Vf.prototype.interfaces_=function(){return[gp]},Vf.prototype.getClass=function(){return Vf};var Xf=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new lc,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};Xf.prototype.getInteriorIntersection=function(){return this._interiorIntersection},Xf.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},Xf.prototype.getIntersectionSegments=function(){return this._intSegments},Xf.prototype.count=function(){return this._intersectionCount},Xf.prototype.getIntersections=function(){return this._intersections},Xf.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},Xf.prototype.setKeepIntersections=function(t){this._keepIntersections=t},Xf.prototype.processIntersections=function(t,e,n,r){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===r)return null;if(this._isCheckEndSegmentsOnly&&!(this.isEndSegment(t,e)||this.isEndSegment(n,r)))return null;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=i,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},Xf.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},Xf.prototype.hasIntersection=function(){return null!==this._interiorIntersection},Xf.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},Xf.prototype.interfaces_=function(){return[Zp]},Xf.prototype.getClass=function(){return Xf},Xf.createAllIntersectionsFinder=function(t){var e=new Xf(t);return e.setFindAllIntersections(!0),e},Xf.createAnyIntersectionFinder=function(t){return new Xf(t)},Xf.createIntersectionCounter=function(t){var e=new Xf(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var Yf=function(){this._li=new jl,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};Yf.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},Yf.prototype.getIntersections=function(){return this._segInt.getIntersections()},Yf.prototype.isValid=function(){return this.execute(),this._isValid},Yf.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},Yf.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new Xf(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new Ip;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},Yf.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new Oh(this.getErrorMessage(),this._segInt.getInteriorIntersection())},Yf.prototype.getErrorMessage=function(){if(this._isValid)return"no intersections found";var t=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+Fl.toLineString(t[0],t[1])+" and "+Fl.toLineString(t[2],t[3])},Yf.prototype.interfaces_=function(){return[]},Yf.prototype.getClass=function(){return Yf},Yf.computeIntersections=function(t){var e=new Yf(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Hf=function t(){this._nv=null;var e=arguments[0];this._nv=new Yf(t.toSegmentStrings(e))};Hf.prototype.checkValid=function(){this._nv.checkValid()},Hf.prototype.interfaces_=function(){return[]},Hf.prototype.getClass=function(){return Hf},Hf.toSegmentStrings=function(t){for(var e=new lc,n=t.iterator();n.hasNext();){var r=n.next();e.add(new Vf(r.getCoordinates(),r))}return e},Hf.checkValid=function(t){new Hf(t).checkValid()};var Wf=function(t){this._mapOp=t};Wf.prototype.map=function(t){for(var e=new lc,n=0;n<t.getNumGeometries();n++){var r=this._mapOp.map(t.getGeometryN(n));r.isEmpty()||e.add(r)}return t.getFactory().createGeometryCollection(_h.toGeometryArray(e))},Wf.prototype.interfaces_=function(){return[]},Wf.prototype.getClass=function(){return Wf},Wf.map=function(t,e){return new Wf(e).map(t)};var Jf=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new lc,this._resultLineList=new lc;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};Jf.prototype.collectLines=function(t){for(var e=this,n=this._op.getGraph().getEdgeEnds().iterator();n.hasNext();){var r=n.next();e.collectLineEdge(r,t,e._lineEdgesList),e.collectBoundaryTouchEdge(r,t,e._lineEdgesList)}},Jf.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},Jf.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},Jf.prototype.collectLineEdge=function(t,e,n){var r=t.getLabel(),i=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Mg.isResultOfOp(r,e)||i.isCovered()||(n.add(i),t.setVisitedEdge(!0)))},Jf.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),r=n.getEdge();if(n.isLineEdge()&&!r.isCoveredSet()){var i=this._op.isCoveredByA(n.getCoordinate());r.setCovered(i)}}},Jf.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),r=n.getLabel();n.isIsolated()&&(r.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},Jf.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),r=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(r),n.setInResult(!0)}},Jf.prototype.collectBoundaryTouchEdge=function(t,e,n){var r=t.getLabel();return t.isLineEdge()||t.isVisited()||t.isInteriorAreaEdge()||t.getEdge().isInResult()?null:(ql.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Mg.isResultOfOp(r,e)&&e===Mg.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},Jf.prototype.interfaces_=function(){return[]},Jf.prototype.getClass=function(){return Jf};var Zf=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new lc;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Zf.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Zf.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Mg.INTERSECTION))){var r=n.getLabel();Mg.isResultOfOp(r,t)&&this.filterCoveredNodeToPoint(n)}}},Zf.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Zf.prototype.interfaces_=function(){return[]},Zf.prototype.getClass=function(){return Zf};var Kf=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Kf.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Kf.prototype.transformPolygon=function(t,e){var n=!0,r=this.transformLinearRing(t.getExteriorRing(),t);null!==r&&r instanceof nh&&!r.isEmpty()||(n=!1);for(var i=new lc,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof nh||(n=!1),i.add(s))}if(n)return this._factory.createPolygon(r,i.toArray([]));var a=new lc;return null!==r&&a.add(r),a.addAll(i),this._factory.buildGeometry(a)},Kf.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Kf.prototype.getInputGeometry=function(){return this._inputGeom},Kf.prototype.transformMultiLineString=function(t,e){for(var n=new lc,r=0;r<t.getNumGeometries();r++){var i=this.transformLineString(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Kf.prototype.transformCoordinates=function(t,e){return this.copy(t)},Kf.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Kf.prototype.transformMultiPoint=function(t,e){for(var n=new lc,r=0;r<t.getNumGeometries();r++){var i=this.transformPoint(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Kf.prototype.transformMultiPolygon=function(t,e){for(var n=new lc,r=0;r<t.getNumGeometries();r++){var i=this.transformPolygon(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Kf.prototype.copy=function(t){return t.copy()},Kf.prototype.transformGeometryCollection=function(t,e){for(var n=new lc,r=0;r<t.getNumGeometries();r++){var i=this.transform(t.getGeometryN(r));null!==i&&(this._pruneEmptyGeometry&&i.isEmpty()||n.add(i))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_h.toGeometryArray(n)):this._factory.buildGeometry(n)},Kf.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Qc)return this.transformPoint(t,null);if(t instanceof eh)return this.transformMultiPoint(t,null);if(t instanceof nh)return this.transformLinearRing(t,null);if(t instanceof Zc)return this.transformLineString(t,null);if(t instanceof Gc)return this.transformMultiLineString(t,null);if(t instanceof th)return this.transformPolygon(t,null);if(t instanceof rh)return this.transformMultiPolygon(t,null);if(t instanceof kc)return this.transformGeometryCollection(t,null);throw new el("Unknown Geometry subtype: "+t.getClass().getName())},Kf.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var r=n.size();return r>0&&r<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Kf.prototype.interfaces_=function(){return[]},Kf.prototype.getClass=function(){return Kf};var Qf=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new vp,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Zc&&"number"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){var r=arguments[0],i=arguments[1];this._srcPts=r,this._isClosed=t.isClosed(r),this._snapTolerance=i}};Qf.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),r=0;r<n;r++){var i=t.get(r),o=this.findSnapForVertex(i,e);null!==o&&(t.set(r,new ul(o)),0===r&&this._isClosed&&t.set(t.size()-1,new ul(o)))}},Qf.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Qf.prototype.snapTo=function(t){var e=new hc(this._srcPts);return this.snapVertices(e,t),this.snapSegments(e,t),e.toCoordinateArray()},Qf.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var r=0;r<n;r++){var i=e[r],o=this.findSegmentIndexToSnap(i,t);o>=0&&t.add(o+1,new ul(i),!1)}},Qf.prototype.findSegmentIndexToSnap=function(t,e){for(var n=this,r=nl.MAX_VALUE,i=-1,o=0;o<e.size()-1;o++){if(n._seg.p0=e.get(o),n._seg.p1=e.get(o+1),n._seg.p0.equals2D(t)||n._seg.p1.equals2D(t)){if(n._allowSnappingToSourceVertices)continue;return-1}var s=n._seg.distance(t);s<n._snapTolerance&&s<r&&(r=s,i=o)}return i},Qf.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Qf.prototype.interfaces_=function(){return[]},Qf.prototype.getClass=function(){return Qf},Qf.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var $f=function(t){this._srcGeom=t||null},tg={SNAP_PRECISION_FACTOR:{configurable:!0}};$f.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new eg(e,n).transform(this._srcGeom)},$f.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),r=new eg(t,n,!0).transform(this._srcGeom),i=r;return e&&gl(i,$c)&&(i=r.buffer(0)),i},$f.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},$f.prototype.extractTargetCoordinates=function(t){for(var e=new Lc,n=t.getCoordinates(),r=0;r<n.length;r++)e.add(n[r]);return e.toArray(new Array(0).fill(null))},$f.prototype.computeMinimumSegmentLength=function(t){for(var e=nl.MAX_VALUE,n=0;n<t.length-1;n++){var r=t[n].distance(t[n+1]);r<e&&(e=r)}return e},$f.prototype.interfaces_=function(){return[]},$f.prototype.getClass=function(){return $f},$f.snap=function(t,e,n){var r=new Array(2).fill(null),i=new $f(t);r[0]=i.snapTo(e,n);var o=new $f(e);return r[1]=o.snapTo(r[0],n),r},$f.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=$f.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===gh.FIXED){var r=1/n.getScale()*2/1.415;r>e&&(e=r)}return e}if(2===arguments.length){var i=arguments[0],o=arguments[1];return Math.min($f.computeOverlaySnapTolerance(i),$f.computeOverlaySnapTolerance(o))}},$f.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*$f.SNAP_PRECISION_FACTOR},$f.snapToSelf=function(t,e,n){return new $f(t).snapToSelf(e,n)},tg.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties($f,tg);var eg=function(t){function e(e,n,r){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==r&&r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Qf(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),r=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Kf),ng=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};ng.prototype.getCommon=function(){return nl.longBitsToDouble(this._commonBits)},ng.prototype.add=function(t){var e=nl.doubleToLongBits(t);return this._isFirst?(this._commonBits=e,this._commonSignExp=ng.signExpBits(this._commonBits),this._isFirst=!1,null):ng.signExpBits(e)!==this._commonSignExp?(this._commonBits=0,null):(this._commonMantissaBitsCount=ng.numCommonMostSigMantissaBits(this._commonBits,e),void(this._commonBits=ng.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))))},ng.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=nl.longBitsToDouble(t),n=nl.toBinaryString(t),r="0000000000000000000000000000000000000000000000000000000000000000"+n,i=r.substring(r.length-64),o=i.substring(0,1)+"  "+i.substring(1,12)+"(exp) "+i.substring(12)+" [ "+e+" ]";return o}},ng.prototype.interfaces_=function(){return[]},ng.prototype.getClass=function(){return ng},ng.getBit=function(t,e){return 0!=(t&1<<e)?1:0},ng.signExpBits=function(t){return t>>52},ng.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},ng.numCommonMostSigMantissaBits=function(t,e){for(var n=0,r=52;r>=0;r--){if(ng.getBit(t,r)!==ng.getBit(e,r))return n;n++}return 52};var rg=function(){this._commonCoord=null,this._ccFilter=new og},ig={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};rg.prototype.addCommonBits=function(t){var e=new sg(this._commonCoord);t.apply(e),t.geometryChanged()},rg.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new ul(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new sg(e);return t.apply(n),t.geometryChanged(),t},rg.prototype.getCommonCoordinate=function(){return this._commonCoord},rg.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},rg.prototype.interfaces_=function(){return[]},rg.prototype.getClass=function(){return rg},ig.CommonCoordinateFilter.get=function(){return og},ig.Translater.get=function(){return sg},Object.defineProperties(rg,ig);var og=function(){this._commonBitsX=new ng,this._commonBitsY=new ng};og.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},og.prototype.getCommonCoordinate=function(){return new ul(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},og.prototype.interfaces_=function(){return[Kl]},og.prototype.getClass=function(){return og};var sg=function(){this.trans=null;var t=arguments[0];this.trans=t};sg.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,r=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,r)},sg.prototype.isDone=function(){return!1},sg.prototype.isGeometryChanged=function(){return!0},sg.prototype.interfaces_=function(){return[Fc]},sg.prototype.getClass=function(){return sg};var ag=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};ag.prototype.selfSnap=function(t){return new $f(t).snapTo(t,this._snapTolerance)},ag.prototype.removeCommonBits=function(t){this._cbr=new rg,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},ag.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},ag.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Mg.overlayOp(e[0],e[1],t);return this.prepareResult(n)},ag.prototype.checkValid=function(t){t.isValid()||Pl.out.println("Snapped geometry is invalid")},ag.prototype.computeSnapTolerance=function(){this._snapTolerance=$f.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},ag.prototype.snap=function(t){var e=this.removeCommonBits(t);return $f.snap(e[0],e[1],this._snapTolerance)},ag.prototype.interfaces_=function(){return[]},ag.prototype.getClass=function(){return ag},ag.overlayOp=function(t,e,n){return new ag(t,e).getResultGeometry(n)},ag.union=function(t,e){return ag.overlayOp(t,e,Mg.UNION)},ag.intersection=function(t,e){return ag.overlayOp(t,e,Mg.INTERSECTION)},ag.symDifference=function(t,e){return ag.overlayOp(t,e,Mg.SYMDIFFERENCE)},ag.difference=function(t,e){return ag.overlayOp(t,e,Mg.DIFFERENCE)};var ug=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};ug.prototype.getResultGeometry=function(t){var e=null,n=!1,r=null;try{e=Mg.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof kl))throw t;r=t}if(!n)try{e=ag.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof kl?r:t}return e},ug.prototype.interfaces_=function(){return[]},ug.prototype.getClass=function(){return ug},ug.overlayOp=function(t,e,n){return new ug(t,e).getResultGeometry(n)},ug.union=function(t,e){return ug.overlayOp(t,e,Mg.UNION)},ug.intersection=function(t,e){return ug.overlayOp(t,e,Mg.INTERSECTION)},ug.symDifference=function(t,e){return ug.overlayOp(t,e,Mg.SYMDIFFERENCE)},ug.difference=function(t,e){return ug.overlayOp(t,e,Mg.DIFFERENCE)};var lg=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};lg.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},lg.prototype.interfaces_=function(){return[]},lg.prototype.getClass=function(){return lg};var cg=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=r,this._xValue=i,this._obj=o}},hg={INSERT:{configurable:!0},DELETE:{configurable:!0}};cg.prototype.isDelete=function(){return this._eventType===cg.DELETE},cg.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},cg.prototype.getObject=function(){return this._obj},cg.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},cg.prototype.getInsertEvent=function(){return this._insertEvent},cg.prototype.isInsert=function(){return this._eventType===cg.INSERT},cg.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},cg.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},cg.prototype.interfaces_=function(){return[il]},cg.prototype.getClass=function(){return cg},hg.INSERT.get=function(){return 1},hg.DELETE.get=function(){return 2},Object.defineProperties(cg,hg);var pg=function(){};pg.prototype.interfaces_=function(){return[]},pg.prototype.getClass=function(){return pg};var fg=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};fg.prototype.isTrivialIntersection=function(t,e,n,r){if(t===n&&1===this._li.getIntersectionNum()){if(fg.isAdjacentSegments(e,r))return!0;if(t.isClosed()){var i=t.getNumPoints()-1;if(0===e&&r===i||0===r&&e===i)return!0}}return!1},fg.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},fg.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},fg.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},fg.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next().getCoordinate();if(t.isIntersection(r))return!0}return!1},fg.prototype.hasProperIntersection=function(){return this._hasProper},fg.prototype.hasIntersection=function(){return this._hasIntersection},fg.prototype.isDone=function(){return this._isDone},fg.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},fg.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},fg.prototype.addIntersections=function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},fg.prototype.interfaces_=function(){return[]},fg.prototype.getClass=function(){return fg},fg.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var gg=function(t){function e(){t.call(this),this.events=new lc,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){np.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){var t=this;if(1===arguments.length){var e=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var n=0;n<this.events.size();n++){var r=t.events.get(n);if(r.isInsert()&&t.processOverlaps(n,r.getDeleteEventIndex(),r,e),e.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof fg&&gl(arguments[0],ac)&&gl(arguments[1],ac)){var i=arguments[0],o=arguments[1],s=arguments[2];this.addEdges(i,i),this.addEdges(o,o),this.computeIntersections(s)}else if("boolean"==typeof arguments[2]&&gl(arguments[0],ac)&&arguments[1]instanceof fg){var a=arguments[0],u=arguments[1],l=arguments[2];l?this.addEdges(a,null):this.addEdges(a),this.computeIntersections(u)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),r=n.getStartIndexes(),i=0;i<r.length-1;i++){var o=new lg(n,i),s=new cg(e,n.getMinX(i),o);this.events.add(s),this.events.add(new cg(n.getMaxX(i),s))}},e.prototype.processOverlaps=function(t,e,n,r){for(var i=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(i.computeIntersections(a,r),this.nOverlaps++)}}},e.prototype.addEdges=function(){var t=this;if(1===arguments.length)for(var e=arguments[0],n=e.iterator();n.hasNext();){var r=n.next();t.addEdge(r,r)}else if(2===arguments.length)for(var i=arguments[0],o=arguments[1],s=i.iterator();s.hasNext();){var a=s.next();t.addEdge(a,o)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(pg),dg=function(){this._min=nl.POSITIVE_INFINITY,this._max=nl.NEGATIVE_INFINITY},yg={NodeComparator:{configurable:!0}};dg.prototype.getMin=function(){return this._min},dg.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},dg.prototype.getMax=function(){return this._max},dg.prototype.toString=function(){return Fl.toLineString(new ul(this._min,0),new ul(this._max,0))},dg.prototype.interfaces_=function(){return[]},dg.prototype.getClass=function(){return dg},yg.NodeComparator.get=function(){return vg},Object.defineProperties(dg,yg);var vg=function(){};vg.prototype.compare=function(t,e){var n=t,r=e,i=(n._min+n._max)/2,o=(r._min+r._max)/2;return i<o?-1:i>o?1:0},vg.prototype.interfaces_=function(){return[sl]},vg.prototype.getClass=function(){return vg};var _g=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],r=arguments[2];this._min=e,this._max=n,this._item=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(dg),mg=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(dg),xg=function(){this._leaves=new lc,this._root=null,this._level=0};xg.prototype.buildTree=function(){np.sort(this._leaves,new dg.NodeComparator);for(var t=this._leaves,e=null,n=new lc;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},xg.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error("Index cannot be added to once it has been queried");this._leaves.add(new _g(t,e,n))},xg.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},xg.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},xg.prototype.printNode=function(t){Pl.out.println(Fl.toLineString(new ul(t._min,this._level),new ul(t._max,this._level)))},xg.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},xg.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var r=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(r);else{var i=new mg(t.get(n),t.get(n+1));e.add(i)}}},xg.prototype.interfaces_=function(){return[]},xg.prototype.getClass=function(){return xg};var Eg=function(){this._items=new lc};Eg.prototype.visitItem=function(t){this._items.add(t)},Eg.prototype.getItems=function(){return this._items},Eg.prototype.interfaces_=function(){return[Qh]},Eg.prototype.getClass=function(){return Eg};var bg=function(){this._index=null;var t=arguments[0];if(!gl(t,$c))throw new el("Argument must be Polygonal");this._index=new Ng(t)},wg={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};bg.prototype.locate=function(t){var e=new Vl(t),n=new Ig(e);return this._index.query(t.y,t.y,n),e.getLocation()},bg.prototype.interfaces_=function(){return[jp]},bg.prototype.getClass=function(){return bg},wg.SegmentVisitor.get=function(){return Ig},wg.IntervalIndexedGeometry.get=function(){return Ng},Object.defineProperties(bg,wg);var Ig=function(){this._counter=null;var t=arguments[0];this._counter=t};Ig.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Ig.prototype.interfaces_=function(){return[Qh]},Ig.prototype.getClass=function(){return Ig};var Ng=function(){this._index=new xg;var t=arguments[0];this.init(t)};Ng.prototype.init=function(t){for(var e=Cf.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},Ng.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new vp(t[e-1],t[e]),r=Math.min(n.p0.y,n.p1.y),i=Math.max(n.p0.y,n.p1.y);this._index.insert(r,i,n)}},Ng.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Eg;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._index.query(r,i,o)}},Ng.prototype.interfaces_=function(){return[]},Ng.prototype.getClass=function(){return Ng};var Sg=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new fh,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Pf,2===arguments.length){var e=arguments[0],n=arguments[1],r=Ql.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=r,null!==n&&this.add(n)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=i,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var r=this._nodes.addNode(n).getLabel(),i=1;r.getLocation(t,Sh.ON)===pl.BOUNDARY&&i++;var o=e.determineBoundary(this._boundaryNodeRule,i);r.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=new fg(n,!0,!1);o.setIsDoneIfProperInt(i);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof nh||this._parentGeom instanceof th||this._parentGeom instanceof rh,u=r||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var r=new fg(e,n,!0);return r.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes()),this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,r),r},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Qc){var t=arguments[0],e=t.getCoordinate();this.insertPoint(this._argIndex,e,pl.INTERIOR)}else if(arguments[0]instanceof ul){var n=arguments[0];this.insertPoint(this._argIndex,n,pl.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),pl.EXTERIOR,pl.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,pl.INTERIOR,pl.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],pl.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],pl.BOUNDARY)},e.prototype.addLineString=function(t){var e=pc.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new of(e,new Dh(this._argIndex,pl.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),ql.isTrue(e.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,r=t.iterator();r.hasNext();){var i=r.next();e[n++]=i.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===pl.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var r=pc.removeRepeatedPoints(t.getCoordinates());if(r.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=r[0],null;var i=e,o=n;Xl.isCCW(r)&&(i=n,o=e);var s=new of(r,new Dh(this._argIndex,pl.BOUNDARY,i,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,r[0],pl.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var r=this._nodes.addNode(e),i=r.getLabel();null===i?r._label=new Dh(t,n):i.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new gg},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),r=n.getLabel().getLocation(t),i=n.eiList.iterator();i.hasNext();){var o=i.next();this.addSelfIntersectionNode(t,o.coord,r)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof rh&&(this._useBoundaryDeterminationRule=!1),e instanceof th)this.addPolygon(e);else if(e instanceof Zc)this.addLineString(e);else if(e instanceof Qc)this.addPoint(e);else if(e instanceof eh)this.addCollection(e);else if(e instanceof Gc)this.addCollection(e);else if(e instanceof rh)this.addCollection(e);else{if(!(e instanceof kc))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return gl(this._parentGeom,$c)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new bg(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?pl.BOUNDARY:pl.INTERIOR},e}(Hh),Cg=function(){if(this._li=new jl,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Sg(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=Ql.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Sg(0,e,r),this._arg[1]=new Sg(1,n,r)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];i.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(i.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Sg(0,i,s),this._arg[1]=new Sg(1,o,s)}};Cg.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},Cg.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},Cg.prototype.interfaces_=function(){return[]},Cg.prototype.getClass=function(){return Cg};var Pg=function(){};Pg.prototype.interfaces_=function(){return[]},Pg.prototype.getClass=function(){return Pg},Pg.map=function(){if(arguments[0]instanceof Wl&&gl(arguments[1],Pg.MapOp)){for(var t=arguments[0],e=arguments[1],n=new lc,r=0;r<t.getNumGeometries();r++){var i=e.map(t.getGeometryN(r));null!==i&&n.add(i)}return t.getFactory().buildGeometry(n)}if(gl(arguments[0],ic)&&gl(arguments[1],Pg.MapOp)){for(var o=arguments[0],s=arguments[1],a=new lc,u=o.iterator();u.hasNext();){var l=u.next(),c=s.map(l);null!==c&&a.add(c)}return a}},Pg.MapOp=function(){};var Mg=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Pf,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Jp,this._resultPolyList=new lc,this._resultLineList=new lc,this._resultPointList=new lc,this._graph=new Hh(new Hp),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),r=t.getLabel();e.isPointwiseEqual(t)||(r=new Dh(t.getLabel())).flip();var i=e.getDepth();i.isNull()&&i.add(n),i.add(r),n.merge(r)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,r,i){var o=new lc;return o.addAll(t),o.addAll(n),o.addAll(r),o.isEmpty()?e.createEmptyResult(i,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();if(this._ptLocator.locate(t,r)!==pl.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new lc,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new lc;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Hf.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new Wh(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var r=new Jf(this,this._geomFact,this._ptLocator);this._resultLineList=r.build(t);var i=new Zf(this,this._geomFact,this._ptLocator);this._resultPointList=i.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var r=n.next(),i=r.getLabel();i.isArea()&&!r.isInteriorAreaEdge()&&e.isResultOfOp(i.getLocation(0,Sh.RIGHT),i.getLocation(1,Sh.RIGHT),t)&&r.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),r=e.getDepth();if(!r.isNull()){r.normalize();for(var i=0;i<2;i++)n.isNull(i)||!n.isArea()||r.isNull(i)||(0===r.getDelta(i)?n.toLine(i):(ql.isTrue(!r.isNull(i,Sh.LEFT),"depth of LEFT side has not been initialized"),n.setLocation(i,Sh.LEFT,r.getLocation(i,Sh.LEFT)),ql.isTrue(!r.isNull(i,Sh.RIGHT),"depth of RIGHT side has not been initialized"),n.setLocation(i,Sh.RIGHT,r.getLocation(i,Sh.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Cg);Mg.overlayOp=function(t,e,n){return new Mg(t,e).getResultGeometry(n)},Mg.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Mg.createEmptyResult(Mg.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return Wf.map(t,{interfaces_:function(){return[Pg.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),ug.overlayOp(t,e,Mg.INTERSECTION)},Mg.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Mg.createEmptyResult(Mg.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),ug.overlayOp(t,e,Mg.SYMDIFFERENCE)},Mg.resultDimension=function(t,e,n){var r=e.getDimension(),i=n.getDimension(),o=-1;switch(t){case Mg.INTERSECTION:o=Math.min(r,i);break;case Mg.UNION:o=Math.max(r,i);break;case Mg.DIFFERENCE:o=r;break;case Mg.SYMDIFFERENCE:o=Math.max(r,i)}return o},Mg.createEmptyResult=function(t,e,n,r){var i=null;switch(Mg.resultDimension(t,e,n)){case-1:i=r.createGeometryCollection(new Array(0).fill(null));break;case 0:i=r.createPoint();break;case 1:i=r.createLineString();break;case 2:i=r.createPolygon()}return i},Mg.difference=function(t,e){return t.isEmpty()?Mg.createEmptyResult(Mg.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),ug.overlayOp(t,e,Mg.DIFFERENCE))},Mg.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),r=t.getLocation(1);return Mg.isResultOfOp(n,r,e)}if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];switch(i===pl.BOUNDARY&&(i=pl.INTERIOR),o===pl.BOUNDARY&&(o=pl.INTERIOR),s){case Mg.INTERSECTION:return i===pl.INTERIOR&&o===pl.INTERIOR;case Mg.UNION:return i===pl.INTERIOR||o===pl.INTERIOR;case Mg.DIFFERENCE:return i===pl.INTERIOR&&o!==pl.INTERIOR;case Mg.SYMDIFFERENCE:return i===pl.INTERIOR&&o!==pl.INTERIOR||i!==pl.INTERIOR&&o===pl.INTERIOR}return!1}},Mg.INTERSECTION=1,Mg.UNION=2,Mg.DIFFERENCE=3,Mg.SYMDIFFERENCE=4;var Lg=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Pf,this._seg=new vp;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};Lg.prototype.isWithinToleranceOfBoundary=function(t){for(var e=this,n=0;n<this._linework.getNumGeometries();n++)for(var r=e._linework.getGeometryN(n).getCoordinateSequence(),i=0;i<r.size()-1;i++){if(r.getCoordinate(i,e._seg.p0),r.getCoordinate(i+1,e._seg.p1),e._seg.distance(t)<=e._boundaryDistanceTolerance)return!0}return!1},Lg.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?pl.BOUNDARY:this._ptLocator.locate(t,this._g)},Lg.prototype.extractLinework=function(t){var e=new Og;t.apply(e);var n=e.getLinework(),r=_h.toLineStringArray(n);return t.getFactory().createMultiLineString(r)},Lg.prototype.interfaces_=function(){return[]},Lg.prototype.getClass=function(){return Lg};var Og=function(){this._linework=null,this._linework=new lc};Og.prototype.getLinework=function(){return this._linework},Og.prototype.filter=function(t){if(t instanceof th){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},Og.prototype.interfaces_=function(){return[Dc]},Og.prototype.getClass=function(){return Og};var Rg=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Rg.prototype.extractPoints=function(t,e,n){for(var r=t.getCoordinates(),i=0;i<r.length-1;i++)this.computeOffsetPoints(r[i],r[i+1],e,n)},Rg.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Rg.prototype.getPoints=function(t){for(var e=new lc,n=Cf.getLines(this._g).iterator();n.hasNext();){var r=n.next();this.extractPoints(r,t,e)}return e},Rg.prototype.computeOffsetPoints=function(t,e,n,r){var i=e.x-t.x,o=e.y-t.y,s=Math.sqrt(i*i+o*o),a=n*i/s,u=n*o/s,l=(e.x+t.x)/2,c=(e.y+t.y)/2;if(this._doLeft){var h=new ul(l-u,c+a);r.add(h)}if(this._doRight){var p=new ul(l+u,c-a);r.add(p)}},Rg.prototype.interfaces_=function(){return[]},Rg.prototype.getClass=function(){return Rg};var Tg=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new lc;var e=arguments[0],n=arguments[1],r=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,r],this._locFinder=[new Lg(this._geom[0],this._boundaryDistanceTolerance),new Lg(this._geom[1],this._boundaryDistanceTolerance),new Lg(this._geom[2],this._boundaryDistanceTolerance)]},Ag={TOLERANCE:{configurable:!0}};Tg.prototype.reportResult=function(t,e,n){Pl.out.println("Overlay result invalid - A:"+pl.toLocationSymbol(e[0])+" B:"+pl.toLocationSymbol(e[1])+" expected:"+(n?"i":"e")+" actual:"+pl.toLocationSymbol(e[2]))},Tg.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Tg.prototype.checkValid=function(){var t=this;if(1===arguments.length){for(var e=arguments[0],n=0;n<this._testCoords.size();n++){var r=t._testCoords.get(n);if(!t.checkValid(e,r))return t._invalidLocation=r,!1}return!0}if(2===arguments.length){var i=arguments[0],o=arguments[1];return this._location[0]=this._locFinder[0].getLocation(o),this._location[1]=this._locFinder[1].getLocation(o),this._location[2]=this._locFinder[2].getLocation(o),!!Tg.hasLocation(this._location,pl.BOUNDARY)||this.isValidResult(i,this._location)}},Tg.prototype.addTestPts=function(t){var e=new Rg(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Tg.prototype.isValidResult=function(t,e){var n=Mg.isResultOfOp(e[0],e[1],t),r=!(n^e[2]===pl.INTERIOR);return r||this.reportResult(t,e,n),r},Tg.prototype.getInvalidLocation=function(){return this._invalidLocation},Tg.prototype.interfaces_=function(){return[]},Tg.prototype.getClass=function(){return Tg},Tg.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Tg.computeBoundaryDistanceTolerance=function(t,e){return Math.min($f.computeSizeBasedSnapTolerance(t),$f.computeSizeBasedSnapTolerance(e))},Tg.isValid=function(t,e,n,r){return new Tg(t,e,r).isValid(n)},Ag.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Tg,Ag);var Dg=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Dg.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var r=t.getGeometryN(n);this._skipEmpty&&r.isEmpty()||e.add(r)}},Dg.prototype.combine=function(){for(var t=new lc,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Dg.prototype.interfaces_=function(){return[]},Dg.prototype.getClass=function(){return Dg},Dg.combine=function(){if(1===arguments.length){var t=arguments[0],e=new Dg(t);return e.combine()}if(2===arguments.length){var n=arguments[0],r=arguments[1],i=new Dg(Dg.createList(n,r));return i.combine()}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=new Dg(Dg.createList(o,s,a));return u.combine()}},Dg.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Dg.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new lc;return n.add(t),n.add(e),n}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=new lc;return s.add(r),s.add(i),s.add(o),s}};var Fg=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new lc)},kg={STRTREE_NODE_CAPACITY:{configurable:!0}};Fg.prototype.reduceToGeometries=function(t){for(var e=new lc,n=t.iterator();n.hasNext();){var r=n.next(),i=null;gl(r,ac)?i=this.unionTree(r):r instanceof Wl&&(i=r),e.add(i)}return e},Fg.prototype.extractByEnvelope=function(t,e,n){for(var r=new lc,i=0;i<e.getNumGeometries();i++){var o=e.getGeometryN(i);o.getEnvelopeInternal().intersects(t)?r.add(o):n.add(o)}return this._geomFactory.buildGeometry(r)},Fg.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),r=e.getEnvelopeInternal();if(!n.intersects(r))return Dg.combine(t,e);if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var i=n.intersection(r);return this.unionUsingEnvelopeIntersection(t,e,i)},Fg.prototype.union=function(){if(null===this._inputPolys)throw new Error("union() method cannot be called twice");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new up(Fg.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var r=t.itemsTree();return this.unionTree(r)},Fg.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2];if(r-n<=1){var i=Fg.getGeometry(e,n);return this.unionSafe(i,null)}if(r-n==2)return this.unionSafe(Fg.getGeometry(e,n),Fg.getGeometry(e,n+1));var o=Math.trunc((r+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,r);return this.unionSafe(s,a)}},Fg.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var r=n.next();e=null===e?r.copy():e.union(r)}return e},Fg.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Fg.prototype.unionActual=function(t,e){return Fg.restrictToPolygons(t.union(e))},Fg.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Fg.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var r=new lc,i=this.extractByEnvelope(n,t,r),o=this.extractByEnvelope(n,e,r),s=this.unionActual(i,o);return r.add(s),Dg.combine(r)},Fg.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0],e=t.get(0).getFactory(),n=e.buildGeometry(t),r=n.buffer(0);return r}if(2===arguments.length){var i=arguments[0],o=arguments[1],s=i.getFactory(),a=s.createGeometryCollection([i,o]),u=a.buffer(0);return u}},Fg.prototype.interfaces_=function(){return[]},Fg.prototype.getClass=function(){return Fg},Fg.restrictToPolygons=function(t){if(gl(t,$c))return t;var e=Sf.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_h.toPolygonArray(e))},Fg.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Fg.union=function(t){return new Fg(t).union()},kg.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Fg,kg);var Gg=function(){};function qg(){return new Bg}function Bg(){this.reset()}Gg.prototype.interfaces_=function(){return[]},Gg.prototype.getClass=function(){return Gg},Gg.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Mg.createEmptyResult(Mg.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),ug.overlayOp(t,e,Mg.UNION)},Bg.prototype={constructor:Bg,reset:function(){this.s=this.t=0},add:function(t){jg(zg,t,this.t),jg(this,zg.s,this.s),this.s?this.t+=zg.t:this.s=zg.t},valueOf:function(){return this.s}};var zg=new Bg;function jg(t,e,n){var r=t.s=e+n,i=r-e,o=r-i;t.t=e-o+(n-i)}var Ug=1e-6,Vg=Math.PI,Xg=Vg/2,Yg=Vg/4,Hg=2*Vg,Wg=180/Vg,Jg=Vg/180,Zg=Math.abs,Kg=Math.atan,Qg=Math.atan2,$g=Math.cos,td=Math.sin,ed=Math.sqrt;function nd(t){return t>1?0:t<-1?Vg:Math.acos(t)}function rd(t){return t>1?Xg:t<-1?-Xg:Math.asin(t)}function id(){}function od(t,e){t&&ad.hasOwnProperty(t.type)&&ad[t.type](t,e)}var sd={Feature:function(t,e){od(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,i=n.length;++r<i;)od(n[r].geometry,e)}},ad={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){ud(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)ud(n[r],e,0)},Polygon:function(t,e){ld(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)ld(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,i=n.length;++r<i;)od(n[r],e)}};function ud(t,e,n){var r,i=-1,o=t.length-n;for(e.lineStart();++i<o;)r=t[i],e.point(r[0],r[1],r[2]);e.lineEnd()}function ld(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)ud(t[n],e,1);e.polygonEnd()}qg(),qg();function cd(t){return[Qg(t[1],t[0]),rd(t[2])]}function hd(t){var e=t[0],n=t[1],r=$g(n);return[r*$g(e),r*td(e),td(n)]}function pd(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function fd(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function gd(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function dd(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function yd(t){var e=ed(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}qg();function vd(t,e){function n(n,r){return n=t(n,r),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,r){return(n=e.invert(n,r))&&t.invert(n[0],n[1])}),n}function _d(t,e){return[t>Vg?t-Hg:t<-Vg?t+Hg:t,e]}function md(t){return function(e,n){return[(e+=t)>Vg?e-Hg:e<-Vg?e+Hg:e,n]}}function xd(t){var e=md(t);return e.invert=md(-t),e}function Ed(t,e){var n=$g(t),r=td(t),i=$g(e),o=td(e);function s(t,e){var s=$g(e),a=$g(t)*s,u=td(t)*s,l=td(e),c=l*n+a*r;return[Qg(u*i-c*o,a*n-l*r),rd(c*i+u*o)]}return s.invert=function(t,e){var s=$g(e),a=$g(t)*s,u=td(t)*s,l=td(e),c=l*i-u*o;return[Qg(u*i+l*o,a*n+c*r),rd(c*n-a*r)]},s}function bd(t,e){(e=hd(e))[0]-=t,yd(e);var n=nd(-e[1]);return((-e[2]<0?-n:n)+Hg-Ug)%Hg}function wd(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:id,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}}function Id(t,e){return Zg(t[0]-e[0])<Ug&&Zg(t[1]-e[1])<Ug}function Nd(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function Sd(t,e,n,r,i){var o,s,a=[],u=[];if(t.forEach((function(t){if(!((e=t.length-1)<=0)){var e,n,r=t[0],s=t[e];if(Id(r,s)){for(i.lineStart(),o=0;o<e;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(n=new Nd(r,t,null,!0)),u.push(n.o=new Nd(r,null,n,!1)),a.push(n=new Nd(s,t,null,!1)),u.push(n.o=new Nd(s,null,n,!0))}})),a.length){for(u.sort(e),Cd(a),Cd(u),o=0,s=u.length;o<s;++o)u[o].e=n=!n;for(var l,c,h=a[0];;){for(var p=h,f=!0;p.v;)if((p=p.n)===h)return;l=p.z,i.lineStart();do{if(p.v=p.o.v=!0,p.e){if(f)for(o=0,s=l.length;o<s;++o)i.point((c=l[o])[0],c[1]);else r(p.x,p.n.x,1,i);p=p.n}else{if(f)for(l=p.p.z,o=l.length-1;o>=0;--o)i.point((c=l[o])[0],c[1]);else r(p.x,p.p.x,-1,i);p=p.p}l=(p=p.o).z,f=!f}while(!p.v);i.lineEnd()}}}function Cd(t){if(e=t.length){for(var e,n,r=0,i=t[0];++r<e;)i.n=n=t[r],n.p=i,i=n;i.n=n=t[0],n.p=i}}function Pd(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}_d.invert=_d;var Md,Ld;1===(Md=Pd).length&&(Ld=Md,Md=function(t,e){return Pd(Ld(t),e)});function Od(t){for(var e,n,r,i=t.length,o=-1,s=0;++o<i;)s+=t[o].length;for(n=new Array(s);--i>=0;)for(e=(r=t[i]).length;--e>=0;)n[--s]=r[e];return n}var Rd=1e9,Td=-Rd;function Ad(t,e,n,r){function i(i,o){return t<=i&&i<=n&&e<=o&&o<=r}function o(i,o,a,l){var c=0,h=0;if(null==i||(c=s(i,a))!==(h=s(o,a))||u(i,o)<0^a>0)do{l.point(0===c||3===c?t:n,c>1?r:e)}while((c=(c+a+4)%4)!==h);else l.point(o[0],o[1])}function s(r,i){return Zg(r[0]-t)<Ug?i>0?0:3:Zg(r[0]-n)<Ug?i>0?2:1:Zg(r[1]-e)<Ug?i>0?1:0:i>0?3:2}function a(t,e){return u(t.x,e.x)}function u(t,e){var n=s(t,1),r=s(e,1);return n!==r?n-r:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(s){var u,l,c,h,p,f,g,d,y,v,_,m=s,x=wd(),E={point:b,lineStart:function(){E.point=w,l&&l.push(c=[]);v=!0,y=!1,g=d=NaN},lineEnd:function(){u&&(w(h,p),f&&y&&x.rejoin(),u.push(x.result()));E.point=b,y&&m.lineEnd()},polygonStart:function(){m=x,u=[],l=[],_=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,i=l.length;n<i;++n)for(var o,s,a=l[n],u=1,c=a.length,h=a[0],p=h[0],f=h[1];u<c;++u)o=p,s=f,p=(h=a[u])[0],f=h[1],s<=r?f>r&&(p-o)*(r-s)>(f-s)*(t-o)&&++e:f<=r&&(p-o)*(r-s)<(f-s)*(t-o)&&--e;return e}(),n=_&&e,i=(u=Od(u)).length;(n||i)&&(s.polygonStart(),n&&(s.lineStart(),o(null,null,1,s),s.lineEnd()),i&&Sd(u,a,e,o,s),s.polygonEnd());m=s,u=l=c=null}};function b(t,e){i(t,e)&&m.point(t,e)}function w(o,s){var a=i(o,s);if(l&&c.push([o,s]),v)h=o,p=s,f=a,v=!1,a&&(m.lineStart(),m.point(o,s));else if(a&&y)m.point(o,s);else{var u=[g=Math.max(Td,Math.min(Rd,g)),d=Math.max(Td,Math.min(Rd,d))],x=[o=Math.max(Td,Math.min(Rd,o)),s=Math.max(Td,Math.min(Rd,s))];!function(t,e,n,r,i,o){var s,a=t[0],u=t[1],l=0,c=1,h=e[0]-a,p=e[1]-u;if(s=n-a,h||!(s>0)){if(s/=h,h<0){if(s<l)return;s<c&&(c=s)}else if(h>0){if(s>c)return;s>l&&(l=s)}if(s=i-a,h||!(s<0)){if(s/=h,h<0){if(s>c)return;s>l&&(l=s)}else if(h>0){if(s<l)return;s<c&&(c=s)}if(s=r-u,p||!(s>0)){if(s/=p,p<0){if(s<l)return;s<c&&(c=s)}else if(p>0){if(s>c)return;s>l&&(l=s)}if(s=o-u,p||!(s<0)){if(s/=p,p<0){if(s>c)return;s>l&&(l=s)}else if(p>0){if(s<l)return;s<c&&(c=s)}return l>0&&(t[0]=a+l*h,t[1]=u+l*p),c<1&&(e[0]=a+c*h,e[1]=u+c*p),!0}}}}}(u,x,t,e,n,r)?a&&(m.lineStart(),m.point(o,s),_=!1):(y||(m.lineStart(),m.point(u[0],u[1])),m.point(x[0],x[1]),a||m.lineEnd(),_=!1)}g=o,d=s,y=a}return E}}var Dd=qg();qg();function Fd(t){return t}qg(),qg();var kd=1/0,Gd=kd,qd=-kd,Bd=qd,zd={point:function(t,e){t<kd&&(kd=t);t>qd&&(qd=t);e<Gd&&(Gd=e);e>Bd&&(Bd=e)},lineStart:id,lineEnd:id,polygonStart:id,polygonEnd:id,result:function(){var t=[[kd,Gd],[qd,Bd]];return qd=Bd=-(Gd=kd=1/0),t}};qg();function jd(t,e,n,r){return function(i,o){var s,a,u,l=e(o),c=i.invert(r[0],r[1]),h=wd(),p=e(h),f=!1,g={point:d,lineStart:v,lineEnd:_,polygonStart:function(){g.point=m,g.lineStart=x,g.lineEnd=E,a=[],s=[]},polygonEnd:function(){g.point=d,g.lineStart=v,g.lineEnd=_,a=Od(a);var t=function(t,e){var n=e[0],r=e[1],i=[td(n),-$g(n),0],o=0,s=0;Dd.reset();for(var a=0,u=t.length;a<u;++a)if(c=(l=t[a]).length)for(var l,c,h=l[c-1],p=h[0],f=h[1]/2+Yg,g=td(f),d=$g(f),y=0;y<c;++y,p=_,g=x,d=E,h=v){var v=l[y],_=v[0],m=v[1]/2+Yg,x=td(m),E=$g(m),b=_-p,w=b>=0?1:-1,I=w*b,N=I>Vg,S=g*x;if(Dd.add(Qg(S*w*td(I),d*E+S*$g(I))),o+=N?b+w*Hg:b,N^p>=n^_>=n){var C=fd(hd(h),hd(v));yd(C);var P=fd(i,C);yd(P);var M=(N^b>=0?-1:1)*rd(P[2]);(r>M||r===M&&(C[0]||C[1]))&&(s+=N^b>=0?1:-1)}}return(o<-1e-6||o<Ug&&Dd<-1e-6)^1&s}(s,c);a.length?(f||(o.polygonStart(),f=!0),Sd(a,Vd,t,n,o)):t&&(f||(o.polygonStart(),f=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),f&&(o.polygonEnd(),f=!1),a=s=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function d(e,n){var r=i(e,n);t(e=r[0],n=r[1])&&o.point(e,n)}function y(t,e){var n=i(t,e);l.point(n[0],n[1])}function v(){g.point=y,l.lineStart()}function _(){g.point=d,l.lineEnd()}function m(t,e){u.push([t,e]);var n=i(t,e);p.point(n[0],n[1])}function x(){p.lineStart(),u=[]}function E(){m(u[0][0],u[0][1]),p.lineEnd();var t,e,n,r,i=p.clean(),l=h.result(),c=l.length;if(u.pop(),s.push(u),u=null,c)if(1&i){if((e=(n=l[0]).length-1)>0){for(f||(o.polygonStart(),f=!0),o.lineStart(),t=0;t<e;++t)o.point((r=n[t])[0],r[1]);o.lineEnd()}}else c>1&&2&i&&l.push(l.pop().concat(l.shift())),a.push(l.filter(Ud))}return g}}function Ud(t){return t.length>1}function Vd(t,e){return((t=t.x)[0]<0?t[1]-Xg-Ug:Xg-t[1])-((e=e.x)[0]<0?e[1]-Xg-Ug:Xg-e[1])}var Xd=jd((function(){return!0}),(function(t){var e,n=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(o,s){var a=o>0?Vg:-Vg,u=Zg(o-n);Zg(u-Vg)<Ug?(t.point(n,r=(r+s)/2>0?Xg:-Xg),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),e=0):i!==a&&u>=Vg&&(Zg(n-i)<Ug&&(n-=i*Ug),Zg(o-a)<Ug&&(o-=a*Ug),r=function(t,e,n,r){var i,o,s=td(t-n);return Zg(s)>Ug?Kg((td(e)*(o=$g(r))*td(n)-td(r)*(i=$g(e))*td(t))/(i*o*s)):(e+r)/2}(n,r,o,s),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),e=0),t.point(n=o,r=s),i=a},lineEnd:function(){t.lineEnd(),n=r=NaN},clean:function(){return 2-e}}}),(function(t,e,n,r){var i;if(null==t)i=n*Xg,r.point(-Vg,i),r.point(0,i),r.point(Vg,i),r.point(Vg,0),r.point(Vg,-i),r.point(0,-i),r.point(-Vg,-i),r.point(-Vg,0),r.point(-Vg,i);else if(Zg(t[0]-e[0])>Ug){var o=t[0]<e[0]?Vg:-Vg;i=n*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(e[0],e[1])}),[-Vg,-Xg]);function Yd(t,e){var n=$g(t),r=n>0,i=Zg(n)>Ug;function o(t,e){return $g(t)*$g(e)>n}function s(t,e,r){var i=[1,0,0],o=fd(hd(t),hd(e)),s=pd(o,o),a=o[0],u=s-a*a;if(!u)return!r&&t;var l=n*s/u,c=-n*a/u,h=fd(i,o),p=dd(i,l);gd(p,dd(o,c));var f=h,g=pd(p,f),d=pd(f,f),y=g*g-d*(pd(p,p)-1);if(!(y<0)){var v=ed(y),_=dd(f,(-g-v)/d);if(gd(_,p),_=cd(_),!r)return _;var m,x=t[0],E=e[0],b=t[1],w=e[1];E<x&&(m=x,x=E,E=m);var I=E-x,N=Zg(I-Vg)<Ug;if(!N&&w<b&&(m=b,b=w,w=m),N||I<Ug?N?b+w>0^_[1]<(Zg(_[0]-x)<Ug?b:w):b<=_[1]&&_[1]<=w:I>Vg^(x<=_[0]&&_[0]<=E)){var S=dd(f,(-g+v)/d);return gd(S,p),[_,cd(S)]}}}function a(e,n){var i=r?t:Vg-t,o=0;return e<-i?o|=1:e>i&&(o|=2),n<-i?o|=4:n>i&&(o|=8),o}return jd(o,(function(t){var e,n,u,l,c;return{lineStart:function(){l=u=!1,c=1},point:function(h,p){var f,g=[h,p],d=o(h,p),y=r?d?0:a(h,p):d?a(h+(h<0?Vg:-Vg),p):0;if(!e&&(l=u=d)&&t.lineStart(),d!==u&&(!(f=s(e,g))||Id(e,f)||Id(g,f))&&(g[0]+=Ug,g[1]+=Ug,d=o(g[0],g[1])),d!==u)c=0,d?(t.lineStart(),f=s(g,e),t.point(f[0],f[1])):(f=s(e,g),t.point(f[0],f[1]),t.lineEnd()),e=f;else if(i&&e&&r^d){var v;y&n||!(v=s(g,e,!0))||(c=0,r?(t.lineStart(),t.point(v[0][0],v[0][1]),t.point(v[1][0],v[1][1]),t.lineEnd()):(t.point(v[1][0],v[1][1]),t.lineEnd(),t.lineStart(),t.point(v[0][0],v[0][1])))}!d||e&&Id(e,g)||t.point(g[0],g[1]),e=g,u=d,n=y},lineEnd:function(){u&&t.lineEnd(),e=null},clean:function(){return c|(l&&u)<<1}}}),(function(n,r,i,o){!function(t,e,n,r,i,o){if(n){var s=$g(e),a=td(e),u=r*n;null==i?(i=e+r*Hg,o=e-u/2):(i=bd(s,i),o=bd(s,o),(r>0?i<o:i>o)&&(i+=r*Hg));for(var l,c=i;r>0?c>o:c<o;c-=u)l=cd([s,-a*$g(c),-a*td(c)]),t.point(l[0],l[1])}}(o,t,e,i,n,r)}),r?[0,-t]:[-Vg,t-Vg])}function Hd(t){return function(e){var n=new Wd;for(var r in t)n[r]=t[r];return n.stream=e,n}}function Wd(){}function Jd(t,e,n){var r=e[1][0]-e[0][0],i=e[1][1]-e[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),function(t,e){t&&sd.hasOwnProperty(t.type)?sd[t.type](t,e):od(t,e)}(n,t.stream(zd));var s=zd.result(),a=Math.min(r/(s[1][0]-s[0][0]),i/(s[1][1]-s[0][1])),u=+e[0][0]+(r-a*(s[1][0]+s[0][0]))/2,l=+e[0][1]+(i-a*(s[1][1]+s[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*a).translate([u,l])}Wd.prototype={constructor:Wd,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Zd=$g(30*Jg);function Kd(t,e){return+e?function(t,e){function n(r,i,o,s,a,u,l,c,h,p,f,g,d,y){var v=l-r,_=c-i,m=v*v+_*_;if(m>4*e&&d--){var x=s+p,E=a+f,b=u+g,w=ed(x*x+E*E+b*b),I=rd(b/=w),N=Zg(Zg(b)-1)<Ug||Zg(o-h)<Ug?(o+h)/2:Qg(E,x),S=t(N,I),C=S[0],P=S[1],M=C-r,L=P-i,O=_*M-v*L;(O*O/m>e||Zg((v*M+_*L)/m-.5)>.3||s*p+a*f+u*g<Zd)&&(n(r,i,o,s,a,u,C,P,N,x/=w,E/=w,b,d,y),y.point(C,P),n(C,P,N,x,E,b,l,c,h,p,f,g,d,y))}}return function(e){var r,i,o,s,a,u,l,c,h,p,f,g,d={point:y,lineStart:v,lineEnd:m,polygonStart:function(){e.polygonStart(),d.lineStart=x},polygonEnd:function(){e.polygonEnd(),d.lineStart=v}};function y(n,r){n=t(n,r),e.point(n[0],n[1])}function v(){c=NaN,d.point=_,e.lineStart()}function _(r,i){var o=hd([r,i]),s=t(r,i);n(c,h,l,p,f,g,c=s[0],h=s[1],l=r,p=o[0],f=o[1],g=o[2],16,e),e.point(c,h)}function m(){d.point=y,e.lineEnd()}function x(){v(),d.point=E,d.lineEnd=b}function E(t,e){_(r=t,e),i=c,o=h,s=p,a=f,u=g,d.point=_}function b(){n(c,h,l,p,f,g,i,o,r,s,a,u,16,e),d.lineEnd=m,m()}return d}}(t,e):function(t){return Hd({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}(t)}var Qd=Hd({point:function(t,e){this.stream.point(t*Jg,e*Jg)}});function $d(t){return function(t){var e,n,r,i,o,s,a,u,l,c,h=150,p=480,f=250,g=0,d=0,y=0,v=0,_=0,m=null,x=Xd,E=null,b=Fd,w=.5,I=Kd(C,w);function N(t){return[(t=o(t[0]*Jg,t[1]*Jg))[0]*h+n,r-t[1]*h]}function S(t){return(t=o.invert((t[0]-n)/h,(r-t[1])/h))&&[t[0]*Wg,t[1]*Wg]}function C(t,i){return[(t=e(t,i))[0]*h+n,r-t[1]*h]}function P(){o=vd(i=function(t,e,n){return(t%=Hg)?e||n?vd(xd(t),Ed(e,n)):xd(t):e||n?Ed(e,n):_d}(y,v,_),e);var t=e(g,d);return n=p-t[0]*h,r=f+t[1]*h,M()}function M(){return l=c=null,N}return N.stream=function(t){return l&&c===t?l:l=Qd(x(i,I(b(c=t))))},N.clipAngle=function(t){return arguments.length?(x=+t?Yd(m=t*Jg,6*Jg):(m=null,Xd),M()):m*Wg},N.clipExtent=function(t){return arguments.length?(b=null==t?(E=s=a=u=null,Fd):Ad(E=+t[0][0],s=+t[0][1],a=+t[1][0],u=+t[1][1]),M()):null==E?null:[[E,s],[a,u]]},N.scale=function(t){return arguments.length?(h=+t,P()):h},N.translate=function(t){return arguments.length?(p=+t[0],f=+t[1],P()):[p,f]},N.center=function(t){return arguments.length?(g=t[0]%360*Jg,d=t[1]%360*Jg,P()):[g*Wg,d*Wg]},N.rotate=function(t){return arguments.length?(y=t[0]%360*Jg,v=t[1]%360*Jg,_=t.length>2?t[2]%360*Jg:0,P()):[y*Wg,v*Wg,_*Wg]},N.precision=function(t){return arguments.length?(I=Kd(C,w=t*t),M()):ed(w)},N.fitExtent=function(t,e){return Jd(N,t,e)},N.fitSize=function(t,e){return function(t,e,n){return Jd(t,[[0,0],e],n)}(N,t,e)},function(){return e=t.apply(this,arguments),N.invert=e.invert&&S,P()}}((function(){return t}))()}var ty=function(t){return function(e,n){var r=$g(e),i=$g(n),o=t(r*i);return[o*i*td(e),o*td(n)]}}((function(t){return(t=nd(t))&&t/td(t)}));function ey(){return $d(ty).scale(79.4188).clipAngle(179.999)}function ny(t,n,r,i){var s=t.properties||{},a="Feature"===t.type?t.geometry:t;if("GeometryCollection"===a.type){var u=[];return q(t,(function(t){var e=ny(t,n,r,i);e&&u.push(e)})),f(u)}var l=function(t){var n=xn(t).geometry.coordinates,r=[-n[0],-n[1]];return ey().rotate(r).scale(e)}(a),c={type:a.type,coordinates:iy(a.coordinates,l)},h=(new Ih).read(c),p=m(x(n,r),"meters"),g=_f.bufferOp(h,p,i);if(!ry((g=(new Nh).write(g)).coordinates))return o({type:g.type,coordinates:oy(g.coordinates,l)},s)}function ry(t){return Array.isArray(t[0])?ry(t[0]):isNaN(t[0])}function iy(t,e){return"object"!=typeof t[0]?e(t):t.map((function(t){return iy(t,e)}))}function oy(t,e){return"object"!=typeof t[0]?e.invert(t):t.map((function(t){return oy(t,e)}))}function sy(t,e,n){void 0===n&&(n={});var r=rt(t),i=rt(e),o=$u.intersection(r.coordinates,i.coordinates);return 0===o.length?null:1===o.length?l(o[0],n.properties):y(o,n.properties)}function ay(t,e,n){void 0===n&&(n={});var r=JSON.stringify(n.properties||{}),i=t[0],o=t[1],s=t[2],a=t[3],u=(o+a)/2,l=(i+s)/2,c=2*e/me([i,u],[s,u],n)*(s-i),h=2*e/me([l,o],[l,a],n)*(a-o),p=c/2,g=2*p,d=Math.sqrt(3)/2*h,y=s-i,v=a-o,_=3/4*g,m=d,x=(y-g)/(g-p/2),E=Math.floor(x),b=(E*_-p/2-y)/2-p/2+_/2,w=Math.floor((v-d)/d),I=(v-w*d)/2,N=w*d-v>d/2;N&&(I-=d/4);for(var S=[],C=[],P=0;P<6;P++){var M=2*Math.PI/6*P;S.push(Math.cos(M)),C.push(Math.sin(M))}for(var L=[],O=0;O<=E;O++)for(var R=0;R<=w;R++){var T=O%2==1;if((0!==R||!T)&&(0!==R||!N)){var A=O*_+i-b,D=R*m+o+I;if(T&&(D-=d/2),!0===n.triangles)ly([A,D],c/2,h/2,JSON.parse(r),S,C).forEach((function(t){n.mask?sy(n.mask,t)&&L.push(t):L.push(t)}));else{var F=uy([A,D],c/2,h/2,JSON.parse(r),S,C);n.mask?sy(n.mask,F)&&L.push(F):L.push(F)}}}return f(L)}function uy(t,e,n,r,i,o){for(var s=[],a=0;a<6;a++){var u=t[0]+e*i[a],c=t[1]+n*o[a];s.push([u,c])}return s.push(s[0].slice()),l([s],r)}function ly(t,e,n,r,i,o){for(var s=[],a=0;a<6;a++){var u=[];u.push(t),u.push([t[0]+e*i[a],t[1]+n*o[a]]),u.push([t[0]+e*i[(a+1)%6],t[1]+n*o[(a+1)%6]]),u.push(t),s.push(l([u],r))}return s}function cy(t){return y(t)}function hy(t){return l(t&&t.geometry.coordinates||[[[180,90],[-180,90],[-180,-90],[180,-90],[180,90]]])}function py(t,e,n){return void 0===n&&(n={}),function(t,e,n,r){void 0===r&&(r={});for(var i=[],o=t[0],s=t[1],a=t[2],u=t[3],c=e/me([o,s],[a,s],r)*(a-o),h=n/me([o,s],[o,u],r)*(u-s),p=a-o,g=u-s,d=Math.floor(p/c),y=Math.floor(g/h),v=(g-y*h)/2,_=o+(p-d*c)/2,m=0;m<d;m++){for(var x=s+v,E=0;E<y;E++){var b=l([[[_,x],[_,x+h],[_+c,x+h],[_+c,x],[_,x]]],r.properties);r.mask?Ps(r.mask,b)&&i.push(b):i.push(b),x+=h}_+=c}return f(i)}(t,e,e,n)}function fy(t,e,n){void 0===n&&(n={});for(var r=[],i=e/me([t[0],t[1]],[t[2],t[1]],n)*(t[2]-t[0]),o=e/me([t[0],t[1]],[t[0],t[3]],n)*(t[3]-t[1]),s=0,a=t[0];a<=t[2];){for(var u=0,c=t[1];c<=t[3];){var h=null,p=null;s%2==0&&u%2==0?(h=l([[[a,c],[a,c+o],[a+i,c],[a,c]]],n.properties),p=l([[[a,c+o],[a+i,c+o],[a+i,c],[a,c+o]]],n.properties)):s%2==0&&u%2==1?(h=l([[[a,c],[a+i,c+o],[a+i,c],[a,c]]],n.properties),p=l([[[a,c],[a,c+o],[a+i,c+o],[a,c]]],n.properties)):u%2==0&&s%2==1?(h=l([[[a,c],[a,c+o],[a+i,c+o],[a,c]]],n.properties),p=l([[[a,c],[a+i,c+o],[a+i,c],[a,c]]],n.properties)):u%2==1&&s%2==1&&(h=l([[[a,c],[a,c+o],[a+i,c],[a,c]]],n.properties),p=l([[[a,c+o],[a+i,c+o],[a+i,c],[a,c+o]]],n.properties)),n.mask?(sy(n.mask,h)&&r.push(h),sy(n.mask,p)&&r.push(p)):(r.push(h),r.push(p)),c+=o,u++}s++,a+=i}return f(r)}ty.invert=function(t){return function(e,n){var r=ed(e*e+n*n),i=t(r),o=td(i),s=$g(i);return[Qg(e*o,r*s),rd(r&&n*o/r)]}}((function(t){return t})),t.along=function(t,e,n){void 0===n&&(n={});for(var r=rt(t).coordinates,i=0,o=0;o<r.length&&!(e>=i&&o===r.length-1);o++){if(i>=e){var s=e-i;if(s){var u=mn(r[o],r[o-1])-180;return vn(r[o],s,u,n)}return a(r[o])}i+=me(r[o],r[o+1],n)}return a(r[r.length-1])},t.angle=function(t,e,n,r){if(void 0===r&&(r={}),!P(r))throw new Error("options is invalid");if(!t)throw new Error("startPoint is required");if(!e)throw new Error("midPoint is required");if(!n)throw new Error("endPoint is required");var i=t,o=e,s=n,a=b(!0!==r.mercator?mn(i,o):Bi(i,o)),u=b(!0!==r.mercator?mn(s,o):Bi(s,o)),l=Math.abs(a-u);return!0===r.explementary?360-l:l},t.applyFilter=uu,t.area=jr,t.areaFactors=i,t.bbox=Z,t.bboxClip=function(t,e){var n=rt(t),r=n.type,i="Feature"===t.type?t.properties:{},o=n.coordinates;switch(r){case"LineString":case"MultiLineString":var s=[];return"LineString"===r&&(o=[o]),o.forEach((function(t){!function(t,e,n){var r,i,o,s,a,u=t.length,l=Ri(t[0],e),c=[];for(n||(n=[]),r=1;r<u;r++){for(s=t[r-1],i=o=Ri(a=t[r],e);;){if(!(l|i)){c.push(s),i!==o?(c.push(a),r<u-1&&(n.push(c),c=[])):r===u-1&&c.push(a);break}if(l&i)break;l?l=Ri(s=Oi(s,a,l,e),e):i=Ri(a=Oi(s,a,i,e),e)}l=o}c.length&&n.push(c)}(t,e,s)})),1===s.length?h(s[0],i):g(s,i);case"Polygon":return l(Ti(o,e),i);case"MultiPolygon":return y(o.map((function(t){return Ti(t,e)})),i);default:throw new Error("geometry "+r+" not supported")}},t.bboxPolygon=gn,t.bearing=mn,t.bearingToAngle=b,t.bearingToAzimuth=b,t.bezier=fn,t.bezierSpline=fn,t.booleanClockwise=Yi,t.booleanContains=function(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type,s=n.coordinates,a=r.coordinates;switch(i){case"Point":switch(o){case"Point":return vs(s,a);default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPoint":switch(o){case"Point":return function(t,e){var n,r=!1;for(n=0;n<t.coordinates.length;n++)if(vs(t.coordinates[n],e.coordinates)){r=!0;break}return r}(n,r);case"MultiPoint":return function(t,e){for(var n=0,r=e.coordinates;n<r.length;n++){for(var i=r[n],o=!1,s=0,a=t.coordinates;s<a.length;s++){if(vs(i,a[s])){o=!0;break}}if(!o)return!1}return!0}(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"Point":return Wr(r,n,{ignoreEndVertices:!0});case"LineString":return function(t,e){for(var n=!1,r=0,i=e.coordinates;r<i.length;r++){var o=i[r];if(Wr({type:"Point",coordinates:o},t,{ignoreEndVertices:!0})&&(n=!0),!Wr({type:"Point",coordinates:o},t,{ignoreEndVertices:!1}))return!1}return n}(n,r);case"MultiPoint":return function(t,e){for(var n=!1,r=0,i=e.coordinates;r<i.length;r++){var o=i[r];if(Wr(o,t,{ignoreEndVertices:!0})&&(n=!0),!Wr(o,t))return!1}if(n)return!0;return!1}(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"Point":return ye(r,n,{ignoreBoundary:!0});case"LineString":return function(t,e){var n=!1,r=0,i=Z(t),o=Z(e);if(!ys(i,o))return!1;for(;r<e.coordinates.length-1;r++){if(ye({type:"Point",coordinates:_s(e.coordinates[r],e.coordinates[r+1])},t,{ignoreBoundary:!0})){n=!0;break}}return n}(n,r);case"Polygon":return function(t,e){if("Feature"===t.type&&null===t.geometry)return!1;if("Feature"===e.type&&null===e.geometry)return!1;var n=Z(t),r=Z(e);if(!ys(n,r))return!1;for(var i=rt(e).coordinates,o=0,s=i;o<s.length;o++)for(var a=0,u=s[o];a<u.length;a++){if(!ye(u[a],t))return!1}return!0}(n,r);case"MultiPoint":return function(t,e){for(var n=0,r=e.coordinates;n<r.length;n++){if(!ye(r[n],t,{ignoreBoundary:!0}))return!1}return!0}(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+i+" geometry not supported")}},t.booleanCrosses=function(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;switch(i){case"MultiPoint":switch(o){case"LineString":return ms(n,r);case"Polygon":return Es(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"MultiPoint":return ms(r,n);case"LineString":return function(t,e){if(Or(t,e).features.length>0)for(var n=0;n<t.coordinates.length-1;n++)for(var r=0;r<e.coordinates.length-1;r++){var i=!0;if(0!==r&&r!==e.coordinates.length-2||(i=!1),bs(t.coordinates[n],t.coordinates[n+1],e.coordinates[r],i))return!0}return!1}(n,r);case"Polygon":return xs(n,r);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"MultiPoint":return Es(r,n);case"LineString":return xs(r,n);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+i+" geometry not supported")}},t.booleanDisjoint=ps,t.booleanEqual=function(t,e){return rt(t).type===rt(e).type&&new Cs({precision:6}).compare(tn(t),tn(e))},t.booleanIntersects=Ps,t.booleanOverlap=function(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;if("MultiPoint"===i&&"MultiPoint"!==o||("LineString"===i||"MultiLineString"===i)&&"LineString"!==o&&"MultiLineString"!==o||("Polygon"===i||"MultiPolygon"===i)&&"Polygon"!==o&&"MultiPolygon"!==o)throw new Error("features must be of the same type");if("Point"===i)throw new Error("Point geometry not supported");if(new Cs({precision:6}).compare(t,e))return!1;var s=0;switch(i){case"MultiPoint":for(var a=0;a<n.coordinates.length;a++)for(var u=0;u<r.coordinates.length;u++){var l=n.coordinates[a],c=r.coordinates[u];if(l[0]===c[0]&&l[1]===c[1])return!0}return!1;case"LineString":case"MultiLineString":U(t,(function(t){U(e,(function(e){ki(t,e).features.length&&s++}))}));break;case"Polygon":case"MultiPolygon":U(t,(function(t){U(e,(function(e){Or(t,e).features.length&&s++}))}))}return s>0},t.booleanParallel=function(t,e){if(!t)throw new Error("line1 is required");if(!e)throw new Error("line2 is required");if("LineString"!==Us(t,"line1"))throw new Error("line1 must be a LineString");if("LineString"!==Us(e,"line2"))throw new Error("line2 must be a LineString");for(var n=Zn(tn(t)).features,r=Zn(tn(e)).features,i=0;i<n.length;i++){var o=n[i].geometry.coordinates;if(!r[i])break;if(!js(o,r[i].geometry.coordinates))return!1}return!0},t.booleanPointInPolygon=ye,t.booleanPointOnLine=Wr,t.booleanWithin=Zr,t.buffer=function(t,e,n){var r=(n=n||{}).units||"kilometers",i=n.steps||8;if(!t)throw new Error("geojson is required");if("object"!=typeof n)throw new Error("options must be an object");if("number"!=typeof i)throw new Error("steps must be an number");if(void 0===e)throw new Error("radius is required");if(i<=0)throw new Error("steps must be greater than 0");var o=[];switch(t.type){case"GeometryCollection":return q(t,(function(t){var n=ny(t,e,r,i);n&&o.push(n)})),f(o);case"FeatureCollection":return F(t,(function(t){var n=ny(t,e,r,i);n&&F(n,(function(t){t&&o.push(t)}))})),f(o)}return ny(t,e,r,i)},t.center=xn,t.centerMean=Fa,t.centerMedian=function(t,e){if(void 0===e&&(e={}),!P(e=e||{}))throw new Error("options is invalid");var n=e.counter||10;if(!C(n))throw new Error("counter must be a number");var r=e.weight,i=Fa(t,{weight:e.weight}),o=f([]);F(t,(function(t){var e;o.features.push(En(t,{properties:{weight:null===(e=t.properties)||void 0===e?void 0:e[r]}}))}));var s={tolerance:e.tolerance,medianCandidates:[]};return ka(i.geometry.coordinates,[0,0],o,s,n)},t.centerOfMass=function t(e,n){switch(void 0===n&&(n={}),it(e)){case"Point":return a(K(e),n.properties);case"Polygon":var r=[];R(e,(function(t){r.push(t)}));var i,o,s,u,l,c,h,p,f=En(e,{properties:n.properties}),g=f.geometry.coordinates,d=0,y=0,v=0,_=r.map((function(t){return[t[0]-g[0],t[1]-g[1]]}));for(i=0;i<r.length-1;i++)u=(o=_[i])[0],c=o[1],l=(s=_[i+1])[0],v+=p=u*(h=s[1])-l*c,d+=(u+l)*p,y+=(c+h)*p;if(0===v)return f;var m=1/(6*(.5*v));return a([g[0]+m*d,g[1]+m*y],n.properties);default:var x=de(e);return x?t(x,{properties:n.properties}):En(e,{properties:n.properties})}},t.centroid=En,t.circle=_n,t.cleanCoords=tn,t.clone=Ie,t.clusterEach=ou,t.clusterReduce=su,t.clusters=hu,t.clustersDbscan=function(t,e,n){void 0===n&&(n={}),!0!==n.mutate&&(t=Ie(t)),n.minPoints=n.minPoints||3;var r=new Ts.DBSCAN,i=r.run(G(t),N(e,n.units),n.minPoints,me),o=-1;return i.forEach((function(e){o++,e.forEach((function(e){var n=t.features[e];n.properties||(n.properties={}),n.properties.cluster=o,n.properties.dbscan="core"}))})),r.noise.forEach((function(e){var n=t.features[e];n.properties||(n.properties={}),n.properties.cluster?n.properties.dbscan="edge":n.properties.dbscan="noise"})),t},t.clustersKmeans=function(t,e){void 0===e&&(e={});var n=t.features.length;e.numberOfClusters=e.numberOfClusters||Math.round(Math.sqrt(n/2)),e.numberOfClusters>n&&(e.numberOfClusters=n),!0!==e.mutate&&(t=Ie(t));var r=G(t),i=r.slice(0,e.numberOfClusters),o=zs(r,e.numberOfClusters,i),s={};return o.centroids.forEach((function(t,e){s[e]=t})),F(t,(function(t,e){var n=o.idxs[e];t.properties.cluster=n,t.properties.centroid=s[n]})),t},t.collect=function(t,e,n,r){var i=Nt(6),o=e.features.map((function(t){var e;return{minX:t.geometry.coordinates[0],minY:t.geometry.coordinates[1],maxX:t.geometry.coordinates[0],maxY:t.geometry.coordinates[1],property:null===(e=t.properties)||void 0===e?void 0:e[n]}}));return i.load(o),t.features.forEach((function(t){t.properties||(t.properties={});var e=Z(t),n=i.search({minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}),o=[];n.forEach((function(e){ye([e.minX,e.minY],t)&&o.push(e.property)})),t.properties[r]=o})),t},t.collectionOf=nt,t.combine=function(t){var e={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[],properties:[]},MultiPolygon:{coordinates:[],properties:[]}};return F(t,(function(t){var n,r,i,o;switch(null===(o=t.geometry)||void 0===o?void 0:o.type){case"Point":e.MultiPoint.coordinates.push(t.geometry.coordinates),e.MultiPoint.properties.push(t.properties);break;case"MultiPoint":(n=e.MultiPoint.coordinates).push.apply(n,t.geometry.coordinates),e.MultiPoint.properties.push(t.properties);break;case"LineString":e.MultiLineString.coordinates.push(t.geometry.coordinates),e.MultiLineString.properties.push(t.properties);break;case"MultiLineString":(r=e.MultiLineString.coordinates).push.apply(r,t.geometry.coordinates),e.MultiLineString.properties.push(t.properties);break;case"Polygon":e.MultiPolygon.coordinates.push(t.geometry.coordinates),e.MultiPolygon.properties.push(t.properties);break;case"MultiPolygon":(i=e.MultiPolygon.coordinates).push.apply(i,t.geometry.coordinates),e.MultiPolygon.properties.push(t.properties)}})),f(Object.keys(e).filter((function(t){return e[t].coordinates.length})).sort().map((function(t){return o({type:t,coordinates:e[t].coordinates},{collectedProperties:e[t].properties})})))},t.concave=function(t,e){void 0===e&&(e={});var n=e.maxEdge||1/0,r=xe(function(t){var e=[],n={};return F(t,(function(t){if(t.geometry){var r=t.geometry.coordinates.join("-");Object.prototype.hasOwnProperty.call(n,r)||(e.push(t),n[r]=!0)}})),f(e)}(t));if(r.features=r.features.filter((function(t){var r=t.geometry.coordinates[0][0],i=t.geometry.coordinates[0][1],o=t.geometry.coordinates[0][2],s=me(r,i,e),a=me(i,o,e),u=me(r,o,e);return s<=n&&a<=n&&u<=n})),r.features.length<1)return null;var i=$e(r);return 1===i.coordinates.length&&(i.coordinates=i.coordinates[0],i.type="Polygon"),o(i)},t.containsNumber=$,t.convertArea=S,t.convertDistance=N,t.convertLength=N,t.convex=de,t.coordAll=G,t.coordEach=R,t.coordReduce=T,t.createBins=au,t.degrees2radians=I,t.degreesToRadians=I,t.destination=vn,t.difference=function(t,e){var n=rt(t),r=rt(e),i=t.properties||{},o=$u.difference(n.coordinates,r.coordinates);return 0===o.length?null:1===o.length?l(o[0],i):y(o,i)},t.dissolve=function(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.propertyName;nt(t,"Polygon","dissolve");var r=[];if(!e.propertyName)return ni(y($u.union.apply(null,t.features.map((function(t){return t.geometry.coordinates})))));var i={};F(t,(function(t){Object.prototype.hasOwnProperty.call(i,t.properties[n])||(i[t.properties[n]]=[]),i[t.properties[n]].push(t)}));for(var o=Object.keys(i),s=0;s<o.length;s++){var a=y($u.union.apply(null,i[o[s]].map((function(t){return t.geometry.coordinates}))));a.properties[n]=o[s],r.push(a)}return ni(f(r))},t.distance=me,t.distanceToDegrees=E,t.distanceToRadians=x,t.distanceWeight=ja,t.earthRadius=e,t.ellipse=Aa,t.envelope=dn,t.explode=bn,t.factors=n,t.feature=o,t.featureCollection=f,t.featureEach=F,t.featureOf=et,t.featureReduce=k,t.filterProperties=cu,t.findPoint=W,t.findSegment=H,t.flatten=ni,t.flattenEach=z,t.flattenReduce=j,t.flip=function(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.mutate;if(!t)throw new Error("geojson is required");return!1!==n&&void 0!==n||(t=Ie(t)),R(t,(function(t){var e=t[0],n=t[1];t[0]=n,t[1]=e})),t},t.geojsonType=tt,t.geomEach=q,t.geomReduce=B,t.geometry=s,t.geometryCollection=v,t.getCluster=iu,t.getCoord=K,t.getCoords=Q,t.getGeom=rt,t.getType=it,t.greatCircle=function(t,e,n){if("object"!=typeof(n=n||{}))throw new Error("options is invalid");var r=n.properties,i=n.npoints,o=n.offset;return t=K(t),e=K(e),r=r||{},i=i||100,o=o||10,new vi({x:t[0],y:t[1]},{x:e[0],y:e[1]},r).Arc(i,{offset:o}).json()},t.helpers=O,t.hexGrid=ay,t.inside=ye,t.interpolate=function(t,e,n){if("object"!=typeof(n=n||{}))throw new Error("options is invalid");var r=n.gridType,i=n.property,o=n.weight;if(!t)throw new Error("points is required");if(nt(t,"Point","input must contain Points"),!e)throw new Error("cellSize is required");if(void 0!==o&&"number"!=typeof o)throw new Error("weight must be a number");i=i||"elevation",r=r||"square",o=o||1;var s,a=Z(t);switch(r){case"point":case"points":s=ti(a,e,n);break;case"square":case"squares":s=py(a,e,n);break;case"hex":case"hexes":s=ay(a,e,n);break;case"triangle":case"triangles":s=fy(a,e,n);break;default:throw new Error("invalid gridType")}var u=[];return F(s,(function(e){var s=0,a=0;F(t,(function(t){var u,l=me("point"===r?e:En(e),t,n);if(void 0!==i&&(u=t.properties[i]),void 0===u&&(u=t.geometry.coordinates[2]),void 0===u)throw new Error("zValue is missing");0===l&&(s=u);var c=1/Math.pow(l,o);a+=c,s+=c*u}));var l=Ie(e);l.properties[i]=s/a,u.push(l)})),f(u)},t.intersect=sy,t.invariant=ot,t.isNumber=C,t.isObject=P,t.isobands=function(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.zProperty||"elevation",i=n.commonProperties||{},o=n.breaksProperties||[];if(nt(t,"Point","Input must contain Points"),!e)throw new Error("breaks is required");if(!Array.isArray(e))throw new Error("breaks is not an Array");if(!P(i))throw new Error("commonProperties is not an Object");if(!Array.isArray(o))throw new Error("breaksProperties is not an Array");var s=Zi(t,{zProperty:r,flip:!0}),a=function(t,e,n){for(var r=[],i=1;i<e.length;i++){var o=+e[i-1],s=+e[i],a=Zo(Jo($i(t,o,s-o))),u={};u.groupedRings=a,u[n]=o+"-"+s,r.push(u)}return r}(s,e,r);return f((a=function(t,e,n){var r=Z(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,l=e.length-1,c=i/u,h=o/l,p=function(t){t[0]=t[0]*c+s,t[1]=t[1]*h+a};return t.forEach((function(t){t.groupedRings.forEach((function(t){t.forEach((function(t){t.forEach(p)}))}))})),t}(a,s,t)).map((function(t,e){if(o[e]&&!P(o[e]))throw new Error("Each mappedProperty is required to be an Object");var n=ct({},i,o[e]);return n[r]=t[r],y(t.groupedRings,n)})))},t.isolines=function(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.zProperty||"elevation",i=n.commonProperties||{},o=n.breaksProperties||[];if(nt(t,"Point","Input must contain Points"),!e)throw new Error("breaks is required");if(!Array.isArray(e))throw new Error("breaks must be an Array");if(!P(i))throw new Error("commonProperties must be an Object");if(!Array.isArray(o))throw new Error("breaksProperties must be an Array");var s=_t(t,{zProperty:r,flip:!0});return f(function(t,e,n){var r=Z(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,l=e.length-1,c=i/u,h=o/l,p=function(t){t[0]=t[0]*c+s,t[1]=t[1]*h+a};return t.forEach((function(t){R(t,p)})),t}(function(t,e,n,r,i){for(var o=[],s=1;s<e.length;s++){var a=+e[s],u=ct({},r,i[s]);u[n]=a;var l=g(ft(t,a),u);o.push(l)}return o}(s,e,r,i,o),s,t))},t.kinks=function(t){var e,n,r={type:"FeatureCollection",features:[]};if("LineString"===(n="Feature"===t.type?t.geometry:t).type)e=[n.coordinates];else if("MultiLineString"===n.type)e=n.coordinates;else if("MultiPolygon"===n.type)e=[].concat.apply([],n.coordinates);else{if("Polygon"!==n.type)throw new Error("Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry");e=n.coordinates}return e.forEach((function(t){e.forEach((function(e){for(var n=0;n<t.length-1;n++)for(var i=n;i<e.length-1;i++){if(t===e){if(1===Math.abs(n-i))continue;if(0===n&&i===t.length-2&&t[n][0]===t[t.length-1][0]&&t[n][1]===t[t.length-1][1])continue}var o=Gr(t[n][0],t[n][1],t[n+1][0],t[n+1][1],e[i][0],e[i][1],e[i+1][0],e[i+1][1]);o&&r.features.push(a([o[0],o[1]]))}}))})),r},t.length=Yr,t.lengthToDegrees=E,t.lengthToRadians=x,t.lineArc=bi,t.lineChunk=function(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.units,i=n.reverse;if(!t)throw new Error("geojson is required");if(e<=0)throw new Error("segmentLength must be greater than 0");var o=[];return z(t,(function(t){i&&(t.geometry.coordinates=t.geometry.coordinates.reverse()),function(t,e,n,r){var i=Yr(t,{units:n});if(i<=e)return r(t);var o=i/e;Number.isInteger(o)||(o=Math.floor(o)+1);for(var s=0;s<o;s++){r(Hr(t,e*s,e*(s+1),{units:n}),s)}}(t,e,r,(function(t){o.push(t)}))})),f(o)},t.lineDistance=Yr,t.lineEach=X,t.lineIntersect=Or,t.lineOffset=function(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.units;if(!t)throw new Error("geojson is required");if(null==e||isNaN(e))throw new Error("distance is required");var i=it(t),o=t.properties;switch(i){case"LineString":return os(t,e,r);case"MultiLineString":var s=[];return z(t,(function(t){s.push(os(t,e,r).geometry.coordinates)})),g(s,o);default:throw new Error("geometry "+i+" is not supported")}},t.lineOverlap=ki,t.lineReduce=Y,t.lineSegment=Zn,t.lineSlice=function(t,e,n){var r=Q(n);if("LineString"!==it(n))throw new Error("line must be a LineString");for(var i,o=Tr(n,t),s=Tr(n,e),a=[(i=o.properties.index<=s.properties.index?[o,s]:[s,o])[0].geometry.coordinates],u=i[0].properties.index+1;u<i[1].properties.index+1;u++)a.push(r[u]);return a.push(i[1].geometry.coordinates),h(a,n.properties)},t.lineSliceAlong=Hr,t.lineSplit=function(t,e){if(!t)throw new Error("line is required");if(!e)throw new Error("splitter is required");var n=it(t),r=it(e);if("LineString"!==n)throw new Error("line must be LineString");if("FeatureCollection"===r)throw new Error("splitter cannot be a FeatureCollection");if("GeometryCollection"===r)throw new Error("splitter cannot be a GeometryCollection");var i=ei(e,{precision:7});switch(r){case"Point":return mi(t,i);case"MultiPoint":return _i(t,i);case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":return _i(t,Or(t,i))}},t.lineString=h,t.lineStringToPolygon=Ci,t.lineStrings=p,t.lineToPolygon=Ci,t.mask=function(t,e){var n,r=hy(e),i=null;return"FeatureCollection"===t.type?i=cy(2===(n=t).features.length?$u.union(n.features[0].geometry.coordinates,n.features[1].geometry.coordinates):$u.union.apply($u,n.features.map((function(t){return t.geometry.coordinates})))):i=cy($u.union(t.geometry.coordinates)),i.geometry.coordinates.forEach((function(t){r.geometry.coordinates.push(t[0])})),r},t.meta=J,t.midpoint=function(t,e){return vn(t,me(t,e)/2,mn(t,e))},t.moranIndex=function(t,e){var n=e.inputField,r=e.threshold||1e5,i=e.p||2,o=e.binary||!1,s=ja(t,{alpha:e.alpha||-1,binary:o,p:i,standardization:e.standardization||!0,threshold:r}),a=[];F(t,(function(t){var e=t.properties||{};a.push(e[n])}));for(var u=Ua(a),l=function(t){for(var e=Ua(t),n=0,r=0,i=t;r<i.length;r++){var o=i[r];n+=Math.pow(o-e,2)}return n/t.length}(a),c=0,h=0,p=0,f=0,g=s.length,d=0;d<g;d++){for(var y=0,v=0;v<g;v++)c+=s[d][v]*(a[d]-u)*(a[v]-u),h+=s[d][v],p+=Math.pow(s[d][v]+s[v][d],2),y+=s[d][v]+s[v][d];f+=Math.pow(y,2)}var _=c/h/l,m=-1/(g-1),x=(g*g*(p*=.5)-g*f+h*h*3)/((g-1)*(g+1)*(h*h))-m*m,E=Math.sqrt(x);return{expectedMoranIndex:m,moranIndex:_,stdNorm:E,zNorm:(_-m)/E}},t.multiLineString=g,t.multiPoint=d,t.multiPolygon=y,t.nearest=Jn,t.nearestPoint=Jn,t.nearestPointOnLine=Tr,t.nearestPointToLine=function(t,e,n){void 0===n&&(n={});var r=n.units,i=n.properties||{},o=function(t){var e=[];switch(t.geometry?t.geometry.type:t.type){case"GeometryCollection":return q(t,(function(t){"Point"===t.type&&e.push({type:"Feature",properties:{},geometry:t})})),{type:"FeatureCollection",features:e};case"FeatureCollection":return t.features=t.features.filter((function(t){return"Point"===t.geometry.type})),t;default:throw new Error("points must be a Point Collection")}}(t);if(!o.features.length)throw new Error("points must contain features");if(!e)throw new Error("line is required");if("LineString"!==it(e))throw new Error("line must be a LineString");var s=1/0,a=null;return F(o,(function(t){var n=Dr(t,e,{units:r});n<s&&(s=n,a=t)})),a&&(a.properties=ct({dist:s},a.properties,i)),a},t.planepoint=function(t,e){var n=K(t),r=rt(e).coordinates[0];if(r.length<4)throw new Error("OuterRing of a Polygon must have 4 or more Positions.");var i=e.properties||{},o=i.a,s=i.b,a=i.c,u=n[0],l=n[1],c=r[0][0],h=r[0][1],p=void 0!==o?o:r[0][2],f=r[1][0],g=r[1][1],d=void 0!==s?s:r[1][2],y=r[2][0],v=r[2][1],_=void 0!==a?a:r[2][2];return(_*(u-c)*(l-g)+p*(u-f)*(l-v)+d*(u-y)*(l-h)-d*(u-c)*(l-v)-_*(u-f)*(l-h)-p*(u-y)*(l-g))/((u-c)*(l-g)+(u-f)*(l-v)+(u-y)*(l-h)-(u-c)*(l-v)-(u-f)*(l-h)-(u-y)*(l-g))},t.point=a,t.pointGrid=ti,t.pointOnFeature=qr,t.pointOnLine=Tr,t.pointOnSurface=qr,t.pointToLineDistance=Dr,t.points=u,t.pointsWithinPolygon=_e,t.polygon=l,t.polygonSmooth=function(t,e){var n=[],r=e.iterations||1;if(!t)throw new Error("inputPolys is required");return q(t,(function(t,e,i){var o,s,a;switch(t.type){case"Polygon":o=[[]];for(var u=0;u<r;u++)a=[[]],s=t,u>0&&(s=l(o).geometry),qa(s,a),o=a.slice(0);n.push(l(o,i));break;case"MultiPolygon":o=[[[]]];for(var c=0;c<r;c++)a=[[[]]],s=t,c>0&&(s=y(o).geometry),Ba(s,a),o=a.slice(0);n.push(y(o,i));break;default:throw new Error("geometry is invalid, must be Polygon or MultiPolygon")}})),f(n)},t.polygonTangents=function(t,e){var n,r,i,o,s=Q(t),u=Q(e),l=Z(e),c=0,h=null;switch(s[0]>l[0]&&s[0]<l[2]&&s[1]>l[1]&&s[1]<l[3]&&(c=(h=Jn(t,bn(e))).properties.featureIndex),it(e)){case"Polygon":n=u[0][c],r=u[0][0],null!==h&&h.geometry.coordinates[1]<s[1]&&(r=u[0][c]),o=Xi(u[0][0],u[0][u[0].length-1],s);var p=Ui(u[0],s,o,i,n,r);n=p[0],r=p[1];break;case"MultiPolygon":for(var g=0,d=0,y=0,v=0;v<u[0].length;v++){g=v;for(var _=!1,m=0;m<u[0][v].length;m++){if(d=m,y===c){_=!0;break}y++}if(_)break}n=u[0][g][d],r=u[0][g][d],o=Xi(u[0][0][0],u[0][0][u[0][0].length-1],s),u.forEach((function(t){var e=Ui(t[0],s,o,i,n,r);n=e[0],r=e[1]}))}return f([a(n),a(r)])},t.polygonToLine=Ii,t.polygonToLineString=Ii,t.polygonize=function(t){var e=hs.fromGeoJson(t);e.deleteDangles(),e.deleteCutEdges();var n=[],r=[];return e.getEdgeRings().filter((function(t){return t.isValid()})).forEach((function(t){t.isHole()?n.push(t):r.push(t)})),n.forEach((function(t){cs.findEdgeRingContaining(t,r)&&r.push(t)})),f(r.map((function(t){return t.toPolygon()})))},t.polygons=c,t.projection=Ja,t.propEach=A,t.propReduce=D,t.propertiesContainsFilter=lu,t.radians2degrees=w,t.radiansToDegrees=w,t.radiansToDistance=m,t.radiansToLength=m,t.random=ru,t.randomLineString=tu,t.randomPoint=Qa,t.randomPolygon=$a,t.randomPosition=Ka,t.rewind=function(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.reverse||!1,r=e.mutate||!1;if(!t)throw new Error("<geojson> is required");if("boolean"!=typeof n)throw new Error("<reverse> must be a boolean");if("boolean"!=typeof r)throw new Error("<mutate> must be a boolean");!1===r&&(t=Ie(t));var i=[];switch(t.type){case"GeometryCollection":return q(t,(function(t){Hi(t,n)})),t;case"FeatureCollection":return F(t,(function(t){F(Hi(t,n),(function(t){i.push(t)}))})),f(i)}return Hi(t,n)},t.rhumbBearing=Bi,t.rhumbDestination=ji,t.rhumbDistance=Ar,t.round=_,t.sample=function(t,e){if(!t)throw new Error("featurecollection is required");if(null==e)throw new Error("num is required");if("number"!=typeof e)throw new Error("num must be a number");return f(function(t,e){var n,r,i=t.slice(0),o=t.length,s=o-e;for(;o-- >s;)n=i[r=Math.floor((o+1)*Math.random())],i[r]=i[o],i[o]=n;return i.slice(s)}(t.features,e))},t.sector=function(t,e,n,r,i){if(!P(i=i||{}))throw new Error("options is invalid");var o=i.properties;if(!t)throw new Error("center is required");if(null==n)throw new Error("bearing1 is required");if(null==r)throw new Error("bearing2 is required");if(!e)throw new Error("radius is required");if("object"!=typeof i)throw new Error("options must be an object");if(qi(n)===qi(r))return _n(t,e,i);var s=Q(t),a=bi(t,e,n,r,i),u=[[s]];return R(a,(function(t){u[0].push(t)})),u[0].push(s),l(u,o)},t.segmentEach=U,t.segmentReduce=V,t.shortestPath=function(t,e,n){if(!P(n=n||{}))throw new Error("options is invalid");var r=n.resolution,i=n.minDistance,s=n.obstacles||f([]);if(!t)throw new Error("start is required");if(!e)throw new Error("end is required");if(r&&!C(r)||r<=0)throw new Error("options.resolution must be a number, greater than 0");if(i)throw new Error("options.minDistance is not yet implemented");var u=K(t),l=K(e);switch(t=a(u),e=a(l),it(s)){case"FeatureCollection":if(0===s.features.length)return h([u,l]);break;case"Polygon":s=f([o(rt(s))]);break;default:throw new Error("invalid obstacles")}var c=s;c.features.push(t),c.features.push(e);var p=Z(ts(gn(Z(c)),1.15));r||(r=me([p[0],p[1]],[p[2],p[1]],n)/100),c.features.pop(),c.features.pop();for(var g=p[0],d=p[1],y=p[2],v=p[3],_=r/me([g,d],[y,d],n)*(y-g),m=r/me([g,d],[g,v],n)*(v-d),x=y-g,E=v-d,b=Math.floor(x/_),w=Math.floor(E/m),I=(x-b*_)/2,N=[],S=[],M=[],L=[],O=1/0,R=1/0,T=v-(E-w*m)/2,A=0;T>=d;){for(var D=[],F=[],k=g+I,G=0;k<=y;){var q=a([k,T]),B=Js(q,s);D.push(B?0:1),F.push(k+"|"+T);var z=me(q,t);!B&&z<O&&(O=z,M={x:G,y:A});var j=me(q,e);!B&&j<R&&(R=j,L={x:G,y:A}),k+=_,G++}S.push(D),N.push(F),T-=m,A++}var U=new Ys(S,{diagonal:!0}),V=U.grid[M.y][M.x],X=U.grid[L.y][L.x],Y=Xs.search(U,V,X),H=[u];return Y.forEach((function(t){var e=N[t.x][t.y].split("|");H.push([+e[0],+e[1]])})),H.push(l),tn(h(H))},t.simplify=function(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=void 0!==e.tolerance?e.tolerance:1,r=e.highQuality||!1,i=e.mutate||!1;if(!t)throw new Error("geojson is required");if(n&&n<0)throw new Error("invalid tolerance");return!0!==i&&(t=Ie(t)),q(t,(function(t){!function(t,e,n){var r=t.type;if("Point"===r||"MultiPoint"===r)return t;tn(t,!0);var i=t.coordinates;switch(r){case"LineString":t.coordinates=ln(i,e,n);break;case"MultiLineString":t.coordinates=i.map((function(t){return ln(t,e,n)}));break;case"Polygon":t.coordinates=cn(i,e,n);break;case"MultiPolygon":t.coordinates=i.map((function(t){return cn(t,e,n)}))}}(t,n,r)})),t},t.square=yn,t.squareGrid=py,t.standardDeviationalEllipse=function(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.steps||64,r=e.weight,i=e.properties||{};if(!C(n))throw new Error("steps must be a number");if(!P(i))throw new Error("properties must be a number");var o=G(t).length,s=Fa(t,{weight:r}),a=0,u=0,l=0;F(t,(function(t){var e=t.properties[r]||1,n=Ga(Q(t),Q(s));a+=Math.pow(n.x,2)*e,u+=Math.pow(n.y,2)*e,l+=n.x*n.y*e}));var c=a-u,h=Math.sqrt(Math.pow(c,2)+4*Math.pow(l,2)),p=2*l,g=Math.atan((c+h)/p),d=180*g/Math.PI,y=0,v=0,_=0;F(t,(function(t){var e=t.properties[r]||1,n=Ga(Q(t),Q(s));y+=Math.pow(n.x*Math.cos(g)-n.y*Math.sin(g),2)*e,v+=Math.pow(n.x*Math.sin(g)+n.y*Math.cos(g),2)*e,_+=e}));var m=Math.sqrt(2*y/_),x=Math.sqrt(2*v/_),E=Aa(s,m,x,{units:"degrees",angle:d,steps:n,properties:i}),b=_e(t,f([E])),w={meanCenterCoordinates:Q(s),semiMajorAxis:m,semiMinorAxis:x,numberOfFeatures:o,angle:d,percentageWithinEllipse:100*G(b).length/o};return E.properties.standardDeviationalEllipse=w,E},t.tag=function(t,e,n,r){return t=Ie(t),e=Ie(e),F(t,(function(t){t.properties||(t.properties={}),F(e,(function(e){void 0===t.properties[r]&&ye(t,e)&&(t.properties[r]=e.properties[n])}))})),t},t.tesselate=function(t){if(!t.geometry||"Polygon"!==t.geometry.type&&"MultiPolygon"!==t.geometry.type)throw new Error("input must be a Polygon or MultiPolygon");var e={type:"FeatureCollection",features:[]};return"Polygon"===t.geometry.type?e.features=Wn(t.geometry.coordinates):t.geometry.coordinates.forEach((function(t){e.features=e.features.concat(Wn(t))})),e},t.tin=xe,t.toMercator=Va,t.toWgs84=Xa,t.transformRotate=$o,t.transformScale=ts,t.transformTranslate=function(t,e,n,r){if(!P(r=r||{}))throw new Error("options is invalid");var i=r.units,o=r.zTranslation,s=r.mutate;if(!t)throw new Error("geojson is required");if(null==e||isNaN(e))throw new Error("distance is required");if(o&&"number"!=typeof o&&isNaN(o))throw new Error("zTranslation is not a number");if(o=void 0!==o?o:0,0===e&&0===o)return t;if(null==n||isNaN(n))throw new Error("direction is required");return e<0&&(e=-e,n+=180),!1!==s&&void 0!==s||(t=Ie(t)),R(t,(function(t){var r=Q(ji(t,e,n,{units:i}));t[0]=r[0],t[1]=r[1],o&&3===t.length&&(t[2]+=o)})),t},t.triangleGrid=fy,t.truncate=ei,t.union=function(t,e,n){void 0===n&&(n={});var r=rt(t),i=rt(e),o=$u.union(r.coordinates,i.coordinates);return 0===o.length?null:1===o.length?l(o[0],n.properties):y(o,n.properties)},t.unitsFactors=r,t.unkinkPolygon=function(t){var e=[];return z(t,(function(t){"Polygon"===t.geometry.type&&F(oi(t),(function(n){e.push(l(n.geometry.coordinates,t.properties))}))})),f(e)},t.validateBBox=M,t.validateId=L,t.voronoi=function(t,e){if(!P(e=e||{}))throw new Error("options is invalid");var n=e.bbox||[-180,-85,180,85];if(!t)throw new Error("points is required");if(!Array.isArray(n))throw new Error("bbox is invalid");return nt(t,"Point","points"),f(function(){var t=Ks,e=Qs,n=null;function r(r){return new Ra(r.map((function(n,i){var o=[Math.round(t(n,i,r)/Ma)*Ma,Math.round(e(n,i,r)/Ma)*Ma];return o.index=i,o.data=n,o})),n)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(e){return arguments.length?(t="function"==typeof e?e:Zs(+e),r):t},r.y=function(t){return arguments.length?(e="function"==typeof t?t:Zs(+t),r):e},r.extent=function(t){return arguments.length?(n=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):n&&[[n[0][0],n[0][1]],[n[1][0],n[1][1]]]},r.size=function(t){return arguments.length?(n=null==t?null:[[0,0],[+t[0],+t[1]]],r):n&&[n[1][0]-n[0][0],n[1][1]-n[0][1]]},r}().x((function(t){return t.geometry.coordinates[0]})).y((function(t){return t.geometry.coordinates[1]})).extent([[n[0],n[1]],[n[2],n[3]]]).polygons(t.features).map(Ta))},t.within=_e,Object.defineProperty(t,"__esModule",{value:!0})}));

}).call(this)}).call(this,require('_process'))
},{"_process":203}],106:[function(require,module,exports){
'use strict';

/**
 * Convert units
 */
const convert = {
  celsiusToFahrenheit: function (celsius) {
    return celsius * 1.8 + 32;
  },

  feetToMeters: function (feet) {
    return feet * 0.3048;
  },

  milesToMeters: function (miles) {
    return miles * 1609.344;
  },

  metersToMiles: function (meters) {
    return meters / 1609.344;
  },

  inhgToKpa: function (inHg) {
    return inHg / 0.29529988;
  },

  kpaToInhg: function (kpa) {
    return kpa * 0.29529988;
  },

  kphToMps: function (kph) {
    return kph / 3600 * 1000;
  },

  mpsToKts: function (mps) {
    return mps * 1.9438445;
  },

  ktsToMps: function (kts) {
    return kts / 1.9438445;
  }
};

module.exports = convert;

},{}],107:[function(require,module,exports){
'use strict';

const convert = require('./convert');

/**
 * Convert METAR string into structured object.
 * @see     https://api.checkwx.com/#31-single
 * @see     https://www.skybrary.aero/index.php/Meteorological_Terminal_Air_Report_(METAR)
 * @param   {String}  metarString raw
 * @returns {Object} with structured information. The object resembles the API
 *                   reponse of the data property of https://api.checkwx.com/#31-single
 */
const metarParser = function (metarString) {
  const metarArray = metarString
    .trim()
    .replace(/^METAR\S*?\s/, '')
    .replace(/(\s)(\d)\s(\d)\/(\d)(SM)/, function (all, a, b, c, d, e) {
      // convert visbility range like `1 1/2 SM`
      return a + (Number(b) * Number(d) + Number(c)) + '/' + d + e;
    })
    .split(' ')
  ;
  if (metarArray.length < 3) {
    throw new Error('Not enough METAR information found');
  }

  const metarObject = {
    raw_text: metarString,
    raw_parts: metarArray
  };

  const _private = {};

  /**
   * @see http://andrew.rsmas.miami.edu/bmcnoldy/Humidity.html
   * @param {Number} temp in celsius
   * @param {Number} dew  in celsius
   * @returns {Number} humidity in 1/100
   */
  _private.calcHumidity = function (temp, dew) {
    return Math.exp(
      (17.625 * dew) / (243.04 + dew)
    ) / Math.exp(
      (17.625 * temp) / (243.04 + temp)
    );
  };

  /**
   * @param {Number} value dito
   * @param {Number} toNext round to next full xxxx
   * @returns {Number} rounded value
   */
  _private.round = function (value, toNext = 500) {
    return Math.round(value / toNext) * toNext;
  };

  // ---------------------------------------------------------------------------

  let mode = 0;
  metarArray.forEach((metarPart) => {
    let match;
    if (mode < 3 && metarPart.match(/^(\d+)(?:\/(\d+))?(SM)?$/)) {
      mode = 3; // no wind reported
    }
    if (mode < 5 && metarPart.match(/^(FEW|SCT|BKN|OVC)(\d+)?/)) {
      mode = 5; // no visibility / conditions reported
    }
    if (mode < 6 && metarPart.match(/(^M?\d+\/M?\d+$)|(^\/\/\/\/\/)/)) {
      mode = 6; // end of clouds
    }
    switch (mode) {
      case 0:
        // ICAO Code
        metarObject.icao = metarPart;
        mode = 1;
        break;
      case 1:
        // Observed Date
        match = metarPart.match(/^(\d\d)(\d\d)(\d\d)Z$/);
        if (match) {
          metarObject.observed = new Date();
          metarObject.observed.setUTCDate(Number(match[1]));
          metarObject.observed.setUTCHours(Number(match[2]));
          metarObject.observed.setUTCMinutes(Number(match[3]));
          mode = 2;
        }
        break;
      case 2:
        // Wind
        match = metarPart.match(/^(\d\d\d|VRB)P?(\d+)(?:G(\d+))?(KT|MPS|KPH)/);
        if (match) {
          match[2] = Number(match[2]);
          match[3] = match[3] ? Number(match[3]) : match[2];
          if (match[4] === 'KPH') {
            match[2] = convert.kphToMps(match[2]);
            match[3] = convert.kphToMps(match[3]);
            match[4] = 'MPS';
          }

          metarObject.wind = {
            degrees: (match[1] === 'VRB') ? 180 : Number(match[1]),
            speed_kts: (match[4] === 'MPS') ? convert.mpsToKts(match[2]) : match[2],
            speed_mps: (match[4] === 'MPS') ? match[2] : convert.ktsToMps(match[2]),
            gust_kts: (match[4] === 'MPS') ? convert.mpsToKts(match[3]) : match[3],
            gust_mps: (match[4] === 'MPS') ? match[3] : convert.ktsToMps(match[3])
          };
          if (match[1] === 'VRB') {
            metarObject.wind.degrees_from = 0;
            metarObject.wind.degrees_to = 359;
          }
          mode = 3;
        }
        break;
      case 3:
        // Visibility
        match = metarPart.match(/^(\d+)(?:\/(\d+))?(SM)?$/);
        if (match) {
          match[1] = (match[2])
            ? Number(match[1]) / Number(match[2])
            : Number(match[1])
          ;
          metarObject.visibility = {
            miles: (match[3] && match[3] === 'SM') ? match[1] : convert.metersToMiles(match[1]),
            miles_float: (match[3] && match[3] === 'SM') ? match[1] : convert.metersToMiles(match[1]),
            meters: (match[3] && match[3] === 'SM') ? convert.milesToMeters(match[1]) : match[1],
            meters_float: (match[3] && match[3] === 'SM') ? convert.milesToMeters(match[1]) : match[1]
          };

          mode = 4;
        } else if (metarPart === 'CAVOK' || metarPart === 'CLR') {
          metarObject.visibility = {
            miles: 10,
            miles_float: 10,
            meters: convert.milesToMeters(10),
            meters_float: convert.milesToMeters(10)
          };
          mode = 5; // no clouds & conditions reported
        } else if (metarObject.wind) {
          // Variable wind direction
          match = metarPart.match(/^(\d+)V(\d+)$/);
          if (match) {
            metarObject.wind.degrees_from = Number(match[1]);
            metarObject.wind.degrees_to = Number(match[2]);
          }
        }
        break;
      case 4:
        // Conditions
        match = metarPart.match(/^(\+|-|VC|RE)?([A-Z][A-Z])([A-Z][A-Z])?([A-Z][A-Z])?$/);
        if (match) {
          if (!metarObject.conditions) {
            metarObject.conditions = [];
          }
          match
            .filter((m, index) => {
              return (index !== 0 && m);
            })
            .forEach((m) => {
              metarObject.conditions.push({ code: m });
            })
          ;
          // may occur multiple times
        }
        break;
      case 5:
        // Clouds
        match = metarPart.match(/^(FEW|SCT|BKN|OVC)(\d+)/);
        if (match) {
          if (!metarObject.clouds) {
            metarObject.clouds = [];
          }
          match[2] = Number(match[2]) * 100;
          const cloud = {
            code: match[1],
            base_feet_agl: match[2],
            base_meters_agl: convert.feetToMeters(match[2])
          };
          metarObject.clouds.push(cloud);
        }
        break;
      case 6:
        // Temperature
        match = metarPart.match(/^(M?\d+)\/(M?\d+)$/);
        if (match === null && metarPart.match(/^\/\/\/\/\/$/)) {
          mode = 7;
          break;
        }
        if (match) {
          match[1] = Number(match[1].replace('M', '-'));
          match[2] = Number(match[2].replace('M', '-'));
          metarObject.temperature = {
            celsius: match[1],
            fahrenheit: convert.celsiusToFahrenheit(match[1])
          };
          metarObject.dewpoint = {
            celsius: match[2],
            fahrenheit: convert.celsiusToFahrenheit(match[2])
          };
          metarObject.humidity_percent = _private.calcHumidity(match[1], match[2]) * 100;
          mode = 7;
        }
        break;
      case 7:
        // Pressure
        match = metarPart.match(/^(Q|A)(\d+)/);
        if (match) {
          match[2] = Number(match[2]);
          match[2] /= (match[1] === 'Q') ? 10 : 100;
          metarObject.barometer = {
            hg: (match[1] === 'Q') ? convert.kpaToInhg(match[2]) : match[2],
            kpa: (match[1] === 'Q') ? match[2] : convert.inhgToKpa(match[2]),
            mb: (match[1] === 'Q') ? match[2] * 10 : convert.inhgToKpa(match[2] * 10)
          };
          mode = 8;
        }
        break;
    }
  });

  if (!metarObject.visibility) {
    metarObject.visibility = {
      miles: 10,
      miles_float: 10,
      meters: convert.milesToMeters(10),
      meters_float: convert.milesToMeters(10)
    };
  }

  // Finishing touches

  metarObject.visibility.miles = String(_private.round(metarObject.visibility.miles, 0.5));
  metarObject.visibility.meters = String(_private.round(metarObject.visibility.meters));

  if (metarObject.clouds) {
    const highestCloud = metarObject.clouds[metarObject.clouds.length - 1];
    metarObject.ceiling = {
      code: highestCloud.code,
      feet_agl: highestCloud.base_feet_agl,
      meters_agl: highestCloud.base_meters_agl
    };
  }

  metarObject.flight_category = '';
  if (metarObject.visibility.miles_float > 5 &&
    (!metarObject.ceiling || metarObject.ceiling.feet_agl > 3000)
  ) {
    metarObject.flight_category = 'VFR';
  } else if (metarObject.visibility.miles_float >= 3 &&
    (!metarObject.ceiling || metarObject.ceiling.feet_agl >= 1000)
  ) {
    metarObject.flight_category = 'MVFR';
  } else if (metarObject.visibility.miles_float >= 1 &&
    (!metarObject.ceiling || metarObject.ceiling.feet_agl >= 500)
  ) {
    metarObject.flight_category = 'IFR';
  } else {
    metarObject.flight_category = 'LIFR';
  }

  return metarObject;
};

module.exports = metarParser;

},{"./convert":106}],108:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 *  Copyright 2008 Fair Oaks Labs, Inc.
 *  All rights reserved.
 */

// Utility object:  Encode/Decode C-style binary primitives to/from octet arrays
function BufferPack() {
  // Module-level (private) variables
  var el,  bBE = false, m = this;

  // Raw byte arrays
  m._DeArray = function (a, p, l) {
    return [a.slice(p,p+l)];
  };
  m._EnArray = function (a, p, l, v) {
    for (var i = 0; i < l; a[p+i] = v[i]?v[i]:0, i++);
  };

  // ASCII characters
  m._DeChar = function (a, p) {
    return String.fromCharCode(a[p]);
  };
  m._EnChar = function (a, p, v) {
    a[p] = v.charCodeAt(0);
  };

  // Little-endian (un)signed N-byte integers
  m._DeInt = function (a, p) {
    var lsb = bBE?(el.len-1):0, nsb = bBE?-1:1, stop = lsb+nsb*el.len, rv, i, f;
    for (rv = 0, i = lsb, f = 1; i != stop; rv+=(a[p+i]*f), i+=nsb, f*=256);
    if (el.bSigned && (rv & Math.pow(2, el.len*8-1))) {
      rv -= Math.pow(2, el.len*8);
    }
    return rv;
  };
  m._EnInt = function (a, p, v) {
    var lsb = bBE?(el.len-1):0, nsb = bBE?-1:1, stop = lsb+nsb*el.len, i;
    v = (v<el.min)?el.min:(v>el.max)?el.max:v;
    for (i = lsb; i != stop; a[p+i]=v&0xff, i+=nsb, v>>=8);
  };

  // ASCII character strings
  m._DeString = function (a, p, l) {
    for (var rv = new Array(l), i = 0; i < l; rv[i] = String.fromCharCode(a[p+i]), i++);
    return rv.join('');
  };
  m._EnString = function (a, p, l, v) {
    for (var t, i = 0; i < l; a[p+i] = (t=v.charCodeAt(i))?t:0, i++);
  };

  // ASCII character strings null terminated
  m._DeNullString = function (a, p, l, v) {
    var str = m._DeString(a, p, l, v);
    return str.substring(0, str.length - 1);
  };

  // Little-endian N-bit IEEE 754 floating point
  m._De754 = function (a, p) {
    var s, e, m, i, d, nBits, mLen, eLen, eBias, eMax;
    mLen = el.mLen, eLen = el.len*8-el.mLen-1, eMax = (1<<eLen)-1, eBias = eMax>>1;

    i = bBE?0:(el.len-1); d = bBE?1:-1; s = a[p+i]; i+=d; nBits = -7;
    for (e = s&((1<<(-nBits))-1), s>>=(-nBits), nBits += eLen; nBits > 0; e=e*256+a[p+i], i+=d, nBits-=8);
    for (m = e&((1<<(-nBits))-1), e>>=(-nBits), nBits += mLen; nBits > 0; m=m*256+a[p+i], i+=d, nBits-=8);

    switch (e) {
    case 0:
      // Zero, or denormalized number
      e = 1-eBias;
      break;
    case eMax:
      // NaN, or +/-Infinity
      return m?NaN:((s?-1:1)*Infinity);
    default:
      // Normalized number
      m = m + Math.pow(2, mLen);
      e = e - eBias;
      break;
    }
    return (s?-1:1) * m * Math.pow(2, e-mLen);
  };
  m._En754 = function (a, p, v) {
    var s, e, m, i, d, c, mLen, eLen, eBias, eMax;
    mLen = el.mLen, eLen = el.len*8-el.mLen-1, eMax = (1<<eLen)-1, eBias = eMax>>1;

    s = v<0?1:0;
    v = Math.abs(v);
    if (isNaN(v) || (v == Infinity)) {
      m = isNaN(v)?1:0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(v)/Math.LN2);			// Calculate log2 of the value

      if (v*(c = Math.pow(2, -e)) < 1) {
        e--; c*=2;						// Math.log() isn't 100% reliable
      }

      // Round by adding 1/2 the significand's LSD
      if (e+eBias >= 1) {
        v += el.rt/c;                                           // Normalized:  mLen significand digits
      } else {
        v += el.rt*Math.pow(2, 1-eBias);                        // Denormalized:  <= mLen significand digits
      }

      if (v*c >= 2) {
        e++; c/=2;						// Rounding can increment the exponent
      }

      if (e+eBias >= eMax) {
        // Overflow
        m = 0;
        e = eMax;
      } else if (e+eBias >= 1) {
        // Normalized - term order matters, as Math.pow(2, 52-e) and v*Math.pow(2, 52) can overflow
        m = (v*c-1)*Math.pow(2, mLen);
        e = e + eBias;
      } else {
        // Denormalized - also catches the '0' case, somewhat by chance
        m = v*Math.pow(2, eBias-1)*Math.pow(2, mLen);
        e = 0;
      }
    }

    for (i = bBE?(el.len-1):0, d=bBE?-1:1; mLen >= 8; a[p+i]=m&0xff, i+=d, m/=256, mLen-=8);
    for (e=(e<<mLen)|m, eLen+=mLen; eLen > 0; a[p+i]=e&0xff, i+=d, e/=256, eLen-=8);
    a[p+i-d] |= s*128;
  };

  // Class data
  m._sPattern = '(\\d+)?([AxcbBhHsSfdiIlL])(\\(([a-zA-Z0-9]+)\\))?';
  m._lenLut = {'A': 1, 'x': 1, 'c': 1, 'b': 1, 'B': 1, 'h': 2, 'H': 2, 's': 1,
               'S': 1, 'f': 4, 'd': 8, 'i': 4, 'I': 4, 'l': 4, 'L': 4};
  m._elLut = {'A': {en: m._EnArray, de: m._DeArray},
              's': {en: m._EnString, de: m._DeString},
              'S': {en: m._EnString, de: m._DeNullString},
              'c': {en: m._EnChar, de: m._DeChar},
              'b': {en: m._EnInt, de: m._DeInt, len: 1, bSigned: true, min: -Math.pow(2, 7), max: Math.pow(2, 7) - 1},
              'B': {en: m._EnInt, de: m._DeInt, len: 1, bSigned: false, min: 0, max: Math.pow(2, 8) - 1},
              'h': {en: m._EnInt, de: m._DeInt, len: 2, bSigned: true, min: -Math.pow(2, 15), max: Math.pow(2, 15) - 1},
              'H': {en: m._EnInt, de: m._DeInt, len: 2, bSigned: false, min: 0, max: Math.pow(2, 16) - 1},
              'i': {en: m._EnInt, de: m._DeInt, len: 4, bSigned: true, min: -Math.pow(2, 31), max: Math.pow(2, 31) - 1},
              'I': {en: m._EnInt, de: m._DeInt, len: 4, bSigned: false, min: 0, max: Math.pow(2, 32) - 1},
              'l': {en: m._EnInt, de: m._DeInt, len: 4, bSigned: true, min: -Math.pow(2, 31), max: Math.pow(2, 31) - 1},
              'L': {en: m._EnInt, de: m._DeInt, len: 4, bSigned: false, min: 0, max: Math.pow(2, 32) - 1},
              'f': {en: m._En754, de: m._De754, len: 4, mLen: 23, rt: Math.pow(2, -24) - Math.pow(2, -77)},
              'd': {en: m._En754, de: m._De754, len: 8, mLen: 52, rt: 0}};

  // Unpack a series of n elements of size s from array a at offset p with fxn
  m._UnpackSeries = function (n, s, a, p) {
    for (var fxn = el.de, rv = [], i = 0; i < n; rv.push(fxn(a, p+i*s)), i++);
    return rv;
  };

  // Pack a series of n elements of size s from array v at offset i to array a at offset p with fxn
  m._PackSeries = function (n, s, a, p, v, i) {
    for (var fxn = el.en, o = 0; o < n; fxn(a, p+o*s, v[i+o]), o++);
  };

  m._zip = function (keys, values) {
    var result = {};

    for (var i = 0; i < keys.length; i++) {
      result[keys[i]] = values[i];
    }

    return result;
  }

  // Unpack the octet array a, beginning at offset p, according to the fmt string
  m.unpack = function (fmt, a, p) {
    // Set the private bBE flag based on the format string - assume big-endianness
    bBE = (fmt.charAt(0) != '<');

    p = p?p:0;
    var re = new RegExp(this._sPattern, 'g');
    var m;
    var n;
    var s;
    var rk = [];
    var rv = [];
    
    while (m = re.exec(fmt)) {
      n = ((m[1]==undefined)||(m[1]==''))?1:parseInt(m[1]);

      if(m[2] === 'S') { // Null term string support
        n = 0; // Need to deal with empty  null term strings
        while(a[p + n] !== 0) {
          n++;
        }
        n++; // Add one for null byte
      }

      s = this._lenLut[m[2]];

      if ((p + n*s) > a.length) {
        return undefined;
      }

      switch (m[2]) {
      case 'A': case 's': case 'S':
        rv.push(this._elLut[m[2]].de(a, p, n));
        break;
      case 'c': case 'b': case 'B': case 'h': case 'H':
      case 'i': case 'I': case 'l': case 'L': case 'f': case 'd':
        el = this._elLut[m[2]];
        rv.push(this._UnpackSeries(n, s, a, p));
        break;
      }

      rk.push(m[4]); // Push key on to array

      p += n*s;
    }   

    rv = Array.prototype.concat.apply([], rv)

    if(rk.indexOf(undefined) !== -1) {
      return rv;
    } else {
      return this._zip(rk, rv);
    }
  };

  // Pack the supplied values into the octet array a, beginning at offset p, according to the fmt string
  m.packTo = function (fmt, a, p, values) {
    // Set the private bBE flag based on the format string - assume big-endianness
    bBE = (fmt.charAt(0) != '<');

    var re = new RegExp(this._sPattern, 'g');
    var m;
    var n;
    var s;
    var i = 0;
    var j;

    while (m = re.exec(fmt)) {
      n = ((m[1]==undefined)||(m[1]==''))?1:parseInt(m[1]);

      // Null term string support
      if(m[2] === 'S') {
        n = values[i].length + 1; // Add one for null byte
      }

      s = this._lenLut[m[2]];

      if ((p + n*s) > a.length) {
        return false;
      }

      switch (m[2]) {
      case 'A': case 's': case 'S':
        if ((i + 1) > values.length) { return false; }
        this._elLut[m[2]].en(a, p, n, values[i]);
        i += 1;
        break;
      case 'c': case 'b': case 'B': case 'h': case 'H':
      case 'i': case 'I': case 'l': case 'L': case 'f': case 'd':
        el = this._elLut[m[2]];
        if ((i + n) > values.length) { return false; }
        this._PackSeries(n, s, a, p, values, i);
        i += n;
        break;
      case 'x':
        for (j = 0; j < n; j++) { a[p+j] = 0; }
        break;
      }
      p += n*s;
    }

    return a;
  };

  // Pack the supplied values into a new octet array, according to the fmt string
  m.pack = function (fmt, values) {
    return this.packTo(fmt, new Buffer(this.calcLength(fmt, values)), 0, values);
  };

  // Determine the number of bytes represented by the format string
  m.calcLength = function (format, values) {
    var re = new RegExp(this._sPattern, 'g'), m, sum = 0, i = 0;
    while (m = re.exec(format)) {
      var n = (((m[1]==undefined)||(m[1]==''))?1:parseInt(m[1])) * this._lenLut[m[2]];

      if(m[2] === 'S') {
        n = values[i].length + 1; // Add one for null byte
      }

      sum += n;
      i++;
    }
    return sum;
  };
};

module.exports = new BufferPack();

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":172}],109:[function(require,module,exports){
(function (global, factory) {
typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
typeof define === 'function' && define.amd ? define(factory) :
(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.CheapRuler = factory());
})(this, (function () { 'use strict';

var factors = {
    kilometers: 1,
    miles: 1000 / 1609.344,
    nauticalmiles: 1000 / 1852,
    meters: 1000,
    metres: 1000,
    yards: 1000 / 0.9144,
    feet: 1000 / 0.3048,
    inches: 1000 / 0.0254
};

// Values that define WGS84 ellipsoid model of the Earth
var RE = 6378.137; // equatorial radius
var FE = 1 / 298.257223563; // flattening

var E2 = FE * (2 - FE);
var RAD = Math.PI / 180;

/**
 * A collection of very fast approximations to common geodesic measurements. Useful for performance-sensitive code that measures things on a city scale.
 *
 * @param {number} lat latitude
 * @param {string} [units='kilometers']
 * @returns {CheapRuler}
 * @example
 * const ruler = cheapRuler(35.05, 'miles');
 * //=ruler
 */
var CheapRuler = function CheapRuler(lat, units) {
    if (lat === undefined) { throw new Error('No latitude given.'); }
    if (units && !factors[units]) { throw new Error(("Unknown unit " + units + ". Use one of: " + (Object.keys(factors).join(', ')))); }

    // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional
    var m = RAD * RE * (units ? factors[units] : 1);
    var coslat = Math.cos(lat * RAD);
    var w2 = 1 / (1 - E2 * (1 - coslat * coslat));
    var w = Math.sqrt(w2);

    // multipliers for converting longitude and latitude degrees into distance
    this.kx = m * w * coslat;    // based on normal radius of curvature
    this.ky = m * w * w2 * (1 - E2); // based on meridonal radius of curvature
};

var staticAccessors = { units: { configurable: true } };

/**
 * Given two points of the form [longitude, latitude], returns the distance.
 *
 * @param {Array<number>} a point [longitude, latitude]
 * @param {Array<number>} b point [longitude, latitude]
 * @returns {number} distance
 * @example
 * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);
 * //=distance
 */
CheapRuler.fromTile = function fromTile (y, z, units) {
    var n = Math.PI * (1 - 2 * (y + 0.5) / Math.pow(2, z));
    var lat = Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))) / RAD;
    return new CheapRuler(lat, units);
};

/**
 * Multipliers for converting between units.
 *
 * @example
 * // convert 50 meters to yards
 * 50 * CheapRuler.units.yards / CheapRuler.units.meters;
 */
staticAccessors.units.get = function () {
    return factors;
};

CheapRuler.prototype.distance = function distance (a, b) {
    var dx = wrap(a[0] - b[0]) * this.kx;
    var dy = (a[1] - b[1]) * this.ky;
    return Math.sqrt(dx * dx + dy * dy);
};

/**
 * Returns the bearing between two points in angles.
 *
 * @param {Array<number>} a point [longitude, latitude]
 * @param {Array<number>} b point [longitude, latitude]
 * @returns {number} bearing
 * @example
 * const bearing = ruler.bearing([30.5, 50.5], [30.51, 50.49]);
 * //=bearing
 */
CheapRuler.prototype.bearing = function bearing (a, b) {
    var dx = wrap(b[0] - a[0]) * this.kx;
    var dy = (b[1] - a[1]) * this.ky;
    return Math.atan2(dx, dy) / RAD;
};

/**
 * Returns a new point given distance and bearing from the starting point.
 *
 * @param {Array<number>} p point [longitude, latitude]
 * @param {number} dist distance
 * @param {number} bearing
 * @returns {Array<number>} point [longitude, latitude]
 * @example
 * const point = ruler.destination([30.5, 50.5], 0.1, 90);
 * //=point
 */
CheapRuler.prototype.destination = function destination (p, dist, bearing) {
    var a = bearing * RAD;
    return this.offset(p,
        Math.sin(a) * dist,
        Math.cos(a) * dist);
};

/**
 * Returns a new point given easting and northing offsets (in ruler units) from the starting point.
 *
 * @param {Array<number>} p point [longitude, latitude]
 * @param {number} dx easting
 * @param {number} dy northing
 * @returns {Array<number>} point [longitude, latitude]
 * @example
 * const point = ruler.offset([30.5, 50.5], 10, 10);
 * //=point
 */
CheapRuler.prototype.offset = function offset (p, dx, dy) {
    return [
        p[0] + dx / this.kx,
        p[1] + dy / this.ky
    ];
};

/**
 * Given a line (an array of points), returns the total line distance.
 *
 * @param {Array<Array<number>>} points [longitude, latitude]
 * @returns {number} total line distance
 * @example
 * const length = ruler.lineDistance([
 * [-67.031, 50.458], [-67.031, 50.534],
 * [-66.929, 50.534], [-66.929, 50.458]
 * ]);
 * //=length
 */
CheapRuler.prototype.lineDistance = function lineDistance (points) {
    var total = 0;
    for (var i = 0; i < points.length - 1; i++) {
        total += this.distance(points[i], points[i + 1]);
    }
    return total;
};

/**
 * Given a polygon (an array of rings, where each ring is an array of points), returns the area.
 *
 * @param {Array<Array<Array<number>>>} polygon
 * @returns {number} area value in the specified units (square kilometers by default)
 * @example
 * const area = ruler.area([[
 * [-67.031, 50.458], [-67.031, 50.534], [-66.929, 50.534],
 * [-66.929, 50.458], [-67.031, 50.458]
 * ]]);
 * //=area
 */
CheapRuler.prototype.area = function area (polygon) {
    var sum = 0;

    for (var i = 0; i < polygon.length; i++) {
        var ring = polygon[i];

        for (var j = 0, len = ring.length, k = len - 1; j < len; k = j++) {
            sum += wrap(ring[j][0] - ring[k][0]) * (ring[j][1] + ring[k][1]) * (i ? -1 : 1);
        }
    }

    return (Math.abs(sum) / 2) * this.kx * this.ky;
};

/**
 * Returns the point at a specified distance along the line.
 *
 * @param {Array<Array<number>>} line
 * @param {number} dist distance
 * @returns {Array<number>} point [longitude, latitude]
 * @example
 * const point = ruler.along(line, 2.5);
 * //=point
 */
CheapRuler.prototype.along = function along (line, dist) {
    var sum = 0;

    if (dist <= 0) { return line[0]; }

    for (var i = 0; i < line.length - 1; i++) {
        var p0 = line[i];
        var p1 = line[i + 1];
        var d = this.distance(p0, p1);
        sum += d;
        if (sum > dist) { return interpolate(p0, p1, (dist - (sum - d)) / d); }
    }

    return line[line.length - 1];
};

/**
 * Returns the distance from a point `p` to a line segment `a` to `b`.
 *
 * @pointToSegmentDistance
 * @param {Array<number>} p point [longitude, latitude]
 * @param {Array<number>} p1 segment point 1 [longitude, latitude]
 * @param {Array<number>} p2 segment point 2 [longitude, latitude]
 * @returns {number} distance
 * @example
 * const distance = ruler.pointToSegmentDistance([-67.04, 50.5], [-67.05, 50.57], [-67.03, 50.54]);
 * //=distance
 */
CheapRuler.prototype.pointToSegmentDistance = function pointToSegmentDistance (p, a, b) {
    var x = a[0];
        var y = a[1];
    var dx = wrap(b[0] - x) * this.kx;
    var dy = (b[1] - y) * this.ky;
    var t = 0;

    if (dx !== 0 || dy !== 0) {
        t = (wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);

        if (t > 1) {
            x = b[0];
            y = b[1];

        } else if (t > 0) {
            x += (dx / this.kx) * t;
            y += (dy / this.ky) * t;
        }
    }

    dx = wrap(p[0] - x) * this.kx;
    dy = (p[1] - y) * this.ky;

    return Math.sqrt(dx * dx + dy * dy);
};

/**
 * Returns an object of the form {point, index, t}, where point is closest point on the line
 * from the given point, index is the start index of the segment with the closest point,
 * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.
 *
 * @param {Array<Array<number>>} line
 * @param {Array<number>} p point [longitude, latitude]
 * @returns {Object} {point, index, t}
 * @example
 * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;
 * //=point
 */
CheapRuler.prototype.pointOnLine = function pointOnLine (line, p) {
    var minDist = Infinity;
    var minX, minY, minI, minT;

    for (var i = 0; i < line.length - 1; i++) {

        var x = line[i][0];
        var y = line[i][1];
        var dx = wrap(line[i + 1][0] - x) * this.kx;
        var dy = (line[i + 1][1] - y) * this.ky;
        var t = 0;

        if (dx !== 0 || dy !== 0) {
            t = (wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);

            if (t > 1) {
                x = line[i + 1][0];
                y = line[i + 1][1];

            } else if (t > 0) {
                x += (dx / this.kx) * t;
                y += (dy / this.ky) * t;
            }
        }

        dx = wrap(p[0] - x) * this.kx;
        dy = (p[1] - y) * this.ky;

        var sqDist = dx * dx + dy * dy;
        if (sqDist < minDist) {
            minDist = sqDist;
            minX = x;
            minY = y;
            minI = i;
            minT = t;
        }
    }

    return {
        point: [minX, minY],
        index: minI,
        t: Math.max(0, Math.min(1, minT))
    };
};

/**
 * Returns a part of the given line between the start and the stop points (or their closest points on the line).
 *
 * @param {Array<number>} start point [longitude, latitude]
 * @param {Array<number>} stop point [longitude, latitude]
 * @param {Array<Array<number>>} line
 * @returns {Array<Array<number>>} line part of a line
 * @example
 * const line2 = ruler.lineSlice([-67.04, 50.5], [-67.05, 50.56], line1);
 * //=line2
 */
CheapRuler.prototype.lineSlice = function lineSlice (start, stop, line) {
    var p1 = this.pointOnLine(line, start);
    var p2 = this.pointOnLine(line, stop);

    if (p1.index > p2.index || (p1.index === p2.index && p1.t > p2.t)) {
        var tmp = p1;
        p1 = p2;
        p2 = tmp;
    }

    var slice = [p1.point];

    var l = p1.index + 1;
    var r = p2.index;

    if (!equals(line[l], slice[0]) && l <= r)
        { slice.push(line[l]); }

    for (var i = l + 1; i <= r; i++) {
        slice.push(line[i]);
    }

    if (!equals(line[r], p2.point))
        { slice.push(p2.point); }

    return slice;
};

/**
 * Returns a part of the given line between the start and the stop points indicated by distance along the line.
 *
 * @param {number} start distance
 * @param {number} stop distance
 * @param {Array<Array<number>>} line
 * @returns {Array<Array<number>>} line part of a line
 * @example
 * const line2 = ruler.lineSliceAlong(10, 20, line1);
 * //=line2
 */
CheapRuler.prototype.lineSliceAlong = function lineSliceAlong (start, stop, line) {
    var sum = 0;
    var slice = [];

    for (var i = 0; i < line.length - 1; i++) {
        var p0 = line[i];
        var p1 = line[i + 1];
        var d = this.distance(p0, p1);

        sum += d;

        if (sum > start && slice.length === 0) {
            slice.push(interpolate(p0, p1, (start - (sum - d)) / d));
        }

        if (sum >= stop) {
            slice.push(interpolate(p0, p1, (stop - (sum - d)) / d));
            return slice;
        }

        if (sum > start) { slice.push(p1); }
    }

    return slice;
};

/**
 * Given a point, returns a bounding box object ([w, s, e, n]) created from the given point buffered by a given distance.
 *
 * @param {Array<number>} p point [longitude, latitude]
 * @param {number} buffer
 * @returns {Array<number>} box object ([w, s, e, n])
 * @example
 * const bbox = ruler.bufferPoint([30.5, 50.5], 0.01);
 * //=bbox
 */
CheapRuler.prototype.bufferPoint = function bufferPoint (p, buffer) {
    var v = buffer / this.ky;
    var h = buffer / this.kx;
    return [
        p[0] - h,
        p[1] - v,
        p[0] + h,
        p[1] + v
    ];
};

/**
 * Given a bounding box, returns the box buffered by a given distance.
 *
 * @param {Array<number>} box object ([w, s, e, n])
 * @param {number} buffer
 * @returns {Array<number>} box object ([w, s, e, n])
 * @example
 * const bbox = ruler.bufferBBox([30.5, 50.5, 31, 51], 0.2);
 * //=bbox
 */
CheapRuler.prototype.bufferBBox = function bufferBBox (bbox, buffer) {
    var v = buffer / this.ky;
    var h = buffer / this.kx;
    return [
        bbox[0] - h,
        bbox[1] - v,
        bbox[2] + h,
        bbox[3] + v
    ];
};

/**
 * Returns true if the given point is inside in the given bounding box, otherwise false.
 *
 * @param {Array<number>} p point [longitude, latitude]
 * @param {Array<number>} box object ([w, s, e, n])
 * @returns {boolean}
 * @example
 * const inside = ruler.insideBBox([30.5, 50.5], [30, 50, 31, 51]);
 * //=inside
 */
CheapRuler.prototype.insideBBox = function insideBBox (p, bbox) {
    return wrap(p[0] - bbox[0]) >= 0 &&
           wrap(p[0] - bbox[2]) <= 0 &&
           p[1] >= bbox[1] &&
           p[1] <= bbox[3];
};

Object.defineProperties( CheapRuler, staticAccessors );

function equals(a, b) {
    return a[0] === b[0] && a[1] === b[1];
}

function interpolate(a, b, t) {
    var dx = wrap(b[0] - a[0]);
    var dy = b[1] - a[1];
    return [
        a[0] + dx * t,
        a[1] + dy * t
    ];
}

// normalize a degree value into [-180..180] range
function wrap(deg) {
    while (deg < -180) { deg += 360; }
    while (deg > 180) { deg -= 360; }
    return deg;
}

return CheapRuler;

}));

},{}],110:[function(require,module,exports){
/**
 * chroma.js - JavaScript library for color conversions
 *
 * Copyright (c) 2011-2019, Gregor Aisch
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * -------------------------------------------------------
 *
 * chroma.js includes colors from colorbrewer2.org, which are released under
 * the following license:
 *
 * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
 * and The Pennsylvania State University.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * ------------------------------------------------------
 *
 * Named colors are taken from X11 Color Names.
 * http://www.w3.org/TR/css3-color/#svg-color
 *
 * @preserve
 */

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());
})(this, (function () { 'use strict';

    var limit$2 = function (x, min, max) {
        if ( min === void 0 ) min=0;
        if ( max === void 0 ) max=1;

        return x < min ? min : x > max ? max : x;
    };

    var limit$1 = limit$2;

    var clip_rgb$3 = function (rgb) {
        rgb._clipped = false;
        rgb._unclipped = rgb.slice(0);
        for (var i=0; i<=3; i++) {
            if (i < 3) {
                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }
                rgb[i] = limit$1(rgb[i], 0, 255);
            } else if (i === 3) {
                rgb[i] = limit$1(rgb[i], 0, 1);
            }
        }
        return rgb;
    };

    // ported from jQuery's $.type
    var classToType = {};
    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {
        var name = list$1[i$1];

        classToType[("[object " + name + "]")] = name.toLowerCase();
    }
    var type$p = function(obj) {
        return classToType[Object.prototype.toString.call(obj)] || "object";
    };

    var type$o = type$p;

    var unpack$B = function (args, keyOrder) {
        if ( keyOrder === void 0 ) keyOrder=null;

    	// if called with more than 3 arguments, we return the arguments
        if (args.length >= 3) { return Array.prototype.slice.call(args); }
        // with less than 3 args we check if first arg is object
        // and use the keyOrder string to extract and sort properties
    	if (type$o(args[0]) == 'object' && keyOrder) {
    		return keyOrder.split('')
    			.filter(function (k) { return args[0][k] !== undefined; })
    			.map(function (k) { return args[0][k]; });
    	}
    	// otherwise we just return the first argument
    	// (which we suppose is an array of args)
        return args[0];
    };

    var type$n = type$p;

    var last$4 = function (args) {
        if (args.length < 2) { return null; }
        var l = args.length-1;
        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }
        return null;
    };

    var PI$2 = Math.PI;

    var utils = {
    	clip_rgb: clip_rgb$3,
    	limit: limit$2,
    	type: type$p,
    	unpack: unpack$B,
    	last: last$4,
    	PI: PI$2,
    	TWOPI: PI$2*2,
    	PITHIRD: PI$2/3,
    	DEG2RAD: PI$2 / 180,
    	RAD2DEG: 180 / PI$2
    };

    var input$h = {
    	format: {},
    	autodetect: []
    };

    var last$3 = utils.last;
    var clip_rgb$2 = utils.clip_rgb;
    var type$m = utils.type;
    var _input = input$h;

    var Color$D = function Color() {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var me = this;
        if (type$m(args[0]) === 'object' &&
            args[0].constructor &&
            args[0].constructor === this.constructor) {
            // the argument is already a Color instance
            return args[0];
        }

        // last argument could be the mode
        var mode = last$3(args);
        var autodetect = false;

        if (!mode) {
            autodetect = true;
            if (!_input.sorted) {
                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });
                _input.sorted = true;
            }
            // auto-detect format
            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {
                var chk = list[i];

                mode = chk.test.apply(chk, args);
                if (mode) { break; }
            }
        }

        if (_input.format[mode]) {
            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));
            me._rgb = clip_rgb$2(rgb);
        } else {
            throw new Error('unknown format: '+args);
        }

        // add alpha channel
        if (me._rgb.length === 3) { me._rgb.push(1); }
    };

    Color$D.prototype.toString = function toString () {
        if (type$m(this.hex) == 'function') { return this.hex(); }
        return ("[" + (this._rgb.join(',')) + "]");
    };

    var Color_1 = Color$D;

    var chroma$k = function () {
    	var args = [], len = arguments.length;
    	while ( len-- ) args[ len ] = arguments[ len ];

    	return new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));
    };

    chroma$k.Color = Color_1;
    chroma$k.version = '2.4.2';

    var chroma_1 = chroma$k;

    var unpack$A = utils.unpack;
    var max$2 = Math.max;

    var rgb2cmyk$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$A(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        r = r / 255;
        g = g / 255;
        b = b / 255;
        var k = 1 - max$2(r,max$2(g,b));
        var f = k < 1 ? 1 / (1-k) : 0;
        var c = (1-r-k) * f;
        var m = (1-g-k) * f;
        var y = (1-b-k) * f;
        return [c,m,y,k];
    };

    var rgb2cmyk_1 = rgb2cmyk$1;

    var unpack$z = utils.unpack;

    var cmyk2rgb = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$z(args, 'cmyk');
        var c = args[0];
        var m = args[1];
        var y = args[2];
        var k = args[3];
        var alpha = args.length > 4 ? args[4] : 1;
        if (k === 1) { return [0,0,0,alpha]; }
        return [
            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r
            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g
            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b
            alpha
        ];
    };

    var cmyk2rgb_1 = cmyk2rgb;

    var chroma$j = chroma_1;
    var Color$C = Color_1;
    var input$g = input$h;
    var unpack$y = utils.unpack;
    var type$l = utils.type;

    var rgb2cmyk = rgb2cmyk_1;

    Color$C.prototype.cmyk = function() {
        return rgb2cmyk(this._rgb);
    };

    chroma$j.cmyk = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));
    };

    input$g.format.cmyk = cmyk2rgb_1;

    input$g.autodetect.push({
        p: 2,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$y(args, 'cmyk');
            if (type$l(args) === 'array' && args.length === 4) {
                return 'cmyk';
            }
        }
    });

    var unpack$x = utils.unpack;
    var last$2 = utils.last;
    var rnd = function (a) { return Math.round(a*100)/100; };

    /*
     * supported arguments:
     * - hsl2css(h,s,l)
     * - hsl2css(h,s,l,a)
     * - hsl2css([h,s,l], mode)
     * - hsl2css([h,s,l,a], mode)
     * - hsl2css({h,s,l,a}, mode)
     */
    var hsl2css$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var hsla = unpack$x(args, 'hsla');
        var mode = last$2(args) || 'lsa';
        hsla[0] = rnd(hsla[0] || 0);
        hsla[1] = rnd(hsla[1]*100) + '%';
        hsla[2] = rnd(hsla[2]*100) + '%';
        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {
            hsla[3] = hsla.length > 3 ? hsla[3] : 1;
            mode = 'hsla';
        } else {
            hsla.length = 3;
        }
        return (mode + "(" + (hsla.join(',')) + ")");
    };

    var hsl2css_1 = hsl2css$1;

    var unpack$w = utils.unpack;

    /*
     * supported arguments:
     * - rgb2hsl(r,g,b)
     * - rgb2hsl(r,g,b,a)
     * - rgb2hsl([r,g,b])
     * - rgb2hsl([r,g,b,a])
     * - rgb2hsl({r,g,b,a})
     */
    var rgb2hsl$3 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$w(args, 'rgba');
        var r = args[0];
        var g = args[1];
        var b = args[2];

        r /= 255;
        g /= 255;
        b /= 255;

        var min = Math.min(r, g, b);
        var max = Math.max(r, g, b);

        var l = (max + min) / 2;
        var s, h;

        if (max === min){
            s = 0;
            h = Number.NaN;
        } else {
            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);
        }

        if (r == max) { h = (g - b) / (max - min); }
        else if (g == max) { h = 2 + (b - r) / (max - min); }
        else if (b == max) { h = 4 + (r - g) / (max - min); }

        h *= 60;
        if (h < 0) { h += 360; }
        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }
        return [h,s,l];
    };

    var rgb2hsl_1 = rgb2hsl$3;

    var unpack$v = utils.unpack;
    var last$1 = utils.last;
    var hsl2css = hsl2css_1;
    var rgb2hsl$2 = rgb2hsl_1;
    var round$6 = Math.round;

    /*
     * supported arguments:
     * - rgb2css(r,g,b)
     * - rgb2css(r,g,b,a)
     * - rgb2css([r,g,b], mode)
     * - rgb2css([r,g,b,a], mode)
     * - rgb2css({r,g,b,a}, mode)
     */
    var rgb2css$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var rgba = unpack$v(args, 'rgba');
        var mode = last$1(args) || 'rgb';
        if (mode.substr(0,3) == 'hsl') {
            return hsl2css(rgb2hsl$2(rgba), mode);
        }
        rgba[0] = round$6(rgba[0]);
        rgba[1] = round$6(rgba[1]);
        rgba[2] = round$6(rgba[2]);
        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {
            rgba[3] = rgba.length > 3 ? rgba[3] : 1;
            mode = 'rgba';
        }
        return (mode + "(" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + ")");
    };

    var rgb2css_1 = rgb2css$1;

    var unpack$u = utils.unpack;
    var round$5 = Math.round;

    var hsl2rgb$1 = function () {
        var assign;

        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];
        args = unpack$u(args, 'hsl');
        var h = args[0];
        var s = args[1];
        var l = args[2];
        var r,g,b;
        if (s === 0) {
            r = g = b = l*255;
        } else {
            var t3 = [0,0,0];
            var c = [0,0,0];
            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;
            var t1 = 2 * l - t2;
            var h_ = h / 360;
            t3[0] = h_ + 1/3;
            t3[1] = h_;
            t3[2] = h_ - 1/3;
            for (var i=0; i<3; i++) {
                if (t3[i] < 0) { t3[i] += 1; }
                if (t3[i] > 1) { t3[i] -= 1; }
                if (6 * t3[i] < 1)
                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }
                else if (2 * t3[i] < 1)
                    { c[i] = t2; }
                else if (3 * t3[i] < 2)
                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }
                else
                    { c[i] = t1; }
            }
            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);
        }
        if (args.length > 3) {
            // keep alpha channel
            return [r,g,b,args[3]];
        }
        return [r,g,b,1];
    };

    var hsl2rgb_1 = hsl2rgb$1;

    var hsl2rgb = hsl2rgb_1;
    var input$f = input$h;

    var RE_RGB = /^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/;
    var RE_RGBA = /^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/;
    var RE_RGB_PCT = /^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/;
    var RE_RGBA_PCT = /^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/;
    var RE_HSL = /^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/;
    var RE_HSLA = /^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/;

    var round$4 = Math.round;

    var css2rgb$1 = function (css) {
        css = css.toLowerCase().trim();
        var m;

        if (input$f.format.named) {
            try {
                return input$f.format.named(css);
            } catch (e) {
                // eslint-disable-next-line
            }
        }

        // rgb(250,20,0)
        if ((m = css.match(RE_RGB))) {
            var rgb = m.slice(1,4);
            for (var i=0; i<3; i++) {
                rgb[i] = +rgb[i];
            }
            rgb[3] = 1;  // default alpha
            return rgb;
        }

        // rgba(250,20,0,0.4)
        if ((m = css.match(RE_RGBA))) {
            var rgb$1 = m.slice(1,5);
            for (var i$1=0; i$1<4; i$1++) {
                rgb$1[i$1] = +rgb$1[i$1];
            }
            return rgb$1;
        }

        // rgb(100%,0%,0%)
        if ((m = css.match(RE_RGB_PCT))) {
            var rgb$2 = m.slice(1,4);
            for (var i$2=0; i$2<3; i$2++) {
                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);
            }
            rgb$2[3] = 1;  // default alpha
            return rgb$2;
        }

        // rgba(100%,0%,0%,0.4)
        if ((m = css.match(RE_RGBA_PCT))) {
            var rgb$3 = m.slice(1,5);
            for (var i$3=0; i$3<3; i$3++) {
                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);
            }
            rgb$3[3] = +rgb$3[3];
            return rgb$3;
        }

        // hsl(0,100%,50%)
        if ((m = css.match(RE_HSL))) {
            var hsl = m.slice(1,4);
            hsl[1] *= 0.01;
            hsl[2] *= 0.01;
            var rgb$4 = hsl2rgb(hsl);
            rgb$4[3] = 1;
            return rgb$4;
        }

        // hsla(0,100%,50%,0.5)
        if ((m = css.match(RE_HSLA))) {
            var hsl$1 = m.slice(1,4);
            hsl$1[1] *= 0.01;
            hsl$1[2] *= 0.01;
            var rgb$5 = hsl2rgb(hsl$1);
            rgb$5[3] = +m[4];  // default alpha = 1
            return rgb$5;
        }
    };

    css2rgb$1.test = function (s) {
        return RE_RGB.test(s) ||
            RE_RGBA.test(s) ||
            RE_RGB_PCT.test(s) ||
            RE_RGBA_PCT.test(s) ||
            RE_HSL.test(s) ||
            RE_HSLA.test(s);
    };

    var css2rgb_1 = css2rgb$1;

    var chroma$i = chroma_1;
    var Color$B = Color_1;
    var input$e = input$h;
    var type$k = utils.type;

    var rgb2css = rgb2css_1;
    var css2rgb = css2rgb_1;

    Color$B.prototype.css = function(mode) {
        return rgb2css(this._rgb, mode);
    };

    chroma$i.css = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));
    };

    input$e.format.css = css2rgb;

    input$e.autodetect.push({
        p: 5,
        test: function (h) {
            var rest = [], len = arguments.length - 1;
            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];

            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {
                return 'css';
            }
        }
    });

    var Color$A = Color_1;
    var chroma$h = chroma_1;
    var input$d = input$h;
    var unpack$t = utils.unpack;

    input$d.format.gl = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var rgb = unpack$t(args, 'rgba');
        rgb[0] *= 255;
        rgb[1] *= 255;
        rgb[2] *= 255;
        return rgb;
    };

    chroma$h.gl = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));
    };

    Color$A.prototype.gl = function() {
        var rgb = this._rgb;
        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];
    };

    var unpack$s = utils.unpack;

    var rgb2hcg$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$s(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        var min = Math.min(r, g, b);
        var max = Math.max(r, g, b);
        var delta = max - min;
        var c = delta * 100 / 255;
        var _g = min / (255 - delta) * 100;
        var h;
        if (delta === 0) {
            h = Number.NaN;
        } else {
            if (r === max) { h = (g - b) / delta; }
            if (g === max) { h = 2+(b - r) / delta; }
            if (b === max) { h = 4+(r - g) / delta; }
            h *= 60;
            if (h < 0) { h += 360; }
        }
        return [h, c, _g];
    };

    var rgb2hcg_1 = rgb2hcg$1;

    var unpack$r = utils.unpack;
    var floor$3 = Math.floor;

    /*
     * this is basically just HSV with some minor tweaks
     *
     * hue.. [0..360]
     * chroma .. [0..1]
     * grayness .. [0..1]
     */

    var hcg2rgb = function () {
        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;

        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];
        args = unpack$r(args, 'hcg');
        var h = args[0];
        var c = args[1];
        var _g = args[2];
        var r,g,b;
        _g = _g * 255;
        var _c = c * 255;
        if (c === 0) {
            r = g = b = _g;
        } else {
            if (h === 360) { h = 0; }
            if (h > 360) { h -= 360; }
            if (h < 0) { h += 360; }
            h /= 60;
            var i = floor$3(h);
            var f = h - i;
            var p = _g * (1 - c);
            var q = p + _c * (1 - f);
            var t = p + _c * f;
            var v = p + _c;
            switch (i) {
                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break
                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break
                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break
                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break
                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break
                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break
            }
        }
        return [r, g, b, args.length > 3 ? args[3] : 1];
    };

    var hcg2rgb_1 = hcg2rgb;

    var unpack$q = utils.unpack;
    var type$j = utils.type;
    var chroma$g = chroma_1;
    var Color$z = Color_1;
    var input$c = input$h;

    var rgb2hcg = rgb2hcg_1;

    Color$z.prototype.hcg = function() {
        return rgb2hcg(this._rgb);
    };

    chroma$g.hcg = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));
    };

    input$c.format.hcg = hcg2rgb_1;

    input$c.autodetect.push({
        p: 1,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$q(args, 'hcg');
            if (type$j(args) === 'array' && args.length === 3) {
                return 'hcg';
            }
        }
    });

    var unpack$p = utils.unpack;
    var last = utils.last;
    var round$3 = Math.round;

    var rgb2hex$2 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$p(args, 'rgba');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        var a = ref[3];
        var mode = last(args) || 'auto';
        if (a === undefined) { a = 1; }
        if (mode === 'auto') {
            mode = a < 1 ? 'rgba' : 'rgb';
        }
        r = round$3(r);
        g = round$3(g);
        b = round$3(b);
        var u = r << 16 | g << 8 | b;
        var str = "000000" + u.toString(16); //#.toUpperCase();
        str = str.substr(str.length - 6);
        var hxa = '0' + round$3(a * 255).toString(16);
        hxa = hxa.substr(hxa.length - 2);
        switch (mode.toLowerCase()) {
            case 'rgba': return ("#" + str + hxa);
            case 'argb': return ("#" + hxa + str);
            default: return ("#" + str);
        }
    };

    var rgb2hex_1 = rgb2hex$2;

    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;
    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;

    var hex2rgb$1 = function (hex) {
        if (hex.match(RE_HEX)) {
            // remove optional leading #
            if (hex.length === 4 || hex.length === 7) {
                hex = hex.substr(1);
            }
            // expand short-notation to full six-digit
            if (hex.length === 3) {
                hex = hex.split('');
                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];
            }
            var u = parseInt(hex, 16);
            var r = u >> 16;
            var g = u >> 8 & 0xFF;
            var b = u & 0xFF;
            return [r,g,b,1];
        }

        // match rgba hex format, eg #FF000077
        if (hex.match(RE_HEXA)) {
            if (hex.length === 5 || hex.length === 9) {
                // remove optional leading #
                hex = hex.substr(1);
            }
            // expand short-notation to full eight-digit
            if (hex.length === 4) {
                hex = hex.split('');
                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];
            }
            var u$1 = parseInt(hex, 16);
            var r$1 = u$1 >> 24 & 0xFF;
            var g$1 = u$1 >> 16 & 0xFF;
            var b$1 = u$1 >> 8 & 0xFF;
            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;
            return [r$1,g$1,b$1,a];
        }

        // we used to check for css colors here
        // if _input.css? and rgb = _input.css hex
        //     return rgb

        throw new Error(("unknown hex color: " + hex));
    };

    var hex2rgb_1 = hex2rgb$1;

    var chroma$f = chroma_1;
    var Color$y = Color_1;
    var type$i = utils.type;
    var input$b = input$h;

    var rgb2hex$1 = rgb2hex_1;

    Color$y.prototype.hex = function(mode) {
        return rgb2hex$1(this._rgb, mode);
    };

    chroma$f.hex = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));
    };

    input$b.format.hex = hex2rgb_1;
    input$b.autodetect.push({
        p: 4,
        test: function (h) {
            var rest = [], len = arguments.length - 1;
            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];

            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {
                return 'hex';
            }
        }
    });

    var unpack$o = utils.unpack;
    var TWOPI$2 = utils.TWOPI;
    var min$2 = Math.min;
    var sqrt$4 = Math.sqrt;
    var acos = Math.acos;

    var rgb2hsi$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        /*
        borrowed from here:
        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp
        */
        var ref = unpack$o(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        r /= 255;
        g /= 255;
        b /= 255;
        var h;
        var min_ = min$2(r,g,b);
        var i = (r+g+b) / 3;
        var s = i > 0 ? 1 - min_/i : 0;
        if (s === 0) {
            h = NaN;
        } else {
            h = ((r-g)+(r-b)) / 2;
            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));
            h = acos(h);
            if (b > g) {
                h = TWOPI$2 - h;
            }
            h /= TWOPI$2;
        }
        return [h*360,s,i];
    };

    var rgb2hsi_1 = rgb2hsi$1;

    var unpack$n = utils.unpack;
    var limit = utils.limit;
    var TWOPI$1 = utils.TWOPI;
    var PITHIRD = utils.PITHIRD;
    var cos$4 = Math.cos;

    /*
     * hue [0..360]
     * saturation [0..1]
     * intensity [0..1]
     */
    var hsi2rgb = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        /*
        borrowed from here:
        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp
        */
        args = unpack$n(args, 'hsi');
        var h = args[0];
        var s = args[1];
        var i = args[2];
        var r,g,b;

        if (isNaN(h)) { h = 0; }
        if (isNaN(s)) { s = 0; }
        // normalize hue
        if (h > 360) { h -= 360; }
        if (h < 0) { h += 360; }
        h /= 360;
        if (h < 1/3) {
            b = (1-s)/3;
            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;
            g = 1 - (b+r);
        } else if (h < 2/3) {
            h -= 1/3;
            r = (1-s)/3;
            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;
            b = 1 - (r+g);
        } else {
            h -= 2/3;
            g = (1-s)/3;
            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;
            r = 1 - (g+b);
        }
        r = limit(i*r*3);
        g = limit(i*g*3);
        b = limit(i*b*3);
        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];
    };

    var hsi2rgb_1 = hsi2rgb;

    var unpack$m = utils.unpack;
    var type$h = utils.type;
    var chroma$e = chroma_1;
    var Color$x = Color_1;
    var input$a = input$h;

    var rgb2hsi = rgb2hsi_1;

    Color$x.prototype.hsi = function() {
        return rgb2hsi(this._rgb);
    };

    chroma$e.hsi = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));
    };

    input$a.format.hsi = hsi2rgb_1;

    input$a.autodetect.push({
        p: 2,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$m(args, 'hsi');
            if (type$h(args) === 'array' && args.length === 3) {
                return 'hsi';
            }
        }
    });

    var unpack$l = utils.unpack;
    var type$g = utils.type;
    var chroma$d = chroma_1;
    var Color$w = Color_1;
    var input$9 = input$h;

    var rgb2hsl$1 = rgb2hsl_1;

    Color$w.prototype.hsl = function() {
        return rgb2hsl$1(this._rgb);
    };

    chroma$d.hsl = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));
    };

    input$9.format.hsl = hsl2rgb_1;

    input$9.autodetect.push({
        p: 2,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$l(args, 'hsl');
            if (type$g(args) === 'array' && args.length === 3) {
                return 'hsl';
            }
        }
    });

    var unpack$k = utils.unpack;
    var min$1 = Math.min;
    var max$1 = Math.max;

    /*
     * supported arguments:
     * - rgb2hsv(r,g,b)
     * - rgb2hsv([r,g,b])
     * - rgb2hsv({r,g,b})
     */
    var rgb2hsl = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$k(args, 'rgb');
        var r = args[0];
        var g = args[1];
        var b = args[2];
        var min_ = min$1(r, g, b);
        var max_ = max$1(r, g, b);
        var delta = max_ - min_;
        var h,s,v;
        v = max_ / 255.0;
        if (max_ === 0) {
            h = Number.NaN;
            s = 0;
        } else {
            s = delta / max_;
            if (r === max_) { h = (g - b) / delta; }
            if (g === max_) { h = 2+(b - r) / delta; }
            if (b === max_) { h = 4+(r - g) / delta; }
            h *= 60;
            if (h < 0) { h += 360; }
        }
        return [h, s, v]
    };

    var rgb2hsv$1 = rgb2hsl;

    var unpack$j = utils.unpack;
    var floor$2 = Math.floor;

    var hsv2rgb = function () {
        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;

        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];
        args = unpack$j(args, 'hsv');
        var h = args[0];
        var s = args[1];
        var v = args[2];
        var r,g,b;
        v *= 255;
        if (s === 0) {
            r = g = b = v;
        } else {
            if (h === 360) { h = 0; }
            if (h > 360) { h -= 360; }
            if (h < 0) { h += 360; }
            h /= 60;

            var i = floor$2(h);
            var f = h - i;
            var p = v * (1 - s);
            var q = v * (1 - s * f);
            var t = v * (1 - s * (1 - f));

            switch (i) {
                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break
                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break
                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break
                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break
                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break
                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break
            }
        }
        return [r,g,b,args.length > 3?args[3]:1];
    };

    var hsv2rgb_1 = hsv2rgb;

    var unpack$i = utils.unpack;
    var type$f = utils.type;
    var chroma$c = chroma_1;
    var Color$v = Color_1;
    var input$8 = input$h;

    var rgb2hsv = rgb2hsv$1;

    Color$v.prototype.hsv = function() {
        return rgb2hsv(this._rgb);
    };

    chroma$c.hsv = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));
    };

    input$8.format.hsv = hsv2rgb_1;

    input$8.autodetect.push({
        p: 2,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$i(args, 'hsv');
            if (type$f(args) === 'array' && args.length === 3) {
                return 'hsv';
            }
        }
    });

    var labConstants = {
        // Corresponds roughly to RGB brighter/darker
        Kn: 18,

        // D65 standard referent
        Xn: 0.950470,
        Yn: 1,
        Zn: 1.088830,

        t0: 0.137931034,  // 4 / 29
        t1: 0.206896552,  // 6 / 29
        t2: 0.12841855,   // 3 * t1 * t1
        t3: 0.008856452,  // t1 * t1 * t1
    };

    var LAB_CONSTANTS$3 = labConstants;
    var unpack$h = utils.unpack;
    var pow$a = Math.pow;

    var rgb2lab$2 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$h(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        var ref$1 = rgb2xyz(r,g,b);
        var x = ref$1[0];
        var y = ref$1[1];
        var z = ref$1[2];
        var l = 116 * y - 16;
        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];
    };

    var rgb_xyz = function (r) {
        if ((r /= 255) <= 0.04045) { return r / 12.92; }
        return pow$a((r + 0.055) / 1.055, 2.4);
    };

    var xyz_lab = function (t) {
        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }
        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;
    };

    var rgb2xyz = function (r,g,b) {
        r = rgb_xyz(r);
        g = rgb_xyz(g);
        b = rgb_xyz(b);
        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);
        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);
        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);
        return [x,y,z];
    };

    var rgb2lab_1 = rgb2lab$2;

    var LAB_CONSTANTS$2 = labConstants;
    var unpack$g = utils.unpack;
    var pow$9 = Math.pow;

    /*
     * L* [0..100]
     * a [-100..100]
     * b [-100..100]
     */
    var lab2rgb$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$g(args, 'lab');
        var l = args[0];
        var a = args[1];
        var b = args[2];
        var x,y,z, r,g,b_;

        y = (l + 16) / 116;
        x = isNaN(a) ? y : y + a / 500;
        z = isNaN(b) ? y : y - b / 200;

        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);
        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);
        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);

        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB
        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);
        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);

        return [r,g,b_,args.length > 3 ? args[3] : 1];
    };

    var xyz_rgb = function (r) {
        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)
    };

    var lab_xyz = function (t) {
        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)
    };

    var lab2rgb_1 = lab2rgb$1;

    var unpack$f = utils.unpack;
    var type$e = utils.type;
    var chroma$b = chroma_1;
    var Color$u = Color_1;
    var input$7 = input$h;

    var rgb2lab$1 = rgb2lab_1;

    Color$u.prototype.lab = function() {
        return rgb2lab$1(this._rgb);
    };

    chroma$b.lab = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));
    };

    input$7.format.lab = lab2rgb_1;

    input$7.autodetect.push({
        p: 2,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$f(args, 'lab');
            if (type$e(args) === 'array' && args.length === 3) {
                return 'lab';
            }
        }
    });

    var unpack$e = utils.unpack;
    var RAD2DEG = utils.RAD2DEG;
    var sqrt$3 = Math.sqrt;
    var atan2$2 = Math.atan2;
    var round$2 = Math.round;

    var lab2lch$2 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$e(args, 'lab');
        var l = ref[0];
        var a = ref[1];
        var b = ref[2];
        var c = sqrt$3(a * a + b * b);
        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;
        if (round$2(c*10000) === 0) { h = Number.NaN; }
        return [l, c, h];
    };

    var lab2lch_1 = lab2lch$2;

    var unpack$d = utils.unpack;
    var rgb2lab = rgb2lab_1;
    var lab2lch$1 = lab2lch_1;

    var rgb2lch$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$d(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        var ref$1 = rgb2lab(r,g,b);
        var l = ref$1[0];
        var a = ref$1[1];
        var b_ = ref$1[2];
        return lab2lch$1(l,a,b_);
    };

    var rgb2lch_1 = rgb2lch$1;

    var unpack$c = utils.unpack;
    var DEG2RAD = utils.DEG2RAD;
    var sin$3 = Math.sin;
    var cos$3 = Math.cos;

    var lch2lab$2 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        /*
        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.
        These formulas were invented by David Dalrymple to obtain maximum contrast without going
        out of gamut if the parameters are in the range 0-1.

        A saturation multiplier was added by Gregor Aisch
        */
        var ref = unpack$c(args, 'lch');
        var l = ref[0];
        var c = ref[1];
        var h = ref[2];
        if (isNaN(h)) { h = 0; }
        h = h * DEG2RAD;
        return [l, cos$3(h) * c, sin$3(h) * c]
    };

    var lch2lab_1 = lch2lab$2;

    var unpack$b = utils.unpack;
    var lch2lab$1 = lch2lab_1;
    var lab2rgb = lab2rgb_1;

    var lch2rgb$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$b(args, 'lch');
        var l = args[0];
        var c = args[1];
        var h = args[2];
        var ref = lch2lab$1 (l,c,h);
        var L = ref[0];
        var a = ref[1];
        var b_ = ref[2];
        var ref$1 = lab2rgb (L,a,b_);
        var r = ref$1[0];
        var g = ref$1[1];
        var b = ref$1[2];
        return [r, g, b, args.length > 3 ? args[3] : 1];
    };

    var lch2rgb_1 = lch2rgb$1;

    var unpack$a = utils.unpack;
    var lch2rgb = lch2rgb_1;

    var hcl2rgb = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var hcl = unpack$a(args, 'hcl').reverse();
        return lch2rgb.apply(void 0, hcl);
    };

    var hcl2rgb_1 = hcl2rgb;

    var unpack$9 = utils.unpack;
    var type$d = utils.type;
    var chroma$a = chroma_1;
    var Color$t = Color_1;
    var input$6 = input$h;

    var rgb2lch = rgb2lch_1;

    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };
    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };

    chroma$a.lch = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));
    };
    chroma$a.hcl = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));
    };

    input$6.format.lch = lch2rgb_1;
    input$6.format.hcl = hcl2rgb_1;

    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({
        p: 2,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$9(args, m);
            if (type$d(args) === 'array' && args.length === 3) {
                return m;
            }
        }
    }); });

    /**
    	X11 color names

    	http://www.w3.org/TR/css3-color/#svg-color
    */

    var w3cx11$1 = {
        aliceblue: '#f0f8ff',
        antiquewhite: '#faebd7',
        aqua: '#00ffff',
        aquamarine: '#7fffd4',
        azure: '#f0ffff',
        beige: '#f5f5dc',
        bisque: '#ffe4c4',
        black: '#000000',
        blanchedalmond: '#ffebcd',
        blue: '#0000ff',
        blueviolet: '#8a2be2',
        brown: '#a52a2a',
        burlywood: '#deb887',
        cadetblue: '#5f9ea0',
        chartreuse: '#7fff00',
        chocolate: '#d2691e',
        coral: '#ff7f50',
        cornflower: '#6495ed',
        cornflowerblue: '#6495ed',
        cornsilk: '#fff8dc',
        crimson: '#dc143c',
        cyan: '#00ffff',
        darkblue: '#00008b',
        darkcyan: '#008b8b',
        darkgoldenrod: '#b8860b',
        darkgray: '#a9a9a9',
        darkgreen: '#006400',
        darkgrey: '#a9a9a9',
        darkkhaki: '#bdb76b',
        darkmagenta: '#8b008b',
        darkolivegreen: '#556b2f',
        darkorange: '#ff8c00',
        darkorchid: '#9932cc',
        darkred: '#8b0000',
        darksalmon: '#e9967a',
        darkseagreen: '#8fbc8f',
        darkslateblue: '#483d8b',
        darkslategray: '#2f4f4f',
        darkslategrey: '#2f4f4f',
        darkturquoise: '#00ced1',
        darkviolet: '#9400d3',
        deeppink: '#ff1493',
        deepskyblue: '#00bfff',
        dimgray: '#696969',
        dimgrey: '#696969',
        dodgerblue: '#1e90ff',
        firebrick: '#b22222',
        floralwhite: '#fffaf0',
        forestgreen: '#228b22',
        fuchsia: '#ff00ff',
        gainsboro: '#dcdcdc',
        ghostwhite: '#f8f8ff',
        gold: '#ffd700',
        goldenrod: '#daa520',
        gray: '#808080',
        green: '#008000',
        greenyellow: '#adff2f',
        grey: '#808080',
        honeydew: '#f0fff0',
        hotpink: '#ff69b4',
        indianred: '#cd5c5c',
        indigo: '#4b0082',
        ivory: '#fffff0',
        khaki: '#f0e68c',
        laserlemon: '#ffff54',
        lavender: '#e6e6fa',
        lavenderblush: '#fff0f5',
        lawngreen: '#7cfc00',
        lemonchiffon: '#fffacd',
        lightblue: '#add8e6',
        lightcoral: '#f08080',
        lightcyan: '#e0ffff',
        lightgoldenrod: '#fafad2',
        lightgoldenrodyellow: '#fafad2',
        lightgray: '#d3d3d3',
        lightgreen: '#90ee90',
        lightgrey: '#d3d3d3',
        lightpink: '#ffb6c1',
        lightsalmon: '#ffa07a',
        lightseagreen: '#20b2aa',
        lightskyblue: '#87cefa',
        lightslategray: '#778899',
        lightslategrey: '#778899',
        lightsteelblue: '#b0c4de',
        lightyellow: '#ffffe0',
        lime: '#00ff00',
        limegreen: '#32cd32',
        linen: '#faf0e6',
        magenta: '#ff00ff',
        maroon: '#800000',
        maroon2: '#7f0000',
        maroon3: '#b03060',
        mediumaquamarine: '#66cdaa',
        mediumblue: '#0000cd',
        mediumorchid: '#ba55d3',
        mediumpurple: '#9370db',
        mediumseagreen: '#3cb371',
        mediumslateblue: '#7b68ee',
        mediumspringgreen: '#00fa9a',
        mediumturquoise: '#48d1cc',
        mediumvioletred: '#c71585',
        midnightblue: '#191970',
        mintcream: '#f5fffa',
        mistyrose: '#ffe4e1',
        moccasin: '#ffe4b5',
        navajowhite: '#ffdead',
        navy: '#000080',
        oldlace: '#fdf5e6',
        olive: '#808000',
        olivedrab: '#6b8e23',
        orange: '#ffa500',
        orangered: '#ff4500',
        orchid: '#da70d6',
        palegoldenrod: '#eee8aa',
        palegreen: '#98fb98',
        paleturquoise: '#afeeee',
        palevioletred: '#db7093',
        papayawhip: '#ffefd5',
        peachpuff: '#ffdab9',
        peru: '#cd853f',
        pink: '#ffc0cb',
        plum: '#dda0dd',
        powderblue: '#b0e0e6',
        purple: '#800080',
        purple2: '#7f007f',
        purple3: '#a020f0',
        rebeccapurple: '#663399',
        red: '#ff0000',
        rosybrown: '#bc8f8f',
        royalblue: '#4169e1',
        saddlebrown: '#8b4513',
        salmon: '#fa8072',
        sandybrown: '#f4a460',
        seagreen: '#2e8b57',
        seashell: '#fff5ee',
        sienna: '#a0522d',
        silver: '#c0c0c0',
        skyblue: '#87ceeb',
        slateblue: '#6a5acd',
        slategray: '#708090',
        slategrey: '#708090',
        snow: '#fffafa',
        springgreen: '#00ff7f',
        steelblue: '#4682b4',
        tan: '#d2b48c',
        teal: '#008080',
        thistle: '#d8bfd8',
        tomato: '#ff6347',
        turquoise: '#40e0d0',
        violet: '#ee82ee',
        wheat: '#f5deb3',
        white: '#ffffff',
        whitesmoke: '#f5f5f5',
        yellow: '#ffff00',
        yellowgreen: '#9acd32'
    };

    var w3cx11_1 = w3cx11$1;

    var Color$s = Color_1;
    var input$5 = input$h;
    var type$c = utils.type;

    var w3cx11 = w3cx11_1;
    var hex2rgb = hex2rgb_1;
    var rgb2hex = rgb2hex_1;

    Color$s.prototype.name = function() {
        var hex = rgb2hex(this._rgb, 'rgb');
        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {
            var n = list[i];

            if (w3cx11[n] === hex) { return n.toLowerCase(); }
        }
        return hex;
    };

    input$5.format.named = function (name) {
        name = name.toLowerCase();
        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }
        throw new Error('unknown color name: '+name);
    };

    input$5.autodetect.push({
        p: 5,
        test: function (h) {
            var rest = [], len = arguments.length - 1;
            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];

            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {
                return 'named';
            }
        }
    });

    var unpack$8 = utils.unpack;

    var rgb2num$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$8(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        return (r << 16) + (g << 8) + b;
    };

    var rgb2num_1 = rgb2num$1;

    var type$b = utils.type;

    var num2rgb = function (num) {
        if (type$b(num) == "number" && num >= 0 && num <= 0xFFFFFF) {
            var r = num >> 16;
            var g = (num >> 8) & 0xFF;
            var b = num & 0xFF;
            return [r,g,b,1];
        }
        throw new Error("unknown num color: "+num);
    };

    var num2rgb_1 = num2rgb;

    var chroma$9 = chroma_1;
    var Color$r = Color_1;
    var input$4 = input$h;
    var type$a = utils.type;

    var rgb2num = rgb2num_1;

    Color$r.prototype.num = function() {
        return rgb2num(this._rgb);
    };

    chroma$9.num = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));
    };

    input$4.format.num = num2rgb_1;

    input$4.autodetect.push({
        p: 5,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {
                return 'num';
            }
        }
    });

    var chroma$8 = chroma_1;
    var Color$q = Color_1;
    var input$3 = input$h;
    var unpack$7 = utils.unpack;
    var type$9 = utils.type;
    var round$1 = Math.round;

    Color$q.prototype.rgb = function(rnd) {
        if ( rnd === void 0 ) rnd=true;

        if (rnd === false) { return this._rgb.slice(0,3); }
        return this._rgb.slice(0,3).map(round$1);
    };

    Color$q.prototype.rgba = function(rnd) {
        if ( rnd === void 0 ) rnd=true;

        return this._rgb.slice(0,4).map(function (v,i) {
            return i<3 ? (rnd === false ? v : round$1(v)) : v;
        });
    };

    chroma$8.rgb = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));
    };

    input$3.format.rgb = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var rgba = unpack$7(args, 'rgba');
        if (rgba[3] === undefined) { rgba[3] = 1; }
        return rgba;
    };

    input$3.autodetect.push({
        p: 3,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$7(args, 'rgba');
            if (type$9(args) === 'array' && (args.length === 3 ||
                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {
                return 'rgb';
            }
        }
    });

    /*
     * Based on implementation by Neil Bartlett
     * https://github.com/neilbartlett/color-temperature
     */

    var log$1 = Math.log;

    var temperature2rgb$1 = function (kelvin) {
        var temp = kelvin / 100;
        var r,g,b;
        if (temp < 66) {
            r = 255;
            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);
            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);
        } else {
            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);
            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);
            b = 255;
        }
        return [r,g,b,1];
    };

    var temperature2rgb_1 = temperature2rgb$1;

    /*
     * Based on implementation by Neil Bartlett
     * https://github.com/neilbartlett/color-temperature
     **/

    var temperature2rgb = temperature2rgb_1;
    var unpack$6 = utils.unpack;
    var round = Math.round;

    var rgb2temperature$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var rgb = unpack$6(args, 'rgb');
        var r = rgb[0], b = rgb[2];
        var minTemp = 1000;
        var maxTemp = 40000;
        var eps = 0.4;
        var temp;
        while (maxTemp - minTemp > eps) {
            temp = (maxTemp + minTemp) * 0.5;
            var rgb$1 = temperature2rgb(temp);
            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {
                maxTemp = temp;
            } else {
                minTemp = temp;
            }
        }
        return round(temp);
    };

    var rgb2temperature_1 = rgb2temperature$1;

    var chroma$7 = chroma_1;
    var Color$p = Color_1;
    var input$2 = input$h;

    var rgb2temperature = rgb2temperature_1;

    Color$p.prototype.temp =
    Color$p.prototype.kelvin =
    Color$p.prototype.temperature = function() {
        return rgb2temperature(this._rgb);
    };

    chroma$7.temp =
    chroma$7.kelvin =
    chroma$7.temperature = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));
    };

    input$2.format.temp =
    input$2.format.kelvin =
    input$2.format.temperature = temperature2rgb_1;

    var unpack$5 = utils.unpack;
    var cbrt = Math.cbrt;
    var pow$8 = Math.pow;
    var sign$1 = Math.sign;

    var rgb2oklab$2 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        // OKLab color space implementation taken from
        // https://bottosson.github.io/posts/oklab/
        var ref = unpack$5(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];
        var lr = ref$1[0];
        var lg = ref$1[1];
        var lb = ref$1[2];
        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);
        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);
        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);

        return [
            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,
            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,
            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s
        ];
    };

    var rgb2oklab_1 = rgb2oklab$2;

    function rgb2lrgb(c) {
        var abs = Math.abs(c);
        if (abs < 0.04045) {
            return c / 12.92;
        }
        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);
    }

    var unpack$4 = utils.unpack;
    var pow$7 = Math.pow;
    var sign = Math.sign;

    /*
     * L* [0..100]
     * a [-100..100]
     * b [-100..100]
     */
    var oklab2rgb$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$4(args, 'lab');
        var L = args[0];
        var a = args[1];
        var b = args[2];

        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);
        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);
        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);

        return [
            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),
            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),
            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),
            args.length > 3 ? args[3] : 1
        ];
    };

    var oklab2rgb_1 = oklab2rgb$1;

    function lrgb2rgb(c) {
        var abs = Math.abs(c);
        if (abs > 0.0031308) {
            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);
        }
        return c * 12.92;
    }

    var unpack$3 = utils.unpack;
    var type$8 = utils.type;
    var chroma$6 = chroma_1;
    var Color$o = Color_1;
    var input$1 = input$h;

    var rgb2oklab$1 = rgb2oklab_1;

    Color$o.prototype.oklab = function () {
        return rgb2oklab$1(this._rgb);
    };

    chroma$6.oklab = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));
    };

    input$1.format.oklab = oklab2rgb_1;

    input$1.autodetect.push({
        p: 3,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack$3(args, 'oklab');
            if (type$8(args) === 'array' && args.length === 3) {
                return 'oklab';
            }
        }
    });

    var unpack$2 = utils.unpack;
    var rgb2oklab = rgb2oklab_1;
    var lab2lch = lab2lch_1;

    var rgb2oklch$1 = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        var ref = unpack$2(args, 'rgb');
        var r = ref[0];
        var g = ref[1];
        var b = ref[2];
        var ref$1 = rgb2oklab(r, g, b);
        var l = ref$1[0];
        var a = ref$1[1];
        var b_ = ref$1[2];
        return lab2lch(l, a, b_);
    };

    var rgb2oklch_1 = rgb2oklch$1;

    var unpack$1 = utils.unpack;
    var lch2lab = lch2lab_1;
    var oklab2rgb = oklab2rgb_1;

    var oklch2rgb = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        args = unpack$1(args, 'lch');
        var l = args[0];
        var c = args[1];
        var h = args[2];
        var ref = lch2lab(l, c, h);
        var L = ref[0];
        var a = ref[1];
        var b_ = ref[2];
        var ref$1 = oklab2rgb(L, a, b_);
        var r = ref$1[0];
        var g = ref$1[1];
        var b = ref$1[2];
        return [r, g, b, args.length > 3 ? args[3] : 1];
    };

    var oklch2rgb_1 = oklch2rgb;

    var unpack = utils.unpack;
    var type$7 = utils.type;
    var chroma$5 = chroma_1;
    var Color$n = Color_1;
    var input = input$h;

    var rgb2oklch = rgb2oklch_1;

    Color$n.prototype.oklch = function () {
        return rgb2oklch(this._rgb);
    };

    chroma$5.oklch = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));
    };

    input.format.oklch = oklch2rgb_1;

    input.autodetect.push({
        p: 3,
        test: function () {
            var args = [], len = arguments.length;
            while ( len-- ) args[ len ] = arguments[ len ];

            args = unpack(args, 'oklch');
            if (type$7(args) === 'array' && args.length === 3) {
                return 'oklch';
            }
        }
    });

    var Color$m = Color_1;
    var type$6 = utils.type;

    Color$m.prototype.alpha = function(a, mutate) {
        if ( mutate === void 0 ) mutate=false;

        if (a !== undefined && type$6(a) === 'number') {
            if (mutate) {
                this._rgb[3] = a;
                return this;
            }
            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');
        }
        return this._rgb[3];
    };

    var Color$l = Color_1;

    Color$l.prototype.clipped = function() {
        return this._rgb._clipped || false;
    };

    var Color$k = Color_1;
    var LAB_CONSTANTS$1 = labConstants;

    Color$k.prototype.darken = function(amount) {
    	if ( amount === void 0 ) amount=1;

    	var me = this;
    	var lab = me.lab();
    	lab[0] -= LAB_CONSTANTS$1.Kn * amount;
    	return new Color$k(lab, 'lab').alpha(me.alpha(), true);
    };

    Color$k.prototype.brighten = function(amount) {
    	if ( amount === void 0 ) amount=1;

    	return this.darken(-amount);
    };

    Color$k.prototype.darker = Color$k.prototype.darken;
    Color$k.prototype.brighter = Color$k.prototype.brighten;

    var Color$j = Color_1;

    Color$j.prototype.get = function (mc) {
        var ref = mc.split('.');
        var mode = ref[0];
        var channel = ref[1];
        var src = this[mode]();
        if (channel) {
            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);
            if (i > -1) { return src[i]; }
            throw new Error(("unknown channel " + channel + " in mode " + mode));
        } else {
            return src;
        }
    };

    var Color$i = Color_1;
    var type$5 = utils.type;
    var pow$6 = Math.pow;

    var EPS = 1e-7;
    var MAX_ITER = 20;

    Color$i.prototype.luminance = function(lum) {
        if (lum !== undefined && type$5(lum) === 'number') {
            if (lum === 0) {
                // return pure black
                return new Color$i([0,0,0,this._rgb[3]], 'rgb');
            }
            if (lum === 1) {
                // return pure white
                return new Color$i([255,255,255,this._rgb[3]], 'rgb');
            }
            // compute new color using...
            var cur_lum = this.luminance();
            var mode = 'rgb';
            var max_iter = MAX_ITER;

            var test = function (low, high) {
                var mid = low.interpolate(high, 0.5, mode);
                var lm = mid.luminance();
                if (Math.abs(lum - lm) < EPS || !max_iter--) {
                    // close enough
                    return mid;
                }
                return lm > lum ? test(low, mid) : test(mid, high);
            };

            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();
            return new Color$i(rgb.concat( [this._rgb[3]]));
        }
        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));
    };


    var rgb2luminance = function (r,g,b) {
        // relative luminance
        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        r = luminance_x(r);
        g = luminance_x(g);
        b = luminance_x(b);
        return 0.2126 * r + 0.7152 * g + 0.0722 * b;
    };

    var luminance_x = function (x) {
        x /= 255;
        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);
    };

    var interpolator$1 = {};

    var Color$h = Color_1;
    var type$4 = utils.type;
    var interpolator = interpolator$1;

    var mix$1 = function (col1, col2, f) {
        if ( f === void 0 ) f=0.5;
        var rest = [], len = arguments.length - 3;
        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];

        var mode = rest[0] || 'lrgb';
        if (!interpolator[mode] && !rest.length) {
            // fall back to the first supported mode
            mode = Object.keys(interpolator)[0];
        }
        if (!interpolator[mode]) {
            throw new Error(("interpolation mode " + mode + " is not defined"));
        }
        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }
        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }
        return interpolator[mode](col1, col2, f)
            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));
    };

    var Color$g = Color_1;
    var mix = mix$1;

    Color$g.prototype.mix =
    Color$g.prototype.interpolate = function(col2, f) {
    	if ( f === void 0 ) f=0.5;
    	var rest = [], len = arguments.length - 2;
    	while ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];

    	return mix.apply(void 0, [ this, col2, f ].concat( rest ));
    };

    var Color$f = Color_1;

    Color$f.prototype.premultiply = function(mutate) {
    	if ( mutate === void 0 ) mutate=false;

    	var rgb = this._rgb;
    	var a = rgb[3];
    	if (mutate) {
    		this._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];
    		return this;
    	} else {
    		return new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');
    	}
    };

    var Color$e = Color_1;
    var LAB_CONSTANTS = labConstants;

    Color$e.prototype.saturate = function(amount) {
    	if ( amount === void 0 ) amount=1;

    	var me = this;
    	var lch = me.lch();
    	lch[1] += LAB_CONSTANTS.Kn * amount;
    	if (lch[1] < 0) { lch[1] = 0; }
    	return new Color$e(lch, 'lch').alpha(me.alpha(), true);
    };

    Color$e.prototype.desaturate = function(amount) {
    	if ( amount === void 0 ) amount=1;

    	return this.saturate(-amount);
    };

    var Color$d = Color_1;
    var type$3 = utils.type;

    Color$d.prototype.set = function (mc, value, mutate) {
        if ( mutate === void 0 ) mutate = false;

        var ref = mc.split('.');
        var mode = ref[0];
        var channel = ref[1];
        var src = this[mode]();
        if (channel) {
            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);
            if (i > -1) {
                if (type$3(value) == 'string') {
                    switch (value.charAt(0)) {
                        case '+':
                            src[i] += +value;
                            break;
                        case '-':
                            src[i] += +value;
                            break;
                        case '*':
                            src[i] *= +value.substr(1);
                            break;
                        case '/':
                            src[i] /= +value.substr(1);
                            break;
                        default:
                            src[i] = +value;
                    }
                } else if (type$3(value) === 'number') {
                    src[i] = value;
                } else {
                    throw new Error("unsupported value for Color.set");
                }
                var out = new Color$d(src, mode);
                if (mutate) {
                    this._rgb = out._rgb;
                    return this;
                }
                return out;
            }
            throw new Error(("unknown channel " + channel + " in mode " + mode));
        } else {
            return src;
        }
    };

    var Color$c = Color_1;

    var rgb = function (col1, col2, f) {
        var xyz0 = col1._rgb;
        var xyz1 = col2._rgb;
        return new Color$c(
            xyz0[0] + f * (xyz1[0]-xyz0[0]),
            xyz0[1] + f * (xyz1[1]-xyz0[1]),
            xyz0[2] + f * (xyz1[2]-xyz0[2]),
            'rgb'
        )
    };

    // register interpolator
    interpolator$1.rgb = rgb;

    var Color$b = Color_1;
    var sqrt$2 = Math.sqrt;
    var pow$5 = Math.pow;

    var lrgb = function (col1, col2, f) {
        var ref = col1._rgb;
        var x1 = ref[0];
        var y1 = ref[1];
        var z1 = ref[2];
        var ref$1 = col2._rgb;
        var x2 = ref$1[0];
        var y2 = ref$1[1];
        var z2 = ref$1[2];
        return new Color$b(
            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),
            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),
            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),
            'rgb'
        )
    };

    // register interpolator
    interpolator$1.lrgb = lrgb;

    var Color$a = Color_1;

    var lab = function (col1, col2, f) {
        var xyz0 = col1.lab();
        var xyz1 = col2.lab();
        return new Color$a(
            xyz0[0] + f * (xyz1[0]-xyz0[0]),
            xyz0[1] + f * (xyz1[1]-xyz0[1]),
            xyz0[2] + f * (xyz1[2]-xyz0[2]),
            'lab'
        )
    };

    // register interpolator
    interpolator$1.lab = lab;

    var Color$9 = Color_1;

    var _hsx = function (col1, col2, f, m) {
        var assign, assign$1;

        var xyz0, xyz1;
        if (m === 'hsl') {
            xyz0 = col1.hsl();
            xyz1 = col2.hsl();
        } else if (m === 'hsv') {
            xyz0 = col1.hsv();
            xyz1 = col2.hsv();
        } else if (m === 'hcg') {
            xyz0 = col1.hcg();
            xyz1 = col2.hcg();
        } else if (m === 'hsi') {
            xyz0 = col1.hsi();
            xyz1 = col2.hsi();
        } else if (m === 'lch' || m === 'hcl') {
            m = 'hcl';
            xyz0 = col1.hcl();
            xyz1 = col2.hcl();
        } else if (m === 'oklch') {
            xyz0 = col1.oklch().reverse();
            xyz1 = col2.oklch().reverse();
        }

        var hue0, hue1, sat0, sat1, lbv0, lbv1;
        if (m.substr(0, 1) === 'h' || m === 'oklch') {
            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);
            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);
        }

        var sat, hue, lbv, dh;

        if (!isNaN(hue0) && !isNaN(hue1)) {
            // both colors have hue
            if (hue1 > hue0 && hue1 - hue0 > 180) {
                dh = hue1 - (hue0 + 360);
            } else if (hue1 < hue0 && hue0 - hue1 > 180) {
                dh = hue1 + 360 - hue0;
            } else {
                dh = hue1 - hue0;
            }
            hue = hue0 + f * dh;
        } else if (!isNaN(hue0)) {
            hue = hue0;
            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }
        } else if (!isNaN(hue1)) {
            hue = hue1;
            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }
        } else {
            hue = Number.NaN;
        }

        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }
        lbv = lbv0 + f * (lbv1 - lbv0);
        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);
    };

    var interpolate_hsx$5 = _hsx;

    var lch = function (col1, col2, f) {
    	return interpolate_hsx$5(col1, col2, f, 'lch');
    };

    // register interpolator
    interpolator$1.lch = lch;
    interpolator$1.hcl = lch;

    var Color$8 = Color_1;

    var num = function (col1, col2, f) {
        var c1 = col1.num();
        var c2 = col2.num();
        return new Color$8(c1 + f * (c2-c1), 'num')
    };

    // register interpolator
    interpolator$1.num = num;

    var interpolate_hsx$4 = _hsx;

    var hcg = function (col1, col2, f) {
    	return interpolate_hsx$4(col1, col2, f, 'hcg');
    };

    // register interpolator
    interpolator$1.hcg = hcg;

    var interpolate_hsx$3 = _hsx;

    var hsi = function (col1, col2, f) {
    	return interpolate_hsx$3(col1, col2, f, 'hsi');
    };

    // register interpolator
    interpolator$1.hsi = hsi;

    var interpolate_hsx$2 = _hsx;

    var hsl = function (col1, col2, f) {
    	return interpolate_hsx$2(col1, col2, f, 'hsl');
    };

    // register interpolator
    interpolator$1.hsl = hsl;

    var interpolate_hsx$1 = _hsx;

    var hsv = function (col1, col2, f) {
    	return interpolate_hsx$1(col1, col2, f, 'hsv');
    };

    // register interpolator
    interpolator$1.hsv = hsv;

    var Color$7 = Color_1;

    var oklab = function (col1, col2, f) {
        var xyz0 = col1.oklab();
        var xyz1 = col2.oklab();
        return new Color$7(
            xyz0[0] + f * (xyz1[0] - xyz0[0]),
            xyz0[1] + f * (xyz1[1] - xyz0[1]),
            xyz0[2] + f * (xyz1[2] - xyz0[2]),
            'oklab'
        );
    };

    // register interpolator
    interpolator$1.oklab = oklab;

    var interpolate_hsx = _hsx;

    var oklch = function (col1, col2, f) {
        return interpolate_hsx(col1, col2, f, 'oklch');
    };

    // register interpolator
    interpolator$1.oklch = oklch;

    var Color$6 = Color_1;
    var clip_rgb$1 = utils.clip_rgb;
    var pow$4 = Math.pow;
    var sqrt$1 = Math.sqrt;
    var PI$1 = Math.PI;
    var cos$2 = Math.cos;
    var sin$2 = Math.sin;
    var atan2$1 = Math.atan2;

    var average = function (colors, mode, weights) {
        if ( mode === void 0 ) mode='lrgb';
        if ( weights === void 0 ) weights=null;

        var l = colors.length;
        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }
        // normalize weights
        var k = l / weights.reduce(function(a, b) { return a + b; });
        weights.forEach(function (w,i) { weights[i] *= k; });
        // convert colors to Color objects
        colors = colors.map(function (c) { return new Color$6(c); });
        if (mode === 'lrgb') {
            return _average_lrgb(colors, weights)
        }
        var first = colors.shift();
        var xyz = first.get(mode);
        var cnt = [];
        var dx = 0;
        var dy = 0;
        // initial color
        for (var i=0; i<xyz.length; i++) {
            xyz[i] = (xyz[i] || 0) * weights[0];
            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);
            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {
                var A = xyz[i] / 180 * PI$1;
                dx += cos$2(A) * weights[0];
                dy += sin$2(A) * weights[0];
            }
        }

        var alpha = first.alpha() * weights[0];
        colors.forEach(function (c,ci) {
            var xyz2 = c.get(mode);
            alpha += c.alpha() * weights[ci+1];
            for (var i=0; i<xyz.length; i++) {
                if (!isNaN(xyz2[i])) {
                    cnt[i] += weights[ci+1];
                    if (mode.charAt(i) === 'h') {
                        var A = xyz2[i] / 180 * PI$1;
                        dx += cos$2(A) * weights[ci+1];
                        dy += sin$2(A) * weights[ci+1];
                    } else {
                        xyz[i] += xyz2[i] * weights[ci+1];
                    }
                }
            }
        });

        for (var i$1=0; i$1<xyz.length; i$1++) {
            if (mode.charAt(i$1) === 'h') {
                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;
                while (A$1 < 0) { A$1 += 360; }
                while (A$1 >= 360) { A$1 -= 360; }
                xyz[i$1] = A$1;
            } else {
                xyz[i$1] = xyz[i$1]/cnt[i$1];
            }
        }
        alpha /= l;
        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);
    };


    var _average_lrgb = function (colors, weights) {
        var l = colors.length;
        var xyz = [0,0,0,0];
        for (var i=0; i < colors.length; i++) {
            var col = colors[i];
            var f = weights[i] / l;
            var rgb = col._rgb;
            xyz[0] += pow$4(rgb[0],2) * f;
            xyz[1] += pow$4(rgb[1],2) * f;
            xyz[2] += pow$4(rgb[2],2) * f;
            xyz[3] += rgb[3] * f;
        }
        xyz[0] = sqrt$1(xyz[0]);
        xyz[1] = sqrt$1(xyz[1]);
        xyz[2] = sqrt$1(xyz[2]);
        if (xyz[3] > 0.9999999) { xyz[3] = 1; }
        return new Color$6(clip_rgb$1(xyz));
    };

    // minimal multi-purpose interface

    // @requires utils color analyze

    var chroma$4 = chroma_1;
    var type$2 = utils.type;

    var pow$3 = Math.pow;

    var scale$2 = function(colors) {

        // constructor
        var _mode = 'rgb';
        var _nacol = chroma$4('#ccc');
        var _spread = 0;
        // const _fixed = false;
        var _domain = [0, 1];
        var _pos = [];
        var _padding = [0,0];
        var _classes = false;
        var _colors = [];
        var _out = false;
        var _min = 0;
        var _max = 1;
        var _correctLightness = false;
        var _colorCache = {};
        var _useCache = true;
        var _gamma = 1;

        // private methods

        var setColors = function(colors) {
            colors = colors || ['#fff', '#000'];
            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&
                chroma$4.brewer[colors.toLowerCase()]) {
                colors = chroma$4.brewer[colors.toLowerCase()];
            }
            if (type$2(colors) === 'array') {
                // handle single color
                if (colors.length === 1) {
                    colors = [colors[0], colors[0]];
                }
                // make a copy of the colors
                colors = colors.slice(0);
                // convert to chroma classes
                for (var c=0; c<colors.length; c++) {
                    colors[c] = chroma$4(colors[c]);
                }
                // auto-fill color position
                _pos.length = 0;
                for (var c$1=0; c$1<colors.length; c$1++) {
                    _pos.push(c$1/(colors.length-1));
                }
            }
            resetCache();
            return _colors = colors;
        };

        var getClass = function(value) {
            if (_classes != null) {
                var n = _classes.length-1;
                var i = 0;
                while (i < n && value >= _classes[i]) {
                    i++;
                }
                return i-1;
            }
            return 0;
        };

        var tMapLightness = function (t) { return t; };
        var tMapDomain = function (t) { return t; };

        // const classifyValue = function(value) {
        //     let val = value;
        //     if (_classes.length > 2) {
        //         const n = _classes.length-1;
        //         const i = getClass(value);
        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class
        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class
        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));
        //     }
        //     return val;
        // };

        var getColor = function(val, bypassMap) {
            var col, t;
            if (bypassMap == null) { bypassMap = false; }
            if (isNaN(val) || (val === null)) { return _nacol; }
            if (!bypassMap) {
                if (_classes && (_classes.length > 2)) {
                    // find the class
                    var c = getClass(val);
                    t = c / (_classes.length-2);
                } else if (_max !== _min) {
                    // just interpolate between min/max
                    t = (val - _min) / (_max - _min);
                } else {
                    t = 1;
                }
            } else {
                t = val;
            }

            // domain map
            t = tMapDomain(t);

            if (!bypassMap) {
                t = tMapLightness(t);  // lightness correction
            }

            if (_gamma !== 1) { t = pow$3(t, _gamma); }

            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));

            t = Math.min(1, Math.max(0, t));

            var k = Math.floor(t * 10000);

            if (_useCache && _colorCache[k]) {
                col = _colorCache[k];
            } else {
                if (type$2(_colors) === 'array') {
                    //for i in [0.._pos.length-1]
                    for (var i=0; i<_pos.length; i++) {
                        var p = _pos[i];
                        if (t <= p) {
                            col = _colors[i];
                            break;
                        }
                        if ((t >= p) && (i === (_pos.length-1))) {
                            col = _colors[i];
                            break;
                        }
                        if (t > p && t < _pos[i+1]) {
                            t = (t-p)/(_pos[i+1]-p);
                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);
                            break;
                        }
                    }
                } else if (type$2(_colors) === 'function') {
                    col = _colors(t);
                }
                if (_useCache) { _colorCache[k] = col; }
            }
            return col;
        };

        var resetCache = function () { return _colorCache = {}; };

        setColors(colors);

        // public interface

        var f = function(v) {
            var c = chroma$4(getColor(v));
            if (_out && c[_out]) { return c[_out](); } else { return c; }
        };

        f.classes = function(classes) {
            if (classes != null) {
                if (type$2(classes) === 'array') {
                    _classes = classes;
                    _domain = [classes[0], classes[classes.length-1]];
                } else {
                    var d = chroma$4.analyze(_domain);
                    if (classes === 0) {
                        _classes = [d.min, d.max];
                    } else {
                        _classes = chroma$4.limits(d, 'e', classes);
                    }
                }
                return f;
            }
            return _classes;
        };


        f.domain = function(domain) {
            if (!arguments.length) {
                return _domain;
            }
            _min = domain[0];
            _max = domain[domain.length-1];
            _pos = [];
            var k = _colors.length;
            if ((domain.length === k) && (_min !== _max)) {
                // update positions
                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {
                    var d = list[i];

                  _pos.push((d-_min) / (_max-_min));
                }
            } else {
                for (var c=0; c<k; c++) {
                    _pos.push(c/(k-1));
                }
                if (domain.length > 2) {
                    // set domain map
                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });
                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });
                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {
                        tMapDomain = function (t) {
                            if (t <= 0 || t >= 1) { return t; }
                            var i = 0;
                            while (t >= tBreaks[i+1]) { i++; }
                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);
                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);
                            return out;
                        };
                    }

                }
            }
            _domain = [_min, _max];
            return f;
        };

        f.mode = function(_m) {
            if (!arguments.length) {
                return _mode;
            }
            _mode = _m;
            resetCache();
            return f;
        };

        f.range = function(colors, _pos) {
            setColors(colors);
            return f;
        };

        f.out = function(_o) {
            _out = _o;
            return f;
        };

        f.spread = function(val) {
            if (!arguments.length) {
                return _spread;
            }
            _spread = val;
            return f;
        };

        f.correctLightness = function(v) {
            if (v == null) { v = true; }
            _correctLightness = v;
            resetCache();
            if (_correctLightness) {
                tMapLightness = function(t) {
                    var L0 = getColor(0, true).lab()[0];
                    var L1 = getColor(1, true).lab()[0];
                    var pol = L0 > L1;
                    var L_actual = getColor(t, true).lab()[0];
                    var L_ideal = L0 + ((L1 - L0) * t);
                    var L_diff = L_actual - L_ideal;
                    var t0 = 0;
                    var t1 = 1;
                    var max_iter = 20;
                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {
                        (function() {
                            if (pol) { L_diff *= -1; }
                            if (L_diff < 0) {
                                t0 = t;
                                t += (t1 - t) * 0.5;
                            } else {
                                t1 = t;
                                t += (t0 - t) * 0.5;
                            }
                            L_actual = getColor(t, true).lab()[0];
                            return L_diff = L_actual - L_ideal;
                        })();
                    }
                    return t;
                };
            } else {
                tMapLightness = function (t) { return t; };
            }
            return f;
        };

        f.padding = function(p) {
            if (p != null) {
                if (type$2(p) === 'number') {
                    p = [p,p];
                }
                _padding = p;
                return f;
            } else {
                return _padding;
            }
        };

        f.colors = function(numColors, out) {
            // If no arguments are given, return the original colors that were provided
            if (arguments.length < 2) { out = 'hex'; }
            var result = [];

            if (arguments.length === 0) {
                result = _colors.slice(0);

            } else if (numColors === 1) {
                result = [f(0.5)];

            } else if (numColors > 1) {
                var dm = _domain[0];
                var dd = _domain[1] - dm;
                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });

            } else { // returns all colors based on the defined classes
                colors = [];
                var samples = [];
                if (_classes && (_classes.length > 2)) {
                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {
                        samples.push((_classes[i-1]+_classes[i])*0.5);
                    }
                } else {
                    samples = _domain;
                }
                result = samples.map(function (v) { return f(v); });
            }

            if (chroma$4[out]) {
                result = result.map(function (c) { return c[out](); });
            }
            return result;
        };

        f.cache = function(c) {
            if (c != null) {
                _useCache = c;
                return f;
            } else {
                return _useCache;
            }
        };

        f.gamma = function(g) {
            if (g != null) {
                _gamma = g;
                return f;
            } else {
                return _gamma;
            }
        };

        f.nodata = function(d) {
            if (d != null) {
                _nacol = chroma$4(d);
                return f;
            } else {
                return _nacol;
            }
        };

        return f;
    };

    function __range__(left, right, inclusive) {
      var range = [];
      var ascending = left < right;
      var end = !inclusive ? right : ascending ? right + 1 : right - 1;
      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {
        range.push(i);
      }
      return range;
    }

    //
    // interpolates between a set of colors uzing a bezier spline
    //

    // @requires utils lab
    var Color$5 = Color_1;

    var scale$1 = scale$2;

    // nth row of the pascal triangle
    var binom_row = function(n) {
        var row = [1, 1];
        for (var i = 1; i < n; i++) {
            var newrow = [1];
            for (var j = 1; j <= row.length; j++) {
                newrow[j] = (row[j] || 0) + row[j - 1];
            }
            row = newrow;
        }
        return row;
    };

    var bezier = function(colors) {
        var assign, assign$1, assign$2;

        var I, lab0, lab1, lab2;
        colors = colors.map(function (c) { return new Color$5(c); });
        if (colors.length === 2) {
            // linear interpolation
            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);
            I = function(t) {
                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));
                return new Color$5(lab, 'lab');
            };
        } else if (colors.length === 3) {
            // quadratic bezier interpolation
            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);
            I = function(t) {
                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));
                return new Color$5(lab, 'lab');
            };
        } else if (colors.length === 4) {
            // cubic bezier interpolation
            var lab3;
            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);
            I = function(t) {
                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));
                return new Color$5(lab, 'lab');
            };
        } else if (colors.length >= 5) {
            // general case (degree n bezier)
            var labs, row, n;
            labs = colors.map(function (c) { return c.lab(); });
            n = colors.length - 1;
            row = binom_row(n);
            I = function (t) {
                var u = 1 - t;
                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));
                return new Color$5(lab, 'lab');
            };
        } else {
            throw new RangeError("No point in running bezier with only one color.")
        }
        return I;
    };

    var bezier_1 = function (colors) {
        var f = bezier(colors);
        f.scale = function () { return scale$1(f); };
        return f;
    };

    /*
     * interpolates between a set of colors uzing a bezier spline
     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/
     */

    var chroma$3 = chroma_1;

    var blend = function (bottom, top, mode) {
        if (!blend[mode]) {
            throw new Error('unknown blend mode ' + mode);
        }
        return blend[mode](bottom, top);
    };

    var blend_f = function (f) { return function (bottom,top) {
            var c0 = chroma$3(top).rgb();
            var c1 = chroma$3(bottom).rgb();
            return chroma$3.rgb(f(c0, c1));
        }; };

    var each = function (f) { return function (c0, c1) {
            var out = [];
            out[0] = f(c0[0], c1[0]);
            out[1] = f(c0[1], c1[1]);
            out[2] = f(c0[2], c1[2]);
            return out;
        }; };

    var normal = function (a) { return a; };
    var multiply = function (a,b) { return a * b / 255; };
    var darken = function (a,b) { return a > b ? b : a; };
    var lighten = function (a,b) { return a > b ? a : b; };
    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };
    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };
    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };
    var dodge = function (a,b) {
        if (a === 255) { return 255; }
        a = 255 * (b / 255) / (1 - a / 255);
        return a > 255 ? 255 : a
    };

    // # add = (a,b) ->
    // #     if (a + b > 255) then 255 else a + b

    blend.normal = blend_f(each(normal));
    blend.multiply = blend_f(each(multiply));
    blend.screen = blend_f(each(screen));
    blend.overlay = blend_f(each(overlay));
    blend.darken = blend_f(each(darken));
    blend.lighten = blend_f(each(lighten));
    blend.dodge = blend_f(each(dodge));
    blend.burn = blend_f(each(burn));
    // blend.add = blend_f(each(add));

    var blend_1 = blend;

    // cubehelix interpolation
    // based on D.A. Green "A colour scheme for the display of astronomical intensity images"
    // http://astron-soc.in/bulletin/11June/289392011.pdf

    var type$1 = utils.type;
    var clip_rgb = utils.clip_rgb;
    var TWOPI = utils.TWOPI;
    var pow$2 = Math.pow;
    var sin$1 = Math.sin;
    var cos$1 = Math.cos;
    var chroma$2 = chroma_1;

    var cubehelix = function(start, rotations, hue, gamma, lightness) {
        if ( start === void 0 ) start=300;
        if ( rotations === void 0 ) rotations=-1.5;
        if ( hue === void 0 ) hue=1;
        if ( gamma === void 0 ) gamma=1;
        if ( lightness === void 0 ) lightness=[0,1];

        var dh = 0, dl;
        if (type$1(lightness) === 'array') {
            dl = lightness[1] - lightness[0];
        } else {
            dl = 0;
            lightness = [lightness, lightness];
        }

        var f = function(fract) {
            var a = TWOPI * (((start+120)/360) + (rotations * fract));
            var l = pow$2(lightness[0] + (dl * fract), gamma);
            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;
            var amp = (h * l * (1-l)) / 2;
            var cos_a = cos$1(a);
            var sin_a = sin$1(a);
            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));
            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));
            var b = l + (amp * (+1.97294 * cos_a));
            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));
        };

        f.start = function(s) {
            if ((s == null)) { return start; }
            start = s;
            return f;
        };

        f.rotations = function(r) {
            if ((r == null)) { return rotations; }
            rotations = r;
            return f;
        };

        f.gamma = function(g) {
            if ((g == null)) { return gamma; }
            gamma = g;
            return f;
        };

        f.hue = function(h) {
            if ((h == null)) { return hue; }
            hue = h;
            if (type$1(hue) === 'array') {
                dh = hue[1] - hue[0];
                if (dh === 0) { hue = hue[1]; }
            } else {
                dh = 0;
            }
            return f;
        };

        f.lightness = function(h) {
            if ((h == null)) { return lightness; }
            if (type$1(h) === 'array') {
                lightness = h;
                dl = h[1] - h[0];
            } else {
                lightness = [h,h];
                dl = 0;
            }
            return f;
        };

        f.scale = function () { return chroma$2.scale(f); };

        f.hue(hue);

        return f;
    };

    var Color$4 = Color_1;
    var digits = '0123456789abcdef';

    var floor$1 = Math.floor;
    var random = Math.random;

    var random_1 = function () {
        var code = '#';
        for (var i=0; i<6; i++) {
            code += digits.charAt(floor$1(random() * 16));
        }
        return new Color$4(code, 'hex');
    };

    var type = type$p;
    var log = Math.log;
    var pow$1 = Math.pow;
    var floor = Math.floor;
    var abs$1 = Math.abs;


    var analyze = function (data, key) {
        if ( key === void 0 ) key=null;

        var r = {
            min: Number.MAX_VALUE,
            max: Number.MAX_VALUE*-1,
            sum: 0,
            values: [],
            count: 0
        };
        if (type(data) === 'object') {
            data = Object.values(data);
        }
        data.forEach(function (val) {
            if (key && type(val) === 'object') { val = val[key]; }
            if (val !== undefined && val !== null && !isNaN(val)) {
                r.values.push(val);
                r.sum += val;
                if (val < r.min) { r.min = val; }
                if (val > r.max) { r.max = val; }
                r.count += 1;
            }
        });

        r.domain = [r.min, r.max];

        r.limits = function (mode, num) { return limits(r, mode, num); };

        return r;
    };


    var limits = function (data, mode, num) {
        if ( mode === void 0 ) mode='equal';
        if ( num === void 0 ) num=7;

        if (type(data) == 'array') {
            data = analyze(data);
        }
        var min = data.min;
        var max = data.max;
        var values = data.values.sort(function (a,b) { return a-b; });

        if (num === 1) { return [min,max]; }

        var limits = [];

        if (mode.substr(0,1) === 'c') { // continuous
            limits.push(min);
            limits.push(max);
        }

        if (mode.substr(0,1) === 'e') { // equal interval
            limits.push(min);
            for (var i=1; i<num; i++) {
                limits.push(min+((i/num)*(max-min)));
            }
            limits.push(max);
        }

        else if (mode.substr(0,1) === 'l') { // log scale
            if (min <= 0) {
                throw new Error('Logarithmic scales are only possible for values > 0');
            }
            var min_log = Math.LOG10E * log(min);
            var max_log = Math.LOG10E * log(max);
            limits.push(min);
            for (var i$1=1; i$1<num; i$1++) {
                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));
            }
            limits.push(max);
        }

        else if (mode.substr(0,1) === 'q') { // quantile scale
            limits.push(min);
            for (var i$2=1; i$2<num; i$2++) {
                var p = ((values.length-1) * i$2)/num;
                var pb = floor(p);
                if (pb === p) {
                    limits.push(values[pb]);
                } else { // p > pb
                    var pr = p - pb;
                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));
                }
            }
            limits.push(max);

        }

        else if (mode.substr(0,1) === 'k') { // k-means clustering
            /*
            implementation based on
            http://code.google.com/p/figue/source/browse/trunk/figue.js#336
            simplified for 1-d input values
            */
            var cluster;
            var n = values.length;
            var assignments = new Array(n);
            var clusterSizes = new Array(num);
            var repeat = true;
            var nb_iters = 0;
            var centroids = null;

            // get seed values
            centroids = [];
            centroids.push(min);
            for (var i$3=1; i$3<num; i$3++) {
                centroids.push(min + ((i$3/num) * (max-min)));
            }
            centroids.push(max);

            while (repeat) {
                // assignment step
                for (var j=0; j<num; j++) {
                    clusterSizes[j] = 0;
                }
                for (var i$4=0; i$4<n; i$4++) {
                    var value = values[i$4];
                    var mindist = Number.MAX_VALUE;
                    var best = (void 0);
                    for (var j$1=0; j$1<num; j$1++) {
                        var dist = abs$1(centroids[j$1]-value);
                        if (dist < mindist) {
                            mindist = dist;
                            best = j$1;
                        }
                        clusterSizes[best]++;
                        assignments[i$4] = best;
                    }
                }

                // update centroids step
                var newCentroids = new Array(num);
                for (var j$2=0; j$2<num; j$2++) {
                    newCentroids[j$2] = null;
                }
                for (var i$5=0; i$5<n; i$5++) {
                    cluster = assignments[i$5];
                    if (newCentroids[cluster] === null) {
                        newCentroids[cluster] = values[i$5];
                    } else {
                        newCentroids[cluster] += values[i$5];
                    }
                }
                for (var j$3=0; j$3<num; j$3++) {
                    newCentroids[j$3] *= 1/clusterSizes[j$3];
                }

                // check convergence
                repeat = false;
                for (var j$4=0; j$4<num; j$4++) {
                    if (newCentroids[j$4] !== centroids[j$4]) {
                        repeat = true;
                        break;
                    }
                }

                centroids = newCentroids;
                nb_iters++;

                if (nb_iters > 200) {
                    repeat = false;
                }
            }

            // finished k-means clustering
            // the next part is borrowed from gabrielflor.it
            var kClusters = {};
            for (var j$5=0; j$5<num; j$5++) {
                kClusters[j$5] = [];
            }
            for (var i$6=0; i$6<n; i$6++) {
                cluster = assignments[i$6];
                kClusters[cluster].push(values[i$6]);
            }
            var tmpKMeansBreaks = [];
            for (var j$6=0; j$6<num; j$6++) {
                tmpKMeansBreaks.push(kClusters[j$6][0]);
                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);
            }
            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });
            limits.push(tmpKMeansBreaks[0]);
            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {
                var v = tmpKMeansBreaks[i$7];
                if (!isNaN(v) && (limits.indexOf(v) === -1)) {
                    limits.push(v);
                }
            }
        }
        return limits;
    };

    var analyze_1 = {analyze: analyze, limits: limits};

    var Color$3 = Color_1;


    var contrast = function (a, b) {
        // WCAG contrast ratio
        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
        a = new Color$3(a);
        b = new Color$3(b);
        var l1 = a.luminance();
        var l2 = b.luminance();
        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);
    };

    var Color$2 = Color_1;
    var sqrt = Math.sqrt;
    var pow = Math.pow;
    var min = Math.min;
    var max = Math.max;
    var atan2 = Math.atan2;
    var abs = Math.abs;
    var cos = Math.cos;
    var sin = Math.sin;
    var exp = Math.exp;
    var PI = Math.PI;

    var deltaE = function(a, b, Kl, Kc, Kh) {
        if ( Kl === void 0 ) Kl=1;
        if ( Kc === void 0 ) Kc=1;
        if ( Kh === void 0 ) Kh=1;

        // Delta E (CIE 2000)
        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html
        var rad2deg = function(rad) {
            return 360 * rad / (2 * PI);
        };
        var deg2rad = function(deg) {
            return (2 * PI * deg) / 360;
        };
        a = new Color$2(a);
        b = new Color$2(b);
        var ref = Array.from(a.lab());
        var L1 = ref[0];
        var a1 = ref[1];
        var b1 = ref[2];
        var ref$1 = Array.from(b.lab());
        var L2 = ref$1[0];
        var a2 = ref$1[1];
        var b2 = ref$1[2];
        var avgL = (L1 + L2)/2;
        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));
        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));
        var avgC = (C1 + C2)/2;
        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));
        var a1p = a1*(1+G);
        var a2p = a2*(1+G);
        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));
        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));
        var avgCp = (C1p + C2p)/2;
        var arctan1 = rad2deg(atan2(b1, a1p));
        var arctan2 = rad2deg(atan2(b2, a2p));
        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;
        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;
        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;
        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));
        var deltaHp = h2p - h1p;
        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;
        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);
        var deltaL = L2 - L1;
        var deltaCp = C2p - C1p;    
        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));
        var sc = 1 + 0.045*avgCp;
        var sh = 1 + 0.015*avgCp*T;
        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));
        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));
        var Rt = -Rc*sin(2*deg2rad(deltaTheta));
        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));
        return max(0, min(100, result));
    };

    var Color$1 = Color_1;

    // simple Euclidean distance
    var distance = function(a, b, mode) {
        if ( mode === void 0 ) mode='lab';

        // Delta E (CIE 1976)
        // see http://www.brucelindbloom.com/index.html?Equations.html
        a = new Color$1(a);
        b = new Color$1(b);
        var l1 = a.get(mode);
        var l2 = b.get(mode);
        var sum_sq = 0;
        for (var i in l1) {
            var d = (l1[i] || 0) - (l2[i] || 0);
            sum_sq += d*d;
        }
        return Math.sqrt(sum_sq);
    };

    var Color = Color_1;

    var valid = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

        try {
            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));
            return true;
        } catch (e) {
            return false;
        }
    };

    // some pre-defined color scales:
    var chroma$1 = chroma_1;

    var scale = scale$2;

    var scales = {
    	cool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },
    	hot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }
    };

    /**
        ColorBrewer colors for chroma.js

        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The
        Pennsylvania State University.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software distributed
        under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
        CONDITIONS OF ANY KIND, either express or implied. See the License for the
        specific language governing permissions and limitations under the License.
    */

    var colorbrewer = {
        // sequential
        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],
        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],
        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],
        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],
        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],
        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],
        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],
        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],
        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],
        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],
        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],
        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],
        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],
        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],
        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],
        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],
        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],
        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],
        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],

        // diverging

        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],
        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],
        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],
        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],
        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],
        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],
        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],
        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],
        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],

        // qualitative

        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],
        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],
        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],
        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],
        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],
        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],
        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],
        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],
    };

    // add lowercase aliases for case-insensitive matches
    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {
        var key = list[i];

        colorbrewer[key.toLowerCase()] = colorbrewer[key];
    }

    var colorbrewer_1 = colorbrewer;

    var chroma = chroma_1;

    // feel free to comment out anything to rollup
    // a smaller chroma.js built

    // io --> convert colors

















    // operators --> modify existing Colors










    // interpolators












    // generators -- > create new colors
    chroma.average = average;
    chroma.bezier = bezier_1;
    chroma.blend = blend_1;
    chroma.cubehelix = cubehelix;
    chroma.mix = chroma.interpolate = mix$1;
    chroma.random = random_1;
    chroma.scale = scale$2;

    // other utility methods
    chroma.analyze = analyze_1.analyze;
    chroma.contrast = contrast;
    chroma.deltaE = deltaE;
    chroma.distance = distance;
    chroma.limits = analyze_1.limits;
    chroma.valid = valid;

    // scale
    chroma.scales = scales;

    // colors
    chroma.colors = w3cx11_1;
    chroma.brewer = colorbrewer_1;

    var chroma_js = chroma;

    return chroma_js;

}));

},{}],111:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it) return (it = it.call(o)).next.bind(it);

  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it) o = it;
    var i = 0;
    return function () {
      if (i >= o.length) return {
        done: true
      };
      return {
        done: false,
        value: o[i++]
      };
    };
  }

  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// these aren't really private, but nor are they really useful to document

/**
 * @private
 */
var LuxonError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(LuxonError, _Error);

  function LuxonError() {
    return _Error.apply(this, arguments) || this;
  }

  return LuxonError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
/**
 * @private
 */


var InvalidDateTimeError = /*#__PURE__*/function (_LuxonError) {
  _inheritsLoose(InvalidDateTimeError, _LuxonError);

  function InvalidDateTimeError(reason) {
    return _LuxonError.call(this, "Invalid DateTime: " + reason.toMessage()) || this;
  }

  return InvalidDateTimeError;
}(LuxonError);
/**
 * @private
 */

var InvalidIntervalError = /*#__PURE__*/function (_LuxonError2) {
  _inheritsLoose(InvalidIntervalError, _LuxonError2);

  function InvalidIntervalError(reason) {
    return _LuxonError2.call(this, "Invalid Interval: " + reason.toMessage()) || this;
  }

  return InvalidIntervalError;
}(LuxonError);
/**
 * @private
 */

var InvalidDurationError = /*#__PURE__*/function (_LuxonError3) {
  _inheritsLoose(InvalidDurationError, _LuxonError3);

  function InvalidDurationError(reason) {
    return _LuxonError3.call(this, "Invalid Duration: " + reason.toMessage()) || this;
  }

  return InvalidDurationError;
}(LuxonError);
/**
 * @private
 */

var ConflictingSpecificationError = /*#__PURE__*/function (_LuxonError4) {
  _inheritsLoose(ConflictingSpecificationError, _LuxonError4);

  function ConflictingSpecificationError() {
    return _LuxonError4.apply(this, arguments) || this;
  }

  return ConflictingSpecificationError;
}(LuxonError);
/**
 * @private
 */

var InvalidUnitError = /*#__PURE__*/function (_LuxonError5) {
  _inheritsLoose(InvalidUnitError, _LuxonError5);

  function InvalidUnitError(unit) {
    return _LuxonError5.call(this, "Invalid unit " + unit) || this;
  }

  return InvalidUnitError;
}(LuxonError);
/**
 * @private
 */

var InvalidArgumentError = /*#__PURE__*/function (_LuxonError6) {
  _inheritsLoose(InvalidArgumentError, _LuxonError6);

  function InvalidArgumentError() {
    return _LuxonError6.apply(this, arguments) || this;
  }

  return InvalidArgumentError;
}(LuxonError);
/**
 * @private
 */

var ZoneIsAbstractError = /*#__PURE__*/function (_LuxonError7) {
  _inheritsLoose(ZoneIsAbstractError, _LuxonError7);

  function ZoneIsAbstractError() {
    return _LuxonError7.call(this, "Zone is an abstract class") || this;
  }

  return ZoneIsAbstractError;
}(LuxonError);

/**
 * @private
 */
var n = "numeric",
    s = "short",
    l = "long";
var DATE_SHORT = {
  year: n,
  month: n,
  day: n
};
var DATE_MED = {
  year: n,
  month: s,
  day: n
};
var DATE_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s
};
var DATE_FULL = {
  year: n,
  month: l,
  day: n
};
var DATE_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l
};
var TIME_SIMPLE = {
  hour: n,
  minute: n
};
var TIME_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n
};
var TIME_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var TIME_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};
var TIME_24_SIMPLE = {
  hour: n,
  minute: n,
  hourCycle: "h23"
};
var TIME_24_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n,
  hourCycle: "h23"
};
var TIME_24_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hourCycle: "h23",
  timeZoneName: s
};
var TIME_24_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hourCycle: "h23",
  timeZoneName: l
};
var DATETIME_SHORT = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n
};
var DATETIME_SHORT_WITH_SECONDS = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n
};
var DATETIME_MED_WITH_SECONDS = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s,
  hour: n,
  minute: n
};
var DATETIME_FULL = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  timeZoneName: s
};
var DATETIME_FULL_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var DATETIME_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  timeZoneName: l
};
var DATETIME_HUGE_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};

/**
 * @private
 */
// TYPES

function isUndefined(o) {
  return typeof o === "undefined";
}
function isNumber(o) {
  return typeof o === "number";
}
function isInteger(o) {
  return typeof o === "number" && o % 1 === 0;
}
function isString(o) {
  return typeof o === "string";
}
function isDate(o) {
  return Object.prototype.toString.call(o) === "[object Date]";
} // CAPABILITIES

function hasRelative() {
  try {
    return typeof Intl !== "undefined" && !!Intl.RelativeTimeFormat;
  } catch (e) {
    return false;
  }
} // OBJECTS AND ARRAYS

function maybeArray(thing) {
  return Array.isArray(thing) ? thing : [thing];
}
function bestBy(arr, by, compare) {
  if (arr.length === 0) {
    return undefined;
  }

  return arr.reduce(function (best, next) {
    var pair = [by(next), next];

    if (!best) {
      return pair;
    } else if (compare(best[0], pair[0]) === best[0]) {
      return best;
    } else {
      return pair;
    }
  }, null)[1];
}
function pick(obj, keys) {
  return keys.reduce(function (a, k) {
    a[k] = obj[k];
    return a;
  }, {});
}
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
} // NUMBERS AND STRINGS

function integerBetween(thing, bottom, top) {
  return isInteger(thing) && thing >= bottom && thing <= top;
} // x % n but takes the sign of n instead of x

function floorMod(x, n) {
  return x - n * Math.floor(x / n);
}
function padStart(input, n) {
  if (n === void 0) {
    n = 2;
  }

  var isNeg = input < 0;
  var padded;

  if (isNeg) {
    padded = "-" + ("" + -input).padStart(n, "0");
  } else {
    padded = ("" + input).padStart(n, "0");
  }

  return padded;
}
function parseInteger(string) {
  if (isUndefined(string) || string === null || string === "") {
    return undefined;
  } else {
    return parseInt(string, 10);
  }
}
function parseFloating(string) {
  if (isUndefined(string) || string === null || string === "") {
    return undefined;
  } else {
    return parseFloat(string);
  }
}
function parseMillis(fraction) {
  // Return undefined (instead of 0) in these cases, where fraction is not set
  if (isUndefined(fraction) || fraction === null || fraction === "") {
    return undefined;
  } else {
    var f = parseFloat("0." + fraction) * 1000;
    return Math.floor(f);
  }
}
function roundTo(number, digits, towardZero) {
  if (towardZero === void 0) {
    towardZero = false;
  }

  var factor = Math.pow(10, digits),
      rounder = towardZero ? Math.trunc : Math.round;
  return rounder(number * factor) / factor;
} // DATE BASICS

function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function daysInMonth(year, month) {
  var modMonth = floorMod(month - 1, 12) + 1,
      modYear = year + (month - modMonth) / 12;

  if (modMonth === 2) {
    return isLeapYear(modYear) ? 29 : 28;
  } else {
    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];
  }
} // covert a calendar object to a local timestamp (epoch, but with the offset baked in)

function objToLocalTS(obj) {
  var d = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond); // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that

  if (obj.year < 100 && obj.year >= 0) {
    d = new Date(d);
    d.setUTCFullYear(d.getUTCFullYear() - 1900);
  }

  return +d;
}
function weeksInWeekYear(weekYear) {
  var p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7,
      last = weekYear - 1,
      p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;
  return p1 === 4 || p2 === 3 ? 53 : 52;
}
function untruncateYear(year) {
  if (year > 99) {
    return year;
  } else return year > 60 ? 1900 + year : 2000 + year;
} // PARSING

function parseZoneInfo(ts, offsetFormat, locale, timeZone) {
  if (timeZone === void 0) {
    timeZone = null;
  }

  var date = new Date(ts),
      intlOpts = {
    hourCycle: "h23",
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };

  if (timeZone) {
    intlOpts.timeZone = timeZone;
  }

  var modified = _extends({
    timeZoneName: offsetFormat
  }, intlOpts);

  var parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find(function (m) {
    return m.type.toLowerCase() === "timezonename";
  });
  return parsed ? parsed.value : null;
} // signedOffset('-5', '30') -> -330

function signedOffset(offHourStr, offMinuteStr) {
  var offHour = parseInt(offHourStr, 10); // don't || this because we want to preserve -0

  if (Number.isNaN(offHour)) {
    offHour = 0;
  }

  var offMin = parseInt(offMinuteStr, 10) || 0,
      offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;
  return offHour * 60 + offMinSigned;
} // COERCION

function asNumber(value) {
  var numericValue = Number(value);
  if (typeof value === "boolean" || value === "" || Number.isNaN(numericValue)) throw new InvalidArgumentError("Invalid unit value " + value);
  return numericValue;
}
function normalizeObject(obj, normalizer) {
  var normalized = {};

  for (var u in obj) {
    if (hasOwnProperty(obj, u)) {
      var v = obj[u];
      if (v === undefined || v === null) continue;
      normalized[normalizer(u)] = asNumber(v);
    }
  }

  return normalized;
}
function formatOffset(offset, format) {
  var hours = Math.trunc(Math.abs(offset / 60)),
      minutes = Math.trunc(Math.abs(offset % 60)),
      sign = offset >= 0 ? "+" : "-";

  switch (format) {
    case "short":
      return "" + sign + padStart(hours, 2) + ":" + padStart(minutes, 2);

    case "narrow":
      return "" + sign + hours + (minutes > 0 ? ":" + minutes : "");

    case "techie":
      return "" + sign + padStart(hours, 2) + padStart(minutes, 2);

    default:
      throw new RangeError("Value format " + format + " is out of range for property format");
  }
}
function timeObject(obj) {
  return pick(obj, ["hour", "minute", "second", "millisecond"]);
}
var ianaRegex = /[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;

/**
 * @private
 */


var monthsLong = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var monthsShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var monthsNarrow = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function months(length) {
  switch (length) {
    case "narrow":
      return [].concat(monthsNarrow);

    case "short":
      return [].concat(monthsShort);

    case "long":
      return [].concat(monthsLong);

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];

    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];

    default:
      return null;
  }
}
var weekdaysLong = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
var weekdaysShort = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
var weekdaysNarrow = ["M", "T", "W", "T", "F", "S", "S"];
function weekdays(length) {
  switch (length) {
    case "narrow":
      return [].concat(weekdaysNarrow);

    case "short":
      return [].concat(weekdaysShort);

    case "long":
      return [].concat(weekdaysLong);

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];

    default:
      return null;
  }
}
var meridiems = ["AM", "PM"];
var erasLong = ["Before Christ", "Anno Domini"];
var erasShort = ["BC", "AD"];
var erasNarrow = ["B", "A"];
function eras(length) {
  switch (length) {
    case "narrow":
      return [].concat(erasNarrow);

    case "short":
      return [].concat(erasShort);

    case "long":
      return [].concat(erasLong);

    default:
      return null;
  }
}
function meridiemForDateTime(dt) {
  return meridiems[dt.hour < 12 ? 0 : 1];
}
function weekdayForDateTime(dt, length) {
  return weekdays(length)[dt.weekday - 1];
}
function monthForDateTime(dt, length) {
  return months(length)[dt.month - 1];
}
function eraForDateTime(dt, length) {
  return eras(length)[dt.year < 0 ? 0 : 1];
}
function formatRelativeTime(unit, count, numeric, narrow) {
  if (numeric === void 0) {
    numeric = "always";
  }

  if (narrow === void 0) {
    narrow = false;
  }

  var units = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  };
  var lastable = ["hours", "minutes", "seconds"].indexOf(unit) === -1;

  if (numeric === "auto" && lastable) {
    var isDay = unit === "days";

    switch (count) {
      case 1:
        return isDay ? "tomorrow" : "next " + units[unit][0];

      case -1:
        return isDay ? "yesterday" : "last " + units[unit][0];

      case 0:
        return isDay ? "today" : "this " + units[unit][0];

    }
  }

  var isInPast = Object.is(count, -0) || count < 0,
      fmtValue = Math.abs(count),
      singular = fmtValue === 1,
      lilUnits = units[unit],
      fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;
  return isInPast ? fmtValue + " " + fmtUnit + " ago" : "in " + fmtValue + " " + fmtUnit;
}

function stringifyTokens(splits, tokenToString) {
  var s = "";

  for (var _iterator = _createForOfIteratorHelperLoose(splits), _step; !(_step = _iterator()).done;) {
    var token = _step.value;

    if (token.literal) {
      s += token.val;
    } else {
      s += tokenToString(token.val);
    }
  }

  return s;
}

var _macroTokenToFormatOpts = {
  D: DATE_SHORT,
  DD: DATE_MED,
  DDD: DATE_FULL,
  DDDD: DATE_HUGE,
  t: TIME_SIMPLE,
  tt: TIME_WITH_SECONDS,
  ttt: TIME_WITH_SHORT_OFFSET,
  tttt: TIME_WITH_LONG_OFFSET,
  T: TIME_24_SIMPLE,
  TT: TIME_24_WITH_SECONDS,
  TTT: TIME_24_WITH_SHORT_OFFSET,
  TTTT: TIME_24_WITH_LONG_OFFSET,
  f: DATETIME_SHORT,
  ff: DATETIME_MED,
  fff: DATETIME_FULL,
  ffff: DATETIME_HUGE,
  F: DATETIME_SHORT_WITH_SECONDS,
  FF: DATETIME_MED_WITH_SECONDS,
  FFF: DATETIME_FULL_WITH_SECONDS,
  FFFF: DATETIME_HUGE_WITH_SECONDS
};
/**
 * @private
 */

var Formatter = /*#__PURE__*/function () {
  Formatter.create = function create(locale, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new Formatter(locale, opts);
  };

  Formatter.parseFormat = function parseFormat(fmt) {
    var current = null,
        currentFull = "",
        bracketed = false;
    var splits = [];

    for (var i = 0; i < fmt.length; i++) {
      var c = fmt.charAt(i);

      if (c === "'") {
        if (currentFull.length > 0) {
          splits.push({
            literal: bracketed,
            val: currentFull
          });
        }

        current = null;
        currentFull = "";
        bracketed = !bracketed;
      } else if (bracketed) {
        currentFull += c;
      } else if (c === current) {
        currentFull += c;
      } else {
        if (currentFull.length > 0) {
          splits.push({
            literal: false,
            val: currentFull
          });
        }

        currentFull = c;
        current = c;
      }
    }

    if (currentFull.length > 0) {
      splits.push({
        literal: bracketed,
        val: currentFull
      });
    }

    return splits;
  };

  Formatter.macroTokenToFormatOpts = function macroTokenToFormatOpts(token) {
    return _macroTokenToFormatOpts[token];
  };

  function Formatter(locale, formatOpts) {
    this.opts = formatOpts;
    this.loc = locale;
    this.systemLoc = null;
  }

  var _proto = Formatter.prototype;

  _proto.formatWithSystemDefault = function formatWithSystemDefault(dt, opts) {
    if (this.systemLoc === null) {
      this.systemLoc = this.loc.redefaultToSystem();
    }

    var df = this.systemLoc.dtFormatter(dt, _extends({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTime = function formatDateTime(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, _extends({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTimeParts = function formatDateTimeParts(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, _extends({}, this.opts, opts));
    return df.formatToParts();
  };

  _proto.resolvedOptions = function resolvedOptions(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, _extends({}, this.opts, opts));
    return df.resolvedOptions();
  };

  _proto.num = function num(n, p) {
    if (p === void 0) {
      p = 0;
    }

    // we get some perf out of doing this here, annoyingly
    if (this.opts.forceSimple) {
      return padStart(n, p);
    }

    var opts = _extends({}, this.opts);

    if (p > 0) {
      opts.padTo = p;
    }

    return this.loc.numberFormatter(opts).format(n);
  };

  _proto.formatDateTimeFromString = function formatDateTimeFromString(dt, fmt) {
    var _this = this;

    var knownEnglish = this.loc.listingMode() === "en",
        useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory",
        string = function string(opts, extract) {
      return _this.loc.extract(dt, opts, extract);
    },
        formatOffset = function formatOffset(opts) {
      if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {
        return "Z";
      }

      return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : "";
    },
        meridiem = function meridiem() {
      return knownEnglish ? meridiemForDateTime(dt) : string({
        hour: "numeric",
        hourCycle: "h12"
      }, "dayperiod");
    },
        month = function month(length, standalone) {
      return knownEnglish ? monthForDateTime(dt, length) : string(standalone ? {
        month: length
      } : {
        month: length,
        day: "numeric"
      }, "month");
    },
        weekday = function weekday(length, standalone) {
      return knownEnglish ? weekdayForDateTime(dt, length) : string(standalone ? {
        weekday: length
      } : {
        weekday: length,
        month: "long",
        day: "numeric"
      }, "weekday");
    },
        maybeMacro = function maybeMacro(token) {
      var formatOpts = Formatter.macroTokenToFormatOpts(token);

      if (formatOpts) {
        return _this.formatWithSystemDefault(dt, formatOpts);
      } else {
        return token;
      }
    },
        era = function era(length) {
      return knownEnglish ? eraForDateTime(dt, length) : string({
        era: length
      }, "era");
    },
        tokenToString = function tokenToString(token) {
      // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles
      switch (token) {
        // ms
        case "S":
          return _this.num(dt.millisecond);

        case "u": // falls through

        case "SSS":
          return _this.num(dt.millisecond, 3);
        // seconds

        case "s":
          return _this.num(dt.second);

        case "ss":
          return _this.num(dt.second, 2);
        // fractional seconds

        case "uu":
          return _this.num(Math.floor(dt.millisecond / 10), 2);

        case "uuu":
          return _this.num(Math.floor(dt.millisecond / 100));
        // minutes

        case "m":
          return _this.num(dt.minute);

        case "mm":
          return _this.num(dt.minute, 2);
        // hours

        case "h":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);

        case "hh":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);

        case "H":
          return _this.num(dt.hour);

        case "HH":
          return _this.num(dt.hour, 2);
        // offset

        case "Z":
          // like +6
          return formatOffset({
            format: "narrow",
            allowZ: _this.opts.allowZ
          });

        case "ZZ":
          // like +06:00
          return formatOffset({
            format: "short",
            allowZ: _this.opts.allowZ
          });

        case "ZZZ":
          // like +0600
          return formatOffset({
            format: "techie",
            allowZ: _this.opts.allowZ
          });

        case "ZZZZ":
          // like EST
          return dt.zone.offsetName(dt.ts, {
            format: "short",
            locale: _this.loc.locale
          });

        case "ZZZZZ":
          // like Eastern Standard Time
          return dt.zone.offsetName(dt.ts, {
            format: "long",
            locale: _this.loc.locale
          });
        // zone

        case "z":
          // like America/New_York
          return dt.zoneName;
        // meridiems

        case "a":
          return meridiem();
        // dates

        case "d":
          return useDateTimeFormatter ? string({
            day: "numeric"
          }, "day") : _this.num(dt.day);

        case "dd":
          return useDateTimeFormatter ? string({
            day: "2-digit"
          }, "day") : _this.num(dt.day, 2);
        // weekdays - standalone

        case "c":
          // like 1
          return _this.num(dt.weekday);

        case "ccc":
          // like 'Tues'
          return weekday("short", true);

        case "cccc":
          // like 'Tuesday'
          return weekday("long", true);

        case "ccccc":
          // like 'T'
          return weekday("narrow", true);
        // weekdays - format

        case "E":
          // like 1
          return _this.num(dt.weekday);

        case "EEE":
          // like 'Tues'
          return weekday("short", false);

        case "EEEE":
          // like 'Tuesday'
          return weekday("long", false);

        case "EEEEE":
          // like 'T'
          return weekday("narrow", false);
        // months - standalone

        case "L":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric",
            day: "numeric"
          }, "month") : _this.num(dt.month);

        case "LL":
          // like 01, doesn't seem to work
          return useDateTimeFormatter ? string({
            month: "2-digit",
            day: "numeric"
          }, "month") : _this.num(dt.month, 2);

        case "LLL":
          // like Jan
          return month("short", true);

        case "LLLL":
          // like January
          return month("long", true);

        case "LLLLL":
          // like J
          return month("narrow", true);
        // months - format

        case "M":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric"
          }, "month") : _this.num(dt.month);

        case "MM":
          // like 01
          return useDateTimeFormatter ? string({
            month: "2-digit"
          }, "month") : _this.num(dt.month, 2);

        case "MMM":
          // like Jan
          return month("short", false);

        case "MMMM":
          // like January
          return month("long", false);

        case "MMMMM":
          // like J
          return month("narrow", false);
        // years

        case "y":
          // like 2014
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year);

        case "yy":
          // like 14
          return useDateTimeFormatter ? string({
            year: "2-digit"
          }, "year") : _this.num(dt.year.toString().slice(-2), 2);

        case "yyyy":
          // like 0012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 4);

        case "yyyyyy":
          // like 000012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 6);
        // eras

        case "G":
          // like AD
          return era("short");

        case "GG":
          // like Anno Domini
          return era("long");

        case "GGGGG":
          return era("narrow");

        case "kk":
          return _this.num(dt.weekYear.toString().slice(-2), 2);

        case "kkkk":
          return _this.num(dt.weekYear, 4);

        case "W":
          return _this.num(dt.weekNumber);

        case "WW":
          return _this.num(dt.weekNumber, 2);

        case "o":
          return _this.num(dt.ordinal);

        case "ooo":
          return _this.num(dt.ordinal, 3);

        case "q":
          // like 1
          return _this.num(dt.quarter);

        case "qq":
          // like 01
          return _this.num(dt.quarter, 2);

        case "X":
          return _this.num(Math.floor(dt.ts / 1000));

        case "x":
          return _this.num(dt.ts);

        default:
          return maybeMacro(token);
      }
    };

    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);
  };

  _proto.formatDurationFromString = function formatDurationFromString(dur, fmt) {
    var _this2 = this;

    var tokenToField = function tokenToField(token) {
      switch (token[0]) {
        case "S":
          return "millisecond";

        case "s":
          return "second";

        case "m":
          return "minute";

        case "h":
          return "hour";

        case "d":
          return "day";

        case "w":
          return "week";

        case "M":
          return "month";

        case "y":
          return "year";

        default:
          return null;
      }
    },
        tokenToString = function tokenToString(lildur) {
      return function (token) {
        var mapped = tokenToField(token);

        if (mapped) {
          return _this2.num(lildur.get(mapped), token.length);
        } else {
          return token;
        }
      };
    },
        tokens = Formatter.parseFormat(fmt),
        realTokens = tokens.reduce(function (found, _ref) {
      var literal = _ref.literal,
          val = _ref.val;
      return literal ? found : found.concat(val);
    }, []),
        collapsed = dur.shiftTo.apply(dur, realTokens.map(tokenToField).filter(function (t) {
      return t;
    }));

    return stringifyTokens(tokens, tokenToString(collapsed));
  };

  return Formatter;
}();

var Invalid = /*#__PURE__*/function () {
  function Invalid(reason, explanation) {
    this.reason = reason;
    this.explanation = explanation;
  }

  var _proto = Invalid.prototype;

  _proto.toMessage = function toMessage() {
    if (this.explanation) {
      return this.reason + ": " + this.explanation;
    } else {
      return this.reason;
    }
  };

  return Invalid;
}();

/**
 * @interface
 */

var Zone = /*#__PURE__*/function () {
  function Zone() {}

  var _proto = Zone.prototype;

  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  _proto.offsetName = function offsetName(ts, opts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns the offset's value as a string
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  ;

  _proto.formatOffset = function formatOffset(ts, format) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  ;

  _proto.offset = function offset(ts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is equal to another zone
   * @abstract
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(otherZone) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is valid.
   * @abstract
   * @type {boolean}
   */
  ;

  _createClass(Zone, [{
    key: "type",
    get:
    /**
     * The type of zone
     * @abstract
     * @type {string}
     */
    function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * The name of this zone.
     * @abstract
     * @type {string}
     */

  }, {
    key: "name",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }, {
    key: "ianaName",
    get: function get() {
      return this.name;
    }
    /**
     * Returns whether the offset is known to be fixed for the whole year.
     * @abstract
     * @type {boolean}
     */

  }, {
    key: "isUniversal",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }, {
    key: "isValid",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }]);

  return Zone;
}();

var singleton$1 = null;
/**
 * Represents the local zone for this JavaScript environment.
 * @implements {Zone}
 */

var SystemZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(SystemZone, _Zone);

  function SystemZone() {
    return _Zone.apply(this, arguments) || this;
  }

  var _proto = SystemZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    return -new Date(ts).getTimezoneOffset();
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "system";
  }
  /** @override **/
  ;

  _createClass(SystemZone, [{
    key: "type",
    get:
    /** @override **/
    function get() {
      return "system";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return new Intl.DateTimeFormat().resolvedOptions().timeZone;
    }
    /** @override **/

  }, {
    key: "isUniversal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }], [{
    key: "instance",
    get:
    /**
     * Get a singleton instance of the local zone
     * @return {SystemZone}
     */
    function get() {
      if (singleton$1 === null) {
        singleton$1 = new SystemZone();
      }

      return singleton$1;
    }
  }]);

  return SystemZone;
}(Zone);

var dtfCache = {};

function makeDTF(zone) {
  if (!dtfCache[zone]) {
    dtfCache[zone] = new Intl.DateTimeFormat("en-US", {
      hour12: false,
      timeZone: zone,
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
      era: "short"
    });
  }

  return dtfCache[zone];
}

var typeToPos = {
  year: 0,
  month: 1,
  day: 2,
  era: 3,
  hour: 4,
  minute: 5,
  second: 6
};

function hackyOffset(dtf, date) {
  var formatted = dtf.format(date).replace(/\u200E/g, ""),
      parsed = /(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(formatted),
      fMonth = parsed[1],
      fDay = parsed[2],
      fYear = parsed[3],
      fadOrBc = parsed[4],
      fHour = parsed[5],
      fMinute = parsed[6],
      fSecond = parsed[7];
  return [fYear, fMonth, fDay, fadOrBc, fHour, fMinute, fSecond];
}

function partsOffset(dtf, date) {
  var formatted = dtf.formatToParts(date);
  var filled = [];

  for (var i = 0; i < formatted.length; i++) {
    var _formatted$i = formatted[i],
        type = _formatted$i.type,
        value = _formatted$i.value;
    var pos = typeToPos[type];

    if (type === "era") {
      filled[pos] = value;
    } else if (!isUndefined(pos)) {
      filled[pos] = parseInt(value, 10);
    }
  }

  return filled;
}

var ianaZoneCache = {};
/**
 * A zone identified by an IANA identifier, like America/New_York
 * @implements {Zone}
 */

var IANAZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(IANAZone, _Zone);

  /**
   * @param {string} name - Zone name
   * @return {IANAZone}
   */
  IANAZone.create = function create(name) {
    if (!ianaZoneCache[name]) {
      ianaZoneCache[name] = new IANAZone(name);
    }

    return ianaZoneCache[name];
  }
  /**
   * Reset local caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  ;

  IANAZone.resetCache = function resetCache() {
    ianaZoneCache = {};
    dtfCache = {};
  }
  /**
   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
   * @param {string} s - The string to check validity on
   * @example IANAZone.isValidSpecifier("America/New_York") //=> true
   * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
   * @deprecated This method returns false for some valid IANA names. Use isValidZone instead.
   * @return {boolean}
   */
  ;

  IANAZone.isValidSpecifier = function isValidSpecifier(s) {
    return this.isValidZone(s);
  }
  /**
   * Returns whether the provided string identifies a real zone
   * @param {string} zone - The string to check
   * @example IANAZone.isValidZone("America/New_York") //=> true
   * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
   * @example IANAZone.isValidZone("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidZone = function isValidZone(zone) {
    if (!zone) {
      return false;
    }

    try {
      new Intl.DateTimeFormat("en-US", {
        timeZone: zone
      }).format();
      return true;
    } catch (e) {
      return false;
    }
  };

  function IANAZone(name) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.zoneName = name;
    /** @private **/

    _this.valid = IANAZone.isValidZone(name);
    return _this;
  }
  /** @override **/


  var _proto = IANAZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale, this.name);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    var date = new Date(ts);
    if (isNaN(date)) return NaN;
    var dtf = makeDTF(this.name);

    var _ref2 = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date),
        year = _ref2[0],
        month = _ref2[1],
        day = _ref2[2],
        adOrBc = _ref2[3],
        hour = _ref2[4],
        minute = _ref2[5],
        second = _ref2[6];

    if (adOrBc === "BC") {
      year = -Math.abs(year) + 1;
    } // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat


    var adjustedHour = hour === 24 ? 0 : hour;
    var asUTC = objToLocalTS({
      year: year,
      month: month,
      day: day,
      hour: adjustedHour,
      minute: minute,
      second: second,
      millisecond: 0
    });
    var asTS = +date;
    var over = asTS % 1000;
    asTS -= over >= 0 ? over : 1000 + over;
    return (asUTC - asTS) / (60 * 1000);
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "iana" && otherZone.name === this.name;
  }
  /** @override **/
  ;

  _createClass(IANAZone, [{
    key: "type",
    get: function get() {
      return "iana";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "isUniversal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return this.valid;
    }
  }]);

  return IANAZone;
}(Zone);

var singleton = null;
/**
 * A zone with a fixed offset (meaning no DST)
 * @implements {Zone}
 */

var FixedOffsetZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(FixedOffsetZone, _Zone);

  /**
   * Get an instance with a specified offset
   * @param {number} offset - The offset in minutes
   * @return {FixedOffsetZone}
   */
  FixedOffsetZone.instance = function instance(offset) {
    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);
  }
  /**
   * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
   * @param {string} s - The offset string to parse
   * @example FixedOffsetZone.parseSpecifier("UTC+6")
   * @example FixedOffsetZone.parseSpecifier("UTC+06")
   * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
   * @return {FixedOffsetZone}
   */
  ;

  FixedOffsetZone.parseSpecifier = function parseSpecifier(s) {
    if (s) {
      var r = s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);

      if (r) {
        return new FixedOffsetZone(signedOffset(r[1], r[2]));
      }
    }

    return null;
  };

  function FixedOffsetZone(offset) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.fixed = offset;
    return _this;
  }
  /** @override **/


  var _proto = FixedOffsetZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return this.name;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.fixed, format);
  }
  /** @override **/
  ;

  /** @override **/
  _proto.offset = function offset() {
    return this.fixed;
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "fixed" && otherZone.fixed === this.fixed;
  }
  /** @override **/
  ;

  _createClass(FixedOffsetZone, [{
    key: "type",
    get: function get() {
      return "fixed";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.fixed === 0 ? "UTC" : "UTC" + formatOffset(this.fixed, "narrow");
    }
  }, {
    key: "ianaName",
    get: function get() {
      if (this.fixed === 0) {
        return "Etc/UTC";
      } else {
        return "Etc/GMT" + formatOffset(-this.fixed, "narrow");
      }
    }
  }, {
    key: "isUniversal",
    get: function get() {
      return true;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }], [{
    key: "utcInstance",
    get:
    /**
     * Get a singleton instance of UTC
     * @return {FixedOffsetZone}
     */
    function get() {
      if (singleton === null) {
        singleton = new FixedOffsetZone(0);
      }

      return singleton;
    }
  }]);

  return FixedOffsetZone;
}(Zone);

/**
 * A zone that failed to parse. You should never need to instantiate this.
 * @implements {Zone}
 */

var InvalidZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(InvalidZone, _Zone);

  function InvalidZone(zoneName) {
    var _this;

    _this = _Zone.call(this) || this;
    /**  @private */

    _this.zoneName = zoneName;
    return _this;
  }
  /** @override **/


  var _proto = InvalidZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return null;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset() {
    return "";
  }
  /** @override **/
  ;

  _proto.offset = function offset() {
    return NaN;
  }
  /** @override **/
  ;

  _proto.equals = function equals() {
    return false;
  }
  /** @override **/
  ;

  _createClass(InvalidZone, [{
    key: "type",
    get: function get() {
      return "invalid";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "isUniversal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return false;
    }
  }]);

  return InvalidZone;
}(Zone);

/**
 * @private
 */
function normalizeZone(input, defaultZone) {

  if (isUndefined(input) || input === null) {
    return defaultZone;
  } else if (input instanceof Zone) {
    return input;
  } else if (isString(input)) {
    var lowered = input.toLowerCase();
    if (lowered === "default") return defaultZone;else if (lowered === "local" || lowered === "system") return SystemZone.instance;else if (lowered === "utc" || lowered === "gmt") return FixedOffsetZone.utcInstance;else return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);
  } else if (isNumber(input)) {
    return FixedOffsetZone.instance(input);
  } else if (typeof input === "object" && input.offset && typeof input.offset === "number") {
    // This is dumb, but the instanceof check above doesn't seem to really work
    // so we're duck checking it
    return input;
  } else {
    return new InvalidZone(input);
  }
}

var now = function now() {
  return Date.now();
},
    defaultZone = "system",
    defaultLocale = null,
    defaultNumberingSystem = null,
    defaultOutputCalendar = null,
    throwOnInvalid;
/**
 * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.
 */


var Settings = /*#__PURE__*/function () {
  function Settings() {}

  /**
   * Reset Luxon's global caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  Settings.resetCaches = function resetCaches() {
    Locale.resetCache();
    IANAZone.resetCache();
  };

  _createClass(Settings, null, [{
    key: "now",
    get:
    /**
     * Get the callback for returning the current timestamp.
     * @type {function}
     */
    function get() {
      return now;
    }
    /**
     * Set the callback for returning the current timestamp.
     * The function should return a number, which will be interpreted as an Epoch millisecond count
     * @type {function}
     * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
     * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
     */
    ,
    set: function set(n) {
      now = n;
    }
    /**
     * Set the default time zone to create DateTimes in. Does not affect existing instances.
     * Use the value "system" to reset this value to the system's time zone.
     * @type {string}
     */

  }, {
    key: "defaultZone",
    get:
    /**
     * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.
     * The default value is the system's time zone (the one set on the machine that runs this code).
     * @type {Zone}
     */
    function get() {
      return normalizeZone(defaultZone, SystemZone.instance);
    }
    /**
     * Get the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(zone) {
      defaultZone = zone;
    }
  }, {
    key: "defaultLocale",
    get: function get() {
      return defaultLocale;
    }
    /**
     * Set the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(locale) {
      defaultLocale = locale;
    }
    /**
     * Get the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultNumberingSystem",
    get: function get() {
      return defaultNumberingSystem;
    }
    /**
     * Set the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(numberingSystem) {
      defaultNumberingSystem = numberingSystem;
    }
    /**
     * Get the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultOutputCalendar",
    get: function get() {
      return defaultOutputCalendar;
    }
    /**
     * Set the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(outputCalendar) {
      defaultOutputCalendar = outputCalendar;
    }
    /**
     * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */

  }, {
    key: "throwOnInvalid",
    get: function get() {
      return throwOnInvalid;
    }
    /**
     * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */
    ,
    set: function set(t) {
      throwOnInvalid = t;
    }
  }]);

  return Settings;
}();

var _excluded = ["base"],
    _excluded2 = ["padTo", "floor"];

var intlLFCache = {};

function getCachedLF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var dtf = intlLFCache[key];

  if (!dtf) {
    dtf = new Intl.ListFormat(locString, opts);
    intlLFCache[key] = dtf;
  }

  return dtf;
}

var intlDTCache = {};

function getCachedDTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var dtf = intlDTCache[key];

  if (!dtf) {
    dtf = new Intl.DateTimeFormat(locString, opts);
    intlDTCache[key] = dtf;
  }

  return dtf;
}

var intlNumCache = {};

function getCachedINF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var inf = intlNumCache[key];

  if (!inf) {
    inf = new Intl.NumberFormat(locString, opts);
    intlNumCache[key] = inf;
  }

  return inf;
}

var intlRelCache = {};

function getCachedRTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var _opts = opts;
      _opts.base;
      var cacheKeyOpts = _objectWithoutPropertiesLoose(_opts, _excluded); // exclude `base` from the options


  var key = JSON.stringify([locString, cacheKeyOpts]);
  var inf = intlRelCache[key];

  if (!inf) {
    inf = new Intl.RelativeTimeFormat(locString, opts);
    intlRelCache[key] = inf;
  }

  return inf;
}

var sysLocaleCache = null;

function systemLocale() {
  if (sysLocaleCache) {
    return sysLocaleCache;
  } else {
    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;
    return sysLocaleCache;
  }
}

function parseLocaleString(localeStr) {
  // I really want to avoid writing a BCP 47 parser
  // see, e.g. https://github.com/wooorm/bcp-47
  // Instead, we'll do this:
  // a) if the string has no -u extensions, just leave it alone
  // b) if it does, use Intl to resolve everything
  // c) if Intl fails, try again without the -u
  var uIndex = localeStr.indexOf("-u-");

  if (uIndex === -1) {
    return [localeStr];
  } else {
    var options;
    var smaller = localeStr.substring(0, uIndex);

    try {
      options = getCachedDTF(localeStr).resolvedOptions();
    } catch (e) {
      options = getCachedDTF(smaller).resolvedOptions();
    }

    var _options = options,
        numberingSystem = _options.numberingSystem,
        calendar = _options.calendar; // return the smaller one so that we can append the calendar and numbering overrides to it

    return [smaller, numberingSystem, calendar];
  }
}

function intlConfigString(localeStr, numberingSystem, outputCalendar) {
  if (outputCalendar || numberingSystem) {
    localeStr += "-u";

    if (outputCalendar) {
      localeStr += "-ca-" + outputCalendar;
    }

    if (numberingSystem) {
      localeStr += "-nu-" + numberingSystem;
    }

    return localeStr;
  } else {
    return localeStr;
  }
}

function mapMonths(f) {
  var ms = [];

  for (var i = 1; i <= 12; i++) {
    var dt = DateTime.utc(2016, i, 1);
    ms.push(f(dt));
  }

  return ms;
}

function mapWeekdays(f) {
  var ms = [];

  for (var i = 1; i <= 7; i++) {
    var dt = DateTime.utc(2016, 11, 13 + i);
    ms.push(f(dt));
  }

  return ms;
}

function listStuff(loc, length, defaultOK, englishFn, intlFn) {
  var mode = loc.listingMode(defaultOK);

  if (mode === "error") {
    return null;
  } else if (mode === "en") {
    return englishFn(length);
  } else {
    return intlFn(length);
  }
}

function supportsFastNumbers(loc) {
  if (loc.numberingSystem && loc.numberingSystem !== "latn") {
    return false;
  } else {
    return loc.numberingSystem === "latn" || !loc.locale || loc.locale.startsWith("en") || new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === "latn";
  }
}
/**
 * @private
 */


var PolyNumberFormatter = /*#__PURE__*/function () {
  function PolyNumberFormatter(intl, forceSimple, opts) {
    this.padTo = opts.padTo || 0;
    this.floor = opts.floor || false;

    opts.padTo;
        opts.floor;
        var otherOpts = _objectWithoutPropertiesLoose(opts, _excluded2);

    if (!forceSimple || Object.keys(otherOpts).length > 0) {
      var intlOpts = _extends({
        useGrouping: false
      }, opts);

      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;
      this.inf = getCachedINF(intl, intlOpts);
    }
  }

  var _proto = PolyNumberFormatter.prototype;

  _proto.format = function format(i) {
    if (this.inf) {
      var fixed = this.floor ? Math.floor(i) : i;
      return this.inf.format(fixed);
    } else {
      // to match the browser's numberformatter defaults
      var _fixed = this.floor ? Math.floor(i) : roundTo(i, 3);

      return padStart(_fixed, this.padTo);
    }
  };

  return PolyNumberFormatter;
}();
/**
 * @private
 */


var PolyDateFormatter = /*#__PURE__*/function () {
  function PolyDateFormatter(dt, intl, opts) {
    this.opts = opts;
    var z;

    if (dt.zone.isUniversal) {
      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.
      // That is why fixed-offset TZ is set to that unless it is:
      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.
      // 2. Unsupported by the browser:
      //    - some do not support Etc/
      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata
      var gmtOffset = -1 * (dt.offset / 60);
      var offsetZ = gmtOffset >= 0 ? "Etc/GMT+" + gmtOffset : "Etc/GMT" + gmtOffset;

      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {
        z = offsetZ;
        this.dt = dt;
      } else {
        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.
        // So we have to make do. Two cases:
        // 1. The format options tell us to show the zone. We can't do that, so the best
        // we can do is format the date in UTC.
        // 2. The format options don't tell us to show the zone. Then we can adjust them
        // the time and tell the formatter to show it to us in UTC, so that the time is right
        // and the bad zone doesn't show up.
        z = "UTC";

        if (opts.timeZoneName) {
          this.dt = dt;
        } else {
          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);
        }
      }
    } else if (dt.zone.type === "system") {
      this.dt = dt;
    } else {
      this.dt = dt;
      z = dt.zone.name;
    }

    var intlOpts = _extends({}, this.opts);

    if (z) {
      intlOpts.timeZone = z;
    }

    this.dtf = getCachedDTF(intl, intlOpts);
  }

  var _proto2 = PolyDateFormatter.prototype;

  _proto2.format = function format() {
    return this.dtf.format(this.dt.toJSDate());
  };

  _proto2.formatToParts = function formatToParts() {
    return this.dtf.formatToParts(this.dt.toJSDate());
  };

  _proto2.resolvedOptions = function resolvedOptions() {
    return this.dtf.resolvedOptions();
  };

  return PolyDateFormatter;
}();
/**
 * @private
 */


var PolyRelFormatter = /*#__PURE__*/function () {
  function PolyRelFormatter(intl, isEnglish, opts) {
    this.opts = _extends({
      style: "long"
    }, opts);

    if (!isEnglish && hasRelative()) {
      this.rtf = getCachedRTF(intl, opts);
    }
  }

  var _proto3 = PolyRelFormatter.prototype;

  _proto3.format = function format(count, unit) {
    if (this.rtf) {
      return this.rtf.format(count, unit);
    } else {
      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== "long");
    }
  };

  _proto3.formatToParts = function formatToParts(count, unit) {
    if (this.rtf) {
      return this.rtf.formatToParts(count, unit);
    } else {
      return [];
    }
  };

  return PolyRelFormatter;
}();
/**
 * @private
 */


var Locale = /*#__PURE__*/function () {
  Locale.fromOpts = function fromOpts(opts) {
    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);
  };

  Locale.create = function create(locale, numberingSystem, outputCalendar, defaultToEN) {
    if (defaultToEN === void 0) {
      defaultToEN = false;
    }

    var specifiedLocale = locale || Settings.defaultLocale; // the system locale is useful for human readable strings but annoying for parsing/formatting known formats

    var localeR = specifiedLocale || (defaultToEN ? "en-US" : systemLocale());
    var numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;
    var outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;
    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);
  };

  Locale.resetCache = function resetCache() {
    sysLocaleCache = null;
    intlDTCache = {};
    intlNumCache = {};
    intlRelCache = {};
  };

  Locale.fromObject = function fromObject(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        outputCalendar = _ref.outputCalendar;

    return Locale.create(locale, numberingSystem, outputCalendar);
  };

  function Locale(locale, numbering, outputCalendar, specifiedLocale) {
    var _parseLocaleString = parseLocaleString(locale),
        parsedLocale = _parseLocaleString[0],
        parsedNumberingSystem = _parseLocaleString[1],
        parsedOutputCalendar = _parseLocaleString[2];

    this.locale = parsedLocale;
    this.numberingSystem = numbering || parsedNumberingSystem || null;
    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;
    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);
    this.weekdaysCache = {
      format: {},
      standalone: {}
    };
    this.monthsCache = {
      format: {},
      standalone: {}
    };
    this.meridiemCache = null;
    this.eraCache = {};
    this.specifiedLocale = specifiedLocale;
    this.fastNumbersCached = null;
  }

  var _proto4 = Locale.prototype;

  _proto4.listingMode = function listingMode() {
    var isActuallyEn = this.isEnglish();
    var hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");
    return isActuallyEn && hasNoWeirdness ? "en" : "intl";
  };

  _proto4.clone = function clone(alts) {
    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {
      return this;
    } else {
      return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, alts.defaultToEN || false);
    }
  };

  _proto4.redefaultToEN = function redefaultToEN(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(_extends({}, alts, {
      defaultToEN: true
    }));
  };

  _proto4.redefaultToSystem = function redefaultToSystem(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(_extends({}, alts, {
      defaultToEN: false
    }));
  };

  _proto4.months = function months$1(length, format, defaultOK) {
    var _this = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, months, function () {
      var intl = format ? {
        month: length,
        day: "numeric"
      } : {
        month: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this.monthsCache[formatStr][length]) {
        _this.monthsCache[formatStr][length] = mapMonths(function (dt) {
          return _this.extract(dt, intl, "month");
        });
      }

      return _this.monthsCache[formatStr][length];
    });
  };

  _proto4.weekdays = function weekdays$1(length, format, defaultOK) {
    var _this2 = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, weekdays, function () {
      var intl = format ? {
        weekday: length,
        year: "numeric",
        month: "long",
        day: "numeric"
      } : {
        weekday: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this2.weekdaysCache[formatStr][length]) {
        _this2.weekdaysCache[formatStr][length] = mapWeekdays(function (dt) {
          return _this2.extract(dt, intl, "weekday");
        });
      }

      return _this2.weekdaysCache[formatStr][length];
    });
  };

  _proto4.meridiems = function meridiems$1(defaultOK) {
    var _this3 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, undefined, defaultOK, function () {
      return meridiems;
    }, function () {
      // In theory there could be aribitrary day periods. We're gonna assume there are exactly two
      // for AM and PM. This is probably wrong, but it's makes parsing way easier.
      if (!_this3.meridiemCache) {
        var intl = {
          hour: "numeric",
          hourCycle: "h12"
        };
        _this3.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(function (dt) {
          return _this3.extract(dt, intl, "dayperiod");
        });
      }

      return _this3.meridiemCache;
    });
  };

  _proto4.eras = function eras$1(length, defaultOK) {
    var _this4 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, eras, function () {
      var intl = {
        era: length
      }; // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates
      // to definitely enumerate them.

      if (!_this4.eraCache[length]) {
        _this4.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(function (dt) {
          return _this4.extract(dt, intl, "era");
        });
      }

      return _this4.eraCache[length];
    });
  };

  _proto4.extract = function extract(dt, intlOpts, field) {
    var df = this.dtFormatter(dt, intlOpts),
        results = df.formatToParts(),
        matching = results.find(function (m) {
      return m.type.toLowerCase() === field;
    });
    return matching ? matching.value : null;
  };

  _proto4.numberFormatter = function numberFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)
    // (in contrast, the rest of the condition is used heavily)
    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);
  };

  _proto4.dtFormatter = function dtFormatter(dt, intlOpts) {
    if (intlOpts === void 0) {
      intlOpts = {};
    }

    return new PolyDateFormatter(dt, this.intl, intlOpts);
  };

  _proto4.relFormatter = function relFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);
  };

  _proto4.listFormatter = function listFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return getCachedLF(this.intl, opts);
  };

  _proto4.isEnglish = function isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  };

  _proto4.equals = function equals(other) {
    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;
  };

  _createClass(Locale, [{
    key: "fastNumbers",
    get: function get() {
      if (this.fastNumbersCached == null) {
        this.fastNumbersCached = supportsFastNumbers(this);
      }

      return this.fastNumbersCached;
    }
  }]);

  return Locale;
}();

/*
 * This file handles parsing for well-specified formats. Here's how it works:
 * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.
 * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object
 * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.
 * Extractors can take a "cursor" representing the offset in the match to look at. This makes it easy to combine extractors.
 * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.
 * Some extractions are super dumb and simpleParse and fromStrings help DRY them.
 */

function combineRegexes() {
  for (var _len = arguments.length, regexes = new Array(_len), _key = 0; _key < _len; _key++) {
    regexes[_key] = arguments[_key];
  }

  var full = regexes.reduce(function (f, r) {
    return f + r.source;
  }, "");
  return RegExp("^" + full + "$");
}

function combineExtractors() {
  for (var _len2 = arguments.length, extractors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    extractors[_key2] = arguments[_key2];
  }

  return function (m) {
    return extractors.reduce(function (_ref, ex) {
      var mergedVals = _ref[0],
          mergedZone = _ref[1],
          cursor = _ref[2];

      var _ex = ex(m, cursor),
          val = _ex[0],
          zone = _ex[1],
          next = _ex[2];

      return [_extends({}, mergedVals, val), zone || mergedZone, next];
    }, [{}, null, 1]).slice(0, 2);
  };
}

function parse(s) {
  if (s == null) {
    return [null, null];
  }

  for (var _len3 = arguments.length, patterns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    patterns[_key3 - 1] = arguments[_key3];
  }

  for (var _i = 0, _patterns = patterns; _i < _patterns.length; _i++) {
    var _patterns$_i = _patterns[_i],
        regex = _patterns$_i[0],
        extractor = _patterns$_i[1];
    var m = regex.exec(s);

    if (m) {
      return extractor(m);
    }
  }

  return [null, null];
}

function simpleParse() {
  for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    keys[_key4] = arguments[_key4];
  }

  return function (match, cursor) {
    var ret = {};
    var i;

    for (i = 0; i < keys.length; i++) {
      ret[keys[i]] = parseInteger(match[cursor + i]);
    }

    return [ret, null, cursor + i];
  };
} // ISO and SQL parsing


var offsetRegex = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/;
var isoExtendedZone = "(?:" + offsetRegex.source + "?(?:\\[(" + ianaRegex.source + ")\\])?)?";
var isoTimeBaseRegex = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/;
var isoTimeRegex = RegExp("" + isoTimeBaseRegex.source + isoExtendedZone);
var isoTimeExtensionRegex = RegExp("(?:T" + isoTimeRegex.source + ")?");
var isoYmdRegex = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/;
var isoWeekRegex = /(\d{4})-?W(\d\d)(?:-?(\d))?/;
var isoOrdinalRegex = /(\d{4})-?(\d{3})/;
var extractISOWeekData = simpleParse("weekYear", "weekNumber", "weekDay");
var extractISOOrdinalData = simpleParse("year", "ordinal");
var sqlYmdRegex = /(\d{4})-(\d\d)-(\d\d)/; // dumbed-down version of the ISO one

var sqlTimeRegex = RegExp(isoTimeBaseRegex.source + " ?(?:" + offsetRegex.source + "|(" + ianaRegex.source + "))?");
var sqlTimeExtensionRegex = RegExp("(?: " + sqlTimeRegex.source + ")?");

function int(match, pos, fallback) {
  var m = match[pos];
  return isUndefined(m) ? fallback : parseInteger(m);
}

function extractISOYmd(match, cursor) {
  var item = {
    year: int(match, cursor),
    month: int(match, cursor + 1, 1),
    day: int(match, cursor + 2, 1)
  };
  return [item, null, cursor + 3];
}

function extractISOTime(match, cursor) {
  var item = {
    hours: int(match, cursor, 0),
    minutes: int(match, cursor + 1, 0),
    seconds: int(match, cursor + 2, 0),
    milliseconds: parseMillis(match[cursor + 3])
  };
  return [item, null, cursor + 4];
}

function extractISOOffset(match, cursor) {
  var local = !match[cursor] && !match[cursor + 1],
      fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),
      zone = local ? null : FixedOffsetZone.instance(fullOffset);
  return [{}, zone, cursor + 3];
}

function extractIANAZone(match, cursor) {
  var zone = match[cursor] ? IANAZone.create(match[cursor]) : null;
  return [{}, zone, cursor + 1];
} // ISO time parsing


var isoTimeOnly = RegExp("^T?" + isoTimeBaseRegex.source + "$"); // ISO duration parsing

var isoDuration = /^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;

function extractISODuration(match) {
  var s = match[0],
      yearStr = match[1],
      monthStr = match[2],
      weekStr = match[3],
      dayStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      millisecondsStr = match[8];
  var hasNegativePrefix = s[0] === "-";
  var negativeSeconds = secondStr && secondStr[0] === "-";

  var maybeNegate = function maybeNegate(num, force) {
    if (force === void 0) {
      force = false;
    }

    return num !== undefined && (force || num && hasNegativePrefix) ? -num : num;
  };

  return [{
    years: maybeNegate(parseFloating(yearStr)),
    months: maybeNegate(parseFloating(monthStr)),
    weeks: maybeNegate(parseFloating(weekStr)),
    days: maybeNegate(parseFloating(dayStr)),
    hours: maybeNegate(parseFloating(hourStr)),
    minutes: maybeNegate(parseFloating(minuteStr)),
    seconds: maybeNegate(parseFloating(secondStr), secondStr === "-0"),
    milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)
  }];
} // These are a little braindead. EDT *should* tell us that we're in, say, America/New_York
// and not just that we're in -240 *right now*. But since I don't think these are used that often
// I'm just going to ignore that


var obsOffsets = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};

function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = {
    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),
    month: monthsShort.indexOf(monthStr) + 1,
    day: parseInteger(dayStr),
    hour: parseInteger(hourStr),
    minute: parseInteger(minuteStr)
  };
  if (secondStr) result.second = parseInteger(secondStr);

  if (weekdayStr) {
    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;
  }

  return result;
} // RFC 2822/5322


var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;

function extractRFC2822(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      obsOffset = match[8],
      milOffset = match[9],
      offHourStr = match[10],
      offMinuteStr = match[11],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  var offset;

  if (obsOffset) {
    offset = obsOffsets[obsOffset];
  } else if (milOffset) {
    offset = 0;
  } else {
    offset = signedOffset(offHourStr, offMinuteStr);
  }

  return [result, new FixedOffsetZone(offset)];
}

function preprocessRFC2822(s) {
  // Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
} // http date


var rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,
    rfc850 = /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,
    ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;

function extractRFC1123Or850(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

function extractASCII(match) {
  var weekdayStr = match[1],
      monthStr = match[2],
      dayStr = match[3],
      hourStr = match[4],
      minuteStr = match[5],
      secondStr = match[6],
      yearStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

var isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);
var isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);
var isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);
var isoTimeCombinedRegex = combineRegexes(isoTimeRegex);
var extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);
var extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset, extractIANAZone);
var extractISOOrdinalDateAndTime = combineExtractors(extractISOOrdinalData, extractISOTime, extractISOOffset, extractIANAZone);
var extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);
/*
 * @private
 */

function parseISODate(s) {
  return parse(s, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);
}
function parseRFC2822Date(s) {
  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);
}
function parseHTTPDate(s) {
  return parse(s, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);
}
function parseISODuration(s) {
  return parse(s, [isoDuration, extractISODuration]);
}
var extractISOTimeOnly = combineExtractors(extractISOTime);
function parseISOTimeOnly(s) {
  return parse(s, [isoTimeOnly, extractISOTimeOnly]);
}
var sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);
var sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);
var extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);
function parseSQL(s) {
  return parse(s, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);
}

var INVALID$2 = "Invalid Duration"; // unit conversion constants

var lowOrderMatrix = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1000
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1000
  },
  hours: {
    minutes: 60,
    seconds: 60 * 60,
    milliseconds: 60 * 60 * 1000
  },
  minutes: {
    seconds: 60,
    milliseconds: 60 * 1000
  },
  seconds: {
    milliseconds: 1000
  }
},
    casualMatrix = _extends({
  years: {
    quarters: 4,
    months: 12,
    weeks: 52,
    days: 365,
    hours: 365 * 24,
    minutes: 365 * 24 * 60,
    seconds: 365 * 24 * 60 * 60,
    milliseconds: 365 * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: 13,
    days: 91,
    hours: 91 * 24,
    minutes: 91 * 24 * 60,
    seconds: 91 * 24 * 60 * 60,
    milliseconds: 91 * 24 * 60 * 60 * 1000
  },
  months: {
    weeks: 4,
    days: 30,
    hours: 30 * 24,
    minutes: 30 * 24 * 60,
    seconds: 30 * 24 * 60 * 60,
    milliseconds: 30 * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix),
    daysInYearAccurate = 146097.0 / 400,
    daysInMonthAccurate = 146097.0 / 4800,
    accurateMatrix = _extends({
  years: {
    quarters: 4,
    months: 12,
    weeks: daysInYearAccurate / 7,
    days: daysInYearAccurate,
    hours: daysInYearAccurate * 24,
    minutes: daysInYearAccurate * 24 * 60,
    seconds: daysInYearAccurate * 24 * 60 * 60,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: daysInYearAccurate / 28,
    days: daysInYearAccurate / 4,
    hours: daysInYearAccurate * 24 / 4,
    minutes: daysInYearAccurate * 24 * 60 / 4,
    seconds: daysInYearAccurate * 24 * 60 * 60 / 4,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000 / 4
  },
  months: {
    weeks: daysInMonthAccurate / 7,
    days: daysInMonthAccurate,
    hours: daysInMonthAccurate * 24,
    minutes: daysInMonthAccurate * 24 * 60,
    seconds: daysInMonthAccurate * 24 * 60 * 60,
    milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix); // units ordered by size

var orderedUnits$1 = ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"];
var reverseUnits = orderedUnits$1.slice(0).reverse(); // clone really means "create another instance just like this one, but with these changes"

function clone$1(dur, alts, clear) {
  if (clear === void 0) {
    clear = false;
  }

  // deep merge for vals
  var conf = {
    values: clear ? alts.values : _extends({}, dur.values, alts.values || {}),
    loc: dur.loc.clone(alts.loc),
    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,
    matrix: alts.matrix || dur.matrix
  };
  return new Duration(conf);
}

function antiTrunc(n) {
  return n < 0 ? Math.floor(n) : Math.ceil(n);
} // NB: mutates parameters


function convert(matrix, fromMap, fromUnit, toMap, toUnit) {
  var conv = matrix[toUnit][fromUnit],
      raw = fromMap[fromUnit] / conv,
      sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),
      // ok, so this is wild, but see the matrix in the tests
  added = !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);
  toMap[toUnit] += added;
  fromMap[fromUnit] -= added * conv;
} // NB: mutates parameters


function normalizeValues(matrix, vals) {
  reverseUnits.reduce(function (previous, current) {
    if (!isUndefined(vals[current])) {
      if (previous) {
        convert(matrix, vals, previous, vals, current);
      }

      return current;
    } else {
      return previous;
    }
  }, null);
}
/**
 * A Duration object represents a period of time, like "2 months" or "1 day, 1 hour". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.
 *
 * Here is a brief overview of commonly used methods and getters in Duration:
 *
 * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.
 * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.
 * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.
 * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.
 * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}
 *
 * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.
 */


var Duration = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Duration(config) {
    var accurate = config.conversionAccuracy === "longterm" || false;
    var matrix = accurate ? accurateMatrix : casualMatrix;

    if (config.matrix) {
      matrix = config.matrix;
    }
    /**
     * @access private
     */


    this.values = config.values;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.conversionAccuracy = accurate ? "longterm" : "casual";
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.matrix = matrix;
    /**
     * @access private
     */

    this.isLuxonDuration = true;
  }
  /**
   * Create Duration from a number of milliseconds.
   * @param {number} count of milliseconds
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */


  Duration.fromMillis = function fromMillis(count, opts) {
    return Duration.fromObject({
      milliseconds: count
    }, opts);
  }
  /**
   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.
   * If this object is empty then a zero milliseconds duration is returned.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.years
   * @param {number} obj.quarters
   * @param {number} obj.months
   * @param {number} obj.weeks
   * @param {number} obj.days
   * @param {number} obj.hours
   * @param {number} obj.minutes
   * @param {number} obj.seconds
   * @param {number} obj.milliseconds
   * @param {Object} [opts=[]] - options for creating this Duration
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
   * @param {string} [opts.matrix=Object] - the custom conversion system to use
   * @return {Duration}
   */
  ;

  Duration.fromObject = function fromObject(obj, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (obj == null || typeof obj !== "object") {
      throw new InvalidArgumentError("Duration.fromObject: argument expected to be an object, got " + (obj === null ? "null" : typeof obj));
    }

    return new Duration({
      values: normalizeObject(obj, Duration.normalizeUnit),
      loc: Locale.fromObject(opts),
      conversionAccuracy: opts.conversionAccuracy,
      matrix: opts.matrix
    });
  }
  /**
   * Create a Duration from DurationLike.
   *
   * @param {Object | number | Duration} durationLike
   * One of:
   * - object with keys like 'years' and 'hours'.
   * - number representing milliseconds
   * - Duration instance
   * @return {Duration}
   */
  ;

  Duration.fromDurationLike = function fromDurationLike(durationLike) {
    if (isNumber(durationLike)) {
      return Duration.fromMillis(durationLike);
    } else if (Duration.isDuration(durationLike)) {
      return durationLike;
    } else if (typeof durationLike === "object") {
      return Duration.fromObject(durationLike);
    } else {
      throw new InvalidArgumentError("Unknown duration argument " + durationLike + " of type " + typeof durationLike);
    }
  }
  /**
   * Create a Duration from an ISO 8601 duration string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
   * @param {string} [opts.matrix=Object] - the preset conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
   * @return {Duration}
   */
  ;

  Duration.fromISO = function fromISO(text, opts) {
    var _parseISODuration = parseISODuration(text),
        parsed = _parseISODuration[0];

    if (parsed) {
      return Duration.fromObject(parsed, opts);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create a Duration from an ISO 8601 time string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
   * @param {string} [opts.matrix=Object] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @return {Duration}
   */
  ;

  Duration.fromISOTime = function fromISOTime(text, opts) {
    var _parseISOTimeOnly = parseISOTimeOnly(text),
        parsed = _parseISOTimeOnly[0];

    if (parsed) {
      return Duration.fromObject(parsed, opts);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create an invalid Duration.
   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Duration}
   */
  ;

  Duration.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Duration is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDurationError(invalid);
    } else {
      return new Duration({
        invalid: invalid
      });
    }
  }
  /**
   * @private
   */
  ;

  Duration.normalizeUnit = function normalizeUnit(unit) {
    var normalized = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[unit ? unit.toLowerCase() : unit];
    if (!normalized) throw new InvalidUnitError(unit);
    return normalized;
  }
  /**
   * Check if an object is a Duration. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Duration.isDuration = function isDuration(o) {
    return o && o.isLuxonDuration || false;
  }
  /**
   * Get  the locale of a Duration, such 'en-GB'
   * @type {string}
   */
  ;

  var _proto = Duration.prototype;

  /**
   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
   * * `S` for milliseconds
   * * `s` for seconds
   * * `m` for minutes
   * * `h` for hours
   * * `d` for days
   * * `w` for weeks
   * * `M` for months
   * * `y` for years
   * Notes:
   * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
   * * Tokens can be escaped by wrapping with single quotes.
   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.
   * @param {string} fmt - the format string
   * @param {Object} opts - options
   * @param {boolean} [opts.floor=true] - floor numerical values
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
   * @return {string}
   */
  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    // reverse-compat since 1.2; we always round down now, never up, and we do it by default
    var fmtOpts = _extends({}, opts, {
      floor: opts.round !== false && opts.floor !== false
    });

    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID$2;
  }
  /**
   * Returns a string representation of a Duration with all units included.
   * To modify its behavior use the `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat
   * @param opts - On option object to override the formatting. Accepts the same keys as the options parameter of the native `Int.NumberFormat` constructor, as well as `listStyle`.
   * @example
   * ```js
   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })
   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'
   * dur.toHuman({ listStyle: "long" }) //=> '1 day, 5 hours, and 6 minutes'
   * dur.toHuman({ unitDisplay: "short" }) //=> '1 day, 5 hr, 6 min'
   * ```
   */
  ;

  _proto.toHuman = function toHuman(opts) {
    var _this = this;

    if (opts === void 0) {
      opts = {};
    }

    var l = orderedUnits$1.map(function (unit) {
      var val = _this.values[unit];

      if (isUndefined(val)) {
        return null;
      }

      return _this.loc.numberFormatter(_extends({
        style: "unit",
        unitDisplay: "long"
      }, opts, {
        unit: unit.slice(0, -1)
      })).format(val);
    }).filter(function (n) {
      return n;
    });
    return this.loc.listFormatter(_extends({
      type: "conjunction",
      style: opts.listStyle || "narrow"
    }, opts)).format(l);
  }
  /**
   * Returns a JavaScript object with this Duration's values.
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject() {
    if (!this.isValid) return {};
    return _extends({}, this.values);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO() {
    // we could use the formatter, but this is an easier way to get the minimum string
    if (!this.isValid) return null;
    var s = "P";
    if (this.years !== 0) s += this.years + "Y";
    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + "M";
    if (this.weeks !== 0) s += this.weeks + "W";
    if (this.days !== 0) s += this.days + "D";
    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) s += "T";
    if (this.hours !== 0) s += this.hours + "H";
    if (this.minutes !== 0) s += this.minutes + "M";
    if (this.seconds !== 0 || this.milliseconds !== 0) // this will handle "floating point madness" by removing extra decimal places
      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken
      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + "S";
    if (s === "P") s += "T0S";
    return s;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return null;
    var millis = this.toMillis();
    if (millis < 0 || millis >= 86400000) return null;
    opts = _extends({
      suppressMilliseconds: false,
      suppressSeconds: false,
      includePrefix: false,
      format: "extended"
    }, opts);
    var value = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
    var fmt = opts.format === "basic" ? "hhmm" : "hh:mm";

    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {
      fmt += opts.format === "basic" ? "ss" : ":ss";

      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {
        fmt += ".SSS";
      }
    }

    var str = value.toFormat(fmt);

    if (opts.includePrefix) {
      str = "T" + str;
    }

    return str;
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.toISO();
  }
  /**
   * Returns an milliseconds value of this Duration.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.as("milliseconds");
  }
  /**
   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = Duration.fromDurationLike(duration),
        result = {};

    for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits$1), _step; !(_step = _iterator()).done;) {
      var k = _step.value;

      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {
        result[k] = dur.get(k) + this.get(k);
      }
    }

    return clone$1(this, {
      values: result
    }, true);
  }
  /**
   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = Duration.fromDurationLike(duration);
    return this.plus(dur.negate());
  }
  /**
   * Scale this Duration by the specified amount. Return a newly-constructed Duration.
   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === "hours" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
   * @return {Duration}
   */
  ;

  _proto.mapUnits = function mapUnits(fn) {
    if (!this.isValid) return this;
    var result = {};

    for (var _i = 0, _Object$keys = Object.keys(this.values); _i < _Object$keys.length; _i++) {
      var k = _Object$keys[_i];
      result[k] = asNumber(fn(this.values[k], k));
    }

    return clone$1(this, {
      values: result
    }, true);
  }
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2
   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0
   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3
   * @return {number}
   */
  ;

  _proto.get = function get(unit) {
    return this[Duration.normalizeUnit(unit)];
  }
  /**
   * "Set" the values of specified units. Return a newly-constructed Duration.
   * @param {Object} values - a mapping of units to numbers
   * @example dur.set({ years: 2017 })
   * @example dur.set({ hours: 8, minutes: 30 })
   * @return {Duration}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;

    var mixed = _extends({}, this.values, normalizeObject(values, Duration.normalizeUnit));

    return clone$1(this, {
      values: mixed
    });
  }
  /**
   * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
   * @example dur.reconfigure({ locale: 'en-GB' })
   * @return {Duration}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        conversionAccuracy = _ref.conversionAccuracy,
        matrix = _ref.matrix;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem
    });
    var opts = {
      loc: loc,
      matrix: matrix,
      conversionAccuracy: conversionAccuracy
    };
    return clone$1(this, opts);
  }
  /**
   * Return the length of the duration in the specified unit.
   * @param {string} unit - a unit such as 'minutes' or 'days'
   * @example Duration.fromObject({years: 1}).as('days') //=> 365
   * @example Duration.fromObject({years: 1}).as('months') //=> 12
   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
   * @return {number}
   */
  ;

  _proto.as = function as(unit) {
    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;
  }
  /**
   * Reduce this Duration to its canonical representation in its current units.
   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
   * @return {Duration}
   */
  ;

  _proto.normalize = function normalize() {
    if (!this.isValid) return this;
    var vals = this.toObject();
    normalizeValues(this.matrix, vals);
    return clone$1(this, {
      values: vals
    }, true);
  }
  /**
   * Convert this Duration into its representation in a different set of units.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
   * @return {Duration}
   */
  ;

  _proto.shiftTo = function shiftTo() {
    for (var _len = arguments.length, units = new Array(_len), _key = 0; _key < _len; _key++) {
      units[_key] = arguments[_key];
    }

    if (!this.isValid) return this;

    if (units.length === 0) {
      return this;
    }

    units = units.map(function (u) {
      return Duration.normalizeUnit(u);
    });
    var built = {},
        accumulated = {},
        vals = this.toObject();
    var lastUnit;

    for (var _iterator2 = _createForOfIteratorHelperLoose(orderedUnits$1), _step2; !(_step2 = _iterator2()).done;) {
      var k = _step2.value;

      if (units.indexOf(k) >= 0) {
        lastUnit = k;
        var own = 0; // anything we haven't boiled down yet should get boiled to this unit

        for (var ak in accumulated) {
          own += this.matrix[ak][k] * accumulated[ak];
          accumulated[ak] = 0;
        } // plus anything that's already in this unit


        if (isNumber(vals[k])) {
          own += vals[k];
        }

        var i = Math.trunc(own);
        built[k] = i;
        accumulated[k] = (own * 1000 - i * 1000) / 1000; // plus anything further down the chain that should be rolled up in to this

        for (var down in vals) {
          if (orderedUnits$1.indexOf(down) > orderedUnits$1.indexOf(k)) {
            convert(this.matrix, vals, down, built, k);
          }
        } // otherwise, keep it in the wings to boil it later

      } else if (isNumber(vals[k])) {
        accumulated[k] = vals[k];
      }
    } // anything leftover becomes the decimal for the last unit
    // lastUnit must be defined since units is not empty


    for (var key in accumulated) {
      if (accumulated[key] !== 0) {
        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];
      }
    }

    return clone$1(this, {
      values: built
    }, true).normalize();
  }
  /**
   * Return the negative of this Duration.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
   * @return {Duration}
   */
  ;

  _proto.negate = function negate() {
    if (!this.isValid) return this;
    var negated = {};

    for (var _i2 = 0, _Object$keys2 = Object.keys(this.values); _i2 < _Object$keys2.length; _i2++) {
      var k = _Object$keys2[_i2];
      negated[k] = this.values[k] === 0 ? 0 : -this.values[k];
    }

    return clone$1(this, {
      values: negated
    }, true);
  }
  /**
   * Get the years.
   * @type {number}
   */
  ;

  /**
   * Equality check
   * Two Durations are equal iff they have the same units and the same values for each unit.
   * @param {Duration} other
   * @return {boolean}
   */
  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    if (!this.loc.equals(other.loc)) {
      return false;
    }

    function eq(v1, v2) {
      // Consider 0 and undefined as equal
      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;
      return v1 === v2;
    }

    for (var _iterator3 = _createForOfIteratorHelperLoose(orderedUnits$1), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;

      if (!eq(this.values[u], other.values[u])) {
        return false;
      }
    }

    return true;
  };

  _createClass(Duration, [{
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
  }, {
    key: "years",
    get: function get() {
      return this.isValid ? this.values.years || 0 : NaN;
    }
    /**
     * Get the quarters.
     * @type {number}
     */

  }, {
    key: "quarters",
    get: function get() {
      return this.isValid ? this.values.quarters || 0 : NaN;
    }
    /**
     * Get the months.
     * @type {number}
     */

  }, {
    key: "months",
    get: function get() {
      return this.isValid ? this.values.months || 0 : NaN;
    }
    /**
     * Get the weeks
     * @type {number}
     */

  }, {
    key: "weeks",
    get: function get() {
      return this.isValid ? this.values.weeks || 0 : NaN;
    }
    /**
     * Get the days.
     * @type {number}
     */

  }, {
    key: "days",
    get: function get() {
      return this.isValid ? this.values.days || 0 : NaN;
    }
    /**
     * Get the hours.
     * @type {number}
     */

  }, {
    key: "hours",
    get: function get() {
      return this.isValid ? this.values.hours || 0 : NaN;
    }
    /**
     * Get the minutes.
     * @type {number}
     */

  }, {
    key: "minutes",
    get: function get() {
      return this.isValid ? this.values.minutes || 0 : NaN;
    }
    /**
     * Get the seconds.
     * @return {number}
     */

  }, {
    key: "seconds",
    get: function get() {
      return this.isValid ? this.values.seconds || 0 : NaN;
    }
    /**
     * Get the milliseconds.
     * @return {number}
     */

  }, {
    key: "milliseconds",
    get: function get() {
      return this.isValid ? this.values.milliseconds || 0 : NaN;
    }
    /**
     * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
     * on invalid DateTimes or Intervals.
     * @return {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this Duration became invalid, or null if the Duration is valid
     * @return {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Duration;
}();

var INVALID$1 = "Invalid Interval"; // checks if the start is equal to or before the end

function validateStartEnd(start, end) {
  if (!start || !start.isValid) {
    return Interval.invalid("missing or invalid start");
  } else if (!end || !end.isValid) {
    return Interval.invalid("missing or invalid end");
  } else if (end < start) {
    return Interval.invalid("end before start", "The end of an interval must be after its start, but you had start=" + start.toISO() + " and end=" + end.toISO());
  } else {
    return null;
  }
}
/**
 * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.
 *
 * Here is a brief overview of the most commonly used methods and getters in Interval:
 *
 * * **Creation** To create an Interval, use {@link Interval.fromDateTimes}, {@link Interval.after}, {@link Interval.before}, or {@link Interval.fromISO}.
 * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.
 * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.
 * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval.merge}, {@link Interval.xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.
 * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}
 * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.
 */


var Interval = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Interval(config) {
    /**
     * @access private
     */
    this.s = config.start;
    /**
     * @access private
     */

    this.e = config.end;
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.isLuxonInterval = true;
  }
  /**
   * Create an invalid Interval.
   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Interval}
   */


  Interval.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Interval is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidIntervalError(invalid);
    } else {
      return new Interval({
        invalid: invalid
      });
    }
  }
  /**
   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
   * @param {DateTime|Date|Object} start
   * @param {DateTime|Date|Object} end
   * @return {Interval}
   */
  ;

  Interval.fromDateTimes = function fromDateTimes(start, end) {
    var builtStart = friendlyDateTime(start),
        builtEnd = friendlyDateTime(end);
    var validateError = validateStartEnd(builtStart, builtEnd);

    if (validateError == null) {
      return new Interval({
        start: builtStart,
        end: builtEnd
      });
    } else {
      return validateError;
    }
  }
  /**
   * Create an Interval from a start DateTime and a Duration to extend to.
   * @param {DateTime|Date|Object} start
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.after = function after(start, duration) {
    var dur = Duration.fromDurationLike(duration),
        dt = friendlyDateTime(start);
    return Interval.fromDateTimes(dt, dt.plus(dur));
  }
  /**
   * Create an Interval from an end DateTime and a Duration to extend backwards to.
   * @param {DateTime|Date|Object} end
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.before = function before(end, duration) {
    var dur = Duration.fromDurationLike(duration),
        dt = friendlyDateTime(end);
    return Interval.fromDateTimes(dt.minus(dur), dt);
  }
  /**
   * Create an Interval from an ISO 8601 string.
   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
   * @param {string} text - the ISO string to parse
   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {Interval}
   */
  ;

  Interval.fromISO = function fromISO(text, opts) {
    var _split = (text || "").split("/", 2),
        s = _split[0],
        e = _split[1];

    if (s && e) {
      var start, startIsValid;

      try {
        start = DateTime.fromISO(s, opts);
        startIsValid = start.isValid;
      } catch (e) {
        startIsValid = false;
      }

      var end, endIsValid;

      try {
        end = DateTime.fromISO(e, opts);
        endIsValid = end.isValid;
      } catch (e) {
        endIsValid = false;
      }

      if (startIsValid && endIsValid) {
        return Interval.fromDateTimes(start, end);
      }

      if (startIsValid) {
        var dur = Duration.fromISO(e, opts);

        if (dur.isValid) {
          return Interval.after(start, dur);
        }
      } else if (endIsValid) {
        var _dur = Duration.fromISO(s, opts);

        if (_dur.isValid) {
          return Interval.before(end, _dur);
        }
      }
    }

    return Interval.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
  }
  /**
   * Check if an object is an Interval. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Interval.isInterval = function isInterval(o) {
    return o && o.isLuxonInterval || false;
  }
  /**
   * Returns the start of the Interval
   * @type {DateTime}
   */
  ;

  var _proto = Interval.prototype;

  /**
   * Returns the length of the Interval in the specified unit.
   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
   * @return {number}
   */
  _proto.length = function length(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    return this.isValid ? this.toDuration.apply(this, [unit]).get(unit) : NaN;
  }
  /**
   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
   * @param {string} [unit='milliseconds'] - the unit of time to count.
   * @return {number}
   */
  ;

  _proto.count = function count(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (!this.isValid) return NaN;
    var start = this.start.startOf(unit),
        end = this.end.startOf(unit);
    return Math.floor(end.diff(start, unit).get(unit)) + 1;
  }
  /**
   * Returns whether this Interval's start and end are both in the same unit of time
   * @param {string} unit - the unit of time to check sameness on
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(unit) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;
  }
  /**
   * Return whether this Interval has the same start and end DateTimes.
   * @return {boolean}
   */
  ;

  _proto.isEmpty = function isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  /**
   * Return whether this Interval's start is after the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isAfter = function isAfter(dateTime) {
    if (!this.isValid) return false;
    return this.s > dateTime;
  }
  /**
   * Return whether this Interval's end is before the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isBefore = function isBefore(dateTime) {
    if (!this.isValid) return false;
    return this.e <= dateTime;
  }
  /**
   * Return whether this Interval contains the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.contains = function contains(dateTime) {
    if (!this.isValid) return false;
    return this.s <= dateTime && this.e > dateTime;
  }
  /**
   * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
   * @param {Object} values - the values to set
   * @param {DateTime} values.start - the starting DateTime
   * @param {DateTime} values.end - the ending DateTime
   * @return {Interval}
   */
  ;

  _proto.set = function set(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        start = _ref.start,
        end = _ref.end;

    if (!this.isValid) return this;
    return Interval.fromDateTimes(start || this.s, end || this.e);
  }
  /**
   * Split this Interval at each of the specified DateTimes
   * @param {...DateTime} dateTimes - the unit of time to count.
   * @return {Array}
   */
  ;

  _proto.splitAt = function splitAt() {
    var _this = this;

    if (!this.isValid) return [];

    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    var sorted = dateTimes.map(friendlyDateTime).filter(function (d) {
      return _this.contains(d);
    }).sort(),
        results = [];
    var s = this.s,
        i = 0;

    while (s < this.e) {
      var added = sorted[i] || this.e,
          next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      i += 1;
    }

    return results;
  }
  /**
   * Split this Interval into smaller Intervals, each of the specified length.
   * Left over time is grouped into a smaller interval
   * @param {Duration|Object|number} duration - The length of each resulting interval.
   * @return {Array}
   */
  ;

  _proto.splitBy = function splitBy(duration) {
    var dur = Duration.fromDurationLike(duration);

    if (!this.isValid || !dur.isValid || dur.as("milliseconds") === 0) {
      return [];
    }

    var s = this.s,
        idx = 1,
        next;
    var results = [];

    while (s < this.e) {
      var added = this.start.plus(dur.mapUnits(function (x) {
        return x * idx;
      }));
      next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      idx += 1;
    }

    return results;
  }
  /**
   * Split this Interval into the specified number of smaller intervals.
   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
   * @return {Array}
   */
  ;

  _proto.divideEqually = function divideEqually(numberOfParts) {
    if (!this.isValid) return [];
    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);
  }
  /**
   * Return whether this Interval overlaps with the specified Interval
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.overlaps = function overlaps(other) {
    return this.e > other.s && this.s < other.e;
  }
  /**
   * Return whether this Interval's end is adjacent to the specified Interval's start.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsStart = function abutsStart(other) {
    if (!this.isValid) return false;
    return +this.e === +other.s;
  }
  /**
   * Return whether this Interval's start is adjacent to the specified Interval's end.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsEnd = function abutsEnd(other) {
    if (!this.isValid) return false;
    return +other.e === +this.s;
  }
  /**
   * Return whether this Interval engulfs the start and end of the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.engulfs = function engulfs(other) {
    if (!this.isValid) return false;
    return this.s <= other.s && this.e >= other.e;
  }
  /**
   * Return whether this Interval has the same start and end as the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    return this.s.equals(other.s) && this.e.equals(other.e);
  }
  /**
   * Return an Interval representing the intersection of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
   * Returns null if the intersection is empty, meaning, the intervals don't intersect.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.intersection = function intersection(other) {
    if (!this.isValid) return this;
    var s = this.s > other.s ? this.s : other.s,
        e = this.e < other.e ? this.e : other.e;

    if (s >= e) {
      return null;
    } else {
      return Interval.fromDateTimes(s, e);
    }
  }
  /**
   * Return an Interval representing the union of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.union = function union(other) {
    if (!this.isValid) return this;
    var s = this.s < other.s ? this.s : other.s,
        e = this.e > other.e ? this.e : other.e;
    return Interval.fromDateTimes(s, e);
  }
  /**
   * Merge an array of Intervals into a equivalent minimal set of Intervals.
   * Combines overlapping and adjacent Intervals.
   * @param {Array} intervals
   * @return {Array}
   */
  ;

  Interval.merge = function merge(intervals) {
    var _intervals$sort$reduc = intervals.sort(function (a, b) {
      return a.s - b.s;
    }).reduce(function (_ref2, item) {
      var sofar = _ref2[0],
          current = _ref2[1];

      if (!current) {
        return [sofar, item];
      } else if (current.overlaps(item) || current.abutsStart(item)) {
        return [sofar, current.union(item)];
      } else {
        return [sofar.concat([current]), item];
      }
    }, [[], null]),
        found = _intervals$sort$reduc[0],
        final = _intervals$sort$reduc[1];

    if (final) {
      found.push(final);
    }

    return found;
  }
  /**
   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
   * @param {Array} intervals
   * @return {Array}
   */
  ;

  Interval.xor = function xor(intervals) {
    var _Array$prototype;

    var start = null,
        currentCount = 0;

    var results = [],
        ends = intervals.map(function (i) {
      return [{
        time: i.s,
        type: "s"
      }, {
        time: i.e,
        type: "e"
      }];
    }),
        flattened = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, ends),
        arr = flattened.sort(function (a, b) {
      return a.time - b.time;
    });

    for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {
      var i = _step.value;
      currentCount += i.type === "s" ? 1 : -1;

      if (currentCount === 1) {
        start = i.time;
      } else {
        if (start && +start !== +i.time) {
          results.push(Interval.fromDateTimes(start, i.time));
        }

        start = null;
      }
    }

    return Interval.merge(results);
  }
  /**
   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
   * @param {...Interval} intervals
   * @return {Array}
   */
  ;

  _proto.difference = function difference() {
    var _this2 = this;

    for (var _len2 = arguments.length, intervals = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      intervals[_key2] = arguments[_key2];
    }

    return Interval.xor([this].concat(intervals)).map(function (i) {
      return _this2.intersection(i);
    }).filter(function (i) {
      return i && !i.isEmpty();
    });
  }
  /**
   * Returns a string representation of this Interval appropriate for debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    if (!this.isValid) return INVALID$1;
    return "[" + this.s.toISO() + " \u2013 " + this.e.toISO() + ")";
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Interval.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime#toISO}
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISO(opts) + "/" + this.e.toISO(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of date of this Interval.
   * The time components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate() {
    if (!this.isValid) return INVALID$1;
    return this.s.toISODate() + "/" + this.e.toISODate();
  }
  /**
   * Returns an ISO 8601-compliant string representation of time of this Interval.
   * The date components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime#toISO}
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISOTime(opts) + "/" + this.e.toISOTime(opts);
  }
  /**
   * Returns a string representation of this Interval formatted according to the specified format string.
   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime#toFormat} for details.
   * @param {Object} opts - options
   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(dateFormat, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2,
        _ref3$separator = _ref3.separator,
        separator = _ref3$separator === void 0 ? " – " : _ref3$separator;

    if (!this.isValid) return INVALID$1;
    return "" + this.s.toFormat(dateFormat) + separator + this.e.toFormat(dateFormat);
  }
  /**
   * Return a Duration representing the time spanned by this interval.
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
   * @return {Duration}
   */
  ;

  _proto.toDuration = function toDuration(unit, opts) {
    if (!this.isValid) {
      return Duration.invalid(this.invalidReason);
    }

    return this.e.diff(this.s, unit, opts);
  }
  /**
   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
   * @param {function} mapFn
   * @return {Interval}
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
   */
  ;

  _proto.mapEndpoints = function mapEndpoints(mapFn) {
    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));
  };

  _createClass(Interval, [{
    key: "start",
    get: function get() {
      return this.isValid ? this.s : null;
    }
    /**
     * Returns the end of the Interval
     * @type {DateTime}
     */

  }, {
    key: "end",
    get: function get() {
      return this.isValid ? this.e : null;
    }
    /**
     * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
     * @type {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalidReason === null;
    }
    /**
     * Returns an error code if this Interval is invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Interval;
}();

/**
 * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.
 */

var Info = /*#__PURE__*/function () {
  function Info() {}

  /**
   * Return whether the specified zone contains a DST.
   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
   * @return {boolean}
   */
  Info.hasDST = function hasDST(zone) {
    if (zone === void 0) {
      zone = Settings.defaultZone;
    }

    var proto = DateTime.now().setZone(zone).set({
      month: 12
    });
    return !zone.isUniversal && proto.offset !== proto.set({
      month: 6
    }).offset;
  }
  /**
   * Return whether the specified zone is a valid IANA specifier.
   * @param {string} zone - Zone to check
   * @return {boolean}
   */
  ;

  Info.isValidIANAZone = function isValidIANAZone(zone) {
    return IANAZone.isValidZone(zone);
  }
  /**
   * Converts the input into a {@link Zone} instance.
   *
   * * If `input` is already a Zone instance, it is returned unchanged.
   * * If `input` is a string containing a valid time zone name, a Zone instance
   *   with that name is returned.
   * * If `input` is a string that doesn't refer to a known time zone, a Zone
   *   instance with {@link Zone#isValid} == false is returned.
   * * If `input is a number, a Zone instance with the specified fixed offset
   *   in minutes is returned.
   * * If `input` is `null` or `undefined`, the default zone is returned.
   * @param {string|Zone|number} [input] - the value to be converted
   * @return {Zone}
   */
  ;

  Info.normalizeZone = function normalizeZone$1(input) {
    return normalizeZone(input, Settings.defaultZone);
  }
  /**
   * Return an array of standalone month names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @example Info.months()[0] //=> 'January'
   * @example Info.months('short')[0] //=> 'Jan'
   * @example Info.months('numeric')[0] //=> '1'
   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
   * @return {Array}
   */
  ;

  Info.months = function months(length, _temp) {
    if (length === void 0) {
      length = "long";
    }

    var _ref = _temp === void 0 ? {} : _temp,
        _ref$locale = _ref.locale,
        locale = _ref$locale === void 0 ? null : _ref$locale,
        _ref$numberingSystem = _ref.numberingSystem,
        numberingSystem = _ref$numberingSystem === void 0 ? null : _ref$numberingSystem,
        _ref$locObj = _ref.locObj,
        locObj = _ref$locObj === void 0 ? null : _ref$locObj,
        _ref$outputCalendar = _ref.outputCalendar,
        outputCalendar = _ref$outputCalendar === void 0 ? "gregory" : _ref$outputCalendar;

    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);
  }
  /**
   * Return an array of format month names.
   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
   * changes the string.
   * See {@link Info#months}
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @return {Array}
   */
  ;

  Info.monthsFormat = function monthsFormat(length, _temp2) {
    if (length === void 0) {
      length = "long";
    }

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        _ref2$locale = _ref2.locale,
        locale = _ref2$locale === void 0 ? null : _ref2$locale,
        _ref2$numberingSystem = _ref2.numberingSystem,
        numberingSystem = _ref2$numberingSystem === void 0 ? null : _ref2$numberingSystem,
        _ref2$locObj = _ref2.locObj,
        locObj = _ref2$locObj === void 0 ? null : _ref2$locObj,
        _ref2$outputCalendar = _ref2.outputCalendar,
        outputCalendar = _ref2$outputCalendar === void 0 ? "gregory" : _ref2$outputCalendar;

    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);
  }
  /**
   * Return an array of standalone week names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @example Info.weekdays()[0] //=> 'Monday'
   * @example Info.weekdays('short')[0] //=> 'Mon'
   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
   * @return {Array}
   */
  ;

  Info.weekdays = function weekdays(length, _temp3) {
    if (length === void 0) {
      length = "long";
    }

    var _ref3 = _temp3 === void 0 ? {} : _temp3,
        _ref3$locale = _ref3.locale,
        locale = _ref3$locale === void 0 ? null : _ref3$locale,
        _ref3$numberingSystem = _ref3.numberingSystem,
        numberingSystem = _ref3$numberingSystem === void 0 ? null : _ref3$numberingSystem,
        _ref3$locObj = _ref3.locObj,
        locObj = _ref3$locObj === void 0 ? null : _ref3$locObj;

    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);
  }
  /**
   * Return an array of format week names.
   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
   * changes the string.
   * See {@link Info#weekdays}
   * @param {string} [length='long'] - the length of the month representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale=null] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @return {Array}
   */
  ;

  Info.weekdaysFormat = function weekdaysFormat(length, _temp4) {
    if (length === void 0) {
      length = "long";
    }

    var _ref4 = _temp4 === void 0 ? {} : _temp4,
        _ref4$locale = _ref4.locale,
        locale = _ref4$locale === void 0 ? null : _ref4$locale,
        _ref4$numberingSystem = _ref4.numberingSystem,
        numberingSystem = _ref4$numberingSystem === void 0 ? null : _ref4$numberingSystem,
        _ref4$locObj = _ref4.locObj,
        locObj = _ref4$locObj === void 0 ? null : _ref4$locObj;

    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);
  }
  /**
   * Return an array of meridiems.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.meridiems() //=> [ 'AM', 'PM' ]
   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
   * @return {Array}
   */
  ;

  Info.meridiems = function meridiems(_temp5) {
    var _ref5 = _temp5 === void 0 ? {} : _temp5,
        _ref5$locale = _ref5.locale,
        locale = _ref5$locale === void 0 ? null : _ref5$locale;

    return Locale.create(locale).meridiems();
  }
  /**
   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
   * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.eras() //=> [ 'BC', 'AD' ]
   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
   * @return {Array}
   */
  ;

  Info.eras = function eras(length, _temp6) {
    if (length === void 0) {
      length = "short";
    }

    var _ref6 = _temp6 === void 0 ? {} : _temp6,
        _ref6$locale = _ref6.locale,
        locale = _ref6$locale === void 0 ? null : _ref6$locale;

    return Locale.create(locale, null, "gregory").eras(length);
  }
  /**
   * Return the set of available features in this environment.
   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.
   * Keys:
   * * `relative`: whether this environment supports relative time formatting
   * @example Info.features() //=> { relative: false }
   * @return {Object}
   */
  ;

  Info.features = function features() {
    return {
      relative: hasRelative()
    };
  };

  return Info;
}();

function dayDiff(earlier, later) {
  var utcDayStart = function utcDayStart(dt) {
    return dt.toUTC(0, {
      keepLocalTime: true
    }).startOf("day").valueOf();
  },
      ms = utcDayStart(later) - utcDayStart(earlier);

  return Math.floor(Duration.fromMillis(ms).as("days"));
}

function highOrderDiffs(cursor, later, units) {
  var differs = [["years", function (a, b) {
    return b.year - a.year;
  }], ["quarters", function (a, b) {
    return b.quarter - a.quarter;
  }], ["months", function (a, b) {
    return b.month - a.month + (b.year - a.year) * 12;
  }], ["weeks", function (a, b) {
    var days = dayDiff(a, b);
    return (days - days % 7) / 7;
  }], ["days", dayDiff]];
  var results = {};
  var lowestOrder, highWater;

  for (var _i = 0, _differs = differs; _i < _differs.length; _i++) {
    var _differs$_i = _differs[_i],
        unit = _differs$_i[0],
        differ = _differs$_i[1];

    if (units.indexOf(unit) >= 0) {
      var _cursor$plus;

      lowestOrder = unit;
      var delta = differ(cursor, later);
      highWater = cursor.plus((_cursor$plus = {}, _cursor$plus[unit] = delta, _cursor$plus));

      if (highWater > later) {
        var _cursor$plus2;

        cursor = cursor.plus((_cursor$plus2 = {}, _cursor$plus2[unit] = delta - 1, _cursor$plus2));
        delta -= 1;
      } else {
        cursor = highWater;
      }

      results[unit] = delta;
    }
  }

  return [cursor, results, highWater, lowestOrder];
}

function _diff (earlier, later, units, opts) {
  var _highOrderDiffs = highOrderDiffs(earlier, later, units),
      cursor = _highOrderDiffs[0],
      results = _highOrderDiffs[1],
      highWater = _highOrderDiffs[2],
      lowestOrder = _highOrderDiffs[3];

  var remainingMillis = later - cursor;
  var lowerOrderUnits = units.filter(function (u) {
    return ["hours", "minutes", "seconds", "milliseconds"].indexOf(u) >= 0;
  });

  if (lowerOrderUnits.length === 0) {
    if (highWater < later) {
      var _cursor$plus3;

      highWater = cursor.plus((_cursor$plus3 = {}, _cursor$plus3[lowestOrder] = 1, _cursor$plus3));
    }

    if (highWater !== cursor) {
      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);
    }
  }

  var duration = Duration.fromObject(results, opts);

  if (lowerOrderUnits.length > 0) {
    var _Duration$fromMillis;

    return (_Duration$fromMillis = Duration.fromMillis(remainingMillis, opts)).shiftTo.apply(_Duration$fromMillis, lowerOrderUnits).plus(duration);
  } else {
    return duration;
  }
}

var numberingSystems = {
  arab: "[\u0660-\u0669]",
  arabext: "[\u06F0-\u06F9]",
  bali: "[\u1B50-\u1B59]",
  beng: "[\u09E6-\u09EF]",
  deva: "[\u0966-\u096F]",
  fullwide: "[\uFF10-\uFF19]",
  gujr: "[\u0AE6-\u0AEF]",
  hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
  khmr: "[\u17E0-\u17E9]",
  knda: "[\u0CE6-\u0CEF]",
  laoo: "[\u0ED0-\u0ED9]",
  limb: "[\u1946-\u194F]",
  mlym: "[\u0D66-\u0D6F]",
  mong: "[\u1810-\u1819]",
  mymr: "[\u1040-\u1049]",
  orya: "[\u0B66-\u0B6F]",
  tamldec: "[\u0BE6-\u0BEF]",
  telu: "[\u0C66-\u0C6F]",
  thai: "[\u0E50-\u0E59]",
  tibt: "[\u0F20-\u0F29]",
  latn: "\\d"
};
var numberingSystemsUTF16 = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
};
var hanidecChars = numberingSystems.hanidec.replace(/[\[|\]]/g, "").split("");
function parseDigits(str) {
  var value = parseInt(str, 10);

  if (isNaN(value)) {
    value = "";

    for (var i = 0; i < str.length; i++) {
      var code = str.charCodeAt(i);

      if (str[i].search(numberingSystems.hanidec) !== -1) {
        value += hanidecChars.indexOf(str[i]);
      } else {
        for (var key in numberingSystemsUTF16) {
          var _numberingSystemsUTF = numberingSystemsUTF16[key],
              min = _numberingSystemsUTF[0],
              max = _numberingSystemsUTF[1];

          if (code >= min && code <= max) {
            value += code - min;
          }
        }
      }
    }

    return parseInt(value, 10);
  } else {
    return value;
  }
}
function digitRegex(_ref, append) {
  var numberingSystem = _ref.numberingSystem;

  if (append === void 0) {
    append = "";
  }

  return new RegExp("" + numberingSystems[numberingSystem || "latn"] + append);
}

var MISSING_FTP = "missing Intl.DateTimeFormat.formatToParts support";

function intUnit(regex, post) {
  if (post === void 0) {
    post = function post(i) {
      return i;
    };
  }

  return {
    regex: regex,
    deser: function deser(_ref) {
      var s = _ref[0];
      return post(parseDigits(s));
    }
  };
}

var NBSP = String.fromCharCode(160);
var spaceOrNBSP = "[ " + NBSP + "]";
var spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, "g");

function fixListRegex(s) {
  // make dots optional and also make them literal
  // make space and non breakable space characters interchangeable
  return s.replace(/\./g, "\\.?").replace(spaceOrNBSPRegExp, spaceOrNBSP);
}

function stripInsensitivities(s) {
  return s.replace(/\./g, "") // ignore dots that were made optional
  .replace(spaceOrNBSPRegExp, " ") // interchange space and nbsp
  .toLowerCase();
}

function oneOf(strings, startIndex) {
  if (strings === null) {
    return null;
  } else {
    return {
      regex: RegExp(strings.map(fixListRegex).join("|")),
      deser: function deser(_ref2) {
        var s = _ref2[0];
        return strings.findIndex(function (i) {
          return stripInsensitivities(s) === stripInsensitivities(i);
        }) + startIndex;
      }
    };
  }
}

function offset(regex, groups) {
  return {
    regex: regex,
    deser: function deser(_ref3) {
      var h = _ref3[1],
          m = _ref3[2];
      return signedOffset(h, m);
    },
    groups: groups
  };
}

function simple(regex) {
  return {
    regex: regex,
    deser: function deser(_ref4) {
      var s = _ref4[0];
      return s;
    }
  };
}

function escapeToken(value) {
  return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}

function unitForToken(token, loc) {
  var one = digitRegex(loc),
      two = digitRegex(loc, "{2}"),
      three = digitRegex(loc, "{3}"),
      four = digitRegex(loc, "{4}"),
      six = digitRegex(loc, "{6}"),
      oneOrTwo = digitRegex(loc, "{1,2}"),
      oneToThree = digitRegex(loc, "{1,3}"),
      oneToSix = digitRegex(loc, "{1,6}"),
      oneToNine = digitRegex(loc, "{1,9}"),
      twoToFour = digitRegex(loc, "{2,4}"),
      fourToSix = digitRegex(loc, "{4,6}"),
      literal = function literal(t) {
    return {
      regex: RegExp(escapeToken(t.val)),
      deser: function deser(_ref5) {
        var s = _ref5[0];
        return s;
      },
      literal: true
    };
  },
      unitate = function unitate(t) {
    if (token.literal) {
      return literal(t);
    }

    switch (t.val) {
      // era
      case "G":
        return oneOf(loc.eras("short", false), 0);

      case "GG":
        return oneOf(loc.eras("long", false), 0);
      // years

      case "y":
        return intUnit(oneToSix);

      case "yy":
        return intUnit(twoToFour, untruncateYear);

      case "yyyy":
        return intUnit(four);

      case "yyyyy":
        return intUnit(fourToSix);

      case "yyyyyy":
        return intUnit(six);
      // months

      case "M":
        return intUnit(oneOrTwo);

      case "MM":
        return intUnit(two);

      case "MMM":
        return oneOf(loc.months("short", true, false), 1);

      case "MMMM":
        return oneOf(loc.months("long", true, false), 1);

      case "L":
        return intUnit(oneOrTwo);

      case "LL":
        return intUnit(two);

      case "LLL":
        return oneOf(loc.months("short", false, false), 1);

      case "LLLL":
        return oneOf(loc.months("long", false, false), 1);
      // dates

      case "d":
        return intUnit(oneOrTwo);

      case "dd":
        return intUnit(two);
      // ordinals

      case "o":
        return intUnit(oneToThree);

      case "ooo":
        return intUnit(three);
      // time

      case "HH":
        return intUnit(two);

      case "H":
        return intUnit(oneOrTwo);

      case "hh":
        return intUnit(two);

      case "h":
        return intUnit(oneOrTwo);

      case "mm":
        return intUnit(two);

      case "m":
        return intUnit(oneOrTwo);

      case "q":
        return intUnit(oneOrTwo);

      case "qq":
        return intUnit(two);

      case "s":
        return intUnit(oneOrTwo);

      case "ss":
        return intUnit(two);

      case "S":
        return intUnit(oneToThree);

      case "SSS":
        return intUnit(three);

      case "u":
        return simple(oneToNine);

      case "uu":
        return simple(oneOrTwo);

      case "uuu":
        return intUnit(one);
      // meridiem

      case "a":
        return oneOf(loc.meridiems(), 0);
      // weekYear (k)

      case "kkkk":
        return intUnit(four);

      case "kk":
        return intUnit(twoToFour, untruncateYear);
      // weekNumber (W)

      case "W":
        return intUnit(oneOrTwo);

      case "WW":
        return intUnit(two);
      // weekdays

      case "E":
      case "c":
        return intUnit(one);

      case "EEE":
        return oneOf(loc.weekdays("short", false, false), 1);

      case "EEEE":
        return oneOf(loc.weekdays("long", false, false), 1);

      case "ccc":
        return oneOf(loc.weekdays("short", true, false), 1);

      case "cccc":
        return oneOf(loc.weekdays("long", true, false), 1);
      // offset/zone

      case "Z":
      case "ZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(?::(" + two.source + "))?"), 2);

      case "ZZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(" + two.source + ")?"), 2);
      // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing
      // because we don't have any way to figure out what they are

      case "z":
        return simple(/[a-z_+-/]{1,256}?/i);

      default:
        return literal(t);
    }
  };

  var unit = unitate(token) || {
    invalidReason: MISSING_FTP
  };
  unit.token = token;
  return unit;
}

var partTypeStyleToTokenVal = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour: {
    numeric: "h",
    "2-digit": "hh"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  },
  timeZoneName: {
    long: "ZZZZZ",
    short: "ZZZ"
  }
};

function tokenForPart(part, locale, formatOpts) {
  var type = part.type,
      value = part.value;

  if (type === "literal") {
    return {
      literal: true,
      val: value
    };
  }

  var style = formatOpts[type];
  var val = partTypeStyleToTokenVal[type];

  if (typeof val === "object") {
    val = val[style];
  }

  if (val) {
    return {
      literal: false,
      val: val
    };
  }

  return undefined;
}

function buildRegex(units) {
  var re = units.map(function (u) {
    return u.regex;
  }).reduce(function (f, r) {
    return f + "(" + r.source + ")";
  }, "");
  return ["^" + re + "$", units];
}

function match(input, regex, handlers) {
  var matches = input.match(regex);

  if (matches) {
    var all = {};
    var matchIndex = 1;

    for (var i in handlers) {
      if (hasOwnProperty(handlers, i)) {
        var h = handlers[i],
            groups = h.groups ? h.groups + 1 : 1;

        if (!h.literal && h.token) {
          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));
        }

        matchIndex += groups;
      }
    }

    return [matches, all];
  } else {
    return [matches, {}];
  }
}

function dateTimeFromMatches(matches) {
  var toField = function toField(token) {
    switch (token) {
      case "S":
        return "millisecond";

      case "s":
        return "second";

      case "m":
        return "minute";

      case "h":
      case "H":
        return "hour";

      case "d":
        return "day";

      case "o":
        return "ordinal";

      case "L":
      case "M":
        return "month";

      case "y":
        return "year";

      case "E":
      case "c":
        return "weekday";

      case "W":
        return "weekNumber";

      case "k":
        return "weekYear";

      case "q":
        return "quarter";

      default:
        return null;
    }
  };

  var zone = null;
  var specificOffset;

  if (!isUndefined(matches.z)) {
    zone = IANAZone.create(matches.z);
  }

  if (!isUndefined(matches.Z)) {
    if (!zone) {
      zone = new FixedOffsetZone(matches.Z);
    }

    specificOffset = matches.Z;
  }

  if (!isUndefined(matches.q)) {
    matches.M = (matches.q - 1) * 3 + 1;
  }

  if (!isUndefined(matches.h)) {
    if (matches.h < 12 && matches.a === 1) {
      matches.h += 12;
    } else if (matches.h === 12 && matches.a === 0) {
      matches.h = 0;
    }
  }

  if (matches.G === 0 && matches.y) {
    matches.y = -matches.y;
  }

  if (!isUndefined(matches.u)) {
    matches.S = parseMillis(matches.u);
  }

  var vals = Object.keys(matches).reduce(function (r, k) {
    var f = toField(k);

    if (f) {
      r[f] = matches[k];
    }

    return r;
  }, {});
  return [vals, zone, specificOffset];
}

var dummyDateTimeCache = null;

function getDummyDateTime() {
  if (!dummyDateTimeCache) {
    dummyDateTimeCache = DateTime.fromMillis(1555555555555);
  }

  return dummyDateTimeCache;
}

function maybeExpandMacroToken(token, locale) {
  if (token.literal) {
    return token;
  }

  var formatOpts = Formatter.macroTokenToFormatOpts(token.val);
  var tokens = formatOptsToTokens(formatOpts, locale);

  if (tokens == null || tokens.includes(undefined)) {
    return token;
  }

  return tokens;
}

function expandMacroTokens(tokens, locale) {
  var _Array$prototype;

  return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, tokens.map(function (t) {
    return maybeExpandMacroToken(t, locale);
  }));
}
/**
 * @private
 */

function explainFromTokens(locale, input, format) {
  var tokens = expandMacroTokens(Formatter.parseFormat(format), locale),
      units = tokens.map(function (t) {
    return unitForToken(t, locale);
  }),
      disqualifyingUnit = units.find(function (t) {
    return t.invalidReason;
  });

  if (disqualifyingUnit) {
    return {
      input: input,
      tokens: tokens,
      invalidReason: disqualifyingUnit.invalidReason
    };
  } else {
    var _buildRegex = buildRegex(units),
        regexString = _buildRegex[0],
        handlers = _buildRegex[1],
        regex = RegExp(regexString, "i"),
        _match = match(input, regex, handlers),
        rawMatches = _match[0],
        matches = _match[1],
        _ref6 = matches ? dateTimeFromMatches(matches) : [null, null, undefined],
        result = _ref6[0],
        zone = _ref6[1],
        specificOffset = _ref6[2];

    if (hasOwnProperty(matches, "a") && hasOwnProperty(matches, "H")) {
      throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");
    }

    return {
      input: input,
      tokens: tokens,
      regex: regex,
      rawMatches: rawMatches,
      matches: matches,
      result: result,
      zone: zone,
      specificOffset: specificOffset
    };
  }
}
function parseFromTokens(locale, input, format) {
  var _explainFromTokens = explainFromTokens(locale, input, format),
      result = _explainFromTokens.result,
      zone = _explainFromTokens.zone,
      specificOffset = _explainFromTokens.specificOffset,
      invalidReason = _explainFromTokens.invalidReason;

  return [result, zone, specificOffset, invalidReason];
}
function formatOptsToTokens(formatOpts, locale) {
  if (!formatOpts) {
    return null;
  }

  var formatter = Formatter.create(locale, formatOpts);
  var parts = formatter.formatDateTimeParts(getDummyDateTime());
  return parts.map(function (p) {
    return tokenForPart(p, locale, formatOpts);
  });
}

var nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
    leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];

function unitOutOfRange(unit, value) {
  return new Invalid("unit out of range", "you specified " + value + " (of type " + typeof value + ") as a " + unit + ", which is invalid");
}

function dayOfWeek(year, month, day) {
  var d = new Date(Date.UTC(year, month - 1, day));

  if (year < 100 && year >= 0) {
    d.setUTCFullYear(d.getUTCFullYear() - 1900);
  }

  var js = d.getUTCDay();
  return js === 0 ? 7 : js;
}

function computeOrdinal(year, month, day) {
  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];
}

function uncomputeOrdinal(year, ordinal) {
  var table = isLeapYear(year) ? leapLadder : nonLeapLadder,
      month0 = table.findIndex(function (i) {
    return i < ordinal;
  }),
      day = ordinal - table[month0];
  return {
    month: month0 + 1,
    day: day
  };
}
/**
 * @private
 */


function gregorianToWeek(gregObj) {
  var year = gregObj.year,
      month = gregObj.month,
      day = gregObj.day,
      ordinal = computeOrdinal(year, month, day),
      weekday = dayOfWeek(year, month, day);
  var weekNumber = Math.floor((ordinal - weekday + 10) / 7),
      weekYear;

  if (weekNumber < 1) {
    weekYear = year - 1;
    weekNumber = weeksInWeekYear(weekYear);
  } else if (weekNumber > weeksInWeekYear(year)) {
    weekYear = year + 1;
    weekNumber = 1;
  } else {
    weekYear = year;
  }

  return _extends({
    weekYear: weekYear,
    weekNumber: weekNumber,
    weekday: weekday
  }, timeObject(gregObj));
}
function weekToGregorian(weekData) {
  var weekYear = weekData.weekYear,
      weekNumber = weekData.weekNumber,
      weekday = weekData.weekday,
      weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),
      yearInDays = daysInYear(weekYear);
  var ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,
      year;

  if (ordinal < 1) {
    year = weekYear - 1;
    ordinal += daysInYear(year);
  } else if (ordinal > yearInDays) {
    year = weekYear + 1;
    ordinal -= daysInYear(weekYear);
  } else {
    year = weekYear;
  }

  var _uncomputeOrdinal = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal.month,
      day = _uncomputeOrdinal.day;

  return _extends({
    year: year,
    month: month,
    day: day
  }, timeObject(weekData));
}
function gregorianToOrdinal(gregData) {
  var year = gregData.year,
      month = gregData.month,
      day = gregData.day;
  var ordinal = computeOrdinal(year, month, day);
  return _extends({
    year: year,
    ordinal: ordinal
  }, timeObject(gregData));
}
function ordinalToGregorian(ordinalData) {
  var year = ordinalData.year,
      ordinal = ordinalData.ordinal;

  var _uncomputeOrdinal2 = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal2.month,
      day = _uncomputeOrdinal2.day;

  return _extends({
    year: year,
    month: month,
    day: day
  }, timeObject(ordinalData));
}
function hasInvalidWeekData(obj) {
  var validYear = isInteger(obj.weekYear),
      validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),
      validWeekday = integerBetween(obj.weekday, 1, 7);

  if (!validYear) {
    return unitOutOfRange("weekYear", obj.weekYear);
  } else if (!validWeek) {
    return unitOutOfRange("week", obj.week);
  } else if (!validWeekday) {
    return unitOutOfRange("weekday", obj.weekday);
  } else return false;
}
function hasInvalidOrdinalData(obj) {
  var validYear = isInteger(obj.year),
      validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validOrdinal) {
    return unitOutOfRange("ordinal", obj.ordinal);
  } else return false;
}
function hasInvalidGregorianData(obj) {
  var validYear = isInteger(obj.year),
      validMonth = integerBetween(obj.month, 1, 12),
      validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validMonth) {
    return unitOutOfRange("month", obj.month);
  } else if (!validDay) {
    return unitOutOfRange("day", obj.day);
  } else return false;
}
function hasInvalidTimeData(obj) {
  var hour = obj.hour,
      minute = obj.minute,
      second = obj.second,
      millisecond = obj.millisecond;
  var validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0,
      validMinute = integerBetween(minute, 0, 59),
      validSecond = integerBetween(second, 0, 59),
      validMillisecond = integerBetween(millisecond, 0, 999);

  if (!validHour) {
    return unitOutOfRange("hour", hour);
  } else if (!validMinute) {
    return unitOutOfRange("minute", minute);
  } else if (!validSecond) {
    return unitOutOfRange("second", second);
  } else if (!validMillisecond) {
    return unitOutOfRange("millisecond", millisecond);
  } else return false;
}

var INVALID = "Invalid DateTime";
var MAX_DATE = 8.64e15;

function unsupportedZone(zone) {
  return new Invalid("unsupported zone", "the zone \"" + zone.name + "\" is not supported");
} // we cache week data on the DT object and this intermediates the cache


function possiblyCachedWeekData(dt) {
  if (dt.weekData === null) {
    dt.weekData = gregorianToWeek(dt.c);
  }

  return dt.weekData;
} // clone really means, "make a new object with these modifications". all "setters" really use this
// to create a new object while only changing some of the properties


function clone(inst, alts) {
  var current = {
    ts: inst.ts,
    zone: inst.zone,
    c: inst.c,
    o: inst.o,
    loc: inst.loc,
    invalid: inst.invalid
  };
  return new DateTime(_extends({}, current, alts, {
    old: current
  }));
} // find the right offset a given local time. The o input is our guess, which determines which
// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)


function fixOffset(localTS, o, tz) {
  // Our UTC time is just a guess because our offset is just a guess
  var utcGuess = localTS - o * 60 * 1000; // Test whether the zone matches the offset for this ts

  var o2 = tz.offset(utcGuess); // If so, offset didn't change and we're done

  if (o === o2) {
    return [utcGuess, o];
  } // If not, change the ts by the difference in the offset


  utcGuess -= (o2 - o) * 60 * 1000; // If that gives us the local time we want, we're done

  var o3 = tz.offset(utcGuess);

  if (o2 === o3) {
    return [utcGuess, o2];
  } // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time


  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];
} // convert an epoch timestamp into a calendar object with the given offset


function tsToObj(ts, offset) {
  ts += offset * 60 * 1000;
  var d = new Date(ts);
  return {
    year: d.getUTCFullYear(),
    month: d.getUTCMonth() + 1,
    day: d.getUTCDate(),
    hour: d.getUTCHours(),
    minute: d.getUTCMinutes(),
    second: d.getUTCSeconds(),
    millisecond: d.getUTCMilliseconds()
  };
} // convert a calendar object to a epoch timestamp


function objToTS(obj, offset, zone) {
  return fixOffset(objToLocalTS(obj), offset, zone);
} // create a new DT instance by adding a duration, adjusting for DSTs


function adjustTime(inst, dur) {
  var oPre = inst.o,
      year = inst.c.year + Math.trunc(dur.years),
      month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,
      c = _extends({}, inst.c, {
    year: year,
    month: month,
    day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7
  }),
      millisToAdd = Duration.fromObject({
    years: dur.years - Math.trunc(dur.years),
    quarters: dur.quarters - Math.trunc(dur.quarters),
    months: dur.months - Math.trunc(dur.months),
    weeks: dur.weeks - Math.trunc(dur.weeks),
    days: dur.days - Math.trunc(dur.days),
    hours: dur.hours,
    minutes: dur.minutes,
    seconds: dur.seconds,
    milliseconds: dur.milliseconds
  }).as("milliseconds"),
      localTS = objToLocalTS(c);

  var _fixOffset = fixOffset(localTS, oPre, inst.zone),
      ts = _fixOffset[0],
      o = _fixOffset[1];

  if (millisToAdd !== 0) {
    ts += millisToAdd; // that could have changed the offset by going over a DST, but we want to keep the ts the same

    o = inst.zone.offset(ts);
  }

  return {
    ts: ts,
    o: o
  };
} // helper useful in turning the results of parsing into real dates
// by handling the zone options


function parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {
  var setZone = opts.setZone,
      zone = opts.zone;

  if (parsed && Object.keys(parsed).length !== 0) {
    var interpretationZone = parsedZone || zone,
        inst = DateTime.fromObject(parsed, _extends({}, opts, {
      zone: interpretationZone,
      specificOffset: specificOffset
    }));
    return setZone ? inst : inst.setZone(zone);
  } else {
    return DateTime.invalid(new Invalid("unparsable", "the input \"" + text + "\" can't be parsed as " + format));
  }
} // if you want to output a technical format (e.g. RFC 2822), this helper
// helps handle the details


function toTechFormat(dt, format, allowZ) {
  if (allowZ === void 0) {
    allowZ = true;
  }

  return dt.isValid ? Formatter.create(Locale.create("en-US"), {
    allowZ: allowZ,
    forceSimple: true
  }).formatDateTimeFromString(dt, format) : null;
}

function _toISODate(o, extended) {
  var longFormat = o.c.year > 9999 || o.c.year < 0;
  var c = "";
  if (longFormat && o.c.year >= 0) c += "+";
  c += padStart(o.c.year, longFormat ? 6 : 4);

  if (extended) {
    c += "-";
    c += padStart(o.c.month);
    c += "-";
    c += padStart(o.c.day);
  } else {
    c += padStart(o.c.month);
    c += padStart(o.c.day);
  }

  return c;
}

function _toISOTime(o, extended, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone) {
  var c = padStart(o.c.hour);

  if (extended) {
    c += ":";
    c += padStart(o.c.minute);

    if (o.c.second !== 0 || !suppressSeconds) {
      c += ":";
    }
  } else {
    c += padStart(o.c.minute);
  }

  if (o.c.second !== 0 || !suppressSeconds) {
    c += padStart(o.c.second);

    if (o.c.millisecond !== 0 || !suppressMilliseconds) {
      c += ".";
      c += padStart(o.c.millisecond, 3);
    }
  }

  if (includeOffset) {
    if (o.isOffsetFixed && o.offset === 0 && !extendedZone) {
      c += "Z";
    } else if (o.o < 0) {
      c += "-";
      c += padStart(Math.trunc(-o.o / 60));
      c += ":";
      c += padStart(Math.trunc(-o.o % 60));
    } else {
      c += "+";
      c += padStart(Math.trunc(o.o / 60));
      c += ":";
      c += padStart(Math.trunc(o.o % 60));
    }
  }

  if (extendedZone) {
    c += "[" + o.zone.ianaName + "]";
  }

  return c;
} // defaults for unspecified units in the supported calendars


var defaultUnitValues = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultWeekUnitValues = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultOrdinalUnitValues = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}; // Units in the supported calendars, sorted by bigness

var orderedUnits = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
    orderedWeekUnits = ["weekYear", "weekNumber", "weekday", "hour", "minute", "second", "millisecond"],
    orderedOrdinalUnits = ["year", "ordinal", "hour", "minute", "second", "millisecond"]; // standardize case and plurality in units

function normalizeUnit(unit) {
  var normalized = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[unit.toLowerCase()];
  if (!normalized) throw new InvalidUnitError(unit);
  return normalized;
} // this is a dumbed down version of fromObject() that runs about 60% faster
// but doesn't do any validation, makes a bunch of assumptions about what units
// are present, and so on.


function quickDT(obj, opts) {
  var zone = normalizeZone(opts.zone, Settings.defaultZone),
      loc = Locale.fromObject(opts),
      tsNow = Settings.now();
  var ts, o; // assume we have the higher-order units

  if (!isUndefined(obj.year)) {
    for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits), _step; !(_step = _iterator()).done;) {
      var u = _step.value;

      if (isUndefined(obj[u])) {
        obj[u] = defaultUnitValues[u];
      }
    }

    var invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);

    if (invalid) {
      return DateTime.invalid(invalid);
    }

    var offsetProvis = zone.offset(tsNow);

    var _objToTS = objToTS(obj, offsetProvis, zone);

    ts = _objToTS[0];
    o = _objToTS[1];
  } else {
    ts = tsNow;
  }

  return new DateTime({
    ts: ts,
    zone: zone,
    loc: loc,
    o: o
  });
}

function diffRelative(start, end, opts) {
  var round = isUndefined(opts.round) ? true : opts.round,
      format = function format(c, unit) {
    c = roundTo(c, round || opts.calendary ? 0 : 2, true);
    var formatter = end.loc.clone(opts).relFormatter(opts);
    return formatter.format(c, unit);
  },
      differ = function differ(unit) {
    if (opts.calendary) {
      if (!end.hasSame(start, unit)) {
        return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);
      } else return 0;
    } else {
      return end.diff(start, unit).get(unit);
    }
  };

  if (opts.unit) {
    return format(differ(opts.unit), opts.unit);
  }

  for (var _iterator2 = _createForOfIteratorHelperLoose(opts.units), _step2; !(_step2 = _iterator2()).done;) {
    var unit = _step2.value;
    var count = differ(unit);

    if (Math.abs(count) >= 1) {
      return format(count, unit);
    }
  }

  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);
}

function lastOpts(argList) {
  var opts = {},
      args;

  if (argList.length > 0 && typeof argList[argList.length - 1] === "object") {
    opts = argList[argList.length - 1];
    args = Array.from(argList).slice(0, argList.length - 1);
  } else {
    args = Array.from(argList);
  }

  return [opts, args];
}
/**
 * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.
 *
 * A DateTime comprises of:
 * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.
 * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).
 * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.
 *
 * Here is a brief overview of the most commonly used functionality it provides:
 *
 * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime.local}, {@link DateTime.utc}, and (most flexibly) {@link DateTime.fromObject}. To create one from a standard string format, use {@link DateTime.fromISO}, {@link DateTime.fromHTTP}, and {@link DateTime.fromRFC2822}. To create one from a custom string format, use {@link DateTime.fromFormat}. To create one from a native JS date, use {@link DateTime.fromJSDate}.
 * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},
 * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.
 * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.
 * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.
 * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.
 * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.
 *
 * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.
 */


var DateTime = /*#__PURE__*/function () {
  /**
   * @access private
   */
  function DateTime(config) {
    var zone = config.zone || Settings.defaultZone;
    var invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid("invalid input") : null) || (!zone.isValid ? unsupportedZone(zone) : null);
    /**
     * @access private
     */

    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;
    var c = null,
        o = null;

    if (!invalid) {
      var unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);

      if (unchanged) {
        var _ref = [config.old.c, config.old.o];
        c = _ref[0];
        o = _ref[1];
      } else {
        var ot = zone.offset(this.ts);
        c = tsToObj(this.ts, ot);
        invalid = Number.isNaN(c.year) ? new Invalid("invalid input") : null;
        c = invalid ? null : c;
        o = invalid ? null : ot;
      }
    }
    /**
     * @access private
     */


    this._zone = zone;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.invalid = invalid;
    /**
     * @access private
     */

    this.weekData = null;
    /**
     * @access private
     */

    this.c = c;
    /**
     * @access private
     */

    this.o = o;
    /**
     * @access private
     */

    this.isLuxonDateTime = true;
  } // CONSTRUCT

  /**
   * Create a DateTime for the current instant, in the system's time zone.
   *
   * Use Settings to override these default values if needed.
   * @example DateTime.now().toISO() //~> now in the ISO format
   * @return {DateTime}
   */


  DateTime.now = function now() {
    return new DateTime({});
  }
  /**
   * Create a local DateTime
   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month, 1-indexed
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.local()                                  //~> now
   * @example DateTime.local({ zone: "America/New_York" })      //~> now, in US east coast time
   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00
   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00
   * @example DateTime.local(2017, 3, 12, { locale: "fr" })     //~> 2017-03-12T00:00:00, with a French locale
   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00
   * @example DateTime.local(2017, 3, 12, 5, { zone: "utc" })   //~> 2017-03-12T05:00:00, in UTC
   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00
   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10
   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765
   * @return {DateTime}
   */
  ;

  DateTime.local = function local() {
    var _lastOpts = lastOpts(arguments),
        opts = _lastOpts[0],
        args = _lastOpts[1],
        year = args[0],
        month = args[1],
        day = args[2],
        hour = args[3],
        minute = args[4],
        second = args[5],
        millisecond = args[6];

    return quickDT({
      year: year,
      month: month,
      day: day,
      hour: hour,
      minute: minute,
      second: second,
      millisecond: millisecond
    }, opts);
  }
  /**
   * Create a DateTime in UTC
   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @param {Object} options - configuration options for the DateTime
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @example DateTime.utc()                                              //~> now
   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z
   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z
   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: "fr" })          //~> 2017-03-12T05:45:00Z with a French locale
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: "fr" }) //~> 2017-03-12T05:45:10.765Z with a French locale
   * @return {DateTime}
   */
  ;

  DateTime.utc = function utc() {
    var _lastOpts2 = lastOpts(arguments),
        opts = _lastOpts2[0],
        args = _lastOpts2[1],
        year = args[0],
        month = args[1],
        day = args[2],
        hour = args[3],
        minute = args[4],
        second = args[5],
        millisecond = args[6];

    opts.zone = FixedOffsetZone.utcInstance;
    return quickDT({
      year: year,
      month: month,
      day: day,
      hour: hour,
      minute: minute,
      second: second,
      millisecond: millisecond
    }, opts);
  }
  /**
   * Create a DateTime from a JavaScript Date object. Uses the default zone.
   * @param {Date} date - a JavaScript Date object
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @return {DateTime}
   */
  ;

  DateTime.fromJSDate = function fromJSDate(date, options) {
    if (options === void 0) {
      options = {};
    }

    var ts = isDate(date) ? date.valueOf() : NaN;

    if (Number.isNaN(ts)) {
      return DateTime.invalid("invalid input");
    }

    var zoneToUse = normalizeZone(options.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    return new DateTime({
      ts: ts,
      zone: zoneToUse,
      loc: Locale.fromObject(options)
    });
  }
  /**
   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} milliseconds - a number of milliseconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromMillis = function fromMillis(milliseconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(milliseconds)) {
      throw new InvalidArgumentError("fromMillis requires a numerical input, but received a " + typeof milliseconds + " with value " + milliseconds);
    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {
      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start
      return DateTime.invalid("Timestamp out of range");
    } else {
      return new DateTime({
        ts: milliseconds,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} seconds - a number of seconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromSeconds = function fromSeconds(seconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(seconds)) {
      throw new InvalidArgumentError("fromSeconds requires a numerical input");
    } else {
      return new DateTime({
        ts: seconds * 1000,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.year - a year, such as 1987
   * @param {number} obj.month - a month, 1-12
   * @param {number} obj.day - a day of the month, 1-31, depending on the month
   * @param {number} obj.ordinal - day of the year, 1-365 or 366
   * @param {number} obj.weekYear - an ISO week year
   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
   * @param {number} obj.hour - hour of the day, 0-23
   * @param {number} obj.minute - minute of the hour, 0-59
   * @param {number} obj.second - second of the minute, 0-59
   * @param {number} obj.millisecond - millisecond of the second, 0-999
   * @param {Object} opts - options for creating this DateTime
   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })
   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
   * @return {DateTime}
   */
  ;

  DateTime.fromObject = function fromObject(obj, opts) {
    if (opts === void 0) {
      opts = {};
    }

    obj = obj || {};
    var zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    var tsNow = Settings.now(),
        offsetProvis = !isUndefined(opts.specificOffset) ? opts.specificOffset : zoneToUse.offset(tsNow),
        normalized = normalizeObject(obj, normalizeUnit),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber,
        loc = Locale.fromObject(opts); // cases:
    // just a weekday -> this week's instance of that weekday, no worries
    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error
    // (gregorian month or day) + ordinal -> error
    // otherwise just use weeks or ordinals or gregorian, depending on what's specified

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var useWeekData = definiteWeekDef || normalized.weekday && !containsGregor; // configure ourselves to deal with gregorian dates or week stuff

    var units,
        defaultValues,
        objNow = tsToObj(tsNow, offsetProvis);

    if (useWeekData) {
      units = orderedWeekUnits;
      defaultValues = defaultWeekUnitValues;
      objNow = gregorianToWeek(objNow);
    } else if (containsOrdinal) {
      units = orderedOrdinalUnits;
      defaultValues = defaultOrdinalUnitValues;
      objNow = gregorianToOrdinal(objNow);
    } else {
      units = orderedUnits;
      defaultValues = defaultUnitValues;
    } // set default values for missing stuff


    var foundFirst = false;

    for (var _iterator3 = _createForOfIteratorHelperLoose(units), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;
      var v = normalized[u];

      if (!isUndefined(v)) {
        foundFirst = true;
      } else if (foundFirst) {
        normalized[u] = defaultValues[u];
      } else {
        normalized[u] = objNow[u];
      }
    } // make sure the values we have are in range


    var higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized),
        invalid = higherOrderInvalid || hasInvalidTimeData(normalized);

    if (invalid) {
      return DateTime.invalid(invalid);
    } // compute the actual time


    var gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized,
        _objToTS2 = objToTS(gregorian, offsetProvis, zoneToUse),
        tsFinal = _objToTS2[0],
        offsetFinal = _objToTS2[1],
        inst = new DateTime({
      ts: tsFinal,
      zone: zoneToUse,
      o: offsetFinal,
      loc: loc
    }); // gregorian data + weekday serves only to validate


    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {
      return DateTime.invalid("mismatched weekday", "you can't specify both a weekday of " + normalized.weekday + " and a date of " + inst.toISO());
    }

    return inst;
  }
  /**
   * Create a DateTime from an ISO 8601 string
   * @param {string} text - the ISO string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromISO('2016-05-25T09:08:34.123')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
   * @example DateTime.fromISO('2016-W05-4')
   * @return {DateTime}
   */
  ;

  DateTime.fromISO = function fromISO(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseISODate = parseISODate(text),
        vals = _parseISODate[0],
        parsedZone = _parseISODate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "ISO 8601", text);
  }
  /**
   * Create a DateTime from an RFC 2822 string
   * @param {string} text - the RFC 2822 string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
   * @return {DateTime}
   */
  ;

  DateTime.fromRFC2822 = function fromRFC2822(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseRFC2822Date = parseRFC2822Date(text),
        vals = _parseRFC2822Date[0],
        parsedZone = _parseRFC2822Date[1];

    return parseDataToDateTime(vals, parsedZone, opts, "RFC 2822", text);
  }
  /**
   * Create a DateTime from an HTTP header date
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @param {string} text - the HTTP header date
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
   * @return {DateTime}
   */
  ;

  DateTime.fromHTTP = function fromHTTP(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseHTTPDate = parseHTTPDate(text),
        vals = _parseHTTPDate[0],
        parsedZone = _parseHTTPDate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "HTTP", opts);
  }
  /**
   * Create a DateTime from an input string and format string.
   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromFormat = function fromFormat(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (isUndefined(text) || isUndefined(fmt)) {
      throw new InvalidArgumentError("fromFormat requires an input string and a format");
    }

    var _opts = opts,
        _opts$locale = _opts.locale,
        locale = _opts$locale === void 0 ? null : _opts$locale,
        _opts$numberingSystem = _opts.numberingSystem,
        numberingSystem = _opts$numberingSystem === void 0 ? null : _opts$numberingSystem,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    }),
        _parseFromTokens = parseFromTokens(localeToUse, text, fmt),
        vals = _parseFromTokens[0],
        parsedZone = _parseFromTokens[1],
        specificOffset = _parseFromTokens[2],
        invalid = _parseFromTokens[3];

    if (invalid) {
      return DateTime.invalid(invalid);
    } else {
      return parseDataToDateTime(vals, parsedZone, opts, "format " + fmt, text, specificOffset);
    }
  }
  /**
   * @deprecated use fromFormat instead
   */
  ;

  DateTime.fromString = function fromString(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return DateTime.fromFormat(text, fmt, opts);
  }
  /**
   * Create a DateTime from a SQL date, time, or datetime
   * Defaults to en-US if no locale has been specified, regardless of the system's locale
   * @param {string} text - the string to parse
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @example DateTime.fromSQL('2017-05-15')
   * @example DateTime.fromSQL('2017-05-15 09:12:34')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
   * @example DateTime.fromSQL('09:12:34.342')
   * @return {DateTime}
   */
  ;

  DateTime.fromSQL = function fromSQL(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseSQL = parseSQL(text),
        vals = _parseSQL[0],
        parsedZone = _parseSQL[1];

    return parseDataToDateTime(vals, parsedZone, opts, "SQL", text);
  }
  /**
   * Create an invalid DateTime.
   * @param {DateTime} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {DateTime}
   */
  ;

  DateTime.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDateTimeError(invalid);
    } else {
      return new DateTime({
        invalid: invalid
      });
    }
  }
  /**
   * Check if an object is an instance of DateTime. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  DateTime.isDateTime = function isDateTime(o) {
    return o && o.isLuxonDateTime || false;
  }
  /**
   * Produce the format string for a set of options
   * @param formatOpts
   * @param localeOpts
   * @returns {string}
   */
  ;

  DateTime.parseFormatForOpts = function parseFormatForOpts(formatOpts, localeOpts) {
    if (localeOpts === void 0) {
      localeOpts = {};
    }

    var tokenList = formatOptsToTokens(formatOpts, Locale.fromObject(localeOpts));
    return !tokenList ? null : tokenList.map(function (t) {
      return t ? t.val : null;
    }).join("");
  }
  /**
   * Produce the the fully expanded format token for the locale
   * Does NOT quote characters, so quoted tokens will not round trip correctly
   * @param fmt
   * @param localeOpts
   * @returns {string}
   */
  ;

  DateTime.expandFormat = function expandFormat(fmt, localeOpts) {
    if (localeOpts === void 0) {
      localeOpts = {};
    }

    var expanded = expandMacroTokens(Formatter.parseFormat(fmt), Locale.fromObject(localeOpts));
    return expanded.map(function (t) {
      return t.val;
    }).join("");
  } // INFO

  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
   * @return {number}
   */
  ;

  var _proto = DateTime.prototype;

  _proto.get = function get(unit) {
    return this[unit];
  }
  /**
   * Returns whether the DateTime is valid. Invalid DateTimes occur when:
   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
   * * The DateTime was created by an operation on another invalid date
   * @type {boolean}
   */
  ;

  /**
   * Returns the resolved Intl options for this DateTime.
   * This is useful in understanding the behavior of formatting methods
   * @param {Object} opts - the same options as toLocaleString
   * @return {Object}
   */
  _proto.resolvedLocaleOptions = function resolvedLocaleOptions(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _Formatter$create$res = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this),
        locale = _Formatter$create$res.locale,
        numberingSystem = _Formatter$create$res.numberingSystem,
        calendar = _Formatter$create$res.calendar;

    return {
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: calendar
    };
  } // TRANSFORM

  /**
   * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
   *
   * Equivalent to {@link DateTime#setZone}('utc')
   * @param {number} [offset=0] - optionally, an offset from UTC in minutes
   * @param {Object} [opts={}] - options to pass to `setZone()`
   * @return {DateTime}
   */
  ;

  _proto.toUTC = function toUTC(offset, opts) {
    if (offset === void 0) {
      offset = 0;
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.setZone(FixedOffsetZone.instance(offset), opts);
  }
  /**
   * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
   *
   * Equivalent to `setZone('local')`
   * @return {DateTime}
   */
  ;

  _proto.toLocal = function toLocal() {
    return this.setZone(Settings.defaultZone);
  }
  /**
   * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
   *
   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.
   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.
   * @param {Object} opts - options
   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
   * @return {DateTime}
   */
  ;

  _proto.setZone = function setZone(zone, _temp) {
    var _ref2 = _temp === void 0 ? {} : _temp,
        _ref2$keepLocalTime = _ref2.keepLocalTime,
        keepLocalTime = _ref2$keepLocalTime === void 0 ? false : _ref2$keepLocalTime,
        _ref2$keepCalendarTim = _ref2.keepCalendarTime,
        keepCalendarTime = _ref2$keepCalendarTim === void 0 ? false : _ref2$keepCalendarTim;

    zone = normalizeZone(zone, Settings.defaultZone);

    if (zone.equals(this.zone)) {
      return this;
    } else if (!zone.isValid) {
      return DateTime.invalid(unsupportedZone(zone));
    } else {
      var newTS = this.ts;

      if (keepLocalTime || keepCalendarTime) {
        var offsetGuess = zone.offset(this.ts);
        var asObj = this.toObject();

        var _objToTS3 = objToTS(asObj, offsetGuess, zone);

        newTS = _objToTS3[0];
      }

      return clone(this, {
        ts: newTS,
        zone: zone
      });
    }
  }
  /**
   * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
   * @param {Object} properties - the properties to set
   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
   * @return {DateTime}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2,
        locale = _ref3.locale,
        numberingSystem = _ref3.numberingSystem,
        outputCalendar = _ref3.outputCalendar;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: outputCalendar
    });
    return clone(this, {
      loc: loc
    });
  }
  /**
   * "Set" the locale. Returns a newly-constructed DateTime.
   * Just a convenient alias for reconfigure({ locale })
   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
   * @return {DateTime}
   */
  ;

  _proto.setLocale = function setLocale(locale) {
    return this.reconfigure({
      locale: locale
    });
  }
  /**
   * "Set" the values of specified units. Returns a newly-constructed DateTime.
   * You can only set units with this method; for "setting" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.
   * @param {Object} values - a mapping of units to numbers
   * @example dt.set({ year: 2017 })
   * @example dt.set({ hour: 8, minute: 30 })
   * @example dt.set({ weekday: 5 })
   * @example dt.set({ year: 2005, ordinal: 234 })
   * @return {DateTime}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var normalized = normalizeObject(values, normalizeUnit),
        settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber;

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var mixed;

    if (settingWeekStuff) {
      mixed = weekToGregorian(_extends({}, gregorianToWeek(this.c), normalized));
    } else if (!isUndefined(normalized.ordinal)) {
      mixed = ordinalToGregorian(_extends({}, gregorianToOrdinal(this.c), normalized));
    } else {
      mixed = _extends({}, this.toObject(), normalized); // if we didn't set the day but we ended up on an overflow date,
      // use the last day of the right month

      if (isUndefined(normalized.day)) {
        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);
      }
    }

    var _objToTS4 = objToTS(mixed, this.o, this.zone),
        ts = _objToTS4[0],
        o = _objToTS4[1];

    return clone(this, {
      ts: ts,
      o: o
    });
  }
  /**
   * Add a period of time to this DateTime and return the resulting DateTime
   *
   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @example DateTime.now().plus(123) //~> in 123 milliseconds
   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
   * @return {DateTime}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = Duration.fromDurationLike(duration);
    return clone(this, adjustTime(this, dur));
  }
  /**
   * Subtract a period of time to this DateTime and return the resulting DateTime
   * See {@link DateTime#plus}
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   @return {DateTime}
   */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = Duration.fromDurationLike(duration).negate();
    return clone(this, adjustTime(this, dur));
  }
  /**
   * "Set" this DateTime to the beginning of a unit of time.
   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
   * @return {DateTime}
   */
  ;

  _proto.startOf = function startOf(unit) {
    if (!this.isValid) return this;
    var o = {},
        normalizedUnit = Duration.normalizeUnit(unit);

    switch (normalizedUnit) {
      case "years":
        o.month = 1;
      // falls through

      case "quarters":
      case "months":
        o.day = 1;
      // falls through

      case "weeks":
      case "days":
        o.hour = 0;
      // falls through

      case "hours":
        o.minute = 0;
      // falls through

      case "minutes":
        o.second = 0;
      // falls through

      case "seconds":
        o.millisecond = 0;
        break;
      // no default, invalid units throw in normalizeUnit()
    }

    if (normalizedUnit === "weeks") {
      o.weekday = 1;
    }

    if (normalizedUnit === "quarters") {
      var q = Math.ceil(this.month / 3);
      o.month = (q - 1) * 3 + 1;
    }

    return this.set(o);
  }
  /**
   * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
   * @return {DateTime}
   */
  ;

  _proto.endOf = function endOf(unit) {
    var _this$plus;

    return this.isValid ? this.plus((_this$plus = {}, _this$plus[unit] = 1, _this$plus)).startOf(unit).minus(1) : this;
  } // OUTPUT

  /**
   * Returns a string representation of this DateTime formatted according to the specified format string.
   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @param {string} fmt - the format string
   * @param {Object} opts - opts to override the configuration options on this DateTime
   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
   * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID;
  }
  /**
   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
   * of the DateTime in the assigned locale.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options
   * @param {Object} opts - opts to override the configuration options on this DateTime
   * @example DateTime.now().toLocaleString(); //=> 4/20/2017
   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 août 2022'
   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'
   * @return {string}
   */
  ;

  _proto.toLocaleString = function toLocaleString(formatOpts, opts) {
    if (formatOpts === void 0) {
      formatOpts = DATE_SHORT;
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this) : INVALID;
  }
  /**
   * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
   * @example DateTime.now().toLocaleParts(); //=> [
   *                                   //=>   { type: 'day', value: '25' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'month', value: '05' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'year', value: '1982' }
   *                                   //=> ]
   */
  ;

  _proto.toLocaleParts = function toLocaleParts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.extendedZone=false] - add the time zone format extension
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(_temp3) {
    var _ref4 = _temp3 === void 0 ? {} : _temp3,
        _ref4$format = _ref4.format,
        format = _ref4$format === void 0 ? "extended" : _ref4$format,
        _ref4$suppressSeconds = _ref4.suppressSeconds,
        suppressSeconds = _ref4$suppressSeconds === void 0 ? false : _ref4$suppressSeconds,
        _ref4$suppressMillise = _ref4.suppressMilliseconds,
        suppressMilliseconds = _ref4$suppressMillise === void 0 ? false : _ref4$suppressMillise,
        _ref4$includeOffset = _ref4.includeOffset,
        includeOffset = _ref4$includeOffset === void 0 ? true : _ref4$includeOffset,
        _ref4$extendedZone = _ref4.extendedZone,
        extendedZone = _ref4$extendedZone === void 0 ? false : _ref4$extendedZone;

    if (!this.isValid) {
      return null;
    }

    var ext = format === "extended";

    var c = _toISODate(this, ext);

    c += "T";
    c += _toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);
    return c;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's date component
   * @param {Object} opts - options
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate(_temp4) {
    var _ref5 = _temp4 === void 0 ? {} : _temp4,
        _ref5$format = _ref5.format,
        format = _ref5$format === void 0 ? "extended" : _ref5$format;

    if (!this.isValid) {
      return null;
    }

    return _toISODate(this, format === "extended");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's week date
   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
   * @return {string}
   */
  ;

  _proto.toISOWeekDate = function toISOWeekDate() {
    return toTechFormat(this, "kkkk-'W'WW-c");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's time component
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(_temp5) {
    var _ref6 = _temp5 === void 0 ? {} : _temp5,
        _ref6$suppressMillise = _ref6.suppressMilliseconds,
        suppressMilliseconds = _ref6$suppressMillise === void 0 ? false : _ref6$suppressMillise,
        _ref6$suppressSeconds = _ref6.suppressSeconds,
        suppressSeconds = _ref6$suppressSeconds === void 0 ? false : _ref6$suppressSeconds,
        _ref6$includeOffset = _ref6.includeOffset,
        includeOffset = _ref6$includeOffset === void 0 ? true : _ref6$includeOffset,
        _ref6$includePrefix = _ref6.includePrefix,
        includePrefix = _ref6$includePrefix === void 0 ? false : _ref6$includePrefix,
        _ref6$extendedZone = _ref6.extendedZone,
        extendedZone = _ref6$extendedZone === void 0 ? false : _ref6$extendedZone,
        _ref6$format = _ref6.format,
        format = _ref6$format === void 0 ? "extended" : _ref6$format;

    if (!this.isValid) {
      return null;
    }

    var c = includePrefix ? "T" : "";
    return c + _toISOTime(this, format === "extended", suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);
  }
  /**
   * Returns an RFC 2822-compatible string representation of this DateTime
   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
   * @return {string}
   */
  ;

  _proto.toRFC2822 = function toRFC2822() {
    return toTechFormat(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", false);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.
   * Specifically, the string conforms to RFC 1123.
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
   * @return {string}
   */
  ;

  _proto.toHTTP = function toHTTP() {
    return toTechFormat(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Date
   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
   * @return {string}
   */
  ;

  _proto.toSQLDate = function toSQLDate() {
    if (!this.isValid) {
      return null;
    }

    return _toISODate(this, true);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Time
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'
   * @example DateTime.utc().toSQL() //=> '05:15:16.345'
   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQLTime = function toSQLTime(_temp6) {
    var _ref7 = _temp6 === void 0 ? {} : _temp6,
        _ref7$includeOffset = _ref7.includeOffset,
        includeOffset = _ref7$includeOffset === void 0 ? true : _ref7$includeOffset,
        _ref7$includeZone = _ref7.includeZone,
        includeZone = _ref7$includeZone === void 0 ? false : _ref7$includeZone,
        _ref7$includeOffsetSp = _ref7.includeOffsetSpace,
        includeOffsetSpace = _ref7$includeOffsetSp === void 0 ? true : _ref7$includeOffsetSp;

    var fmt = "HH:mm:ss.SSS";

    if (includeZone || includeOffset) {
      if (includeOffsetSpace) {
        fmt += " ";
      }

      if (includeZone) {
        fmt += "z";
      } else if (includeOffset) {
        fmt += "ZZ";
      }
    }

    return toTechFormat(this, fmt, true);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'
   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQL = function toSQL(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toSQLDate() + " " + this.toSQLTime(opts);
  }
  /**
   * Returns a string representation of this DateTime appropriate for debugging
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.isValid ? this.toISO() : INVALID;
  }
  /**
   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Returns the epoch milliseconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  /**
   * Returns the epoch seconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toSeconds = function toSeconds() {
    return this.isValid ? this.ts / 1000 : NaN;
  }
  /**
   * Returns the epoch seconds (as a whole number) of this DateTime.
   * @return {number}
   */
  ;

  _proto.toUnixInteger = function toUnixInteger() {
    return this.isValid ? Math.floor(this.ts / 1000) : NaN;
  }
  /**
   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns a BSON serializable equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toBSON = function toBSON() {
    return this.toJSDate();
  }
  /**
   * Returns a JavaScript object with this DateTime's year, month, day, and so on.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};

    var base = _extends({}, this.c);

    if (opts.includeConfig) {
      base.outputCalendar = this.outputCalendar;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns a JavaScript Date equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toJSDate = function toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  } // COMPARE

  /**
   * Return the difference between two DateTimes as a Duration.
   * @param {DateTime} otherDateTime - the DateTime to compare this one to
   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example
   * var i1 = DateTime.fromISO('1982-05-25T09:45'),
   *     i2 = DateTime.fromISO('1983-10-14T10:30');
   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
   * @return {Duration}
   */
  ;

  _proto.diff = function diff(otherDateTime, unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid || !otherDateTime.isValid) {
      return Duration.invalid("created by diffing an invalid DateTime");
    }

    var durOpts = _extends({
      locale: this.locale,
      numberingSystem: this.numberingSystem
    }, opts);

    var units = maybeArray(unit).map(Duration.normalizeUnit),
        otherIsLater = otherDateTime.valueOf() > this.valueOf(),
        earlier = otherIsLater ? this : otherDateTime,
        later = otherIsLater ? otherDateTime : this,
        diffed = _diff(earlier, later, units, durOpts);

    return otherIsLater ? diffed.negate() : diffed;
  }
  /**
   * Return the difference between this DateTime and right now.
   * See {@link DateTime#diff}
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  _proto.diffNow = function diffNow(unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.diff(DateTime.now(), unit, opts);
  }
  /**
   * Return an Interval spanning between this DateTime and another DateTime
   * @param {DateTime} otherDateTime - the other end point of the Interval
   * @return {Interval}
   */
  ;

  _proto.until = function until(otherDateTime) {
    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;
  }
  /**
   * Return whether this DateTime is in the same unit of time as another DateTime.
   * Higher-order units must also be identical for this function to return `true`.
   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.
   * @param {DateTime} otherDateTime - the other DateTime
   * @param {string} unit - the unit of time to check sameness on
   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(otherDateTime, unit) {
    if (!this.isValid) return false;
    var inputMs = otherDateTime.valueOf();
    var adjustedToZone = this.setZone(otherDateTime.zone, {
      keepLocalTime: true
    });
    return adjustedToZone.startOf(unit) <= inputMs && inputMs <= adjustedToZone.endOf(unit);
  }
  /**
   * Equality check
   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.
   * To compare just the millisecond values, use `+dt1 === +dt2`.
   * @param {DateTime} other - the other DateTime
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);
  }
  /**
   * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
   * platform supports Intl.RelativeTimeFormat. Rounds down by default.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
   * @param {boolean} [options.round=true] - whether to round the numbers in the output.
   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
   * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
   */
  ;

  _proto.toRelative = function toRelative(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    var base = options.base || DateTime.fromObject({}, {
      zone: this.zone
    }),
        padding = options.padding ? this < base ? -options.padding : options.padding : 0;
    var units = ["years", "months", "days", "hours", "minutes", "seconds"];
    var unit = options.unit;

    if (Array.isArray(options.unit)) {
      units = options.unit;
      unit = undefined;
    }

    return diffRelative(base, this.plus(padding), _extends({}, options, {
      numeric: "always",
      units: units,
      unit: unit
    }));
  }
  /**
   * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
   * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
   */
  ;

  _proto.toRelativeCalendar = function toRelativeCalendar(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    return diffRelative(options.base || DateTime.fromObject({}, {
      zone: this.zone
    }), this, _extends({}, options, {
      numeric: "auto",
      units: ["years", "months", "days"],
      calendary: true
    }));
  }
  /**
   * Return the min of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
   * @return {DateTime} the min DateTime, or undefined if called with no argument
   */
  ;

  DateTime.min = function min() {
    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("min requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.min);
  }
  /**
   * Return the max of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
   * @return {DateTime} the max DateTime, or undefined if called with no argument
   */
  ;

  DateTime.max = function max() {
    for (var _len2 = arguments.length, dateTimes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      dateTimes[_key2] = arguments[_key2];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("max requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.max);
  } // MISC

  /**
   * Explain how a string would be parsed by fromFormat()
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see description)
   * @param {Object} options - options taken by fromFormat()
   * @return {Object}
   */
  ;

  DateTime.fromFormatExplain = function fromFormatExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        _options$locale = _options.locale,
        locale = _options$locale === void 0 ? null : _options$locale,
        _options$numberingSys = _options.numberingSystem,
        numberingSystem = _options$numberingSys === void 0 ? null : _options$numberingSys,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    });
    return explainFromTokens(localeToUse, text, fmt);
  }
  /**
   * @deprecated use fromFormatExplain instead
   */
  ;

  DateTime.fromStringExplain = function fromStringExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    return DateTime.fromFormatExplain(text, fmt, options);
  } // FORMAT PRESETS

  /**
   * {@link DateTime#toLocaleString} format like 10/14/1983
   * @type {Object}
   */
  ;

  _createClass(DateTime, [{
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
    /**
     * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
    /**
     * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "outputCalendar",
    get: function get() {
      return this.isValid ? this.loc.outputCalendar : null;
    }
    /**
     * Get the time zone associated with this DateTime.
     * @type {Zone}
     */

  }, {
    key: "zone",
    get: function get() {
      return this._zone;
    }
    /**
     * Get the name of the time zone.
     * @type {string}
     */

  }, {
    key: "zoneName",
    get: function get() {
      return this.isValid ? this.zone.name : null;
    }
    /**
     * Get the year
     * @example DateTime.local(2017, 5, 25).year //=> 2017
     * @type {number}
     */

  }, {
    key: "year",
    get: function get() {
      return this.isValid ? this.c.year : NaN;
    }
    /**
     * Get the quarter
     * @example DateTime.local(2017, 5, 25).quarter //=> 2
     * @type {number}
     */

  }, {
    key: "quarter",
    get: function get() {
      return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
    }
    /**
     * Get the month (1-12).
     * @example DateTime.local(2017, 5, 25).month //=> 5
     * @type {number}
     */

  }, {
    key: "month",
    get: function get() {
      return this.isValid ? this.c.month : NaN;
    }
    /**
     * Get the day of the month (1-30ish).
     * @example DateTime.local(2017, 5, 25).day //=> 25
     * @type {number}
     */

  }, {
    key: "day",
    get: function get() {
      return this.isValid ? this.c.day : NaN;
    }
    /**
     * Get the hour of the day (0-23).
     * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
     * @type {number}
     */

  }, {
    key: "hour",
    get: function get() {
      return this.isValid ? this.c.hour : NaN;
    }
    /**
     * Get the minute of the hour (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
     * @type {number}
     */

  }, {
    key: "minute",
    get: function get() {
      return this.isValid ? this.c.minute : NaN;
    }
    /**
     * Get the second of the minute (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
     * @type {number}
     */

  }, {
    key: "second",
    get: function get() {
      return this.isValid ? this.c.second : NaN;
    }
    /**
     * Get the millisecond of the second (0-999).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
     * @type {number}
     */

  }, {
    key: "millisecond",
    get: function get() {
      return this.isValid ? this.c.millisecond : NaN;
    }
    /**
     * Get the week year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 12, 31).weekYear //=> 2015
     * @type {number}
     */

  }, {
    key: "weekYear",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;
    }
    /**
     * Get the week number of the week year (1-52ish).
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
     * @type {number}
     */

  }, {
    key: "weekNumber",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;
    }
    /**
     * Get the day of the week.
     * 1 is Monday and 7 is Sunday
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 11, 31).weekday //=> 4
     * @type {number}
     */

  }, {
    key: "weekday",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;
    }
    /**
     * Get the ordinal (meaning the day of the year)
     * @example DateTime.local(2017, 5, 25).ordinal //=> 145
     * @type {number|DateTime}
     */

  }, {
    key: "ordinal",
    get: function get() {
      return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;
    }
    /**
     * Get the human readable short month name, such as 'Oct'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
     * @type {string}
     */

  }, {
    key: "monthShort",
    get: function get() {
      return this.isValid ? Info.months("short", {
        locObj: this.loc
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable long month name, such as 'October'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthLong //=> October
     * @type {string}
     */

  }, {
    key: "monthLong",
    get: function get() {
      return this.isValid ? Info.months("long", {
        locObj: this.loc
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable short weekday, such as 'Mon'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
     * @type {string}
     */

  }, {
    key: "weekdayShort",
    get: function get() {
      return this.isValid ? Info.weekdays("short", {
        locObj: this.loc
      })[this.weekday - 1] : null;
    }
    /**
     * Get the human readable long weekday, such as 'Monday'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
     * @type {string}
     */

  }, {
    key: "weekdayLong",
    get: function get() {
      return this.isValid ? Info.weekdays("long", {
        locObj: this.loc
      })[this.weekday - 1] : null;
    }
    /**
     * Get the UTC offset of this DateTime in minutes
     * @example DateTime.now().offset //=> -240
     * @example DateTime.utc().offset //=> 0
     * @type {number}
     */

  }, {
    key: "offset",
    get: function get() {
      return this.isValid ? +this.o : NaN;
    }
    /**
     * Get the short human name for the zone's current offset, for example "EST" or "EDT".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameShort",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "short",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameLong",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "long",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get whether this zone's offset ever changes, as in a DST.
     * @type {boolean}
     */

  }, {
    key: "isOffsetFixed",
    get: function get() {
      return this.isValid ? this.zone.isUniversal : null;
    }
    /**
     * Get whether the DateTime is in a DST.
     * @type {boolean}
     */

  }, {
    key: "isInDST",
    get: function get() {
      if (this.isOffsetFixed) {
        return false;
      } else {
        return this.offset > this.set({
          month: 1,
          day: 1
        }).offset || this.offset > this.set({
          month: 5
        }).offset;
      }
    }
    /**
     * Returns true if this DateTime is in a leap year, false otherwise
     * @example DateTime.local(2016).isInLeapYear //=> true
     * @example DateTime.local(2013).isInLeapYear //=> false
     * @type {boolean}
     */

  }, {
    key: "isInLeapYear",
    get: function get() {
      return isLeapYear(this.year);
    }
    /**
     * Returns the number of days in this DateTime's month
     * @example DateTime.local(2016, 2).daysInMonth //=> 29
     * @example DateTime.local(2016, 3).daysInMonth //=> 31
     * @type {number}
     */

  }, {
    key: "daysInMonth",
    get: function get() {
      return daysInMonth(this.year, this.month);
    }
    /**
     * Returns the number of days in this DateTime's year
     * @example DateTime.local(2016).daysInYear //=> 366
     * @example DateTime.local(2013).daysInYear //=> 365
     * @type {number}
     */

  }, {
    key: "daysInYear",
    get: function get() {
      return this.isValid ? daysInYear(this.year) : NaN;
    }
    /**
     * Returns the number of weeks in this DateTime's year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2004).weeksInWeekYear //=> 53
     * @example DateTime.local(2013).weeksInWeekYear //=> 52
     * @type {number}
     */

  }, {
    key: "weeksInWeekYear",
    get: function get() {
      return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;
    }
  }], [{
    key: "DATE_SHORT",
    get: function get() {
      return DATE_SHORT;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED",
    get: function get() {
      return DATE_MED;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED_WITH_WEEKDAY",
    get: function get() {
      return DATE_MED_WITH_WEEKDAY;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_FULL",
    get: function get() {
      return DATE_FULL;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_HUGE",
    get: function get() {
      return DATE_HUGE;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_SIMPLE",
    get: function get() {
      return TIME_SIMPLE;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SECONDS",
    get: function get() {
      return TIME_WITH_SECONDS;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_WITH_SHORT_OFFSET;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_WITH_LONG_OFFSET;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_SIMPLE",
    get: function get() {
      return TIME_24_SIMPLE;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SECONDS",
    get: function get() {
      return TIME_24_WITH_SECONDS;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_24_WITH_SHORT_OFFSET;
    }
    /**
     * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_24_WITH_LONG_OFFSET;
    }
    /**
     * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT",
    get: function get() {
      return DATETIME_SHORT;
    }
    /**
     * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT_WITH_SECONDS",
    get: function get() {
      return DATETIME_SHORT_WITH_SECONDS;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED",
    get: function get() {
      return DATETIME_MED;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_SECONDS",
    get: function get() {
      return DATETIME_MED_WITH_SECONDS;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_WEEKDAY",
    get: function get() {
      return DATETIME_MED_WITH_WEEKDAY;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL",
    get: function get() {
      return DATETIME_FULL;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL_WITH_SECONDS",
    get: function get() {
      return DATETIME_FULL_WITH_SECONDS;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE",
    get: function get() {
      return DATETIME_HUGE;
    }
    /**
     * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE_WITH_SECONDS",
    get: function get() {
      return DATETIME_HUGE_WITH_SECONDS;
    }
  }]);

  return DateTime;
}();
function friendlyDateTime(dateTimeish) {
  if (DateTime.isDateTime(dateTimeish)) {
    return dateTimeish;
  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {
    return DateTime.fromJSDate(dateTimeish);
  } else if (dateTimeish && typeof dateTimeish === "object") {
    return DateTime.fromObject(dateTimeish);
  } else {
    throw new InvalidArgumentError("Unknown datetime argument: " + dateTimeish + ", of type " + typeof dateTimeish);
  }
}

var VERSION = "3.0.3";

exports.DateTime = DateTime;
exports.Duration = Duration;
exports.FixedOffsetZone = FixedOffsetZone;
exports.IANAZone = IANAZone;
exports.Info = Info;
exports.Interval = Interval;
exports.InvalidZone = InvalidZone;
exports.Settings = Settings;
exports.SystemZone = SystemZone;
exports.VERSION = VERSION;
exports.Zone = Zone;


},{}],112:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAltimeter = exports.parseWind = exports.parseClouds = exports.parseVisibility = exports.parseWeather = exports.parseTempNA = exports.parseTempInternation = exports.parseAuto = exports.parseCavok = exports.parseDate = exports.parseStation = exports.parseMetar = exports.METAR = void 0;
var Weather_1 = require("./parts/Weather");
var Cloud_1 = require("./parts/Cloud");
var Wind_1 = require("./parts/Wind");
//Meassage types
var TYPES = ["METAR", "SPECI"];
//Metar Object
var METAR = /** @class */ (function () {
    /**
     * Extracted Metar data in a human readable format.
     * @param metarString raw metar string if provided station and time will be ignored and replaced with the content in the raw METAR
     * @param station staion name for instance creation
     * @param time time for instance creation
     */
    function METAR(metarString, station, time) {
        //Wind speed, direction and unit
        this.wind = new Wind_1.Wind();
        //List of weather conditions reported
        this.weather = new Array();
        //List of Cloud observations
        this.clouds = new Array();
        this.station = station !== null && station !== void 0 ? station : "----";
        this.time = time !== null && time !== void 0 ? time : new Date();
        if (metarString != null) {
            parseMetar(metarString, this);
        }
    }
    return METAR;
}());
exports.METAR = METAR;
/**
 * Parses a raw metar and binds or creates a METAR object
 * @param metarString Raw METAR string
 * @param ref Reference to a METAR object. This objects contents will be shallow replaced with the Raw metars values.
 *  Meaning values will be updated or added but not removed.
 * @returns
 */
function parseMetar(metarString, ref) {
    var station = parseStation(metarString);
    var time = parseDate(metarString);
    if (ref != null) {
        ref.station = station;
        ref.time = time;
    }
    else {
        ref = new METAR(undefined, station, time);
    }
    //Parse Auto
    ref.auto = parseAuto(metarString);
    //Parse Wind
    ref.wind = parseWind(metarString);
    //Parse CAVOK
    ref.cavok = parseCavok(metarString);
    //Parse Visablility
    ref.visibility = parseVisibility(metarString);
    //Parse Runway VIS
    //TODO
    //Parse Weather
    ref.weather = parseWeather(metarString);
    //Parse Clouds
    ref.clouds = parseClouds(metarString);
    //Parse Temp Point Internations 
    var temps_int = parseTempInternation(metarString);
    if (temps_int != null) {
        ref.temperature = temps_int[0];
        ref.dewpoint = temps_int[1];
    }
    //Parse Temp North american Will overwirte international since it is more precise
    var temps_ne = parseTempNA(metarString);
    if (temps_ne != null) {
        ref.temperature = temps_ne[0];
        ref.dewpoint = temps_ne[1];
    }
    //Parse Altimeter
    ref.altimeter = parseAltimeter(metarString);
    return ref;
}
exports.parseMetar = parseMetar;
/**
 * Parses the station name form the metar
 * @param metar raw metar
 * @returns
 */
function parseStation(metar) {
    var re = /^(METAR\s)?([A-Z]{1,4})\s/g;
    var matches = re.exec(metar);
    if (matches != null) {
        return matches[2];
    }
    else {
        throw new Error("Station could not be found invalid metar");
    }
}
exports.parseStation = parseStation;
/**
 * Parse Date object from metar.
 * NOTE: Raw metar data does not contain month or year data. So this function assumes this metar was created in the current month and current year
 * @param metar raw metar
 * @returns
 */
function parseDate(metar) {
    var re = /([\d]{2})([\d]{2})([\d]{2})Z/g;
    var matches = re.exec(metar);
    if (matches != null) {
        var d = new Date();
        d.setUTCDate(parseInt(matches[1]));
        d.setUTCHours(parseInt(matches[2]));
        d.setUTCMinutes(parseInt(matches[3]));
        d.setUTCSeconds(0);
        d.setUTCMilliseconds(0);
        return d;
    }
    else {
        throw new Error("Failed to parse Date");
    }
}
exports.parseDate = parseDate;
/**
 * Parses for CAVOK (Ceiling and visabiliy OK)
 * @param metar raw metar
 * @returns
 */
function parseCavok(metar) {
    var re = /\sCAVOK\s/g;
    return metar.match(re) != null ? true : false;
}
exports.parseCavok = parseCavok;
/**
 * Parses for Automation
 * @param metar raw metar
 * @returns
 */
function parseAuto(metar) {
    var re = /\s(AUTO)?(AO1)?(AO2)?\s/g;
    return metar.match(re) != null ? true : false;
}
exports.parseAuto = parseAuto;
/**
 * Parse international temp dewp point format.
 * @param metar raw metar
 * @returns
 */
function parseTempInternation(metar) {
    var re = /\s(M)?(\d{2})\/(M)?(\d{2})\s/g;
    var matches = re.exec(metar);
    if (matches != null) {
        var temp = parseInt(matches[2]) * (matches[1] == null ? 1 : -1);
        var dew_point = parseInt(matches[4]) * (matches[3] == null ? 1 : -1);
        return [temp, dew_point];
    }
}
exports.parseTempInternation = parseTempInternation;
/**
 * Parse North American temp dew point format
 * @param metar raw metar
 * @returns
 */
function parseTempNA(metar) {
    var re = /(T)(\d{1})(\d{2})(\d{1})(\d{1})(\d{2})(\d{1})/g;
    var matches = re.exec(metar);
    if (matches != null) {
        var temp = parseFloat(matches[3] + "." + matches[4]) * (matches[2] === "0" ? 1 : -1);
        var dew_point = parseFloat(matches[6] + "." + matches[7]) * (matches[5] === "0" ? 1 : -1);
        return [temp, dew_point];
    }
}
exports.parseTempNA = parseTempNA;
/**
 * Parse Weather items
 * @param metar raw metar
 * @returns
 */
function parseWeather(metar) {
    var obs_keys = Object.keys(Weather_1.WEATHER).join('|').replace(/\+/g, "\\+");
    var re = new RegExp("\\s?(" + obs_keys + ")\\s", 'g');
    var matches = metar.match(re);
    if (matches != null) {
        return matches.map(function (match) {
            console.log(match);
            var key = match.trim();
            return {
                abbreviation: key,
                meaning: Weather_1.WEATHER[key].text
            };
        });
    }
    else {
        return new Array();
    }
}
exports.parseWeather = parseWeather;
/**
 * Parse visability
 * @param metar raw metar
 * @returns
 */
function parseVisibility(metar) {
    var re = /\s([0-9]{1,2})?\s?([0-9]{1}\/[0-9]{1})?(SM)\s|\s([0-9]{1,4})\s/g;
    if (metar.match(re)) {
        var vis_parts = re.exec(metar);
        if (vis_parts != null) {
            var meters = vis_parts[4];
            var miles = vis_parts[1];
            var frac_miles = vis_parts[2];
            //Metric case ex: 1000, 9999 
            if (meters != null) {
                return parseInt(meters);
            }
            //whole miles case ex: 1SM 10SM
            else if (frac_miles != null) {
                var total = 0.0;
                if (miles != null) {
                    total += parseFloat(miles);
                }
                total += parseFloat(eval(frac_miles));
                return total * 1609.34;
            }
            //factional miles case "1 1/2SM" "1/4SM"
            else {
                return parseInt(miles) * 1609.34;
            }
        }
    }
    return undefined;
}
exports.parseVisibility = parseVisibility;
/**
 * Parse cloud coverages
 * @param metarString raw metar
 * @returns
 */
function parseClouds(metarString) {
    var _a;
    var re = /(NCD|SKC|CLR|NSC|FEW|SCT|BKN|OVC|VV)(\d{3})/g;
    var clouds = new Array();
    var matches;
    while ((matches = re.exec(metarString)) != null) {
        var cloud = {
            abbreviation: matches[1],
            meaning: (_a = Cloud_1.CLOUDS[matches[1]]) === null || _a === void 0 ? void 0 : _a.text,
            altitude: parseInt(matches[2]) * 100
        };
        clouds.push(cloud);
    }
    return clouds;
}
exports.parseClouds = parseClouds;
/**
 * Parse wind data
 * @param metar raw metar
 * @returns
 */
function parseWind(metar) {
    var wind = new Wind_1.Wind();
    var re = /\s(\d{3})(\d{2})(G)?(\d{2})?(KT|MPS)\s/g;
    var matches = re.exec(metar);
    if (matches != null) {
        wind.direction = parseInt(matches[1]);
        wind.speed = parseInt(matches[2]);
        wind.unit = matches[5];
    }
    return wind;
}
exports.parseWind = parseWind;
function parseAltimeter(metar) {
    var re = /(A|Q)(\d{2})(\d{2})/g;
    var matches = re.exec(metar);
    if (matches != null) {
        if (matches[1] === "Q") {
            var pressure = parseFloat(matches[2] + matches[3]);
            return parseFloat((pressure * 0.029529).toFixed(2));
        }
        else {
            return parseFloat(matches[2] + "." + matches[3]);
        }
    }
}
exports.parseAltimeter = parseAltimeter;

},{"./parts/Cloud":115,"./parts/Weather":116,"./parts/Wind":117}],113:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.metarToImgSrc = exports.metarToSVG = exports.rawMetarToMetarPlot = exports.rawMetarToSVG = exports.MetarPlot = void 0;
var Metar_1 = require("./Metar");
var Cloud_1 = require("./parts/Cloud");
var Weather_1 = require("./parts/Weather");
var Wind_1 = require("./parts/Wind");
/**
 * Extracted Metar message
 */
var MetarPlot = /** @class */ (function () {
    function MetarPlot() {
    }
    return MetarPlot;
}());
exports.MetarPlot = MetarPlot;
/**
 * Turns a raw METAR to an SVG image
 * @param rawMetar RAW metar
 * @param width css width of svg
 * @param height css height of svg
 * @param metric true for metric units(m, hPa, mps), false for north american units (miles, inHg, Kts)
 * @returns
 */
function rawMetarToSVG(rawMetar, width, height, metric) {
    var plot = rawMetarToMetarPlot(rawMetar, metric);
    return metarToSVG(plot, width, height);
}
exports.rawMetarToSVG = rawMetarToSVG;
/**
 *
 * @param rawMetar raw metar string
 * @param metric true for metric units(m, hPa, mps), false for north american units (miles, inHg, Kts)
 * @returns
 */
function rawMetarToMetarPlot(rawMetar, metric) {
    var _a, _b;
    var metar = new Metar_1.METAR(rawMetar);
    var wx = (_a = metar.weather[0]) === null || _a === void 0 ? void 0 : _a.abbreviation;
    //Metric converion
    var pressure;
    var vis = undefined;
    var temp = metar.temperature;
    var dp = metar.dewpoint;
    if (metric) {
        pressure = (metar.altimeter != null) ? Math.round(metar.altimeter * 33.86) : undefined;
        if (metar.visibility != null) {
            vis = metar.visibility > 9999 ? 9999 : Math.round(metar.visibility);
        }
    }
    else {
        temp = cToF(temp);
        dp = cToF(dp);
        pressure = metar.altimeter;
        vis = milePrettyPrint((_b = metar.visibility) !== null && _b !== void 0 ? _b : -1);
    }
    return {
        metric: metric !== null && metric !== void 0 ? metric : false,
        visablity: vis,
        temp: temp,
        dew_point: dp,
        station: metar.station,
        wind_direction: (typeof metar.wind.direction === "number") ? metar.wind.direction : undefined,
        wind_speed: metar.wind.speed,
        gust_speed: metar.wind.gust,
        wx: wx,
        pressure: pressure,
        coverage: determinCoverage(metar)
    };
}
exports.rawMetarToMetarPlot = rawMetarToMetarPlot;
/**
 * Pretty print Miles in fractions if under 1 mile
 */
function milePrettyPrint(meters) {
    var print = "";
    if (meters === -1) {
        return print;
    }
    var miles = meters * 0.0006213712;
    //round to nearest quarter
    var text = (Math.round(miles * 4) / 4).toFixed(2).toString();
    return text.replace(".00", "");
}
/**
 * Determines the coverage symbol
 * @param metar
 * @returns
 */
function determinCoverage(metar) {
    var _a;
    var prevailingCoverage;
    metar.clouds.forEach(function (cloud) {
        if (prevailingCoverage != null) {
            var curr = prevailingCoverage.abbreviation != null ? Cloud_1.CLOUDS[prevailingCoverage.abbreviation].rank : undefined;
            var rank = cloud.abbreviation != null ? Cloud_1.CLOUDS[cloud.abbreviation].rank : undefined;
            console.log("cur: " + curr + ", rank: " + rank);
            if (rank != null) {
                if (rank > curr) {
                    prevailingCoverage = cloud;
                }
            }
        }
        else {
            prevailingCoverage = cloud;
        }
    });
    return (_a = prevailingCoverage === null || prevailingCoverage === void 0 ? void 0 : prevailingCoverage.abbreviation) !== null && _a !== void 0 ? _a : "";
}
/**
 * Turns a Metar plot object to a SVG image
 * @param metar MetarPlot Object
 * @param width css width for svg
 * @param height css height for svg
 * @returns
 */
function metarToSVG(metar, width, height) {
    var _a, _b, _c, _d, _e, _f;
    var VIS = (_a = metar.visablity) !== null && _a !== void 0 ? _a : "";
    var TMP = (_b = metar.temp) !== null && _b !== void 0 ? _b : "";
    var DEW = (_c = metar.dew_point) !== null && _c !== void 0 ? _c : "";
    var STA = (_d = metar.station) !== null && _d !== void 0 ? _d : "";
    var ALT = (_e = metar.pressure) !== null && _e !== void 0 ? _e : "";
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"" + width + "\" height=\"" + height + "\" viewBox=\"0 0 500 500\">\n                <style>\n                    .txt{ font-size: 47.5px; font-family: sans-serif; }\n                    .tmp{ fill: red }\n                    .sta{ fill: grey }\n                    .dew{ fill: blue }\n                    .vis{ fill: violet }\n                </style>\n                " + (0, Wind_1.genWind)(metar) + "\n                " + (0, Weather_1.getWeatherSVG)((_f = metar.wx) !== null && _f !== void 0 ? _f : "") + "\n                " + (0, Cloud_1.genCoverage)(metar.coverage, metar.condition) + "\n                <g id=\"text\">\n                    <text class=\"vis txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"80\"   y=\"260\" text-anchor=\"middle\" xml:space=\"preserve\">" + VIS + "</text>\n                    <text class=\"tmp txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"160\"  y=\"220\" text-anchor=\"middle\" xml:space=\"preserve\" >" + TMP + "</text>\n                    <text class=\"dew txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"160\"  y=\"315\" text-anchor=\"middle\" xml:space=\"preserve\">" + DEW + "</text>\n                    <text class=\"sta txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"275\"  y=\"315\" text-anchor=\"start\" xml:space=\"preserve\">" + STA + "</text>\n                    <text class=\"sta txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"275\"  y=\"220\"  text-anchor=\"start\" xml:space=\"preserve\">" + ALT + "</text>\n                </g>\n            </svg>";
}
exports.metarToSVG = metarToSVG;
/**
 * Turns a Metar plot object to a SVG image
 * @param metar MetarPlot Object
 * @returns A Base64 encoded string to be added directly as img src
 */
function metarToImgSrc(metar) {
    var data = btoa(unescape(encodeURIComponent(metarToSVG(metar, "100px", "100px"))));
    return "data:image/svg+xml;base64," + data;
}
exports.metarToImgSrc = metarToImgSrc;
/**
 * Convert ºF to ºF
 * @param celsius
 */
function cToF(celsius) {
    if (celsius != null) {
        return Math.round(celsius * 9 / 5 + 32);
    }
}

},{"./Metar":112,"./parts/Cloud":115,"./parts/Weather":116,"./parts/Wind":117}],114:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CLOUDS = exports.windImgSrc = exports.genWind = exports.getWeatherImgSrc = exports.getWeatherSVG = exports.WEATHER = exports.parseMetar = exports.METAR = exports.metarToImgSrc = exports.rawMetarToMetarPlot = exports.rawMetarToSVG = exports.metarToSVG = exports.MetarPlot = void 0;
var MetarPlot_1 = require("./MetarPlot");
Object.defineProperty(exports, "MetarPlot", { enumerable: true, get: function () { return MetarPlot_1.MetarPlot; } });
Object.defineProperty(exports, "metarToSVG", { enumerable: true, get: function () { return MetarPlot_1.metarToSVG; } });
Object.defineProperty(exports, "rawMetarToSVG", { enumerable: true, get: function () { return MetarPlot_1.rawMetarToSVG; } });
Object.defineProperty(exports, "rawMetarToMetarPlot", { enumerable: true, get: function () { return MetarPlot_1.rawMetarToMetarPlot; } });
Object.defineProperty(exports, "metarToImgSrc", { enumerable: true, get: function () { return MetarPlot_1.metarToImgSrc; } });
var Metar_1 = require("./Metar");
Object.defineProperty(exports, "METAR", { enumerable: true, get: function () { return Metar_1.METAR; } });
Object.defineProperty(exports, "parseMetar", { enumerable: true, get: function () { return Metar_1.parseMetar; } });
var Weather_1 = require("./parts/Weather");
Object.defineProperty(exports, "WEATHER", { enumerable: true, get: function () { return Weather_1.WEATHER; } });
Object.defineProperty(exports, "getWeatherSVG", { enumerable: true, get: function () { return Weather_1.getWeatherSVG; } });
Object.defineProperty(exports, "getWeatherImgSrc", { enumerable: true, get: function () { return Weather_1.getWeatherImgSrc; } });
var Wind_1 = require("./parts/Wind");
Object.defineProperty(exports, "genWind", { enumerable: true, get: function () { return Wind_1.genWind; } });
Object.defineProperty(exports, "windImgSrc", { enumerable: true, get: function () { return Wind_1.windImgSrc; } });
var Cloud_1 = require("./parts/Cloud");
Object.defineProperty(exports, "CLOUDS", { enumerable: true, get: function () { return Cloud_1.CLOUDS; } });

},{"./Metar":112,"./MetarPlot":113,"./parts/Cloud":115,"./parts/Weather":116,"./parts/Wind":117}],115:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.genCoverage = exports.CLOUDS = exports.CONDITIONS = exports.Cloud = void 0;
/**
 * Cloud Description
 */
var Cloud = /** @class */ (function () {
    function Cloud() {
    }
    return Cloud;
}());
exports.Cloud = Cloud;
exports.CONDITIONS = {
    //Visual Flight Rules
    VFR: "green",
    //Marginal Visual Flight Rules
    MVFR: "blue",
    //Instrument Flight Rules
    IFR: "red",
    //Low Instrument flight Rules
    LIFR: "purple"
};
var size = 25;
var piD = (size / 2) * 3.14 * 2;
//clear square
var CLR_SQUARE = "<g id=\"clr\">\n        <rect width=\"" + size + "\" height=\"" + size + "\" x=\"calc(250 - " + size / 2 + ")\" y=\"calc(250 - " + size / 2 + ")\" class=\"coverage\"/>\n    </g>";
//clear circle
var CLR_CIRCLE = "<g id=\"clr\">\n        <circle cx=\"250\" cy=\"250\" r=\"" + size + "\" fill=\"#00000000\" class=\"coverage\"/>\n    </g>";
// Few clouds 25% coverage
var FEW = "<g id=\"few\">\n        <circle cx=\"250\" cy=\"250\" r=\"" + size + "\" fill=\"#00000000\" class=\"coverage\"/>\n        <circle cx=\"250\" cy=\"250\" r=\"" + size / 2 + "\" fill=\"#00000000\" \n        stroke-dasharray=\"0 calc(75 * " + piD + " / 100) calc(25 * " + piD + " / 100)\"\n        class=\"partial\"/>\n    </g>";
// Scattered clouds 50% coverage
var SCT = "<g id=\"few\">\n    <circle cx=\"250\" cy=\"250\" r=\"" + size + "\" fill=\"#00000000\" class=\"coverage\"/>\n    <circle cx=\"250\" cy=\"250\" r=\"" + size / 2 + "\" fill=\"#00000000\" \n    stroke-dasharray=\"calc(25 * " + piD + " / 100) calc(50 * " + piD + " / 100) calc(25 * " + piD + " / 100)\"\n    class=\"partial\"/>\n</g>";
// Broken clouds 75% coverage
var BRK = "<g id=\"few\">\n    <circle cx=\"250\" cy=\"250\" r=\"" + size + "\" fill=\"#00000000\" class=\"coverage\"/>\n    <circle cx=\"250\" cy=\"250\" r=\"" + size / 2 + "\" fill=\"#00000000\" \n    stroke-dasharray=\"calc(49 * " + piD + " / 100) calc(26 * " + piD + " / 100) calc(25 * " + piD + " / 100)\"\n    class=\"partial\"/>\n</g>";
// Overcast
var OVC = "<g id=\"ovc\">\n    <circle cx=\"250\" cy=\"250\" r=\"" + size + "\" class=\"ovc\"/>\n</g>";
//Cloud abbreviation map
exports.CLOUDS = {
    NCD: { svg: CLR_CIRCLE, text: "no clouds", rank: 0 },
    SKC: { svg: CLR_CIRCLE, text: "sky clear", rank: 0 },
    CLR: { svg: CLR_CIRCLE, text: "no clouds under 12,000 ft", rank: 0 },
    NSC: { svg: CLR_CIRCLE, text: "no significant", rank: 0 },
    FEW: { svg: FEW, text: "few", rank: 1 },
    SCT: { svg: SCT, text: "scattered", rank: 2 },
    BKN: { svg: BRK, text: "broken", rank: 3 },
    OVC: { svg: OVC, text: "overcast", rank: 4 },
    VV: { svg: OVC, text: "vertical visibility", rank: 5 },
};
/**
 * Generates SVG for cloud coverage
 * @param coverage
 * @param condition
 * @returns
 */
function genCoverage(coverage, condition) {
    if (coverage != null && coverage !== "") {
        return "\n            <style>\n                .coverage{ \n                    stroke-width: 5; \n                    stroke: " + (condition != null ? exports.CONDITIONS[condition] : "black") + ";\n                }\n                .partial{\n                    stroke-width: 25; \n                    stroke: " + (condition != null ? exports.CONDITIONS[condition] : "black") + ";\n                }\n                .ovc{\n                    fill: " + (condition != null ? exports.CONDITIONS[condition] : "black") + ";\n                }\n            </style>\n            " + exports.CLOUDS[coverage].svg;
    }
    else {
        return "";
    }
}
exports.genCoverage = genCoverage;

},{}],116:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WEATHER = exports.getWeatherImgSrc = exports.getWeatherSVG = exports.Weather = void 0;
/**
 * Weather Descriptor
 */
var Weather = /** @class */ (function () {
    function Weather() {
    }
    return Weather;
}());
exports.Weather = Weather;
/**
 * Returns SVG icon
 * @param key weather abbriviation
 */
function getWeatherSVG(key) {
    var weather = exports.WEATHER[key] != null ? exports.WEATHER[key].svg : "";
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"65\" height=\"65\" viewBox=\"0 0 500 500\" x=\"140\" y=\"220\">\n                <style>\n                    .wx_graphic {\n                        stroke: black;\n                        fill: none;\n                        stroke-width: 30\n                    }\n                </style>\n                " + weather + "\n            </svg>";
}
exports.getWeatherSVG = getWeatherSVG;
/**
 * Returns a raw base64 src for img tag
 * @param key
 * @returns
 */
function getWeatherImgSrc(key) {
    var weather = exports.WEATHER[key] != null ? exports.WEATHER[key].svg : "";
    var data = btoa(unescape(encodeURIComponent("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"65\" height=\"65\" viewBox=\"0 0 500 500\">\n                <style>\n                    .wx_graphic {\n                        stroke: black;\n                        fill: none;\n                        stroke-width: 30\n                    }\n                </style>\n                " + weather + "\n            </svg>")));
    return "data:image/svg+xml;base64," + data;
}
exports.getWeatherImgSrc = getWeatherImgSrc;
var BRK_DWN_ARW = "<line class=\"wx_graphic\" x1=\"350\" y1=\"50\" x2=\"175\" y2=\"250\"></line>\n    <line class=\"wx_graphic\" x1=\"170\" y1=\"245\" x2=\"350\" y2=\"415\"></line>\n    <line class=\"wx_graphic\" x1=\"350\" y1=\"415\" x2=\"250\" y2=\"415\"></line>\n    <line class=\"wx_graphic\" x1=\"350\" y1=\"425\" x2=\"350\" y2=\"315\"></line>";
var RIGHT_ARROW = "<line class=\"wx_graphic\" x1=\"120\" y1=\"250\" x2=\"430\" y2=\"250\"></line>\n    <line class=\"wx_graphic\" x1=\"380\" y1=\"250\" x2=\"465\" y2=\"250\" transform=\"rotate(-45, 450, 250)\"></line>\n    <line class=\"wx_graphic\" x1=\"380\" y1=\"250\" x2=\"450\" y2=\"250\" transform=\"rotate(45, 450, 250)\"></line>";
var COMMA = "<ellipse\n      style=\"fill:black;\"\n      cx=\"238\"\n      cy=\"178\"\n      rx=\"88\"\n      ry=\"87\" />\n    <path\n      class=\"wx_graphic\"\n      d=\"m 174,335 c 9,2 19,3 30,3 h 2 c 56,0 101,-34 101,-76 v -68 c 0,-42 -45,-76 -101,-76 h -2\" />";
var STAR = "<rect\n        style=\"fill:black\"\n        width=\"50\"\n        height=\"350\"\n        x=\"225\"\n        y=\"-25\" />\n    <rect\n        style=\"fill:black\"\n        width=\"50\"\n        height=\"350\"\n        x=\"235\"\n        y=\"-300\"\n        transform=\"rotate(55)\" />\n    <rect\n        style=\"fill:black\"\n        width=\"50\" height=\"350\"\n        x=\"-10\" y=\"115\"\n        transform=\"rotate(-55)\" />";
var DWN_TRI = "<path\n    class=\"wx_graphic\" \n    style=\"stroke-linecap:butt;stroke-linejoin:round\"\n    d=\"M 245,420 175,150 320,146 Z\" />";
var DWN_TRI_SMALL = "<path\n        class=\"wx_graphic\"\n        style=\"stroke-linecap:butt;stroke-linejoin:round\"\n        d=\"M 240,435 190,275 290,275 Z\"/>";
var SINE = "<g>\n        <path\n            class=\"wx_graphic\" \n            d=\"m 430,230 a 85,90 0 0 1 -45,80 85,90 0 0 1 -85,0 85,90 0 0 1 -45,-80\"/>\n        <path\n            class=\"wx_graphic\" \n            d=\"m -80,-230 a 85,90 0 0 1 -45,80 85,90 0 0 1 -85,0 85,90 0 0 1 -45,-80\"\n            transform=\"rotate(180)\" />\n    </g>";
/*
SVG Icons
*/
//DUST OR SAND
//Smoke or volcanic ash
var FU_VA = "<g id=\"FU_VA\">\n        <line class=\"wx_graphic\" x1=\"100\" y1=\"150\" x2=\"100\" y2=\"400\"></line>\n        <path class=\"wx_graphic\" d=\"M 100 150 C 115 75 185 75 200 150\"></path>\n        <path class=\"wx_graphic\" d=\"M 200 150 C 215 215 285 215 300 150\"></path>\n        <path class=\"wx_graphic\" d=\"M 300 150 C 315 75 380 75 400 150\"></path>\n    </g>";
//Haze
var HZ = "<g id=\"HZ\">\n        <ellipse\n        class=\"wx_graphic\" \n        cx=\"155\"\n        cy=\"255\"\n        rx=\"90\"\n        ry=\"75\" />\n    <ellipse\n        class=\"wx_graphic\" \n        cx=\"340\"\n        cy=\"255\"\n        rx=\"90\"\n        ry=\"75\" />\n    </g>";
//Dust or Sand
var DU_SA = "<g id=\"DU_SA\">\n        <path\n        id=\"path342\"\n        class=\"wx_graphic\"\n        d=\"m 322.61133,125.13086 c -16.56384,-20.34934 -42.43354,-31.823704 -69.45117,-30.804688 -11.39949,0.429681 -22.58631,3.074347 -32.87305,7.771488 -35.54781,16.23274 -54.37418,53.88954 -45.19336,90.39648 9.18079,36.50727 43.87857,61.96066 83.29297,61.10156 m -69.90625,126.18555 c 23.94628,29.96696 67.31576,40.40903 104.10937,25.06641 36.79392,-15.34204 57.03041,-52.30668 48.57813,-88.73438 -8.45193,-36.42761 -43.29946,-62.43592 -83.65235,-62.43359\" />\n    </g>";
//Blowing dust or sand
var BLDU_BLSA = "<g id=\"BLDU_BLSA\">\n        " + DU_SA + "\n        <rect\n            class=\"wx_graphic\"\n            width=\"0.75\"\n            height=\"385\"\n            x=\"255\"\n            y=\"60\" />\n    </g>";
//Dust Devil
var PO = "<g id=\"PO\">\n        <path\n            class=\"wx_graphic\" \n            d=\"M 371.02339,260.54119 327.623,186.08416 175.04878,186.71893 99.310495,319.1701 l 76.835945,131.81445 152.57421,-0.63281 42.2129,-73.82227\" />\n        <path\n            class=\"wx_graphic\" \n            d=\"M 369.42563,141.09136 326.02524,66.634336 173.45102,67.269101 97.712737,199.72027 174.54868,331.53472 327.1229,330.90191 369.33579,257.07964\" />\n    </g>";
//Vicinity sand storm
var VCSS = "<g id=\"VCSS\">\n        " + DU_SA + "\n        <path\n            class=\"wx_graphic\"\n            d=\"m 130,245 240,-0.0781 -25,-50\" />\n        <path\n            class=\"wx_graphic\" \n            d=\"M 390,200 A 195,190 0 0 1 195,150 195,190 0 0 1 145,-40\"\n            transform=\"matrix(0.7,0.7,-0.7,0.7,0,0)\" />\n        <path\n            class=\"wx_graphic\" \n            d=\"M -285,225 A 190,185 0 0 1 -485,185 190,185 0 0 1 -540,-5\"\n            transform=\"matrix(-0.65,-0.75,0.75,-0.65,0,0)\"/>\n    </g>";
//FOG OR SPEACIAL WEATHER
//Mist or light fog
var BR = "<g id=\"BR\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"200\" x2=\"450\" y2=\"200\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"300\" x2=\"450\" y2=\"300\"></line>\n    </g>";
//More or less continuous shallow fog
var MIFG = "<g id=\"MIFG\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"200\" x2=\"200\" y2=\"200\"></line>\n        <line class=\"wx_graphic\" x1=\"300\" y1=\"200\" x2=\"450\" y2=\"200\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"300\" x2=\"450\" y2=\"300\"></line>\n    </g>\n    ";
//Vicinity thunderstorm
var VCTS = "<g id=\"VCTS\">" + BRK_DWN_ARW + "</g>";
//Virga or precipitation not hitting ground
var VIRGA = "<g id=\"VIGRA\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"250\"\n            rx=\"80\"\n            ry=\"80\"/>\n        <path\n            class=\"wx_graphic\" \n            d=\"M 415,310 A 185,190 25 0 1 245,415 185,190 25 0 1 80,305\" />\n    </g>";
//Vicinity showers
var VCSH = "<g id=\"VCSH\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"250\"\n            rx=\"80\"\n            ry=\"80\" />\n        <path\n            class=\"wx_graphic\" \n            d=\"M 390,200 A 195,190 0 0 1 195,150 195,190 0 0 1 145,-40\"\n            transform=\"matrix(0.7,0.7,-0.7,0.7,0,0)\" />\n        <path\n            class=\"wx_graphic\" \n            d=\"M -285,225 A 190,185 0 0 1 -485,185 190,185 0 0 1 -540,-5\"\n            transform=\"matrix(-0.65,-0.75,0.75,-0.65,0,0)\"/>\n    </g>";
//Thunderstorm with or without precipitation
var TS = "<g id=\"TS\">\n        " + BRK_DWN_ARW + "\n        <line class=\"wx_graphic\" x1=\"355\" y1=\"50\" x2=\"50\" y2=\"50\"></line>\n        <line class=\"wx_graphic\" x1=\"60\" y1=\"50\" x2=\"60\" y2=\"440\"></line>\n    </g>\n    ";
//Squalls
var SQ = "<g id=\"SQ\">\n        <line class=\"wx_graphic\" x1=\"250\" y1=\"450\" x2=\"150\" y2=\"50\"></line>\n        <line class=\"wx_graphic\" x1=\"150\" y1=\"50\" x2=\"250\" y2=\"125\"></line>\n        <line class=\"wx_graphic\" x1=\"250\" y1=\"125\" x2=\"350\" y2=\"50\"></line>\n        <line class=\"wx_graphic\" x1=\"350\" y1=\"50\" x2=\"250\" y2=\"450\"></line>\n    </g>";
//Funnel cloud or tornado
var FC = "<g id=\"FC\">\n        <line class=\"wx_graphic\" x1=\"200\" y1=\"100\" x2=\"200\" y2=\"400\"></line>\n        <line class=\"wx_graphic\" x1=\"300\" y1=\"100\" x2=\"300\" y2=\"400\"></line>\n        <line class=\"wx_graphic\" x1=\"300\" y1=\"100\" x2=\"375\" y2=\"50\"></line>\n        <line class=\"wx_graphic\" x1=\"300\" y1=\"400\" x2=\"375\" y2=\"450\"></line>\n        <line class=\"wx_graphic\" x1=\"200\" y1=\"400\" x2=\"125\" y2=\"450\"></line>\n        <line class=\"wx_graphic\" x1=\"200\" y1=\"100\" x2=\"125\" y2=\"50\"></line>\n    </g>\n    ";
//BLOWING WEATHER
//Sand or dust storm
var SS = "<g id=\"SS\">\n        " + DU_SA + "\n        <path\n            class=\"wx_graphic\"\n            d=\"m 130,245 240,-0.0781 -25,-50\" />\n    </g>";
//Strong sand or dust storm
var PLUS_SS = "<g id=\"+SS\">\n        " + DU_SA + "\n        <path\n            class=\"wx_graphic\"\n            d=\"m 135,230 c 80,-0.025 150,-0.050 240,-0.078 l -30,-50\"/>\n        <path\n            class=\"wx_graphic\"\n            d=\"m 135,285 240,0.078 -30,50\" />\n    </g>";
//Blowing snow
var BLSN = "<g id=\"BLSN\">\n        <rect\n            class=\"wx_graphic\"\n            width=\"336.96838\"\n            height=\"3.2715375\"\n            x=\"74.154854\"\n            y=\"248.36423\" />\n        <path\n            class=\"wx_graphic\"\n            d=\"m 370.77355,286.68722 58.29491,-38.25 -58.29491,-34.99609\" />\n        <g transform=\"rotate(-90,250,250)\">\n            <rect\n                class=\"wx_graphic\"\n                width=\"335\"\n                height=\"5\"\n                x=\"75\"\n                y=\"250\" />\n            <path\n                class=\"wx_graphic\"\n                d=\"m 370.77355,286.68722 58.29491,-38.25 -58.29491,-34.99609\" />\n        </g>\n    </g>";
//Drifting snow
var DRSN = "<g id=\"DRSN\">\n        <rect\n            class=\"wx_graphic\"\n            width=\"336.96838\"\n            height=\"3.2715375\"\n            x=\"74.154854\"\n            y=\"248.36423\" />\n        <path\n            class=\"wx_graphic\"\n            d=\"m 370.77355,286.68722 58.29491,-38.25 -58.29491,-34.99609\" />\n        <g transform=\"rotate(90,250,250)\">\n            <rect\n                class=\"wx_graphic\"\n                width=\"335\"\n                height=\"5\"\n                x=\"75\"\n                y=\"250\" />\n            <path\n                class=\"wx_graphic\"\n                d=\"m 370.77355,286.68722 58.29491,-38.25 -58.29491,-34.99609\" />\n        </g>\n    </g>\n    ";
//FOG//////////////////////////////////////////////
//Vicinity fog
var VCFG = "<g id=\"VCFG\">\n        <line class=\"wx_graphic\" x1=\"100\" y1=\"150\" x2=\"400\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"100\" y1=\"250\" x2=\"400\" y2=\"250\"></line>\n        <line class=\"wx_graphic\" x1=\"100\" y1=\"350\" x2=\"400\" y2=\"350\"></line>\n        <path class=\"wx_graphic\" d=\"M 60 135 C 15 165 15 335 65 365\"></path>\n        <path class=\"wx_graphic\" d=\"M 435 135 C 485 150 500 345 435 365\"></path>\n    </g>";
//Patchy fog
var BCFG = "<g id=\"BCFG\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"150\" x2=\"150\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"350\" y1=\"150\" x2=\"450\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"250\" x2=\"450\" y2=\"250\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"350\" x2=\"150\" y2=\"350\"></line>\n        <line class=\"wx_graphic\" x1=\"350\" y1=\"350\" x2=\"450\" y2=\"350\"></line>\n    </g>";
//Fog, sky discernable
var PRFG = "<g id=\"BCFG\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"150\" x2=\"150\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"350\" y1=\"150\" x2=\"450\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"250\" x2=\"450\" y2=\"250\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"350\" x2=\"450\" y2=\"350\"></line>\n    </g>";
//Fog, sky undiscernable
var FG = "<g id=\"FG\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"150\" x2=\"450\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"250\" x2=\"450\" y2=\"250\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"350\" x2=\"450\" y2=\"350\"></line>\n    </g>";
//Freezing fog
var FZFG = "<g id=\"FG\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"150\" x2=\"450\" y2=\"150\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"250\" x2=\"450\" y2=\"250\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"350\" x2=\"450\" y2=\"350\"></line>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"150\" x2=\"250\" y2=\"350\"></line>\n        <line class=\"wx_graphic\" x1=\"450\" y1=\"150\" x2=\"250\" y2=\"350\"></line>\n    </g>";
//Drizzle
//Light drizzle
var MIN_DZ = "<g id=\"-DZ\">\n        <g transform=\"matrix(0.6,0,0,0.6,20,114)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,203,114)\">" + COMMA + "</g>\n    </g>";
//Moderate drizzle
var DZ = "<g id=\"DZ\">\n        <g transform=\"matrix(0.6,0,0,0.6,18,158)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,201,158)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,106,12)\">" + COMMA + "</g>\n    </g>";
//Heavy drizzle
var PLUS_DZ = "<g id=\"+DZ\">\n        <g transform=\"matrix(0.6,0,0,0.6,20,114)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,203,114)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,108,-31)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,108,261)\">" + COMMA + "</g>\n    </g>";
//Light freezing drizzle
var MIN_FZDZ = "<g id=\"-FZDZ\">\n        <g transform=\"matrix(0.6,0,0,0.6,28,136)\">" + COMMA + "</g>\n        " + SINE + "\n    </g>";
//Moderate to heavy freezing drizzle
var FZDZ = "<g id=\"-DZ\">\n        <g transform=\"matrix(0.6,0,0,0.6,28,136)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,204,66)\">" + COMMA + "</g>\n        " + SINE + "    \n    </g>";
//Light drizzle and rain
var MIN_DZRA = "<g id=\"-DZRA\">\n        <g transform=\"matrix(0.6,0,0,0.6,107,193)\">" + COMMA + "</g>\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"150\"\n            rx=\"50\"\n            ry=\"55\"/>\n    </g>";
//Moderate to heavy drizzle and rain
var DZRA = "<g id=\"DZRA\" transform=\"matrix(1,0,0,0.9,0.6,120)\">\n        <g transform=\"matrix(0.6,0,0,0.6,105,170)\">" + COMMA + "</g>\n        <g transform=\"matrix(0.6,0,0,0.6,105,-140)\">" + COMMA + "</g>\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"150\"\n            rx=\"50\"\n            ry=\"55\"/>\n    </g>";
//RAIN
//Light rain
var MIN_RA = "<g id=\"-RA\">\n        <ellipse\n            style=\"fill:#00000\"\n            cx=\"130\"\n            cy=\"245\"\n            rx=\"80\"\n            ry=\"80\" />\n        <ellipse\n            style=\"fill:black\"\n            cx=\"370\"\n            cy=\"245\"\n            rx=\"80\"\n            ry=\"80\" />\n    </g>";
//Moderate rain
var RA = "<g id=\"RA\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"135\"\n            cy=\"355\"\n            rx=\"80\"\n            ry=\"80\" />\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"145\"\n            rx=\"80\"\n            ry=\"80\" />\n        <ellipse\n            style=\"fill:black\"\n            cx=\"365\"\n            cy=\"355\"\n            rx=\"80\"\n            ry=\"80\" />\n    </g>";
//Heavy rain
var PLUS_RA = "<g id=\"+RA\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"140\"\n            cy=\"250\"\n            rx=\"80\"\n            ry=\"80\" />\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"100\"\n            rx=\"80\"\n            ry=\"80\" />\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"400\"\n            rx=\"80\"\n            ry=\"80\" />\n        <ellipse\n            style=\"fill:black\"\n            cx=\"360\"\n            cy=\"250\"\n            rx=\"80\"\n            ry=\"80\" />\n    </g>";
//Light freezing rain
var MIN_FZRA = "<g id=\"-FZRA\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"170\"\n            cy=\"250\"\n            rx=\"50\"\n            ry=\"55\"/>\n        " + SINE + "\n    </g>";
//Moderate to heavy freezing rain
var FZRA = "<g id=\"FZRA\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"170\"\n            cy=\"250\"\n            rx=\"50\"\n            ry=\"55\"/>\n        <ellipse\n            style=\"fill:black\"\n            cx=\"345\"\n            cy=\"215\"\n            rx=\"50\"\n            ry=\"55\"/>\n        " + SINE + "\n    </g>";
//Light rain and snow
var MIN_RASN = "<g id=\"-RASN\" transform=\"translate(-0.45,160)\">\n        <g transform=\"matrix(0.45,0,0,0.4,140,140)\">" + STAR + "</g>\n        <ellipse\n            style=\"fill:black\"\n            cx=\"250\"\n            cy=\"-15\"\n            rx=\"70\"\n            ry=\"70\" />\n    </g>";
//Moderate to heavy rain and snow
var RASN = "<g id=\"RASN\" transform=\"translate(-0.43,155)\">\n        <g transform=\"matrix(0.45,0,0,0.4,140,200)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,140,-130)\">" + STAR + "</g>\n        <ellipse\n            cx=\"250\"\n            cy=\"95\"\n            rx=\"70\"\n            ry=\"70\" />\n    </g>";
//SNOW and MISC FROZEN PERCIP
//Light snow
var MIN_SN = "<g id=\"-SN\" transform=\"translate(-0.435,100)\">\n        <g transform=\"matrix(0.45,0,0,0.4,40,90)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,240,90)\">" + STAR + "</g>\n    </g>";
//Moderate snow
var SN = "<g id=\"SN\" transform=\"translate(-0.435,170)\">\n        <g transform=\"matrix(0.45,0,0,0.4,40,90)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,240,90)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,140,-55)\">" + STAR + "</g>\n    </g>";
//Heavy snow
var PLUS_SN = "<g id=\"+SN\" transform=\"translate(-0.435,100)\">\n        <g transform=\"matrix(0.45,0,0,0.4,40,90)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,240,90)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,140,-55)\">" + STAR + "</g>\n        <g transform=\"matrix(0.45,0,0,0.4,140,240)\">" + STAR + "</g>\n    </g>";
//Snow grains
var SG = "<g id=\"SG\">\n        <polygon class=\"wx_graphic\" points=\"250 150 150 300 350 300\"></polygon>\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"230\" x2=\"197\" y2=\"230\"></line>\n        <line class=\"wx_graphic\" x1=\"303\" y1=\"230\" x2=\"450\" y2=\"230\"></line>\n    </g>";
//Ice crystals
var IC = "<g id=\"IC\">\n        <line class=\"wx_graphic\" x1=\"50\" y1=\"250\" x2=\"450\" y2=\"250\"></line>\n        <line class=\"wx_graphic\" x1=\"175\" y1=\"175\" x2=\"325\" y2=\"325\"></line>\n        <line class=\"wx_graphic\" x1=\"325\" y1=\"175\" x2=\"174\" y2=\"325\"></line>  \n    </g>";
//Ice pellets
var PE_PL = "<g id=\"PE_PL\">\n      <polygon class=\"wx_graphic\" points=\"250 150 150 300 350 300\"></polygon>\n      <text style=\"fill: black; font-size: 100px;\" x=\"237.271\" y=\"242.526\" dx=\"-18.412\" dy=\"32.137\">\u25CF</text>\n    </g>";
//SHOWERY PERCIPITATION
//Light rain showers
var MIN_SHRA = "<g id=\"MIN_SHRA\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"245\"\n            cy=\"70\"\n            rx=\"50\"\n            ry=\"50\" />\n        " + DWN_TRI + "\n    </g>";
//Moderate to heavy rain showers
var SHRA = "<g transform=\"translate(3.14,20)\">\n        <ellipse\n            style=\"fill:black\"\n                cx=\"245\"\n                cy=\"70\"\n                rx=\"50\"\n                ry=\"50\" />\n        " + DWN_TRI + "\n        <rect\n            style=\"fill:none;stroke:black;stroke-width:15;\"\n            width=\"100\"\n            height=\"5\"\n            x=\"195\"\n            y=\"205\" />\n    </g>";
//Light rain and snow showers
var MIN_SHRASN = "<g transform=\"translate(9,20)\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"240\"\n            cy=\"195\"\n            rx=\"50\"\n            ry=\"50\"/>\n        " + DWN_TRI_SMALL + "\n        <g transform=\"matrix(0.3,0,0,0.3,165,35)\">\n            " + STAR + "\n        </g>\n    </g>";
//Moderate to heavy rain and snow showers
var SHRASN = "<g transform=\"translate(9,20)\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"240\"\n            cy=\"195\"\n            rx=\"50\"\n            ry=\"50\"/>\n        " + DWN_TRI_SMALL + "\n        <g transform=\"matrix(0.3,0,0,0.3,165,35)\">\n            " + STAR + "\n        </g>\n        <rect\n            class=\"fill:black\"\n            width=\"70\"\n            height=\"20\"\n            x=\"205\"\n            y=\"305\" />\n    </g>";
//Light snow showers
var MIN_SHSN = "<g id=\"MIN_SHRA\">\n        " + DWN_TRI + "\n        <g transform=\"matrix(0.325,0,0,0.3,165,35)\">\n            " + STAR + "\n        </g>\n    </g>";
//Moderate to heavy snow showers
var SHSN = "<g id=\"MIN_SHRA\">\n        " + DWN_TRI + "\n        <g transform=\"matrix(0.325,0,0,0.3,165,35)\">\n            " + STAR + "\n        </g>\n        <rect\n            style=\"fill:none;stroke:black;stroke-width:15;\"\n            width=\"100\"\n            height=\"5\"\n            x=\"195\"\n            y=\"205\" />\n    </g>";
//Light showers with hail, not with thunder
var MIN_GR = "<g transform=\"translate(3.1476804,20.168937)\">\n        <path\n            class=\"wx_graphic\"\n            style=\"stroke-linecap:butt;stroke-linejoin:round\"\n            d=\"M 200,350 80,140 325,140 Z\"\n            transform=\"matrix(0.54819594,0,0,1.1522448,135.14291,26.25069)\" />\n        <path\n            style=\"fill:black;stroke-linecap:butt;stroke-linejoin:round\"\n            d=\"M 215,106.41301 271.14262,9.7515746 327.2378,105.91474 Z\"\n            transform=\"matrix(1.25,0,0,1.2,-90,25)\" />\n    </g>";
//Moderate to heavy showers with hail, not with thunder
var GR = "<g transform=\"translate(3.1476804,20.168937)\">\n        <path\n            class=\"wx_graphic\"\n            style=\"stroke-linecap:butt;stroke-linejoin:round\"\n            d=\"M 200,350 80,140 325,140 Z\"\n            transform=\"matrix(0.55,0,0,1.15,135,25)\" />\n        <path\n            style=\"fill:black;stroke-linecap:butt;stroke-linejoin:round\"\n            d=\"M 215,105 270,10 325,105 Z\"\n            transform=\"matrix(1.25,0,0,1.2,-90,25)\" />\n        <rect\n            style=\"fill:none;stroke:black;stroke-width:15\"\n            width=\"95\"\n            height=\"5\"\n            x=\"200\"\n            y=\"235\" />\n    </g>";
// THUNDERSTORMS
var THUNDER = "<path\n        class=\"wx_graphic\"\n        style=\"stroke-linecap:butt;stroke-linejoin:round\"    \n        d=\"M 375,425 230,290 355,125 H 125 v 300\"/>\n    <path\n        class=\"wx_graphic\"\n        style=\"stroke-linecap:butt;stroke-linejoin:round\"\n        d=\"M 250,405 380,425 335,305\"/>";
//Light to moderate thunderstorm with rain
var TSRA = "  <g transform=\"matrix(0.59808265,0,0,0.58004786,205.87825,107.57905)\">\n    <ellipse\n        style=\"fill:black\"\n        cx=\"75\"\n        cy=\"-75\"\n        rx=\"70\"\n        ry=\"70\" />\n    </g>\n    " + THUNDER;
//Light to moderate thunderstorm with hail
var TSGR = "<path\n        class=\"wx_graphic\"\n        d=\"m 190,45 40,-70 40,70 z\"\n        transform=\"matrix(0.8,0,0,0.7,55,60)\" />\n        " + THUNDER;
//Thunderstorm with heavy rain
var PLUS_TSRA = "<g transform=\"matrix(0.6,0,0,0.6,205,105)\">\n        <ellipse\n            style=\"fill:black\"\n            cx=\"75\"\n            cy=\"-75\"\n            rx=\"70\"\n            ry=\"70\" />\n    </g>\n    <path\n        class=\"wx_graphic\"\n        style=\"stroke-linecap:butt;stroke-linejoin:round\"\n        d=\"M 235,420 295,350 230,290 355,125 H 125 v 300\" />\n    <path\n        class=\"wx_graphic\"\n        style=\"stroke-linecap:butt;stroke-linejoin:round\"\n        d=\"m 240,355 -25,80 80,-20\"/>";
/**
 * Map of weather abbriviation to SVG data and Full text
 */
exports.WEATHER = {
    "FU": { svg: FU_VA, text: "Smoke" },
    "VA": { svg: FU_VA, text: "Volcanic Ash" },
    "HZ": { svg: HZ, text: "Haze" },
    "DU": { svg: DU_SA, text: "Dust" },
    "SA": { svg: DU_SA, text: "Sand" },
    "BLDU": { svg: BLDU_BLSA, text: "Blowing Dust" },
    "BLDA": { svg: BLDU_BLSA, text: "Blowing Sand" },
    "PO": { svg: PO, text: "Dust Devil" },
    "VCSS": { svg: VCSS, text: "Vicinity Sand Storm" },
    "BR": { svg: BR, text: "Mist or light fog" },
    "MIFG": { svg: MIFG, text: "Continuous Shallow Fog" },
    "VCTS": { svg: VCTS, text: "Vicinity Thunderstorm" },
    "VIRGA": { svg: VIRGA, text: "Virga" },
    "VCSH": { svg: VCSH, text: "Vicinity showers" },
    "TS": { svg: TS, text: "Thunderstorm" },
    "SQ": { svg: SQ, text: "Squall" },
    "FC": { svg: FC, text: "Funnel Cloud/Tornado" },
    "SS": { svg: SS, text: "Sand/Dust Storm" },
    "+SS": { svg: PLUS_SS, text: "Strong Sand/Dust Storm" },
    "BLSN": { svg: BLSN, text: "Blowing Snow" },
    "DRSN": { svg: DRSN, text: "Drifting Snow" },
    "VCFG": { svg: VCFG, text: "Vicinity Fog" },
    "BCFG": { svg: BCFG, text: "Patchy Fog" },
    "PRFG": { svg: PRFG, text: "Fog, Sky Discernable" },
    "FG": { svg: FG, text: "Fog, Sky Undiscernable" },
    "FZFG": { svg: FZFG, text: "Freezing Fog" },
    "-DZ": { svg: MIN_DZ, text: "Light Drizzle" },
    "DZ": { svg: DZ, text: "Moderate Drizzle" },
    "+DZ": { svg: PLUS_DZ, text: "Heavy Drizzle" },
    "-FZDZ": { svg: MIN_FZDZ, text: "Light Freezing Drizzle" },
    "FZDZ": { svg: FZDZ, text: "Moderate Freezing Drizzle" },
    "+FZDZ": { svg: FZDZ, text: "Heavy Freezing Drizzle" },
    "-DZRA": { svg: MIN_DZRA, text: "Light Drizzle & Rain" },
    "DZRA": { svg: DZRA, text: "Moderate to Heavy Drizzle & Rain" },
    "-RA": { svg: MIN_RA, text: "Light Rain" },
    "RA": { svg: RA, text: "Moderate Rain" },
    "+RA": { svg: PLUS_RA, text: "Heavy Rain" },
    "-FZRA": { svg: MIN_FZRA, text: "Light Freezing Rain" },
    "FZRA": { svg: FZRA, text: "Moderate Freezing Rain" },
    "+FZRA": { svg: FZRA, text: "Heavy Freezing Rain" },
    "-RASN": { svg: MIN_RASN, text: "Light Rain & Snow" },
    "RASN": { svg: RASN, text: "Moderate Rain & Snow" },
    "+RASN": { svg: RASN, text: "Heavy Rain & Snow" },
    "-SN": { svg: MIN_SN, text: "Light Snow" },
    "SN": { svg: SN, text: "Moderate Snow" },
    "+SN": { svg: PLUS_SN, text: "Heavy Snow" },
    "SG": { svg: SG, text: "Snow Grains" },
    "IC": { svg: IC, text: "Ice Crystals" },
    "PE": { svg: PE_PL, text: "Ice Pellets" },
    "PL": { svg: PE_PL, text: "Ice Pellets" },
    "-SHRA": { svg: MIN_SHRA, text: "Light rain showers" },
    "SHRA": { svg: SHRA, text: "Moderate rain showers" },
    "+SHRA": { svg: SHRA, text: "Heavy rain showers" },
    "-SHRASN": { svg: MIN_SHRASN, text: "Light rain and snow showers" },
    "SHRASN": { svg: SHRASN, text: "Moderate rain and snow showers" },
    "+SHRASN": { svg: SHRASN, text: "Heavy rain and snow showers" },
    "-SHSN": { svg: MIN_SHSN, text: "Light snow showers" },
    "SHSN": { svg: SHSN, text: "Moderate snow showers" },
    "+SHSN": { svg: SHSN, text: "Heavy snow showers" },
    "-GR": { svg: MIN_GR, text: "Light showers with hail, not with thunder" },
    "GR": { svg: GR, text: "Moderate to heavy showers with hail, not with thunder" },
    "-TSRA": { svg: TSRA, text: "Light thunderstorm with rain" },
    "TSRA": { svg: TSRA, text: "Moderate thunderstorm with rain" },
    "-TSGR": { svg: TSGR, text: "Light thunderstorm with hail" },
    "TSGR": { svg: TSGR, text: "Moderate thunderstorm with hail" },
    "+TSRA": { svg: PLUS_TSRA, text: "Thunderstorm with heavy rain" }
};
var RECENT_WEATHER = {
    REBLSN: "Moderate/heavy blowing snow (visibility significantly reduced)reduced",
    REDS: "Dust Storm",
    REFC: "Funnel Cloud",
    REFZDZ: "Freezing Drizzle",
    REFZRA: "Freezing Rain",
    REGP: "Moderate/heavy snow pellets",
    REGR: "Moderate/heavy hail",
    REGS: "Moderate/heavy small hail",
    REIC: "Moderate/heavy ice crystals",
    REPL: "Moderate/heavy ice pellets",
    RERA: "Moderate/heavy rain",
    RESG: "Moderate/heavy snow grains",
    RESHGR: "Moderate/heavy hail showers",
    RESHGS: "Moderate/heavy small hail showers",
    // RESHGS: "Moderate/heavy snow pellet showers", // dual meaning?
    RESHPL: "Moderate/heavy ice pellet showers",
    RESHRA: "Moderate/heavy rain showers",
    RESHSN: "Moderate/heavy snow showers",
    RESN: "Moderate/heavy snow",
    RESS: "Sandstorm",
    RETS: "Thunderstorm",
    REUP: "Unidentified precipitation (AUTO obs. only)",
    REVA: "Volcanic Ash",
};

},{}],117:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.genWind = exports.windImgSrc = exports.Variation = exports.Wind = void 0;
var Wind = /** @class */ (function () {
    function Wind() {
    }
    return Wind;
}());
exports.Wind = Wind;
var Variation = /** @class */ (function () {
    function Variation() {
    }
    return Variation;
}());
exports.Variation = Variation;
var GUST_WIDTH = 2;
var WS_WIDTH = 4;
/**
 * Creates a windbarb for the metar
 * @param metar
 * @returns Img src base64 string
 */
function windImgSrc(metar) {
    var data = btoa(unescape(encodeURIComponent("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 500 500\">\n                    " + genWind(metar) + "\n                </svg>")));
    return "data:image/svg+xml;base64," + data;
}
exports.windImgSrc = windImgSrc;
/**
 * Creates a windbarb for the metar
 * @param metar
 * @returns SVG string
 */
function genWind(metar) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    var WDD = metar.wind_direction ? metar.wind_direction : 0;
    var WSP = metar.wind_speed ? metar.wind_speed : 0;
    var wind = "";
    var gust = "";
    if (WSP === 0) {
        wind =
            "<g id=\"calm\">\n                <ellipse id=\"calm-marker\" stroke=\"#000\" fill=\"#00000000\" cx=\"250\" cy=\"250\" rx=\"35\" ry=\"35\"/>\n            </g>";
    }
    else {
        gust = metar.gust_speed == null ? "" :
            "<g id=\"gustBarb\" transform=\"rotate(" + WDD + ", 250, 250)\">\n                " + genBarb1((_a = metar.gust_speed) !== null && _a !== void 0 ? _a : 0, true) + "\n                " + genBarb2((_b = metar.gust_speed) !== null && _b !== void 0 ? _b : 0, true) + "\n                " + genBarb3((_c = metar.gust_speed) !== null && _c !== void 0 ? _c : 0, true) + "\n                " + genBarb4((_d = metar.gust_speed) !== null && _d !== void 0 ? _d : 0, true) + "\n                " + genBarb5((_e = metar.gust_speed) !== null && _e !== void 0 ? _e : 0, true) + "\n            </g>";
        wind =
            "<g id=\"windBard\" transform=\"rotate(" + WDD + ", 250, 250)\">\n                <line stroke-width=\"3\" y1=\"225\" x1=\"250\" y2=\"50\" x2=\"250\"  stroke=\"#000\" fill=\"none\" />\n                " + genBarb1((_f = metar.wind_speed) !== null && _f !== void 0 ? _f : 0, false) + "\n                " + genBarb2((_g = metar.wind_speed) !== null && _g !== void 0 ? _g : 0, false) + "\n                " + genBarb3((_h = metar.wind_speed) !== null && _h !== void 0 ? _h : 0, false) + "\n                " + genBarb4((_j = metar.wind_speed) !== null && _j !== void 0 ? _j : 0, false) + "\n                " + genBarb5((_k = metar.wind_speed) !== null && _k !== void 0 ? _k : 0, false) + "\n            </g>";
    }
    return gust + wind;
}
exports.genWind = genWind;
/**
 * Generate first barb
 * @param speed wind or gust speed
 * @param gust set to true for gust
 * @returns
 */
function genBarb1(speed, gust) {
    var fill = gust ? 'red' : '#000';
    var tag = gust ? 'gs' : 'ws';
    var width = gust ? GUST_WIDTH : WS_WIDTH;
    var barb = "";
    if (speed >= 10 && speed < 50) {
        barb = "<line id=\"" + tag + "-bard-1-long\" stroke-width=\"" + width + "\" y1=\"50\" x1=\"250\" y2=\"50\" x2=\"300\" stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 50)\"/>";
    }
    else if (speed >= 50) {
        barb = "<polygon id=\"" + tag + "-bard-1-flag\" points=\"248,60 290,30 248,30\" fill=\"" + fill + "\" />";
    }
    return barb;
}
/**
 * Generate second barb
 * @param speed wind or gust speed
 * @param gust set to true for gust
 * @returns
 */
function genBarb2(speed, gust) {
    var fill = gust ? 'red' : '#000';
    var tag = gust ? 'gs' : 'ws';
    var width = gust ? GUST_WIDTH : WS_WIDTH;
    var barb = "";
    if ((speed < 10) || (15 <= speed && speed < 20) || (55 <= speed && speed < 60)) {
        barb = "<line id=\"" + tag + "-bard-2-short\" stroke-width=\"" + width + "\" y1=\"70\" x1=\"250\" y2=\"70\" x2=\"275\" stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 70)\"/>";
    }
    else if ((15 < speed && speed < 50) || (speed >= 60)) {
        barb = "<line id=\"" + tag + "-bard-2-long\" stroke-width=\"" + width + "\" y1=\"70\" x1=\"250\" y2=\"70\" x2=\"300\" stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 70)\"/>";
    }
    return barb;
}
/**
 * Generate third barb
 * @param speed wind or gust speed
 * @param gust set to true for gust
 * @returns
 */
function genBarb3(speed, gust) {
    var fill = gust ? 'red' : '#000';
    var tag = gust ? 'gs' : 'ws';
    var width = gust ? GUST_WIDTH : WS_WIDTH;
    var barb = "";
    if ((25 <= speed && speed < 30) || (65 <= speed && speed < 70)) {
        barb = "<line id=\"" + tag + "-bard-3-short\" stroke-width=\"" + width + "\" y1=\"90\"  x1=\"250\" y2=\"90\" x2=\"275\" stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 90)\"/>";
    }
    else if ((25 < speed && speed < 50) || speed >= 70) {
        barb = "<line id=\"" + tag + "-bard-3-long\" stroke-width=\"" + width + "\" y1=\"90\"  x1=\"250\" y2=\"90\" x2=\"300\" stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 90)\"/>";
    }
    return barb;
}
/**
 * Generate forth barb
 * @param speed wind or gust speed
 * @param gust set to true for gust
 * @returns
 */
function genBarb4(speed, gust) {
    var fill = gust ? 'red' : '#000';
    var tag = gust ? 'gs' : 'ws';
    var width = gust ? GUST_WIDTH : WS_WIDTH;
    var barb = "";
    if ((35 <= speed && speed < 40) || (75 <= speed && speed < 80)) {
        barb = "<line id=\"" + tag + "-bard-4-short\" stroke-width=\"" + width + "\" y1=\"110\" x1=\"250\" y2=\"110\" x2=\"275\"  stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 110)\"/>";
    }
    else if ((35 < speed && speed < 50) || speed >= 80) {
        barb = "<line id=\"" + tag + "-bard-4-long\" stroke-width=\"" + width + "\" y1=\"110\" x1=\"250\" y2=\"110\" x2=\"300\"  stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 110)\"/>";
    }
    return barb;
}
/**
 * Generate fifth barb
 * @param speed wind or gust speed
 * @param gust set to true for gust
 * @returns
 */
function genBarb5(speed, gust) {
    var fill = gust ? 'red' : '#000';
    var tag = gust ? 'gs' : 'ws';
    var width = gust ? GUST_WIDTH : WS_WIDTH;
    var brab = "";
    if ((45 <= speed && speed < 50) || (85 <= speed && speed < 90)) {
        brab = "<line id=\"" + tag + "-bard-5-short\" stroke-width=\"" + width + "\" y1=\"130\" x1=\"250\" y2=\"130\" x2=\"275\"  stroke=\"" + fill + "\" transform=\"rotate(-35, 250, 130)\"/>";
    }
    return brab;
}

},{}],118:[function(require,module,exports){
// Top level file is just a mixin of submodules & constants
'use strict';

const { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');

const { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');

const constants = require('./lib/zlib/constants');

module.exports.Deflate = Deflate;
module.exports.deflate = deflate;
module.exports.deflateRaw = deflateRaw;
module.exports.gzip = gzip;
module.exports.Inflate = Inflate;
module.exports.inflate = inflate;
module.exports.inflateRaw = inflateRaw;
module.exports.ungzip = ungzip;
module.exports.constants = constants;

},{"./lib/deflate":119,"./lib/inflate":120,"./lib/zlib/constants":124}],119:[function(require,module,exports){
'use strict';


const zlib_deflate = require('./zlib/deflate');
const utils        = require('./utils/common');
const strings      = require('./utils/strings');
const msg          = require('./zlib/messages');
const ZStream      = require('./zlib/zstream');

const toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,
  Z_OK, Z_STREAM_END,
  Z_DEFAULT_COMPRESSION,
  Z_DEFAULT_STRATEGY,
  Z_DEFLATED
} = require('./zlib/constants');

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/**
 * Deflate.result -> Uint8Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
function Deflate(options) {
  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY
  }, options || {});

  let opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new ZStream();
  this.strm.avail_out = 0;

  let status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }

  if (opt.dictionary) {
    let dict;
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      // If we need to compress text, change encoding to utf8.
      dict = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      dict = new Uint8Array(opt.dictionary);
    } else {
      dict = opt.dictionary;
    }

    status = zlib_deflate.deflateSetDictionary(this.strm, dict);

    if (status !== Z_OK) {
      throw new Error(msg[status]);
    }

    this._dict_set = true;
  }
}

/**
 * Deflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must
 * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending
 * buffers and call [[Deflate#onEnd]].
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function (data, flush_mode) {
  const strm = this.strm;
  const chunkSize = this.options.chunkSize;
  let status, _flush_mode;

  if (this.ended) { return false; }

  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;
  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  for (;;) {
    if (strm.avail_out === 0) {
      strm.output = new Uint8Array(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    // Make sure avail_out > 6 to avoid repeating markers
    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {
      this.onData(strm.output.subarray(0, strm.next_out));
      strm.avail_out = 0;
      continue;
    }

    status = zlib_deflate.deflate(strm, _flush_mode);

    // Ended => flush and finish
    if (status === Z_STREAM_END) {
      if (strm.next_out > 0) {
        this.onData(strm.output.subarray(0, strm.next_out));
      }
      status = zlib_deflate.deflateEnd(this.strm);
      this.onEnd(status);
      this.ended = true;
      return status === Z_OK;
    }

    // Flush if out buffer full
    if (strm.avail_out === 0) {
      this.onData(strm.output);
      continue;
    }

    // Flush if requested and has data
    if (_flush_mode > 0 && strm.next_out > 0) {
      this.onData(strm.output.subarray(0, strm.next_out));
      strm.avail_out = 0;
      continue;
    }

    if (strm.avail_in === 0) break;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array): output data.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    this.result = utils.flattenChunks(this.chunks);
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array
 * - data (Uint8Array|ArrayBuffer|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  const deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array
 * - data (Uint8Array|ArrayBuffer|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array
 * - data (Uint8Array|ArrayBuffer|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


module.exports.Deflate = Deflate;
module.exports.deflate = deflate;
module.exports.deflateRaw = deflateRaw;
module.exports.gzip = gzip;
module.exports.constants = require('./zlib/constants');

},{"./utils/common":121,"./utils/strings":122,"./zlib/constants":124,"./zlib/deflate":126,"./zlib/messages":131,"./zlib/zstream":133}],120:[function(require,module,exports){
'use strict';


const zlib_inflate = require('./zlib/inflate');
const utils        = require('./utils/common');
const strings      = require('./utils/strings');
const msg          = require('./zlib/messages');
const ZStream      = require('./zlib/zstream');
const GZheader     = require('./zlib/gzheader');

const toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_FINISH,
  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR
} = require('./zlib/constants');

/* ===========================================================================*/


/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/**
 * Inflate.result -> Uint8Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
function Inflate(options) {
  this.options = utils.assign({
    chunkSize: 1024 * 64,
    windowBits: 15,
    to: ''
  }, options || {});

  const opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new ZStream();
  this.strm.avail_out = 0;

  let status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new GZheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);

  // Setup dictionary
  if (opt.dictionary) {
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      opt.dictionary = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) { //In raw mode we need to set the dictionary early
      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== Z_OK) {
        throw new Error(msg[status]);
      }
    }
  }
}

/**
 * Inflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer): input data
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE
 *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,
 *   `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. If end of stream detected,
 * [[Inflate#onEnd]] will be called.
 *
 * `flush_mode` is not needed for normal operation, because end of stream
 * detected automatically. You may try to use it for advanced things, but
 * this functionality was not tested.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function (data, flush_mode) {
  const strm = this.strm;
  const chunkSize = this.options.chunkSize;
  const dictionary = this.options.dictionary;
  let status, _flush_mode, last_avail_out;

  if (this.ended) return false;

  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;
  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;

  // Convert data if needed
  if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  for (;;) {
    if (strm.avail_out === 0) {
      strm.output = new Uint8Array(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, _flush_mode);

    if (status === Z_NEED_DICT && dictionary) {
      status = zlib_inflate.inflateSetDictionary(strm, dictionary);

      if (status === Z_OK) {
        status = zlib_inflate.inflate(strm, _flush_mode);
      } else if (status === Z_DATA_ERROR) {
        // Replace code with more verbose
        status = Z_NEED_DICT;
      }
    }

    // Skip snyc markers if more data follows and not raw mode
    while (strm.avail_in > 0 &&
           status === Z_STREAM_END &&
           strm.state.wrap > 0 &&
           data[strm.next_in] !== 0)
    {
      zlib_inflate.inflateReset(strm);
      status = zlib_inflate.inflate(strm, _flush_mode);
    }

    switch (status) {
      case Z_STREAM_ERROR:
      case Z_DATA_ERROR:
      case Z_NEED_DICT:
      case Z_MEM_ERROR:
        this.onEnd(status);
        this.ended = true;
        return false;
    }

    // Remember real `avail_out` value, because we may patch out buffer content
    // to align utf8 strings boundaries.
    last_avail_out = strm.avail_out;

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === Z_STREAM_END) {

        if (this.options.to === 'string') {

          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          let tail = strm.next_out - next_out_utf8;
          let utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail & realign counters
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);

          this.onData(utf8str);

        } else {
          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));
        }
      }
    }

    // Must repeat iteration if out buffer is full
    if (status === Z_OK && last_avail_out === 0) continue;

    // Finalize if end of stream reached.
    if (status === Z_STREAM_END) {
      status = zlib_inflate.inflateEnd(this.strm);
      this.onEnd(status);
      this.ended = true;
      return true;
    }

    if (strm.avail_in === 0) break;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|String): output data. When string output requested,
 *   each chunk will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|String
 * - data (Uint8Array|ArrayBuffer): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako');
 * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));
 * let output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err) {
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  const inflator = new Inflate(options);

  inflator.push(input);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) throw inflator.msg || msg[inflator.err];

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|String
 * - data (Uint8Array|ArrayBuffer): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|String
 * - data (Uint8Array|ArrayBuffer): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


module.exports.Inflate = Inflate;
module.exports.inflate = inflate;
module.exports.inflateRaw = inflateRaw;
module.exports.ungzip = inflate;
module.exports.constants = require('./zlib/constants');

},{"./utils/common":121,"./utils/strings":122,"./zlib/constants":124,"./zlib/gzheader":127,"./zlib/inflate":129,"./zlib/messages":131,"./zlib/zstream":133}],121:[function(require,module,exports){
'use strict';


const _has = (obj, key) => {
  return Object.prototype.hasOwnProperty.call(obj, key);
};

module.exports.assign = function (obj /*from1, from2, from3, ...*/) {
  const sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    const source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (const p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// Join array of chunks to single array.
module.exports.flattenChunks = (chunks) => {
  // calculate data length
  let len = 0;

  for (let i = 0, l = chunks.length; i < l; i++) {
    len += chunks[i].length;
  }

  // join chunks
  const result = new Uint8Array(len);

  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {
    let chunk = chunks[i];
    result.set(chunk, pos);
    pos += chunk.length;
  }

  return result;
};

},{}],122:[function(require,module,exports){
// String encode/decode helpers
'use strict';


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
let STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
const _utf8len = new Uint8Array(256);
for (let q = 0; q < 256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start


// convert string to array (typed, when possible)
module.exports.string2buf = (str) => {
  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {
    return new TextEncoder().encode(str);
  }

  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new Uint8Array(buf_len);

  // convert
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper
const buf2binstring = (buf, len) => {
  // On Chrome, the arguments in a function call that are allowed is `65534`.
  // If the length of the buffer is smaller than that, we can use this optimization,
  // otherwise we will take a slower path.
  if (len < 65534) {
    if (buf.subarray && STR_APPLY_UIA_OK) {
      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));
    }
  }

  let result = '';
  for (let i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
};


// convert array to string
module.exports.buf2string = (buf, max) => {
  const len = max || buf.length;

  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {
    return new TextDecoder().decode(buf.subarray(0, max));
  }

  let i, out;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  const utf16buf = new Array(len * 2);

  for (out = 0, i = 0; i < len;) {
    let c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    let c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
module.exports.utf8border = (buf, max) => {

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  let pos = max - 1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means buffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};

},{}],123:[function(require,module,exports){
'use strict';

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const adler32 = (adler, buf, len, pos) => {
  let s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
};


module.exports = adler32;

},{}],124:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  Z_MEM_ERROR:       -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};

},{}],125:[function(require,module,exports){
'use strict';

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
const makeTable = () => {
  let c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
};

// Create table on load. Just 255 signed longs. Not a problem.
const crcTable = new Uint32Array(makeTable());


const crc32 = (crc, buf, len, pos) => {
  const t = crcTable;
  const end = pos + len;

  crc ^= -1;

  for (let i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
};


module.exports = crc32;

},{}],126:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');
const adler32 = require('./adler32');
const crc32   = require('./crc32');
const msg     = require('./messages');

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,
  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,
  Z_DEFAULT_COMPRESSION,
  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,
  Z_UNKNOWN,
  Z_DEFLATED
} = require('./constants');

/*============================================================================*/


const MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
const MAX_WBITS = 15;
/* 32K LZ77 window */
const DEF_MEM_LEVEL = 8;


const LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
const LITERALS      = 256;
/* number of literal bytes 0..255 */
const L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
const D_CODES       = 30;
/* number of distance codes */
const BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
const HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
const MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

const MIN_MATCH = 3;
const MAX_MATCH = 258;
const MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

const PRESET_DICT = 0x20;

const INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */
//#ifdef GZIP
const GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */
//#endif
const EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */
const NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */
const COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */
const HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */
const BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */
const FINISH_STATE  = 666;    /* stream complete */

const BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
const BS_BLOCK_DONE     = 2; /* block flush performed */
const BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
const BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

const OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

const err = (strm, errorCode) => {
  strm.msg = msg[errorCode];
  return errorCode;
};

const rank = (f) => {
  return ((f) * 2) - ((f) > 4 ? 9 : 0);
};

const zero = (buf) => {
  let len = buf.length; while (--len >= 0) { buf[len] = 0; }
};

/* ===========================================================================
 * Slide the hash table when sliding the window down (could be avoided with 32
 * bit values at the expense of memory usage). We slide even when level == 0 to
 * keep the hash table consistent if we switch back to level > 0 later.
 */
const slide_hash = (s) => {
  let n, m;
  let p;
  let wsize = s.w_size;

  n = s.hash_size;
  p = n;
  do {
    m = s.head[--p];
    s.head[p] = (m >= wsize ? m - wsize : 0);
  } while (--n);
  n = wsize;
//#ifndef FASTEST
  p = n;
  do {
    m = s.prev[--p];
    s.prev[p] = (m >= wsize ? m - wsize : 0);
    /* If n is not on any hash chain, prev[n] is garbage but
     * its value will never be used.
     */
  } while (--n);
//#endif
};

/* eslint-disable new-cap */
let HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;
// This hash causes less collisions, https://github.com/nodeca/pako/issues/135
// But breaks binary compatibility
//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;
let HASH = HASH_ZLIB;


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output, except for
 * some deflate_stored() output, goes through this function so some
 * applications may wish to modify it to avoid allocating a large
 * strm->next_out buffer and copying into it. (See also read_buf()).
 */
const flush_pending = (strm) => {
  const s = strm.state;

  //_tr_flush_bits(s);
  let len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);
  strm.next_out  += len;
  s.pending_out  += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending      -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
};


const flush_block_only = (s, last) => {
  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
};


const put_byte = (s, b) => {
  s.pending_buf[s.pending++] = b;
};


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
const putShortMSB = (s, b) => {

  //  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
};


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
const read_buf = (strm, buf, start, size) => {

  let len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
};


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
const longest_match = (s, cur_match) => {

  let chain_length = s.max_chain_length;      /* max hash chain length */
  let scan = s.strstart; /* current string */
  let match;                       /* matched string */
  let len;                           /* length of current match */
  let best_len = s.prev_length;              /* best match length so far */
  let nice_match = s.nice_match;             /* stop if match long enough */
  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  const _win = s.window; // shortcut

  const wmask = s.w_mask;
  const prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  const strend = s.strstart + MAX_MATCH;
  let scan_end1  = _win[scan + best_len - 1];
  let scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
};


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
const fill_window = (s) => {

  const _w_size = s.w_size;
  let n, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;
      if (s.insert > s.strstart) {
        s.insert = s.strstart;
      }
      slide_hash(s);
      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    const curr = s.strstart + s.lookahead;
//    let init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
};

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 *
 * In case deflateParams() is used to later switch to a non-zero compression
 * level, s->matches (otherwise unused when storing) keeps track of the number
 * of hash table slides to perform. If s->matches is 1, then one hash table
 * slide will be done when switching. If s->matches is 2, the maximum value
 * allowed here, then the hash table will be cleared, since two or more slides
 * is the same as a clear.
 *
 * deflate_stored() is written to minimize the number of times an input byte is
 * copied. It is most efficient with large input and output buffers, which
 * maximizes the opportunites to have a single copy from next_in to next_out.
 */
const deflate_stored = (s, flush) => {

  /* Smallest worthy block size when not flushing or finishing. By default
   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For
   * large input and output buffers, the stored block size will be larger.
   */
  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;

  /* Copy as many min_block or larger stored blocks directly to next_out as
   * possible. If flushing, copy the remaining available input to next_out as
   * stored blocks, if there is enough space.
   */
  let len, left, have, last = 0;
  let used = s.strm.avail_in;
  do {
    /* Set len to the maximum size block that we can copy directly with the
     * available input data and output space. Set left to how much of that
     * would be copied from what's left in the window.
     */
    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */
    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */
    if (s.strm.avail_out < have) {         /* need room for header */
      break;
    }
      /* maximum stored block length that will fit in avail_out: */
    have = s.strm.avail_out - have;
    left = s.strstart - s.block_start;  /* bytes left in window */
    if (len > left + s.strm.avail_in) {
      len = left + s.strm.avail_in;   /* limit len to the input */
    }
    if (len > have) {
      len = have;             /* limit len to the output */
    }

    /* If the stored block would be less than min_block in length, or if
     * unable to copy all of the available input when flushing, then try
     * copying to the window and the pending buffer instead. Also don't
     * write an empty block when flushing -- deflate() does that.
     */
    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||
                        flush === Z_NO_FLUSH ||
                        len !== left + s.strm.avail_in)) {
      break;
    }

    /* Make a dummy stored block in pending to get the header bytes,
     * including any pending bits. This also updates the debugging counts.
     */
    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;
    _tr_stored_block(s, 0, 0, last);

    /* Replace the lengths in the dummy stored block with len. */
    s.pending_buf[s.pending - 4] = len;
    s.pending_buf[s.pending - 3] = len >> 8;
    s.pending_buf[s.pending - 2] = ~len;
    s.pending_buf[s.pending - 1] = ~len >> 8;

    /* Write the stored block header bytes. */
    flush_pending(s.strm);

//#ifdef ZLIB_DEBUG
//    /* Update debugging counts for the data about to be copied. */
//    s->compressed_len += len << 3;
//    s->bits_sent += len << 3;
//#endif

    /* Copy uncompressed bytes from the window to next_out. */
    if (left) {
      if (left > len) {
        left = len;
      }
      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);
      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);
      s.strm.next_out += left;
      s.strm.avail_out -= left;
      s.strm.total_out += left;
      s.block_start += left;
      len -= left;
    }

    /* Copy uncompressed bytes directly from next_in to next_out, updating
     * the check value.
     */
    if (len) {
      read_buf(s.strm, s.strm.output, s.strm.next_out, len);
      s.strm.next_out += len;
      s.strm.avail_out -= len;
      s.strm.total_out += len;
    }
  } while (last === 0);

  /* Update the sliding window with the last s->w_size bytes of the copied
   * data, or append all of the copied data to the existing window if less
   * than s->w_size bytes were copied. Also update the number of bytes to
   * insert in the hash tables, in the event that deflateParams() switches to
   * a non-zero compression level.
   */
  used -= s.strm.avail_in;    /* number of input bytes directly copied */
  if (used) {
    /* If any input was used, then no unused input remains in the window,
     * therefore s->block_start == s->strstart.
     */
    if (used >= s.w_size) {  /* supplant the previous history */
      s.matches = 2;     /* clear hash */
      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);
      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);
      s.strstart = s.w_size;
      s.insert = s.strstart;
    }
    else {
      if (s.window_size - s.strstart <= used) {
        /* Slide the window down. */
        s.strstart -= s.w_size;
        //zmemcpy(s->window, s->window + s->w_size, s->strstart);
        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);
        if (s.matches < 2) {
          s.matches++;   /* add a pending slide_hash() */
        }
        if (s.insert > s.strstart) {
          s.insert = s.strstart;
        }
      }
      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);
      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);
      s.strstart += used;
      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;
    }
    s.block_start = s.strstart;
  }
  if (s.high_water < s.strstart) {
    s.high_water = s.strstart;
  }

  /* If the last block was written to next_out, then done. */
  if (last) {
    return BS_FINISH_DONE;
  }

  /* If flushing and all input has been consumed, then done. */
  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&
    s.strm.avail_in === 0 && s.strstart === s.block_start) {
    return BS_BLOCK_DONE;
  }

  /* Fill the window with any remaining input. */
  have = s.window_size - s.strstart;
  if (s.strm.avail_in > have && s.block_start >= s.w_size) {
    /* Slide the window down. */
    s.block_start -= s.w_size;
    s.strstart -= s.w_size;
    //zmemcpy(s->window, s->window + s->w_size, s->strstart);
    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);
    if (s.matches < 2) {
      s.matches++;       /* add a pending slide_hash() */
    }
    have += s.w_size;      /* more space now */
    if (s.insert > s.strstart) {
      s.insert = s.strstart;
    }
  }
  if (have > s.strm.avail_in) {
    have = s.strm.avail_in;
  }
  if (have) {
    read_buf(s.strm, s.window, s.strstart, have);
    s.strstart += have;
    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;
  }
  if (s.high_water < s.strstart) {
    s.high_water = s.strstart;
  }

  /* There was not enough avail_out to write a complete worthy or flushed
   * stored block to next_out. Write a stored block to pending instead, if we
   * have enough input for a worthy block, or if flushing and there is enough
   * room for the remaining input as a stored block in the pending buffer.
   */
  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */
    /* maximum stored block length that will fit in pending: */
  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;
  min_block = have > s.w_size ? s.w_size : have;
  left = s.strstart - s.block_start;
  if (left >= min_block ||
     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&
     s.strm.avail_in === 0 && left <= have)) {
    len = left > have ? have : left;
    last = flush === Z_FINISH && s.strm.avail_in === 0 &&
         len === left ? 1 : 0;
    _tr_stored_block(s, s.block_start, len, last);
    s.block_start += len;
    flush_pending(s.strm);
  }

  /* We've done all we can with the available input and output. */
  return last ? BS_FINISH_STARTED : BS_NEED_MORE;
};


/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
const deflate_fast = (s, flush) => {

  let hash_head;        /* head of the hash chain */
  let bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.sym_next) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
const deflate_slow = (s, flush) => {

  let hash_head;          /* head of hash chain */
  let bflush;              /* set if current block must be flushed */

  let max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.sym_next) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
};


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
const deflate_rle = (s, flush) => {

  let bflush;            /* set if current block must be flushed */
  let prev;              /* byte at distance one to match */
  let scan, strend;      /* scan goes up to strend for length of run */

  const _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.sym_next) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
const deflate_huff = (s, flush) => {

  let bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = _tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.sym_next) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {

  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

const configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
const lm_init = (s) => {

  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
};


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);
  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);
  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new Uint16Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.sym_buf = 0;        /* buffer for distances and literals/lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.sym_next = 0;      /* running index in sym_buf */
  this.sym_end = 0;       /* symbol table full when sym_next reaches this */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


/* =========================================================================
 * Check for a valid deflate stream state. Return 0 if ok, 1 if not.
 */
const deflateStateCheck = (strm) => {

  if (!strm) {
    return 1;
  }
  const s = strm.state;
  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&
//#ifdef GZIP
                                s.status !== GZIP_STATE &&
//#endif
                                s.status !== EXTRA_STATE &&
                                s.status !== NAME_STATE &&
                                s.status !== COMMENT_STATE &&
                                s.status !== HCRC_STATE &&
                                s.status !== BUSY_STATE &&
                                s.status !== FINISH_STATE)) {
    return 1;
  }
  return 0;
};


const deflateResetKeep = (strm) => {

  if (deflateStateCheck(strm)) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  const s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status =
//#ifdef GZIP
    s.wrap === 2 ? GZIP_STATE :
//#endif
    s.wrap ? INIT_STATE : BUSY_STATE;
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = -2;
  _tr_init(s);
  return Z_OK;
};


const deflateReset = (strm) => {

  const ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
};


const deflateSetHeader = (strm, head) => {

  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {
    return Z_STREAM_ERROR;
  }
  strm.state.gzhead = head;
  return Z_OK;
};


const deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {

  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  let wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  const s = new DeflateState();

  strm.state = s;
  s.strm = strm;
  s.status = INIT_STATE;     /* to pass state test in deflateReset() */

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new Uint8Array(s.w_size * 2);
  s.head = new Uint16Array(s.hash_size);
  s.prev = new Uint16Array(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  /* We overlay pending_buf and sym_buf. This works since the average size
   * for length/distance pairs over any compressed block is assured to be 31
   * bits or less.
   *
   * Analysis: The longest fixed codes are a length code of 8 bits plus 5
   * extra bits, for lengths 131 to 257. The longest fixed distance codes are
   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest
   * possible fixed-codes length/distance pair is then 31 bits total.
   *
   * sym_buf starts one-fourth of the way into pending_buf. So there are
   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol
   * in sym_buf is three bytes -- two for the distance and one for the
   * literal/length. As each symbol is consumed, the pointer to the next
   * sym_buf value to read moves forward three bytes. From that symbol, up to
   * 31 bits are written to pending_buf. The closest the written pending_buf
   * bits gets to the next sym_buf symbol to read is just before the last
   * code is written. At that time, 31*(n-2) bits have been written, just
   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at
   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1
   * symbols are written.) The closest the writing gets to what is unread is
   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and
   * can range from 128 to 32768.
   *
   * Therefore, at a minimum, there are 142 bits of space between what is
   * written and what is read in the overlain buffers, so the symbols cannot
   * be overwritten by the compressed data. That space is actually 139 bits,
   * due to the three-bit fixed-code block header.
   *
   * That covers the case where either Z_FIXED is specified, forcing fixed
   * codes, or when the use of fixed codes is chosen, because that choice
   * results in a smaller compressed block than dynamic codes. That latter
   * condition then assures that the above analysis also covers all dynamic
   * blocks. A dynamic-code block will only be chosen to be emitted if it has
   * fewer bits than a fixed-code block would for the same set of symbols.
   * Therefore its average symbol length is assured to be less than 31. So
   * the compressed data for a dynamic block also cannot overwrite the
   * symbols from which it is being constructed.
   */

  s.pending_buf_size = s.lit_bufsize * 4;
  s.pending_buf = new Uint8Array(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->sym_buf = s->pending_buf + s->lit_bufsize;
  s.sym_buf = s.lit_bufsize;

  //s->sym_end = (s->lit_bufsize - 1) * 3;
  s.sym_end = (s.lit_bufsize - 1) * 3;
  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
};

const deflateInit = (strm, level) => {

  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
};


/* ========================================================================= */
const deflate = (strm, flush) => {

  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  const s = strm.state;

  if (!strm.output ||
      (strm.avail_in !== 0 && !strm.input) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  const old_flush = s.last_flush;
  s.last_flush = flush;

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Write the header */
  if (s.status === INIT_STATE && s.wrap === 0) {
    s.status = BUSY_STATE;
  }
  if (s.status === INIT_STATE) {
    /* zlib header */
    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
    let level_flags = -1;

    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
      level_flags = 0;
    } else if (s.level < 6) {
      level_flags = 1;
    } else if (s.level === 6) {
      level_flags = 2;
    } else {
      level_flags = 3;
    }
    header |= (level_flags << 6);
    if (s.strstart !== 0) { header |= PRESET_DICT; }
    header += 31 - (header % 31);

    putShortMSB(s, header);

    /* Save the adler32 of the preset dictionary: */
    if (s.strstart !== 0) {
      putShortMSB(s, strm.adler >>> 16);
      putShortMSB(s, strm.adler & 0xffff);
    }
    strm.adler = 1; // adler32(0L, Z_NULL, 0);
    s.status = BUSY_STATE;

    /* Compression must start with an empty pending buffer */
    flush_pending(strm);
    if (s.pending !== 0) {
      s.last_flush = -1;
      return Z_OK;
    }
  }
//#ifdef GZIP
  if (s.status === GZIP_STATE) {
    /* gzip header */
    strm.adler = 0;  //crc32(0L, Z_NULL, 0);
    put_byte(s, 31);
    put_byte(s, 139);
    put_byte(s, 8);
    if (!s.gzhead) { // s->gzhead == Z_NULL
      put_byte(s, 0);
      put_byte(s, 0);
      put_byte(s, 0);
      put_byte(s, 0);
      put_byte(s, 0);
      put_byte(s, s.level === 9 ? 2 :
                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                   4 : 0));
      put_byte(s, OS_CODE);
      s.status = BUSY_STATE;

      /* Compression must start with an empty pending buffer */
      flush_pending(strm);
      if (s.pending !== 0) {
        s.last_flush = -1;
        return Z_OK;
      }
    }
    else {
      put_byte(s, (s.gzhead.text ? 1 : 0) +
                  (s.gzhead.hcrc ? 2 : 0) +
                  (!s.gzhead.extra ? 0 : 4) +
                  (!s.gzhead.name ? 0 : 8) +
                  (!s.gzhead.comment ? 0 : 16)
      );
      put_byte(s, s.gzhead.time & 0xff);
      put_byte(s, (s.gzhead.time >> 8) & 0xff);
      put_byte(s, (s.gzhead.time >> 16) & 0xff);
      put_byte(s, (s.gzhead.time >> 24) & 0xff);
      put_byte(s, s.level === 9 ? 2 :
                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                   4 : 0));
      put_byte(s, s.gzhead.os & 0xff);
      if (s.gzhead.extra && s.gzhead.extra.length) {
        put_byte(s, s.gzhead.extra.length & 0xff);
        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
      }
      if (s.gzhead.hcrc) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
      }
      s.gzindex = 0;
      s.status = EXTRA_STATE;
    }
  }
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      let beg = s.pending;   /* start of bytes to update crc */
      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;
      while (s.pending + left > s.pending_buf_size) {
        let copy = s.pending_buf_size - s.pending;
        // zmemcpy(s.pending_buf + s.pending,
        //    s.gzhead.extra + s.gzindex, copy);
        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);
        s.pending = s.pending_buf_size;
        //--- HCRC_UPDATE(beg) ---//
        if (s.gzhead.hcrc && s.pending > beg) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
        }
        //---//
        s.gzindex += copy;
        flush_pending(strm);
        if (s.pending !== 0) {
          s.last_flush = -1;
          return Z_OK;
        }
        beg = 0;
        left -= copy;
      }
      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility
      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11
      let gzhead_extra = new Uint8Array(s.gzhead.extra);
      // zmemcpy(s->pending_buf + s->pending,
      //     s->gzhead->extra + s->gzindex, left);
      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);
      s.pending += left;
      //--- HCRC_UPDATE(beg) ---//
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      //---//
      s.gzindex = 0;
    }
    s.status = NAME_STATE;
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      let beg = s.pending;   /* start of bytes to update crc */
      let val;
      do {
        if (s.pending === s.pending_buf_size) {
          //--- HCRC_UPDATE(beg) ---//
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          //---//
          flush_pending(strm);
          if (s.pending !== 0) {
            s.last_flush = -1;
            return Z_OK;
          }
          beg = 0;
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);
      //--- HCRC_UPDATE(beg) ---//
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      //---//
      s.gzindex = 0;
    }
    s.status = COMMENT_STATE;
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      let beg = s.pending;   /* start of bytes to update crc */
      let val;
      do {
        if (s.pending === s.pending_buf_size) {
          //--- HCRC_UPDATE(beg) ---//
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          //---//
          flush_pending(strm);
          if (s.pending !== 0) {
            s.last_flush = -1;
            return Z_OK;
          }
          beg = 0;
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);
      //--- HCRC_UPDATE(beg) ---//
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      //---//
    }
    s.status = HCRC_STATE;
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
        if (s.pending !== 0) {
          s.last_flush = -1;
          return Z_OK;
        }
      }
      put_byte(s, strm.adler & 0xff);
      put_byte(s, (strm.adler >> 8) & 0xff);
      strm.adler = 0; //crc32(0L, Z_NULL, 0);
    }
    s.status = BUSY_STATE;

    /* Compression must start with an empty pending buffer */
    flush_pending(strm);
    if (s.pending !== 0) {
      s.last_flush = -1;
      return Z_OK;
    }
  }
//#endif

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    let bstate = s.level === 0 ? deflate_stored(s, flush) :
                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :
                 s.strategy === Z_RLE ? deflate_rle(s, flush) :
                 configuration_table[s.level].func(s, flush);

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        _tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        _tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
};


const deflateEnd = (strm) => {

  if (deflateStateCheck(strm)) {
    return Z_STREAM_ERROR;
  }

  const status = strm.state.status;

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
};


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
const deflateSetDictionary = (strm, dictionary) => {

  let dictLength = dictionary.length;

  if (deflateStateCheck(strm)) {
    return Z_STREAM_ERROR;
  }

  const s = strm.state;
  const wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    let tmpDict = new Uint8Array(s.w_size);
    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  const avail = strm.avail_in;
  const next = strm.next_in;
  const input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    let str = s.strstart;
    let n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
};


module.exports.deflateInit = deflateInit;
module.exports.deflateInit2 = deflateInit2;
module.exports.deflateReset = deflateReset;
module.exports.deflateResetKeep = deflateResetKeep;
module.exports.deflateSetHeader = deflateSetHeader;
module.exports.deflate = deflate;
module.exports.deflateEnd = deflateEnd;
module.exports.deflateSetDictionary = deflateSetDictionary;
module.exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
module.exports.deflateBound = deflateBound;
module.exports.deflateCopy = deflateCopy;
module.exports.deflateGetDictionary = deflateGetDictionary;
module.exports.deflateParams = deflateParams;
module.exports.deflatePending = deflatePending;
module.exports.deflatePrime = deflatePrime;
module.exports.deflateTune = deflateTune;
*/

},{"./adler32":123,"./constants":124,"./crc32":125,"./messages":131,"./trees":132}],127:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;

},{}],128:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
const BAD = 16209;       /* got a data error -- remain here until reset */
const TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  let _in;                    /* local strm.input */
  let last;                   /* have enough input while in < last */
  let _out;                   /* local strm.output */
  let beg;                    /* inflate()'s initial strm.output */
  let end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  let dmax;                   /* maximum distance from zlib header */
//#endif
  let wsize;                  /* window size or zero if not using window */
  let whave;                  /* valid bytes in the window */
  let wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  let s_window;               /* allocated sliding window, if wsize != 0 */
  let hold;                   /* local strm.hold */
  let bits;                   /* local strm.bits */
  let lcode;                  /* local strm.lencode */
  let dcode;                  /* local strm.distcode */
  let lmask;                  /* mask for first level of length codes */
  let dmask;                  /* mask for first level of distance codes */
  let here;                   /* retrieved table entry */
  let op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  let len;                    /* match length, unused bytes */
  let dist;                   /* match distance */
  let from;                   /* where to copy match from */
  let from_source;


  let input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  const state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};

},{}],129:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const adler32       = require('./adler32');
const crc32         = require('./crc32');
const inflate_fast  = require('./inffast');
const inflate_table = require('./inftrees');

const CODES = 0;
const LENS = 1;
const DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_FINISH, Z_BLOCK, Z_TREES,
  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,
  Z_DEFLATED
} = require('./constants');


/* STATES ====================================================================*/
/* ===========================================================================*/


const    HEAD = 16180;       /* i: waiting for magic header */
const    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */
const    TIME = 16182;       /* i: waiting for modification time (gzip) */
const    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */
const    EXLEN = 16184;      /* i: waiting for extra length (gzip) */
const    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */
const    NAME = 16186;       /* i: waiting for end of file name (gzip) */
const    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */
const    HCRC = 16188;       /* i: waiting for header crc (gzip) */
const    DICTID = 16189;    /* i: waiting for dictionary check value */
const    DICT = 16190;      /* waiting for inflateSetDictionary() call */
const        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */
const        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */
const        STORED = 16193;    /* i: waiting for stored size (length and complement) */
const        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */
const        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */
const        TABLE = 16196;     /* i: waiting for dynamic block table lengths */
const        LENLENS = 16197;   /* i: waiting for code length code lengths */
const        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */
const            LEN_ = 16199;      /* i: same as LEN below, but only first time in */
const            LEN = 16200;       /* i: waiting for length/lit/eob code */
const            LENEXT = 16201;    /* i: waiting for length extra bits */
const            DIST = 16202;      /* i: waiting for distance code */
const            DISTEXT = 16203;   /* i: waiting for distance extra bits */
const            MATCH = 16204;     /* o: waiting for output space to copy string */
const            LIT = 16205;       /* o: waiting for output space to write literal */
const    CHECK = 16206;     /* i: waiting for 32-bit check value */
const    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */
const    DONE = 16208;      /* finished check, done -- remain here until reset */
const    BAD = 16209;       /* got a data error -- remain here until reset */
const    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */
const    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



const ENOUGH_LENS = 852;
const ENOUGH_DISTS = 592;
//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

const MAX_WBITS = 15;
/* 32K LZ77 window */
const DEF_WBITS = MAX_WBITS;


const zswap32 = (q) => {

  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
};


function InflateState() {
  this.strm = null;           /* pointer back to this zlib stream */
  this.mode = 0;              /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,
                                 bit 2 true to validate check value */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib), or
                                 -1 if raw or no header yet */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new Uint16Array(320); /* temporary storage for code lengths */
  this.work = new Uint16Array(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}


const inflateStateCheck = (strm) => {

  if (!strm) {
    return 1;
  }
  const state = strm.state;
  if (!state || state.strm !== strm ||
    state.mode < HEAD || state.mode > SYNC) {
    return 1;
  }
  return 0;
};


const inflateResetKeep = (strm) => {

  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }
  const state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.flags = -1;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);
  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
};


const inflateReset = (strm) => {

  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }
  const state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

};


const inflateReset2 = (strm, windowBits) => {
  let wrap;

  /* get the state */
  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }
  const state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 5;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
};


const inflateInit2 = (strm, windowBits) => {

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  const state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.strm = strm;
  state.window = null/*Z_NULL*/;
  state.mode = HEAD;     /* to pass state test in inflateReset2() */
  const ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
};


const inflateInit = (strm) => {

  return inflateInit2(strm, DEF_WBITS);
};


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
let virgin = true;

let lenfix, distfix; // We have no pointers in JS, so keep tables separate


const fixedtables = (state) => {

  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    lenfix = new Int32Array(512);
    distfix = new Int32Array(32);

    /* literal/length table */
    let sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
};


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
const updatewindow = (strm, src, end, copy) => {

  let dist;
  const state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new Uint8Array(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    state.window.set(src.subarray(end - state.wsize, end), 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      state.window.set(src.subarray(end - copy, end), 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
};


const inflate = (strm, flush) => {

  let state;
  let input, output;          // input/output buffers
  let next;                   /* next input INDEX */
  let put;                    /* next output INDEX */
  let have, left;             /* available input and output */
  let hold;                   /* bit buffer */
  let bits;                   /* bits in bit buffer */
  let _in, _out;              /* save starting available input and output */
  let copy;                   /* number of stored or match bytes to copy */
  let from;                   /* where to copy match bytes from */
  let from_source;
  let here = 0;               /* current decoding table entry */
  let here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //let last;                   /* parent table entry */
  let last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  let len;                    /* length to copy for repeats, bits to drop */
  let ret;                    /* return code */
  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */
  let opts;

  let n; // temporary variable for NEED_BITS

  const order = /* permutation of code lengths */
    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);


  if (inflateStateCheck(strm) || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          if (state.wbits === 0) {
            state.wbits = 15;
          }
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        if (len > 15 || len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }

        // !!! pako patch. Force use `options.windowBits` if passed.
        // Required to always use max window size by default.
        state.dmax = 1 << state.wbits;
        //state.dmax = 1 << len;

        state.flags = 0;               /* indicate zlib header */
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if ((state.flags & 0x0200) && (state.wrap & 4)) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if ((state.flags & 0x0200) && (state.wrap & 4)) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if ((state.flags & 0x0200) && (state.wrap & 4)) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if ((state.flags & 0x0200) && (state.wrap & 4)) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Uint8Array(state.head.extra_len);
              }
              state.head.extra.set(
                input.subarray(
                  next,
                  // extra field is limited to 65536 bytes
                  // - no need for additional size check
                  next + copy
                ),
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if ((state.flags & 0x0200) && (state.wrap & 4)) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if ((state.flags & 0x0200) && (state.wrap & 4)) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if ((state.flags & 0x0200) && (state.wrap & 4)) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          output.set(input.subarray(next, next + copy), put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if ((state.wrap & 4) && _out) {
            strm.adler = state.check =
                /*UPDATE_CHECK(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if ((state.wrap & 4) && _out) {
    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
};


const inflateEnd = (strm) => {

  if (inflateStateCheck(strm)) {
    return Z_STREAM_ERROR;
  }

  let state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
};


const inflateGetHeader = (strm, head) => {

  /* check state */
  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }
  const state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
};


const inflateSetDictionary = (strm, dictionary) => {
  const dictLength = dictionary.length;

  let state;
  let dictid;
  let ret;

  /* check state */
  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
};


module.exports.inflateReset = inflateReset;
module.exports.inflateReset2 = inflateReset2;
module.exports.inflateResetKeep = inflateResetKeep;
module.exports.inflateInit = inflateInit;
module.exports.inflateInit2 = inflateInit2;
module.exports.inflate = inflate;
module.exports.inflateEnd = inflateEnd;
module.exports.inflateGetHeader = inflateGetHeader;
module.exports.inflateSetDictionary = inflateSetDictionary;
module.exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
module.exports.inflateCodesUsed = inflateCodesUsed;
module.exports.inflateCopy = inflateCopy;
module.exports.inflateGetDictionary = inflateGetDictionary;
module.exports.inflateMark = inflateMark;
module.exports.inflatePrime = inflatePrime;
module.exports.inflateSync = inflateSync;
module.exports.inflateSyncPoint = inflateSyncPoint;
module.exports.inflateUndermine = inflateUndermine;
module.exports.inflateValidate = inflateValidate;
*/

},{"./adler32":123,"./constants":124,"./crc32":125,"./inffast":128,"./inftrees":130}],130:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const MAXBITS = 15;
const ENOUGH_LENS = 852;
const ENOUGH_DISTS = 592;
//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

const CODES = 0;
const LENS = 1;
const DISTS = 2;

const lbase = new Uint16Array([ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
]);

const lext = new Uint8Array([ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
]);

const dbase = new Uint16Array([ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
]);

const dext = new Uint8Array([ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
]);

const inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>
{
  const bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  let len = 0;               /* a code's length in bits */
  let sym = 0;               /* index of code symbols */
  let min = 0, max = 0;          /* minimum and maximum code lengths */
  let root = 0;              /* number of index bits for root table */
  let curr = 0;              /* number of index bits for current table */
  let drop = 0;              /* code bits to drop for sub-table */
  let left = 0;                   /* number of prefix codes available */
  let used = 0;              /* code entries in table used */
  let huff = 0;              /* Huffman code */
  let incr;              /* for incrementing code, index */
  let fill;              /* index for replicating entries */
  let low;               /* low bits for current root entry */
  let mask;              /* mask for low root bits */
  let next;             /* next available space in table */
  let base = null;     /* base value table to use */
//  let shoextra;    /* extra bits table to use */
  let match;                  /* use base and extra for symbol >= match */
  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  let extra = null;

  let here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    match = 20;

  } else if (type === LENS) {
    base = lbase;
    extra = lext;
    match = 257;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    match = 0;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] + 1 < match) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] >= match) {
      here_op = extra[work[sym] - match];
      here_val = base[work[sym] - match];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


module.exports = inflate_table;

},{}],131:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};

},{}],132:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

/* Public constants ==========================================================*/
/* ===========================================================================*/


//const Z_FILTERED          = 1;
//const Z_HUFFMAN_ONLY      = 2;
//const Z_RLE               = 3;
const Z_FIXED               = 4;
//const Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
const Z_BINARY              = 0;
const Z_TEXT                = 1;
//const Z_ASCII             = 1; // = Z_TEXT
const Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

const STORED_BLOCK = 0;
const STATIC_TREES = 1;
const DYN_TREES    = 2;
/* The three kinds of block type */

const MIN_MATCH    = 3;
const MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

const LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

const LITERALS      = 256;
/* number of literal bytes 0..255 */

const L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

const D_CODES       = 30;
/* number of distance codes */

const BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

const HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

const MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

const Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

const MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

const END_BLOCK   = 256;
/* end of block literal code */

const REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

const REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

const REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
const extra_lbits =   /* extra bits for each length code */
  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);

const extra_dbits =   /* extra bits for each distance code */
  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);

const extra_blbits =  /* extra bits for each bit length code */
  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);

const bl_order =
  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

const DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
const static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

const static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

const _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

const _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

const base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

const base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


let static_l_desc;
let static_d_desc;
let static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



const d_code = (dist) => {

  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
};


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
const put_short = (s, w) => {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
};


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
const send_bits = (s, value, length) => {

  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
};


const send_code = (s, c, tree) => {

  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
};


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
const bi_reverse = (code, len) => {

  let res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
};


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
const bi_flush = (s) => {

  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
};


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
const gen_bitlen = (s, desc) => {
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */

  const tree            = desc.dyn_tree;
  const max_code        = desc.max_code;
  const stree           = desc.stat_desc.static_tree;
  const has_stree       = desc.stat_desc.has_stree;
  const extra           = desc.stat_desc.extra_bits;
  const base            = desc.stat_desc.extra_base;
  const max_length      = desc.stat_desc.max_length;
  let h;              /* heap index */
  let n, m;           /* iterate over the tree elements */
  let bits;           /* bit length */
  let xbits;          /* extra bits */
  let f;              /* frequency */
  let overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Tracev((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Tracev((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
};


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
const gen_codes = (tree, max_code, bl_count) => {
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */

  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  let code = 0;              /* running code value */
  let bits;                  /* bit index */
  let n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    code = (code + bl_count[bits - 1]) << 1;
    next_code[bits] = code;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    let len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
};


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
const tr_static_init = () => {

  let n;        /* iterates over tree elements */
  let bits;     /* bit counter */
  let length;   /* length value */
  let code;     /* code value */
  let dist;     /* distance index */
  const bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
};


/* ===========================================================================
 * Initialize a new block.
 */
const init_block = (s) => {

  let n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.sym_next = s.matches = 0;
};


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
const bi_windup = (s) =>
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
};

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
const smaller = (tree, n, m, depth) => {

  const _n2 = n * 2;
  const _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
};

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
const pqdownheap = (s, tree, k) => {
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */

  const v = s.heap[k];
  let j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
};


// inlined manually
// const SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
const compress_block = (s, ltree, dtree) => {
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */

  let dist;           /* distance of matched string */
  let lc;             /* match length or unmatched char (if dist == 0) */
  let sx = 0;         /* running index in sym_buf */
  let code;           /* the code to send */
  let extra;          /* number of extra bits to send */

  if (s.sym_next !== 0) {
    do {
      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;
      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;
      lc = s.pending_buf[s.sym_buf + sx++];
      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and sym_buf is ok: */
      //Assert(s->pending < s->lit_bufsize + sx, "pendingBuf overflow");

    } while (sx < s.sym_next);
  }

  send_code(s, END_BLOCK, ltree);
};


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
const build_tree = (s, desc) => {
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */

  const tree     = desc.dyn_tree;
  const stree    = desc.stat_desc.static_tree;
  const has_stree = desc.stat_desc.has_stree;
  const elems    = desc.stat_desc.elems;
  let n, m;          /* iterate over heap elements */
  let max_code = -1; /* largest code with non zero frequency */
  let node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
};


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
const scan_tree = (s, tree, max_code) => {
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */

  let n;                     /* iterates over all tree elements */
  let prevlen = -1;          /* last emitted length */
  let curlen;                /* length of current code */

  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  let count = 0;             /* repeat count of the current code */
  let max_count = 7;         /* max repeat count */
  let min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
};


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
const send_tree = (s, tree, max_code) => {
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */

  let n;                     /* iterates over all tree elements */
  let prevlen = -1;          /* last emitted length */
  let curlen;                /* length of current code */

  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  let count = 0;             /* repeat count of the current code */
  let max_count = 7;         /* max repeat count */
  let min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
};


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
const build_bl_tree = (s) => {

  let max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
};


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
const send_all_trees = (s, lcodes, dcodes, blcodes) => {
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */

  let rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
};


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "block list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "allow list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
const detect_data_type = (s) => {
  /* block_mask is the bit mask of block-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  let block_mask = 0xf3ffc07f;
  let n;

  /* Check for non-textual ("block-listed") bytes. */
  for (n = 0; n <= 31; n++, block_mask >>>= 1) {
    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("allow-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "block-listed" or "allow-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
};


let static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
const _tr_init = (s) =>
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
};


/* ===========================================================================
 * Send a stored block
 */
const _tr_stored_block = (s, buf, stored_len, last) => {
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */

  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  bi_windup(s);        /* align on byte boundary */
  put_short(s, stored_len);
  put_short(s, ~stored_len);
  if (stored_len) {
    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);
  }
  s.pending += stored_len;
};


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
const _tr_align = (s) => {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
};


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and write out the encoded block.
 */
const _tr_flush_block = (s, buf, stored_len, last) => {
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */

  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  let max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->sym_next / 3));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
};

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
const _tr_tally = (s, dist, lc) => {
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */

  s.pending_buf[s.sym_buf + s.sym_next++] = dist;
  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;
  s.pending_buf[s.sym_buf + s.sym_next++] = lc;
  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

  return (s.sym_next === s.sym_end);
};

module.exports._tr_init  = _tr_init;
module.exports._tr_stored_block = _tr_stored_block;
module.exports._tr_flush_block  = _tr_flush_block;
module.exports._tr_tally = _tr_tally;
module.exports._tr_align = _tr_align;

},{}],133:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;

},{}],134:[function(require,module,exports){
/* @license
Papa Parse
v5.4.1
https://github.com/mholt/PapaParse
License: MIT
*/
!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof module&&"undefined"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){"use strict";var f="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=f.IS_PAPA_WORKER||!1,a={},u=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;J(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!J(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ","(",i,")();"],{type:"text/javascript"})))),t=new f.Worker(e);var r,i;return t.onmessage=_,t.id=u++,a[t.id]=t}();return i.userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=J(t.step),t.chunk=J(t.chunk),t.complete=J(t.complete),t.error=J(t.error),delete t.worker,void i.postMessage({input:e,config:t,workerId:i.id})}var n=null;b.NODE_STREAM_INPUT,"string"==typeof e?(e=function(e){if(65279===e.charCodeAt(0))return e.slice(1);return e}(e),n=t.download?new l(t):new p(t)):!0===e.readable&&J(e.read)&&J(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=",",y="\r\n",s='"',a=s+s,r=!1,i=null,o=!1;!function(){if("object"!=typeof t)return;"string"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);("boolean"==typeof t.quotes||"function"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);"boolean"!=typeof t.skipEmptyLines&&"string"!=typeof t.skipEmptyLines||(r=t.skipEmptyLines);"string"==typeof t.newline&&(y=t.newline);"string"==typeof t.quoteChar&&(s=t.quoteChar);"boolean"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error("Option columns is empty");i=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);("boolean"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\-@\t\r].*$/)}();var u=new RegExp(Q(s),"g");"string"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return h(null,e,r);if("object"==typeof e[0])return h(i||Object.keys(e[0]),e,r)}else if("object"==typeof e)return"string"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||i),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:"object"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||"object"==typeof e.data[0]||(e.data=[e.data])),h(e.fields||[],e.data||[],r);throw new Error("Unable to serialize unrecognized input");function h(e,t,r){var i="";"string"==typeof e&&(e=JSON.parse(e)),"string"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(i+=m),i+=v(e[a],a);0<t.length&&(i+=y)}for(var o=0;o<t.length;o++){var u=n?e.length:t[o].length,h=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(r&&!n&&(h="greedy"===r?""===t[o].join("").trim():1===t[o].length&&0===t[o][0].length),"greedy"===r&&n){for(var d=[],l=0;l<u;l++){var c=s?e[l]:l;d.push(t[o][c])}h=""===d.join("").trim()}if(!h){for(var p=0;p<u;p++){0<p&&!f&&(i+=m);var g=n&&s?e[p]:p;i+=v(t[o][g],p)}o<t.length-1&&(!r||0<u&&!f)&&(i+=y)}}return i}function v(e,t){if(null==e)return"";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var r=!1;o&&"string"==typeof e&&o.test(e)&&(e="'"+e,r=!0);var i=e.toString().replace(u,a);return(r=r||!0===n||"function"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var r=0;r<t.length;r++)if(-1<e.indexOf(t[r]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||" "===i.charAt(0)||" "===i.charAt(i.length-1))?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK="\ufeff",b.BAD_DELIMITERS=["\r","\n",'"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=",",b.Parser=E,b.ParserHandle=r,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var r=o.config||{},u=[];return this.each(function(e){if(!("INPUT"===d(this).prop("tagName").toUpperCase()&&"file"===d(this).attr("type").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)u.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},r)})}),e(),this;function e(){if(0!==u.length){var e,t,r,i,n=u[0];if(J(o.before)){var s=o.before(n.file,n.inputElem);if("object"==typeof s){if("abort"===s.action)return e="AbortError",t=n.file,r=n.inputElem,i=s.reason,void(J(o.error)&&o.error({name:e},t,r,i));if("skip"===s.action)return void h();"object"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if("skip"===s)return void h()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){J(a)&&a(e,n.file,n.inputElem),h()},b.parse(n.file,n.instanceConfig)}else J(o.complete)&&o.complete()}function h(){u.splice(0,1),e()}}}function h(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine="",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new r(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&J(this._config.beforeFirstChunk)){var r=this._config.beforeFirstChunk(e);void 0!==r&&(e=r)}this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+e;this._partialLine="";var n=this._handle.parse(i,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=i.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(J(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!J(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){J(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var i;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),h.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(i=new XMLHttpRequest,this._config.withCredentials&&(i.withCredentials=this._config.withCredentials),n||(i.onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)),i.open(this._config.downloadRequestBody?"POST":"GET",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)i.setRequestHeader(t,e[t])}if(this._config.chunkSize){var r=this._start+this._config.chunkSize-1;i.setRequestHeader("Range","bytes="+this._start+"-"+r)}try{i.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===i.status&&this._chunkError()}},this._chunkLoaded=function(){4===i.readyState&&(i.status<200||400<=i.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:i.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader("Content-Range");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf("/")+1))}(i),this.parseChunk(i.responseText)))},this._chunkError=function(e){var t=i.statusText||e;this._sendError(new Error(t))}}function c(e){var i,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),h.call(this,e);var s="undefined"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((i=new FileReader).onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var r=i.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:r}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function p(e){var r;h.call(this,e=e||{}),this.stream=function(e){return r=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=r.substring(0,t),r=r.substring(t)):(e=r,r=""),this._finished=!r,this.parseChunk(e)}}}function g(e){h.call(this,e=e||{});var t=[],r=!0,i=!1;this.pause=function(){h.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){h.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on("data",this._streamData),this._input.on("end",this._streamEnd),this._input.on("error",this._streamError)},this._checkIsFinished=function(){i&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):r=!0},this._streamData=v(function(e){try{t.push("string"==typeof e?e:e.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),i=!0,this._streamData("")},this),this._streamCleanUp=v(function(){this._input.removeListener("data",this._streamData),this._input.removeListener("end",this._streamEnd),this._input.removeListener("error",this._streamError)},this)}function r(m){var a,o,u,i=Math.pow(2,53),n=-i,s=/^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,h=/^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/,t=this,r=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(J(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;r+=e.data.length,m.preview&&r>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return"greedy"===m.skipEmptyLines?""===e.join("").trim():1===e.length&&0===e[0].length}function g(){return c&&u&&(k("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+b.DefaultDelimiter+"'"),u=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){J(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var r,i=m.header?{}:[];for(r=0;r<e.length;r++){var n=r,s=e[r];m.header&&(n=r>=l.length?"__parsed_extra":l[r]),m.transform&&(s=m.transform(s,n)),s=v(n,s),"__parsed_extra"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>l.length?k("FieldMismatch","TooManyFields","Too many fields: expected "+l.length+" fields but parsed "+r,f+t):r<l.length&&k("FieldMismatch","TooFewFields","Too few fields: expected "+l.length+" fields but parsed "+r,f+t)),i}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return r=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[r]&&(m.dynamicTyping[r]=m.dynamicTypingFunction(r)),!0===(m.dynamicTyping[r]||m.dynamicTyping)?"true"===t||"TRUE"===t||"false"!==t&&"FALSE"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<i)return!0}return!1}(t)?parseFloat(t):h.test(t)?new Date(t):""===t?null:t):t;var r}function k(e,t,r,i){var n={type:e,code:t,message:r};void 0!==i&&(n.row=i),c.errors.push(n)}this.parse=function(e,t,r){var i=m.quoteChar||'"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var r=new RegExp(Q(t)+"([^]*?)"+Q(t),"gm"),i=(e=e.replace(r,"")).split("\r"),n=e.split("\n"),s=1<n.length&&n[0].length<i[0].length;if(1===i.length||s)return"\n";for(var a=0,o=0;o<i.length;o++)"\n"===i[o][0]&&a++;return a>=i.length/2?"\r\n":"\r"}(e,i)),u=!1,m.delimiter)J(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,r,i,n){var s,a,o,u;n=n||[",","\t","|",";",b.RECORD_SEP,b.UNIT_SEP];for(var h=0;h<n.length;h++){var f=n[h],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:i,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(r&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===u||u<l)&&1.99<l&&(a=d,s=f,u=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(u=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,r),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=J(m.chunk)?"":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,J(m.complete)&&m.complete(c),a=""}}function Q(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function E(j){var z,M=(j=j||{}).delimiter,P=j.newline,U=j.comments,q=j.step,N=j.preview,B=j.fastMode,K=z=void 0===j.quoteChar||null===j.quoteChar?'"':j.quoteChar;if(void 0!==j.escapeChar&&(K=j.escapeChar),("string"!=typeof M||-1<b.BAD_DELIMITERS.indexOf(M))&&(M=","),U===M)throw new Error("Comment character same as delimiter");!0===U?U="#":("string"!=typeof U||-1<b.BAD_DELIMITERS.indexOf(U))&&(U=!1),"\n"!==P&&"\r"!==P&&"\r\n"!==P&&(P="\n");var W=0,H=!1;this.parse=function(i,t,r){if("string"!=typeof i)throw new Error("Input must be a string");var n=i.length,e=M.length,s=P.length,a=U.length,o=J(q),u=[],h=[],f=[],d=W=0;if(!i)return L();if(j.header&&!t){var l=i.split(P)[0].split(M),c=[],p={},g=!1;for(var _ in l){var m=l[_];J(j.transformHeader)&&(m=j.transformHeader(m,_));var y=m,v=p[m]||0;for(0<v&&(g=!0,y=m+"_"+v),p[m]=v+1;c.includes(y);)y=y+"_"+v;c.push(y)}if(g){var k=i.split(P);k[0]=c.join(M),i=k.join(P)}}if(B||!1!==B&&-1===i.indexOf(z)){for(var b=i.split(P),E=0;E<b.length;E++){if(f=b[E],W+=f.length,E!==b.length-1)W+=P.length;else if(r)return L();if(!U||f.substring(0,a)!==U){if(o){if(u=[],I(f.split(M)),F(),H)return L()}else I(f.split(M));if(N&&N<=E)return u=u.slice(0,N),L(!0)}}return L()}for(var w=i.indexOf(M,W),R=i.indexOf(P,W),C=new RegExp(Q(K)+Q(z),"g"),S=i.indexOf(z,W);;)if(i[W]!==z)if(U&&0===f.length&&i.substring(W,W+a)===U){if(-1===R)return L();W=R+s,R=i.indexOf(P,W),w=i.indexOf(M,W)}else if(-1!==w&&(w<R||-1===R))f.push(i.substring(W,w)),W=w+e,w=i.indexOf(M,W);else{if(-1===R)break;if(f.push(i.substring(W,R)),D(R+s),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0)}else for(S=W,W++;;){if(-1===(S=i.indexOf(z,S+1)))return r||h.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:u.length,index:W}),T();if(S===n-1)return T(i.substring(W,S).replace(C,z));if(z!==K||i[S+1]!==K){if(z===K||0===S||i[S-1]!==K){-1!==w&&w<S+1&&(w=i.indexOf(M,S+1)),-1!==R&&R<S+1&&(R=i.indexOf(P,S+1));var O=A(-1===R?w:Math.min(w,R));if(i.substr(S+1+O,e)===M){f.push(i.substring(W,S).replace(C,z)),i[W=S+1+O+e]!==z&&(S=i.indexOf(z,W)),w=i.indexOf(M,W),R=i.indexOf(P,W);break}var x=A(R);if(i.substring(S+1+x,S+1+x+s)===P){if(f.push(i.substring(W,S).replace(C,z)),D(S+1+x+s),w=i.indexOf(M,W),S=i.indexOf(z,W),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0);break}h.push({type:"Quotes",code:"InvalidQuotes",message:"Trailing quote on quoted field is malformed",row:u.length,index:W}),S++}}else S++}return T();function I(e){u.push(e),d=W}function A(e){var t=0;if(-1!==e){var r=i.substring(S+1,e);r&&""===r.trim()&&(t=r.length)}return t}function T(e){return r||(void 0===e&&(e=i.substring(W)),f.push(e),W=n,I(f),o&&F()),L()}function D(e){W=e,I(f),f=[],R=i.indexOf(P,W)}function L(e){return{data:u,errors:h,meta:{delimiter:M,linebreak:P,aborted:H,truncated:!!e,cursor:d+(t||0)}}}function F(){q(L()),u=[],h=[]}},this.abort=function(){H=!0},this.getCharIndex=function(){return W}}function _(e){var t=e.data,r=a[t.workerId],i=!1;if(t.error)r.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){i=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(J(r.userStep)){for(var s=0;s<t.results.data.length&&(r.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!i);s++);delete t.results}else J(r.userChunk)&&(r.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!i&&m(t.workerId,t.results)}function m(e,t){var r=a[e];J(r.userComplete)&&r.userComplete(t),r.terminate(),delete a[e]}function y(){throw new Error("Not implemented.")}function w(e){if("object"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var r in e)t[r]=w(e[r]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function J(e){return"function"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if("string"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var r=b.parse(t.input,t.config);r&&f.postMessage({workerId:b.WORKER_ID,results:r,finished:!0})}}),(l.prototype=Object.create(h.prototype)).constructor=l,(c.prototype=Object.create(h.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(h.prototype)).constructor=g,b});
},{}],135:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let interlaceUtils = require("./interlace");

let pixelBppMapper = [
  // 0 - dummy entry
  function () {},

  // 1 - L
  // 0: 0, 1: 0, 2: 0, 3: 0xff
  function (pxData, data, pxPos, rawPos) {
    if (rawPos === data.length) {
      throw new Error("Ran out of data");
    }

    let pixel = data[rawPos];
    pxData[pxPos] = pixel;
    pxData[pxPos + 1] = pixel;
    pxData[pxPos + 2] = pixel;
    pxData[pxPos + 3] = 0xff;
  },

  // 2 - LA
  // 0: 0, 1: 0, 2: 0, 3: 1
  function (pxData, data, pxPos, rawPos) {
    if (rawPos + 1 >= data.length) {
      throw new Error("Ran out of data");
    }

    let pixel = data[rawPos];
    pxData[pxPos] = pixel;
    pxData[pxPos + 1] = pixel;
    pxData[pxPos + 2] = pixel;
    pxData[pxPos + 3] = data[rawPos + 1];
  },

  // 3 - RGB
  // 0: 0, 1: 1, 2: 2, 3: 0xff
  function (pxData, data, pxPos, rawPos) {
    if (rawPos + 2 >= data.length) {
      throw new Error("Ran out of data");
    }

    pxData[pxPos] = data[rawPos];
    pxData[pxPos + 1] = data[rawPos + 1];
    pxData[pxPos + 2] = data[rawPos + 2];
    pxData[pxPos + 3] = 0xff;
  },

  // 4 - RGBA
  // 0: 0, 1: 1, 2: 2, 3: 3
  function (pxData, data, pxPos, rawPos) {
    if (rawPos + 3 >= data.length) {
      throw new Error("Ran out of data");
    }

    pxData[pxPos] = data[rawPos];
    pxData[pxPos + 1] = data[rawPos + 1];
    pxData[pxPos + 2] = data[rawPos + 2];
    pxData[pxPos + 3] = data[rawPos + 3];
  },
];

let pixelBppCustomMapper = [
  // 0 - dummy entry
  function () {},

  // 1 - L
  // 0: 0, 1: 0, 2: 0, 3: 0xff
  function (pxData, pixelData, pxPos, maxBit) {
    let pixel = pixelData[0];
    pxData[pxPos] = pixel;
    pxData[pxPos + 1] = pixel;
    pxData[pxPos + 2] = pixel;
    pxData[pxPos + 3] = maxBit;
  },

  // 2 - LA
  // 0: 0, 1: 0, 2: 0, 3: 1
  function (pxData, pixelData, pxPos) {
    let pixel = pixelData[0];
    pxData[pxPos] = pixel;
    pxData[pxPos + 1] = pixel;
    pxData[pxPos + 2] = pixel;
    pxData[pxPos + 3] = pixelData[1];
  },

  // 3 - RGB
  // 0: 0, 1: 1, 2: 2, 3: 0xff
  function (pxData, pixelData, pxPos, maxBit) {
    pxData[pxPos] = pixelData[0];
    pxData[pxPos + 1] = pixelData[1];
    pxData[pxPos + 2] = pixelData[2];
    pxData[pxPos + 3] = maxBit;
  },

  // 4 - RGBA
  // 0: 0, 1: 1, 2: 2, 3: 3
  function (pxData, pixelData, pxPos) {
    pxData[pxPos] = pixelData[0];
    pxData[pxPos + 1] = pixelData[1];
    pxData[pxPos + 2] = pixelData[2];
    pxData[pxPos + 3] = pixelData[3];
  },
];

function bitRetriever(data, depth) {
  let leftOver = [];
  let i = 0;

  function split() {
    if (i === data.length) {
      throw new Error("Ran out of data");
    }
    let byte = data[i];
    i++;
    let byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;
    switch (depth) {
      default:
        throw new Error("unrecognised depth");
      case 16:
        byte2 = data[i];
        i++;
        leftOver.push((byte << 8) + byte2);
        break;
      case 4:
        byte2 = byte & 0x0f;
        byte1 = byte >> 4;
        leftOver.push(byte1, byte2);
        break;
      case 2:
        byte4 = byte & 3;
        byte3 = (byte >> 2) & 3;
        byte2 = (byte >> 4) & 3;
        byte1 = (byte >> 6) & 3;
        leftOver.push(byte1, byte2, byte3, byte4);
        break;
      case 1:
        byte8 = byte & 1;
        byte7 = (byte >> 1) & 1;
        byte6 = (byte >> 2) & 1;
        byte5 = (byte >> 3) & 1;
        byte4 = (byte >> 4) & 1;
        byte3 = (byte >> 5) & 1;
        byte2 = (byte >> 6) & 1;
        byte1 = (byte >> 7) & 1;
        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);
        break;
    }
  }

  return {
    get: function (count) {
      while (leftOver.length < count) {
        split();
      }
      let returner = leftOver.slice(0, count);
      leftOver = leftOver.slice(count);
      return returner;
    },
    resetAfterLine: function () {
      leftOver.length = 0;
    },
    end: function () {
      if (i !== data.length) {
        throw new Error("extra data found");
      }
    },
  };
}

function mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {
  // eslint-disable-line max-params
  let imageWidth = image.width;
  let imageHeight = image.height;
  let imagePass = image.index;
  for (let y = 0; y < imageHeight; y++) {
    for (let x = 0; x < imageWidth; x++) {
      let pxPos = getPxPos(x, y, imagePass);
      pixelBppMapper[bpp](pxData, data, pxPos, rawPos);
      rawPos += bpp; //eslint-disable-line no-param-reassign
    }
  }
  return rawPos;
}

function mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {
  // eslint-disable-line max-params
  let imageWidth = image.width;
  let imageHeight = image.height;
  let imagePass = image.index;
  for (let y = 0; y < imageHeight; y++) {
    for (let x = 0; x < imageWidth; x++) {
      let pixelData = bits.get(bpp);
      let pxPos = getPxPos(x, y, imagePass);
      pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);
    }
    bits.resetAfterLine();
  }
}

exports.dataToBitMap = function (data, bitmapInfo) {
  let width = bitmapInfo.width;
  let height = bitmapInfo.height;
  let depth = bitmapInfo.depth;
  let bpp = bitmapInfo.bpp;
  let interlace = bitmapInfo.interlace;
  let bits;

  if (depth !== 8) {
    bits = bitRetriever(data, depth);
  }
  let pxData;
  if (depth <= 8) {
    pxData = Buffer.alloc(width * height * 4);
  } else {
    pxData = new Uint16Array(width * height * 4);
  }
  let maxBit = Math.pow(2, depth) - 1;
  let rawPos = 0;
  let images;
  let getPxPos;

  if (interlace) {
    images = interlaceUtils.getImagePasses(width, height);
    getPxPos = interlaceUtils.getInterlaceIterator(width, height);
  } else {
    let nonInterlacedPxPos = 0;
    getPxPos = function () {
      let returner = nonInterlacedPxPos;
      nonInterlacedPxPos += 4;
      return returner;
    };
    images = [{ width: width, height: height }];
  }

  for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {
    if (depth === 8) {
      rawPos = mapImage8Bit(
        images[imageIndex],
        pxData,
        getPxPos,
        bpp,
        data,
        rawPos
      );
    } else {
      mapImageCustomBit(
        images[imageIndex],
        pxData,
        getPxPos,
        bpp,
        bits,
        maxBit
      );
    }
  }
  if (depth === 8) {
    if (rawPos !== data.length) {
      throw new Error("extra data found");
    }
  } else {
    bits.end();
  }

  return pxData;
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./interlace":145,"buffer":172}],136:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let constants = require("./constants");

module.exports = function (dataIn, width, height, options) {
  let outHasAlpha =
    [constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(
      options.colorType
    ) !== -1;
  if (options.colorType === options.inputColorType) {
    let bigEndian = (function () {
      let buffer = new ArrayBuffer(2);
      new DataView(buffer).setInt16(0, 256, true /* littleEndian */);
      // Int16Array uses the platform's endianness.
      return new Int16Array(buffer)[0] !== 256;
    })();
    // If no need to convert to grayscale and alpha is present/absent in both, take a fast route
    if (options.bitDepth === 8 || (options.bitDepth === 16 && bigEndian)) {
      return dataIn;
    }
  }

  // map to a UInt16 array if data is 16bit, fix endianness below
  let data = options.bitDepth !== 16 ? dataIn : new Uint16Array(dataIn.buffer);

  let maxValue = 255;
  let inBpp = constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];
  if (inBpp === 4 && !options.inputHasAlpha) {
    inBpp = 3;
  }
  let outBpp = constants.COLORTYPE_TO_BPP_MAP[options.colorType];
  if (options.bitDepth === 16) {
    maxValue = 65535;
    outBpp *= 2;
  }
  let outData = Buffer.alloc(width * height * outBpp);

  let inIndex = 0;
  let outIndex = 0;

  let bgColor = options.bgColor || {};
  if (bgColor.red === undefined) {
    bgColor.red = maxValue;
  }
  if (bgColor.green === undefined) {
    bgColor.green = maxValue;
  }
  if (bgColor.blue === undefined) {
    bgColor.blue = maxValue;
  }

  function getRGBA() {
    let red;
    let green;
    let blue;
    let alpha = maxValue;
    switch (options.inputColorType) {
      case constants.COLORTYPE_COLOR_ALPHA:
        alpha = data[inIndex + 3];
        red = data[inIndex];
        green = data[inIndex + 1];
        blue = data[inIndex + 2];
        break;
      case constants.COLORTYPE_COLOR:
        red = data[inIndex];
        green = data[inIndex + 1];
        blue = data[inIndex + 2];
        break;
      case constants.COLORTYPE_ALPHA:
        alpha = data[inIndex + 1];
        red = data[inIndex];
        green = red;
        blue = red;
        break;
      case constants.COLORTYPE_GRAYSCALE:
        red = data[inIndex];
        green = red;
        blue = red;
        break;
      default:
        throw new Error(
          "input color type:" +
            options.inputColorType +
            " is not supported at present"
        );
    }

    if (options.inputHasAlpha) {
      if (!outHasAlpha) {
        alpha /= maxValue;
        red = Math.min(
          Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0),
          maxValue
        );
        green = Math.min(
          Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0),
          maxValue
        );
        blue = Math.min(
          Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0),
          maxValue
        );
      }
    }
    return { red: red, green: green, blue: blue, alpha: alpha };
  }

  for (let y = 0; y < height; y++) {
    for (let x = 0; x < width; x++) {
      let rgba = getRGBA(data, inIndex);

      switch (options.colorType) {
        case constants.COLORTYPE_COLOR_ALPHA:
        case constants.COLORTYPE_COLOR:
          if (options.bitDepth === 8) {
            outData[outIndex] = rgba.red;
            outData[outIndex + 1] = rgba.green;
            outData[outIndex + 2] = rgba.blue;
            if (outHasAlpha) {
              outData[outIndex + 3] = rgba.alpha;
            }
          } else {
            outData.writeUInt16BE(rgba.red, outIndex);
            outData.writeUInt16BE(rgba.green, outIndex + 2);
            outData.writeUInt16BE(rgba.blue, outIndex + 4);
            if (outHasAlpha) {
              outData.writeUInt16BE(rgba.alpha, outIndex + 6);
            }
          }
          break;
        case constants.COLORTYPE_ALPHA:
        case constants.COLORTYPE_GRAYSCALE: {
          // Convert to grayscale and alpha
          let grayscale = (rgba.red + rgba.green + rgba.blue) / 3;
          if (options.bitDepth === 8) {
            outData[outIndex] = grayscale;
            if (outHasAlpha) {
              outData[outIndex + 1] = rgba.alpha;
            }
          } else {
            outData.writeUInt16BE(grayscale, outIndex);
            if (outHasAlpha) {
              outData.writeUInt16BE(rgba.alpha, outIndex + 2);
            }
          }
          break;
        }
        default:
          throw new Error("unrecognised color Type " + options.colorType);
      }

      inIndex += inBpp;
      outIndex += outBpp;
    }
  }

  return outData;
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./constants":138,"buffer":172}],137:[function(require,module,exports){
(function (process,Buffer){(function (){
"use strict";

let util = require("util");
let Stream = require("stream");

let ChunkStream = (module.exports = function () {
  Stream.call(this);

  this._buffers = [];
  this._buffered = 0;

  this._reads = [];
  this._paused = false;

  this._encoding = "utf8";
  this.writable = true;
});
util.inherits(ChunkStream, Stream);

ChunkStream.prototype.read = function (length, callback) {
  this._reads.push({
    length: Math.abs(length), // if length < 0 then at most this length
    allowLess: length < 0,
    func: callback,
  });

  process.nextTick(
    function () {
      this._process();

      // its paused and there is not enought data then ask for more
      if (this._paused && this._reads && this._reads.length > 0) {
        this._paused = false;

        this.emit("drain");
      }
    }.bind(this)
  );
};

ChunkStream.prototype.write = function (data, encoding) {
  if (!this.writable) {
    this.emit("error", new Error("Stream not writable"));
    return false;
  }

  let dataBuffer;
  if (Buffer.isBuffer(data)) {
    dataBuffer = data;
  } else {
    dataBuffer = Buffer.from(data, encoding || this._encoding);
  }

  this._buffers.push(dataBuffer);
  this._buffered += dataBuffer.length;

  this._process();

  // ok if there are no more read requests
  if (this._reads && this._reads.length === 0) {
    this._paused = true;
  }

  return this.writable && !this._paused;
};

ChunkStream.prototype.end = function (data, encoding) {
  if (data) {
    this.write(data, encoding);
  }

  this.writable = false;

  // already destroyed
  if (!this._buffers) {
    return;
  }

  // enqueue or handle end
  if (this._buffers.length === 0) {
    this._end();
  } else {
    this._buffers.push(null);
    this._process();
  }
};

ChunkStream.prototype.destroySoon = ChunkStream.prototype.end;

ChunkStream.prototype._end = function () {
  if (this._reads.length > 0) {
    this.emit("error", new Error("Unexpected end of input"));
  }

  this.destroy();
};

ChunkStream.prototype.destroy = function () {
  if (!this._buffers) {
    return;
  }

  this.writable = false;
  this._reads = null;
  this._buffers = null;

  this.emit("close");
};

ChunkStream.prototype._processReadAllowingLess = function (read) {
  // ok there is any data so that we can satisfy this request
  this._reads.shift(); // == read

  // first we need to peek into first buffer
  let smallerBuf = this._buffers[0];

  // ok there is more data than we need
  if (smallerBuf.length > read.length) {
    this._buffered -= read.length;
    this._buffers[0] = smallerBuf.slice(read.length);

    read.func.call(this, smallerBuf.slice(0, read.length));
  } else {
    // ok this is less than maximum length so use it all
    this._buffered -= smallerBuf.length;
    this._buffers.shift(); // == smallerBuf

    read.func.call(this, smallerBuf);
  }
};

ChunkStream.prototype._processRead = function (read) {
  this._reads.shift(); // == read

  let pos = 0;
  let count = 0;
  let data = Buffer.alloc(read.length);

  // create buffer for all data
  while (pos < read.length) {
    let buf = this._buffers[count++];
    let len = Math.min(buf.length, read.length - pos);

    buf.copy(data, pos, 0, len);
    pos += len;

    // last buffer wasn't used all so just slice it and leave
    if (len !== buf.length) {
      this._buffers[--count] = buf.slice(len);
    }
  }

  // remove all used buffers
  if (count > 0) {
    this._buffers.splice(0, count);
  }

  this._buffered -= read.length;

  read.func.call(this, data);
};

ChunkStream.prototype._process = function () {
  try {
    // as long as there is any data and read requests
    while (this._buffered > 0 && this._reads && this._reads.length > 0) {
      let read = this._reads[0];

      // read any data (but no more than length)
      if (read.allowLess) {
        this._processReadAllowingLess(read);
      } else if (this._buffered >= read.length) {
        // ok we can meet some expectations

        this._processRead(read);
      } else {
        // not enought data to satisfy first request in queue
        // so we need to wait for more
        break;
      }
    }

    if (this._buffers && !this.writable) {
      this._end();
    }
  } catch (ex) {
    this.emit("error", ex);
  }
};

}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":203,"buffer":172,"stream":205,"util":224}],138:[function(require,module,exports){
"use strict";

module.exports = {
  PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],

  TYPE_IHDR: 0x49484452,
  TYPE_IEND: 0x49454e44,
  TYPE_IDAT: 0x49444154,
  TYPE_PLTE: 0x504c5445,
  TYPE_tRNS: 0x74524e53, // eslint-disable-line camelcase
  TYPE_gAMA: 0x67414d41, // eslint-disable-line camelcase

  // color-type bits
  COLORTYPE_GRAYSCALE: 0,
  COLORTYPE_PALETTE: 1,
  COLORTYPE_COLOR: 2,
  COLORTYPE_ALPHA: 4, // e.g. grayscale and alpha

  // color-type combinations
  COLORTYPE_PALETTE_COLOR: 3,
  COLORTYPE_COLOR_ALPHA: 6,

  COLORTYPE_TO_BPP_MAP: {
    0: 1,
    2: 3,
    3: 1,
    4: 2,
    6: 4,
  },

  GAMMA_DIVISION: 100000,
};

},{}],139:[function(require,module,exports){
"use strict";

let crcTable = [];

(function () {
  for (let i = 0; i < 256; i++) {
    let currentCrc = i;
    for (let j = 0; j < 8; j++) {
      if (currentCrc & 1) {
        currentCrc = 0xedb88320 ^ (currentCrc >>> 1);
      } else {
        currentCrc = currentCrc >>> 1;
      }
    }
    crcTable[i] = currentCrc;
  }
})();

let CrcCalculator = (module.exports = function () {
  this._crc = -1;
});

CrcCalculator.prototype.write = function (data) {
  for (let i = 0; i < data.length; i++) {
    this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);
  }
  return true;
};

CrcCalculator.prototype.crc32 = function () {
  return this._crc ^ -1;
};

CrcCalculator.crc32 = function (buf) {
  let crc = -1;
  for (let i = 0; i < buf.length; i++) {
    crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);
  }
  return crc ^ -1;
};

},{}],140:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let paethPredictor = require("./paeth-predictor");

function filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {
  for (let x = 0; x < byteWidth; x++) {
    rawData[rawPos + x] = pxData[pxPos + x];
  }
}

function filterSumNone(pxData, pxPos, byteWidth) {
  let sum = 0;
  let length = pxPos + byteWidth;

  for (let i = pxPos; i < length; i++) {
    sum += Math.abs(pxData[i]);
  }
  return sum;
}

function filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {
  for (let x = 0; x < byteWidth; x++) {
    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
    let val = pxData[pxPos + x] - left;

    rawData[rawPos + x] = val;
  }
}

function filterSumSub(pxData, pxPos, byteWidth, bpp) {
  let sum = 0;
  for (let x = 0; x < byteWidth; x++) {
    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
    let val = pxData[pxPos + x] - left;

    sum += Math.abs(val);
  }

  return sum;
}

function filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {
  for (let x = 0; x < byteWidth; x++) {
    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
    let val = pxData[pxPos + x] - up;

    rawData[rawPos + x] = val;
  }
}

function filterSumUp(pxData, pxPos, byteWidth) {
  let sum = 0;
  let length = pxPos + byteWidth;
  for (let x = pxPos; x < length; x++) {
    let up = pxPos > 0 ? pxData[x - byteWidth] : 0;
    let val = pxData[x] - up;

    sum += Math.abs(val);
  }

  return sum;
}

function filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {
  for (let x = 0; x < byteWidth; x++) {
    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
    let val = pxData[pxPos + x] - ((left + up) >> 1);

    rawData[rawPos + x] = val;
  }
}

function filterSumAvg(pxData, pxPos, byteWidth, bpp) {
  let sum = 0;
  for (let x = 0; x < byteWidth; x++) {
    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
    let val = pxData[pxPos + x] - ((left + up) >> 1);

    sum += Math.abs(val);
  }

  return sum;
}

function filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {
  for (let x = 0; x < byteWidth; x++) {
    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
    let upleft =
      pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;
    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);

    rawData[rawPos + x] = val;
  }
}

function filterSumPaeth(pxData, pxPos, byteWidth, bpp) {
  let sum = 0;
  for (let x = 0; x < byteWidth; x++) {
    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
    let upleft =
      pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;
    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);

    sum += Math.abs(val);
  }

  return sum;
}

let filters = {
  0: filterNone,
  1: filterSub,
  2: filterUp,
  3: filterAvg,
  4: filterPaeth,
};

let filterSums = {
  0: filterSumNone,
  1: filterSumSub,
  2: filterSumUp,
  3: filterSumAvg,
  4: filterSumPaeth,
};

module.exports = function (pxData, width, height, options, bpp) {
  let filterTypes;
  if (!("filterType" in options) || options.filterType === -1) {
    filterTypes = [0, 1, 2, 3, 4];
  } else if (typeof options.filterType === "number") {
    filterTypes = [options.filterType];
  } else {
    throw new Error("unrecognised filter types");
  }

  if (options.bitDepth === 16) {
    bpp *= 2;
  }
  let byteWidth = width * bpp;
  let rawPos = 0;
  let pxPos = 0;
  let rawData = Buffer.alloc((byteWidth + 1) * height);

  let sel = filterTypes[0];

  for (let y = 0; y < height; y++) {
    if (filterTypes.length > 1) {
      // find best filter for this line (with lowest sum of values)
      let min = Infinity;

      for (let i = 0; i < filterTypes.length; i++) {
        let sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);
        if (sum < min) {
          sel = filterTypes[i];
          min = sum;
        }
      }
    }

    rawData[rawPos] = sel;
    rawPos++;
    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);
    rawPos += byteWidth;
    pxPos += byteWidth;
  }
  return rawData;
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./paeth-predictor":149,"buffer":172}],141:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let util = require("util");
let ChunkStream = require("./chunkstream");
let Filter = require("./filter-parse");

let FilterAsync = (module.exports = function (bitmapInfo) {
  ChunkStream.call(this);

  let buffers = [];
  let that = this;
  this._filter = new Filter(bitmapInfo, {
    read: this.read.bind(this),
    write: function (buffer) {
      buffers.push(buffer);
    },
    complete: function () {
      that.emit("complete", Buffer.concat(buffers));
    },
  });

  this._filter.start();
});
util.inherits(FilterAsync, ChunkStream);

}).call(this)}).call(this,require("buffer").Buffer)
},{"./chunkstream":137,"./filter-parse":143,"buffer":172,"util":224}],142:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let SyncReader = require("./sync-reader");
let Filter = require("./filter-parse");

exports.process = function (inBuffer, bitmapInfo) {
  let outBuffers = [];
  let reader = new SyncReader(inBuffer);
  let filter = new Filter(bitmapInfo, {
    read: reader.read.bind(reader),
    write: function (bufferPart) {
      outBuffers.push(bufferPart);
    },
    complete: function () {},
  });

  filter.start();
  reader.process();

  return Buffer.concat(outBuffers);
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./filter-parse":143,"./sync-reader":156,"buffer":172}],143:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let interlaceUtils = require("./interlace");
let paethPredictor = require("./paeth-predictor");

function getByteWidth(width, bpp, depth) {
  let byteWidth = width * bpp;
  if (depth !== 8) {
    byteWidth = Math.ceil(byteWidth / (8 / depth));
  }
  return byteWidth;
}

let Filter = (module.exports = function (bitmapInfo, dependencies) {
  let width = bitmapInfo.width;
  let height = bitmapInfo.height;
  let interlace = bitmapInfo.interlace;
  let bpp = bitmapInfo.bpp;
  let depth = bitmapInfo.depth;

  this.read = dependencies.read;
  this.write = dependencies.write;
  this.complete = dependencies.complete;

  this._imageIndex = 0;
  this._images = [];
  if (interlace) {
    let passes = interlaceUtils.getImagePasses(width, height);
    for (let i = 0; i < passes.length; i++) {
      this._images.push({
        byteWidth: getByteWidth(passes[i].width, bpp, depth),
        height: passes[i].height,
        lineIndex: 0,
      });
    }
  } else {
    this._images.push({
      byteWidth: getByteWidth(width, bpp, depth),
      height: height,
      lineIndex: 0,
    });
  }

  // when filtering the line we look at the pixel to the left
  // the spec also says it is done on a byte level regardless of the number of pixels
  // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back
  // a pixel rather than just a different byte part. However if we are sub byte, we ignore.
  if (depth === 8) {
    this._xComparison = bpp;
  } else if (depth === 16) {
    this._xComparison = bpp * 2;
  } else {
    this._xComparison = 1;
  }
});

Filter.prototype.start = function () {
  this.read(
    this._images[this._imageIndex].byteWidth + 1,
    this._reverseFilterLine.bind(this)
  );
};

Filter.prototype._unFilterType1 = function (
  rawData,
  unfilteredLine,
  byteWidth
) {
  let xComparison = this._xComparison;
  let xBiggerThan = xComparison - 1;

  for (let x = 0; x < byteWidth; x++) {
    let rawByte = rawData[1 + x];
    let f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;
    unfilteredLine[x] = rawByte + f1Left;
  }
};

Filter.prototype._unFilterType2 = function (
  rawData,
  unfilteredLine,
  byteWidth
) {
  let lastLine = this._lastLine;

  for (let x = 0; x < byteWidth; x++) {
    let rawByte = rawData[1 + x];
    let f2Up = lastLine ? lastLine[x] : 0;
    unfilteredLine[x] = rawByte + f2Up;
  }
};

Filter.prototype._unFilterType3 = function (
  rawData,
  unfilteredLine,
  byteWidth
) {
  let xComparison = this._xComparison;
  let xBiggerThan = xComparison - 1;
  let lastLine = this._lastLine;

  for (let x = 0; x < byteWidth; x++) {
    let rawByte = rawData[1 + x];
    let f3Up = lastLine ? lastLine[x] : 0;
    let f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;
    let f3Add = Math.floor((f3Left + f3Up) / 2);
    unfilteredLine[x] = rawByte + f3Add;
  }
};

Filter.prototype._unFilterType4 = function (
  rawData,
  unfilteredLine,
  byteWidth
) {
  let xComparison = this._xComparison;
  let xBiggerThan = xComparison - 1;
  let lastLine = this._lastLine;

  for (let x = 0; x < byteWidth; x++) {
    let rawByte = rawData[1 + x];
    let f4Up = lastLine ? lastLine[x] : 0;
    let f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;
    let f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;
    let f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);
    unfilteredLine[x] = rawByte + f4Add;
  }
};

Filter.prototype._reverseFilterLine = function (rawData) {
  let filter = rawData[0];
  let unfilteredLine;
  let currentImage = this._images[this._imageIndex];
  let byteWidth = currentImage.byteWidth;

  if (filter === 0) {
    unfilteredLine = rawData.slice(1, byteWidth + 1);
  } else {
    unfilteredLine = Buffer.alloc(byteWidth);

    switch (filter) {
      case 1:
        this._unFilterType1(rawData, unfilteredLine, byteWidth);
        break;
      case 2:
        this._unFilterType2(rawData, unfilteredLine, byteWidth);
        break;
      case 3:
        this._unFilterType3(rawData, unfilteredLine, byteWidth);
        break;
      case 4:
        this._unFilterType4(rawData, unfilteredLine, byteWidth);
        break;
      default:
        throw new Error("Unrecognised filter type - " + filter);
    }
  }

  this.write(unfilteredLine);

  currentImage.lineIndex++;
  if (currentImage.lineIndex >= currentImage.height) {
    this._lastLine = null;
    this._imageIndex++;
    currentImage = this._images[this._imageIndex];
  } else {
    this._lastLine = unfilteredLine;
  }

  if (currentImage) {
    // read, using the byte width that may be from the new current image
    this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));
  } else {
    this._lastLine = null;
    this.complete();
  }
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./interlace":145,"./paeth-predictor":149,"buffer":172}],144:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

function dePalette(indata, outdata, width, height, palette) {
  let pxPos = 0;
  // use values from palette
  for (let y = 0; y < height; y++) {
    for (let x = 0; x < width; x++) {
      let color = palette[indata[pxPos]];

      if (!color) {
        throw new Error("index " + indata[pxPos] + " not in palette");
      }

      for (let i = 0; i < 4; i++) {
        outdata[pxPos + i] = color[i];
      }
      pxPos += 4;
    }
  }
}

function replaceTransparentColor(indata, outdata, width, height, transColor) {
  let pxPos = 0;
  for (let y = 0; y < height; y++) {
    for (let x = 0; x < width; x++) {
      let makeTrans = false;

      if (transColor.length === 1) {
        if (transColor[0] === indata[pxPos]) {
          makeTrans = true;
        }
      } else if (
        transColor[0] === indata[pxPos] &&
        transColor[1] === indata[pxPos + 1] &&
        transColor[2] === indata[pxPos + 2]
      ) {
        makeTrans = true;
      }
      if (makeTrans) {
        for (let i = 0; i < 4; i++) {
          outdata[pxPos + i] = 0;
        }
      }
      pxPos += 4;
    }
  }
}

function scaleDepth(indata, outdata, width, height, depth) {
  let maxOutSample = 255;
  let maxInSample = Math.pow(2, depth) - 1;
  let pxPos = 0;

  for (let y = 0; y < height; y++) {
    for (let x = 0; x < width; x++) {
      for (let i = 0; i < 4; i++) {
        outdata[pxPos + i] = Math.floor(
          (indata[pxPos + i] * maxOutSample) / maxInSample + 0.5
        );
      }
      pxPos += 4;
    }
  }
}

module.exports = function (indata, imageData, skipRescale = false) {
  let depth = imageData.depth;
  let width = imageData.width;
  let height = imageData.height;
  let colorType = imageData.colorType;
  let transColor = imageData.transColor;
  let palette = imageData.palette;

  let outdata = indata; // only different for 16 bits

  if (colorType === 3) {
    // paletted
    dePalette(indata, outdata, width, height, palette);
  } else {
    if (transColor) {
      replaceTransparentColor(indata, outdata, width, height, transColor);
    }
    // if it needs scaling
    if (depth !== 8 && !skipRescale) {
      // if we need to change the buffer size
      if (depth === 16) {
        outdata = Buffer.alloc(width * height * 4);
      }
      scaleDepth(indata, outdata, width, height, depth);
    }
  }
  return outdata;
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":172}],145:[function(require,module,exports){
"use strict";

// Adam 7
//   0 1 2 3 4 5 6 7
// 0 x 6 4 6 x 6 4 6
// 1 7 7 7 7 7 7 7 7
// 2 5 6 5 6 5 6 5 6
// 3 7 7 7 7 7 7 7 7
// 4 3 6 4 6 3 6 4 6
// 5 7 7 7 7 7 7 7 7
// 6 5 6 5 6 5 6 5 6
// 7 7 7 7 7 7 7 7 7

let imagePasses = [
  {
    // pass 1 - 1px
    x: [0],
    y: [0],
  },
  {
    // pass 2 - 1px
    x: [4],
    y: [0],
  },
  {
    // pass 3 - 2px
    x: [0, 4],
    y: [4],
  },
  {
    // pass 4 - 4px
    x: [2, 6],
    y: [0, 4],
  },
  {
    // pass 5 - 8px
    x: [0, 2, 4, 6],
    y: [2, 6],
  },
  {
    // pass 6 - 16px
    x: [1, 3, 5, 7],
    y: [0, 2, 4, 6],
  },
  {
    // pass 7 - 32px
    x: [0, 1, 2, 3, 4, 5, 6, 7],
    y: [1, 3, 5, 7],
  },
];

exports.getImagePasses = function (width, height) {
  let images = [];
  let xLeftOver = width % 8;
  let yLeftOver = height % 8;
  let xRepeats = (width - xLeftOver) / 8;
  let yRepeats = (height - yLeftOver) / 8;
  for (let i = 0; i < imagePasses.length; i++) {
    let pass = imagePasses[i];
    let passWidth = xRepeats * pass.x.length;
    let passHeight = yRepeats * pass.y.length;
    for (let j = 0; j < pass.x.length; j++) {
      if (pass.x[j] < xLeftOver) {
        passWidth++;
      } else {
        break;
      }
    }
    for (let j = 0; j < pass.y.length; j++) {
      if (pass.y[j] < yLeftOver) {
        passHeight++;
      } else {
        break;
      }
    }
    if (passWidth > 0 && passHeight > 0) {
      images.push({ width: passWidth, height: passHeight, index: i });
    }
  }
  return images;
};

exports.getInterlaceIterator = function (width) {
  return function (x, y, pass) {
    let outerXLeftOver = x % imagePasses[pass].x.length;
    let outerX =
      ((x - outerXLeftOver) / imagePasses[pass].x.length) * 8 +
      imagePasses[pass].x[outerXLeftOver];
    let outerYLeftOver = y % imagePasses[pass].y.length;
    let outerY =
      ((y - outerYLeftOver) / imagePasses[pass].y.length) * 8 +
      imagePasses[pass].y[outerYLeftOver];
    return outerX * 4 + outerY * width * 4;
  };
};

},{}],146:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let util = require("util");
let Stream = require("stream");
let constants = require("./constants");
let Packer = require("./packer");

let PackerAsync = (module.exports = function (opt) {
  Stream.call(this);

  let options = opt || {};

  this._packer = new Packer(options);
  this._deflate = this._packer.createDeflate();

  this.readable = true;
});
util.inherits(PackerAsync, Stream);

PackerAsync.prototype.pack = function (data, width, height, gamma) {
  // Signature
  this.emit("data", Buffer.from(constants.PNG_SIGNATURE));
  this.emit("data", this._packer.packIHDR(width, height));

  if (gamma) {
    this.emit("data", this._packer.packGAMA(gamma));
  }

  let filteredData = this._packer.filterData(data, width, height);

  // compress it
  this._deflate.on("error", this.emit.bind(this, "error"));

  this._deflate.on(
    "data",
    function (compressedData) {
      this.emit("data", this._packer.packIDAT(compressedData));
    }.bind(this)
  );

  this._deflate.on(
    "end",
    function () {
      this.emit("data", this._packer.packIEND());
      this.emit("end");
    }.bind(this)
  );

  this._deflate.end(filteredData);
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./constants":138,"./packer":148,"buffer":172,"stream":205,"util":224}],147:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let hasSyncZlib = true;
let zlib = require("zlib");
if (!zlib.deflateSync) {
  hasSyncZlib = false;
}
let constants = require("./constants");
let Packer = require("./packer");

module.exports = function (metaData, opt) {
  if (!hasSyncZlib) {
    throw new Error(
      "To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0"
    );
  }

  let options = opt || {};

  let packer = new Packer(options);

  let chunks = [];

  // Signature
  chunks.push(Buffer.from(constants.PNG_SIGNATURE));

  // Header
  chunks.push(packer.packIHDR(metaData.width, metaData.height));

  if (metaData.gamma) {
    chunks.push(packer.packGAMA(metaData.gamma));
  }

  let filteredData = packer.filterData(
    metaData.data,
    metaData.width,
    metaData.height
  );

  // compress it
  let compressedData = zlib.deflateSync(
    filteredData,
    packer.getDeflateOptions()
  );
  filteredData = null;

  if (!compressedData || !compressedData.length) {
    throw new Error("bad png - invalid compressed data response");
  }
  chunks.push(packer.packIDAT(compressedData));

  // End
  chunks.push(packer.packIEND());

  return Buffer.concat(chunks);
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./constants":138,"./packer":148,"buffer":172,"zlib":171}],148:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let constants = require("./constants");
let CrcStream = require("./crc");
let bitPacker = require("./bitpacker");
let filter = require("./filter-pack");
let zlib = require("zlib");

let Packer = (module.exports = function (options) {
  this._options = options;

  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;
  options.deflateLevel =
    options.deflateLevel != null ? options.deflateLevel : 9;
  options.deflateStrategy =
    options.deflateStrategy != null ? options.deflateStrategy : 3;
  options.inputHasAlpha =
    options.inputHasAlpha != null ? options.inputHasAlpha : true;
  options.deflateFactory = options.deflateFactory || zlib.createDeflate;
  options.bitDepth = options.bitDepth || 8;
  // This is outputColorType
  options.colorType =
    typeof options.colorType === "number"
      ? options.colorType
      : constants.COLORTYPE_COLOR_ALPHA;
  options.inputColorType =
    typeof options.inputColorType === "number"
      ? options.inputColorType
      : constants.COLORTYPE_COLOR_ALPHA;

  if (
    [
      constants.COLORTYPE_GRAYSCALE,
      constants.COLORTYPE_COLOR,
      constants.COLORTYPE_COLOR_ALPHA,
      constants.COLORTYPE_ALPHA,
    ].indexOf(options.colorType) === -1
  ) {
    throw new Error(
      "option color type:" + options.colorType + " is not supported at present"
    );
  }
  if (
    [
      constants.COLORTYPE_GRAYSCALE,
      constants.COLORTYPE_COLOR,
      constants.COLORTYPE_COLOR_ALPHA,
      constants.COLORTYPE_ALPHA,
    ].indexOf(options.inputColorType) === -1
  ) {
    throw new Error(
      "option input color type:" +
        options.inputColorType +
        " is not supported at present"
    );
  }
  if (options.bitDepth !== 8 && options.bitDepth !== 16) {
    throw new Error(
      "option bit depth:" + options.bitDepth + " is not supported at present"
    );
  }
});

Packer.prototype.getDeflateOptions = function () {
  return {
    chunkSize: this._options.deflateChunkSize,
    level: this._options.deflateLevel,
    strategy: this._options.deflateStrategy,
  };
};

Packer.prototype.createDeflate = function () {
  return this._options.deflateFactory(this.getDeflateOptions());
};

Packer.prototype.filterData = function (data, width, height) {
  // convert to correct format for filtering (e.g. right bpp and bit depth)
  let packedData = bitPacker(data, width, height, this._options);

  // filter pixel data
  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];
  let filteredData = filter(packedData, width, height, this._options, bpp);
  return filteredData;
};

Packer.prototype._packChunk = function (type, data) {
  let len = data ? data.length : 0;
  let buf = Buffer.alloc(len + 12);

  buf.writeUInt32BE(len, 0);
  buf.writeUInt32BE(type, 4);

  if (data) {
    data.copy(buf, 8);
  }

  buf.writeInt32BE(
    CrcStream.crc32(buf.slice(4, buf.length - 4)),
    buf.length - 4
  );
  return buf;
};

Packer.prototype.packGAMA = function (gamma) {
  let buf = Buffer.alloc(4);
  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);
  return this._packChunk(constants.TYPE_gAMA, buf);
};

Packer.prototype.packIHDR = function (width, height) {
  let buf = Buffer.alloc(13);
  buf.writeUInt32BE(width, 0);
  buf.writeUInt32BE(height, 4);
  buf[8] = this._options.bitDepth; // Bit depth
  buf[9] = this._options.colorType; // colorType
  buf[10] = 0; // compression
  buf[11] = 0; // filter
  buf[12] = 0; // interlace

  return this._packChunk(constants.TYPE_IHDR, buf);
};

Packer.prototype.packIDAT = function (data) {
  return this._packChunk(constants.TYPE_IDAT, data);
};

Packer.prototype.packIEND = function () {
  return this._packChunk(constants.TYPE_IEND, null);
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./bitpacker":136,"./constants":138,"./crc":139,"./filter-pack":140,"buffer":172,"zlib":171}],149:[function(require,module,exports){
"use strict";

module.exports = function paethPredictor(left, above, upLeft) {
  let paeth = left + above - upLeft;
  let pLeft = Math.abs(paeth - left);
  let pAbove = Math.abs(paeth - above);
  let pUpLeft = Math.abs(paeth - upLeft);

  if (pLeft <= pAbove && pLeft <= pUpLeft) {
    return left;
  }
  if (pAbove <= pUpLeft) {
    return above;
  }
  return upLeft;
};

},{}],150:[function(require,module,exports){
"use strict";

let util = require("util");
let zlib = require("zlib");
let ChunkStream = require("./chunkstream");
let FilterAsync = require("./filter-parse-async");
let Parser = require("./parser");
let bitmapper = require("./bitmapper");
let formatNormaliser = require("./format-normaliser");

let ParserAsync = (module.exports = function (options) {
  ChunkStream.call(this);

  this._parser = new Parser(options, {
    read: this.read.bind(this),
    error: this._handleError.bind(this),
    metadata: this._handleMetaData.bind(this),
    gamma: this.emit.bind(this, "gamma"),
    palette: this._handlePalette.bind(this),
    transColor: this._handleTransColor.bind(this),
    finished: this._finished.bind(this),
    inflateData: this._inflateData.bind(this),
    simpleTransparency: this._simpleTransparency.bind(this),
    headersFinished: this._headersFinished.bind(this),
  });
  this._options = options;
  this.writable = true;

  this._parser.start();
});
util.inherits(ParserAsync, ChunkStream);

ParserAsync.prototype._handleError = function (err) {
  this.emit("error", err);

  this.writable = false;

  this.destroy();

  if (this._inflate && this._inflate.destroy) {
    this._inflate.destroy();
  }

  if (this._filter) {
    this._filter.destroy();
    // For backward compatibility with Node 7 and below.
    // Suppress errors due to _inflate calling write() even after
    // it's destroy()'ed.
    this._filter.on("error", function () {});
  }

  this.errord = true;
};

ParserAsync.prototype._inflateData = function (data) {
  if (!this._inflate) {
    if (this._bitmapInfo.interlace) {
      this._inflate = zlib.createInflate();

      this._inflate.on("error", this.emit.bind(this, "error"));
      this._filter.on("complete", this._complete.bind(this));

      this._inflate.pipe(this._filter);
    } else {
      let rowSize =
        ((this._bitmapInfo.width *
          this._bitmapInfo.bpp *
          this._bitmapInfo.depth +
          7) >>
          3) +
        1;
      let imageSize = rowSize * this._bitmapInfo.height;
      let chunkSize = Math.max(imageSize, zlib.Z_MIN_CHUNK);

      this._inflate = zlib.createInflate({ chunkSize: chunkSize });
      let leftToInflate = imageSize;

      let emitError = this.emit.bind(this, "error");
      this._inflate.on("error", function (err) {
        if (!leftToInflate) {
          return;
        }

        emitError(err);
      });
      this._filter.on("complete", this._complete.bind(this));

      let filterWrite = this._filter.write.bind(this._filter);
      this._inflate.on("data", function (chunk) {
        if (!leftToInflate) {
          return;
        }

        if (chunk.length > leftToInflate) {
          chunk = chunk.slice(0, leftToInflate);
        }

        leftToInflate -= chunk.length;

        filterWrite(chunk);
      });

      this._inflate.on("end", this._filter.end.bind(this._filter));
    }
  }
  this._inflate.write(data);
};

ParserAsync.prototype._handleMetaData = function (metaData) {
  this._metaData = metaData;
  this._bitmapInfo = Object.create(metaData);

  this._filter = new FilterAsync(this._bitmapInfo);
};

ParserAsync.prototype._handleTransColor = function (transColor) {
  this._bitmapInfo.transColor = transColor;
};

ParserAsync.prototype._handlePalette = function (palette) {
  this._bitmapInfo.palette = palette;
};

ParserAsync.prototype._simpleTransparency = function () {
  this._metaData.alpha = true;
};

ParserAsync.prototype._headersFinished = function () {
  // Up until this point, we don't know if we have a tRNS chunk (alpha)
  // so we can't emit metadata any earlier
  this.emit("metadata", this._metaData);
};

ParserAsync.prototype._finished = function () {
  if (this.errord) {
    return;
  }

  if (!this._inflate) {
    this.emit("error", "No Inflate block");
  } else {
    // no more data to inflate
    this._inflate.end();
  }
};

ParserAsync.prototype._complete = function (filteredData) {
  if (this.errord) {
    return;
  }

  let normalisedBitmapData;

  try {
    let bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);

    normalisedBitmapData = formatNormaliser(
      bitmapData,
      this._bitmapInfo,
      this._options.skipRescale
    );
    bitmapData = null;
  } catch (ex) {
    this._handleError(ex);
    return;
  }

  this.emit("parsed", normalisedBitmapData);
};

},{"./bitmapper":135,"./chunkstream":137,"./filter-parse-async":141,"./format-normaliser":144,"./parser":152,"util":224,"zlib":171}],151:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let hasSyncZlib = true;
let zlib = require("zlib");
let inflateSync = require("./sync-inflate");
if (!zlib.deflateSync) {
  hasSyncZlib = false;
}
let SyncReader = require("./sync-reader");
let FilterSync = require("./filter-parse-sync");
let Parser = require("./parser");
let bitmapper = require("./bitmapper");
let formatNormaliser = require("./format-normaliser");

module.exports = function (buffer, options) {
  if (!hasSyncZlib) {
    throw new Error(
      "To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0"
    );
  }

  let err;
  function handleError(_err_) {
    err = _err_;
  }

  let metaData;
  function handleMetaData(_metaData_) {
    metaData = _metaData_;
  }

  function handleTransColor(transColor) {
    metaData.transColor = transColor;
  }

  function handlePalette(palette) {
    metaData.palette = palette;
  }

  function handleSimpleTransparency() {
    metaData.alpha = true;
  }

  let gamma;
  function handleGamma(_gamma_) {
    gamma = _gamma_;
  }

  let inflateDataList = [];
  function handleInflateData(inflatedData) {
    inflateDataList.push(inflatedData);
  }

  let reader = new SyncReader(buffer);

  let parser = new Parser(options, {
    read: reader.read.bind(reader),
    error: handleError,
    metadata: handleMetaData,
    gamma: handleGamma,
    palette: handlePalette,
    transColor: handleTransColor,
    inflateData: handleInflateData,
    simpleTransparency: handleSimpleTransparency,
  });

  parser.start();
  reader.process();

  if (err) {
    throw err;
  }

  //join together the inflate datas
  let inflateData = Buffer.concat(inflateDataList);
  inflateDataList.length = 0;

  let inflatedData;
  if (metaData.interlace) {
    inflatedData = zlib.inflateSync(inflateData);
  } else {
    let rowSize =
      ((metaData.width * metaData.bpp * metaData.depth + 7) >> 3) + 1;
    let imageSize = rowSize * metaData.height;
    inflatedData = inflateSync(inflateData, {
      chunkSize: imageSize,
      maxLength: imageSize,
    });
  }
  inflateData = null;

  if (!inflatedData || !inflatedData.length) {
    throw new Error("bad png - invalid inflate data response");
  }

  let unfilteredData = FilterSync.process(inflatedData, metaData);
  inflateData = null;

  let bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);
  unfilteredData = null;

  let normalisedBitmapData = formatNormaliser(
    bitmapData,
    metaData,
    options.skipRescale
  );

  metaData.data = normalisedBitmapData;
  metaData.gamma = gamma || 0;

  return metaData;
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./bitmapper":135,"./filter-parse-sync":142,"./format-normaliser":144,"./parser":152,"./sync-inflate":155,"./sync-reader":156,"buffer":172,"zlib":171}],152:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

let constants = require("./constants");
let CrcCalculator = require("./crc");

let Parser = (module.exports = function (options, dependencies) {
  this._options = options;
  options.checkCRC = options.checkCRC !== false;

  this._hasIHDR = false;
  this._hasIEND = false;
  this._emittedHeadersFinished = false;

  // input flags/metadata
  this._palette = [];
  this._colorType = 0;

  this._chunks = {};
  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);
  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);
  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);
  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);
  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);
  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);

  this.read = dependencies.read;
  this.error = dependencies.error;
  this.metadata = dependencies.metadata;
  this.gamma = dependencies.gamma;
  this.transColor = dependencies.transColor;
  this.palette = dependencies.palette;
  this.parsed = dependencies.parsed;
  this.inflateData = dependencies.inflateData;
  this.finished = dependencies.finished;
  this.simpleTransparency = dependencies.simpleTransparency;
  this.headersFinished = dependencies.headersFinished || function () {};
});

Parser.prototype.start = function () {
  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));
};

Parser.prototype._parseSignature = function (data) {
  let signature = constants.PNG_SIGNATURE;

  for (let i = 0; i < signature.length; i++) {
    if (data[i] !== signature[i]) {
      this.error(new Error("Invalid file signature"));
      return;
    }
  }
  this.read(8, this._parseChunkBegin.bind(this));
};

Parser.prototype._parseChunkBegin = function (data) {
  // chunk content length
  let length = data.readUInt32BE(0);

  // chunk type
  let type = data.readUInt32BE(4);
  let name = "";
  for (let i = 4; i < 8; i++) {
    name += String.fromCharCode(data[i]);
  }

  //console.log('chunk ', name, length);

  // chunk flags
  let ancillary = Boolean(data[4] & 0x20); // or critical
  //    priv = Boolean(data[5] & 0x20), // or public
  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe

  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {
    this.error(new Error("Expected IHDR on beggining"));
    return;
  }

  this._crc = new CrcCalculator();
  this._crc.write(Buffer.from(name));

  if (this._chunks[type]) {
    return this._chunks[type](length);
  }

  if (!ancillary) {
    this.error(new Error("Unsupported critical chunk type " + name));
    return;
  }

  this.read(length + 4, this._skipChunk.bind(this));
};

Parser.prototype._skipChunk = function (/*data*/) {
  this.read(8, this._parseChunkBegin.bind(this));
};

Parser.prototype._handleChunkEnd = function () {
  this.read(4, this._parseChunkEnd.bind(this));
};

Parser.prototype._parseChunkEnd = function (data) {
  let fileCrc = data.readInt32BE(0);
  let calcCrc = this._crc.crc32();

  // check CRC
  if (this._options.checkCRC && calcCrc !== fileCrc) {
    this.error(new Error("Crc error - " + fileCrc + " - " + calcCrc));
    return;
  }

  if (!this._hasIEND) {
    this.read(8, this._parseChunkBegin.bind(this));
  }
};

Parser.prototype._handleIHDR = function (length) {
  this.read(length, this._parseIHDR.bind(this));
};
Parser.prototype._parseIHDR = function (data) {
  this._crc.write(data);

  let width = data.readUInt32BE(0);
  let height = data.readUInt32BE(4);
  let depth = data[8];
  let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha
  let compr = data[10];
  let filter = data[11];
  let interlace = data[12];

  // console.log('    width', width, 'height', height,
  //     'depth', depth, 'colorType', colorType,
  //     'compr', compr, 'filter', filter, 'interlace', interlace
  // );

  if (
    depth !== 8 &&
    depth !== 4 &&
    depth !== 2 &&
    depth !== 1 &&
    depth !== 16
  ) {
    this.error(new Error("Unsupported bit depth " + depth));
    return;
  }
  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {
    this.error(new Error("Unsupported color type"));
    return;
  }
  if (compr !== 0) {
    this.error(new Error("Unsupported compression method"));
    return;
  }
  if (filter !== 0) {
    this.error(new Error("Unsupported filter method"));
    return;
  }
  if (interlace !== 0 && interlace !== 1) {
    this.error(new Error("Unsupported interlace method"));
    return;
  }

  this._colorType = colorType;

  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];

  this._hasIHDR = true;

  this.metadata({
    width: width,
    height: height,
    depth: depth,
    interlace: Boolean(interlace),
    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),
    color: Boolean(colorType & constants.COLORTYPE_COLOR),
    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),
    bpp: bpp,
    colorType: colorType,
  });

  this._handleChunkEnd();
};

Parser.prototype._handlePLTE = function (length) {
  this.read(length, this._parsePLTE.bind(this));
};
Parser.prototype._parsePLTE = function (data) {
  this._crc.write(data);

  let entries = Math.floor(data.length / 3);
  // console.log('Palette:', entries);

  for (let i = 0; i < entries; i++) {
    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);
  }

  this.palette(this._palette);

  this._handleChunkEnd();
};

Parser.prototype._handleTRNS = function (length) {
  this.simpleTransparency();
  this.read(length, this._parseTRNS.bind(this));
};
Parser.prototype._parseTRNS = function (data) {
  this._crc.write(data);

  // palette
  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {
    if (this._palette.length === 0) {
      this.error(new Error("Transparency chunk must be after palette"));
      return;
    }
    if (data.length > this._palette.length) {
      this.error(new Error("More transparent colors than palette size"));
      return;
    }
    for (let i = 0; i < data.length; i++) {
      this._palette[i][3] = data[i];
    }
    this.palette(this._palette);
  }

  // for colorType 0 (grayscale) and 2 (rgb)
  // there might be one gray/color defined as transparent
  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {
    // grey, 2 bytes
    this.transColor([data.readUInt16BE(0)]);
  }
  if (this._colorType === constants.COLORTYPE_COLOR) {
    this.transColor([
      data.readUInt16BE(0),
      data.readUInt16BE(2),
      data.readUInt16BE(4),
    ]);
  }

  this._handleChunkEnd();
};

Parser.prototype._handleGAMA = function (length) {
  this.read(length, this._parseGAMA.bind(this));
};
Parser.prototype._parseGAMA = function (data) {
  this._crc.write(data);
  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);

  this._handleChunkEnd();
};

Parser.prototype._handleIDAT = function (length) {
  if (!this._emittedHeadersFinished) {
    this._emittedHeadersFinished = true;
    this.headersFinished();
  }
  this.read(-length, this._parseIDAT.bind(this, length));
};
Parser.prototype._parseIDAT = function (length, data) {
  this._crc.write(data);

  if (
    this._colorType === constants.COLORTYPE_PALETTE_COLOR &&
    this._palette.length === 0
  ) {
    throw new Error("Expected palette not found");
  }

  this.inflateData(data);
  let leftOverLength = length - data.length;

  if (leftOverLength > 0) {
    this._handleIDAT(leftOverLength);
  } else {
    this._handleChunkEnd();
  }
};

Parser.prototype._handleIEND = function (length) {
  this.read(length, this._parseIEND.bind(this));
};
Parser.prototype._parseIEND = function (data) {
  this._crc.write(data);

  this._hasIEND = true;
  this._handleChunkEnd();

  if (this.finished) {
    this.finished();
  }
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./constants":138,"./crc":139,"buffer":172}],153:[function(require,module,exports){
"use strict";

let parse = require("./parser-sync");
let pack = require("./packer-sync");

exports.read = function (buffer, options) {
  return parse(buffer, options || {});
};

exports.write = function (png, options) {
  return pack(png, options);
};

},{"./packer-sync":147,"./parser-sync":151}],154:[function(require,module,exports){
(function (process,Buffer){(function (){
"use strict";

let util = require("util");
let Stream = require("stream");
let Parser = require("./parser-async");
let Packer = require("./packer-async");
let PNGSync = require("./png-sync");

let PNG = (exports.PNG = function (options) {
  Stream.call(this);

  options = options || {}; // eslint-disable-line no-param-reassign

  // coerce pixel dimensions to integers (also coerces undefined -> 0):
  this.width = options.width | 0;
  this.height = options.height | 0;

  this.data =
    this.width > 0 && this.height > 0
      ? Buffer.alloc(4 * this.width * this.height)
      : null;

  if (options.fill && this.data) {
    this.data.fill(0);
  }

  this.gamma = 0;
  this.readable = this.writable = true;

  this._parser = new Parser(options);

  this._parser.on("error", this.emit.bind(this, "error"));
  this._parser.on("close", this._handleClose.bind(this));
  this._parser.on("metadata", this._metadata.bind(this));
  this._parser.on("gamma", this._gamma.bind(this));
  this._parser.on(
    "parsed",
    function (data) {
      this.data = data;
      this.emit("parsed", data);
    }.bind(this)
  );

  this._packer = new Packer(options);
  this._packer.on("data", this.emit.bind(this, "data"));
  this._packer.on("end", this.emit.bind(this, "end"));
  this._parser.on("close", this._handleClose.bind(this));
  this._packer.on("error", this.emit.bind(this, "error"));
});
util.inherits(PNG, Stream);

PNG.sync = PNGSync;

PNG.prototype.pack = function () {
  if (!this.data || !this.data.length) {
    this.emit("error", "No data provided");
    return this;
  }

  process.nextTick(
    function () {
      this._packer.pack(this.data, this.width, this.height, this.gamma);
    }.bind(this)
  );

  return this;
};

PNG.prototype.parse = function (data, callback) {
  if (callback) {
    let onParsed, onError;

    onParsed = function (parsedData) {
      this.removeListener("error", onError);

      this.data = parsedData;
      callback(null, this);
    }.bind(this);

    onError = function (err) {
      this.removeListener("parsed", onParsed);

      callback(err, null);
    }.bind(this);

    this.once("parsed", onParsed);
    this.once("error", onError);
  }

  this.end(data);
  return this;
};

PNG.prototype.write = function (data) {
  this._parser.write(data);
  return true;
};

PNG.prototype.end = function (data) {
  this._parser.end(data);
};

PNG.prototype._metadata = function (metadata) {
  this.width = metadata.width;
  this.height = metadata.height;

  this.emit("metadata", metadata);
};

PNG.prototype._gamma = function (gamma) {
  this.gamma = gamma;
};

PNG.prototype._handleClose = function () {
  if (!this._parser.writable && !this._packer.readable) {
    this.emit("close");
  }
};

PNG.bitblt = function (src, dst, srcX, srcY, width, height, deltaX, deltaY) {
  // eslint-disable-line max-params
  // coerce pixel dimensions to integers (also coerces undefined -> 0):
  /* eslint-disable no-param-reassign */
  srcX |= 0;
  srcY |= 0;
  width |= 0;
  height |= 0;
  deltaX |= 0;
  deltaY |= 0;
  /* eslint-enable no-param-reassign */

  if (
    srcX > src.width ||
    srcY > src.height ||
    srcX + width > src.width ||
    srcY + height > src.height
  ) {
    throw new Error("bitblt reading outside image");
  }

  if (
    deltaX > dst.width ||
    deltaY > dst.height ||
    deltaX + width > dst.width ||
    deltaY + height > dst.height
  ) {
    throw new Error("bitblt writing outside image");
  }

  for (let y = 0; y < height; y++) {
    src.data.copy(
      dst.data,
      ((deltaY + y) * dst.width + deltaX) << 2,
      ((srcY + y) * src.width + srcX) << 2,
      ((srcY + y) * src.width + srcX + width) << 2
    );
  }
};

PNG.prototype.bitblt = function (
  dst,
  srcX,
  srcY,
  width,
  height,
  deltaX,
  deltaY
) {
  // eslint-disable-line max-params

  PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);
  return this;
};

PNG.adjustGamma = function (src) {
  if (src.gamma) {
    for (let y = 0; y < src.height; y++) {
      for (let x = 0; x < src.width; x++) {
        let idx = (src.width * y + x) << 2;

        for (let i = 0; i < 3; i++) {
          let sample = src.data[idx + i] / 255;
          sample = Math.pow(sample, 1 / 2.2 / src.gamma);
          src.data[idx + i] = Math.round(sample * 255);
        }
      }
    }
    src.gamma = 0;
  }
};

PNG.prototype.adjustGamma = function () {
  PNG.adjustGamma(this);
};

}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"./packer-async":146,"./parser-async":150,"./png-sync":153,"_process":203,"buffer":172,"stream":205,"util":224}],155:[function(require,module,exports){
(function (process,Buffer){(function (){
"use strict";

let assert = require("assert").ok;
let zlib = require("zlib");
let util = require("util");

let kMaxLength = require("buffer").kMaxLength;

function Inflate(opts) {
  if (!(this instanceof Inflate)) {
    return new Inflate(opts);
  }

  if (opts && opts.chunkSize < zlib.Z_MIN_CHUNK) {
    opts.chunkSize = zlib.Z_MIN_CHUNK;
  }

  zlib.Inflate.call(this, opts);

  // Node 8 --> 9 compatibility check
  this._offset = this._offset === undefined ? this._outOffset : this._offset;
  this._buffer = this._buffer || this._outBuffer;

  if (opts && opts.maxLength != null) {
    this._maxLength = opts.maxLength;
  }
}

function createInflate(opts) {
  return new Inflate(opts);
}

function _close(engine, callback) {
  if (callback) {
    process.nextTick(callback);
  }

  // Caller may invoke .close after a zlib error (which will null _handle).
  if (!engine._handle) {
    return;
  }

  engine._handle.close();
  engine._handle = null;
}

Inflate.prototype._processChunk = function (chunk, flushFlag, asyncCb) {
  if (typeof asyncCb === "function") {
    return zlib.Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);
  }

  let self = this;

  let availInBefore = chunk && chunk.length;
  let availOutBefore = this._chunkSize - this._offset;
  let leftToInflate = this._maxLength;
  let inOff = 0;

  let buffers = [];
  let nread = 0;

  let error;
  this.on("error", function (err) {
    error = err;
  });

  function handleChunk(availInAfter, availOutAfter) {
    if (self._hadError) {
      return;
    }

    let have = availOutBefore - availOutAfter;
    assert(have >= 0, "have should not go down");

    if (have > 0) {
      let out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;

      if (out.length > leftToInflate) {
        out = out.slice(0, leftToInflate);
      }

      buffers.push(out);
      nread += out.length;
      leftToInflate -= out.length;

      if (leftToInflate === 0) {
        return false;
      }
    }

    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = Buffer.allocUnsafe(self._chunkSize);
    }

    if (availOutAfter === 0) {
      inOff += availInBefore - availInAfter;
      availInBefore = availInAfter;

      return true;
    }

    return false;
  }

  assert(this._handle, "zlib binding closed");
  let res;
  do {
    res = this._handle.writeSync(
      flushFlag,
      chunk, // in
      inOff, // in_off
      availInBefore, // in_len
      this._buffer, // out
      this._offset, //out_off
      availOutBefore
    ); // out_len
    // Node 8 --> 9 compatibility check
    res = res || this._writeState;
  } while (!this._hadError && handleChunk(res[0], res[1]));

  if (this._hadError) {
    throw error;
  }

  if (nread >= kMaxLength) {
    _close(this);
    throw new RangeError(
      "Cannot create final Buffer. It would be larger than 0x" +
        kMaxLength.toString(16) +
        " bytes"
    );
  }

  let buf = Buffer.concat(buffers, nread);
  _close(this);

  return buf;
};

util.inherits(Inflate, zlib.Inflate);

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === "string") {
    buffer = Buffer.from(buffer);
  }
  if (!(buffer instanceof Buffer)) {
    throw new TypeError("Not a string or buffer");
  }

  let flushFlag = engine._finishFlushFlag;
  if (flushFlag == null) {
    flushFlag = zlib.Z_FINISH;
  }

  return engine._processChunk(buffer, flushFlag);
}

function inflateSync(buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
}

module.exports = exports = inflateSync;
exports.Inflate = Inflate;
exports.createInflate = createInflate;
exports.inflateSync = inflateSync;

}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":203,"assert":163,"buffer":172,"util":224,"zlib":171}],156:[function(require,module,exports){
"use strict";

let SyncReader = (module.exports = function (buffer) {
  this._buffer = buffer;
  this._reads = [];
});

SyncReader.prototype.read = function (length, callback) {
  this._reads.push({
    length: Math.abs(length), // if length < 0 then at most this length
    allowLess: length < 0,
    func: callback,
  });
};

SyncReader.prototype.process = function () {
  // as long as there is any data and read requests
  while (this._reads.length > 0 && this._buffer.length) {
    let read = this._reads[0];

    if (
      this._buffer.length &&
      (this._buffer.length >= read.length || read.allowLess)
    ) {
      // ok there is any data so that we can satisfy this request
      this._reads.shift(); // == read

      let buf = this._buffer;

      this._buffer = buf.slice(read.length);

      read.func.call(this, buf.slice(0, read.length));
    } else {
      break;
    }
  }

  if (this._reads.length > 0) {
    throw new Error("There are some read requests waitng on finished stream");
  }

  if (this._buffer.length > 0) {
    throw new Error("unrecognised content at end of stream");
  }
};

},{}],157:[function(require,module,exports){
(function (Buffer){(function (){
/*
node-bzip - a pure-javascript Node.JS module for decoding bzip2 data

Copyright (C) 2012 Eli Skeggs

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Adapted from bzip2.js, copyright 2011 antimatter15 (antimatter15@gmail.com).

Based on micro-bunzip by Rob Landley (rob@landley.net).

Based on bzip2 decompression code by Julian R Seward (jseward@acm.org),
which also acknowledges contributions by Mike Burrows, David Wheeler,
Peter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,
Robert Sedgewick, and Jon L. Bentley.
*/

var BITMASK = [0x00, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF];

// offset in bytes
var BitReader = function(stream) {
  this.stream = stream;
  this.bitOffset = 0;
  this.curByte = 0;
  this.hasByte = false;
};

BitReader.prototype._ensureByte = function() {
  if (!this.hasByte) {
    this.curByte = this.stream.readByte();
    this.hasByte = true;
  }
};

// reads bits from the buffer
BitReader.prototype.read = function(bits) {
  var result = 0;
  while (bits > 0) {
    this._ensureByte();
    var remaining = 8 - this.bitOffset;
    // if we're in a byte
    if (bits >= remaining) {
      result <<= remaining;
      result |= BITMASK[remaining] & this.curByte;
      this.hasByte = false;
      this.bitOffset = 0;
      bits -= remaining;
    } else {
      result <<= bits;
      var shift = remaining - bits;
      result |= (this.curByte & (BITMASK[bits] << shift)) >> shift;
      this.bitOffset += bits;
      bits = 0;
    }
  }
  return result;
};

// seek to an arbitrary point in the buffer (expressed in bits)
BitReader.prototype.seek = function(pos) {
  var n_bit = pos % 8;
  var n_byte = (pos - n_bit) / 8;
  this.bitOffset = n_bit;
  this.stream.seek(n_byte);
  this.hasByte = false;
};

// reads 6 bytes worth of data using the read method
BitReader.prototype.pi = function() {
  var buf = new Buffer(6), i;
  for (i = 0; i < buf.length; i++) {
    buf[i] = this.read(8);
  }
  return buf.toString('hex');
};

module.exports = BitReader;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":172}],158:[function(require,module,exports){
/* CRC32, used in Bzip2 implementation.
 * This is a port of CRC32.java from the jbzip2 implementation at
 *   https://code.google.com/p/jbzip2
 * which is:
 *   Copyright (c) 2011 Matthew Francis
 *
 *   Permission is hereby granted, free of charge, to any person
 *   obtaining a copy of this software and associated documentation
 *   files (the "Software"), to deal in the Software without
 *   restriction, including without limitation the rights to use,
 *   copy, modify, merge, publish, distribute, sublicense, and/or sell
 *   copies of the Software, and to permit persons to whom the
 *   Software is furnished to do so, subject to the following
 *   conditions:
 *
 *   The above copyright notice and this permission notice shall be
 *   included in all copies or substantial portions of the Software.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *   OTHER DEALINGS IN THE SOFTWARE.
 * This JavaScript implementation is:
 *   Copyright (c) 2013 C. Scott Ananian
 * with the same licensing terms as Matthew Francis' original implementation.
 */
module.exports = (function() {

  /**
   * A static CRC lookup table
   */
  var crc32Lookup = new Uint32Array([
    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,
    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,
    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,
    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,
    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,
    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,
    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,
    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,
    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,
    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,
    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,
    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,
    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,
    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,
    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,
    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,
    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,
    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,
    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,
    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,
    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,
    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,
    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,
    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,
    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,
    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,
    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,
    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,
    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,
    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,
    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,
    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4
  ]);

  var CRC32 = function() {
    /**
     * The current CRC
     */
    var crc = 0xffffffff;

    /**
     * @return The current CRC
     */
    this.getCRC = function() {
      return (~crc) >>> 0; // return an unsigned value
    };

    /**
     * Update the CRC with a single byte
     * @param value The value to update the CRC with
     */
    this.updateCRC = function(value) {
      crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];
    };

    /**
     * Update the CRC with a sequence of identical bytes
     * @param value The value to update the CRC with
     * @param count The number of bytes
     */
    this.updateCRCRun = function(value, count) {
      while (count-- > 0) {
        crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];
      }
    };
  };
  return CRC32;
})();

},{}],159:[function(require,module,exports){
(function (Buffer){(function (){
/*
seek-bzip - a pure-javascript module for seeking within bzip2 data

Copyright (C) 2013 C. Scott Ananian
Copyright (C) 2012 Eli Skeggs
Copyright (C) 2011 Kevin Kwok

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Adapted from node-bzip, copyright 2012 Eli Skeggs.
Adapted from bzip2.js, copyright 2011 Kevin Kwok (antimatter15@gmail.com).

Based on micro-bunzip by Rob Landley (rob@landley.net).

Based on bzip2 decompression code by Julian R Seward (jseward@acm.org),
which also acknowledges contributions by Mike Burrows, David Wheeler,
Peter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,
Robert Sedgewick, and Jon L. Bentley.
*/

var BitReader = require('./bitreader');
var Stream = require('./stream');
var CRC32 = require('./crc32');
var pjson = require('../package.json');

var MAX_HUFCODE_BITS = 20;
var MAX_SYMBOLS = 258;
var SYMBOL_RUNA = 0;
var SYMBOL_RUNB = 1;
var MIN_GROUPS = 2;
var MAX_GROUPS = 6;
var GROUP_SIZE = 50;

var WHOLEPI = "314159265359";
var SQRTPI = "177245385090";

var mtf = function(array, index) {
  var src = array[index], i;
  for (i = index; i > 0; i--) {
    array[i] = array[i-1];
  }
  array[0] = src;
  return src;
};

var Err = {
  OK: 0,
  LAST_BLOCK: -1,
  NOT_BZIP_DATA: -2,
  UNEXPECTED_INPUT_EOF: -3,
  UNEXPECTED_OUTPUT_EOF: -4,
  DATA_ERROR: -5,
  OUT_OF_MEMORY: -6,
  OBSOLETE_INPUT: -7,
  END_OF_BLOCK: -8
};
var ErrorMessages = {};
ErrorMessages[Err.LAST_BLOCK] =            "Bad file checksum";
ErrorMessages[Err.NOT_BZIP_DATA] =         "Not bzip data";
ErrorMessages[Err.UNEXPECTED_INPUT_EOF] =  "Unexpected input EOF";
ErrorMessages[Err.UNEXPECTED_OUTPUT_EOF] = "Unexpected output EOF";
ErrorMessages[Err.DATA_ERROR] =            "Data error";
ErrorMessages[Err.OUT_OF_MEMORY] =         "Out of memory";
ErrorMessages[Err.OBSOLETE_INPUT] = "Obsolete (pre 0.9.5) bzip format not supported.";

var _throw = function(status, optDetail) {
  var msg = ErrorMessages[status] || 'unknown error';
  if (optDetail) { msg += ': '+optDetail; }
  var e = new TypeError(msg);
  e.errorCode = status;
  throw e;
};

var Bunzip = function(inputStream, outputStream) {
  this.writePos = this.writeCurrent = this.writeCount = 0;

  this._start_bunzip(inputStream, outputStream);
};
Bunzip.prototype._init_block = function() {
  var moreBlocks = this._get_next_block();
  if ( !moreBlocks ) {
    this.writeCount = -1;
    return false; /* no more blocks */
  }
  this.blockCRC = new CRC32();
  return true;
};
/* XXX micro-bunzip uses (inputStream, inputBuffer, len) as arguments */
Bunzip.prototype._start_bunzip = function(inputStream, outputStream) {
  /* Ensure that file starts with "BZh['1'-'9']." */
  var buf = new Buffer(4);
  if (inputStream.read(buf, 0, 4) !== 4 ||
      String.fromCharCode(buf[0], buf[1], buf[2]) !== 'BZh')
    _throw(Err.NOT_BZIP_DATA, 'bad magic');

  var level = buf[3] - 0x30;
  if (level < 1 || level > 9)
    _throw(Err.NOT_BZIP_DATA, 'level out of range');

  this.reader = new BitReader(inputStream);

  /* Fourth byte (ascii '1'-'9'), indicates block size in units of 100k of
     uncompressed data.  Allocate intermediate buffer for block. */
  this.dbufSize = 100000 * level;
  this.nextoutput = 0;
  this.outputStream = outputStream;
  this.streamCRC = 0;
};
Bunzip.prototype._get_next_block = function() {
  var i, j, k;
  var reader = this.reader;
  // this is get_next_block() function from micro-bunzip:
  /* Read in header signature and CRC, then validate signature.
     (last block signature means CRC is for whole file, return now) */
  var h = reader.pi();
  if (h === SQRTPI) { // last block
    return false; /* no more blocks */
  }
  if (h !== WHOLEPI)
    _throw(Err.NOT_BZIP_DATA);
  this.targetBlockCRC = reader.read(32) >>> 0; // (convert to unsigned)
  this.streamCRC = (this.targetBlockCRC ^
                    ((this.streamCRC << 1) | (this.streamCRC>>>31))) >>> 0;
  /* We can add support for blockRandomised if anybody complains.  There was
     some code for this in busybox 1.0.0-pre3, but nobody ever noticed that
     it didn't actually work. */
  if (reader.read(1))
    _throw(Err.OBSOLETE_INPUT);
  var origPointer = reader.read(24);
  if (origPointer > this.dbufSize)
    _throw(Err.DATA_ERROR, 'initial position out of bounds');
  /* mapping table: if some byte values are never used (encoding things
     like ascii text), the compression code removes the gaps to have fewer
     symbols to deal with, and writes a sparse bitfield indicating which
     values were present.  We make a translation table to convert the symbols
     back to the corresponding bytes. */
  var t = reader.read(16);
  var symToByte = new Buffer(256), symTotal = 0;
  for (i = 0; i < 16; i++) {
    if (t & (1 << (0xF - i))) {
      var o = i * 16;
      k = reader.read(16);
      for (j = 0; j < 16; j++)
        if (k & (1 << (0xF - j)))
          symToByte[symTotal++] = o + j;
    }
  }

  /* How many different huffman coding groups does this block use? */
  var groupCount = reader.read(3);
  if (groupCount < MIN_GROUPS || groupCount > MAX_GROUPS)
    _throw(Err.DATA_ERROR);
  /* nSelectors: Every GROUP_SIZE many symbols we select a new huffman coding
     group.  Read in the group selector list, which is stored as MTF encoded
     bit runs.  (MTF=Move To Front, as each value is used it's moved to the
     start of the list.) */
  var nSelectors = reader.read(15);
  if (nSelectors === 0)
    _throw(Err.DATA_ERROR);

  var mtfSymbol = new Buffer(256);
  for (i = 0; i < groupCount; i++)
    mtfSymbol[i] = i;

  var selectors = new Buffer(nSelectors); // was 32768...

  for (i = 0; i < nSelectors; i++) {
    /* Get next value */
    for (j = 0; reader.read(1); j++)
      if (j >= groupCount) _throw(Err.DATA_ERROR);
    /* Decode MTF to get the next selector */
    selectors[i] = mtf(mtfSymbol, j);
  }

  /* Read the huffman coding tables for each group, which code for symTotal
     literal symbols, plus two run symbols (RUNA, RUNB) */
  var symCount = symTotal + 2;
  var groups = [], hufGroup;
  for (j = 0; j < groupCount; j++) {
    var length = new Buffer(symCount), temp = new Uint16Array(MAX_HUFCODE_BITS + 1);
    /* Read huffman code lengths for each symbol.  They're stored in
       a way similar to mtf; record a starting value for the first symbol,
       and an offset from the previous value for everys symbol after that. */
    t = reader.read(5); // lengths
    for (i = 0; i < symCount; i++) {
      for (;;) {
        if (t < 1 || t > MAX_HUFCODE_BITS) _throw(Err.DATA_ERROR);
        /* If first bit is 0, stop.  Else second bit indicates whether
           to increment or decrement the value. */
        if(!reader.read(1))
          break;
        if(!reader.read(1))
          t++;
        else
          t--;
      }
      length[i] = t;
    }

    /* Find largest and smallest lengths in this group */
    var minLen,  maxLen;
    minLen = maxLen = length[0];
    for (i = 1; i < symCount; i++) {
      if (length[i] > maxLen)
        maxLen = length[i];
      else if (length[i] < minLen)
        minLen = length[i];
    }

    /* Calculate permute[], base[], and limit[] tables from length[].
     *
     * permute[] is the lookup table for converting huffman coded symbols
     * into decoded symbols.  base[] is the amount to subtract from the
     * value of a huffman symbol of a given length when using permute[].
     *
     * limit[] indicates the largest numerical value a symbol with a given
     * number of bits can have.  This is how the huffman codes can vary in
     * length: each code with a value>limit[length] needs another bit.
     */
    hufGroup = {};
    groups.push(hufGroup);
    hufGroup.permute = new Uint16Array(MAX_SYMBOLS);
    hufGroup.limit = new Uint32Array(MAX_HUFCODE_BITS + 2);
    hufGroup.base = new Uint32Array(MAX_HUFCODE_BITS + 1);
    hufGroup.minLen = minLen;
    hufGroup.maxLen = maxLen;
    /* Calculate permute[].  Concurently, initialize temp[] and limit[]. */
    var pp = 0;
    for (i = minLen; i <= maxLen; i++) {
      temp[i] = hufGroup.limit[i] = 0;
      for (t = 0; t < symCount; t++)
        if (length[t] === i)
          hufGroup.permute[pp++] = t;
    }
    /* Count symbols coded for at each bit length */
    for (i = 0; i < symCount; i++)
      temp[length[i]]++;
    /* Calculate limit[] (the largest symbol-coding value at each bit
     * length, which is (previous limit<<1)+symbols at this level), and
     * base[] (number of symbols to ignore at each bit length, which is
     * limit minus the cumulative count of symbols coded for already). */
    pp = t = 0;
    for (i = minLen; i < maxLen; i++) {
      pp += temp[i];
      /* We read the largest possible symbol size and then unget bits
         after determining how many we need, and those extra bits could
         be set to anything.  (They're noise from future symbols.)  At
         each level we're really only interested in the first few bits,
         so here we set all the trailing to-be-ignored bits to 1 so they
         don't affect the value>limit[length] comparison. */
      hufGroup.limit[i] = pp - 1;
      pp <<= 1;
      t += temp[i];
      hufGroup.base[i + 1] = pp - t;
    }
    hufGroup.limit[maxLen + 1] = Number.MAX_VALUE; /* Sentinal value for reading next sym. */
    hufGroup.limit[maxLen] = pp + temp[maxLen] - 1;
    hufGroup.base[minLen] = 0;
  }
  /* We've finished reading and digesting the block header.  Now read this
     block's huffman coded symbols from the file and undo the huffman coding
     and run length encoding, saving the result into dbuf[dbufCount++]=uc */

  /* Initialize symbol occurrence counters and symbol Move To Front table */
  var byteCount = new Uint32Array(256);
  for (i = 0; i < 256; i++)
    mtfSymbol[i] = i;
  /* Loop through compressed symbols. */
  var runPos = 0, dbufCount = 0, selector = 0, uc;
  var dbuf = this.dbuf = new Uint32Array(this.dbufSize);
  symCount = 0;
  for (;;) {
    /* Determine which huffman coding group to use. */
    if (!(symCount--)) {
      symCount = GROUP_SIZE - 1;
      if (selector >= nSelectors) { _throw(Err.DATA_ERROR); }
      hufGroup = groups[selectors[selector++]];
    }
    /* Read next huffman-coded symbol. */
    i = hufGroup.minLen;
    j = reader.read(i);
    for (;;i++) {
      if (i > hufGroup.maxLen) { _throw(Err.DATA_ERROR); }
      if (j <= hufGroup.limit[i])
        break;
      j = (j << 1) | reader.read(1);
    }
    /* Huffman decode value to get nextSym (with bounds checking) */
    j -= hufGroup.base[i];
    if (j < 0 || j >= MAX_SYMBOLS) { _throw(Err.DATA_ERROR); }
    var nextSym = hufGroup.permute[j];
    /* We have now decoded the symbol, which indicates either a new literal
       byte, or a repeated run of the most recent literal byte.  First,
       check if nextSym indicates a repeated run, and if so loop collecting
       how many times to repeat the last literal. */
    if (nextSym === SYMBOL_RUNA || nextSym === SYMBOL_RUNB) {
      /* If this is the start of a new run, zero out counter */
      if (!runPos){
        runPos = 1;
        t = 0;
      }
      /* Neat trick that saves 1 symbol: instead of or-ing 0 or 1 at
         each bit position, add 1 or 2 instead.  For example,
         1011 is 1<<0 + 1<<1 + 2<<2.  1010 is 2<<0 + 2<<1 + 1<<2.
         You can make any bit pattern that way using 1 less symbol than
         the basic or 0/1 method (except all bits 0, which would use no
         symbols, but a run of length 0 doesn't mean anything in this
         context).  Thus space is saved. */
      if (nextSym === SYMBOL_RUNA)
        t += runPos;
      else
        t += 2 * runPos;
      runPos <<= 1;
      continue;
    }
    /* When we hit the first non-run symbol after a run, we now know
       how many times to repeat the last literal, so append that many
       copies to our buffer of decoded symbols (dbuf) now.  (The last
       literal used is the one at the head of the mtfSymbol array.) */
    if (runPos){
      runPos = 0;
      if (dbufCount + t > this.dbufSize) { _throw(Err.DATA_ERROR); }
      uc = symToByte[mtfSymbol[0]];
      byteCount[uc] += t;
      while (t--)
        dbuf[dbufCount++] = uc;
    }
    /* Is this the terminating symbol? */
    if (nextSym > symTotal)
      break;
    /* At this point, nextSym indicates a new literal character.  Subtract
       one to get the position in the MTF array at which this literal is
       currently to be found.  (Note that the result can't be -1 or 0,
       because 0 and 1 are RUNA and RUNB.  But another instance of the
       first symbol in the mtf array, position 0, would have been handled
       as part of a run above.  Therefore 1 unused mtf position minus
       2 non-literal nextSym values equals -1.) */
    if (dbufCount >= this.dbufSize) { _throw(Err.DATA_ERROR); }
    i = nextSym - 1;
    uc = mtf(mtfSymbol, i);
    uc = symToByte[uc];
    /* We have our literal byte.  Save it into dbuf. */
    byteCount[uc]++;
    dbuf[dbufCount++] = uc;
  }
  /* At this point, we've read all the huffman-coded symbols (and repeated
     runs) for this block from the input stream, and decoded them into the
     intermediate buffer.  There are dbufCount many decoded bytes in dbuf[].
     Now undo the Burrows-Wheeler transform on dbuf.
     See http://dogma.net/markn/articles/bwt/bwt.htm
  */
  if (origPointer < 0 || origPointer >= dbufCount) { _throw(Err.DATA_ERROR); }
  /* Turn byteCount into cumulative occurrence counts of 0 to n-1. */
  j = 0;
  for (i = 0; i < 256; i++) {
    k = j + byteCount[i];
    byteCount[i] = j;
    j = k;
  }
  /* Figure out what order dbuf would be in if we sorted it. */
  for (i = 0; i < dbufCount; i++) {
    uc = dbuf[i] & 0xff;
    dbuf[byteCount[uc]] |= (i << 8);
    byteCount[uc]++;
  }
  /* Decode first byte by hand to initialize "previous" byte.  Note that it
     doesn't get output, and if the first three characters are identical
     it doesn't qualify as a run (hence writeRunCountdown=5). */
  var pos = 0, current = 0, run = 0;
  if (dbufCount) {
    pos = dbuf[origPointer];
    current = (pos & 0xff);
    pos >>= 8;
    run = -1;
  }
  this.writePos = pos;
  this.writeCurrent = current;
  this.writeCount = dbufCount;
  this.writeRun = run;

  return true; /* more blocks to come */
};
/* Undo burrows-wheeler transform on intermediate buffer to produce output.
   If start_bunzip was initialized with out_fd=-1, then up to len bytes of
   data are written to outbuf.  Return value is number of bytes written or
   error (all errors are negative numbers).  If out_fd!=-1, outbuf and len
   are ignored, data is written to out_fd and return is RETVAL_OK or error.
*/
Bunzip.prototype._read_bunzip = function(outputBuffer, len) {
    var copies, previous, outbyte;
    /* james@jamestaylor.org: writeCount goes to -1 when the buffer is fully
       decoded, which results in this returning RETVAL_LAST_BLOCK, also
       equal to -1... Confusing, I'm returning 0 here to indicate no
       bytes written into the buffer */
  if (this.writeCount < 0) { return 0; }

  var gotcount = 0;
  var dbuf = this.dbuf, pos = this.writePos, current = this.writeCurrent;
  var dbufCount = this.writeCount, outputsize = this.outputsize;
  var run = this.writeRun;

  while (dbufCount) {
    dbufCount--;
    previous = current;
    pos = dbuf[pos];
    current = pos & 0xff;
    pos >>= 8;
    if (run++ === 3){
      copies = current;
      outbyte = previous;
      current = -1;
    } else {
      copies = 1;
      outbyte = current;
    }
    this.blockCRC.updateCRCRun(outbyte, copies);
    while (copies--) {
      this.outputStream.writeByte(outbyte);
      this.nextoutput++;
    }
    if (current != previous)
      run = 0;
  }
  this.writeCount = dbufCount;
  // check CRC
  if (this.blockCRC.getCRC() !== this.targetBlockCRC) {
    _throw(Err.DATA_ERROR, "Bad block CRC "+
           "(got "+this.blockCRC.getCRC().toString(16)+
           " expected "+this.targetBlockCRC.toString(16)+")");
  }
  return this.nextoutput;
};

var coerceInputStream = function(input) {
  if ('readByte' in input) { return input; }
  var inputStream = new Stream();
  inputStream.pos = 0;
  inputStream.readByte = function() { return input[this.pos++]; };
  inputStream.seek = function(pos) { this.pos = pos; };
  inputStream.eof = function() { return this.pos >= input.length; };
  return inputStream;
};
var coerceOutputStream = function(output) {
  var outputStream = new Stream();
  var resizeOk = true;
  if (output) {
    if (typeof(output)==='number') {
      outputStream.buffer = new Buffer(output);
      resizeOk = false;
    } else if ('writeByte' in output) {
      return output;
    } else {
      outputStream.buffer = output;
      resizeOk = false;
    }
  } else {
    outputStream.buffer = new Buffer(16384);
  }
  outputStream.pos = 0;
  outputStream.writeByte = function(_byte) {
    if (resizeOk && this.pos >= this.buffer.length) {
      var newBuffer = new Buffer(this.buffer.length*2);
      this.buffer.copy(newBuffer);
      this.buffer = newBuffer;
    }
    this.buffer[this.pos++] = _byte;
  };
  outputStream.getBuffer = function() {
    // trim buffer
    if (this.pos !== this.buffer.length) {
      if (!resizeOk)
        throw new TypeError('outputsize does not match decoded input');
      var newBuffer = new Buffer(this.pos);
      this.buffer.copy(newBuffer, 0, 0, this.pos);
      this.buffer = newBuffer;
    }
    return this.buffer;
  };
  outputStream._coerced = true;
  return outputStream;
};

/* Static helper functions */
Bunzip.Err = Err;
// 'input' can be a stream or a buffer
// 'output' can be a stream or a buffer or a number (buffer size)
Bunzip.decode = function(input, output, multistream) {
  // make a stream from a buffer, if necessary
  var inputStream = coerceInputStream(input);
  var outputStream = coerceOutputStream(output);

  var bz = new Bunzip(inputStream, outputStream);
  while (true) {
    if ('eof' in inputStream && inputStream.eof()) break;
    if (bz._init_block()) {
      bz._read_bunzip();
    } else {
      var targetStreamCRC = bz.reader.read(32) >>> 0; // (convert to unsigned)
      if (targetStreamCRC !== bz.streamCRC) {
        _throw(Err.DATA_ERROR, "Bad stream CRC "+
               "(got "+bz.streamCRC.toString(16)+
               " expected "+targetStreamCRC.toString(16)+")");
      }
      if (multistream &&
          'eof' in inputStream &&
          !inputStream.eof()) {
        // note that start_bunzip will also resync the bit reader to next byte
        bz._start_bunzip(inputStream, outputStream);
      } else break;
    }
  }
  if ('getBuffer' in outputStream)
    return outputStream.getBuffer();
};
Bunzip.decodeBlock = function(input, pos, output) {
  // make a stream from a buffer, if necessary
  var inputStream = coerceInputStream(input);
  var outputStream = coerceOutputStream(output);
  var bz = new Bunzip(inputStream, outputStream);
  bz.reader.seek(pos);
  /* Fill the decode buffer for the block */
  var moreBlocks = bz._get_next_block();
  if (moreBlocks) {
    /* Init the CRC for writing */
    bz.blockCRC = new CRC32();

    /* Zero this so the current byte from before the seek is not written */
    bz.writeCopies = 0;

    /* Decompress the block and write to stdout */
    bz._read_bunzip();
    // XXX keep writing?
  }
  if ('getBuffer' in outputStream)
    return outputStream.getBuffer();
};
/* Reads bzip2 file from stream or buffer `input`, and invoke
 * `callback(position, size)` once for each bzip2 block,
 * where position gives the starting position (in *bits*)
 * and size gives uncompressed size of the block (in *bytes*). */
Bunzip.table = function(input, callback, multistream) {
  // make a stream from a buffer, if necessary
  var inputStream = new Stream();
  inputStream.delegate = coerceInputStream(input);
  inputStream.pos = 0;
  inputStream.readByte = function() {
    this.pos++;
    return this.delegate.readByte();
  };
  if (inputStream.delegate.eof) {
    inputStream.eof = inputStream.delegate.eof.bind(inputStream.delegate);
  }
  var outputStream = new Stream();
  outputStream.pos = 0;
  outputStream.writeByte = function() { this.pos++; };

  var bz = new Bunzip(inputStream, outputStream);
  var blockSize = bz.dbufSize;
  while (true) {
    if ('eof' in inputStream && inputStream.eof()) break;

    var position = inputStream.pos*8 + bz.reader.bitOffset;
    if (bz.reader.hasByte) { position -= 8; }

    if (bz._init_block()) {
      var start = outputStream.pos;
      bz._read_bunzip();
      callback(position, outputStream.pos - start);
    } else {
      var crc = bz.reader.read(32); // (but we ignore the crc)
      if (multistream &&
          'eof' in inputStream &&
          !inputStream.eof()) {
        // note that start_bunzip will also resync the bit reader to next byte
        bz._start_bunzip(inputStream, outputStream);
        console.assert(bz.dbufSize === blockSize,
                       "shouldn't change block size within multistream file");
      } else break;
    }
  }
};

Bunzip.Stream = Stream;

Bunzip.version = pjson.version;
Bunzip.license = pjson.license;

module.exports = Bunzip;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../package.json":161,"./bitreader":157,"./crc32":158,"./stream":160,"buffer":172}],160:[function(require,module,exports){
/* very simple input/output stream interface */
var Stream = function() {
};

// input streams //////////////
/** Returns the next byte, or -1 for EOF. */
Stream.prototype.readByte = function() {
  throw new Error("abstract method readByte() not implemented");
};
/** Attempts to fill the buffer; returns number of bytes read, or
 *  -1 for EOF. */
Stream.prototype.read = function(buffer, bufOffset, length) {
  var bytesRead = 0;
  while (bytesRead < length) {
    var c = this.readByte();
    if (c < 0) { // EOF
      return (bytesRead===0) ? -1 : bytesRead;
    }
    buffer[bufOffset++] = c;
    bytesRead++;
  }
  return bytesRead;
};
Stream.prototype.seek = function(new_pos) {
  throw new Error("abstract method seek() not implemented");
};

// output streams ///////////
Stream.prototype.writeByte = function(_byte) {
  throw new Error("abstract method readByte() not implemented");
};
Stream.prototype.write = function(buffer, bufOffset, length) {
  var i;
  for (i=0; i<length; i++) {
    this.writeByte(buffer[bufOffset++]);
  }
  return length;
};
Stream.prototype.flush = function() {
};

module.exports = Stream;

},{}],161:[function(require,module,exports){
module.exports={
  "name": "seek-bzip",
  "version": "2.0.0",
  "contributors": [
    "C. Scott Ananian (http://cscott.net)",
    "Eli Skeggs",
    "Kevin Kwok",
    "Rob Landley (http://landley.net)"
  ],
  "description": "a pure-JavaScript Node.JS module for random-access decoding bzip2 data",
  "main": "./lib/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/cscott/seek-bzip.git"
  },
  "license": "MIT",
  "bin": {
    "seek-bunzip": "./bin/seek-bunzip",
    "seek-table": "./bin/seek-bzip-table"
  },
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "commander": "^6.0.0"
  },
  "devDependencies": {
    "fibers": "^5.0.0",
    "mocha": "^8.1.0"
  },
  "scripts": {
    "test": "mocha"
  }
}

},{}],162:[function(require,module,exports){
var bundleFn = arguments[3];
var sources = arguments[4];
var cache = arguments[5];

var stringify = JSON.stringify;

module.exports = function (fn, options) {
    var wkey;
    var cacheKeys = Object.keys(cache);

    for (var i = 0, l = cacheKeys.length; i < l; i++) {
        var key = cacheKeys[i];
        var exp = cache[key].exports;
        // Using babel as a transpiler to use esmodule, the export will always
        // be an object with the default export as a property of it. To ensure
        // the existing api and babel esmodule exports are both supported we
        // check for both
        if (exp === fn || exp && exp.default === fn) {
            wkey = key;
            break;
        }
    }

    if (!wkey) {
        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
        var wcache = {};
        for (var i = 0, l = cacheKeys.length; i < l; i++) {
            var key = cacheKeys[i];
            wcache[key] = key;
        }
        sources[wkey] = [
            'function(require,module,exports){' + fn + '(self); }',
            wcache
        ];
    }
    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);

    var scache = {}; scache[wkey] = wkey;
    sources[skey] = [
        'function(require,module,exports){' +
            // try to call default if defined to also support babel esmodule exports
            'var f = require(' + stringify(wkey) + ');' +
            '(f.default ? f.default : f)(self);' +
        '}',
        scache
    ];

    var workerSources = {};
    resolveSources(skey);

    function resolveSources(key) {
        workerSources[key] = true;

        for (var depPath in sources[key][1]) {
            var depKey = sources[key][1][depPath];
            if (!workerSources[depKey]) {
                resolveSources(depKey);
            }
        }
    }

    var src = '(' + bundleFn + ')({'
        + Object.keys(workerSources).map(function (key) {
            return stringify(key) + ':['
                + sources[key][0]
                + ',' + stringify(sources[key][1]) + ']'
            ;
        }).join(',')
        + '},{},[' + stringify(skey) + '])'
    ;

    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;

    var blob = new Blob([src], { type: 'text/javascript' });
    if (options && options.bare) { return blob; }
    var workerUrl = URL.createObjectURL(blob);
    var worker = new Worker(workerUrl);
    worker.objectURL = workerUrl;
    return worker;
};

},{}],163:[function(require,module,exports){
(function (global){(function (){
'use strict';

var objectAssign = require('object-assign');

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:
// NB: The URL to the CommonJS spec is kept just for tradition.
//     node-assert has evolved a lot since then, both in API and behavior.

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

// Expose a strict only variant of assert
function strict(value, message) {
  if (!value) fail(value, true, message, '==', strict);
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"object-assign":191,"util/":166}],164:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],165:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],166:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":165,"_process":203,"inherits":164}],167:[function(require,module,exports){
(function (global){(function (){
'use strict';

var possibleNames = [
	'BigInt64Array',
	'BigUint64Array',
	'Float32Array',
	'Float64Array',
	'Int16Array',
	'Int32Array',
	'Int8Array',
	'Uint16Array',
	'Uint32Array',
	'Uint8Array',
	'Uint8ClampedArray'
];

var g = typeof globalThis === 'undefined' ? global : globalThis;

module.exports = function availableTypedArrays() {
	var out = [];
	for (var i = 0; i < possibleNames.length; i++) {
		if (typeof g[possibleNames[i]] === 'function') {
			out[out.length] = possibleNames[i];
		}
	}
	return out;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],168:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],169:[function(require,module,exports){

},{}],170:[function(require,module,exports){
(function (process,Buffer){(function (){
'use strict';
/* eslint camelcase: "off" */

var assert = require('assert');

var Zstream = require('pako/lib/zlib/zstream');
var zlib_deflate = require('pako/lib/zlib/deflate.js');
var zlib_inflate = require('pako/lib/zlib/inflate.js');
var constants = require('pako/lib/zlib/constants');

for (var key in constants) {
  exports[key] = constants[key];
}

// zlib modes
exports.NONE = 0;
exports.DEFLATE = 1;
exports.INFLATE = 2;
exports.GZIP = 3;
exports.GUNZIP = 4;
exports.DEFLATERAW = 5;
exports.INFLATERAW = 6;
exports.UNZIP = 7;

var GZIP_HEADER_ID1 = 0x1f;
var GZIP_HEADER_ID2 = 0x8b;

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */
function Zlib(mode) {
  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {
    throw new TypeError('Bad argument');
  }

  this.dictionary = null;
  this.err = 0;
  this.flush = 0;
  this.init_done = false;
  this.level = 0;
  this.memLevel = 0;
  this.mode = mode;
  this.strategy = 0;
  this.windowBits = 0;
  this.write_in_progress = false;
  this.pending_close = false;
  this.gzip_id_bytes_read = 0;
}

Zlib.prototype.close = function () {
  if (this.write_in_progress) {
    this.pending_close = true;
    return;
  }

  this.pending_close = false;

  assert(this.init_done, 'close before init');
  assert(this.mode <= exports.UNZIP);

  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
    zlib_deflate.deflateEnd(this.strm);
  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {
    zlib_inflate.inflateEnd(this.strm);
  }

  this.mode = exports.NONE;

  this.dictionary = null;
};

Zlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {
  assert.equal(arguments.length, 8);

  assert(this.init_done, 'write before init');
  assert(this.mode !== exports.NONE, 'already finalized');
  assert.equal(false, this.write_in_progress, 'write already in progress');
  assert.equal(false, this.pending_close, 'close is pending');

  this.write_in_progress = true;

  assert.equal(false, flush === undefined, 'must provide flush value');

  this.write_in_progress = true;

  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {
    throw new Error('Invalid flush value');
  }

  if (input == null) {
    input = Buffer.alloc(0);
    in_len = 0;
    in_off = 0;
  }

  this.strm.avail_in = in_len;
  this.strm.input = input;
  this.strm.next_in = in_off;
  this.strm.avail_out = out_len;
  this.strm.output = out;
  this.strm.next_out = out_off;
  this.flush = flush;

  if (!async) {
    // sync version
    this._process();

    if (this._checkError()) {
      return this._afterSync();
    }
    return;
  }

  // async version
  var self = this;
  process.nextTick(function () {
    self._process();
    self._after();
  });

  return this;
};

Zlib.prototype._afterSync = function () {
  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  return [avail_in, avail_out];
};

Zlib.prototype._process = function () {
  var next_expected_header_byte = null;

  // If the avail_out is left at 0, then it means that it ran out
  // of room.  If there was avail_out left over, then it means
  // that all of the input was consumed.
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflate(this.strm, this.flush);
      break;
    case exports.UNZIP:
      if (this.strm.avail_in > 0) {
        next_expected_header_byte = this.strm.next_in;
      }

      switch (this.gzip_id_bytes_read) {
        case 0:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {
            this.gzip_id_bytes_read = 1;
            next_expected_header_byte++;

            if (this.strm.avail_in === 1) {
              // The only available byte was already read.
              break;
            }
          } else {
            this.mode = exports.INFLATE;
            break;
          }

        // fallthrough
        case 1:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {
            this.gzip_id_bytes_read = 2;
            this.mode = exports.GUNZIP;
          } else {
            // There is no actual difference between INFLATE and INFLATERAW
            // (after initialization).
            this.mode = exports.INFLATE;
          }

          break;
        default:
          throw new Error('invalid number of gzip magic number bytes read');
      }

    // fallthrough
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
      this.err = zlib_inflate.inflate(this.strm, this.flush

      // If data was encoded with dictionary
      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {
        // Load it
        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);
        if (this.err === exports.Z_OK) {
          // And try to decode again
          this.err = zlib_inflate.inflate(this.strm, this.flush);
        } else if (this.err === exports.Z_DATA_ERROR) {
          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.
          // Make it possible for After() to tell a bad dictionary from bad
          // input.
          this.err = exports.Z_NEED_DICT;
        }
      }
      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {
        // Bytes remain in input buffer. Perhaps this is another compressed
        // member in the same archive, or just trailing garbage.
        // Trailing zero bytes are okay, though, since they are frequently
        // used for padding.

        this.reset();
        this.err = zlib_inflate.inflate(this.strm, this.flush);
      }
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }
};

Zlib.prototype._checkError = function () {
  // Acceptable error states depend on the type of zlib stream.
  switch (this.err) {
    case exports.Z_OK:
    case exports.Z_BUF_ERROR:
      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {
        this._error('unexpected end of file');
        return false;
      }
      break;
    case exports.Z_STREAM_END:
      // normal statuses, not fatal
      break;
    case exports.Z_NEED_DICT:
      if (this.dictionary == null) {
        this._error('Missing dictionary');
      } else {
        this._error('Bad dictionary');
      }
      return false;
    default:
      // something else.
      this._error('Zlib error');
      return false;
  }

  return true;
};

Zlib.prototype._after = function () {
  if (!this._checkError()) {
    return;
  }

  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  // call the write() cb
  this.callback(avail_in, avail_out);

  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype._error = function (message) {
  if (this.strm.msg) {
    message = this.strm.msg;
  }
  this.onerror(message, this.err

  // no hope of rescue.
  );this.write_in_progress = false;
  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {
  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');

  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');
  assert(level >= -1 && level <= 9, 'invalid compression level');

  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');

  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');

  this._init(level, windowBits, memLevel, strategy, dictionary);
  this._setDictionary();
};

Zlib.prototype.params = function () {
  throw new Error('deflateParams Not supported');
};

Zlib.prototype.reset = function () {
  this._reset();
  this._setDictionary();
};

Zlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {
  this.level = level;
  this.windowBits = windowBits;
  this.memLevel = memLevel;
  this.strategy = strategy;

  this.flush = exports.Z_NO_FLUSH;

  this.err = exports.Z_OK;

  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {
    this.windowBits += 16;
  }

  if (this.mode === exports.UNZIP) {
    this.windowBits += 32;
  }

  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {
    this.windowBits = -1 * this.windowBits;
  }

  this.strm = new Zstream();

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
      break;
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
    case exports.UNZIP:
      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }

  if (this.err !== exports.Z_OK) {
    this._error('Init error');
  }

  this.dictionary = dictionary;

  this.write_in_progress = false;
  this.init_done = true;
};

Zlib.prototype._setDictionary = function () {
  if (this.dictionary == null) {
    return;
  }

  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to set dictionary');
  }
};

Zlib.prototype._reset = function () {
  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
    case exports.GZIP:
      this.err = zlib_deflate.deflateReset(this.strm);
      break;
    case exports.INFLATE:
    case exports.INFLATERAW:
    case exports.GUNZIP:
      this.err = zlib_inflate.inflateReset(this.strm);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to reset stream');
  }
};

exports.Zlib = Zlib;
}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":203,"assert":163,"buffer":172,"pako/lib/zlib/constants":194,"pako/lib/zlib/deflate.js":196,"pako/lib/zlib/inflate.js":198,"pako/lib/zlib/zstream":202}],171:[function(require,module,exports){
(function (process){(function (){
'use strict';

var Buffer = require('buffer').Buffer;
var Transform = require('stream').Transform;
var binding = require('./binding');
var util = require('util');
var assert = require('assert').ok;
var kMaxLength = require('buffer').kMaxLength;
var kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';

// zlib doesn't provide these, so kludge them in following the same
// const naming scheme zlib uses.
binding.Z_MIN_WINDOWBITS = 8;
binding.Z_MAX_WINDOWBITS = 15;
binding.Z_DEFAULT_WINDOWBITS = 15;

// fewer than 64 bytes per chunk is stupid.
// technically it could work with as few as 8, but even 64 bytes
// is absurdly low.  Usually a MB or more is best.
binding.Z_MIN_CHUNK = 64;
binding.Z_MAX_CHUNK = Infinity;
binding.Z_DEFAULT_CHUNK = 16 * 1024;

binding.Z_MIN_MEMLEVEL = 1;
binding.Z_MAX_MEMLEVEL = 9;
binding.Z_DEFAULT_MEMLEVEL = 8;

binding.Z_MIN_LEVEL = -1;
binding.Z_MAX_LEVEL = 9;
binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;

// expose all the zlib constants
var bkeys = Object.keys(binding);
for (var bk = 0; bk < bkeys.length; bk++) {
  var bkey = bkeys[bk];
  if (bkey.match(/^Z/)) {
    Object.defineProperty(exports, bkey, {
      enumerable: true, value: binding[bkey], writable: false
    });
  }
}

// translation table for return codes.
var codes = {
  Z_OK: binding.Z_OK,
  Z_STREAM_END: binding.Z_STREAM_END,
  Z_NEED_DICT: binding.Z_NEED_DICT,
  Z_ERRNO: binding.Z_ERRNO,
  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
  Z_DATA_ERROR: binding.Z_DATA_ERROR,
  Z_MEM_ERROR: binding.Z_MEM_ERROR,
  Z_BUF_ERROR: binding.Z_BUF_ERROR,
  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
};

var ckeys = Object.keys(codes);
for (var ck = 0; ck < ckeys.length; ck++) {
  var ckey = ckeys[ck];
  codes[codes[ckey]] = ckey;
}

Object.defineProperty(exports, 'codes', {
  enumerable: true, value: Object.freeze(codes), writable: false
});

exports.Deflate = Deflate;
exports.Inflate = Inflate;
exports.Gzip = Gzip;
exports.Gunzip = Gunzip;
exports.DeflateRaw = DeflateRaw;
exports.InflateRaw = InflateRaw;
exports.Unzip = Unzip;

exports.createDeflate = function (o) {
  return new Deflate(o);
};

exports.createInflate = function (o) {
  return new Inflate(o);
};

exports.createDeflateRaw = function (o) {
  return new DeflateRaw(o);
};

exports.createInflateRaw = function (o) {
  return new InflateRaw(o);
};

exports.createGzip = function (o) {
  return new Gzip(o);
};

exports.createGunzip = function (o) {
  return new Gunzip(o);
};

exports.createUnzip = function (o) {
  return new Unzip(o);
};

// Convenience methods.
// compress/decompress a string or buffer in one step.
exports.deflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Deflate(opts), buffer, callback);
};

exports.deflateSync = function (buffer, opts) {
  return zlibBufferSync(new Deflate(opts), buffer);
};

exports.gzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gzip(opts), buffer, callback);
};

exports.gzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gzip(opts), buffer);
};

exports.deflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
};

exports.deflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new DeflateRaw(opts), buffer);
};

exports.unzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Unzip(opts), buffer, callback);
};

exports.unzipSync = function (buffer, opts) {
  return zlibBufferSync(new Unzip(opts), buffer);
};

exports.inflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Inflate(opts), buffer, callback);
};

exports.inflateSync = function (buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
};

exports.gunzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gunzip(opts), buffer, callback);
};

exports.gunzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gunzip(opts), buffer);
};

exports.inflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new InflateRaw(opts), buffer, callback);
};

exports.inflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new InflateRaw(opts), buffer);
};

function zlibBuffer(engine, buffer, callback) {
  var buffers = [];
  var nread = 0;

  engine.on('error', onError);
  engine.on('end', onEnd);

  engine.end(buffer);
  flow();

  function flow() {
    var chunk;
    while (null !== (chunk = engine.read())) {
      buffers.push(chunk);
      nread += chunk.length;
    }
    engine.once('readable', flow);
  }

  function onError(err) {
    engine.removeListener('end', onEnd);
    engine.removeListener('readable', flow);
    callback(err);
  }

  function onEnd() {
    var buf;
    var err = null;

    if (nread >= kMaxLength) {
      err = new RangeError(kRangeErrorMessage);
    } else {
      buf = Buffer.concat(buffers, nread);
    }

    buffers = [];
    engine.close();
    callback(err, buf);
  }
}

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string') buffer = Buffer.from(buffer);

  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');

  var flushFlag = engine._finishFlushFlag;

  return engine._processChunk(buffer, flushFlag);
}

// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate)) return new Deflate(opts);
  Zlib.call(this, opts, binding.DEFLATE);
}

function Inflate(opts) {
  if (!(this instanceof Inflate)) return new Inflate(opts);
  Zlib.call(this, opts, binding.INFLATE);
}

// gzip - bigger header, same deflate compression
function Gzip(opts) {
  if (!(this instanceof Gzip)) return new Gzip(opts);
  Zlib.call(this, opts, binding.GZIP);
}

function Gunzip(opts) {
  if (!(this instanceof Gunzip)) return new Gunzip(opts);
  Zlib.call(this, opts, binding.GUNZIP);
}

// raw - no header
function DeflateRaw(opts) {
  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
  Zlib.call(this, opts, binding.DEFLATERAW);
}

function InflateRaw(opts) {
  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
  Zlib.call(this, opts, binding.INFLATERAW);
}

// auto-detect header.
function Unzip(opts) {
  if (!(this instanceof Unzip)) return new Unzip(opts);
  Zlib.call(this, opts, binding.UNZIP);
}

function isValidFlushFlag(flag) {
  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;
}

// the Zlib class they all inherit from
// This thing manages the queue of requests, and returns
// true or false if there is anything in the queue when
// you call the .write() method.

function Zlib(opts, mode) {
  var _this = this;

  this._opts = opts = opts || {};
  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;

  Transform.call(this, opts);

  if (opts.flush && !isValidFlushFlag(opts.flush)) {
    throw new Error('Invalid flush flag: ' + opts.flush);
  }
  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {
    throw new Error('Invalid flush flag: ' + opts.finishFlush);
  }

  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;
  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;

  if (opts.chunkSize) {
    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {
      throw new Error('Invalid chunk size: ' + opts.chunkSize);
    }
  }

  if (opts.windowBits) {
    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {
      throw new Error('Invalid windowBits: ' + opts.windowBits);
    }
  }

  if (opts.level) {
    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {
      throw new Error('Invalid compression level: ' + opts.level);
    }
  }

  if (opts.memLevel) {
    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {
      throw new Error('Invalid memLevel: ' + opts.memLevel);
    }
  }

  if (opts.strategy) {
    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {
      throw new Error('Invalid strategy: ' + opts.strategy);
    }
  }

  if (opts.dictionary) {
    if (!Buffer.isBuffer(opts.dictionary)) {
      throw new Error('Invalid dictionary: it should be a Buffer instance');
    }
  }

  this._handle = new binding.Zlib(mode);

  var self = this;
  this._hadError = false;
  this._handle.onerror = function (message, errno) {
    // there is no way to cleanly recover.
    // continuing only obscures problems.
    _close(self);
    self._hadError = true;

    var error = new Error(message);
    error.errno = errno;
    error.code = exports.codes[errno];
    self.emit('error', error);
  };

  var level = exports.Z_DEFAULT_COMPRESSION;
  if (typeof opts.level === 'number') level = opts.level;

  var strategy = exports.Z_DEFAULT_STRATEGY;
  if (typeof opts.strategy === 'number') strategy = opts.strategy;

  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);

  this._buffer = Buffer.allocUnsafe(this._chunkSize);
  this._offset = 0;
  this._level = level;
  this._strategy = strategy;

  this.once('end', this.close);

  Object.defineProperty(this, '_closed', {
    get: function () {
      return !_this._handle;
    },
    configurable: true,
    enumerable: true
  });
}

util.inherits(Zlib, Transform);

Zlib.prototype.params = function (level, strategy, callback) {
  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {
    throw new RangeError('Invalid compression level: ' + level);
  }
  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {
    throw new TypeError('Invalid strategy: ' + strategy);
  }

  if (this._level !== level || this._strategy !== strategy) {
    var self = this;
    this.flush(binding.Z_SYNC_FLUSH, function () {
      assert(self._handle, 'zlib binding closed');
      self._handle.params(level, strategy);
      if (!self._hadError) {
        self._level = level;
        self._strategy = strategy;
        if (callback) callback();
      }
    });
  } else {
    process.nextTick(callback);
  }
};

Zlib.prototype.reset = function () {
  assert(this._handle, 'zlib binding closed');
  return this._handle.reset();
};

// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
Zlib.prototype._flush = function (callback) {
  this._transform(Buffer.alloc(0), '', callback);
};

Zlib.prototype.flush = function (kind, callback) {
  var _this2 = this;

  var ws = this._writableState;

  if (typeof kind === 'function' || kind === undefined && !callback) {
    callback = kind;
    kind = binding.Z_FULL_FLUSH;
  }

  if (ws.ended) {
    if (callback) process.nextTick(callback);
  } else if (ws.ending) {
    if (callback) this.once('end', callback);
  } else if (ws.needDrain) {
    if (callback) {
      this.once('drain', function () {
        return _this2.flush(kind, callback);
      });
    }
  } else {
    this._flushFlag = kind;
    this.write(Buffer.alloc(0), '', callback);
  }
};

Zlib.prototype.close = function (callback) {
  _close(this, callback);
  process.nextTick(emitCloseNT, this);
};

function _close(engine, callback) {
  if (callback) process.nextTick(callback);

  // Caller may invoke .close after a zlib error (which will null _handle).
  if (!engine._handle) return;

  engine._handle.close();
  engine._handle = null;
}

function emitCloseNT(self) {
  self.emit('close');
}

Zlib.prototype._transform = function (chunk, encoding, cb) {
  var flushFlag;
  var ws = this._writableState;
  var ending = ws.ending || ws.ended;
  var last = ending && (!chunk || ws.length === chunk.length);

  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));

  if (!this._handle) return cb(new Error('zlib binding closed'));

  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag
  // (or whatever flag was provided using opts.finishFlush).
  // If it's explicitly flushing at some other time, then we use
  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
  // goodness.
  if (last) flushFlag = this._finishFlushFlag;else {
    flushFlag = this._flushFlag;
    // once we've flushed the last of the queue, stop flushing and
    // go back to the normal behavior.
    if (chunk.length >= ws.length) {
      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
    }
  }

  this._processChunk(chunk, flushFlag, cb);
};

Zlib.prototype._processChunk = function (chunk, flushFlag, cb) {
  var availInBefore = chunk && chunk.length;
  var availOutBefore = this._chunkSize - this._offset;
  var inOff = 0;

  var self = this;

  var async = typeof cb === 'function';

  if (!async) {
    var buffers = [];
    var nread = 0;

    var error;
    this.on('error', function (er) {
      error = er;
    });

    assert(this._handle, 'zlib binding closed');
    do {
      var res = this._handle.writeSync(flushFlag, chunk, // in
      inOff, // in_off
      availInBefore, // in_len
      this._buffer, // out
      this._offset, //out_off
      availOutBefore); // out_len
    } while (!this._hadError && callback(res[0], res[1]));

    if (this._hadError) {
      throw error;
    }

    if (nread >= kMaxLength) {
      _close(this);
      throw new RangeError(kRangeErrorMessage);
    }

    var buf = Buffer.concat(buffers, nread);
    _close(this);

    return buf;
  }

  assert(this._handle, 'zlib binding closed');
  var req = this._handle.write(flushFlag, chunk, // in
  inOff, // in_off
  availInBefore, // in_len
  this._buffer, // out
  this._offset, //out_off
  availOutBefore); // out_len

  req.buffer = chunk;
  req.callback = callback;

  function callback(availInAfter, availOutAfter) {
    // When the callback is used in an async write, the callback's
    // context is the `req` object that was created. The req object
    // is === this._handle, and that's why it's important to null
    // out the values after they are done being used. `this._handle`
    // can stay in memory longer than the callback and buffer are needed.
    if (this) {
      this.buffer = null;
      this.callback = null;
    }

    if (self._hadError) return;

    var have = availOutBefore - availOutAfter;
    assert(have >= 0, 'have should not go down');

    if (have > 0) {
      var out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;
      // serve some output to the consumer.
      if (async) {
        self.push(out);
      } else {
        buffers.push(out);
        nread += out.length;
      }
    }

    // exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = Buffer.allocUnsafe(self._chunkSize);
    }

    if (availOutAfter === 0) {
      // Not actually done.  Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += availInBefore - availInAfter;
      availInBefore = availInAfter;

      if (!async) return true;

      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);
      newReq.callback = callback; // this same function
      newReq.buffer = chunk;
      return;
    }

    if (!async) return false;

    // finished with the chunk.
    cb();
  }
};

util.inherits(Deflate, Zlib);
util.inherits(Inflate, Zlib);
util.inherits(Gzip, Zlib);
util.inherits(Gunzip, Zlib);
util.inherits(DeflateRaw, Zlib);
util.inherits(InflateRaw, Zlib);
util.inherits(Unzip, Zlib);
}).call(this)}).call(this,require('_process'))
},{"./binding":170,"_process":203,"assert":163,"buffer":172,"stream":205,"util":224}],172:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":168,"buffer":172,"ieee754":185}],173:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":174,"get-intrinsic":180}],174:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":179,"get-intrinsic":180}],175:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":180}],176:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],177:[function(require,module,exports){
'use strict';

var isCallable = require('is-callable');

var toStr = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

var forEachArray = function forEachArray(array, iterator, receiver) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            if (receiver == null) {
                iterator(array[i], i, array);
            } else {
                iterator.call(receiver, array[i], i, array);
            }
        }
    }
};

var forEachString = function forEachString(string, iterator, receiver) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        if (receiver == null) {
            iterator(string.charAt(i), i, string);
        } else {
            iterator.call(receiver, string.charAt(i), i, string);
        }
    }
};

var forEachObject = function forEachObject(object, iterator, receiver) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            if (receiver == null) {
                iterator(object[k], k, object);
            } else {
                iterator.call(receiver, object[k], k, object);
            }
        }
    }
};

var forEach = function forEach(list, iterator, thisArg) {
    if (!isCallable(iterator)) {
        throw new TypeError('iterator must be a function');
    }

    var receiver;
    if (arguments.length >= 3) {
        receiver = thisArg;
    }

    if (toStr.call(list) === '[object Array]') {
        forEachArray(list, iterator, receiver);
    } else if (typeof list === 'string') {
        forEachString(list, iterator, receiver);
    } else {
        forEachObject(list, iterator, receiver);
    }
};

module.exports = forEach;

},{"is-callable":188}],178:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],179:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":178}],180:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":179,"has":184,"has-symbols":181}],181:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":182}],182:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],183:[function(require,module,exports){
'use strict';

var hasSymbols = require('has-symbols/shams');

module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":182}],184:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":179}],185:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],186:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],187:[function(require,module,exports){
'use strict';

var hasToStringTag = require('has-tostringtag/shams')();
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

},{"call-bind/callBound":173,"has-tostringtag/shams":183}],188:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};

},{}],189:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;
var fnToStr = Function.prototype.toString;
var isFnRegex = /^\s*(?:function)?\*/;
var hasToStringTag = require('has-tostringtag/shams')();
var getProto = Object.getPrototypeOf;
var getGeneratorFunc = function () { // eslint-disable-line consistent-return
	if (!hasToStringTag) {
		return false;
	}
	try {
		return Function('return function*() {}')();
	} catch (e) {
	}
};
var GeneratorFunction;

module.exports = function isGeneratorFunction(fn) {
	if (typeof fn !== 'function') {
		return false;
	}
	if (isFnRegex.test(fnToStr.call(fn))) {
		return true;
	}
	if (!hasToStringTag) {
		var str = toStr.call(fn);
		return str === '[object GeneratorFunction]';
	}
	if (!getProto) {
		return false;
	}
	if (typeof GeneratorFunction === 'undefined') {
		var generatorFunc = getGeneratorFunc();
		GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;
	}
	return getProto(fn) === GeneratorFunction;
};

},{"has-tostringtag/shams":183}],190:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('for-each');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = require('has-tostringtag/shams')();

var g = typeof globalThis === 'undefined' ? global : globalThis;
var typedArrays = availableTypedArrays();

var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};
var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		if (Symbol.toStringTag in arr) {
			var proto = getPrototypeOf(arr);
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor) {
				var superProto = getPrototypeOf(proto);
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			toStrTags[typedArray] = descriptor.get;
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var anyTrue = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!anyTrue) {
			try {
				anyTrue = getter.call(value) === typedArray;
			} catch (e) { /**/ }
		}
	});
	return anyTrue;
};

module.exports = function isTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag || !(Symbol.toStringTag in value)) {
		var tag = $slice($toString(value), 8, -1);
		return $indexOf(typedArrays, tag) > -1;
	}
	if (!gOPD) { return false; }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":167,"call-bind/callBound":173,"es-abstract/helpers/getOwnPropertyDescriptor":175,"for-each":177,"has-tostringtag/shams":183}],191:[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],192:[function(require,module,exports){
'use strict';


var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);

},{}],193:[function(require,module,exports){
'use strict';

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;

},{}],194:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};

},{}],195:[function(require,module,exports){
'use strict';

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;

},{}],196:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = require('../utils/common');
var trees   = require('./trees');
var adler32 = require('./adler32');
var crc32   = require('./crc32');
var msg     = require('./messages');

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/

},{"../utils/common":192,"./adler32":193,"./crc32":195,"./messages":200,"./trees":201}],197:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};

},{}],198:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = require('../utils/common');
var adler32       = require('./adler32');
var crc32         = require('./crc32');
var inflate_fast  = require('./inffast');
var inflate_table = require('./inftrees');

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/

},{"../utils/common":192,"./adler32":193,"./crc32":195,"./inffast":197,"./inftrees":199}],199:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = require('../utils/common');

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};

},{"../utils/common":192}],200:[function(require,module,exports){
arguments[4][131][0].apply(exports,arguments)
},{"dup":131}],201:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

var utils = require('../utils/common');

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;

},{"../utils/common":192}],202:[function(require,module,exports){
arguments[4][133][0].apply(exports,arguments)
},{"dup":133}],203:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],204:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":172}],205:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":176,"inherits":186,"readable-stream/lib/_stream_duplex.js":207,"readable-stream/lib/_stream_passthrough.js":208,"readable-stream/lib/_stream_readable.js":209,"readable-stream/lib/_stream_transform.js":210,"readable-stream/lib/_stream_writable.js":211,"readable-stream/lib/internal/streams/end-of-stream.js":215,"readable-stream/lib/internal/streams/pipeline.js":217}],206:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],207:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":209,"./_stream_writable":211,"_process":203,"inherits":186}],208:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":210,"inherits":186}],209:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":206,"./_stream_duplex":207,"./internal/streams/async_iterator":212,"./internal/streams/buffer_list":213,"./internal/streams/destroy":214,"./internal/streams/from":216,"./internal/streams/state":218,"./internal/streams/stream":219,"_process":203,"buffer":172,"events":176,"inherits":186,"string_decoder/":220,"util":169}],210:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":206,"./_stream_duplex":207,"inherits":186}],211:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":206,"./_stream_duplex":207,"./internal/streams/destroy":214,"./internal/streams/state":218,"./internal/streams/stream":219,"_process":203,"buffer":172,"inherits":186,"util-deprecate":221}],212:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":215,"_process":203}],213:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":172,"util":169}],214:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":203}],215:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":206}],216:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],217:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":206,"./end-of-stream":215}],218:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":206}],219:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":176}],220:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":204}],221:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],222:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"dup":165}],223:[function(require,module,exports){
// Currently in sync with Node.js lib/internal/util/types.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9

'use strict';

var isArgumentsObject = require('is-arguments');
var isGeneratorFunction = require('is-generator-function');
var whichTypedArray = require('which-typed-array');
var isTypedArray = require('is-typed-array');

function uncurryThis(f) {
  return f.call.bind(f);
}

var BigIntSupported = typeof BigInt !== 'undefined';
var SymbolSupported = typeof Symbol !== 'undefined';

var ObjectToString = uncurryThis(Object.prototype.toString);

var numberValue = uncurryThis(Number.prototype.valueOf);
var stringValue = uncurryThis(String.prototype.valueOf);
var booleanValue = uncurryThis(Boolean.prototype.valueOf);

if (BigIntSupported) {
  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
}

if (SymbolSupported) {
  var symbolValue = uncurryThis(Symbol.prototype.valueOf);
}

function checkBoxedPrimitive(value, prototypeValueOf) {
  if (typeof value !== 'object') {
    return false;
  }
  try {
    prototypeValueOf(value);
    return true;
  } catch(e) {
    return false;
  }
}

exports.isArgumentsObject = isArgumentsObject;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isTypedArray = isTypedArray;

// Taken from here and modified for better browser support
// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js
function isPromise(input) {
	return (
		(
			typeof Promise !== 'undefined' &&
			input instanceof Promise
		) ||
		(
			input !== null &&
			typeof input === 'object' &&
			typeof input.then === 'function' &&
			typeof input.catch === 'function'
		)
	);
}
exports.isPromise = isPromise;

function isArrayBufferView(value) {
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    return ArrayBuffer.isView(value);
  }

  return (
    isTypedArray(value) ||
    isDataView(value)
  );
}
exports.isArrayBufferView = isArrayBufferView;


function isUint8Array(value) {
  return whichTypedArray(value) === 'Uint8Array';
}
exports.isUint8Array = isUint8Array;

function isUint8ClampedArray(value) {
  return whichTypedArray(value) === 'Uint8ClampedArray';
}
exports.isUint8ClampedArray = isUint8ClampedArray;

function isUint16Array(value) {
  return whichTypedArray(value) === 'Uint16Array';
}
exports.isUint16Array = isUint16Array;

function isUint32Array(value) {
  return whichTypedArray(value) === 'Uint32Array';
}
exports.isUint32Array = isUint32Array;

function isInt8Array(value) {
  return whichTypedArray(value) === 'Int8Array';
}
exports.isInt8Array = isInt8Array;

function isInt16Array(value) {
  return whichTypedArray(value) === 'Int16Array';
}
exports.isInt16Array = isInt16Array;

function isInt32Array(value) {
  return whichTypedArray(value) === 'Int32Array';
}
exports.isInt32Array = isInt32Array;

function isFloat32Array(value) {
  return whichTypedArray(value) === 'Float32Array';
}
exports.isFloat32Array = isFloat32Array;

function isFloat64Array(value) {
  return whichTypedArray(value) === 'Float64Array';
}
exports.isFloat64Array = isFloat64Array;

function isBigInt64Array(value) {
  return whichTypedArray(value) === 'BigInt64Array';
}
exports.isBigInt64Array = isBigInt64Array;

function isBigUint64Array(value) {
  return whichTypedArray(value) === 'BigUint64Array';
}
exports.isBigUint64Array = isBigUint64Array;

function isMapToString(value) {
  return ObjectToString(value) === '[object Map]';
}
isMapToString.working = (
  typeof Map !== 'undefined' &&
  isMapToString(new Map())
);

function isMap(value) {
  if (typeof Map === 'undefined') {
    return false;
  }

  return isMapToString.working
    ? isMapToString(value)
    : value instanceof Map;
}
exports.isMap = isMap;

function isSetToString(value) {
  return ObjectToString(value) === '[object Set]';
}
isSetToString.working = (
  typeof Set !== 'undefined' &&
  isSetToString(new Set())
);
function isSet(value) {
  if (typeof Set === 'undefined') {
    return false;
  }

  return isSetToString.working
    ? isSetToString(value)
    : value instanceof Set;
}
exports.isSet = isSet;

function isWeakMapToString(value) {
  return ObjectToString(value) === '[object WeakMap]';
}
isWeakMapToString.working = (
  typeof WeakMap !== 'undefined' &&
  isWeakMapToString(new WeakMap())
);
function isWeakMap(value) {
  if (typeof WeakMap === 'undefined') {
    return false;
  }

  return isWeakMapToString.working
    ? isWeakMapToString(value)
    : value instanceof WeakMap;
}
exports.isWeakMap = isWeakMap;

function isWeakSetToString(value) {
  return ObjectToString(value) === '[object WeakSet]';
}
isWeakSetToString.working = (
  typeof WeakSet !== 'undefined' &&
  isWeakSetToString(new WeakSet())
);
function isWeakSet(value) {
  return isWeakSetToString(value);
}
exports.isWeakSet = isWeakSet;

function isArrayBufferToString(value) {
  return ObjectToString(value) === '[object ArrayBuffer]';
}
isArrayBufferToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  isArrayBufferToString(new ArrayBuffer())
);
function isArrayBuffer(value) {
  if (typeof ArrayBuffer === 'undefined') {
    return false;
  }

  return isArrayBufferToString.working
    ? isArrayBufferToString(value)
    : value instanceof ArrayBuffer;
}
exports.isArrayBuffer = isArrayBuffer;

function isDataViewToString(value) {
  return ObjectToString(value) === '[object DataView]';
}
isDataViewToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  typeof DataView !== 'undefined' &&
  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))
);
function isDataView(value) {
  if (typeof DataView === 'undefined') {
    return false;
  }

  return isDataViewToString.working
    ? isDataViewToString(value)
    : value instanceof DataView;
}
exports.isDataView = isDataView;

// Store a copy of SharedArrayBuffer in case it's deleted elsewhere
var SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;
function isSharedArrayBufferToString(value) {
  return ObjectToString(value) === '[object SharedArrayBuffer]';
}
function isSharedArrayBuffer(value) {
  if (typeof SharedArrayBufferCopy === 'undefined') {
    return false;
  }

  if (typeof isSharedArrayBufferToString.working === 'undefined') {
    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());
  }

  return isSharedArrayBufferToString.working
    ? isSharedArrayBufferToString(value)
    : value instanceof SharedArrayBufferCopy;
}
exports.isSharedArrayBuffer = isSharedArrayBuffer;

function isAsyncFunction(value) {
  return ObjectToString(value) === '[object AsyncFunction]';
}
exports.isAsyncFunction = isAsyncFunction;

function isMapIterator(value) {
  return ObjectToString(value) === '[object Map Iterator]';
}
exports.isMapIterator = isMapIterator;

function isSetIterator(value) {
  return ObjectToString(value) === '[object Set Iterator]';
}
exports.isSetIterator = isSetIterator;

function isGeneratorObject(value) {
  return ObjectToString(value) === '[object Generator]';
}
exports.isGeneratorObject = isGeneratorObject;

function isWebAssemblyCompiledModule(value) {
  return ObjectToString(value) === '[object WebAssembly.Module]';
}
exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;

function isNumberObject(value) {
  return checkBoxedPrimitive(value, numberValue);
}
exports.isNumberObject = isNumberObject;

function isStringObject(value) {
  return checkBoxedPrimitive(value, stringValue);
}
exports.isStringObject = isStringObject;

function isBooleanObject(value) {
  return checkBoxedPrimitive(value, booleanValue);
}
exports.isBooleanObject = isBooleanObject;

function isBigIntObject(value) {
  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
}
exports.isBigIntObject = isBigIntObject;

function isSymbolObject(value) {
  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
}
exports.isSymbolObject = isSymbolObject;

function isBoxedPrimitive(value) {
  return (
    isNumberObject(value) ||
    isStringObject(value) ||
    isBooleanObject(value) ||
    isBigIntObject(value) ||
    isSymbolObject(value)
  );
}
exports.isBoxedPrimitive = isBoxedPrimitive;

function isAnyArrayBuffer(value) {
  return typeof Uint8Array !== 'undefined' && (
    isArrayBuffer(value) ||
    isSharedArrayBuffer(value)
  );
}
exports.isAnyArrayBuffer = isAnyArrayBuffer;

['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {
  Object.defineProperty(exports, method, {
    enumerable: false,
    value: function() {
      throw new Error(method + ' is not supported in userland');
    }
  });
});

},{"is-arguments":187,"is-generator-function":189,"is-typed-array":190,"which-typed-array":225}],224:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnvRegex = /^$/;

if (process.env.NODE_DEBUG) {
  var debugEnv = process.env.NODE_DEBUG;
  debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
    .replace(/\*/g, '.*')
    .replace(/,/g, '$|^')
    .toUpperCase();
  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');
}
exports.debuglog = function(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').slice(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.slice(1, -1);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
exports.types = require('./support/types');

function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
exports.types.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
exports.types.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;
exports.types.isNativeError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },
            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;

}).call(this)}).call(this,require('_process'))
},{"./support/isBuffer":222,"./support/types":223,"_process":203,"inherits":186}],225:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('for-each');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = require('has-tostringtag/shams')();

var g = typeof globalThis === 'undefined' ? global : globalThis;
var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		if (typeof g[typedArray] === 'function') {
			var arr = new g[typedArray]();
			if (Symbol.toStringTag in arr) {
				var proto = getPrototypeOf(arr);
				var descriptor = gOPD(proto, Symbol.toStringTag);
				if (!descriptor) {
					var superProto = getPrototypeOf(proto);
					descriptor = gOPD(superProto, Symbol.toStringTag);
				}
				toStrTags[typedArray] = descriptor.get;
			}
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var foundName = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!foundName) {
			try {
				var name = getter.call(value);
				if (name === typedArray) {
					foundName = name;
				}
			} catch (e) {}
		}
	});
	return foundName;
};

var isTypedArray = require('is-typed-array');

module.exports = function whichTypedArray(value) {
	if (!isTypedArray(value)) { return false; }
	if (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":167,"call-bind/callBound":173,"es-abstract/helpers/getOwnPropertyDescriptor":175,"for-each":177,"has-tostringtag/shams":183,"is-typed-array":190}]},{},[11]);
