const range_folded = 'rgb(139, 0, 218)';
const range_folded_val = 999;

const reflectivity = {
    colors: [
        'rgb(116, 78, 173)',
        'rgb(147, 141, 117)',

        'rgb(150, 145, 83)',
        'rgb(210, 212, 180)',

        'rgb(204, 207, 180)',
        'rgb(65, 91, 158)',

        'rgb(67, 97, 162)',
        'rgb(106, 208, 225)',

        'rgb(111, 214, 232)',
        'rgb(53, 213, 91)',

        'rgb(17, 213, 24)',
        'rgb(9, 94, 9)',

        'rgb(29, 104, 9)',
        'rgb(234, 210, 4)',

        'rgb(255, 226, 0)',
        'rgb(255, 128, 0)',

        'rgb(255, 0, 0)',
        'rgb(113, 0, 0)',

        'rgb(255, 255, 255)',
        'rgb(255, 146, 255)',

        'rgb(255, 117, 255)',
        'rgb(225, 11, 227)',

        'rgb(178, 0, 255)',
        'rgb(99, 0, 214)',

        'rgb(5, 236, 240)',
        'rgb(1, 32, 32)',

        'rgb(1, 32, 32)',
        'rgb(1, 32, 32)'
    ],
    values: [
        -30, -20,
        -20, -10,
        -10, 10,
        10, 18,
        18, 22,
        22, 35,
        35, 40,
        40, 50,
        50, 60,
        60, 65,
        65, 70,
        70, 75,
        75, 85,
        85,
        95
    ]
}
const velocity = {
    // Product:bv
    // units: KTS
    // step: 5
    // scale: 1.9426

    // color: 0 137 117 122 130 51 59 
    // color: 10 109 0 0 242 0 7
    // color: 40 249 51 76 255 149 207
    // color: 55 253 160 201 255 232 172
    // color: 60 253 228 160 253 149 83 
    // color: 80 254 142 80 110 14 9
    // color: 120 110 14 9

    // color: -10 78 121 76 116 131 112
    // color: -40 3 234 2  0 100 0
    // color: -50 181 237 239 2 241 3
    // color: -70 47 222 226 181 237 239 
    // color: -80 30 111 188 40 204 220
    // color: -90  24 39 165 30 111 188
    // color: -100 110 3 151 22 13 156
    // color: -120 252 0 130 109 2 150 
    // RF: 139 0 218

    // 'rgb(000, 000, 000)',
    range_folded: true,
    colors: [
        'rgb(252, 0, 130)', // -120
        'rgb(109, 2, 150)', // -100
        'rgb(110, 3, 151)', // -100
        'rgb(22, 13, 156)', // -90
        'rgb(24, 39, 165)', // -90
        'rgb(30, 111, 188)', // -80
        'rgb(30, 111, 188)', // -80
        'rgb(40, 204, 220)', // -70
        'rgb(47, 222, 226)', // -70
        'rgb(181, 237, 239)', // -50
        'rgb(181, 237, 239)', // -50
        'rgb(2, 241, 3)', // -40
        'rgb(3, 234, 2)', // -40

        'rgb(0, 100, 0)', // -10
        'rgb(78, 121, 76)', // -10
        'rgb(116, 131, 112)', // 0
        'rgb(137, 117, 122)', // 0
        'rgb(130, 51, 59)', // 10
        'rgb(109, 0, 0)', // 10

        'rgb(242, 0, 7)', // 40
        'rgb(249, 51, 76)', // 40
        'rgb(255, 149, 207)', // 55
        'rgb(253, 160, 201)', // 55
        'rgb(255, 232, 172)', // 60
        'rgb(253, 228, 160)', // 60
        'rgb(253, 149, 83)', // 80
        'rgb(254, 142, 80)', // 80
        'rgb(110, 14, 9)', // 120
        'rgb(110, 14, 9)', // 120
    ],
    values: [
        -120, -100,
        -100, -90,
        -90, -80,
        -80, -70,
        -70, -50,
        -50, -40,
        -40, -10,
        -10, 0,
        0, 10,
        10, 40,
        40, 55,
        55, 60,
        60, 80,
        80, 120,
        120
    ],
    balance: {
        colors: [
            'rgb(24, 28, 67)', // -120
            'rgb(41, 56, 136)', // -100
            'rgb(12, 94, 190)', // -80
            'rgb(56, 136, 186)', // -60
            'rgb(117, 170, 190)', // -40
            'rgb(182, 201, 207)', // -20
            'rgb(241, 236, 235)', // 0
            'rgb(223, 187, 176)', // 20
            'rgb(208, 139, 115)', // 40
            'rgb(191, 87, 58)', // 60
            'rgb(165, 33, 37)', // 80
            'rgb(115, 14, 39)', // 100
            'rgb(60, 9, 18)' // 120
        ],
        values: [
            -120, -100, -80, -60, -40, -20, 0, 20, 40, 60, 80, 100, 120
        ],
    },
}
const diff_reflectivity = {
    colors: [
        'rgb(0, 0, 0)',
        'rgb(55, 55, 55)',
        'rgb(110, 110, 110)',
        'rgb(165, 165, 165)',
        'rgb(220, 220, 220)',
        'rgb(142, 121, 181)',
        'rgb(10, 10, 155)',
        'rgb(68, 248, 212)',
        'rgb(90, 221, 98)',
        'rgb(255, 255, 100)',
        'rgb(220, 10, 5)',
        'rgb(175, 0, 0)',
        'rgb(240, 120, 180)',
        'rgb(255, 255, 255)',
        'rgb(145, 45, 150)'
    ],
    values: [
        -8, -6, -4, -2, 0, 0, 0.25, 1, 1.5, 2, 3, 4, 5, 6, 8
    ],
}
const corr_coeff = {
    colors: [
        '#000000', '#949494', '#7593FF', '#0045BD', '#ADF4FF', '#00FA32', '#FFD53D', '#F01000', '#C20047', '#FFB8D8', '#FFEBF2'
    ],
    values: [
        0.2, 0.4, 0.55, 0.65, 0.8, 0.85, 0.95, 0.975, 1, 1.04, 1.05
    ],
}
const spectrum_width = {
    colors: [
        '#242424',
        '#afafaf',
        '#ff700a',
        '#b30000',
        '#f000ac',
        '#8800c2',
        '#e0fcff',
        '#b4eb00',
        '#7dd100',
    ],
    values: [
        0, 5, 8, 10, 13, 15.5, 18, 20.5, 31 // m/s
        // yes, those are strange values. here are the originals in knots:
        // 0, 10, 15, 20, 25, 30, 35, 40, 60
    ],
}
const hydrometer_class = {
    colors: [
        'rgb(156, 156, 156)',
        'rgb(156, 156, 156)',

        'rgb(118, 118, 118)',
        'rgb(118, 118, 118)',

        'rgb(243, 179, 178)',
        'rgb(243, 179, 178)',

        'rgb(117, 250, 243)',
        'rgb(117, 250, 243)',

        'rgb(63, 141, 247)',
        'rgb(63, 141, 247)',

        'rgb(115, 247, 154)',
        'rgb(115, 247, 154)',

        'rgb(84, 184, 54)',
        'rgb(84, 184, 54)',

        'rgb(208, 207, 112)',
        'rgb(208, 207, 112)',

        'rgb(199, 135, 134)',
        'rgb(199, 135, 134)',

        'rgb(234, 51, 36)',
        'rgb(234, 51, 36)',

        'rgb(147, 37, 30)',
        'rgb(147, 37, 30)',

        'rgb(255, 254, 84)',
        'rgb(255, 254, 84)',

        'rgb(0, 0, 0)',
        'rgb(0, 0, 0)',

        'rgb(212, 45, 246)',
        'rgb(212, 45, 246)',

        'rgb(109, 18, 121)',
        'rgb(109, 18, 121)'
    ],
    values: [
        10, 20,
        20, 30,
        30, 40,
        40, 50,
        50, 60,
        60, 70,
        70, 80,
        80, 90,
        90, 100,
        100, 110,
        110, 120,
        120, 130,
        130, 140,
        140, 150,
        150, 160
    ],
}
const specific_differential_phase = {
    colors: ["rgb(135, 0, 135)", "rgb(0, 0, 0)", "rgb(5, 5, 5)", "rgb(11, 11, 11)", "rgb(16, 16, 16)", "rgb(22, 22, 22)", "rgb(28, 28, 28)", "rgb(33, 33, 33)", "rgb(39, 39, 39)", "rgb(44, 44, 44)", "rgb(50, 50, 50)", "rgb(56, 56, 56)", "rgb(61, 61, 61)", "rgb(67, 67, 67)", "rgb(73, 73, 73)", "rgb(78, 78, 78)", "rgb(84, 84, 84)", "rgb(89, 89, 89)", "rgb(95, 95, 95)", "rgb(101, 101, 101)", "rgb(106, 106, 106)", "rgb(112, 112, 112)", "rgb(118, 118, 118)", "rgb(113, 106, 106)", "rgb(109, 94, 94)", "rgb(105, 82, 82)", "rgb(100, 70, 70)", "rgb(96, 59, 59)", "rgb(92, 47, 47)", "rgb(87, 35, 35)", "rgb(83, 23, 23)", "rgb(79, 11, 11)", "rgb(75, 0, 0)", "rgb(79, 0, 2)", "rgb(83, 0, 5)", "rgb(87, 0, 7)", "rgb(91, 0, 10)", "rgb(95, 0, 12)", "rgb(99, 0, 15)", "rgb(103, 0, 17)", "rgb(107, 0, 20)", "rgb(111, 0, 22)", "rgb(115, 0, 25)", "rgb(120, 0, 26)", "rgb(125, 1, 28)", "rgb(130, 2, 30)", "rgb(135, 3, 32)", "rgb(140, 4, 34)", "rgb(145, 4, 36)", "rgb(150, 5, 38)", "rgb(155, 6, 40)", "rgb(160, 7, 42)", "rgb(165, 8, 44)", "rgb(169, 14, 48)", "rgb(174, 20, 53)", "rgb(179, 26, 58)", "rgb(184, 33, 63)", "rgb(188, 39, 68)", "rgb(193, 45, 72)", "rgb(198, 52, 77)", "rgb(203, 58, 82)", "rgb(208, 64, 87)", "rgb(213, 71, 92)", "rgb(215, 75, 101)", "rgb(217, 80, 110)", "rgb(219, 85, 119)", "rgb(221, 90, 129)", "rgb(224, 95, 138)", "rgb(226, 100, 147)", "rgb(228, 105, 157)", "rgb(230, 110, 166)", "rgb(232, 115, 175)", "rgb(235, 120, 185)", "rgb(226, 120, 184)", "rgb(218, 121, 184)", "rgb(209, 122, 184)", "rgb(201, 123, 184)", "rgb(192, 124, 184)", "rgb(184, 125, 183)", "rgb(175, 126, 183)", "rgb(167, 127, 183)", "rgb(158, 128, 183)", "rgb(150, 129, 183)", "rgb(145, 118, 184)", "rgb(141, 107, 185)", "rgb(137, 96, 186)", "rgb(132, 85, 187)", "rgb(128, 74, 188)", "rgb(124, 63, 190)", "rgb(119, 52, 191)", "rgb(115, 41, 192)", "rgb(111, 30, 193)", "rgb(107, 20, 195)", "rgb(106, 43, 200)", "rgb(105, 67, 206)", "rgb(104, 90, 211)", "rgb(103, 114, 217)", "rgb(102, 137, 222)", "rgb(101, 161, 228)", "rgb(100, 184, 233)", "rgb(99, 208, 239)", "rgb(98, 231, 244)", "rgb(98, 255, 250)", "rgb(90, 248, 229)", "rgb(82, 241, 210)", "rgb(74, 234, 190)", "rgb(66, 227, 170)", "rgb(59, 219, 150)", "rgb(51, 212, 130)", "rgb(43, 205, 110)", "rgb(35, 198, 90)", "rgb(27, 191, 70)", "rgb(20, 185, 50)", "rgb(19, 192, 46)", "rgb(18, 199, 42)", "rgb(17, 206, 38)", "rgb(16, 213, 34)", "rgb(15, 220, 30)", "rgb(14, 227, 26)", "rgb(13, 234, 22)", "rgb(12, 241, 18)", "rgb(11, 248, 14)", "rgb(10, 255, 10)", "rgb(22, 255, 9)", "rgb(34, 255, 9)", "rgb(46, 255, 8)", "rgb(58, 255, 8)", "rgb(71, 255, 7)", "rgb(83, 255, 7)", "rgb(95, 255, 6)", "rgb(108, 255, 6)", "rgb(120, 255, 5)", "rgb(132, 255, 5)", "rgb(144, 255, 4)", "rgb(157, 255, 4)", "rgb(169, 255, 3)", "rgb(181, 255, 3)", "rgb(193, 255, 2)", "rgb(206, 255, 2)", "rgb(218, 255, 1)", "rgb(230, 255, 1)", "rgb(242, 255, 0)", "rgb(255, 255, 0)", "rgb(255, 248, 1)", "rgb(255, 241, 2)", "rgb(255, 234, 3)", "rgb(255, 227, 4)", "rgb(255, 221, 5)", "rgb(255, 214, 6)", "rgb(255, 207, 7)", "rgb(255, 200, 8)", "rgb(255, 194, 9)", "rgb(255, 187, 10)", "rgb(255, 180, 11)", "rgb(255, 173, 12)", "rgb(255, 167, 13)", "rgb(255, 160, 14)", "rgb(255, 153, 15)", "rgb(255, 146, 16)", "rgb(255, 140, 17)", "rgb(255, 133, 18)", "rgb(255, 126, 19)", "rgb(255, 120, 20)", "rgb(255, 122, 22)", "rgb(255, 124, 25)", "rgb(255, 126, 28)", "rgb(255, 128, 31)", "rgb(255, 130, 33)", "rgb(255, 132, 36)", "rgb(255, 134, 39)", "rgb(255, 137, 41)", "rgb(255, 139, 44)", "rgb(255, 141, 47)", "rgb(255, 143, 50)", "rgb(255, 145, 52)", "rgb(255, 147, 55)", "rgb(255, 149, 58)", "rgb(255, 151, 61)", "rgb(255, 153, 63)", "rgb(255, 156, 66)", "rgb(255, 158, 69)", "rgb(255, 160, 72)", "rgb(255, 162, 74)", "rgb(255, 164, 77)", "rgb(255, 166, 80)", "rgb(255, 168, 83)", "rgb(255, 170, 86)", "rgb(255, 173, 88)", "rgb(255, 175, 91)", "rgb(255, 177, 94)", "rgb(255, 179, 97)", "rgb(255, 181, 99)", "rgb(255, 183, 102)", "rgb(255, 185, 105)", "rgb(255, 187, 108)", "rgb(255, 190, 110)", "rgb(255, 192, 113)", "rgb(255, 194, 116)", "rgb(255, 196, 119)", "rgb(255, 198, 121)", "rgb(255, 200, 124)", "rgb(255, 202, 127)", "rgb(255, 205, 130)", "rgb(255, 205, 132)", "rgb(255, 206, 134)", "rgb(255, 207, 137)", "rgb(255, 208, 139)", "rgb(255, 209, 142)", "rgb(255, 210, 144)", "rgb(255, 211, 147)", "rgb(255, 212, 149)", "rgb(255, 213, 152)", "rgb(255, 214, 154)", "rgb(255, 215, 156)", "rgb(255, 216, 159)", "rgb(255, 217, 161)", "rgb(255, 218, 164)", "rgb(255, 219, 166)", "rgb(255, 220, 169)", "rgb(255, 221, 171)", "rgb(255, 222, 174)", "rgb(255, 223, 176)", "rgb(255, 224, 179)", "rgb(255, 225, 181)", "rgb(255, 226, 183)", "rgb(255, 227, 186)", "rgb(255, 228, 188)", "rgb(255, 229, 191)", "rgb(255, 230, 193)", "rgb(255, 231, 196)", "rgb(255, 232, 198)", "rgb(255, 233, 201)", "rgb(255, 234, 203)", "rgb(255, 235, 205)", "rgb(255, 236, 208)", "rgb(255, 237, 210)", "rgb(255, 238, 213)", "rgb(255, 239, 215)", "rgb(255, 240, 218)", "rgb(255, 241, 220)", "rgb(255, 242, 223)", "rgb(255, 243, 225)", "rgb(255, 244, 228)", "rgb(255, 245, 230)", "rgb(255, 246, 232)", "rgb(255, 247, 235)", "rgb(255, 248, 237)", "rgb(255, 249, 240)", "rgb(255, 250, 242)", "rgb(255, 251, 245)", "rgb(255, 252, 247)", "rgb(255, 253, 250)", "rgb(255, 254, 252)", "rgb(255, 255, 255)", "rgb(255, 255, 255)"],
    values: [-2.05,-2,-1.96,-1.91,-1.86,-1.81,-1.77,-1.72,-1.67,-1.62,-1.58,-1.53,-1.48,-1.44,-1.39,-1.34,-1.29,-1.25,-1.2,-1.15,-1.11,-1.06,-1.01,-0.96,-0.92,-0.87,-0.82,-0.77,-0.73,-0.68,-0.63,-0.59,-0.54,-0.49,-0.44,-0.4,-0.35,-0.3,-0.25,-0.21,-0.16,-0.11,-0.07,-0.02,0.03,0.08,0.12,0.17,0.22,0.26,0.31,0.36,0.41,0.45,0.5,0.55,0.6,0.64,0.69,0.74,0.78,0.83,0.88,0.93,0.97,1.02,1.07,1.12,1.16,1.21,1.26,1.3,1.35,1.4,1.45,1.49,1.54,1.59,1.64,1.68,1.73,1.78,1.82,1.87,1.92,1.97,2.01,2.06,2.11,2.15,2.2,2.25,2.3,2.34,2.39,2.44,2.49,2.53,2.58,2.63,2.67,2.72,2.77,2.82,2.86,2.91,2.96,3.01,3.05,3.1,3.15,3.19,3.24,3.29,3.34,3.38,3.43,3.48,3.52,3.57,3.62,3.67,3.71,3.76,3.81,3.86,3.9,3.95,4,4.04,4.09,4.14,4.19,4.23,4.28,4.33,4.38,4.42,4.47,4.52,4.56,4.61,4.66,4.71,4.75,4.8,4.85,4.89,4.94,4.99,5.04,5.08,5.13,5.18,5.23,5.27,5.32,5.37,5.41,5.46,5.51,5.56,5.6,5.65,5.7,5.75,5.79,5.84,5.89,5.93,5.98,6.03,6.08,6.12,6.17,6.22,6.26,6.31,6.36,6.41,6.45,6.5,6.55,6.6,6.64,6.69,6.74,6.78,6.83,6.88,6.93,6.97,7.02,7.07,7.12,7.16,7.21,7.26,7.3,7.35,7.4,7.45,7.49,7.54,7.59,7.64,7.68,7.73,7.78,7.82,7.87,7.92,7.97,8.01,8.06,8.11,8.15,8.2,8.25,8.3,8.34,8.39,8.44,8.49,8.53,8.58,8.63,8.67,8.72,8.77,8.82,8.86,8.91,8.96,9.01,9.05,9.1,9.15,9.19,9.24,9.29,9.34,9.38,9.43,9.48,9.52,9.57,9.62,9.67,9.71,9.76,9.81,9.86,9.9,9.95],
}

/**
 * This is the main object that contains
 * the colormaps for all products.
 */
const productColors = {
    range_folded: range_folded,
    range_folded_val: range_folded_val,

    DVL: {
        colors: [
            'rgb(132, 132, 132)',
            'rgb(8, 183, 183)',
            'rgb(19, 14, 146)',

            'rgb(4, 204, 27)',
            'rgb(4, 100, 4)',

            'rgb(204, 193, 2)',
            'rgb(183, 107, 0)',

            'rgb(230, 31, 5)',
            'rgb(133, 14, 52)',

            'rgb(168, 0, 101)',
            'rgb(219, 152, 193)',

            'rgb(255, 254, 255)',
            'rgb(187, 188, 188)'
        ],
        values: [
            0, 4, 17,
            17, 30,
            30, 43,
            43, 56,
            56, 71,
            71, 79.5
        ],
    },
    HHC: hydrometer_class,

    N0B: reflectivity,
    N1B: reflectivity,
    N2B: reflectivity,
    N3B: reflectivity,

    N0C: corr_coeff,
    N1C: corr_coeff,
    N2C: corr_coeff,
    N3C: corr_coeff,

    N0G: velocity,
    N1G: velocity,
    N2G: velocity,
    N3G: velocity,
    NAG: velocity,
    NBG: velocity,

    N0H: hydrometer_class,
    N1H: hydrometer_class,
    N2H: hydrometer_class,
    N3H: hydrometer_class,

    N0S: {
        colors: [
            'rgb(155, 31, 139)',
            'rgb(155, 31, 139)',

            'rgb(48, 7, 147)',
            'rgb(48, 7, 147)',

            'rgb(64, 128, 189)',
            'rgb(64, 128, 189)',

            'rgb(133, 226, 231)',
            'rgb(133, 226, 231)',

            'rgb(163, 240, 186)',
            'rgb(163, 240, 186)',

            'rgb(96, 209, 62)',
            'rgb(96, 209, 62)',

            'rgb(56, 127, 33)',
            'rgb(56, 127, 33)',

            'rgb(117, 131, 114)',
            'rgb(117, 131, 114)',

            'rgb(121, 21, 13)',
            'rgb(121, 21, 13)',

            'rgb(201, 43, 30)',
            'rgb(201, 43, 30)',

            'rgb(235, 123, 169)',
            'rgb(235, 123, 169)',

            'rgb(251, 229, 166)',
            'rgb(251, 229, 166)',

            'rgb(242, 162, 103)',
            'rgb(242, 162, 103)',

            'rgb(196, 104, 67)',
            'rgb(196, 104, 67)',

            'rgb(115, 20, 198)',
            'rgb(115, 20, 198)'
        ],
        values: [
            1, 2,
            2, 3,
            3, 4,
            4, 5,
            5, 6,
            6, 7,
            7, 8,
            8, 9,
            9, 10,
            10, 11,
            11, 12,
            12, 13,
            13, 14,
            14, 15,
            15, 16
        ],
    },
    N0U: velocity,
    N1U: velocity,
    N2U: velocity,
    N3U: velocity,

    N0X: diff_reflectivity,
    N1X: diff_reflectivity,
    N2X: diff_reflectivity,
    N3X: diff_reflectivity,

    NSW: spectrum_width,

    N0Q: reflectivity,
    N1Q: reflectivity,
    N2Q: reflectivity,
    N3Q: reflectivity,

    PHI: {
        colors: [
            'rgb(255, 255, 255)',
            'rgb(210, 210, 180)',
            'rgb(10, 20, 95)',
            'rgb(0, 255, 0)',
            'rgb(30, 100, 0)',
            'rgb(255, 255, 0)',
            'rgb(255, 125, 0)',
            'rgb(90, 0, 0)',
            'rgb(255, 140, 255)'
        ],
        values: [
            0, 15, 30, 45, 60, 75, 90, 120, 180
        ],
    },
    REF: reflectivity,
    RHO: corr_coeff,
    SW: spectrum_width, // 'SW '

    TV0: velocity,
    TV1: velocity,
    TV2: velocity,

    TZL: reflectivity,
    TZ0: reflectivity,
    TZ1: reflectivity,
    TZ2: reflectivity,
    TZ3: reflectivity,

    VEL: velocity,
    ZDR: diff_reflectivity,

    N0K: specific_differential_phase,
    N1K: specific_differential_phase,
    N2K: specific_differential_phase,
    N3K: specific_differential_phase,
}

module.exports = productColors;